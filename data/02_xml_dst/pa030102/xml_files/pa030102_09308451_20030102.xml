<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004900A1-20030102-D00000.TIF SYSTEM "US20030004900A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004900A1-20030102-D00001.TIF SYSTEM "US20030004900A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004900A1-20030102-D00002.TIF SYSTEM "US20030004900A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004900A1-20030102-D00003.TIF SYSTEM "US20030004900A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004900A1-20030102-D00004.TIF SYSTEM "US20030004900A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004900A1-20030102-D00005.TIF SYSTEM "US20030004900A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004900A1-20030102-D00006.TIF SYSTEM "US20030004900A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004900A1-20030102-D00007.TIF SYSTEM "US20030004900A1-20030102-D00007.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004900</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09308451</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>19990519</filing-date>
<continued-prosecution-application>This is a publication of a continued prosecution application (CPA) filed under 37 CFR 1.53(d).</continued-prosecution-application>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F017/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>705</class>
<subclass>401000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>TECHNIQUE FOR EFFECTIVELY GENERATING MULTI-DIMENSIONAL SYMBOLS REPRESENTING POSTAL INFORMATION</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>ROBERT G.</given-name>
<family-name>SCHWARTZ</family-name>
</name>
<residence>
<residence-us>
<city>BRANFORD</city>
<state>CT</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>GEORGE M.</given-name>
<family-name>BROOKNER</family-name>
</name>
<residence>
<residence-us>
<city>NORWALK</city>
<state>CT</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>EDWARD</given-name>
<family-name>NACLERIO</family-name>
</name>
<residence>
<residence-us>
<city>MADISON</city>
<state>CT</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>ERIC</given-name>
<family-name>ZUIDEMA</family-name>
</name>
<residence>
<residence-us>
<city>NORWALK</city>
<state>CT</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>CLARENCE A. GREEN</name-1>
<name-2>PERMAN &amp; GREEN, LLP</name-2>
<address>
<address-1>425 POST ROAD</address-1>
<city>FAIRFIELD</city>
<state>CT</state>
<postalcode>06430</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
<international-conventions>
<pct-application>
<document-id>
<doc-number>PCT/US98/19652</doc-number>
<document-date>19980921</document-date>
<country-code>WO</country-code>
</document-id>
</pct-application>
</international-conventions>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">In a mailing system for franking a postage indicium serving as a proof of postage, postal data including the postage needs to be communicated through such an indicium. Illustratively, the postal data is categorized into (a) invariable postal data, e.g., a device ID identifying the mailing system, which is unaffected by a franking transaction, and (b) variable postal data, e.g., the postage, which may change from one franking transaction to another. To avoid latency of the franking operation, the invariable postal data is preset for initial printing of the postage indicium, and the variable postal data is determined and set for printing in real time. In printing the postage indicium the invariable postal data and the variable postal data are presented in that order in one or more symbols. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">TECHNICAL FIELD </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The invention relates to a technique for generating multi-dimensional symbols representative of information, and more particularly to a technique for franking postage indicia incorporating such symbols representative of postal information. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Communications of information, e.g., via email, telephone, mail, etc., are essential in daily life. Security and accuracy of such communications invariably are the major concerns. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> To prevent tampering or unauthorized use of communications containing vital information, cryptographic methodologies for maintaining secrecy of data communications have been developed. One such methodology is RSA cryptographic method, named after its developers, Rivest, Shamir and Adleman. For details on the RSA method, one may refer to: R. Rivest et al., &ldquo;A Method for Obtaining Digital Signatures and Public Key Cryptosystems,&rdquo; <highlight><italic>Communications of the ACM</italic></highlight>, Vol. 21, No. 2, February 1978. The RSA method involves a public key algorithm which uses a private key for encryption of data and a public key for decryption thereof. Unlike a private key, a public key can be published and made known to the public. The keys for the RSA algorithm are generated mathematically, and are computational inverses to each other. The success of the RSA method depends on the use of very large numbers for the keys. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> In addition to providing data encryption, some cryptographic methods can be used to authenticate a message. For example, public key algorithms such as the aforementioned RSA algorithm can be used to generate a &ldquo;digital signature&rdquo; for verifying the origin of the message and the identity of the sender. Another algorithm known as the &ldquo;Digital Signature Algorithm (DSA)&rdquo; can be used for that purpose as well. For details on the DSA, one may refer to: &ldquo;Digital Signature Standard (DSS),&rdquo; <highlight><italic>FIPS PUB </italic></highlight>186, May 19, 1994. A digital signature is distinct for each message. The sender of the message uses his/her private key to digitally sign the message, and the resulting digital signature accompanies the message. The recipient of the message uses the sender&apos;s public key to verify the digital signature. If any alteration in either the signature or message occurs, the signature does not verify. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Information may be represented using a symbology. One such symbology comprises barcodes which may be one-dimensional or two-dimensional (2-D), and may be optically scanned to recover the information represented thereby. A 2-D barcode may be formatted in accordance with the well-known Uniform Symbology Specification PDF 417. Another symbology comprises data matrix symbols, which are formatted in accordance with the &ldquo;International Symbology Specification&mdash;Data Matrix,&rdquo; <highlight><italic>AIM International Technical Specification, </italic></highlight>AIM International, Inc., 1996 (hereinafter the &ldquo;Data Matrix specification&rdquo;), and may also be optically scanned to recover the information represented thereby. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> As is well known, a data matrix symbol is made up of square modules or cells representing information. <cross-reference target="DRAWINGS">FIGS. 1A and 1B</cross-reference> illustrate one such data matrix symbol (denoted <highlight><bold>100</bold></highlight>), and its finder patterns (collectively denoted <highlight><bold>150</bold></highlight>) defining data regions in symbol <highlight><bold>100</bold></highlight>, respectively. As jointly shown in <cross-reference target="DRAWINGS">FIGS. 1A and 1B</cross-reference>, data matrix symbol <highlight><bold>100</bold></highlight> includes data regions I, II, III and IV containing square modules which are disposed in arrays. A dark module represents a first data value (e.g., binary bit &ldquo;1&rdquo;), and a light module represents a second data value (e.g., binary bit &ldquo;0&rdquo;). Symbol <highlight><bold>100</bold></highlight> is typically square in shape, and the number of rows (or number of columns) of the modules, and thus its size, increases with the amount of data represented thereby. Symbol <highlight><bold>100</bold></highlight> also includes codewords for checking and correcting errors in the data after its communication, thereby affording accuracy of the communicated data. For example, symbol <highlight><bold>100</bold></highlight> is of the type of the so-called &ldquo;error checking and correcting (ECC) <highlight><bold>200</bold></highlight>&rdquo; data matrix symbol, and the codewords therein are generated in accordance with the well-known Reed-Solomon error correction technique. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Each data region in symbol <highlight><bold>100</bold></highlight> is surrounded by a finder pattern which is one module wide. For example, the finder pattern for data region I consists of solid arrays <highlight><bold>153</bold></highlight> and <highlight><bold>155</bold></highlight> made up of dark modules only, and broken arrays <highlight><bold>157</bold></highlight> and <highlight><bold>159</bold></highlight> made up of alternating dark and light modules; the finder pattern for data region II consists of solid arrays <highlight><bold>163</bold></highlight> and <highlight><bold>165</bold></highlight>, and broken arrays <highlight><bold>167</bold></highlight> and <highlight><bold>169</bold></highlight>; and so on and so forth. In a well known manner, the finder patterns of a data matrix symbol determine, among other things, physical size and distortion of the symbol. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Because of the ubiquitous presence of computers, in particular, personal computers (PCs), it is anticipated that use of a general purpose computer, in lieu of a specialized postage meter, to frank or print postage indicia serving as a proof of postage on mailpieces is imminent. To deter printing of unauthorized postage, the postage indicium applied on a mailpiece includes postal information which is digitally signed, and thereby can be authenticated by a postal authority when the mailpiece is processed. To facilitate the mail processing, the indicium includes a machine readable portion including a 2-D symbol, e.g., a 2-D barcode, readable by an optical scanner. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> In accordance with the invention, the postage indicium is generated in a pipeline fashion to expedite a postage franking transaction. For example, in generating the postage indicium which includes at least one symbol, e.g., a data matrix symbol, representing postal data elements, as soon as new information concerning a bit map for the print image of the symbol is made available, such information is utilized to print the symbol as much as possible. To facilitate the pipeline operation, the layout of the bit map is designed in such a way that the leading portion of the bit map corresponds to those postal data elements which can be determined without regard to any subsequent postal data elements, which correspond to the remaining part of the bit map. To that end, the postal data elements to be represented are arranged in such an order that those postal data elements (e.g., postal data elements concerning accounting of dispensed postage) which need to be determined based on other postal data elements (e.g., current dispensed postage) are disposed after such other postal data elements in the bit map representation, thereby obviating the need to modify the bit map as it is being laid out and made available for printing. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> In accordance with an aspect of the invention, the postal data elements are categorized into invariable and variable postal data elements. The invariable postal data elements are those data elements which are unaffected by the postage franking transaction while the remaining variable postal data elements are subject to change during the transaction. In particular, the invention embraces the approach where a single symbol is used in the machine readable portion to represent a combination of the invariable and variable postal data elements, with the invariable postal data elements processed first and represented by the leading portion of the symbol, followed by the variable postal data elements represented by the remaining portion of the same symbol, as the invariable postal data elements are independent of the subsequent, variable postal data elements. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The invention also embraces a multi-symbol approach where the machine readable portion includes at least a first symbol and a second symbol. The first symbol is used to represent those invariable postal data elements and preset for printing. The second symbol is used to represent the variable postal data elements and created in real time of the franking transaction. During the franking transaction, to avoid latency, the first symbol is printed before the second symbol. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> To further expedite the postage franking transaction, prior to the transaction, selected data (e.g., the postage to be dispensed) having an unknown value is assumed using a predicted value to generate one or more candidates for at least one postal data element dependent upon the selected data. The predicted value may be statistically determined. The actual value of the selected data is subsequently compared with the predicted value. If the actual value matches the predicted value, the candidate corresponding to the predicted value is adopted during the transaction. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Other ways to expedite the franking transaction include computing at least part of a digital signature for authenticating the postal data elements represented by the postage indicium prior to the franking transaction. Where the size of a symbol in the machine readable portion of the postage indicium exceeds the print coverage of a single printhead in a printer, a print assembly in accordance with the invention which includes multiple printheads is used to print the symbol or its equivalent, thereby effectively communicating the data represented by the symbol in a single pass of the print assembly, as opposed to multiple passes required of the single printhead. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWING </heading>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> Further objects, features and advantages of the invention will become apparent from the following detailed description taken in conjunction with the accompanying drawing, in which: </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 1A and 1B</cross-reference> illustrate a prior art data matrix symbol and its finder patterns, respectively; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of a mailing system in accordance with the invention; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram of a postal security device used in the mailing system of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates a postage indicium generated by the mailing system of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5A</cross-reference> is a flow chart depicting a subroutine for generating a part of the postage indicium of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 5B and 5C</cross-reference> are flow charts jointly depicting a main routine for generating the postage indicium of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> illustrates a segmented data matrix symbol in accordance with the invention; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> illustrates a printhead assembly for generating the symbol of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>; and </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> illustrates a second, segmented data matrix symbol in accordance with the invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Throughout the figures of the drawing, the same reference numerals and characters are used to denote like features, elements, components or portions of the illustrated system. </paragraph>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates mailing system <highlight><bold>201</bold></highlight> embodying the principles of the invention for franking postage onto a given medium, e.g., a mailpiece, tape, etc. As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, system <highlight><bold>201</bold></highlight> includes host device <highlight><bold>250</bold></highlight>, postal security device (PSD) <highlight><bold>280</bold></highlight> and printer <highlight><bold>290</bold></highlight>. System <highlight><bold>201</bold></highlight> may be configured as an &ldquo;open system,&rdquo; where host device <highlight><bold>250</bold></highlight> comprises a personal computer (PC), workstation or general purpose computing machine, and PSD <highlight><bold>280</bold></highlight> and printer <highlight><bold>290</bold></highlight> serve as peripherals to host device <highlight><bold>250</bold></highlight>. System <highlight><bold>201</bold></highlight> may alternatively be configured as a &ldquo;closed system,&rdquo; where host device <highlight><bold>250</bold></highlight> and printer <highlight><bold>290</bold></highlight> are dedicated to the postage franking operation and typically enclosed in the same casing, and where PSD <highlight><bold>280</bold></highlight> may or may not be enclosed therein. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Without loss of generality, in this illustrative embodiment, system <highlight><bold>201</bold></highlight> is configured as a closed system. Central to host device <highlight><bold>250</bold></highlight> is processor <highlight><bold>255</bold></highlight> which is programmed to, among other things, communicate and process data to effect postage franking in accordance with the invention. Device <highlight><bold>250</bold></highlight> is connected through printer interface <highlight><bold>269</bold></highlight> to printer <highlight><bold>290</bold></highlight> for controllably printing postage indicia onto a given medium, which serve as a proof of postage. Printer <highlight><bold>290</bold></highlight> may incorporate well known laser, thermo transfer or inkjet technology. Device <highlight><bold>250</bold></highlight> also includes communications circuitry <highlight><bold>261</bold></highlight>, serial interfaces <highlight><bold>263</bold></highlight> and <highlight><bold>265</bold></highlight>, PCMCIA or serial (PCMCIA/serial) interface <highlight><bold>267</bold></highlight>, user interface <highlight><bold>271</bold></highlight>, clock circuitry <highlight><bold>272</bold></highlight> and memory <highlight><bold>273</bold></highlight>. Communications circuitry <highlight><bold>261</bold></highlight> includes conventional modem circuitry for establishing connections to communication networks, e.g., the Internet. Serial interfaces <highlight><bold>263</bold></highlight> and <highlight><bold>265</bold></highlight> may be used for connection with devices such as a conventional optical scanner and postage scale. Interface <highlight><bold>267</bold></highlight> in this instance is used for connection with PSD <highlight><bold>280</bold></highlight> which is realized as an integrated circuit (IC) card or a &ldquo;smart&rdquo; module peripheral to device <highlight><bold>250</bold></highlight>, and user interface <highlight><bold>271</bold></highlight> for connection with a keypad (not shown), a display (not shown) and/or an indicator device such as a mouse (not shown) for user inputs. Clock circuitry <highlight><bold>272</bold></highlight> keeps track of the current date and time for system <highlight><bold>201</bold></highlight>. Memory <highlight><bold>273</bold></highlight> is used to store data and program routines for instructing processor <highlight><bold>255</bold></highlight> to perform various functions. One such program routine may be a postage franking routine described below for instructing processor <highlight><bold>255</bold></highlight> to carry out the postage franking operation in accordance with the invention. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, PSD <highlight><bold>280</bold></highlight> includes PCMCIA and/or serial (PCMCIA/serial) interface <highlight><bold>301</bold></highlight> for interfacing with and insertion into host device <highlight><bold>250</bold></highlight>, cryptographic processor <highlight><bold>305</bold></highlight>, and secure memory <highlight><bold>307</bold></highlight>. The components in PSD <highlight><bold>280</bold></highlight> may be realized using a chip set of the type of the NETARMOR VMS<highlight><bold>310</bold></highlight> chip set manufactured by VLSI Technology, Inc, or alternatively the chip set typified by smart card technology. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Secure memory <highlight><bold>307</bold></highlight> which is a nonvolatile memory includes a descending register and an ascending register. In a conventional manner, the descending register is used to keep track of an amount of postage available for dispensation. On the other hand, the ascending register is used to keep track of an amount of postage dispensed. When the value of the descending register decreases over time below a predetermined limit, system <highlight><bold>201</bold></highlight> can no longer dispense postage until the descending register is reset. Such a reset may be achieved by way of electronic funds transfer via a dial-up connection with a computerized central facility using communications circuitry <highlight><bold>261</bold></highlight>, in accordance with a well-known telemeter setting (TMS) technique. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> In this particular illustrative embodiment, secure memory <highlight><bold>307</bold></highlight> also includes a well known digital signature algorithm (DSA), a private key and the corresponding public key in accordance with the DSA. The public key may be made available to the public in a PSD certificate. For instance, using the DSA, cryptographic processor <highlight><bold>305</bold></highlight> may sign specified postal data with the private key to generate a digital signature to be included in a postage indicium. The PSD certificate containing the public key may also be provided in the indicium for the postal authority to verify the digital signature to authenticate the postage indicium. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates postage indicium <highlight><bold>400</bold></highlight> which serves as a proof of postage and is generated by system <highlight><bold>201</bold></highlight> in accordance with the invention. Indicium <highlight><bold>400</bold></highlight> includes human readable portion <highlight><bold>405</bold></highlight> and machine readable portion <highlight><bold>410</bold></highlight>. Portion <highlight><bold>405</bold></highlight> may include information concerning the date of mailing, postage, device ID, origination town and zip code, mail class, etc. Machine readable portion <highlight><bold>410</bold></highlight> may include one or more symbols representing the postal data required by the postal authority, and the digital signature for authenticating the indicium as mentioned before. In this particular illustrative embodiment, portion <highlight><bold>410</bold></highlight> includes multiple symbols, e.g., data matrix symbols <highlight><bold>415</bold></highlight> and <highlight><bold>420</bold></highlight> in accordance with the well known Data Matrix specification, which jointly represent the required postal data. Such postal data, for example, includes the device ID which identifies system <highlight><bold>201</bold></highlight>, ascending register value, postage, digital signature, date of mailing, originating address licensing zip code, software ID which identifies application software including the aforementioned postage franking routine in system <highlight><bold>201</bold></highlight>, descending register value, PSD certificate, mail class (or rate category), etc. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> To expedite each postage franking transaction especially where system <highlight><bold>201</bold></highlight> needs to handle a high volume of mailpieces, the machine readable portion of a postage indicium which includes at least one symbol is printed in a pipeline fashion in accordance with the invention. That is, in printing the symbol, as soon as new information concerning a bit map for the print image of the symbol is made available, printer <highlight><bold>290</bold></highlight> utilizes such information to realize the symbol as much as possible. To facilitate the pipeline operation, the layout of the bit map is designed in such a way that the leading portion of the bit map corresponds to those postal data which can be determined without regard to any subsequent postal data, which correspond to the remaining part of the bit map. To that end, processor <highlight><bold>255</bold></highlight> arranges the postal data to be represented in such an order that those postal data (e.g., the ascending and descending register values) which need to be determined based on other postal data (e.g., the postage) are disposed after such other postal data in the bit map representation, thereby obviating the need to modify the bit map as it is being laid out and made available to printer <highlight><bold>290</bold></highlight> for printing. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> We have recognized that of the required postal data, some data elements such as the device ID, originating address licensing zip code, software ID and PSD certificate are invariable with respect to system <highlight><bold>201</bold></highlight>, and some other data elements such as the date of mailing are invariable over a period of time, e.g., 24 hours, and the remaining data elements such as the ascending register value, postage, descending register value and mail class may vary from one franking transaction to another. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> Thus, in particular, the invention embraces the approach where a single symbol may be used in the machine readable portion to represent a combination of invariable and variable postal data elements, with the invariable postal data elements processed first and represented by the leading portion of the symbol, followed by the variable postal data elements represented by the remaining portion of the same symbol, as the invariable postal data elements are independent of the subsequent, variable postal data elements. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The invention also embraces a multi-symbol approach where as illustrated in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, machine readable portion <highlight><bold>410</bold></highlight> includes at least two symbols, e.g., data matrix symbols <highlight><bold>415</bold></highlight> and <highlight><bold>420</bold></highlight>. One of the symbols may represent only those invariable postal data elements. Such a symbol is &ldquo;invariable&rdquo; or &ldquo;fixed&rdquo; by virtue of the invariable postal data elements represented thereby, and thus can be preset for printing in each franking transaction. The other &ldquo;variable&rdquo; symbol may represent the remaining postal data elements which may vary from transaction to transaction. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> However, in this particular illustrative embodiment, data matrix symbol <highlight><bold>415</bold></highlight> represents those postal data elements which are invariable over at least a period of time. For example, in addition to the invariable postal data elements such as the device ID, originating address licensing zip code, software ID and PSD certificate, data matrix symbol <highlight><bold>415</bold></highlight> also represents the date of mailing which changes daily. Notwithstanding such, symbol <highlight><bold>415</bold></highlight> needs to be created only once per day with the current mailing date and is then set in a print memory for printing in each franking transaction for the rest of the day. Thus, the creation of symbol <highlight><bold>415</bold></highlight> does not consume real time during the franking transaction. On the other hand, the creation of symbol <highlight><bold>420</bold></highlight> representing the remaining postal data elements which may vary from transaction to transaction consumes real time. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Similarly, human readable portion <highlight><bold>405</bold></highlight> can be divided into two parts, namely, a &ldquo;fixed&rdquo; part including, e.g., information concerning the origination town and zip code, device ID and date of mailing which is invariable over at least a period of time; and a &ldquo;variable&rdquo; part including, e.g., information concerning the postage and mail class which may vary from transaction to transaction. The fixed part may be preset in the print memory for printing, and the variable part may be created in real time when the transaction occurs. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> We have recognized certain advantages of the multi-symbol approach over the aforementioned single symbol approach. As mentioned before, each data matrix symbol includes error correction codewords to help ensure scanning success of the communication of the data represented thereby. In the multi-symbol approach, the computation of the error correction codewords for symbol <highlight><bold>415</bold></highlight> representing invariable postal data elements is completed prior to the franking transaction and does not consume real time of the transaction. However, the computation of the error correction codewords for symbol <highlight><bold>420</bold></highlight>, which represents variable postal data elements and is created during the franking transaction, consumes real time. So does the computation of the error correction codewords for a single symbol representing both variable and invariable postal data elements in the single symbol approach. Nevertheless, the computation of the codewords for symbol <highlight><bold>420</bold></highlight> in the multi-symbol approach is simpler as the codewords afford error protection to fewer data elements than that for a single symbol in the single symbol approach. As a result, the multi-symbol approach is more real-time efficient in computing error correction codewords. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> Other advantages of the multi-symbol approach over the single symbol approach include the versatile adaptability of multiple symbols into the required space of machine readable portion <highlight><bold>410</bold></highlight>. For example, data matrix symbols <highlight><bold>415</bold></highlight> and <highlight><bold>420</bold></highlight> occupy relatively small square spaces, respectively, with respect to the otherwise, single symbol occupying a relatively large square space. Because of the smaller sizes of symbols <highlight><bold>415</bold></highlight> and <highlight><bold>420</bold></highlight>, they can readily fit into the required space, e.g., a limited rectangular space. In addition, because of the availability of the few predetermined sizes of a data matrix symbol corresponding to the maximum amounts of data represented by the symbol, a single symbol may assume a data matrix symbol having much unused data capacity, thus wasting much space, and yet because of its postal data amount needed to be represented, the single symbol may not assume a smaller size. However, symbols <highlight><bold>415</bold></highlight> and <highlight><bold>420</bold></highlight> may assume data matrix symbols of different sizes to maximize use of the data capacities afforded thereby, and to save space at the same time. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Regardless of whether a single symbol or multiple symbols are used to represent the required postal data elements, because of the manipulation of the order of the postal data elements, e.g., invariable postal data elements followed by the variable postal data elements, in accordance with the invention, the sequence of the postal data elements represented by the single symbol or multiple symbols when read may not match the sequence expected by the postal authority. If that is the case, each postal data element represented by the single symbol or multiple symbols may be preceded by a field identifier indicating the order of the data element with respect to the sequence expected by the postal authority. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 5A, 5B</cross-reference> and <highlight><bold>5</bold></highlight>C illustrate the aforementioned postage franking routine in accordance with the invention. This routine includes (a) subroutine <highlight><bold>503</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 5A</cross-reference> for generating fixed data matrix symbol <highlight><bold>415</bold></highlight> and the fixed part of human readable portion <highlight><bold>405</bold></highlight>, representative of those postal data elements which are unaffected by franking transactions, and (b) main routine <highlight><bold>550</bold></highlight> in <cross-reference target="DRAWINGS">FIGS. 5B and 5C</cross-reference> for franking postage indicium <highlight><bold>400</bold></highlight>, including generating variable data matrix symbol <highlight><bold>420</bold></highlight> and the variable part of human readable portion <highlight><bold>405</bold></highlight>, representative of the remaining postal data elements which may vary from one franking transaction to another. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Instructed by subroutine <highlight><bold>503</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>A, processor <highlight><bold>255</bold></highlight> in system <highlight><bold>201</bold></highlight> detects any interrupt concerning a change in the date of mailing which is a required postal data element for postage indicium <highlight><bold>400</bold></highlight>, as indicated at step <highlight><bold>513</bold></highlight>. Such an interrupt may be automatically generated by clock circuitry <highlight><bold>272</bold></highlight> at the beginning of each day, or caused by other date change mechanisms or by a user input adjusting the mailing date through user interface <highlight><bold>271</bold></highlight>. When such an interrupt is detected, processor <highlight><bold>255</bold></highlight> at step <highlight><bold>516</bold></highlight> assembles the data concerning the new mailing date and other invariable postal data elements corresponding to fixed data matrix symbol <highlight><bold>415</bold></highlight> which are pre-stored in memory <highlight><bold>273</bold></highlight>. At step <highlight><bold>519</bold></highlight>, processor <highlight><bold>255</bold></highlight> computes the error correction codewords for the assembled data in accordance with a well known error correction technique, e.g., the Reed-Solomon error correction technique. Processor <highlight><bold>255</bold></highlight> at step <highlight><bold>521</bold></highlight> then prepares a bit map for a print image of fixed symbol <highlight><bold>415</bold></highlight> representing the assembled data and error correction codewords just computed which are arranged in accordance with the Data Matrix specification. Processor <highlight><bold>255</bold></highlight> stores such a bit map in a print memory which may be a part of memory <highlight><bold>273</bold></highlight>, as indicated at step <highlight><bold>523</bold></highlight>. In addition, processor <highlight><bold>255</bold></highlight> at step <highlight><bold>527</bold></highlight> assembles data concerning the new mailing date and those invariable postal data elements corresponding to the fixed part of human readable portion <highlight><bold>405</bold></highlight>. At step <highlight><bold>530</bold></highlight>, processor <highlight><bold>255</bold></highlight> prepares a second bit map for a print image of the fixed human readable part based on the assembled data. Processor <highlight><bold>255</bold></highlight> at step <highlight><bold>533</bold></highlight> stores the second bit map in the print memory as well. Thus, during a franking transaction, printer <highlight><bold>290</bold></highlight> can readily retrieve from the print memory the preset bit maps for printing data matrix symbol <highlight><bold>415</bold></highlight>, and the fixed part of human readable portion <highlight><bold>405</bold></highlight>. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> In order to fully appreciate main routine <highlight><bold>550</bold></highlight> involving creation of variable data matrix symbol <highlight><bold>420</bold></highlight>, the generation of the aforementioned digital signature which is also represented by symbol <highlight><bold>420</bold></highlight> will now be described. In this illustrative embodiment, the required postal data elements represented by machine readable portion <highlight><bold>410</bold></highlight> are signed in accordance with a well known cryptographic algorithm, e.g., the DSA. The resulting digital signature whose representation is included in symbol <highlight><bold>420</bold></highlight> is used for authentication of postage indicium <highlight><bold>400</bold></highlight>. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> The digital signature is composed of a first signature value &ldquo;r&rdquo; which is 20 bytes long, and a second signature value &ldquo;s&rdquo; which is also 20 bytes long. In accordance with the DSA, the generation of the signature value &ldquo;r&rdquo; involves generation of a random (or psuedo-random) integer &ldquo;k&rdquo; in each franking transaction. The value &ldquo;r&rdquo; is a function of the integer &ldquo;k&rdquo; and certain given DSA parameters, and independent of the postal data elements to be signed. However, the generation of the signature value &ldquo;s&rdquo; involves applying a secure hash algorithm (SHA) onto the postal data elements to be signed. One such SHA is described in &ldquo;Secure Hash Standard,&rdquo; <highlight><italic>FIPS PUB </italic></highlight>180-1, Apr. 17, 1998. Specifically, the signature value &ldquo;s&rdquo;, dependent on the values of the postal data elements to be signed, may be expressed as follows: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>s</italic></highlight>&equals;(<highlight><italic>k</italic></highlight><highlight><superscript>&minus;1</superscript></highlight>(<highlight><italic>SHA</italic></highlight>(<highlight><italic>M</italic></highlight>)&plus;<highlight><italic>xr</italic></highlight>))mod <highlight><italic>q , </italic></highlight>&emsp;&emsp;&lsqb;1&rsqb;</in-line-formula></paragraph>
<paragraph id="P-0044" lvl="7"><number>&lsqb;0044&rsqb;</number> where &ldquo;k<highlight><superscript>&minus;1</superscript></highlight>&rdquo; represents the multiplicative inverse of the random integer k; &ldquo;M&rdquo; represents the postal data elements to be signed onto which the SHA is applied; &ldquo;x&rdquo; represents the value of the aforementioned private key stored in secure memory <highlight><bold>307</bold></highlight>; &ldquo;r&rdquo; represents the aforementioned first signature value; and &ldquo;mod q&rdquo; represents a standard modulus operation having a base q, which is one of the given DSA parameters. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>B, instructed by main routine <highlight><bold>550</bold></highlight>, processor <highlight><bold>255</bold></highlight> for each franking transaction causes cryptographic processor <highlight><bold>305</bold></highlight> in PSD <highlight><bold>280</bold></highlight> to generate a random integer k, as indicated at step <highlight><bold>553</bold></highlight>. Based on the value of k, processor <highlight><bold>305</bold></highlight> at step <highlight><bold>557</bold></highlight> computes the first signature value r which is independent of the values of the postal data elements to be signed, i.e., M in expression &lsqb;<highlight><bold>1</bold></highlight>&rsqb;. In accordance with an aspect of the invention, processor <highlight><bold>305</bold></highlight> at step <highlight><bold>561</bold></highlight> computes temp<highlight><bold>1</bold></highlight>&equals;k<highlight><superscript>&minus;1 </superscript></highlight>and temp<highlight><bold>2</bold></highlight>&equals;xr in expression &lsqb;<highlight><bold>1</bold></highlight>&rsqb; even before knowing the actual mail class and postage to be dispensed which, however, affects only M, and thus SHA(M), thereby gaining some time to compute the second signature value s before such actual mail class and postage become known. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> In accordance with another aspect of the invention, processor <highlight><bold>305</bold></highlight> further pre-computes candidates of the second signature value s based on one or more predicted mail classes and postage values to be dispensed, as indicated at step <highlight><bold>564</bold></highlight>. Such predicted mail classes and postage values are formed in pairs based on statistics concerning past usage of mail classes and postage. In this example, system <highlight><bold>201</bold></highlight> uses three predicted mail class/postage pairs, which are the last mail class and postage actually dispensed by system <highlight><bold>201</bold></highlight>, and the two most statistically likely mail class/postage pairs, e.g., first class mail/32&cent; and first class mail/55&cent;, where 32&cent; and 55&cent; correspond to the two lowest weight limits of the first class mail. Once the unknown mail class and postage to be dispensed is assumed to be a prediction thereof, all of the variable postal data elements including the postage, ascending register value, descending register value and mail class are defined. Accordingly, M in expression &lsqb;<highlight><bold>1</bold></highlight>&rsqb;, which represents all of the required postal data elements represented by machine readable portion <highlight><bold>410</bold></highlight>, including the variable postal data elements, is also defined. In this instance, processor <highlight><bold>305</bold></highlight> pre-computes three &ldquo;s&rdquo; candidates corresponding to the respective predictions in accordance with expression &lsqb;<highlight><bold>1</bold></highlight>&rsqb;. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> As soon as processor <highlight><bold>255</bold></highlight> detects the actual mail class and postage entry by a user through user interface <highlight><bold>271</bold></highlight>, processor <highlight><bold>255</bold></highlight> determines whether the actual postage and mail class just entered match any of the predictions, as indicated at step <highlight><bold>566</bold></highlight>. If it is determined that the mail class and postage entry matches one of the predictions, processor <highlight><bold>255</bold></highlight> causes processor <highlight><bold>305</bold></highlight> to select the &ldquo;s&rdquo; candidate corresponding to the matched prediction for use as the actual second signature value, as indicated at step <highlight><bold>569</bold></highlight>, thereby expediting the postage franking transaction. Otherwise, if it is determined that the mail class and postage entry does not match any prediction, processor <highlight><bold>255</bold></highlight> causes processor <highlight><bold>305</bold></highlight> to compute the actual second signature value based on the mail class and postage entry, and the pre-computed temp<highlight><bold>1</bold></highlight> and temp<highlight><bold>2</bold></highlight> above, in accordance with expression &lsqb;<highlight><bold>1</bold></highlight>&rsqb;, as indicated at step <highlight><bold>571</bold></highlight>. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> As previously mentioned, the franking operation is performed by system <highlight><bold>201</bold></highlight> pursuant to the inventive pipeline approach. With the bit map of fixed symbol <highlight><bold>415</bold></highlight> preset in the print memory as described before, as soon as processor <highlight><bold>255</bold></highlight> detects a signal (e.g., from a conventional mail feeder (not shown) connected to system <highlight><bold>201</bold></highlight>, or user interface <highlight><bold>271</bold></highlight>) requesting printing of a postage indicium, say, indicium <highlight><bold>400</bold></highlight>, corresponding to the aforementioned mail class and postage entry, processor <highlight><bold>255</bold></highlight> causes printer <highlight><bold>290</bold></highlight> to start printing fixed symbol <highlight><bold>415</bold></highlight> advantageously without latency, as indicated at step <highlight><bold>572</bold></highlight>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> While symbol <highlight><bold>415</bold></highlight> is being printed, processor <highlight><bold>255</bold></highlight> is creating variable symbol <highlight><bold>420</bold></highlight> and the variable part of human readable portion <highlight><bold>405</bold></highlight>, taking advantage of the print time for symbol <highlight><bold>415</bold></highlight>. Specifically, referring to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>C, processor <highlight><bold>255</bold></highlight> at step <highlight><bold>573</bold></highlight> causes cryptographic processor <highlight><bold>305</bold></highlight> to provide thereto (a) the ascending register value and (b) the descending register value, taking into account the current dispensed postage, and (c) the digital signature which is composed of the aforementioned first signature value from step <highlight><bold>557</bold></highlight> and second signature value from step <highlight><bold>569</bold></highlight> or step <highlight><bold>571</bold></highlight>. At step <highlight><bold>576</bold></highlight>, processor <highlight><bold>255</bold></highlight> computes error correction codewords for the digital signature and the variable postal data elements including the postage, mail class, and ascending and descending register values received by processor <highlight><bold>255</bold></highlight>, in accordance with a well known error correction technique, e.g., the Reed-Solomon error correction technique. At step <highlight><bold>579</bold></highlight>, processor <highlight><bold>255</bold></highlight> prepares a bit map for a print image of variable symbol <highlight><bold>420</bold></highlight> representing such digital signature, variable postal data elements and error correction codewords which are arranged in accordance with the Data Matrix specification. At step <highlight><bold>581</bold></highlight>, processor <highlight><bold>255</bold></highlight> transfers the resulting bit map to the print memory. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> In addition, processor <highlight><bold>255</bold></highlight> at step <highlight><bold>583</bold></highlight> prepares another bit map for a print image of the variable part of human readable portion <highlight><bold>405</bold></highlight> including the dispensed postage and mail class. At step <highlight><bold>585</bold></highlight>, processor <highlight><bold>255</bold></highlight> transfers the resulting bit map to the print memory as well. As soon as fixed symbol <highlight><bold>415</bold></highlight> is printed, at step <highlight><bold>587</bold></highlight>, processor <highlight><bold>255</bold></highlight> causes printer <highlight><bold>290</bold></highlight> to start printing symbol <highlight><bold>420</bold></highlight>, followed by human readable portion <highlight><bold>405</bold></highlight>, based on the respective bit maps in the print memory, thereby realizing postage indicium <highlight><bold>400</bold></highlight>. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> As mentioned before, the use of additional data matrix symbols to represent the same amount of data enables one to reduce the size of individual symbols. However, in the event that the number of symbols used is limited, and the size of at least one of the symbols is larger than the print coverage of a printhead (not shown) of printer <highlight><bold>290</bold></highlight>, the oversize symbol cannot be printed in a single pass of the printhead, incurring at least a second pass thereof to complete the oversize symbol. Such multiple passes of the printhead, versus a single pass thereof, to realize machine readable portion <highlight><bold>410</bold></highlight> undesirably reduce significantly the speed of the postage franking operation. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> Referring back to <cross-reference target="DRAWINGS">FIGS. 1A and 1B</cross-reference>, as described before, a data matrix symbol, e.g, data matrix symbol <highlight><bold>100</bold></highlight>, includes four finder patterns (collectively denoted <highlight><bold>150</bold></highlight>) for data regions I, II, III and IV, respectively. We have recognized that if data matrix symbol <highlight><bold>100</bold></highlight> is oversize and needs to be divided into segments for printing in a manner described below, an innocuous way to divide it is to separate data regions I and II from regions III and IV by solid arrays <highlight><bold>155</bold></highlight> and <highlight><bold>165</bold></highlight> of the finder patterns for data regions I and II, respectively. <cross-reference target="DRAWINGS">FIG. 6</cross-reference> illustrates the resulting segmented data matrix symbol, denoted <highlight><bold>600</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, symbol <highlight><bold>600</bold></highlight> includes upper symbol segment <highlight><bold>610</bold></highlight> and lower symbol segment <highlight><bold>620</bold></highlight>. Except for solid arrays <highlight><bold>155</bold></highlight> and <highlight><bold>165</bold></highlight> which no longer appear in symbol <highlight><bold>600</bold></highlight> and are replaced by an inter-segment gap having a width G. which is exaggerated for illustrative purposes, symbol <highlight><bold>100</bold></highlight> is identical to symbol <highlight><bold>600</bold></highlight>. In any event, the missing solid arrays <highlight><bold>155</bold></highlight> and <highlight><bold>165</bold></highlight> from symbol <highlight><bold>100</bold></highlight> are inconsequential to the determination of the size and distortion of symbol <highlight><bold>100</bold></highlight> using the remaining finder patterns. Thus, for data communications, symbol <highlight><bold>600</bold></highlight>, even with its inter-segment gap narrower than G, is equivalent to symbol <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> In accordance with the invention, in printing an oversize data matrix symbol, a printhead assembly comprising multiple printheads is used to print the symbol in a single pass of the assembly to maintain the high efficiency of the postage franking operation. <cross-reference target="DRAWINGS">FIG. 7</cross-reference> illustrates printhead assembly <highlight><bold>700</bold></highlight> in accordance with the invention which includes printheads <highlight><bold>703</bold></highlight> and <highlight><bold>705</bold></highlight>, which are connected and arranged (or ganged) close to each other in the assembly. As shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the leading edge <highlight><bold>711</bold></highlight> of printhead <highlight><bold>703</bold></highlight> is aligned with the leading edge <highlight><bold>713</bold></highlight> of printhead <highlight><bold>705</bold></highlight>. Assembly <highlight><bold>700</bold></highlight> is controlled by printer <highlight><bold>290</bold></highlight> to print in direction A to realize an oversize data matrix symbol, say, symbol <highlight><bold>100</bold></highlight>, where the length of the symbol is longer than each of the length y<highlight><bold>1</bold></highlight> of the print coverage by printhead <highlight><bold>703</bold></highlight> and the length y<highlight><bold>2</bold></highlight> of the print coverage by printhead <highlight><bold>705</bold></highlight>. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> In practice, in assembly <highlight><bold>700</bold></highlight> printhead <highlight><bold>703</bold></highlight> is inevitably separated from printhead <highlight><bold>705</bold></highlight> by a separation. Without sacrificing the data integrity of oversize symbol <highlight><bold>100</bold></highlight>, in accordance with the invention, assembly <highlight><bold>700</bold></highlight> generates a version of symbol <highlight><bold>600</bold></highlight>, instead, which is equivalent to symbol <highlight><bold>100</bold></highlight>. Specifically, printhead <highlight><bold>703</bold></highlight> controllably prints symbol segment <highlight><bold>610</bold></highlight> while printhead <highlight><bold>705</bold></highlight> controllably prints symbol segment <highlight><bold>620</bold></highlight>, with the width of the otherwise solid arrays <highlight><bold>155</bold></highlight> and <highlight><bold>165</bold></highlight> provides the tolerance for the separation between printheads <highlight><bold>703</bold></highlight> and <highlight><bold>705</bold></highlight>. In other words, the separation between printheads <highlight><bold>703</bold></highlight> and <highlight><bold>705</bold></highlight> is made to fall within gap G in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, and is denoted G&prime;, which is also exaggerated in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. In effect, gap G is provided to compensate for mechanical tolerance and the alignment of printheads <highlight><bold>703</bold></highlight> and <highlight><bold>705</bold></highlight>. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> It should be noted at this point that in accordance with the Data Matrix specification, each data matrix symbol can be realized in either a &ldquo;dark on light&rdquo; format or a &ldquo;light on dark&rdquo; format, representing identical information including the finder patterns. For example, symbol <highlight><bold>100</bold></highlight> is illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> in a &ldquo;dark on light&rdquo; format. Its &ldquo;light on dark&rdquo; counterpart has each light module in symbol <highlight><bold>100</bold></highlight> become a dark module and conversely each dark module become a light module. In particular, the solid arrays in the &ldquo;light on dark&rdquo; counterpart consists of light modules or blanks. As such, print assembly <highlight><bold>700</bold></highlight> is particularly advantageous to realize data matrix symbols in the &ldquo;light on dark&rdquo; format, with the separation G&prime; between printheads <highlight><bold>703</bold></highlight> and <highlight><bold>705</bold></highlight> effectuating the solid arrays therein which are naturally blank. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Similarly, printhead assembly <highlight><bold>700</bold></highlight> may also be used to print an oversize human readable portion, although the data integrity there is much less susceptible to any misalignment of printheads <highlight><bold>703</bold></highlight> and <highlight><bold>705</bold></highlight> in the assembly. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> illustrates another segmented data matrix symbol <highlight><bold>800</bold></highlight> equivalent to oversize symbol <highlight><bold>100</bold></highlight>. Symbol <highlight><bold>800</bold></highlight> is designed for those printers which print in direction B, as opposed to direction A in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. Similarly, the printhead assembly (not shown) for generating a version of symbol <highlight><bold>800</bold></highlight> includes first and second printheads separated from each other by a separation G&prime;. The first printhead controllably prints symbol segment <highlight><bold>810</bold></highlight> and the second printhead controllably prints symbol segment <highlight><bold>820</bold></highlight>, with the separation G&prime; falling within gap G (also exaggerated for illustrative purposes) of symbol <highlight><bold>800</bold></highlight>, where gap G coincides with the otherwise solid arrays of oversize symbol <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> The foregoing merely illustrates the principles of the invention. It will thus be appreciated that those skilled in the art will be able to devise various modifications or alterations which, although different from the exemplary embodiments described herein, are within the scope as defined by the appended claims. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> For example, in the disclosed embodiment, data matrix symbols are used to illustrate the principles of the invention. However, it will be appreciated that other barcodes such as PDF <highlight><bold>417</bold></highlight> barcodes, or other similar segmenting image presentations, stacked codes or symbols representative of information may be used, instead, to implement the invention. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> In addition, in the disclosed embodiment, the bit map for a print image representing data is illustratively generated in host device <highlight><bold>250</bold></highlight>. However, it will be appreciated that alternatively the data will be provided by device <highlight><bold>250</bold></highlight> in the form of image vectors to printer <highlight><bold>290</bold></highlight>, in accordance with a printer protocol or printer control language. Printer <highlight><bold>290</bold></highlight> will then generate the bit map based on the received image vectors. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Moreover, in the disclosed embodiment, machine readable portion <highlight><bold>410</bold></highlight> illustratively includes multiple symbols which are readable by a scanner. It will be appreciated that in accord with the invention, the multiple symbols as a whole will be scanned only once by the scanner, and the presence of the multiple symbols will be recognized by the single pass of the scan. The scanner will then decode each individual symbol to recover the postal information represented thereby. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> Finally, the illustrative embodiment of the invention is disclosed herein in a form in which the various data processing functions are performed by discrete functional blocks. These functional blocks may be implemented in various ways and combinations using logic circuitry and/or appropriately programmed processors, as will be known to those skilled in the art. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. Apparatus for processing a plurality of postal data elements, a first one of the plurality of postal data elements being a function of at least a second one of the plurality of postal data elements, the apparatus comprising: 
<claim-text>a processor for arranging the plurality of postal data elements in an order where the second postal data element precedes the first postal data element; and </claim-text>
<claim-text>an output for providing a representation representing the plurality of postal data elements in the arranged order. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the representation includes at least one barcode. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein the barcode is a 2-dimensional barcode. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the representation includes at least one data matrix symbol. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the second data element concerns a postage value, and the first data element concerns a descending register value. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the representation includes a bit map for a print image of at least one coded symbol representing the plurality of data elements. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. Apparatus for processing a plurality of postal data elements, the apparatus comprising: 
<claim-text>a processor for arranging the plurality of postal data elements in an order such that each postal data element preceding a second postal data element is independent of the second postal data element; and </claim-text>
<claim-text>an output for providing a representation representing the plurality of postal data elements in the arranged order. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein the representation includes at least one barcode. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> wherein the barcode is a 2-dimensional barcode. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein the representation includes at least one data matrix symbol. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein one of the plurality of the data elements concerns a postage value. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein the representation includes a bit map for a print image of at least one coded symbol representing the plurality of postal data elements. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. Apparatus for conducting a postage franking transaction to generate a representation representing data, the apparatus comprising: 
<claim-text>a processor for identifying a first subset of the data which is unaffected by the postage franking transaction and a second subset of the data which is subject to change during the postage franking transaction; and </claim-text>
<claim-text>an output for providing a representation representing the first subset of the data and the second subset of the data, the representation being partitioned into a first part and a second part thereof, the first subset of the data and the second subset of the data being represented by the first part and the second part, respectively. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference> wherein the representation includes at least one coded symbol. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> wherein the coded symbol includes a barcode. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein the barcode is a 2-dimensional barcode. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> wherein the coded symbol includes a data matrix symbol. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference> wherein the representation includes a first coded symbol and a second coded symbol, the first part including at least part of the first coded symbol. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference> wherein the second part includes at least part of the second coded symbol. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. Apparatus for conducting postage franking transaction, the apparatus comprising: 
<claim-text>a processor for processing a plurality of data elements; and </claim-text>
<claim-text>an output for generating at least a first symbol and a second symbol representing the data elements, at least part of the first symbol representing a first subset of the data elements which is unaffected by the postage franking transaction, and at least part of the second symbol representing a second subset of the data elements which is subject to change during the postage franking transaction. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference> wherein the first symbol is generated before the second symbol. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference> wherein at least one of the first and second symbols includes a barcode. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference> wherein the barcode is a 2-dimensional barcode. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference> wherein at least one of the first and second symbols includes a data matrix symbol. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference> wherein the output includes a printer. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. Apparatus for generating a postage indicium based on at least first data, the first data being a function of second data, the apparatus comprising: 
<claim-text>a processor for determining at least one candidate for the first data based on a predicted version of the second data; </claim-text>
<claim-text>a comparator for comparing an actual version of the second data with the predicted version thereof; and </claim-text>
<claim-text>an output for generating the postage indicium based on the candidate for the first data when the actual version matches the predicted version. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein the second data concerns a postage value. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference> wherein the second data also concerns a mail class. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein the predicted version of the second data is statistically determined. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein the predicted version of the second data includes a postage value indicated in the last postage indicium generated by the apparatus. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein the first data concerns a code for authenticating the postage indicium. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the code includes at least part of a digital signature. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein the processor includes the comparator. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. Apparatus for creating a postage indicium representing a plurality of data elements, and at least one code for authenticating selected ones of the data elements, the apparatus comprising: 
<claim-text>an interface for receiving a request for creating the postage indicium; and </claim-text>
<claim-text>a processor for performing computations to generate the code, selected ones of the computations being performed before the request is received, the code being generated based on results of the selected computations after the request is received. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 34</dependent-claim-reference> wherein the code includes a digital signature. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 35</dependent-claim-reference> wherein the selected computations include generation of a random number. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 36</dependent-claim-reference> wherein the selected computations include a computation based on a value of the random number. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 35</dependent-claim-reference> wherein the selected computations include a computation of a signature value r in accordance with a digital signature algorithm (DSA). </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 35</dependent-claim-reference> wherein the selected computations include a computation based on a value of a private key in accordance with a cryptographic algorithm. </claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. Apparatus for printing a symbol representing data, the data being disposed in at least a first segment and a second segment in the symbol, the first segment being separated from the second segment by a delimiter, the apparatus comprising: 
<claim-text>at least a first printhead and a second printhead for printing the first and second segments, respectively, the first printhead being separated from the second printhead by a gap, the size of the gap being a function of the size of the delimiter. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference> wherein the symbol includes a data matrix symbol. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference> wherein the data matrix symbol is formatted in a dark on light format. </claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference> wherein the data matrix symbol is formatted in a light on dark format. </claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference> wherein the data matrix symbol includes finder patterns, and the delimiter forms part of the finder patterns. </claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference> wherein the symbol includes a barcode. </claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. A method for processing a plurality of postal data elements, a first one of the plurality of postal data elements being a function of at least a second one of the plurality of postal data elements, the method comprising: 
<claim-text>arranging the plurality of postal data elements in an order where the second postal data element precedes the first postal data element; and </claim-text>
<claim-text>providing a representation representing the plurality of postal data elements in the arranged order. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference> wherein the representation includes at least one barcode. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 47</dependent-claim-reference> wherein the barcode is a 2-dimensional barcode. </claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference> wherein the representation includes at least one data matrix symbol. </claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference> wherein the second data element concerns a postage value, and the first data element concerns a descending register value. </claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference> wherein the representation includes a bit map for a print image of at least one coded symbol representing the plurality of data elements. </claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. A method for processing a plurality of postal data elements, the method comprising: 
<claim-text>arranging the plurality of postal data elements in an order such that each postal data element preceding a second postal data element is independent of the second postal data element; and </claim-text>
<claim-text>providing a representation representing the plurality of postal data elements in the arranged order. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference> wherein the representation includes at least one barcode. </claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 53</dependent-claim-reference> wherein the barcode is a 2-dimensional barcode. </claim-text>
</claim>
<claim id="CLM-00055">
<claim-text><highlight><bold>55</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference> wherein the representation includes at least one data matrix symbol. </claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference> wherein one of the plurality of the data elements concerns a postage value. </claim-text>
</claim>
<claim id="CLM-00057">
<claim-text><highlight><bold>57</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference> wherein the representation includes a bit map for a print image of at least one coded symbol representing the plurality of postal data elements. </claim-text>
</claim>
<claim id="CLM-00058">
<claim-text><highlight><bold>58</bold></highlight>. A method for conducting a postage franking transaction to generate a representation representing data, the method comprising: 
<claim-text>identifying a first subset of the data which is unaffected by the postage franking transaction and a second subset of the data which is subject to change during the postage franking transaction; and </claim-text>
<claim-text>providing a representation representing the first subset of the data and the second subset of the data, the representation being partitioned into a first part and a second part thereof, the first subset of the data and the second subset of the data being represented by the first part and the second part, respectively. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00059">
<claim-text><highlight><bold>59</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 58</dependent-claim-reference> wherein the representation includes at least one coded symbol. </claim-text>
</claim>
<claim id="CLM-00060">
<claim-text><highlight><bold>60</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 59</dependent-claim-reference> wherein the coded symbol includes a barcode. </claim-text>
</claim>
<claim id="CLM-00061">
<claim-text><highlight><bold>61</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 60</dependent-claim-reference> wherein the barcode is a 2-dimensional barcode. </claim-text>
</claim>
<claim id="CLM-00062">
<claim-text><highlight><bold>62</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 59</dependent-claim-reference> wherein the coded symbol includes a data matrix symbol. </claim-text>
</claim>
<claim id="CLM-00063">
<claim-text><highlight><bold>63</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 58</dependent-claim-reference> wherein the representation includes a first coded symbol and a second coded symbol, the first part including at least part of the first coded symbol. </claim-text>
</claim>
<claim id="CLM-00064">
<claim-text><highlight><bold>64</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 63</dependent-claim-reference> wherein the second part includes at least part of the second coded symbol. </claim-text>
</claim>
<claim id="CLM-00065">
<claim-text><highlight><bold>65</bold></highlight>. A method for conducting postage franking transaction, the method comprising: 
<claim-text>processing a plurality of data elements; and </claim-text>
<claim-text>generating at least a first symbol and a second symbol representing the data elements, at least part of the first symbol representing a first subset of the data elements which is unaffected by the postage franking transaction, and at least part of the second symbol representing a second subset of the data elements which is subject to change during the postage franking transaction. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00066">
<claim-text><highlight><bold>66</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 65</dependent-claim-reference> wherein the first symbol is generated before the second symbol. </claim-text>
</claim>
<claim id="CLM-00067">
<claim-text><highlight><bold>67</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 65</dependent-claim-reference> wherein at least one of the first and second symbols includes a barcode. </claim-text>
</claim>
<claim id="CLM-00068">
<claim-text><highlight><bold>68</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 67</dependent-claim-reference> wherein the barcode is a 2-dimensional barcode. </claim-text>
</claim>
<claim id="CLM-00069">
<claim-text><highlight><bold>69</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 65</dependent-claim-reference> wherein at least one of the first and second symbols includes a data matrix symbol. </claim-text>
</claim>
<claim id="CLM-00070">
<claim-text><highlight><bold>70</bold></highlight>. A method for generating a postage indicium based on at least first data, the first data being a function of second data, the method comprising: 
<claim-text>determining at least one candidate for the first data based on a predicted version of the second data; </claim-text>
<claim-text>comparing an actual version of the second data with the predicted version thereof; and </claim-text>
<claim-text>generating the postage indicium based on the candidate for the first data when the actual version matches the predicted version. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00071">
<claim-text><highlight><bold>71</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 70</dependent-claim-reference> wherein the second data concerns a postage value. </claim-text>
</claim>
<claim id="CLM-00072">
<claim-text><highlight><bold>72</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference> wherein the second data also concerns a mail class. </claim-text>
</claim>
<claim id="CLM-00073">
<claim-text><highlight><bold>73</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 70</dependent-claim-reference> wherein the predicted version of the second data is statistically determined. </claim-text>
</claim>
<claim id="CLM-00074">
<claim-text><highlight><bold>74</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 70</dependent-claim-reference> wherein the predicted version of the second data includes a postage value indicated in the last postage indicium generated by the method. </claim-text>
</claim>
<claim id="CLM-00075">
<claim-text><highlight><bold>75</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 70</dependent-claim-reference> wherein the first data concerns a code for authenticating the postage indicium. </claim-text>
</claim>
<claim id="CLM-00076">
<claim-text><highlight><bold>76</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 75</dependent-claim-reference> wherein the code includes at least part of a digital signature. </claim-text>
</claim>
<claim id="CLM-00077">
<claim-text><highlight><bold>77</bold></highlight>. A method for creating a postage indicium representing a plurality of data elements, and at least one code for authenticating selected ones of the data elements, the method comprising: 
<claim-text>performing computations to generate the code, wherein selected ones of the computations being performed before a request for creating the postage indicium is received; </claim-text>
<claim-text>receiving the request; and </claim-text>
<claim-text>generating the code based on results of the selected computations after the request is received. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00078">
<claim-text><highlight><bold>78</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 77</dependent-claim-reference> wherein the code includes a digital signature. </claim-text>
</claim>
<claim id="CLM-00079">
<claim-text><highlight><bold>79</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 78</dependent-claim-reference> wherein the selected computations include generation of a random number. </claim-text>
</claim>
<claim id="CLM-00080">
<claim-text><highlight><bold>80</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein the selected computations include a computation based on a value of the random number. </claim-text>
</claim>
<claim id="CLM-00081">
<claim-text><highlight><bold>81</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 78</dependent-claim-reference> wherein the selected computations include a computation of a signature value r in accordance with a DSA. </claim-text>
</claim>
<claim id="CLM-00082">
<claim-text><highlight><bold>82</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00077">claim 78</dependent-claim-reference> wherein the selected computations include a computation based on a value of a private key in accordance with a cryptographic algorithm. </claim-text>
</claim>
<claim id="CLM-00083">
<claim-text><highlight><bold>83</bold></highlight>. A method for use in an apparatus for printing a symbol representing data, the data being disposed in at least a first segment and a second segment in the symbol, the first segment being separated from the second segment by a delimiter, the apparatus including at least a first printhead and a second printhead, the method comprising: 
<claim-text>separating the first printhead from the second printhead by a gap, the size of the gap being a function of the size of the delimiter; and </claim-text>
<claim-text>printing the first and second segments using the first and second printheads, respectively. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00084">
<claim-text><highlight><bold>84</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00088">claim 83</dependent-claim-reference> wherein the symbol includes a data matrix symbol. </claim-text>
</claim>
<claim id="CLM-00085">
<claim-text><highlight><bold>85</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00088">claim 84</dependent-claim-reference> wherein the data matrix symbol is formatted in a dark on light format. </claim-text>
</claim>
<claim id="CLM-00086">
<claim-text><highlight><bold>86</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00088">claim 84</dependent-claim-reference> wherein the data matrix symbol is formatted in a light on dark format. </claim-text>
</claim>
<claim id="CLM-00087">
<claim-text><highlight><bold>87</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00088">claim 84</dependent-claim-reference> wherein the data matrix symbol includes finder patterns, and the delimiter forms part of the finder patterns. </claim-text>
</claim>
<claim id="CLM-00088">
<claim-text><highlight><bold>88</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00088">claim 83</dependent-claim-reference> wherein the symbol includes a barcode.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004900A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004900A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004900A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004900A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004900A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004900A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004900A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004900A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
