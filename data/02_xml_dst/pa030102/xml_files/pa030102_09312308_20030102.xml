<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005033A1-20030102-D00000.TIF SYSTEM "US20030005033A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00001.TIF SYSTEM "US20030005033A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00002.TIF SYSTEM "US20030005033A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00003.TIF SYSTEM "US20030005033A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00004.TIF SYSTEM "US20030005033A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00005.TIF SYSTEM "US20030005033A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00006.TIF SYSTEM "US20030005033A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00007.TIF SYSTEM "US20030005033A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00008.TIF SYSTEM "US20030005033A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00009.TIF SYSTEM "US20030005033A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00010.TIF SYSTEM "US20030005033A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00011.TIF SYSTEM "US20030005033A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00012.TIF SYSTEM "US20030005033A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00013.TIF SYSTEM "US20030005033A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00014.TIF SYSTEM "US20030005033A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00015.TIF SYSTEM "US20030005033A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00016.TIF SYSTEM "US20030005033A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00017.TIF SYSTEM "US20030005033A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00018.TIF SYSTEM "US20030005033A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00019.TIF SYSTEM "US20030005033A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00020.TIF SYSTEM "US20030005033A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00021.TIF SYSTEM "US20030005033A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00022.TIF SYSTEM "US20030005033A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00023.TIF SYSTEM "US20030005033A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00024.TIF SYSTEM "US20030005033A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030005033A1-20030102-D00025.TIF SYSTEM "US20030005033A1-20030102-D00025.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005033</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09312308</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>19990514</filing-date>
<continued-prosecution-application>This is a publication of a continued prosecution application (CPA) filed under 37 CFR 1.53(d).</continued-prosecution-application>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/16</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>709</class>
<subclass>202000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>CLIENT-SERVER INDEPENDENT INTERMEDIARY MECHANISM</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>SUDHIR</given-name>
<family-name>MOHAN</family-name>
</name>
<residence>
<residence-us>
<city>SANTA CLARA</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>UMESH R.</given-name>
<family-name>PATIL</family-name>
</name>
<residence>
<residence-us>
<city>SAN JOSE</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>DANIEL S.</given-name>
<family-name>JORDAN</family-name>
</name>
<residence>
<residence-us>
<city>SAN FRANCISCO</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>JUDITH A SZEPESI</name-1>
<name-2>BLAKELY SOKOLOFF TAYLOR AND ZAFMAN LLP</name-2>
<address>
<address-1>7TH FLOOR</address-1>
<address-2>12400 WILSHIRE BOULEVARD</address-2>
<city>LOS ANGELES</city>
<state>CA</state>
<postalcode>90025</postalcode>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method and apparatus for a client-server independent intermediary mechanism is provided. The method comprises displaying a frame including a user interface of the IIM, the frame framing a destination server display area (DSDA). The method further comprises retrieving data for display from a destination server, and instrumenting the data prior to display such that future data retrieved from the destination server is displayed in the DSDA, without writing over the frame. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to client-server communication, and more specifically, to using an independent intermediary mechanism between a client and a server. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The World-Wide Web (WWW, W3, the Web) is an Internet client-server hypertext distributed information retrieval system. An extensive user community has developed on the Web since its introduction. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a prior art client-server system. The client A <highlight><bold>110</bold></highlight> can access destination servers DS1-DS3 <highlight><bold>150</bold></highlight>-<highlight><bold>170</bold></highlight>. Similarly, other clients B and C, <highlight><bold>120</bold></highlight> <highlight><bold>130</bold></highlight>, can access the destination servers DS1-3 <highlight><bold>150</bold></highlight>-<highlight><bold>170</bold></highlight>. Each destination server may provide different services, information, or other data to the user. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> On the Web everything (documents, menus, indices) is represented to the user as hypertext objects in hypertext markup language (HTML) format, or as Java, or JavaScript objects, or other data types. Hypertext links refer to other documents by their uniform resource identifiers (URIs). The client program, known as a browser, e.g. NCSA Mosaic, Netscape Navigator, runs on the user&apos;s computer and provides two basic navigation operations: to follow a link or to send a query to a server. Users access the web through these browsers. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Users often access the web from multiple locations. Users may access the web from their office, at different locations at work, at home, or on the road. Libraries and Internet cafes make web access available on a walk-in basis as well. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> A user accesses a server by typing the URI of the server into the browser&apos;s address window. The browser then connects to the server corresponding to this URI. Another method of accessing a web site is by selecting the web site from list of bookmarks. The list of bookmarks is resident in the browser in the user&apos;s computer. Thus, if a user wishes to have similar bookmarks on multiple computers, he or she must manually copy the bookmarks and transfer them between the computers. This process is inconvenient. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Furthermore, many servers use cookies to store information about the user. This information may include the user name, password, previous interests, etc. These cookies are also stored in the user&apos;s browser. Again, this means that if the user is accessing the Internet from multiple computers, the user&apos;s cookies have to be duplicated into multiple computers. This process is inconvenient. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Many users have multiple accounts on different computer systems. For example, a user may have an account with a bank, an e-mail account, a personalized portal site account, and an account on an e-commerce server. Currently, the users must log into each of these accounts by remembering and providing his or her user name and password. For security, each of these user names and passwords should be different. Remembering different names and passwords is inconvenient to the user. Thus, a method for a simple log-in into various accounts from any computer would be advantageous. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Most clients and servers support &ldquo;forms&rdquo; which allow the user to enter arbitrary text as well as selecting options from customizable menus and on/off switches. As more business is transacted on the Web, forms are proliferating. The forms may include forms for requesting further information, for ordering items from the Web, for registering for a Web site, etc. However, the user generally can not get a copy of the information filled into the form. The user can either print the page when the form is filled in, generating a paper copy, or rely on the server to respond in a manner that permits the user to make a record of the information entered in to the form. A method of tracking information filled into forms would be advantageous. Furthermore, vendors may respond with an order number or other useful information. The user can keep a copy of this page, is generally only temporarily available, by printing it, or copying down the information provided. A method of attaching this vendor response to the original order information and making both available to the user would be advantageous. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Furthermore, currently, the user has to fill out each of these forms separately. Generally, the forms request the same types of information, i.e. name, address, telephone number, e-mail address, etc. The user has to enter all of this information for each form. This is repetitious and takes time. Additionally, if such information as credit card number or social security number is requested, the user has to pull out the credit card and copy a long string of numbers. This makes errors likely. Furthermore, the user has to verify that a Web site that requests a credit card number or similar confidential information is of the appropriate level of security for the user to feel comfortable sending the information over the Web. An improved method of filling out forms would be advantageous. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> A method and apparatus of a client-server independent intermediary mechanism (IIM) is described. The method comprises displaying a frame including a user interface of the IIM (IIM frame), and a second frame framing a destination server display area (DSDA). The method further comprises retrieving data for display from a destination server, and instrumenting the data prior to display such that future data retrieved from a destination server is displayed in the DSDA, without writing over the IIM frame. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The present invention is illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings and in which like reference numerals refer to similar elements and in which: </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a prior art client-server system. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of one embodiment of the client-server system including the independent intermediary mechanism. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> is a block diagram of one embodiment of the client-server system including multiple independent intermediary mechanisms. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3B</cross-reference> is a block diagram of another embodiment of the client-server system including multiple independent intermediary mechanisms. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram of one embodiment of the independent intermediary mechanism. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram of one embodiment of the layout of the user interface of the independent intermediary mechanism. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flowchart of an overview of using the independent intermediary mechanism. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a flowchart of one embodiment of the process of displaying information from a destination server through the independent intermediary mechanism. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> illustrates one embodiment of the user interface of the independent intermediary mechanism. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> illustrates another embodiment of the user interface of the independent intermediary mechanism. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a flowchart of one embodiment of the form fill functionality. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a flowchart of one embodiment of the learning process in the database. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12A</cross-reference> is a flowchart of one embodiment of adding accounts. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12B</cross-reference> is a flowchart of one embodiment of accessing an account through an auto-log-in feature. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a flowchart of one embodiment of the transaction management functionality. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> illustrates one embodiment of the listing of transactions. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15A</cross-reference> is a flowchart of one embodiment of selection of a home page or a bookmark. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15B</cross-reference> is a flowchart of one embodiment of using the bookmark functionality. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15C</cross-reference> is a flowchart of one embodiment of using the history functionality. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference>A-C are tables illustrating examples of redirecting references to DS through IIM. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a table illustrating examples of making the IIM user interface frame persistent. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a table illustrating examples of accessing cookies from the IIM. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a table illustrating examples of preserving top frame or IIM frame integrity for DS. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> A client-server independent intermediary mechanism is described. The independent intermediary mechanism (IIM) mediates information exchanged between a client and servers by having the client-server communication pass through the IIM. This allows the IIM to offer various services. For one embodiment, the IIM may be used to have a central web-accessible set of bookmarks. The IIM may further provide tracking of transactions on the web, providing a user-accessible transaction record. The IIM may further be used to fill in various forms automatically. The IIM may further be used to access multiple accounts, such as e-mail accounts, bank accounts, etc. with a single button. The IIM may further be used to store the user&apos;s profile, including passwords to various pages, etc. These and other uses of the IIM are described below. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of one embodiment of the client-server system including the independent intermediary mechanism. Multiple clients A-C <highlight><bold>210</bold></highlight>, <highlight><bold>215</bold></highlight>, <highlight><bold>220</bold></highlight> access multiple destination servers (DSs) <highlight><bold>280</bold></highlight>, <highlight><bold>285</bold></highlight>, <highlight><bold>290</bold></highlight>, through the independent intermediary mechanism (IIM) <highlight><bold>250</bold></highlight>. Client A <highlight><bold>210</bold></highlight> is described as an example. It is to be understood that multiple clients are implemented in similar ways. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> Client A <highlight><bold>210</bold></highlight> accesses the IIM <highlight><bold>250</bold></highlight>. For one embodiment, this occurs when the user of the client A <highlight><bold>210</bold></highlight> accesses the web site hosting the IIM <highlight><bold>250</bold></highlight>. When the IIM <highlight><bold>250</bold></highlight> is accessed, a new client component (CC) <highlight><bold>230</bold></highlight> is established. The client component(s) <highlight><bold>230</bold></highlight>, <highlight><bold>235</bold></highlight>, <highlight><bold>240</bold></highlight> and the server component <highlight><bold>260</bold></highlight> together form the IIM <highlight><bold>250</bold></highlight>. For one embodiment, the IIM <highlight><bold>250</bold></highlight> is located on a server accessed by the client A <highlight><bold>210</bold></highlight> through an Internet connection. For another embodiment, the IIM <highlight><bold>250</bold></highlight> is located within the local Intranet of client A <highlight><bold>210</bold></highlight>. For yet another embodiment, the IIM <highlight><bold>250</bold></highlight> is located on the client&apos;s own computer. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> For one embodiment, the client component <highlight><bold>230</bold></highlight> is established on the local computer of the client <highlight><bold>210</bold></highlight>. For another embodiment, the client component <highlight><bold>230</bold></highlight> is on a server, or on a third computer system. The client component <highlight><bold>230</bold></highlight> is created in response to the client <highlight><bold>210</bold></highlight> connecting to the IIM <highlight><bold>250</bold></highlight>. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> The client A <highlight><bold>210</bold></highlight> has a connection to the server component <highlight><bold>260</bold></highlight> through the client component <highlight><bold>230</bold></highlight>. For one embodiment, the client A <highlight><bold>210</bold></highlight> also establishes a direct connection with the server component <highlight><bold>260</bold></highlight>. This direct connection may be used to communicate certain information directly between the server component <highlight><bold>260</bold></highlight> and the client A <highlight><bold>210</bold></highlight>. The client <highlight><bold>210</bold></highlight> accesses the destination servers DS1-3 <highlight><bold>280</bold></highlight>, <highlight><bold>285</bold></highlight>, <highlight><bold>290</bold></highlight> through the IIM <highlight><bold>250</bold></highlight>. For one embodiment, all of the communication between the destination server DS1 <highlight><bold>280</bold></highlight> and the client A <highlight><bold>210</bold></highlight> is routed through the IIM <highlight><bold>250</bold></highlight>. For another embodiment, certain communications are routed directly between the client A <highlight><bold>210</bold></highlight> and the destination server <highlight><bold>280</bold></highlight>. For example, certain large images that do not invoke other images or other data may be routed directly in order to speed up processing. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The number of client components <highlight><bold>230</bold></highlight>, <highlight><bold>235</bold></highlight>, <highlight><bold>240</bold></highlight> depends on the number of clients <highlight><bold>210</bold></highlight>, <highlight><bold>215</bold></highlight>, <highlight><bold>220</bold></highlight> coupled to the server component <highlight><bold>260</bold></highlight> at any one time. For one embodiment, the server component <highlight><bold>260</bold></highlight> consists of multiple components that act together. A block diagram of one embodiment of the IIM <highlight><bold>250</bold></highlight> may be found in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, below. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> is a block diagram of one embodiment of the client-server system including multiple independent intermediary mechanisms <highlight><bold>350</bold></highlight>, <highlight><bold>360</bold></highlight>. Each IIM <highlight><bold>350</bold></highlight>, <highlight><bold>360</bold></highlight> is shown having a corresponding server component, <highlight><bold>355</bold></highlight>, <highlight><bold>365</bold></highlight>. For another embodiment, the server components <highlight><bold>355</bold></highlight>, <highlight><bold>365</bold></highlight> may be located on a single server, or within a single IIM. Having server components <highlight><bold>355</bold></highlight>, <highlight><bold>365</bold></highlight> coupled together may serve multiple purposes. For example, if a single IIM <highlight><bold>350</bold></highlight> has too many users connected to it, the IIM <highlight><bold>350</bold></highlight> may redirect users to a second IIM <highlight><bold>360</bold></highlight>. For another embodiment, a user may log on to a local IIM <highlight><bold>350</bold></highlight>, for speed reasons, and the local IIM <highlight><bold>350</bold></highlight> may connect to the user&apos;s &ldquo;home&rdquo; IIM <highlight><bold>360</bold></highlight> to retrieve the user&apos;s data. For yet another embodiment, the user can connect to their &ldquo;home&rdquo; IIM <highlight><bold>350</bold></highlight>, which is remote, and the &ldquo;home&rdquo; IIM <highlight><bold>350</bold></highlight> may redirect the user to a local IIM <highlight><bold>360</bold></highlight> and send the user&apos;s data to the local IIM <highlight><bold>360</bold></highlight>. In this way, the user&apos;s connection to the IIM <highlight><bold>350</bold></highlight>, <highlight><bold>360</bold></highlight> may be optimized. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3B</cross-reference> is a block diagram of another embodiment of the client-server system including multiple independent intermediary mechanisms. In this example, a client <highlight><bold>310</bold></highlight> is coupled to two IIMs <highlight><bold>350</bold></highlight>,<highlight><bold>360</bold></highlight>. Generally, the client <highlight><bold>310</bold></highlight> first connects to the first IIM <highlight><bold>350</bold></highlight>. Then, through the user interface of the first IIM, the client <highlight><bold>310</bold></highlight> connects to the second IIM <highlight><bold>360</bold></highlight>. This may be advantageous if, for example, the first IIM <highlight><bold>350</bold></highlight> and second IIM <highlight><bold>360</bold></highlight> provide different services. Thus, for example, one IIM <highlight><bold>360</bold></highlight> may provide additional account management features, while the other IIM <highlight><bold>350</bold></highlight> provides form-fill features. By connecting to both IIMs <highlight><bold>350</bold></highlight>, <highlight><bold>360</bold></highlight>, in series, the user has access to the features provided by both IIMs <highlight><bold>350</bold></highlight>, <highlight><bold>360</bold></highlight>. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram of one embodiment of the independent intermediary mechanism. The IIM <highlight><bold>400</bold></highlight> has three layers. The lowest layer of the IIM <highlight><bold>400</bold></highlight> is the core engine <highlight><bold>410</bold></highlight>. The core engine <highlight><bold>410</bold></highlight> includes a server component SC and a client component CC. The Server Component, for one embodiment, is resident on the server, and handles all remote actions. The Client Component, for one embodiment, is resident on the client&apos;s system, while the client is connected to the IIM <highlight><bold>400</bold></highlight>. For one embodiment, the client component is automatically removed from the client&apos;s system when the client disconnects from the IIM <highlight><bold>400</bold></highlight>. The lowest layer also includes a Cookie Manager <highlight><bold>413</bold></highlight>, for managing any cookies received from and being sent to the destination server. The use of such cookies is discussed in more detail below. Furthermore, the lowest layer may include a Activation Manager <highlight><bold>416</bold></highlight>. The Activation Manager <highlight><bold>416</bold></highlight> determines if information is being transmitted by the destination server. For one embodiment the Activation Manager <highlight><bold>416</bold></highlight> further determines if information is being initiated by a user&apos;s action. Information transmitted between the DS and the client is instrumented by the IIM <highlight><bold>400</bold></highlight>, as will be described below. The Activation Manager <highlight><bold>416</bold></highlight> detects when the IIM <highlight><bold>400</bold></highlight> should review communication between the client and the DS. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The second layer is the application/UI framework layer <highlight><bold>420</bold></highlight>. The application/UI framework layer <highlight><bold>420</bold></highlight> establishes the basic user interface and IIM engine. The application/UI framework layer <highlight><bold>420</bold></highlight> creates a persistent frame for the IIM <highlight><bold>400</bold></highlight>. For one embodiment, the application/UI framework layer <highlight><bold>420</bold></highlight> further includes an instrumenting manager <highlight><bold>425</bold></highlight>, for instrumenting data flowing from the destination server to the client, through the IIM <highlight><bold>400</bold></highlight>. This process of instrumenting is described in more detail below. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The third layer is the applications layer. The applications layer includes multiple applications. The applications listed here are listed as an example, and are not a complete list. The applications layer, for example, may include a Navigation Manager <highlight><bold>430</bold></highlight>. The Navigation Manager <highlight><bold>430</bold></highlight> permits a user to navigate from destination server to destination server using the IIM <highlight><bold>400</bold></highlight>. The applications layer may further include a Transaction Manager <highlight><bold>440</bold></highlight>. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> The Transaction Manager <highlight><bold>440</bold></highlight> tracks the user&apos;s transactions, stores them, and makes them available for the user&apos;s review. Transactions are interactions in which a user submits information to a destination server, for example to order an item, ask a question, or otherwise interact with the destination server. The Transaction Manager <highlight><bold>440</bold></highlight> tracks the data submitted by the user, and any response from the destination server, and permits the user to access this information. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> The Account Manager <highlight><bold>450</bold></highlight> permits the user to log into a variety of accounts, from e-mail to stock trading accounts, using a single click. The Account Manager <highlight><bold>450</bold></highlight> further permits the user to add accounts to this list. The Form Manager <highlight><bold>460</bold></highlight> permits the user to fill out forms encountered on destination servers via a single click. This is extremely useful for users that transact business on the web, and often fill out identical forms many times. The Profile Manager <highlight><bold>470</bold></highlight> is the database of the user&apos;s personal information. This information may be edited by the user, and is used to fill in forms via the form manager <highlight><bold>460</bold></highlight>. The Database Manager <highlight><bold>480</bold></highlight> manages the various databases of the IIM <highlight><bold>400</bold></highlight>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The Bookmark Manager <highlight><bold>490</bold></highlight> permits the user to manage bookmarks maintained within the IIM <highlight><bold>400</bold></highlight>. Having bookmarks, URIs of pages the user wishes to save, available in the IIM <highlight><bold>400</bold></highlight> permits the user to access his or her bookmark list from any computer. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> The History Manager <highlight><bold>495</bold></highlight> permits the user to manipulate the history list of sites the user has previously visited. For one embodiment, the user can change the permanence of the history lists, for another embodiment, the user can delete certain sites from the history list. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The Homepage Manager <highlight><bold>497</bold></highlight> permits the user to set a homepage that is displayed when the user initially connects to the server providing the IIM <highlight><bold>400</bold></highlight>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> As can be seen, the IIM provides multiple functionalities. A single IIM <highlight><bold>400</bold></highlight> may include all of the functionalities described above, additional functionalities, or some subset of these functionalities. The IIM&apos;s functionality may be extended with additional features. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram of one embodiment of the layout of the user interface of the independent intermediary mechanism. The client browser application window <highlight><bold>510</bold></highlight> is displayed by a browser, such as Netscape Navigator or Microsoft Internet Explorer. The client side display area (CSDA) <highlight><bold>520</bold></highlight> is the display area available in the browser application window <highlight><bold>510</bold></highlight>. Most browsers have a toolbar and other displays within the browser application window <highlight><bold>510</bold></highlight>. For one embodiment, the IIM is designed to minimize the area of the browser application window that is not the CSDA <highlight><bold>520</bold></highlight>. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> The CSDA <highlight><bold>520</bold></highlight> includes a toolbar frame <highlight><bold>530</bold></highlight>. Although the tool bar frame <highlight><bold>530</bold></highlight> is referred to as a frame, for one embodiment, the tool bar frame <highlight><bold>530</bold></highlight> may be implemented in a non-frame format. For one embodiment, the tool bar may be implemented as a separate window. For another embodiment, the tool bar may be implemented as part of the display, not as a frame. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> The CSDA <highlight><bold>520</bold></highlight> further includes a destination server display area (DSDA) <highlight><bold>540</bold></highlight>. The DSDA <highlight><bold>540</bold></highlight> is the area in which all information from destination servers is presented. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> The CSDA <highlight><bold>520</bold></highlight> further includes a communications frame <highlight><bold>550</bold></highlight>. The communications frame <highlight><bold>550</bold></highlight> is for communication between the client side and server side of the IIM. Generally, the communications frame <highlight><bold>550</bold></highlight> is hidden from the user&apos;s view. Thus, the user would not see the communication between the client component and the server component. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flowchart of an overview of using the independent intermediary mechanism. At block <highlight><bold>610</bold></highlight>, the user connects to the IIM through the client browser. For one embodiment, this is done by typing the address of the IIM into the address window of the browser. For one embodiment, the IIM may be the preset homepage of the user, or a bookmark in the client browser. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> At block <highlight><bold>615</bold></highlight>, the user connects to a destination server (DS) through the IIM. For one embodiment, this is done by typing the address of the destination server into the address window of the IIM. For another embodiment, the user may select an address from a history list of previously visited sites, from a bookmark list in the IIM, or the destination server may be a preset homepage in the IIM. The IIM records the DS in the history database. The history database tracks the web sites that the user has visited in the past. Such a history database may be useful to permit backtracking, or to visit previously visited sites. For one embodiment, this history database is maintained for a fixed duration of time, or a user preset period of time. For another embodiment, the history database is maintained indefinitely. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> At block <highlight><bold>620</bold></highlight>, the process changes the reference to DS to go through the IIM and load the information from the DS in the DSDA, maintaining the IIM frame. This is described in more detail below. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> At block <highlight><bold>625</bold></highlight>, the IIM determines whether the user submitted information to the destination server. For one embodiment, the actual test is whether information that is &ldquo;sensitive&rdquo; or &ldquo;of interest&rdquo; is submitted to the DS. For example, if a user selected a radio button for the next display, the response would be &ldquo;no&rdquo; even though some information was submitted. For one embodiment, the answer to this query is yes only if information that is in the user&apos;s profile is submitted. For one embodiment, the answer to this query is provided by the user through the user interface. If the answer is yes, the process continues to block <highlight><bold>630</bold></highlight>. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> At block <highlight><bold>630</bold></highlight>, the user&apos;s communication with the DS is recorded in the user&apos;s transaction database. For example, if the user ordered an item from a destination server site, the form that was filled in by the user, including all of the information filled in, would be recorded in the transaction database. This transaction database is available to the user. The process then continues to block <highlight><bold>635</bold></highlight>. If, at block <highlight><bold>625</bold></highlight>, the answer was no, the process continues directly to block <highlight><bold>635</bold></highlight>. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> At block <highlight><bold>635</bold></highlight>, the IIM forwards the communication, i.e. the information submitted by the user, to the DS. This communication includes relevant cookies. A cookie is a packet of information sent by a destination server to a browser and then sent back by the browser each time it accesses that server. Cookies can contain any arbitrary information the server chooses and they are used to maintain state between otherwise stateless transactions. Generally, cookies are maintained in a user&apos;s browser. However, for one embodiment, the IIM maintains the user&apos;s cookies. This permits a user to log into a site, and have the appropriate cookies available, no matter from what web client device or client browser the user accesses the site. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> At block <highlight><bold>640</bold></highlight>, the process determines whether the destination server responded to the user&apos;s submission of information. For one embodiment, some destination servers respond, with a thank you page, other data pertaining to order number, shipping code, delivery date, etc., when information is submitted to them. If the destination server responds at block <highlight><bold>640</bold></highlight>, the process continues to block <highlight><bold>645</bold></highlight>. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> At block <highlight><bold>645</bold></highlight>, the DS&apos;s response is recorded in the user&apos;s transaction database, and associated with the user&apos;s submitted information. Thus, when the user reviews the transaction, he or she can review the entire transaction, including the DS&apos;s response. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> At block <highlight><bold>650</bold></highlight>, the IIM instruments the DS&apos;s response, stores any cookies returned by the DS, and forwards the response to the client browser. One embodiment of this process is illustrated in more detail in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, below. Tables of some results of the process of instrumenting are illustrated in FIGS. <highlight><bold>16</bold></highlight>A-C, and FIGS. <highlight><bold>17</bold></highlight>-<highlight><bold>19</bold></highlight>. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> At block <highlight><bold>655</bold></highlight>, the process tests whether the user continues to browse through the IIM. The user continues to browse, the process returns to block <highlight><bold>615</bold></highlight>. Otherwise, the process ends at block <highlight><bold>660</bold></highlight>. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a flowchart of one embodiment of the process of instrumenting data displayed from a destination server through the independent intermediary mechanism. For one embodiment, <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a more detailed flowchart of block <highlight><bold>650</bold></highlight>, in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. At block <highlight><bold>705</bold></highlight>, the IIM receives a communication from the DS. For one embodiment, this occurs in response to a user contacting a DS through the IIM. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> By block <highlight><bold>710</bold></highlight>, the process tests whether there is a cookie or multiple cookies associated with the communication. Cookies may be sent by the DS to the client, to be stored on the client browser. If a cookie is associated with the communication, the process continues to block <highlight><bold>715</bold></highlight>. At block <highlight><bold>715</bold></highlight>, the IIM cookie database is updated with the new cookie. For one embodiment, cookies sent by the DS to the client browser are handled through the IIM. Thus, the IIM would store all of the cookies for a DS, and give the DS its cookies. This is advantageous because it permits a user to access a DS from any computer, and all of the user&apos;s cookies are immediately available through the IIM. The process then continues to block <highlight><bold>725</bold></highlight>. If no cookies were associated with the communication, the process continues directly to block <highlight><bold>725</bold></highlight>. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> At block <highlight><bold>725</bold></highlight>, the process parses the code to find the next keyword. For one embodiment, keywords are tags in HTML, or known keywords in Java or JavaScript. FIGS. <highlight><bold>16</bold></highlight>-<highlight><bold>19</bold></highlight> illustrate some examples of keywords that may trigger this process. For another embodiment, keywords may be any triggering signal that indicates that an action may be performed. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> At block <highlight><bold>730</bold></highlight>, the process tests whether a keyword was found. If no keyword was found, the process continues to block <highlight><bold>735</bold></highlight>, and ends. If the communication has no remaining keywords, the document has been fully instrumented, and is ready for display to the user. For one embodiment, certain communications may have no keywords at all. In that case, this process would end after a single pass. For yet another embodiment, under some circumstances, the process may ignore certain keywords. Certain references are not altered in the communication. For example, references that call static images, images that do not communicate information to the user and do not have embedded references, may be of no interest. For example, if the keyword calls a large passive figure with multiple components, the process may ignore the entire figure, by tagging figure related communications, and exit out of this process even if keywords remain. By altering only those references that are of interest, the process may be sped up. If a keyword was found, the process continues to block <highlight><bold>740</bold></highlight>. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> At block <highlight><bold>740</bold></highlight>, the process tests whether the keyword is an attempt to access a cookie from the cookie database. If the keyword is an attempt to access a cookie, the process continues to block <highlight><bold>745</bold></highlight>. At block <highlight><bold>745</bold></highlight>, the access attempt is changed to fetch the cookie from the IIM&apos;s cookie database. Some examples of this process are provided in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>. For one embodiment, the IIM&apos;s cookie database may access the client browser&apos;s cookie database in order to determine whether there are additional cookies on the client browser. For one embodiment, the IIM can, with the user&apos;s permission, copy cookies from the browser cookie database to the IIM. This simplifies moving from direct access of a DS to accessing a DS through the IIM. The process then continues to block <highlight><bold>750</bold></highlight>. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> If the keyword is not an attempt to access a cookie, the process continues directly to block <highlight><bold>750</bold></highlight>. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> At block <highlight><bold>750</bold></highlight>, the process tests whether the keyword is an attempt to access the top frame or IIM frame. If the keyword is an attempt to access the top frame or IIM frame, the process continues to block <highlight><bold>755</bold></highlight>. At block <highlight><bold>755</bold></highlight>, the access attempt is changed to access the top area of the destination server display area (DSDA). Some examples of this process are provided in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>. The process then continues to block <highlight><bold>760</bold></highlight>. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> If the keyword is not an attempt to access the top of IIM frame, the process continues directly to block <highlight><bold>760</bold></highlight>. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> At block <highlight><bold>760</bold></highlight>, the process tests whether the keyword is a reference to the destination server. If the keyword is a reference to the destination server, the process continues to block <highlight><bold>765</bold></highlight>. At block <highlight><bold>765</bold></highlight>, the reference is changed to be fetched through the IIM. Some examples of this process are provided in <cross-reference target="DRAWINGS">FIG. 16</cross-reference>A-C. The process then continues to block <highlight><bold>770</bold></highlight>. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> If the keyword is not a reference to the destination server, the process continues directly to block <highlight><bold>770</bold></highlight>. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> At block <highlight><bold>770</bold></highlight>, the process tests whether the keyword is an attempt to access data from the top frame or IIM frame. If the keyword is an attempt to access data from the top frame or IIM frame, the process continues to block <highlight><bold>775</bold></highlight>. At block <highlight><bold>775</bold></highlight>, the access attempt is changed to fetch data from the topmost frame of the DSDA. Some examples of this process are provided in <cross-reference target="DRAWINGS">FIG. 19</cross-reference>. The process then returns to block <highlight><bold>725</bold></highlight>, and parses to find the next keyword. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> For one embodiment, the above process may be triggered by a user. For example, a user may select a link, activate a JavaScript function, or otherwise initiate communication between the destination server and the client. The same process may occur in response to a cookie being sent or received, or a keyword being found as described above with respect to <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> illustrates one embodiment of the user interface of the independent intermediary mechanism. The user interface includes a browser toolbar <highlight><bold>805</bold></highlight>. For one embodiment, the IIM may configure the browser such that the browser toolbar area <highlight><bold>805</bold></highlight> is not displayed when the IIM is active. The display area <highlight><bold>810</bold></highlight> of the browser includes the IIM toolbar <highlight><bold>820</bold></highlight>, a hidden communications frame <highlight><bold>815</bold></highlight>, and the destination server display area <highlight><bold>845</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> The IIM toolbar <highlight><bold>820</bold></highlight> includes the known browser controls <highlight><bold>825</bold></highlight>, such as back, forward, refresh, stop, etc. Additional browser controls <highlight><bold>825</bold></highlight> may be added. The toolbar <highlight><bold>820</bold></highlight> further includes an address entry control <highlight><bold>830</bold></highlight>, where a user can type a destination server address in order to access the DS. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> The IIM toolbar <highlight><bold>820</bold></highlight> may further include buttons, or other selection mechanisms that permit a user to configure and use the IIM. The buttons may include Home, selecting a user&apos;s preset homepage, etc. The homepage is preset using the Set Home button <highlight><bold>852</bold></highlight>. The buttons may further include the Mall button, giving one-button access to shopping. The buttons may further include Tags <highlight><bold>860</bold></highlight>, displaying a list of a user&apos;s bookmarks. Bookmarks are added by selecting the Tag Address while visiting a web site, or by selecting the Tag Address button <highlight><bold>862</bold></highlight>, and typing the address of a location to be bookmarked. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> The buttons may further include Accounts <highlight><bold>865</bold></highlight>, permitting single-button log-on to a variety of accounts. These accounts are added with the Add Account button <highlight><bold>867</bold></highlight>, as will be described below. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> The buttons may also include a Transactions button <highlight><bold>870</bold></highlight>, that permits a user to review his or her transactions. This is illustrated in the destination server display area <highlight><bold>845</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. The Profile button <highlight><bold>875</bold></highlight> permits the user to enter his or her personal data. The Fill-Form button <highlight><bold>880</bold></highlight> permits the user to fill in a form using the personal data from the user&apos;s profile or by using information submitted previously using the same form. If a form is displayed on the destination server display area <highlight><bold>845</bold></highlight>, and the user selects the fill-form button <highlight><bold>880</bold></highlight>, the form is automatically filled in with the user&apos;s information. The Clear Form button <highlight><bold>882</bold></highlight> permits a user to remove the information filled into a form. This provides an additional level of security to the user. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> The Admin button <highlight><bold>885</bold></highlight> provides access to account administration services. For one embodiment, the Admin button <highlight><bold>885</bold></highlight> is only available to those users who are authorized administrators. For one embodiment, the Admin button <highlight><bold>885</bold></highlight> is only displayed if the user is authorized to access account administration services. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> The toolbar <highlight><bold>820</bold></highlight> further includes a Bye button <highlight><bold>890</bold></highlight>, which logs off the user from the IIM. The toolbar <highlight><bold>820</bold></highlight> illustrated is exemplary. The content and organization of the buttons on the toolbar <highlight><bold>820</bold></highlight> may be changed without changing the invention. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> illustrates another embodiment of the user interface of the independent intermediary mechanism. As can be seen, the user interface may be flexibly implemented. Certain features may be provided by one interface and not provided by another. Furthermore, the look and feel of the user interface may be altered. The user may, for example, access all of the IIM features through pull-down menus, such as the pull-down menu <highlight><bold>935</bold></highlight>, or radio buttons instead of buttons. One skilled in the art understands other types of user interface changes that may be made without departing from the broader spirit and scope of the invention as set forth in the appended claims. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a flowchart of one embodiment of the form fill functionality. At block <highlight><bold>1010</bold></highlight>, a document with a form is displayed. For one embodiment, this is a result of a user accessing a destination server location that includes a form. This form may be an order form, an information request form, or any other form that may be encountered on the Web. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> At block <highlight><bold>1015</bold></highlight>, the user requests the form-fill function through the IIM user interface. For one embodiment, the user presses the form-fill button. For another embodiment, the form fill may be automated. For yet another embodiment, the user can select whether the form fill function is automatically engaged. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> At block <highlight><bold>1020</bold></highlight>, the process determines whether the form is in the user&apos;s transaction database. The user&apos;s transaction database has records of previously accessed and filled-in forms for the particular user. The transaction database may maintain such records for a limited time, or the user may delete transaction records. Thus, merely because a user has been to a particular site previously may not mean that the form is in the user&apos;s transaction database. If the form is in the user&apos;s transaction database, the process continues to block <highlight><bold>1040</bold></highlight>, otherwise, the process continues to block <highlight><bold>1025</bold></highlight>. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> At block <highlight><bold>1025</bold></highlight>, the process determines whether the form is in the form database. The form database is maintained by the IIM and includes &ldquo;known&rdquo; forms. Such known forms have associations between form control identifiers in the form and profile items. Thus, for example, a form control identifier that is labeled &ldquo;name&rdquo; may have a link to the &ldquo;First Name Last Name&rdquo; item in the user profile. If the form is known, the process continues to block <highlight><bold>1030</bold></highlight>. At block <highlight><bold>1030</bold></highlight>, the form control identifiers in the form are filled in from the user profile. The process then returns to block <highlight><bold>1055</bold></highlight>. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> If the form is not known, the process continues to block <highlight><bold>1035</bold></highlight>. At block <highlight><bold>1035</bold></highlight>, the form controls are identified, based on the name of each control. Each control name is associated with entries in the user profile. The process then continues to block <highlight><bold>1030</bold></highlight>, and the data is filled into the form from the user profile. For one embodiment, block <highlight><bold>1035</bold></highlight> is skipped. This type of &ldquo;guessing&rdquo; may be user enabled, or may be only attempted for forms that are similar to known forms. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> At block <highlight><bold>1020</bold></highlight>, if the form was found in the user&apos;s transaction database, the process continued to block <highlight><bold>1040</bold></highlight>. At block <highlight><bold>1040</bold></highlight>, the process tests whether any data in the user profile has been changed since the transaction in the transaction database was recorded. Transaction records are dated, as are changes to the user profile. A user profile may be changed by the user, for example, to change a credit card expiration date, number, or home address. If a user profile change of a relevant field is dated after the transaction record date, the process continues to block <highlight><bold>1045</bold></highlight>, otherwise, the process continues directly to block <highlight><bold>1050</bold></highlight>. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> At block <highlight><bold>1045</bold></highlight>, the changed information is filled in from the user profile. In this way, the user only had to update his or her records once, in the profile, and that change is carried through the IIM. For one embodiment, this step may be skipped. For another embodiment, this step may be user enabled. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> At block <highlight><bold>1050</bold></highlight>, the remaining form control identifiers in the form are filled with data from the transaction database. The process then continues to block <highlight><bold>1055</bold></highlight>. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> At block <highlight><bold>1055</bold></highlight>, the filled-in form is displayed to the user, and the user is permitted to edit the data in the form. The user, for example, may not wish to provide certain data to a destination server. The user may chose to erase such data. Alternatively, the form may request data that is not found in the user&apos;s profile. The user may chose to fill in such data. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> At block <highlight><bold>1060</bold></highlight>, the user submits the form to the destination server. For one embodiment, the IIM stores the information submitted to the server in the user&apos;s transaction database. This is illustrated in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> below. At block <highlight><bold>1065</bold></highlight>, the process ends. For one embodiment, the user may optionally select whether to use the user profile, transaction database, or both, and in what order, for form fill functions. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a flowchart of one embodiment of the learning process in the database. At block <highlight><bold>1110</bold></highlight>, a privileged user connects to the IIM. For one embodiment, this privileged user is an employee of the group maintaining the IIM. For another embodiment, this &ldquo;user&rdquo; is an artificial intelligence unit that is used to identify forms, as will be described below. Such intelligent recognition programs are known in the art. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> At block <highlight><bold>1120</bold></highlight>, the privileged user accesses a destination server page with a form through the IIM. At block <highlight><bold>1130</bold></highlight>, the IIM displays a user interface for cataloguing the form. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> At block <highlight><bold>1140</bold></highlight>, the user maps each form control to an element in the user profile object. The user profile is set up to contain a large number of possible data elements. Each form control should have a corresponding profile element. If no profile element is found for a form control, that form control may be tagged as &ldquo;form specific.&rdquo; For one embodiment, multiple elements in the user profile may be associated with a single form control, or vice versa. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> At block <highlight><bold>1150</bold></highlight>, other information about the form is added. This information may include such information as the address of the form, whether the connection with the destination server that serves the form is a secure connection, whether the form is of a particular classification, etc. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> At block <highlight><bold>1160</bold></highlight>, the user submits the information to the IIM. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> At block <highlight><bold>1170</bold></highlight>, the IIM updates the form identification and form description in the form database to include the information added by the user. For one embodiment, the updating is a periodic batch updating. For one embodiment, a single central form database is maintained. In that instance, the IIM&apos;s updating may include sending the new form to other IIMs. Alternatively, each IIM may maintain its own separate form database. For yet another embodiment, an IIM may have a central form database, and a separate internal form database. This may be useful, for example, for an IIM implemented within a company which has the general form database for pages accessed outside the company, and a separate internal database for internal web page forms. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> At block <highlight><bold>1180</bold></highlight>, the process ends. Of course, the privileged user may enter multiple entries, and may start the process again at block <highlight><bold>1120</bold></highlight>. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12A</cross-reference> is a flowchart of one embodiment of adding accounts. At block <highlight><bold>1210</bold></highlight>, the user connects to the IIM through a client browser. At block <highlight><bold>1220</bold></highlight>, the user accesses a destination server through the IIM. For one embodiment, the user accesses the account log-in page of the DS. This may be, for example, the account log-in page of the user&apos;s bank, of a portal, or of any other DS. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> At block <highlight><bold>1230</bold></highlight>, the user requests to add the account to the user&apos;s account database. Each user may have an account database, which includes a list of accounts the user can access with a single click. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> At block <highlight><bold>1235</bold></highlight>, the process determines whether the user has submitted login information to the account log-in page. If the user has not submitted the information, the process continues to block <highlight><bold>1240</bold></highlight>, and the user is prompted to complete the log-in process. For one embodiment, if the account log-in process includes multiple pages, the user may indicate the end of the log-in process by pressing a certain key, or through other means. The process then continues to block <highlight><bold>1245</bold></highlight>. If the user has submitted all of the log-in information, the process continues to block <highlight><bold>1245</bold></highlight> directly. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> At block <highlight><bold>1245</bold></highlight>, the account entry is added to the user&apos;s account database. The account log-in information and data of account entry creation are recorded. For one embodiment, further information may be recorded. For yet another embodiment, only the user&apos;s log-in procedure is recorded. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> At block <highlight><bold>1250</bold></highlight>, the account information is submitted to the DS for login. At block <highlight><bold>1255</bold></highlight>, the process ends. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12B</cross-reference> is a flowchart of one embodiment of accessing an account through an auto-log-in feature. At block <highlight><bold>1260</bold></highlight>, the user connects to the IIM. At block <highlight><bold>1265</bold></highlight>, the user accesses the account auto-log-in feature using the IIM user interface. For one embodiment, this is done by the user pushing the account button. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> At block <highlight><bold>1270</bold></highlight>, the user selects an account to log into. For one embodiment, the user may have multiple accounts. In that instance, the IIM displays the accounts that the user has. For another embodiment, if the user only has a single account, that account is automatically selected when the user accesses the auto-log-in feature. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> At block <highlight><bold>1275</bold></highlight>, the IIM retrieves login information from the user&apos;s account database. As discussed above, the user&apos;s previous account log-in is monitored and recorded. This information is retrieved at block <highlight><bold>1275</bold></highlight>. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> At block <highlight><bold>1280</bold></highlight>, the IIM sends the log-in information to the appropriate destination server to log-in the user. The account information includes the address of the DS. The IIM accesses the DS as a client, and sends the user&apos;s information. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> At block <highlight><bold>1285</bold></highlight>, the IIM instruments the DS&apos;s response and sends it to the user&apos;s browser for display. As discussed above, the response is instrumented such that references of interest are routed through the IIM. The user can now use the account, as usual. At block <highlight><bold>1290</bold></highlight>, the process ends. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a flowchart of one embodiment of the transaction management functionality. At block <highlight><bold>1310</bold></highlight>, the user connects to the IIM. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> At block <highlight><bold>1320</bold></highlight>, the user transmits information in a form to the destination server. For one embodiment, the user first accesses a destination server page including a form through the IIM. This form may be an order form, an e-mail form, or any other type of form. The user then fills in the form and submits it to the DS. For one embodiment, the user may use the form-fill method described above to fill-in the form. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> At block <highlight><bold>1330</bold></highlight>, the process determines whether the user sent the user&apos;s email address to the DS. The user may submit his or her e-mail address so the DS can send responses directly to the user&apos;s e-mail. For example, certain systems may send confirmation e-mails or alert notices to the user via e-mail. If the user submitted his or her e-mail address, the process continues to block <highlight><bold>1340</bold></highlight>. Otherwise, the process continues directly to block <highlight><bold>1350</bold></highlight>. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> At block <highlight><bold>1340</bold></highlight>, the e-mail address submitted to the DS is altered. Specifically, the e-mail address is bifurcated, generated two e-mails. The first email goes to the user&apos;s e-mail address, as entered. The second e-mail goes to the IIM. The second e-mail includes in its address the IIM and the transaction tag that identifies the transaction number to which the e-mail belongs. This allows the IIM to handle the e-mail. The process then returns to block <highlight><bold>1350</bold></highlight>. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> At block <highlight><bold>1350</bold></highlight>, the IIM records a transaction in the user&apos;s transaction database and associates the submitted information with the transaction. The transaction, for one embodiment, has a transaction number. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> At block <highlight><bold>1360</bold></highlight>, the IIM determines whether there is a response from the DS. If there is a response, the process continues to block <highlight><bold>1370</bold></highlight>. Otherwise, the process continues directly to block <highlight><bold>1380</bold></highlight>. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> At block <highlight><bold>1370</bold></highlight>, the IIM records the response from the DS in the user&apos;s transaction database. For one embodiment, the destination server may respond to the user. This response is associated with the transaction record. In this way, the user may review the transaction record, including the response. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> At block <highlight><bold>1380</bold></highlight>, further information is recorded about the transaction. For one embodiment, this information may include the date and time of the transaction, and other information. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> At block <highlight><bold>1390</bold></highlight>, any notes, data, or e-mails received with the transaction tag are attached to the transaction. This may occur at any time, while the transaction is being recorded, or after that. The user may attach any data to the transaction, and the IIM may automatically attach any e-mails received with the transaction tag. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> At block <highlight><bold>1395</bold></highlight>, the process ends. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> illustrates one embodiment of the listing of transactions. The transaction list <highlight><bold>1410</bold></highlight> may be sorted by date, using a menu <highlight><bold>1425</bold></highlight>. The transactions may also be sorted by type <highlight><bold>1435</bold></highlight>. For one embodiment, alternative methods of searching transactions may also be implemented. For example, a user may search the transaction records for purchases from a certain destination server. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> Each transaction record may include one or more of the following: date <highlight><bold>1420</bold></highlight>, transaction type <highlight><bold>1430</bold></highlight>, and description <highlight><bold>1440</bold></highlight> of the transaction. The record may further include the place <highlight><bold>1450</bold></highlight>, the location from where the transaction was recorded. The user may add and edit additional notes <highlight><bold>1460</bold></highlight>. Furthermore, the user may also add attachments <highlight><bold>1415</bold></highlight> to the transaction record. For example, the user may attach e-mails, documents, video, or other types of data. For one embodiment, e-mails may be redirected through the IIM and automatically attached to the transaction. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> The vendor response <highlight><bold>1470</bold></highlight> is also recorded. The information the user provided <highlight><bold>1480</bold></highlight> during the transaction is also included in the transaction record. The transaction may further include the information whether the transaction belongs to one of the accounts <highlight><bold>1490</bold></highlight> in the user&apos;s account database. The user is permitted to delete selected transaction records using a delete button <highlight><bold>1465</bold></highlight>. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15A</cross-reference> is a flowchart of one embodiment of selection of a home page. The user connects to the IIM at block <highlight><bold>1505</bold></highlight>. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> At block <highlight><bold>1510</bold></highlight>, the user accesses a destination server page through the IIM. At block <highlight><bold>1515</bold></highlight>, the process determines which option the user is selecting. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> If the user is selecting the add bookmark option, the process continues to block <highlight><bold>1525</bold></highlight>. At block <highlight><bold>1525</bold></highlight>, the address of the page is added to the user&apos;s bookmark database. This database is accessible to the user, to permit the user to access various web sites without typing the address of the site. The process then continues to block <highlight><bold>1530</bold></highlight>, and ends. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> If the user selected the set home page option at block <highlight><bold>1515</bold></highlight>, the address of the page is set as the user&apos;s homepage. The user&apos;s homepage is called up when the user initially connects to the IIM. For one embodiment, the homepage is preset. For another embodiment, the user may not alter the homepage, and the homepage is customizable but includes advertising. The process then continues to block <highlight><bold>1530</bold></highlight>, and ends. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15B</cross-reference> is a flowchart of one embodiment of using the bookmark functionality. At block <highlight><bold>1535</bold></highlight>, the user connects to the IIM. At block <highlight><bold>1540</bold></highlight>, the user requests access to the user&apos;s bookmarks through the IIM user interface. For one embodiment, the user requests the bookmarks by pressing the &ldquo;Tags&rdquo; button on the user interface. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> At block <highlight><bold>1545</bold></highlight>, the IIM generates a bookmark list from the user&apos;s bookmark database, and sends the list to the client browser to display. For one embodiment, the bookmark list is displayed in the destination server display area. For another embodiment, the bookmark list is displayed in a separate window, or a separate frame. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> At block <highlight><bold>1550</bold></highlight>, the user selects a bookmark to access a destination server page. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> At block <highlight><bold>1555</bold></highlight>, the IIM fetches the page address corresponding to the selected bookmark from the bookmark database. The bookmark database includes the actual address of the bookmark. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> At block <highlight><bold>1560</bold></highlight>, the destination server page is fetched by the IIM. The data from the destination server is instrumented and is sent to the client browser for display. In this way, the user can access bookmarks stored in the IIM&apos;s bookmark database. The process then continues to block <highlight><bold>1565</bold></highlight>, and ends. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15C</cross-reference> is a flowchart of one embodiment of using the history functionality. At block <highlight><bold>1570</bold></highlight>, the user connects to the IIM. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> At block <highlight><bold>1575</bold></highlight>, the user requests access to the history list through the IIM user interface. The history list includes the sites the user previously visited. For one embodiment, the history list is maintained for only a period of time, such as thirty days. For another embodiment, the history list is maintained indefinitely, and may be purged by the user. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> At block <highlight><bold>1580</bold></highlight>, the IIM generates a history list from the user&apos;s history database, and sends the history list to the client browser for display. For one embodiment, the history list is displayed in the destination server display area. For another embodiment, the history list is displayed in a separate window, or a separate frame </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> At block <highlight><bold>1582</bold></highlight>, the user selects a list entry to access the destination server page. At block <highlight><bold>1585</bold></highlight>, the IIM fetches the page address from the history database. The page address is referenced through the IIM. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> At block <highlight><bold>1590</bold></highlight>, the IIM fetches the destination server page, instruments the communication, and sends the data to the client browser for display. At block <highlight><bold>1595</bold></highlight>, the process ends. In this way, the IIM permits a user to access a variety of services through the IIM. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> FIGS. <highlight><bold>16</bold></highlight>A-C show sample alterations of references from the destination server by the IIM. FIGS. <highlight><bold>16</bold></highlight>A-C illustrate changes to HTML, HTTP protocol, JavaScript, and Java. For one embodiment, this technique may be expanded to new languages and other types of interfaces. The data that is normally communicated directly between a Destination Server (DS) and client browser is altered by the IIM, as shown by FIGS. <highlight><bold>16</bold></highlight>A-C. For one embodiment, some data may be transmitted directly between the DS and the client browser, without passing through the IIM. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> For one embodiment, the IIM performs a subset of the message modifications required for redirection and downloads the client component to the client&apos;s browser, which performs the remaining subset of message modifications on the client machine. Together these two subsets of message modifications provide a complete solution for using an independent intermediary mechanism between a client and a server. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> The modification of HTTP communication messages for redirection occurs on both the IIM and the client browser using the client component. The points at which the message modifications occur are called &ldquo;HTTP control points&rdquo;. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> FIGS. <highlight><bold>16</bold></highlight>A-C illustrate examples of HTTP control points that occur on the client browser and the IIM. For HTTP message documents, description of modification code covers the three programming languages that are most widely used today for HTTP communication: HTML, JavaScript and Java. For another embodiment, the IIM utility may be broadened to include HTTP control points in other programming languages used for HTTP message documents. For one embodiment, the protocol modified in the messages is defined by the HTTP specification standard. One skilled in the art would understand how to expand the technique described to different programming languages or message protocols. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a table illustrating examples of making the IIM user interface frame persistent. The IIM prevents DS&apos;s from overwriting the user interface of the IIM. This permits the user to access the IIM regardless of what DS he or she is accessing. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a table illustrating examples of accessing cookies from the IIM. Generally, the destination server and destination server data on the client system access the cookie cache on the client&apos;s computer system. The IIM modifies the access mechanisms to access cookies from the IIMs cookie database. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a table illustrating examples of preserving top frame or IIM frame integrity for DS. Objects are often hung from the top frame of the client browser. The IIM changes the references to the top frame to create or access these objects to references to the top frame of DSDA. In this way, the objects are appropriately handled. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> FIGS. <highlight><bold>16</bold></highlight>-<highlight><bold>19</bold></highlight> list some sample alterations resulting from the code instrumenting described above. Alternative methods of altering the code may be used. One skilled in the art knows how to implement different changes. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> In the foregoing specification, the invention has been described with reference to specific exemplary embodiments thereof. It will, however, be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention as set forth in the appended claims. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of accessing data through an independent intermediary mechanism (IIM), the method comprising: 
<claim-text>displaying a frame including a user interface of the IIM, the frame framing a destination server display area (DSDA); </claim-text>
<claim-text>retrieving destination server data (DS data) for display from a destination server; </claim-text>
<claim-text>instrumenting the DS data prior to display such that future data retrieved from the destination server is displayed in the DSDA, without writing over the frame displaying the user interface of the IIM. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>altering requests for cookies such that cookies relevant to the destination server are accessed from the IIM. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>determining if a user&apos;s portion of the IIM includes a cookie for the destination server, and serving the cookie to the destination server and to the DS data, if the user&apos;s portion includes the cookie. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, further comprising determining if a browser includes the cookie, and if the browser includes the cookie: 
<claim-text>serving the cookie to the destination server and the DS data; and </claim-text>
<claim-text>saving the cookie in the user&apos;s portion of the IIM. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein cookies received from the destination server or created by the DS data are stored in a user&apos;s portion of the IIM. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein at least one reference in the DS data to other DS data is redirected through the IIM. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of instrumenting data prior to display comprises replacing a reference to a top frame or IIM frame with a reference to a top of the DSDA. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein said step of replacing comprises, 
<claim-text>in HTML, determining if a value of a Target attribute is &ldquo;_top&rdquo;, and changing the value to represent a topmost area of the DSDA. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein said step of replacing comprises, 
<claim-text>in Java, determining if a value of a Target attribute is &ldquo;_top&rdquo;, and changing the value to represent a topmost area of the DSDA. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein said step of replacing comprises, in JavaScript, replacing the reference to &ldquo;top&rdquo; with a reference to a topmost area of the DSDA. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein for predefined JavaScript, HTML and other code, the step of instrumenting is performed on a server side of the IIM, and wherein for dynamically generated code, the step of instrumenting is performed on a client side of the IIM. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of altering data prior to display comprises replacing the DS data references to a reference through the IIM. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein only selected references are routed through the IIM. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein said step of replacing comprises altering a language of the reference such that any parameter which when set causes a document to be fetched from the destination server causes the document to be fetched through the IIM. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein links and references invoked by a user&apos;s selection are altered when the user selects the reference. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A method of accessing data through an independent intermediary mechanism (IIM), the method comprising: 
<claim-text>retrieving destination server data (DS data) for display from a destination server; </claim-text>
<claim-text>instrumenting the DS data such that future data retrieved from the destination server is retrieved through the IIM. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A method of accessing data through an independent intermediary mechanism (IIM), the method comprising: 
<claim-text>retrieving destination server data (DS data) for display from a destination server; </claim-text>
<claim-text>altering a request for a cookie from the destination server or the DS data, such that the cookie relevant to the destination server is accessed from the IIM; and </claim-text>
<claim-text>storing and updating the cookie in the IIM cookie database. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. An independent intermediary mechanism (IIM) comprising: 
<claim-text>a core engine retrieving destination server data (DS data) for display from a destination server; </claim-text>
<claim-text>a user interface framework for maintaining a frame including the IIM user interface on a client browser as the client browser accesses different destination servers; </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The IIM of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, further comprising: 
<claim-text>a cookie database; </claim-text>
<claim-text>a cookie modification engine that alters a request for a cookie from the destination server or the DS data, such that the cookie relevant to the destination server is accessed from the IIM cookie database; and </claim-text>
<claim-text>the cookie modification engine further for maintaining and updating the cookie. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The IIM of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, further comprising: 
<claim-text>a data modification engine for instrumenting the DS data such that future data retrieved from the destination server is retrieved through the IIM. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. A communications mechanism comprising: 
<claim-text>a first independent intermediary mechanism (IIM) displaying a frame including a user interface of the IIM, the frame framing a destination server display area (DSDA); </claim-text>
<claim-text>the first IIM retrieving destination server data (DS data) for display from a destination server and instrumenting the DS data prior to, the first IIM further for providing services to the user.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>3</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005033A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005033A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005033A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005033A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005033A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005033A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005033A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005033A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030005033A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030005033A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030005033A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030005033A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030005033A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030005033A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030005033A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030005033A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030005033A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030005033A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030005033A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030005033A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030005033A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030005033A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030005033A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030005033A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030005033A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030005033A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
