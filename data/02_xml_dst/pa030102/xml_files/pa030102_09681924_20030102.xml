<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004685A1-20030102-D00000.TIF SYSTEM "US20030004685A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004685A1-20030102-D00001.TIF SYSTEM "US20030004685A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004685A1-20030102-D00002.TIF SYSTEM "US20030004685A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004685A1-20030102-D00003.TIF SYSTEM "US20030004685A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004685A1-20030102-D00004.TIF SYSTEM "US20030004685A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004685A1-20030102-D00005.TIF SYSTEM "US20030004685A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004685A1-20030102-D00006.TIF SYSTEM "US20030004685A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004685A1-20030102-D00007.TIF SYSTEM "US20030004685A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004685A1-20030102-D00008.TIF SYSTEM "US20030004685A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004685A1-20030102-D00009.TIF SYSTEM "US20030004685A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004685A1-20030102-D00010.TIF SYSTEM "US20030004685A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030004685A1-20030102-D00011.TIF SYSTEM "US20030004685A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030004685A1-20030102-D00012.TIF SYSTEM "US20030004685A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030004685A1-20030102-D00013.TIF SYSTEM "US20030004685A1-20030102-D00013.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004685</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09681924</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010627</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F011/00</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>G06F015/00</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>702</class>
<subclass>188000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>System and method for monitoring controller diagnostics</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Terry</given-name>
<middle-name>A.</middle-name>
<family-name>Troia</family-name>
</name>
<residence>
<residence-us>
<city>Roanoke</city>
<state>VA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Kenneth</given-name>
<middle-name>W.</middle-name>
<family-name>Boggs</family-name>
</name>
<residence>
<residence-us>
<city>Roanoke</city>
<state>VA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Patrick</given-name>
<middle-name>J.</middle-name>
<family-name>Conroy</family-name>
</name>
<residence>
<residence-us>
<city>Roanoke</city>
<state>VA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>J. MICHAEL MARTINEZ DE ANDINO ESQ.</name-1>
<name-2>HUNTON &amp; WILLIAMS</name-2>
<address>
<address-1>RIVERFRONT PLAZA, EAST TOWER</address-1>
<address-2>951 EAST BYRD ST.</address-2>
<city>RICHMOND</city>
<state>VA</state>
<postalcode>23219-4074</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The invention provides a diagnostic method and system for monitoring controller performance. The diagnostic system includes a tool and a controller. The tool includes a user interface that displays at least one operational status command, such that a user may select the operational status command. A controller has an operation status. The operational status command of the tool queries the operation status of the controller. As a result, the controller generates at least one operational status response. A communications path for transmission of the at least one operational status command from the tool to the controller and the at least one operational status response from the controller to the tool is provided. The user interface displays the operational status response of the controller. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The invention is directed to a system and method for requesting and obtaining diagnostic information from a controller device. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> In the environment of embedded controllers it is often a difficult and manual task to get diagnostic information from a controller to the tool that controls that controller. Typically, an engineer must establish a communication session to the controller such as a TELNET session using the Internet or an Ethernet, or alternatively, with terminal emulator technology using RS232 (Recommended Standard 232). TELNET is a terminal emulation protocol that is commonly used over the Internet. TELNET technology allows a user to log onto a program and run that program from a remote computer or terminal. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Once a communication session connection has been established between a tool and a controller device, the engineer manually submits diagnostic commands to the controller and waits for feedback These diagnostic commands are in a low level command language. Thus, the commands are not intuitive and often the engineers must be prompted by the controller manufacturer to input the necessary commands. Further, since the commands are entered manually the process is time-consuming and prone to typing errors. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Once commands are entered, the engineer must wait for feedback from the controller. The feedback regarding the query controller status is displayed to the engineer, or, is not typically in a form that can be readily forwarded electronically for storage or transmission to a remote destination for further evaluation. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Thus, the known systems and methods for obtaining diagnostic information from a controller provide a cumbersome and inefficient method of querying the controller status and do not practically provide for electronic transmission of controller responses. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> It would be desirable to provide a method and system for effectively troubleshooting controller problems which allows engineers to quickly and accurately collect diagnostic data from the controller. It would also be desirable to minimize the opportunity for damage to the controller due to typing errors in a command requesting diagnostic information from the tool. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The present invention overcomes the disadvantages of the known systems and provides additional advantages by providing a method and a system for automated acquisition of diagnostic information from a controller. The user selects an operational status command from a tool. The operational status command is transmitted to the controller. The controller executes the operational status command and the controller obtains an operational status response. The operational status response is transmitted to the tool. An operational status report is displayed.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The present invention can be more fully understood by reading the following detailed description of the presently preferred embodiments together with the accompanying drawings, in which like reference indicators are used to designate like elements and in which: </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram showing an arrangement of a system tool and a controller device in accordance with one embodiment of the system and method of the invention; </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram showing the system tool in further detail in accordance with one embodiment of the system and method of the invention; </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram showing the diagnostics operation portion of the system tool in further detail in accordance with one embodiment of the system and method of the invention; </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram showing the diagnostics memory of the system tool in further detail in accordance with one embodiment of the system and method of the invention; </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a diagram showing an illustrative user interface in accordance with one embodiment of the system and method of the invention; </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a diagram showing an illustrative custom diagnostic command window in accordance with one embodiment of the system and method of the invention; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a diagram showing an illustrative report window in accordance with one embodiment of the system and method of the invention; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a diagram showing the controller of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> in further detail in accordance with one embodiment of the system and method of the invention; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a flowchart showing a method of monitoring a controller device using a tool in accordance with one embodiment of the system and method of the invention; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a flowchart showing further detail of the &ldquo;create and send query&rdquo; step of <cross-reference target="DRAWINGS">FIG. 9</cross-reference> in accordance with one embodiment of the system and method of the invention; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a flowchart showing further detail of the &ldquo;controller status determined and the controller response created&rdquo; step of <cross-reference target="DRAWINGS">FIG. 9</cross-reference> in accordance with one embodiment of the system and method of the invention; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a flowchart showing further detail of the &ldquo;generate response&rdquo; step of <cross-reference target="DRAWINGS">FIG. 11</cross-reference> in accordance with one embodiment of the system and method of the invention; and </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a flowchart showing further detail of the &ldquo;tool presents report to user&rdquo; step of <cross-reference target="DRAWINGS">FIG. 9</cross-reference> in accordance with one embodiment of the system and method of the invention. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The system and method of the invention provide an efficient manner for engineers or other users working at a tool to collect diagnostic information from a controller, which is in communication with the tool. As used herein &ldquo;diagnostic information&rdquo; includes a wide variety of information regarding operation in the controller device including performance information, information regarding process problems in the controller device, or any other information regarding operations of the controller device. Further, the system and method of the invention minimize the need for user familiarity with complex commands, minimizes the chance for typographical error that could damage controller function and facilitates transmission of diagnostic information. Further aspects and advantages of the present invention are described below. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> In accordance with one embodiment of this system and method of the invention, the user accesses a tool, which is in communication with a controller. The tool might be characterized as an interface to the controller. The user is provided menu choices of controller status commands in the tool. The controller status commands may include a standard or static set of choices, or alternatively, customized choices which are customized for a particular user&apos;s needs, or both. The commands are encapsulated such that a single or minimal number of key strokes or mouse clicks makes the selection of an entire controller status command. Once the user has selected a desired controller status command, the controller status command is transmitted to the controller from the tool by a communications path. The controller executes the operational status command and obtains an operational status response. The operational status response is transmitted from the controller to the tool using the communications path. Once received, the response is displayed by the controller as a report, for example. The report is presented to a user in a user readable format. The report may be further printed or transferred electronically for archiving or be transmitted by email to a remote site for further evaluation. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram in accordance with one embodiment of the system and method of the invention. Specifically, <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates a network system <highlight><bold>1000</bold></highlight>. The network system <highlight><bold>1000</bold></highlight> includes a system tool <highlight><bold>100</bold></highlight> and a controller device <highlight><bold>300</bold></highlight>. The network system <highlight><bold>1000</bold></highlight> also includes an operating field device <highlight><bold>400</bold></highlight>. The system tool <highlight><bold>100</bold></highlight> and the controller device <highlight><bold>300</bold></highlight> are connected to each other over an Ethernet <highlight><bold>200</bold></highlight>. A human user interacts with the system tool <highlight><bold>100</bold></highlight> to monitor and control operations the controller device <highlight><bold>300</bold></highlight>. In turn, the controller device <highlight><bold>300</bold></highlight> controls the operating field device <highlight><bold>400</bold></highlight>. For example, the operating field device <highlight><bold>400</bold></highlight> may be a gas or hydrodynamic power generation device. Further, while an Ethernet <highlight><bold>200</bold></highlight> is illustrated, it should be appreciated that any suitable communication network may be used to allow communication between the system tool <highlight><bold>100</bold></highlight> and the controller device <highlight><bold>300</bold></highlight>. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the system tool <highlight><bold>100</bold></highlight> is connected to the Ethernet <highlight><bold>200</bold></highlight> utilizing a tool TCP/IP stack <highlight><bold>210</bold></highlight>. The controller device <highlight><bold>300</bold></highlight> is connected to the Ethernet <highlight><bold>200</bold></highlight> utilizing a controller TCP/IP stack <highlight><bold>212</bold></highlight>. Also, the controller device <highlight><bold>300</bold></highlight> is connected to the operating field device <highlight><bold>400</bold></highlight>. The controller device <highlight><bold>300</bold></highlight> may communicate with the operating field device <highlight><bold>400</bold></highlight> in any suitable manner, such as direct connection, utilizing a Local Area Network (LAN) or over the Internet, for example. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> It should be appreciated that the TCP/IP stack <highlight><bold>210</bold></highlight>, the Ethernet <highlight><bold>200</bold></highlight> and a controller responsive TCP/IP stack <highlight><bold>212</bold></highlight> are merely illustrative. As one should appreciate, TCP/IP (transmission control protocol/Internet protocol) is a well known protocol used in Internet communication, for example. As is known in the art, TCP provides the protocol with regard to transport functions, which ensures that the total amount of data, i.e., bytes, transmitted is correctly received at the receiving end. On the other hand, IP provides the routing mechanism. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The system tool <highlight><bold>100</bold></highlight> uses the tool responsive TCP/IP stack <highlight><bold>210</bold></highlight> to encapsulate a command, create a packet containing the command and send the command out over the Ethernet <highlight><bold>200</bold></highlight>. A packet is a block of data that is used for transmission between a sending end and a receiving end in packet switched systems. The controller TCP/IP stack <highlight><bold>212</bold></highlight> accepts the packet from the Ethernet <highlight><bold>200</bold></highlight> and unwraps the packet. The command is then executed in the controller device <highlight><bold>300</bold></highlight> and the controller response is created. Thereafter the controller TCP/IP stack <highlight><bold>212</bold></highlight> encapsulates the controller response and sends the controller response back out over the Ethernet <highlight><bold>200</bold></highlight>. The tool responsive TCP/IP stack <highlight><bold>210</bold></highlight> accepts the controller response and unpacks the controller response for display in the system tool <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Thus, the TCP/IP stacks are exemplary embodiments using a protocol that may be used for transmission of the encapsulated commands. However, other protocols of handling packets of data may also be used in the practice of the invention. Further, an Ethernet is an exemplary embodiment of one of the types of networks that may be used in the practice of the invention. Accordingly, it should be appreciated that any suitable medium of communication may be utilized to provide communication between the tool <highlight><bold>100</bold></highlight> and the controller <highlight><bold>300</bold></highlight>. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram illustrating further details of the system tool <highlight><bold>100</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the system tool includes a tool manager portion <highlight><bold>110</bold></highlight>, a diagnostic operations portion <highlight><bold>120</bold></highlight>, a user interface portion <highlight><bold>140</bold></highlight>, an interface portion <highlight><bold>150</bold></highlight> and a memory <highlight><bold>160</bold></highlight>. Each of the tool manager portion <highlight><bold>110</bold></highlight>, the diagnostic operations portion <highlight><bold>120</bold></highlight>, the user interface portion <highlight><bold>140</bold></highlight>, the interface portion <highlight><bold>150</bold></highlight> and the memory <highlight><bold>160</bold></highlight> are connected and communicate with each other utilizing a data link <highlight><bold>180</bold></highlight>. For example, the data link <highlight><bold>180</bold></highlight> may be in the form of a databus between the various components of the system tool <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The tool manager portion <highlight><bold>110</bold></highlight> controls and monitors the overall operations of the system tool <highlight><bold>100</bold></highlight>. The system tool <highlight><bold>100</bold></highlight> also includes various operating components. In accordance with one embodiment of the method and system of the invention, the system tool <highlight><bold>100</bold></highlight> includes the diagnostics operations portion <highlight><bold>120</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. The diagnostic operations portion <highlight><bold>120</bold></highlight> performs various operations in accordance with one embodiment of the method and system of the invention, as are described with reference to <cross-reference target="DRAWINGS">FIG. 3</cross-reference> below. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The system tool <highlight><bold>100</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, also includes a user interface portion <highlight><bold>140</bold></highlight>. The user interface portion <highlight><bold>140</bold></highlight> provides communication to and from a human user. For example, the user interface portion <highlight><bold>140</bold></highlight> may be in the form of a computer monitor and a keyboard and mouse. Illustratively, the user interface portion <highlight><bold>140</bold></highlight> generates the user interfaces shown in FIGS. <highlight><bold>5</bold></highlight>-<highlight><bold>7</bold></highlight> described below. Further, it should be appreciated that the user interface portion <highlight><bold>140</bold></highlight> may also include a printer (not shown) or a suitable link to an e-mail communication for forwarding a desired report. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Further, the system tool <highlight><bold>100</bold></highlight> also includes the interface portion <highlight><bold>150</bold></highlight>. The interface portion <highlight><bold>150</bold></highlight> is connected to an output portion <highlight><bold>152</bold></highlight> and an input portion <highlight><bold>154</bold></highlight>. The output portion <highlight><bold>152</bold></highlight> and the input portion <highlight><bold>154</bold></highlight> interface with the tool TCP/IP stack <highlight><bold>210</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The tool <highlight><bold>100</bold></highlight> also includes a memory <highlight><bold>160</bold></highlight>. The memory <highlight><bold>160</bold></highlight> includes an operating memory <highlight><bold>170</bold></highlight> and a diagnostics memory <highlight><bold>180</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the operating memory <highlight><bold>170</bold></highlight> is a memory storage for general use by the system tool <highlight><bold>100</bold></highlight> and may be used to contain programs or database information, for example, needed for overall operations of the system tool <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The memory <highlight><bold>160</bold></highlight> also includes a diagnostic memory <highlight><bold>180</bold></highlight>. The diagnostic memory <highlight><bold>180</bold></highlight> is a memory portion designated for operations in conjunction with the diagnostic operations portion <highlight><bold>120</bold></highlight>. The diagnostic memory <highlight><bold>180</bold></highlight> includes a diagnostic command files portion <highlight><bold>182</bold></highlight> and a data storage portion <highlight><bold>184</bold></highlight>, as described with reference to <cross-reference target="DRAWINGS">FIG. 4</cross-reference> below. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram showing in further detail the diagnostic operations portion <highlight><bold>120</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the diagnostic operations portion <highlight><bold>120</bold></highlight> includes a query generation portion <highlight><bold>121</bold></highlight>, a status information receiving portion <highlight><bold>122</bold></highlight>, and a report generation portion <highlight><bold>123</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the query generation portion <highlight><bold>121</bold></highlight>, the status information receiving portion <highlight><bold>122</bold></highlight>, and the report generation portion <highlight><bold>123</bold></highlight> are all connected and communicate with each other utilizing the data link <highlight><bold>180</bold></highlight>. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> The various operating components of the tool <highlight><bold>100</bold></highlight> perform various operations in accordance with one embodiment of the system and method of the invention. The query generation portion <highlight><bold>121</bold></highlight> works in conjunction with the user interface portion <highlight><bold>140</bold></highlight> to generate a query regarding a condition of the controller device <highlight><bold>300</bold></highlight>. This query is then transmitted to the controller device <highlight><bold>300</bold></highlight> over the Ethernet <highlight><bold>200</bold></highlight>. The status information receiving portion <highlight><bold>122</bold></highlight> receives and processes a response for the query from the controller device <highlight><bold>300</bold></highlight>. The report generation portion <highlight><bold>123</bold></highlight> uses information received from the controller device <highlight><bold>300</bold></highlight> and/or stored in the memory <highlight><bold>160</bold></highlight> to generate reports for review by a user. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram showing in further detail the diagnostics memory <highlight><bold>180</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the memory <highlight><bold>180</bold></highlight> includes sub-memories. Specifically, the diagnostics memory <highlight><bold>180</bold></highlight> includes a diagnostic command files portion <highlight><bold>182</bold></highlight> and a data storage portion <highlight><bold>184</bold></highlight>. The diagnostic command files portion <highlight><bold>182</bold></highlight> in the memory <highlight><bold>180</bold></highlight> contains various diagnostic commands, as are described in detail below. Further, the data storage portion <highlight><bold>184</bold></highlight> stores various information resulting from diagnostic operations performed by the tool <highlight><bold>100</bold></highlight>, i.e., including data utilized by the report generation portion <highlight><bold>123</bold></highlight>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a screen shot showing a user interface screen <highlight><bold>600</bold></highlight> in accordance with one embodiment of the system and method of the invention. The user interface screen <highlight><bold>600</bold></highlight> is in the form of a tool window <highlight><bold>610</bold></highlight>. The tool window <highlight><bold>610</bold></highlight> is generated by the user interface portion <highlight><bold>140</bold></highlight> in the system tool <highlight><bold>100</bold></highlight>. The tool window <highlight><bold>610</bold></highlight> includes a menu bar <highlight><bold>612</bold></highlight>. The menu bar <highlight><bold>612</bold></highlight> permits a user to access various tool features of the system tool <highlight><bold>100</bold></highlight>. These various tool features may include a wide variety of features, in addition to the controller diagnostic features described herein. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> When a user is interested in accessing the diagnostic features in accordance with one embodiment of the present invention, the user selects View </paragraph>
<paragraph id="P-0040" lvl="1"><number>&lsqb;0040&rsqb;</number> &rarr;</paragraph>
<paragraph id="P-0041" lvl="7"><number>&lsqb;0041&rsqb;</number> Controller Status Commands </paragraph>
<paragraph id="P-0042" lvl="1"><number>&lsqb;0042&rsqb;</number> &rarr;</paragraph>
<paragraph id="P-0043" lvl="7"><number>&lsqb;0043&rsqb;</number> File System using the Menu Bar <highlight><bold>612</bold></highlight> as Shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> This selection allows a user to access both sub-menu <highlight><bold>616</bold></highlight> and sub-menu <highlight><bold>618</bold></highlight>. These sub-menus (<highlight><bold>616</bold></highlight>, <highlight><bold>618</bold></highlight>) permit selection of various controller status commands. Further, it should be appreciated that the items displayed in the sub-menus (<highlight><bold>616</bold></highlight>, <highlight><bold>618</bold></highlight>) are in the form of &ldquo;natural language&rdquo; dialogue. The natural language presentation of the various selections provide ease of use by a user. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The selection of &ldquo;file system&rdquo; in the submenu <highlight><bold>616</bold></highlight>, generates the submenu <highlight><bold>618</bold></highlight>, which provides a user with a variety of options. Specifically, these options include Display Flash File System Information, List Application Code Directory Contents, List Executable Directory Contents, and Report Disk Free Space. These various selections in the submenu <highlight><bold>116</bold></highlight> represent diagnostic queries which, when selected by a user, activate the query generation portion <highlight><bold>121</bold></highlight> in the diagnostic operations portion <highlight><bold>120</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> Specifically, in response to the selection, the query generation portion <highlight><bold>121</bold></highlight> generates a query and forwards that query over the Ethernet <highlight><bold>200</bold></highlight> to the controller device <highlight><bold>300</bold></highlight>. As a result to receiving the query, the controller device <highlight><bold>300</bold></highlight> processes the command to generate the desired information. The controller device <highlight><bold>300</bold></highlight> transmits the desired information back over a communications path <highlight><bold>200</bold></highlight> to the tool <highlight><bold>100</bold></highlight>. The response from the controller device <highlight><bold>300</bold></highlight> is received by the status information receiving portion <highlight><bold>122</bold></highlight>. Working in conjunction with the user interface portion <highlight><bold>140</bold></highlight>, the status information receiving portion <highlight><bold>122</bold></highlight> provides the information contained in the response to a user. Accordingly, it should be appreciated that a simple selection using the items in the submenu <highlight><bold>618</bold></highlight> quickly and easily provide a user with important diagnostic information relating to operations of the controller device <highlight><bold>300</bold></highlight>. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Accordingly, the &ldquo;File System&rdquo; selection shown in the submenu <highlight><bold>616</bold></highlight> described above is one illustrative controller status command. However, as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the submenu <highlight><bold>616</bold></highlight> shows additional types of controller status commands, each of which will generate a further submenu. For example, the submenu <highlight><bold>616</bold></highlight> also includes a &ldquo;General&rdquo; selection, a &ldquo;Network&rdquo; selection, a &ldquo;Process&rdquo; selection, and a &ldquo;Custom&rdquo; selection. It should be appreciated that each of the general, file system, network and process status commands are static controller status commands. Static commands are a standard set of commands and typically query the controller device <highlight><bold>300</bold></highlight> regarding such operational matters such as file system information, a request to list application code directory contents, a request to list executable directory contents, a request for information regarding free disk space, as well as other queries relating to the operation of the controller device <highlight><bold>300</bold></highlight>. However, the static diagnostic commands, which might be utilized by a user, are not limited to those set forth in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. Rather, additional diagnostic commands may be provided as are necessary or desirable. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> In contrast to static diagnostic commands described above, the diagnostic operations portion <highlight><bold>120</bold></highlight> also provides for the utilization of custom diagnostic commands. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> In accordance with one embodiment of the method and system of the invention, custom diagnostic commands are created by a user utilizing the diagnostic operations portion <highlight><bold>120</bold></highlight>, and specifically the query generation portion <highlight><bold>121</bold></highlight>, in order to address a request or need of a particular user. In accordance with one embodiment, in order to create a custom diagnostic command, a user may utilize a suitable text editor to create the desired command. The custom diagnostic command may be distinguished from other text files by utilizing a suitable designated file extension, for example. For example, a suitable file extension such as &ldquo;.SCP&rdquo; may be used. Alternatively, the custom diagnostic command code may be simply stored in a predetermined location. Once the custom diagnostic command is created by a user, the custom diagnostic command is then enabled by a system administrator or other person who oversees operations of the system tool <highlight><bold>100</bold></highlight>. In other words, the system administrator confirms that the custom diagnostic command is proper and thereafter enables the custom diagnostic command. To explain further, it should be appreciated that a privilege scheme may be implemented. That is, various persons may have different privileges, i.e., access capabilities, so as to enable a custom diagnostic command, for example, or perform other operations. Thus, the system administrator may have the highest level of privilege, whereas an engineer working with the system tool would have more limited capabilities. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> It should be appreciated that enablement of the custom diagnostic command by a system administrator addresses concerns relating to errors in the custom diagnostic command. For example, these errors might otherwise result from a inexperienced user utilizing an incorrect code format or entering a diagnostic command containing a typographical error. It should be appreciated that errors in diagnostic commands, and specifically in custom diagnostic commands, may cause a variety of problems if transmitted from the system tool <highlight><bold>100</bold></highlight> to the controller device <highlight><bold>300</bold></highlight>. For example, the introduction of typographical errors may result in damage to the controller device <highlight><bold>300</bold></highlight>. At the least, the user may not receive the diagnostic information that user requested. Other concerns associated with erred diagnostic commands include excessive consumption of processing time in the controller device <highlight><bold>300</bold></highlight> or even possible shutdown of the controller device <highlight><bold>300</bold></highlight>. Further, the enablement of the custom diagnostic commands by the system administrator allows the user to avoid the complexity associated with formulating the command. Formulation of the command is often complex since the command must be in a language recognized by the controller. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> In accordance with one embodiment of the method and system of the invention, a user may select a custom diagnostic command from a menu list, in a manner similar to selection of the static diagnostic commands. For example, a user may select the &ldquo;Custom selection&rdquo; in the submenu <highlight><bold>616</bold></highlight>. In response to this selection, the query generation portion <highlight><bold>121</bold></highlight>, working in conjunction with the user interface portion <highlight><bold>140</bold></highlight>, generates a user interface screen <highlight><bold>600</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. The user interface screen <highlight><bold>600</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is in the form of a custom diagnostic command window <highlight><bold>620</bold></highlight>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, the custom diagnostic command window <highlight><bold>620</bold></highlight> prompts a user to &ldquo;select a custom script file to execute&rdquo; as shown in the title bar <highlight><bold>622</bold></highlight>. A user may select from various custom diagnostic commands <highlight><bold>624</bold></highlight> shown in the custom diagnostic command window <highlight><bold>620</bold></highlight>. Each of the custom diagnostic commands <highlight><bold>624</bold></highlight> were created specifically for a particular user. Illustratively, the command &ldquo;controller status&rdquo; may be a request to obtain only operating parameters of the controller device <highlight><bold>300</bold></highlight> that the particular user is interested in. Further, the custom diagnostic command &ldquo;Paul&rdquo; may, for example, request information from the controller device <highlight><bold>300</bold></highlight> relating to down time. The method and system of the invention allows a user, working in conjunction with a system administrator, to add custom diagnostic commands to the window <highlight><bold>620</bold></highlight> as is necessary or desired. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> In accordance with one embodiment of the method and system of the invention, the tool <highlight><bold>100</bold></highlight> also utilizes a &ldquo;file send to mechanism.&rdquo; The file send to mechanism works in conjunction with the custom scripts. Specifically, a first user at a first location may be talking to a second user at a second location. The first user is experiencing difficulties. However, the second user believes that she knows what the problem experienced by the first user is. However, the second user realizes that certain diagnostic tests must be run. Further, the second user possesses the code to run these diagnostic tests. As a result, the second user may e-mail the necessary code to the first user. Upon receiving the code, the first user inserts the code into a custom script file. The first user may then select that diagnostic command generated by the newly added code to run the diagnostic processing that was suggested by the second user. However, it should be appreciated that the first user does not need to understand or even be aware of this particular code utilized in the newly added diagnostic command. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 7, a</cross-reference> report window <highlight><bold>630</bold></highlight> generated by the report generation portion <highlight><bold>123</bold></highlight> presents the results of the controller response in accordance with one embodiment of the method and system of the invention. As shown in the report window <highlight><bold>630</bold></highlight>, the controller response may be presented in the form of a custom report. As one skilled in the art will appreciate, the specific content and format of the report may include various amounts and types of information, as well as be presented in a variety of formats. Accordingly, the content and format of the reports displayed by the report window <highlight><bold>630</bold></highlight> is subject to wide variation as may be necessary or desired. For example, the exemplary report shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, includes the date and time of creation of the report, the requested controller information specifying the controller status command used, as well as identification of the controller query. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> The report generation portion <highlight><bold>123</bold></highlight> may, for example, generate the report in conjunction with the user interface portion <highlight><bold>140</bold></highlight>. Alternatively, the content of the report shown in the report window <highlight><bold>630</bold></highlight> may be forwarded to a printer to create a printed copy of the report, sent to the data storage portion <highlight><bold>184</bold></highlight> or another suitable memory for archiving, or sent via e-mail to a remote site for further evaluation. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a block diagram showing the network system in further detail, and in particular the controller device <highlight><bold>300</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, the controller device <highlight><bold>300</bold></highlight> includes a TCP/IP socket <highlight><bold>310</bold></highlight>, a session data interface (SDI) <highlight><bold>320</bold></highlight>, a system manager <highlight><bold>330</bold></highlight>, a shell <highlight><bold>340</bold></highlight>, an operating system kernel <highlight><bold>350</bold></highlight> and a flash file system <highlight><bold>360</bold></highlight>. Each of these components may be in communication with each other in any suitable manner, such as by using a databus. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> The TCP/IP socket <highlight><bold>310</bold></highlight>, working in conjunction with the controller TCP/IP stack <highlight><bold>212</bold></highlight>, provides the connection between the controller device <highlight><bold>300</bold></highlight> and the communications pathway, i.e., the Ethernet <highlight><bold>200</bold></highlight>. The TCP/IP socket <highlight><bold>310</bold></highlight> receives the controller diagnostic commands and sends the response to any given diagnostic command. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> To explain further, the TCP/IP socket interacts with the data session interface <highlight><bold>320</bold></highlight>. The data session interface <highlight><bold>320</bold></highlight> establishes communications with the system manager <highlight><bold>330</bold></highlight>. System manager <highlight><bold>330</bold></highlight> forwards the controller diagnostic commands to one of the shell <highlight><bold>340</bold></highlight>, operating system kernel <highlight><bold>350</bold></highlight>, or flash file system <highlight><bold>360</bold></highlight>, for example. The shell <highlight><bold>340</bold></highlight>, operating system kernel <highlight><bold>350</bold></highlight> and flash file system <highlight><bold>360</bold></highlight> are the portions of the controller having the performance and/or status information requested by the controller diagnostic command. Controller response to the controller diagnostic command query are generated by the shell <highlight><bold>340</bold></highlight>, operating system kernel <highlight><bold>350</bold></highlight> or flash file system <highlight><bold>360</bold></highlight> and sent to the system manager <highlight><bold>330</bold></highlight>. The controller responses are then forwarded to the session data interface <highlight><bold>320</bold></highlight> and TCP/IP socket <highlight><bold>310</bold></highlight> for communication to the tool <highlight><bold>100</bold></highlight> via the communications path <highlight><bold>200</bold></highlight>. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> FIGS. <highlight><bold>9</bold></highlight>-<highlight><bold>13</bold></highlight> are flowcharts showing an illustrative implementation in accordance with one embodiment of the invention. <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a high level flowchart showing aspects of the invention. As shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, the process of gathering diagnostic information from the controller device <highlight><bold>300</bold></highlight> is initiated in step S<highlight><bold>100</bold></highlight>. After step S<highlight><bold>100</bold></highlight>, the process passes to step S<highlight><bold>200</bold></highlight>. In step S<highlight><bold>200</bold></highlight>, the system tool <highlight><bold>100</bold></highlight>, and specifically the diagnostic operations portion <highlight><bold>120</bold></highlight> creates and sends a query to the controller device <highlight><bold>300</bold></highlight>. After step S<highlight><bold>200</bold></highlight>, the process passes to step S<highlight><bold>300</bold></highlight>. In step S<highlight><bold>300</bold></highlight>, the status of the controller is determined and a suitable response is created by the controller device <highlight><bold>300</bold></highlight>. Then, the process passes to step S<highlight><bold>400</bold></highlight>. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> In step S<highlight><bold>400</bold></highlight>, the response prepared by the controller device <highlight><bold>300</bold></highlight> is transmitted to the system tool <highlight><bold>100</bold></highlight>. Then, the system tool <highlight><bold>100</bold></highlight> presents a report to a user in response to the query generated in step S<highlight><bold>200</bold></highlight>, described above. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> After step S<highlight><bold>500</bold></highlight>, the process passes to step S<highlight><bold>600</bold></highlight>. In step S<highlight><bold>600</bold></highlight>, the process ends. That is, subsequent to step S<highlight><bold>600</bold></highlight>, a user might prepare another query to transmit to the controller device <highlight><bold>300</bold></highlight>. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a flowchart showing in further detail the &ldquo;create and send query&rdquo; step of <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. After step S<highlight><bold>200</bold></highlight>, the process passes to step S<highlight><bold>210</bold></highlight>. In step S<highlight><bold>210</bold></highlight>, a user opens a tool graphics window. The tool graphics window presents menu options to the user. As one skilled in the art should appreciate, the system tool may include many programs and options with the controller diagnostics features being one option of the functionality of the system tool. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> After step S<highlight><bold>210</bold></highlight>, the process passes to step S<highlight><bold>220</bold></highlight>. In step S<highlight><bold>220</bold></highlight>, the user selects a controller status command from the tool menu. That is, from a list of available menu options, the user selects the desired control status command. The available status commands may be listed in a single menu or in a hierarchical series of sub-menus, for example. The menu may include both static commands, i.e., a standard set of commands, as well as custom commands that have been prepared specifically by or for that particular user. It should be appreciated that although the two types of commands are different in type and in the manner in which each command is generated, the method of selection and subsequent processing by the system tool <highlight><bold>100</bold></highlight> is similar, as is described above. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> A user may make the selection of a controller status command in step S<highlight><bold>220</bold></highlight> in any of a variety of ways. Typically, methods of effecting selection of a particular command include a mouse click, a carriage return, or touching a responsive screen, for example. Accordingly, the selection from a menu typically requires a limited physical input from the user and avoids the necessity to input a text string. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> Once the controller status command has been selected in step S<highlight><bold>220</bold></highlight>, the system tool verifies that a connection exists between the tool and the tool responsive data interface. For example, the data interface may be in the form of a SDI (session data interface) connection. Accordingly, in step S<highlight><bold>230</bold></highlight>, the tool verifies the SDI connection. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> After step S<highlight><bold>230</bold></highlight>, the process passes to step S<highlight><bold>240</bold></highlight>. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> In step S<highlight><bold>240</bold></highlight>, the controller status command is sent from the system tool to the controller. For example, the controller encapsulates the controller status command in a packet form for transmission over the Ethernet <highlight><bold>200</bold></highlight>. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> After step S<highlight><bold>240</bold></highlight>, the process passes to step S<highlight><bold>250</bold></highlight>. In step S<highlight><bold>250</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the process returns to step S<highlight><bold>300</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a flowchart showing in further detail the &ldquo;controller status determined and controller response created&rdquo; step of <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. As shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, the process starts in step S<highlight><bold>300</bold></highlight>. After step S<highlight><bold>300</bold></highlight>, the process passes to step S<highlight><bold>310</bold></highlight>. In step S<highlight><bold>310</bold></highlight>, the controller status command for requesting diagnostic information sent from the system tool is received by the controller responsive TCP/IP connection as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. As shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, after step S<highlight><bold>310</bold></highlight>, the process passes to step S<highlight><bold>320</bold></highlight>. In step S<highlight><bold>320</bold></highlight>, the controller device generates a response. Further details of step S<highlight><bold>320</bold></highlight> and the generation of the response are described with reference to <cross-reference target="DRAWINGS">FIG. 12</cross-reference> below. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> After step S<highlight><bold>320</bold></highlight>, the process passes to step S<highlight><bold>330</bold></highlight>. In step S<highlight><bold>330</bold></highlight>, a controller device response is sent via the communications channel or pipe to a buffer portion of the session data interface <highlight><bold>320</bold></highlight> in the controller device <highlight><bold>300</bold></highlight>. After step S<highlight><bold>330</bold></highlight>, the process passes to step S<highlight><bold>335</bold></highlight>. As shown in step S<highlight><bold>335</bold></highlight>, the controller device makes a determination if the controller response exceeds the buffer capacity, i.e., is all the data transferred to the buffer. If no, in step S<highlight><bold>335</bold></highlight>, then the process advances to step S<highlight><bold>340</bold></highlight>. In step S<highlight><bold>340</bold></highlight>, the process returns to step S<highlight><bold>220</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>. That is, in step S<highlight><bold>220</bold></highlight> the user attempts to select the particular diagnostic command a further time, or alternatively, selects another diagnostic command. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> Alternatively, the controller may determine in step S<highlight><bold>335</bold></highlight> that all the data has been transferred to the buffer, i.e., the entirety of the control response is transferred to the buffer. As a result, the process advances to step S<highlight><bold>345</bold></highlight> in which the controller device packetizes the date preparing the data for transmission to the system tool <highlight><bold>100</bold></highlight>. After step S<highlight><bold>345</bold></highlight>, the process passes to step S<highlight><bold>350</bold></highlight>. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> In step S<highlight><bold>350</bold></highlight>, the packetized controller response or packet is sent to the TCP/IP socket <highlight><bold>310</bold></highlight> for transmission via the communications path <highlight><bold>200</bold></highlight>. As packets are sent, the controller determines whether the last packet has been transmitted. That is, in step S<highlight><bold>360</bold></highlight>, the controller device makes a determination whether all the packets are transmitted. If no, i.e., all the packets are not transmitted, then the process returns to step S<highlight><bold>350</bold></highlight>. In step S<highlight><bold>350</bold></highlight>, the controller device again attempts to send the packets containing the response information to the system tool. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> Alternatively, in step S<highlight><bold>360</bold></highlight> the controller device may determine that all the packets are transmitted. As a result if &ldquo;YES&rdquo; in step S<highlight><bold>360</bold></highlight>, then the process passes to step S<highlight><bold>370</bold></highlight>. In step S<highlight><bold>370</bold></highlight>, the socket is closed and the session data interface is terminated. After step S<highlight><bold>370</bold></highlight>, the process passes to step <highlight><bold>380</bold></highlight>. In step S<highlight><bold>380</bold></highlight>, the process returns to step S<highlight><bold>400</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. As described above with reference to <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, in step S<highlight><bold>400</bold></highlight> the controller response is transmitted to the tool over the Ethernet, for example. After step S<highlight><bold>400</bold></highlight>, the process advances to step S<highlight><bold>500</bold></highlight>. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> As described above, in step S<highlight><bold>320</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, the controller device generates a response. <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a flowchart showing in further detail the process of generating a response. As shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, generation of the response starts in step S<highlight><bold>320</bold></highlight>. After step S<highlight><bold>320</bold></highlight>, the process passes to step S<highlight><bold>321</bold></highlight>. The controller device initiates generation of a response subsequent to receipt of the query in the controller device <highlight><bold>300</bold></highlight>. Once the query, i.e., the diagnostic command, is received, the diagnostic command is unpacked and a tool data interface process is forked off or initiated in the session data interface <highlight><bold>320</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. Accordingly, once the controller device forks off a tool box session data interface process in step S<highlight><bold>321</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, the process passes to step S<highlight><bold>322</bold></highlight>. In step S<highlight><bold>322</bold></highlight>, the diagnostic command is forwarded to the system manager <highlight><bold>330</bold></highlight>. The system manager <highlight><bold>330</bold></highlight> queries the designated portion of the controller device for the information requested in the diagnostic command. For example, the system manager <highlight><bold>330</bold></highlight> may query the shell <highlight><bold>340</bold></highlight>, the operating system kernel <highlight><bold>350</bold></highlight>, or the flash file system <highlight><bold>360</bold></highlight>, for example. However, it should be appreciated that these specific components are illustrative. The system manager <highlight><bold>330</bold></highlight> or other suitable operational manager may query any number of components in the controller device as is necessary or desired. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> As shown in step S<highlight><bold>324</bold></highlight>, the system manager <highlight><bold>330</bold></highlight> initiates the query by opening a pipe to the command shell <highlight><bold>340</bold></highlight>. The use of a pipe permits simultaneous transmission of multiple bits of data. As one skilled in the art will appreciate, other types of communications channels may be utilized. Utilization of a channel such as a pipe facilitates transfer of information without interruption of function of the controller <highlight><bold>300</bold></highlight>. In step S<highlight><bold>326</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, the system manager <highlight><bold>330</bold></highlight> shells out or sends the controller diagnostic command to the designated portion of the controller <highlight><bold>300</bold></highlight> to execute the query and obtain the required information as a control response. Accordingly, in step S<highlight><bold>327</bold></highlight>, the necessary data is obtained. Subsequent to step S<highlight><bold>327</bold></highlight>, the process of <cross-reference target="DRAWINGS">FIG. 12</cross-reference> passes to step S<highlight><bold>328</bold></highlight>. In step S<highlight><bold>328</bold></highlight>, the process returns to step S<highlight><bold>330</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> As described above with reference to the flowchart of <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, in step S<highlight><bold>500</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, the system tool presents a report to the user. <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a flowchart showing in further detail the step of presenting the report to the user. As shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, the process starts in step S<highlight><bold>500</bold></highlight>. After step S<highlight><bold>500</bold></highlight>, the process passes to step <highlight><bold>5510</bold></highlight>. In step S<highlight><bold>510</bold></highlight>, the system tool displays the controller device in a custom report. Illustratively, the custom controller report may be generated by the report generation portion <highlight><bold>123</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. This report is typically displayed as a window containing text. The report may be utilized by the user as presented by the system tool on a monitor, for example, and/or forwarded to another destination. Accordingly, in step S<highlight><bold>520</bold></highlight>, the user makes a determination whether to transmit the report or not. If the user does wish to transmit the report in step S<highlight><bold>520</bold></highlight>, i.e., yes, then the process passes to step S<highlight><bold>530</bold></highlight>. In step S<highlight><bold>530</bold></highlight>, the user selects a destination for transmission of the report in accordance with one exemplary embodiment of the method of the invention. The destination may include, for example, a printer, archival memory storage, e-mail transmission to a remote destination or a combination of such destinations. E-mail transmission is useful in troubleshooting situations as diagnostic information may be rapidly and accurately conveyed to individuals at remote sites with expertise in troubleshooting controller problems. After step S<highlight><bold>530</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, the process passes to step S<highlight><bold>540</bold></highlight>. In step S<highlight><bold>540</bold></highlight>, the system tool sends the report to the desired destination. The transmission of the report to the destination may be accomplished in any suitable manner. After step S<highlight><bold>540</bold></highlight>, the process passes to step S<highlight><bold>550</bold></highlight>. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> Alternatively, the user may determine in step S<highlight><bold>520</bold></highlight> that the user does not wish to transmit the report. As a result, the process passes from step S<highlight><bold>520</bold></highlight> to step S<highlight><bold>550</bold></highlight>. In step S<highlight><bold>550</bold></highlight>, the process returns to step S<highlight><bold>600</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. In step S<highlight><bold>600</bold></highlight>, the process ends. As described above, the system and method of the invention utilizes a user interface to interact with the human user. As used herein, a user interface includes any software, hardware or combination of hardware and software used in an operating system that allows a user to interact with the operating system. For example, a user interface may include any of a touch screen, keyboard, mouse, voice reader, voice recognizer, dialogue screen, menu box, a list, a check box, a toggle switch, a push button or any other component that allows the user to receive information regarding the operation of the operating system and/or provide the operating system with information. Accordingly, the user interface is any device that provides communication between the user and the operating system. The information provided by the user may be in the form of selection of data or other input, for example. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> It should be appreciated that FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>4</bold></highlight> and <highlight><bold>8</bold></highlight> above illustrate an exemplary operating system. However, other operating systems that perform the method of the invention, as described in conjunction with FIGS. <highlight><bold>9</bold></highlight>-<highlight><bold>13</bold></highlight> above, may also be utilized. Further, it is to be appreciated that in the system and method of the invention it is not necessary that the components of the system tool and the controller device be physically located in the same place. That is, it should be appreciated that each of the components may be located in geographically distinct locations and connected so as to communicate in any suitable manner such as over a network, for example. Additionally, it should be appreciated that each of the processors and/or the memories utilized may be composed of different physical pieces of equipment. Accordingly, it is not necessary for the respective processors to be one single piece of equipment in one location and the memory being another single piece of the equipment in another location. That is, it is common that the processor may be two pieces of equipment in two different physical locations. The two distinct pieces of equipment may be connected in any suitable manner. Additionally, the memory may include two or more portions of memory in two or more physical locations. Further, the memory could utilize memory storage from the Internet, Intranet, Extranet, LAN or some other source or over some other network as may be necessary or desired. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> As described above, the invention may illustratively be embodied in the form of a computer or computer operating system. It is to be appreciated that the software that enables the computer operations to perform their operations described herein may be supplied on any of a wide variety of data holding media. Further, it should be appreciated that a particular implementation of the invention may be in the form of computer code written in any suitable program language which provides instructions to the particular computer. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> While the foregoing description includes many details and specifications, it is to be understood that these have been included for purposes of explanation only, and are not to be interpreted as limitations of the present invention. Many modifications to the embodiments described above can be made without departing from the spirit and scope of the invention, as is intended to be encompassed by the following claims and their legal equivalents. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A diagnostic system for monitoring controller performance, the diagnostic system comprising: 
<claim-text>a tool, wherein the tool includes a user interface that displays at least one operational status command such that a user may select the operational status command; </claim-text>
<claim-text>a controller having an operation status wherein the at least one operational status command of the tool queries the operation status of the controller, and the controller generates at least one operational status response; </claim-text>
<claim-text>a communications path for transmission of the at least one operational status command from the tool to the controller and the at least one operational status response from the controller to the tool; and </claim-text>
<claim-text>wherein the user interface displays the at least one operational status response of the controller. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The diagnostic system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the user may select the at least one operational status command upon a single user action. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The diagnostic system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the user interface shows the operational status response in a natural language. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The diagnostic system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the operational status command is a static operational status command, the static operational status command being one of a standard set of commands. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The diagnostic system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the operational status command is a customized operational status command, the customized operational status command being one of a set of commands created specially for a particular user or users. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The diagnostic system of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, further including a text editor portion, the text editor portion for creating the customized operational status command. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The diagnostic system of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein code to effect the customized operational status command is contained in a script file in a memory portion in the tool. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The diagnostic system of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the tool includes a query generation portion, the query generation portion for creating the customized operational status commands. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The diagnostic system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the operational status command is one of a static operational status command and a customized operational status command, and wherein: 
<claim-text>the static operational status command being one of a standard set of commands; and </claim-text>
<claim-text>the customized operational status command being one of a set of commands created specially for a particular user or users. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The diagnostic system of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the operational status command is selected from a menu. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The diagnostic system of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the user interface displays the at least one operational status response of the controller using a display window, the window containing information relating to the operational status command and the operational status response from the controller. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A diagnostic system for monitoring controller performance, the diagnostic system comprising: 
<claim-text>a tool, wherein the tool includes a user interface that displays at least one operational status command such that a user may select the operational status command, the tool providing both static operational status commands and customized operational status commands and wherein the operational status command is one of the static operational status commands and the customized operational status commands, and wherein: 
<claim-text>the static operational status command being one of a standard set of commands; and </claim-text>
<claim-text>the customized operational status command being one of a set of commands created specially for a particular user or users; </claim-text>
<claim-text>a controller having an operation status wherein the at least one operational status command of the tool queries the operation status of the controller, and the controller generates at least one operational status response; </claim-text>
<claim-text>a communications path for transmission of the at least one operational status command from the tool to the controller and the at least one operational status response from the controller to the tool; and </claim-text>
<claim-text>wherein the user interface displays the at least one operational status response of the controller, the user interface showing the operational status response in natural language. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The diagnostic system of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the user may select the at least one operational status command upon a single user action. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The diagnostic system of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, further including a text editor portion, the text editor portion for creating the customized operational status command. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The diagnostic system of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein code to effect the customized operational status command is contained in a script file in a memory portion in the tool. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The diagnostic system of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the operational status command is selected from a menu. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The diagnostic system of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the user interface displays the at least one operational status response of the controller using a display window, the window containing information relating to the operational status command and the at least one operational status response from the controller. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A method for monitoring controller performance, the method comprising the steps of: 
<claim-text>providing a plurality of possible operational status commands in a tool; </claim-text>
<claim-text>selecting a selected operational status command from the plurality of possible operational status commands; </claim-text>
<claim-text>transmitting the selected operational status command to a controller; executing the selected operational status command in the controller, the executing generating an operational status response in the controller; </claim-text>
<claim-text>transmitting the operational status response to the tool; and displaying the operational status response in a report. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein the selecting the selected operational status command includes a user selecting the selected operational status command from a menu upon a single user action. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, further including the step of sending the operational status response to a remote location from the tool. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein e-mail is used to send the operational status response to the remote location. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein the report is generated on a user interface such that a user may view the report. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein the report is provided in a natural language. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein providing a plurality of possible operational status commands in a tool includes at least one of providing a static operational status command and providing a customized operational status command, and wherein: 
<claim-text>the static operational status command being one of a standard set of commands; and </claim-text>
<claim-text>the customized operational status command being one of a set of commands created specially for a particular user or users. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, wherein providing a customized operational status command includes using a text editor portion for creating the customized operational status command. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, wherein providing a customized operational status command includes receiving a communication containing code for the customized operational status command and inserting the received code into a custom script file in the tool. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. A method for monitoring controller performance, the method comprising the steps of: 
<claim-text>providing a plurality of possible operational status commands in a tool; selecting a selected operational status command from the plurality of possible operational status commands, wherein the selecting the selected operational status command includes a user selecting the selected operational status command from a menu upon a single user action; </claim-text>
<claim-text>transmitting the selected operational status command to a controller; </claim-text>
<claim-text>executing the selected operational status command in the controller, the </claim-text>
<claim-text>executing generating an operational status response in the controller; </claim-text>
<claim-text>transmitting the operational status response to the tool; and </claim-text>
<claim-text>displaying the operational status response in a report on a user interface. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, wherein the report is provided in a natural language. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, wherein providing a plurality of possible operational status commands in a tool includes at least one of providing a static operational status command and providing a customized operational status command, and wherein: 
<claim-text>the static operational status command being one of a standard set of commands; and </claim-text>
<claim-text>the customized operational status command being one of a set of commands created specially for a particular user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A system for monitoring controller performance, the system comprising: 
<claim-text>means for providing a plurality of possible operational status commands in a tool; </claim-text>
<claim-text>means for selecting a selected operational status command from the plurality of possible operational status commands; </claim-text>
<claim-text>means for transmitting the selected operational status command to a controller; </claim-text>
<claim-text>means for executing the selected operational status command in the controller, </claim-text>
<claim-text>the executing generating an operational status response in the controller; </claim-text>
<claim-text>means for transmitting the operational status response to the tool; and </claim-text>
<claim-text>means for displaying the operational status response in a report. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The system of claim <highlight><bold>30</bold></highlight>, wherein the means for providing a plurality of possible operational status commands in a tool includes means for providing a static operational status command and means for providing a customized operational status command, and wherein: 
<claim-text>the static operational status command being one of a standard set of commands; and </claim-text>
<claim-text>the customized operational status command being one of a set of commands created specially for a particular user or users. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. A system for monitoring controller performance, the system comprising: 
<claim-text>means for providing a plurality of possible operational status commands in a tool, wherein the means for providing a plurality of possible operational status commands in a tool includes means for providing a static operational status command and means for providing a customized operational status command, and wherein: 
<claim-text>the static operational status command being one of a standard set of commands; and </claim-text>
<claim-text>the customized operational status command being one of a set of commands created specially for a particular user or users.; </claim-text>
<claim-text>means for selecting a selected operational status command from the plurality of possible operational status commands, wherein the selecting the selected operational status command includes a user selecting the selected operational status command from a menu upon a single user action; </claim-text>
<claim-text>means for transmitting the selected operational status command to a controller; means for executing the selected operational status command in the controller, </claim-text>
<claim-text>the executing generating an operational status response in the controller; means for transmitting the operational status response to the tool; and </claim-text>
<claim-text>means for displaying the operational status response in a report on a user interface.</claim-text>
</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004685A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004685A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004685A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004685A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004685A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004685A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004685A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004685A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004685A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004685A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004685A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030004685A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030004685A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030004685A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
