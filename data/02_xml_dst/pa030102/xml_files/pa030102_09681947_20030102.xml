<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005057A1-20030102-D00000.TIF SYSTEM "US20030005057A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005057A1-20030102-D00001.TIF SYSTEM "US20030005057A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005057A1-20030102-D00002.TIF SYSTEM "US20030005057A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005057A1-20030102-D00003.TIF SYSTEM "US20030005057A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005057A1-20030102-D00004.TIF SYSTEM "US20030005057A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005057A1-20030102-D00005.TIF SYSTEM "US20030005057A1-20030102-D00005.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005057</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09681947</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/16</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>709</class>
<subclass>206000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Computerized systems and methods for acquiring and disseminating process management information</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Michael</given-name>
<middle-name>Robert</middle-name>
<family-name>LaBlanc</family-name>
</name>
<residence>
<residence-us>
<city>Wilton</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Leonard</given-name>
<middle-name>Richard</middle-name>
<family-name>Douglas</family-name>
</name>
<residence>
<residence-us>
<city>Burnt Hills</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Mark</given-name>
<middle-name>Mitchell</middle-name>
<family-name>Kornfein</family-name>
</name>
<residence>
<residence-us>
<city>Latham</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Mary</given-name>
<middle-name>Clarkeson</middle-name>
<family-name>Phillips</family-name>
</name>
<residence>
<residence-us>
<city>Delmar</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Octavio</given-name>
<family-name>Garcia</family-name>
</name>
<residence>
<residence-us>
<city>Clifton Park</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>GENERAL ELECTRIC COMPANY</name-1>
<name-2>GLOBAL RESEARCH CENTER</name-2>
<address>
<address-1>PATENT DOCKET RM. 4A59</address-1>
<address-2>PO BOX 8, BLDG. K-1 ROSS</address-2>
<city>NISKAYUNA</city>
<state>NY</state>
<postalcode>12309</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Computerized systems and methods for acquiring and disseminating information using a mail client system including an application operable for generating and incorporating a plurality of messages and one or more message handlers in communication with the application and the mail client system, the one or more message handlers operable for attaching identifying information to each of the plurality of messages. The systems and methods also including a definition operable for translating each of the plurality of messages such that each of the plurality of messages may be understood by the one or more message handlers and a communications network operable for transmitting each of the plurality of messages between the application, the one or more message handlers, and the mail client system. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates generally to computerized systems and methods for assuring process compliance for a wide array of processes and, more specifically, to web-based systems and methods for acquiring and disseminating process management information using an external mail client system. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Businesses utilize a variety of processes in their day-to-day operations. These processes may involve the completion of a number of discrete steps, forming a project. For example, businesses may utilize a variety of processes for bringing new products to market, often collectively referred to as new product introduction (NPI) processes. NPI processes may involve, for example, initial product conception, product design, product manufacture, and post-shipment follow-up. Typically, such processes include a series of tollgates, or go/no-go points. Each tollgate may include a set of activities and each set of activities may include a set of tasks. Typically, such processes also include a series of issues and risks which must be monitored, tracked, and addressed. While NPI and other processes are often very similar, they may be customized based upon the needs of a particular business or the requirements associated with a particular product. As a result, such processes may vary with respect to focus, steps, and nomenclature. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Traditionally, businesses have kept track of the steps comprising a project manually on paper or with the aid of locally-accessible computer programs, such as spreadsheets and project management applications. Such systems and methods, however, have several important limitations. Such systems and methods are not generic and new papers or spreadsheets must be generated, for example, each time a new product is introduced, or when a new business utilizes and existing process. Alternatively, when locally-accessible project management applications are used, information must be transferred from user to user via a computer-readable medium, such as on a diskette. This precludes the simultaneous updating of process-related information. Likewise, it is difficult for a remote user to monitor and track the status of a particular tollgate, activity, task, issue, or risk within the context of a given project. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> When a globally-accessible project management application is used, there is a need for systems and methods which allow the application to send messages to and receive messages from a plurality of remote users, check on the availability of and schedule meetings for a plurality of remote users, and assign tasks to a plurality of remote users. There is also a need for systems and methods which perform these functions using an external mail client system. Further, there is a need for systems and methods which allow email imported into or exported out of the project management application to be related to a particular business object or a prior message, i.e. threaded. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF INVENTION </heading>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The present invention overcomes the above limitations and provides systems and methods for acquiring and disseminating information, such as process management information, using an external mail client system. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> In one embodiment, a computerized system for acquiring and disseminating information using a mail client system includes an application operable for generating and incorporating a plurality of messages and one or more message handlers in communication with the application and the mail client system, the one or more message handlers operable for attaching identifying information to each of the plurality of messages. The system also includes a definition operable for translating each of the plurality of messages such that each of the plurality of messages may be understood by the one or more message handlers and a communications network operable for transmitting each of the plurality of messages between the application, the one or more message handlers, and the mail client system. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In another embodiment, a computerized method for acquiring and disseminating information using a mail client system includes generating and receiving a plurality of messages, attaching identifying information to each of the plurality of messages, translating each of the plurality of messages such that each of the plurality of messages may be understood by one or more message handlers, and transmitting each of the plurality of messages between an application, the one or more message handlers, and the mail client system using a communications network.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF DRAWINGS </heading>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a functional block diagram of one embodiment of a computerized system for acquiring and disseminating process management information using an external mail client system; </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a flow chart of one embodiment of a computerized method for acquiring and disseminating process management information using an external mail client system; </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a schematic diagram of one embodiment of a computerized system for acquiring and disseminating process management information using an external mail client system; </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a functional block diagram of one embodiment of a computer system comprising the system for acquiring and disseminating process management information using an external mail client system; and </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a functional block diagram of one embodiment of a system architecture for the system for acquiring and disseminating process management information using an external mail client system.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, in one embodiment, a computerized system <highlight><bold>10</bold></highlight> for acquiring and disseminating process management information includes a process management application <highlight><bold>12</bold></highlight> in communication with one or more message handlers <highlight><bold>14</bold></highlight>. The process management application <highlight><bold>12</bold></highlight> may allow a remote user to log into a globally-accessible system and create and store a plurality of tollgates, activities, tasks, issues, and risks associated with a given project. The globally-accessible system preferably includes a web page. The web page may be secure and may include a plurality of dynamic menus, drop-down lists, links, and the like displayed on a graphical user interface. Through the web page, a project creator, a project leader, a project manager, a team member, an activity or task performer, or any other authorized remote user may view information, submit information, and query the process management application <highlight><bold>12</bold></highlight>. After a set of tollgates, activities, tasks, issues, and risks has been created and stored, the process management application <highlight><bold>12</bold></highlight> may attach meta-data to the process-related information. The meta-data may include information about the tollgates, activities, tasks, issues, and risks. The meta-data allows the tollgates, activities, tasks, issues, and risks to be searched and identified. For example, the meta-data may be used to search for an issue among one or a plurality of projects, search for a risk among one or a plurality of projects, or identify a project based upon a given issue or risk. Once a tollgate, activity, task, issue, or risk has been searched and identified, the status of the tollgate, activity, task, issue, or risk may be monitored and tracked by a remote user. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The message handlers <highlight><bold>14</bold></highlight> are operable for sending outgoing messages <highlight><bold>16</bold></highlight> to and receiving incoming messages <highlight><bold>18</bold></highlight> from a plurality of remote users. These messages may be voting or non-voting <highlight><bold>20</bold></highlight> and may, optionally, contain attachments <highlight><bold>22</bold></highlight>. The message handlers <highlight><bold>14</bold></highlight> are also operable for querying the availability <highlight><bold>24</bold></highlight> of a plurality of remote users and scheduling meetings <highlight><bold>26</bold></highlight> for the plurality of remote users. Further, the message handlers <highlight><bold>14</bold></highlight> are operable for assigning tasks <highlight><bold>28</bold></highlight> to the plurality of remote users. These messages <highlight><bold>16</bold></highlight>,<highlight><bold>18</bold></highlight>, meeting requests <highlight><bold>26</bold></highlight>, and task assignments <highlight><bold>28</bold></highlight> may be viewed by a remote user in an external mail client system <highlight><bold>30</bold></highlight>, such as Microsoft Outlook (Microsoft Corporation, Redmond, Wash.). For example, meeting requests <highlight><bold>26</bold></highlight> may be viewed on a recipient&apos;s calendar, task assignments <highlight><bold>28</bold></highlight> may be viewed on a recipient&apos;s task list, etc. The recipient may have the option to accept or decline meetings or tasks. Beneficially, the systems and methods of the present invention allow lists of messages, meeting lists, and task lists generated by the process management application <highlight><bold>12</bold></highlight> to be integrated with those generated independent of the process management application <highlight><bold>12</bold></highlight>. It should be noted that the message handlers <highlight><bold>14</bold></highlight> may be used in conjunction with any mail client system <highlight><bold>30</bold></highlight> which supports email, scheduling, and tasking. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The message handlers <highlight><bold>14</bold></highlight> are also operable for attaching business object information to incoming messages <highlight><bold>18</bold></highlight> and outgoing messages <highlight><bold>16</bold></highlight> such that the process management application <highlight><bold>12</bold></highlight> may identify and update the appropriate business objects, presenting up-to-date information to remote users querying the globally-accessible system. This threading process may involve associating a message with the appropriate business object or associating a message with a prior message in the case of a reply. In general, when a business object is created, identifying information about the business object and a message itself are sent with the message via the message handler <highlight><bold>14</bold></highlight>. Messages may be viewed as they relate to business objects, as well as to related messages. Advantageously, the threading process allows relevant information to be attached to messages, allowing, for example, the history of messages to be tracked. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, in one embodiment, a computerized method <highlight><bold>32</bold></highlight> for acquiring and disseminating process management information includes the generation of a message or request <highlight><bold>34</bold></highlight> by the process management application <highlight><bold>12</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 1</cross-reference>). This message or request, which may be, for example, a meeting request or task request, may be threaded <highlight><bold>36</bold></highlight> by the process management application <highlight><bold>12</bold></highlight> and sent <highlight><bold>38</bold></highlight> to the mail client system <highlight><bold>30</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 1</cross-reference>). The message, meeting request, or task request may then be viewed <highlight><bold>40</bold></highlight> by a recipient. After an appropriate action <highlight><bold>42</bold></highlight> by the recipient, a message, meeting response, or task response may be created <highlight><bold>44</bold></highlight> by the recipient. This message, meeting response, or task response may then be sent via the mail client system <highlight><bold>30</bold></highlight> and received <highlight><bold>46</bold></highlight> by the process management application <highlight><bold>12</bold></highlight>. The process management application may then take appropriate action <highlight><bold>34</bold></highlight> given the nature or content of the message, meeting response, or task response. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, in one embodiment, a computerized system <highlight><bold>10</bold></highlight> for acquiring and disseminating process management information includes a remote user <highlight><bold>48</bold></highlight> linked to a process management web page <highlight><bold>50</bold></highlight> via a globally-distributed computer network <highlight><bold>52</bold></highlight>, such as the Internet or an intranet, and/or a local area network/wide area network (LAN/WAN) <highlight><bold>54</bold></highlight>. This link may be established along one or more data communication lines <highlight><bold>56</bold></highlight>, or via wireless interfaces. The remote user <highlight><bold>48</bold></highlight> may view, submit, and query information at the process management web page <highlight><bold>50</bold></highlight> through a browser application run by a computer <highlight><bold>58</bold></highlight>, such as a desktop or laptop personal computer. Through the process management web page <highlight><bold>50</bold></highlight>, the remote user <highlight><bold>48</bold></highlight> is linked, through a firewall <highlight><bold>60</bold></highlight>, to a process management application <highlight><bold>12</bold></highlight> and one or more message handlers <highlight><bold>14</bold></highlight> which operate on process-related data. The process management web page <highlight><bold>50</bold></highlight> may reside in a persistent storage device <highlight><bold>62</bold></highlight>, such as an application server, a web server, a file server, or a database server. The system <highlight><bold>10</bold></highlight> is set up such that the server <highlight><bold>62</bold></highlight> may communicate information to and acquire information from a plurality of remote users <highlight><bold>48</bold></highlight> simultaneously. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, in one embodiment, the process management application <highlight><bold>12</bold></highlight> and the message handlers <highlight><bold>14</bold></highlight> comprise one or more computer programs which acquire process-related data, store and archive the data, manipulate the data, and formulate outputs which may be viewed and queried by the remote user <highlight><bold>48</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 3</cross-reference>). The process management application <highlight><bold>12</bold></highlight> and the message handlers <highlight><bold>14</bold></highlight> preferably reside within the system memory device <highlight><bold>64</bold></highlight> of a computer system <highlight><bold>66</bold></highlight>, which may, optionally, be an application server, a web server, a file server, or a database server. The system memory device <highlight><bold>64</bold></highlight> may include a random-access memory (RAM) and a read-only memory (ROM). The system memory device <highlight><bold>64</bold></highlight> may also include other types of memory, such as programmable read-only memory (PROM), erasable programmable read-only memory (EPROM), and electrically erasable programmable read-only memory (EEPROM). The system memory device <highlight><bold>64</bold></highlight> also preferably includes an operating system <highlight><bold>68</bold></highlight> that executes on a central processor <highlight><bold>70</bold></highlight>. The central processor <highlight><bold>70</bold></highlight> may be, for example, a microprocessor. Suitable examples of microprocessors include, but are not limited to, those manufactured by Advanced Micro Devices, Inc. (Sunnyvale, Calif.), Intel Corporation (Santa Clara, Calif.), Motorola, Inc. (Schaumburg, Ill.), International Business Machines Corp. (Armonk, N.Y.), and Transmeta Corp. (Santa Clara, Calif.). The central processor <highlight><bold>70</bold></highlight> may include an arithmetic logic unit (ALU), which performs arithmetic and logic operations, and a control unit, which extracts instructions from the system memory device <highlight><bold>64</bold></highlight>. The operating system <highlight><bold>68</bold></highlight> may include a set of instructions which control the internal functions of the computer system <highlight><bold>66</bold></highlight>. For example, the operating system <highlight><bold>68</bold></highlight> may recognize input from input devices, send output to output devices, keep track of directories and files, and control various peripheral devices. Suitable examples of operating systems <highlight><bold>68</bold></highlight> include, but are not limited to, those manufactured by Microsoft Corporation (Redmond, Wash.) and Apple Computer, Inc. (Cupertino, Calif.). A system bus <highlight><bold>72</bold></highlight> may communicate signals, such as address signals, data signals, and control signals, between the system memory device <highlight><bold>64</bold></highlight>, the central processor <highlight><bold>70</bold></highlight>, and one or more peripheral ports <highlight><bold>74</bold></highlight>. The system memory device <highlight><bold>64</bold></highlight> may also contain an application program <highlight><bold>76</bold></highlight> and a basic input/output system (BIOS) <highlight><bold>78</bold></highlight>. The application program <highlight><bold>76</bold></highlight> cooperates with the operating system <highlight><bold>68</bold></highlight> and the one or more peripheral ports <highlight><bold>74</bold></highlight> to provide a graphical user interface (GUI) <highlight><bold>80</bold></highlight>. The GUI <highlight><bold>80</bold></highlight> typically includes a combination of signals communicated along a keyboard port <highlight><bold>82</bold></highlight>, a mouse port <highlight><bold>84</bold></highlight>, a monitor port <highlight><bold>86</bold></highlight>, and one or more drive ports <highlight><bold>88</bold></highlight>. The BIOS <highlight><bold>78</bold></highlight> may interpret requests from the operating system <highlight><bold>68</bold></highlight> and interface with such ports to execute the requests. Accordingly, suitable input/output devices include a keyboard, a mouse, a monitor, a printer, a plotter, speakers, etc. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The systems, methods, programs, and processes described in relation to the present invention are not limited to any particular computer system <highlight><bold>66</bold></highlight>. The computer system <highlight><bold>66</bold></highlight> may be a single device, or it may be a plurality of devices working in concert. The computer system <highlight><bold>66</bold></highlight> may take the form of a hand-held digital computer, a personal computer, a workstation, a server, a mainframe computer, and a supercomputer. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, in one embodiment, a system architecture <highlight><bold>90</bold></highlight> for the system <highlight><bold>10</bold></highlight> (<cross-reference target="DRAWINGS">FIGS. 1 and 3</cross-reference>) for acquiring and disseminating process management information includes a user interface <highlight><bold>92</bold></highlight> operable for sending messages to and receiving messages from an external mail client system. The user interface <highlight><bold>92</bold></highlight> may include, for example, a hypertext markup language (HTML) browser <highlight><bold>94</bold></highlight> in communication with a plurality of Java server pages (JSPs) <highlight><bold>96</bold></highlight> and a plurality of servlets <highlight><bold>98</bold></highlight>. The plurality of servlets <highlight><bold>98</bold></highlight> may include a plurality of Java class/subclass files <highlight><bold>100</bold></highlight> and one or more message handlers <highlight><bold>14</bold></highlight>. The message handlers <highlight><bold>14</bold></highlight> may include, for example, a generic message handler, operable for creating/reading extensible markup language (XML) messages, and an application message handler, operable for creating/reading project specific messages and attaching business objects to such messages. The JSPs <highlight><bold>96</bold></highlight>, servlets <highlight><bold>98</bold></highlight>, Java class/subclass files <highlight><bold>100</bold></highlight>, and message handlers <highlight><bold>14</bold></highlight> may be disposed within a first UNIX box <highlight><bold>102</bold></highlight>. The user interface <highlight><bold>92</bold></highlight>, and specifically the servlets <highlight><bold>98</bold></highlight>, are preferably in communication with an external message handler <highlight><bold>14</bold></highlight>&Prime; and a mail client <highlight><bold>104</bold></highlight>. The external message handler <highlight><bold>14</bold></highlight>&Prime; may be, for example, a generic message handler, operable for creating/reading XML messages. The external message handler <highlight><bold>14</bold></highlight>&Prime; and the mail client <highlight><bold>104</bold></highlight> may be disposed within a first NT box <highlight><bold>106</bold></highlight>. A Document Type Definition (DTD) is preferably used to operably link the servlets <highlight><bold>98</bold></highlight> to the external message handler <highlight><bold>14</bold></highlight>&Prime;, allowing information, i.e. messages, to be transmitted between the user interface <highlight><bold>92</bold></highlight> and the external mail client system. The DTD may be contained in a &lt;&excl;DOCTYPE&gt; tag, contained in an external file and referenced from a &lt;&excl;DOCTYPE&gt; tag, or both. The user interface <highlight><bold>92</bold></highlight>, and specifically the servlets <highlight><bold>98</bold></highlight>, may also be in communication with a repository <highlight><bold>108</bold></highlight>, which may be disposed within a second UNIX box <highlight><bold>110</bold></highlight>. The repository <highlight><bold>108</bold></highlight> may include business object information <highlight><bold>112</bold></highlight> and a message bucket <highlight><bold>114</bold></highlight> for temporarily storing XML messages. The repository <highlight><bold>110</bold></highlight> may also be in communication with a plurality of internal or external databases <highlight><bold>116</bold></highlight>, which may disposed within a third UNIX box <highlight><bold>118</bold></highlight>. The external message handler <highlight><bold>14</bold></highlight>&Prime; and the mail client <highlight><bold>104</bold></highlight> are preferably in communication with an exchange mail server <highlight><bold>120</bold></highlight>, which may be disposed within a second NT box <highlight><bold>122</bold></highlight>. An end user <highlight><bold>124</bold></highlight> is preferably in communication with and utilizes the exchange mail server <highlight><bold>120</bold></highlight> to send and receive XML messages. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> It should be noted that XML, as used herein, is a meta-language which may be used to describe a broad range of hierarchical markup languages. It defines a set of rules, guidelines, and conventions for describing structured data in a plain text, editable file. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> It is apparent that there has been provided, in accordance with the present invention, web-based systems and methods for acquiring and disseminating process management information using an external mail client system. While the present invention has been particularly shown and described in conjunction with examples and preferred embodiments thereof, it will be appreciated that variations in and modifications to the present invention may be effected by persons of ordinary skill in the art without departing from the spirit or scope of the present invention. For example, the computerized systems and methods of the present invention may be used for assuring process compliance for a wide array of processes, not simply those related to new product introductions. Further, the computerized systems and methods of the present invention may be used for allowing any web-based application to send messages to and receive messages from a plurality of remote users via an external mail client system, not simply a project or process management application. It is to be understood that the principles described herein apply in a similar manner, where applicable, to all examples and preferred embodiments. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A computerized system for acquiring and disseminating information using a mail client system, the system for acquiring and disseminating information comprising: 
<claim-text>an application operable for generating and incorporating a plurality of messages; </claim-text>
<claim-text>one or more message handlers in communication with the application and the mail client system, the one or more message handlers operable for attaching identifying information to each of the plurality of messages; </claim-text>
<claim-text>a definition operable for translating each of the plurality of messages such that each of the plurality of messages may be understood by the one or more message handlers; and </claim-text>
<claim-text>a communications network operable for transmitting each of the plurality of messages between the application, the one or more message handlers, and the mail client system. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein each of the plurality of messages are related to any of project tollgates, project activities, project tasks, project issues, project risks, and project meetings associated with the management of a process. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the one or more message handlers are operable for attaching business object information to each of the plurality of messages. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the one or more message handlers are operable for attaching information regarding related prior messages to each of the plurality of messages. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the communications network comprises a globally-distributed computer network. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the communications network further comprises a local area network (LAN). </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the communications network further comprises a wide area network (WAN). </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the definition interfaces the one or more message handlers by describing syntax in a common extensible markup language (XML) format. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A computerized system for acquiring and disseminating process management information, the system comprising: 
<claim-text>a process management application operable for generating and incorporating a plurality of messages, wherein each of the plurality of messages are related to any of project tollgates, project activities, project tasks, project issues, project risks, and project meetings; </claim-text>
<claim-text>a mail client system operable for generating and incorporating a plurality of messages, wherein each of the plurality of messages are related to any of project tollgates, project activities, project tasks, project issues, project risks, and project meetings; </claim-text>
<claim-text>one or more message handlers in communication with the process management application and the mail client system, the one or more message handlers operable for attaching identifying information to each of the plurality of messages; </claim-text>
<claim-text>a definition operable for translating each of the plurality of messages such that each of the plurality of messages may be understood by the one or more message handlers; and </claim-text>
<claim-text>a communications network operable for transmitting each of the plurality of messages between the process management application, the one or more message handlers, and the mail client system. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the one or more message handlers are operable for attaching business object information to each of the plurality of messages. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the one or more message handlers are operable for attaching information regarding related prior messages to each of the plurality of messages. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the communications network comprises a globally-distributed computer network. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the communications network further comprises a local area network (LAN). </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the communications network further comprises a wide area network (WAN). </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the definition interfaces the one or more message handlers by describing syntax in a common extensible markup language (XML) format. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A computerized method for acquiring and disseminating information using a mail client system, the method for acquiring and disseminating information comprising: 
<claim-text>generating and receiving a plurality of messages; </claim-text>
<claim-text>attaching identifying information to each of the plurality of messages; </claim-text>
<claim-text>translating each of the plurality of messages such that each of the plurality of messages may be understood by one or more message handlers; and </claim-text>
<claim-text>transmitting each of the plurality of messages between an application, the one or more message handlers, and the mail client system using a communications network. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein attaching identifying information to each of the plurality of messages further comprises attaching business object information to each of the plurality of messages. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein attaching identifying information to each of the plurality of messages further comprises attaching information regarding related prior messages to each of the plurality of messages. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the communications network comprises a globally-distributed computer network. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein the communications network further comprises a local area network (LAN). </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein the communications network further comprises a wide area network (WAN). </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein translating each of the plurality of messages such that each of the plurality of messages may be understood by one or more message handlers further comprises interfacing the one or more message handlers by describing syntax in a common extensible markup language (XML) format. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A computerized method for acquiring and disseminating process management information using a mail client system, the method for acquiring and disseminating process management information comprising: 
<claim-text>generating and receiving a plurality of messages related to any of project tollgates, project activities, project tasks, project issues, project risks, and project meetings; </claim-text>
<claim-text>attaching identifying information to each of the plurality of messages; </claim-text>
<claim-text>translating each of the plurality of messages such that each of the plurality of messages may be understood by one or more message handlers; and </claim-text>
<claim-text>transmitting each of the plurality of messages between a process management application, the one or more message handlers, and the mail client system using a globally-distributed computer network. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein attaching identifying information to each of the plurality of messages further comprises attaching business object information to each of the plurality of messages. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein attaching identifying information to each of the plurality of messages further comprises attaching information regarding related prior messages to each of the plurality of messages. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein the globally-distributed computer network further comprises a local area network (LAN). </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein the globally-distributed computer network further comprises a wide area network (WAN). </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein translating each of the plurality of messages such that each of the plurality of messages may be understood by one or more message handlers further comprises interfacing the one or more message handlers by describing syntax in a common extensible markup language (XML) format.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005057A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005057A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005057A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005057A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005057A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005057A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
