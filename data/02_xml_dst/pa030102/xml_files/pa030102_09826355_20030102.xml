<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004915A1-20030102-M00001.NB SYSTEM "US20030004915A1-20030102-M00001.NB" NDATA NB>
<!ENTITY US20030004915A1-20030102-M00001.TIF SYSTEM "US20030004915A1-20030102-M00001.TIF" NDATA TIF>
<!ENTITY US20030004915A1-20030102-M00002.NB SYSTEM "US20030004915A1-20030102-M00002.NB" NDATA NB>
<!ENTITY US20030004915A1-20030102-M00002.TIF SYSTEM "US20030004915A1-20030102-M00002.TIF" NDATA TIF>
<!ENTITY US20030004915A1-20030102-M00003.NB SYSTEM "US20030004915A1-20030102-M00003.NB" NDATA NB>
<!ENTITY US20030004915A1-20030102-M00003.TIF SYSTEM "US20030004915A1-20030102-M00003.TIF" NDATA TIF>
<!ENTITY US20030004915A1-20030102-M00004.NB SYSTEM "US20030004915A1-20030102-M00004.NB" NDATA NB>
<!ENTITY US20030004915A1-20030102-M00004.TIF SYSTEM "US20030004915A1-20030102-M00004.TIF" NDATA TIF>
<!ENTITY US20030004915A1-20030102-M00005.NB SYSTEM "US20030004915A1-20030102-M00005.NB" NDATA NB>
<!ENTITY US20030004915A1-20030102-M00005.TIF SYSTEM "US20030004915A1-20030102-M00005.TIF" NDATA TIF>
<!ENTITY US20030004915A1-20030102-M00006.NB SYSTEM "US20030004915A1-20030102-M00006.NB" NDATA NB>
<!ENTITY US20030004915A1-20030102-M00006.TIF SYSTEM "US20030004915A1-20030102-M00006.TIF" NDATA TIF>
<!ENTITY US20030004915A1-20030102-D00000.TIF SYSTEM "US20030004915A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004915A1-20030102-D00001.TIF SYSTEM "US20030004915A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004915A1-20030102-D00002.TIF SYSTEM "US20030004915A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004915A1-20030102-D00003.TIF SYSTEM "US20030004915A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004915A1-20030102-D00004.TIF SYSTEM "US20030004915A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004915A1-20030102-D00005.TIF SYSTEM "US20030004915A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004915A1-20030102-D00006.TIF SYSTEM "US20030004915A1-20030102-D00006.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004915</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09826355</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010405</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F007/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>707</class>
<subclass>001000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Discovery of inference rules from text</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Dekang</given-name>
<family-name>Lin</family-name>
</name>
<residence>
<residence-non-us>
<city>Edmonton</city>
<country-code>CA</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Patrick</given-name>
<family-name>Pantel</family-name>
</name>
<residence>
<residence-non-us>
<city>Edmonton</city>
<country-code>CA</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>THOMPSON LAMBERT</name-1>
<name-2>SUITE 703D, CRYSTAL PARK TWO</name-2>
<address>
<address-1>2121 CRYSTAL DRIVE</address-1>
<city>ARLINGTON</city>
<state>VA</state>
<postalcode>22202</postalcode>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The present invention provides a facility for discovering a set of inference rules, such as &ldquo;X is author of Y&ap;X wrote Y&rdquo;, &ldquo;X solved Y&ap;X found a solution to Y&rdquo;, and &ldquo;X caused Y&ap;Y is triggered by X&rdquo;, by analyzing a corpus of natural language text. The corpus is parsed to identify grammatical relationships between words and to build dependency trees formed of the relationships between the words. Paths linking words in the dependency trees are identified. If two paths tend to link the same sets of words, their meanings are taken to be similar. An inference rule is generated for each pair of similar paths. The output of the inventive system is a set of inference rules and a database in which to store these inference rules. The rules generated by the system are interpretable by machines and used in other applications (e.g. information extraction, information retrieval, and machine translation). </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This invention relates to the field of artificial intelligence, and, more specifically, to the fields of computational linguistics and information retrieval. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Text is the most significant repository of human knowledge. Many algorithms have been proposed to mine textual data. Algorithms have been proposed that focus on document clustering (Larsen, B. and Aone, C. 1999. Fast and effective text mining using linear-time document clustering. In <highlight><italic>Proceedings of KDD</italic></highlight>-99. pp. 16-22. San Diego, Calif.), identifying prototypical documents (Rajman, M. and Besan&ccedil;on, R. 1997. Text Mining: Natural Language Techniques and Text Mining Applications. In <highlight><italic>Proceedings of the seventh IFIP </italic></highlight>2.6 <highlight><italic>Working Conference on Database Semantics </italic></highlight>(<highlight><italic>DS</italic></highlight>-7).), or finding term associations (Lin, S. H., Shih, C. S., Chen, M. C., et al. 1998. Extracting Classification Knowledge of Internet Documents with Mining Term Associations: A Semantic Approach. In <highlight><italic>Proceedings of SIGIR</italic></highlight>-98. Melbourne, Australia.) and hyponym relationships (Hearst, M. 1992. Automatic Acquisition of Hyponyms from Large Text Corpora. In <highlight><italic>Proceedings of ACL</italic></highlight>-92. Nantes, France.) This invention addresses an unsupervised method for discovering inference rules, such as &ldquo;X is author of Y&ap;X wrote Y&rdquo;, &ldquo;X solved Y&ap;X found a solution to Y&rdquo;, and &ldquo;X caused Y&ap;Y is triggered by X&rdquo;. Inference rules are extremely important in many fields such as natural language processing, information retrieval, and artificial intelligence in general. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> For example, consider the query to an information retrieval system: &ldquo;Who is the author of the &lsquo;Star Spangled Banner&rsquo;&quest;&rdquo; Unless the system recognizes the relationship between &ldquo;X wrote Y&rdquo; and &ldquo;X is the author of Y&rdquo;, it would not necessarily rank the sentence </paragraph>
<paragraph id="P-0004" lvl="2"><number>&lsqb;0004&rsqb;</number> . . . Francis Scott Key wrote the &ldquo;Star Spangled Banner&rdquo; in 1814. </paragraph>
<paragraph id="P-0005" lvl="7"><number>&lsqb;0005&rsqb;</number> higher than the sentence </paragraph>
<paragraph id="P-0006" lvl="2"><number>&lsqb;0006&rsqb;</number> . . . comedian-actress Roseanne Barr sang her famous shrieking rendition of the &ldquo;Star Spangled Banner&rdquo; before a San Diego Padres-Cincinnati Reds game. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The statement &ldquo;X wrote Y&ap;X is the author of Y&rdquo; is referred to in this patent document as an inference rule. In previous work, such relationships have been referred to as paraphrases or variants (Sparck Jones, K. and Tait, J. I. 1984. Automatic Search Term Variant Generation. <highlight><italic>Journal of Documentation, </italic></highlight>40(1):50-66.; Fabre, C. and Jacquemin, C. 2000. Boosting Variant Recognition with Light Semantics. In <highlight><italic>Proceedings of COLING</italic></highlight>-2000. Sarrebr&uuml;cken, Germany.) In this patent document, inference rules include relationships that are not exactly paraphrases, but are nonetheless related and are potentially useful to information retrieval systems. For example, &ldquo;X caused Y&ap;Y is blamed on X&rdquo; is an inference rule even though the two phrases do not mean exactly the same thing. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Traditionally, knowledge bases containing such inference rules are created manually. This knowledge engineering task is extremely laborious. More importantly, building such a knowledge base is inherently difficult since humans are not good at generating a complete list of rules. For example, while it is quite trivial to come up with the rule &ldquo;X wrote Y&ap;X is the author of Y&rdquo;, it seems hard to dream up a rule like &ldquo;X manufacture Y&ap;X&apos;s Y factory&rdquo;, which can be used to infer that &ldquo;Chr&eacute;tien visited Peugot&apos;s newly renovated car factory in the afternoon&rdquo; contains an answer to the query &ldquo;What does Peugot manufacture&quest;&rdquo;</paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> It is known in the art of information retrieval to identify phrasal terms from queries and generate variants for query expansion. Query expansion is known to promote effective retrieval of information and a variety of query expansion algorithms have been proposed. U.S. Pat. 6,098,033 issued Aug. 1, 2000, disclosed a method for computing word similarity according to chains of semantic relationships between words. Examples of such semantic relationships include Cause, Domain, Hypernym, Location, Manner, Material, Means, Modifier, Part, and Possessor. While the method disclosed in (U.S. Pat. No. 6,089,033) uses chains of relationships as features to compute similarities between words, the invention disclosed in this patent document uses words as features to compute the similarity between chains of relationships. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> U.S. Pat. No. 6,076,088 issued Jun. 13, 2000, disclosed a method to extract Concept-Relation-Concept (CRC) triples from a text collection and to use the extracted CRC triples to answer queries about the text collection. The invention disclosed in this patent document differs from U.S. Pat. No. 6,076,088. Particularly, the CRC triples represent information explicitly stated in the text collection whereas operation of the present invention results in inference rules that are typically not stated explicitly in a text collection. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> This invention provides a facility for discovering a set of inference rules, such as &ldquo;X is author of Y&ap;X wrote Y&rdquo;, &ldquo;X solved Y&ap;X found a solution to Y&rdquo;, and &ldquo;X caused Y&ap;Y is triggered by X&rdquo;, by analyzing a corpus of natural language text. The corpus is parsed to identify grammatical relationships between words and to build dependency trees formed of the relationships between the words. Paths linking words in the dependency trees are identified. If two paths tend to link the same sets of words, their meanings are taken to be similar. An inference rule is generated for each pair of similar paths. The output of the inventive system is a set of inference rules. The rules generated by the system are interpretable by machines and used in other applications (e.g. information extraction, information retrieval, and machine translation). By contrast with Richardson (U.S. Pat. No. 6,098,033), paths are used as features to compute the similarity of words. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Thus, according to an aspect of the invention, there is provided a method of building a database from text, the method comprising the steps of parsing text to identify paths formed by concatenated relationships between words in the text and associating, in a computer, paths with each other based on a similarity measure between the paths. The similarity measure is based on the frequency of occurrences of words in the paths, where the words are at the end points of the paths. The step of associating paths with each other preferably comprises the step of counting occurrences of words at the end points of specific paths. Paths are associated based on the counts of occurrences of the words at the end points of the paths. Paths are associated only when the similarity measure exceeds a threshold. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> In another aspect of the invention, there is provided a method of information retrieval, the method comprising the steps of initiating a search for electronic information and expanding the search by reference to associated paths in a database constructed according to the preceding method of building a database. The search may be initiated from a location remote from the location of the database. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> In another aspect of the invention, there is provided computer readable media containing instructions for carrying out the method steps. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> These and other aspects of the invention are described in the detailed description of the invention and claimed in the claims that follow.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> There will now be described preferred embodiments of the invention, with reference to the drawings, by way of illustration only and not with the intention of limiting the scope of the invention, in which like numerals denote like elements and in which: </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows an information retrieval system using an inference rule database created according to the invention; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 2A and 2B</cross-reference> are each diagrams showing a dependency tree for use in a system of the invention; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a diagram illustrating a transformation used for modifying a dependency tree; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 4 and 5</cross-reference> illustrate dependency trees for specific sentences; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flow diagram illustrating constructing a database of similar paths according to the invention and using the constructed database in an information retrieval system; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a flow diagram illustrating the identification of paths in dependency trees according to the invention; and </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a flow diagram illustrating how paths are tested for compliance with constraints designed to identify valid paths. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> In this patent document, &ldquo;comprising&rdquo; means &ldquo;including&rdquo;. In addition, a reference to an element by the indefinite article &ldquo;a&rdquo; does not exclude the possibility that more than one of the element is present. Parsing, when referred to in this patent document, means a computer implemented system for analyzing syntactic structures of electronic text. Furthermore, &ldquo;text&rdquo; and &ldquo;corpus&rdquo; means &ldquo;any collection of natural language text&rdquo;. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> method of building a database containing rules relating expressions in natural language text may be implemented in a general purpose computer <highlight><bold>10</bold></highlight>, which may be any one of many PCs or other computers available on the market. The database <highlight><bold>24</bold></highlight> created by the method may be stored in another (or the same) general purpose computer <highlight><bold>12</bold></highlight>, which need not be in the same location as computer <highlight><bold>10</bold></highlight>. The computers <highlight><bold>10</bold></highlight> and <highlight><bold>12</bold></highlight> are linked by a communication link <highlight><bold>14</bold></highlight>, which could be any suitable link and does not have to be permanent, including a network such as the Internet. The computer <highlight><bold>12</bold></highlight> may be accessed for the purpose of information retrieval by a server <highlight><bold>16</bold></highlight>, which in turn may be linked to the computer <highlight><bold>12</bold></highlight> by any suitable link <highlight><bold>18</bold></highlight>, such as the Internet. The server <highlight><bold>16</bold></highlight> is connected by any suitable link <highlight><bold>20</bold></highlight>, such as the Internet, to a client <highlight><bold>22</bold></highlight>. A person searching for information inputs a search string to client computer <highlight><bold>22</bold></highlight>. The search string is forwarded to the server <highlight><bold>16</bold></highlight>, which parses the string and extracts paths from the parsed string. The paths are then forwarded to the computer <highlight><bold>12</bold></highlight> to retrieve associated paths from the database <highlight><bold>24</bold></highlight>. The associated paths are then used in server <highlight><bold>16</bold></highlight> to expand the set of words in the search string. The expanded search string is used to carry out the search according to conventional search techniques. Apart from the manner of construction of the database, and the content of the database, the techniques for carrying out the search illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> are known. For real time access, the server <highlight><bold>16</bold></highlight> may directly instruct the computer <highlight><bold>10</bold></highlight> to parse text and retrieve associated relations and then perform the search using the original search string as well as associated relations. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The database is created by a method of discovering inference rules from text. Any text may be used to create the database. For example, medical text may be used to generate inference rules in a medical domain. The first step is to parse the text. Any of a variety of parsers may be used. The parser output identifies characteristics or attributes of the words (noun, verb, etc), grammatical relationships between the words and paths formed by the grammatical relationships. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> As used in this patent document, a dependency relationship is a grammatical relationship, which is an asymmetric binary relationship between a word called head, and another word called modifier. The structure of a sentence is represented by a set of dependency relationships that form a tree. A word in the sentence may have several modifiers, but each word may modify at most one word. The root of the dependency tree does not modify any word. It is also called the head of the sentence. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> For example, <cross-reference target="DRAWINGS">FIGS. 2A and 2B</cross-reference> show the dependency tree for the sentence &ldquo;John found a solution to the problem&rdquo;, generated by a broad-coverage English parser called Minipar (Lin, D. 1993. Principle-Based Parsing Without Over Generation. In <highlight><italic>Proceedings of ACL</italic></highlight>-93. pp. 112-120. Columbus, Ohio), which is available from www.cs.ualberta.ca/&tilde;lindek/minipar.htm or by contacting the Department of Computer Science at the University of Alberta, Canada. <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> is a more compact form for the dependency tree of <cross-reference target="DRAWINGS">FIG. 2B</cross-reference>. The links in the diagram represent dependency relationships. The direction of a link is from the head to the modifier in the relationship. Labels associated with the links represent types of dependency relations. Table 1 lists a subset of the dependency relations in Minipar outputs. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The exemplary parser, Minipar, parses newspaper text at about 500 words per second on a Pentium-III(tm) 700 Mhz with 500 MB memory. Evaluation with the manually parsed SUSANNE corpus (Sampson, G. 1995. <highlight><italic>English for the Computer&mdash;The SUSANNE Corpus and Analytic Scheme. </italic></highlight>Clarendon Press. Oxford, England.) shows that about 89% of the dependency relationships in Minipar outputs are correct. Other broad-coverage English parsers such as those of Collins, 1996 (Collins, M. J. 1996. A New Statistical Parser Based on Bigram Lexical Dependencies. In <highlight><italic>Proceedings of ACL</italic></highlight>-96. pp. 184-191. Santa Cruz, Calif.); Charniak, 2000 (Charniak, E. 2000. A Maximum-Entropy-Inspired Parser. In <highlight><italic>Proceedings of the North American Chapter of the Association for Computational Linguistics. </italic></highlight>pp. 132-139. Seattle, Wash.) may also be used to parse text. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> In the dependency trees generated by Minipar, prepositions are represented by nodes. A transformation is applied for all the dependency trees. For each preposition, the prepositional complement is connected directly to the words modified by the preposition. The proposition is assigned as the label of the direct relationship. <cross-reference target="DRAWINGS">FIG. 3</cross-reference> gives an example for the phrase &ldquo;solution to the problem&rdquo; in which the two links in part (a) are replaced with a direct link shown in part (b). </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> After the transformation, each link between two words in a dependency tree represents a direct semantic relationship. A path is used to represent indirect semantic relationships between two content words (i.e. nouns, verbs, adjectives or adverbs). A path is named by concatenating dependency relationships and words along the path, excluding the words at the two ends. For the sentence in <cross-reference target="DRAWINGS">FIGS. 2A and 2B</cross-reference>, the path between John and problem is named: N:subj:V&larr;find&rarr;V:obj:N&rarr;solution&rarr;N:to:N (meaning &ldquo;X finds solution to Y&rdquo;). The reverse path can be written as:N:to:N&larr;solution&larr;N:obj:V&larr;find&rarr;V:subj:N. The root of both paths is find. A path begins and ends with two dependency relations, which are defined as the two slots of the path: SlotX on the left-hand side and SlotY on the right-hand side. The words connected by the path are called the fillers of the slots. For example, John fills the SlotX of N:subj:V&larr;find&rarr;V:obj:N&rarr;solution&rarr;N:to:N and problem fills the SlotY. The reverse is true for N:to:N&larr;solution&larr;N:obj:V&larr;find&rarr;V:subj:N. In a path, dependency relations that are not slots are called internal relations. For example, find&rarr;V:obj:N&rarr;solution is an internal relation in the path N:subj:V&larr;find&rarr;V:obj:N&rarr;solution&rarr;N:to:N. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Preferably, a set of constraints is imposed on the paths to be extracted from text for the following reasons: </paragraph>
<paragraph id="P-0033" lvl="2"><number>&lsqb;0033&rsqb;</number> most meaningful inference rules involve only paths that satisfy these conditions; </paragraph>
<paragraph id="P-0034" lvl="2"><number>&lsqb;0034&rsqb;</number> the constraints significantly reduce the number of distinct paths and, consequently, the amount of computation required for computing similar paths (described below); and </paragraph>
<paragraph id="P-0035" lvl="2"><number>&lsqb;0035&rsqb;</number> the constraints alleviate the sparse data problem because long paths tend to have very few occurrences. </paragraph>
<paragraph id="P-0036" lvl="7"><number>&lsqb;0036&rsqb;</number> The constraints are: </paragraph>
<paragraph id="P-0037" lvl="2"><number>&lsqb;0037&rsqb;</number> slot fillers must be nouns because slots correspond to variables in inference rules and the variables are instantiated by entities; </paragraph>
<paragraph id="P-0038" lvl="2"><number>&lsqb;0038&rsqb;</number> any dependency relation that does not connect two content words is excluded from a path. E.g. in <cross-reference target="DRAWINGS">FIGS. 2A and 2B</cross-reference>, the relation between a and solution is excluded; </paragraph>
<paragraph id="P-0039" lvl="2"><number>&lsqb;0039&rsqb;</number> the frequency count of an internal relation must exceed a threshold; and </paragraph>
<paragraph id="P-0040" lvl="2"><number>&lsqb;0040&rsqb;</number> an internal relation must be between a verb and an object-noun or a small clause. The relationship between find and solution in &ldquo;John found a solution to the problem&rdquo; is an example of a verb-object relation. The relationship between force and resign is an example of a verb-small clause relationship in the sentence shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The paths extracted from the exemplary sentence shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> and their meanings are:  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="133PT" align="left"/>
<colspec colname="2" colwidth="84PT" align="left"/>
<thead>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>N: subj: V&larr;buy&rarr;V: from: N</entry>
<entry>(X buys something from Y)</entry>
</row>
<row>
<entry>N: subj: V&larr;buy&rarr;N: obj: N</entry>
<entry>(X buys Y)</entry>
</row>
<row>
<entry>N: subj: V&larr;buy&rarr;V: obj: N&rarr;sheep&rarr;N:</entry>
<entry>(X buys Y sheep)</entry>
</row>
<row>
<entry>nn: N</entry>
</row>
<row>
<entry>N: nn: N&larr;sheep&larr;N: obj: V&larr;buy&rarr;V:</entry>
<entry>(X sheep is bought from Y)</entry>
</row>
<row>
<entry>from: N</entry>
</row>
<row>
<entry>N: obj: V&larr;buy&rarr;V: from: N</entry>
<entry>(X is bought from Y)</entry>
</row>
<row>
<entry>N: from: V&larr;buy&rarr;V: subj: N</entry>
<entry>(Y buys something from X)</entry>
</row>
<row>
<entry>N: obj: V&larr;buy&rarr;V: subj: N</entry>
<entry>(Y buys X)</entry>
</row>
<row>
<entry>N: nn: N&larr;sheep&larr;N: obj: V&larr;buy&rarr;V:</entry>
<entry>(Y buys X sheep)</entry>
</row>
<row>
<entry>subj: N</entry>
</row>
<row>
<entry>N: from: V&larr;buy&rarr;V: obj: N&rarr;sheep&rarr;N:</entry>
<entry>(Y sheep is bought from X)</entry>
</row>
<row>
<entry>nn: N</entry>
</row>
<row>
<entry>N: from: V&larr;buy&rarr;V: obj: N</entry>
<entry>(Y is bought from X)</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> A path is a binary relation between two entities. This invention incorporates an algorithm to automatically discover the inference relations between such binary relations. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> In the preferred embodiment, the algorithm makes use of an extension of the principle, known as the Distributional Hypothesis (Harris, Z. 1985. Distributional Structure. In: Katz, J. J. (ed.) The Philosophy of Linguistics. New York: Oxford University Press, pp. 26-47.) According to the Distributional Hypothesis words that tend to occur in the same contexts tend to have similar meanings. The present invention makes use of the principle in a different context and in a different way, using different formulae, from previous methods for computing the similarity between two sets of words. Some algorithms use the words that occurred in a fixed window of a given word as its context while others use the dependency relationships of a given word as its context (Lin, D. 1998. Extracting Collocations from Text Corpora. <highlight><italic>Workshop on Computational Terminology. </italic></highlight>pp. 57-63. Montreal, Canada.) Consider the words duty and responsibility. There are many contexts in which both of these words can fit. For example, </paragraph>
<paragraph id="P-0044" lvl="2"><number>&lsqb;0044&rsqb;</number> duty can be modified by adjectives such as additional, administrative, assigned, assumed, collective, congressional, constitutional, . . . , so can responsibility; </paragraph>
<paragraph id="P-0045" lvl="2"><number>&lsqb;0045&rsqb;</number> duty can be the object of verbs such as accept, articulate, assert, assign, assume, attend to, avoid, become, breach, . . . , so can responsibility. </paragraph>
<paragraph id="P-0046" lvl="7"><number>&lsqb;0046&rsqb;</number> Based on these common contexts, one can statistically determine that duty and responsibility have similar meanings. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> In the algorithms for finding word similarity, dependency links are treated as contexts of words. In contrast, the algorithm for finding inference rules described here treats the words that fill the slots of a path as a context for the path. Thus, if two paths tend to occur in similar contexts, the meanings of the paths tend to be similar. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> For example, Table 2 lists a set of example pairs of words connected by the paths N:subj:V&larr;find&rarr;V:obj:N&rarr;solution&rarr;N:to:N (&ldquo;X finds a solution to Y&rdquo;) and N:subj:V&larr;solve&rarr;V:obj:N (&ldquo;X solves Y&rdquo;). As it can be seen from Table 2, there are many overlaps between the corresponding slot fillers of the two paths, which indicates that the two paths have similar meaning. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> Given a path p and the words w<highlight><subscript>1 </subscript></highlight>and w<highlight><subscript>2</subscript></highlight>, which fill the SlotX and SlotY of p respectively, (p, SlotX, w<highlight><subscript>1</subscript></highlight>) and (p, SlotY, w<highlight><subscript>2</subscript></highlight>) are called triples and (SlotX, w<highlight><subscript>1</subscript></highlight>) and (SlotY, w<highlight><subscript>2</subscript></highlight>) are features of path p. To compute path similarities, the frequency counts of triples in a corpus are collected. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> A database is used to store the frequency counts of the triples. We call this database a triple database. The triple database is organized as a collection of entries, where each entry consists of all triples with a common path. An example entry in the triple database for the path </paragraph>
<paragraph id="P-0051" lvl="2"><number>&lsqb;0051&rsqb;</number> N:subj:V&larr;pull&rarr;V:obj:N&rarr;body&rarr;N:from:N (&ldquo;X pulls body from Y&rdquo;) </paragraph>
<paragraph id="P-0052" lvl="7"><number>&lsqb;0052&rsqb;</number> is shown in Table 2A. The first column of numbers in Table 2A represents the frequency counts of a word filling a slot of the path and the second column of numbers is the mutual information between a slot and a slot filler. Mutual information measures the strength of association between a slot and a filler. The triple database records the fillers of SlotX and SlotY separately. Looking at the triple database, one would be unable to tell which SlotX filler occurred with which SlotY filler in the corpus. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> Once the triple database is created, the similarity between two paths can be computed. Essentially, two paths have high similarity if there are a large number of common features. However, not every feature is equally important. For example, the word he is much more frequent than the word sheriff. Two paths sharing the feature (SlotX, he) is less indicative of their similarity than if they shared the feature (SlotX, sheriff). The similarity measure used here, which is known in the art in itself (Lin, D. 1998. Extracting Collocations from Text Corpora. <highlight><italic>Workshop on Computational Terminology. </italic></highlight>pp. 57-63. Montreal, Canada.) takes this into account by computing the mutual information between a feature and a path. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> Let &verbar;p, SlotX, w&verbar; denote the frequency count of the triple (p, SlotX, w), &verbar;p, SlotX, *&verbar; to denote  
<math-cwu id="MATH-US-00001">
<number>1</number>
<math>
<mrow>
  <mrow>
    <munder>
      <mo>&Sum;</mo>
      <mi>w</mi>
    </munder>
    <mo>&it;</mo>
    <mrow>
      <mo>|</mo>
      <mi>p</mi>
    </mrow>
  </mrow>
  <mo>,</mo>
  <mrow>
    <mi>Slot</mi>
    <mo>&it;</mo>
    <mstyle>
      <mtext>&emsp;</mtext>
    </mstyle>
    <mo>&it;</mo>
    <mi>X</mi>
  </mrow>
  <mo>,</mo>
  <mrow>
    <mi>w</mi>
    <mo>|</mo>
  </mrow>
  <mo>,</mo>
  <mrow>
    <mi>and</mi>
    <mo>&it;</mo>
    <mstyle>
      <mtext>&emsp;</mtext>
    </mstyle>
    <mo>|</mo>
    <mo>*</mo>
  </mrow>
  <mo>,</mo>
  <mrow>
    <mo>*</mo>
    <mrow>
      <mo>,</mo>
      <mrow>
        <mo>*</mo>
        <mrow>
          <mo>|</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mrow>
            <mi>to</mi>
            <mo>&it;</mo>
            <mstyle>
              <mtext>&emsp;</mtext>
            </mstyle>
            <mo>&it;</mo>
            <mi>denote</mi>
            <mo>&it;</mo>
            <mstyle>
              <mtext>&emsp;</mtext>
            </mstyle>
            <mo>&it;</mo>
            <munder>
              <mo>&Sum;</mo>
              <mrow>
                <mi>p</mi>
                <mo>,</mo>
                <mi>s</mi>
                <mo>,</mo>
                <mi>w</mi>
              </mrow>
            </munder>
          </mrow>
          <mo>|</mo>
          <mi>p</mi>
        </mrow>
      </mrow>
      <mo>,</mo>
      <mi>s</mi>
      <mo>&it;</mo>
      <mstyle>
        <mtext>&emsp;</mtext>
      </mstyle>
      <mo>,</mo>
      <mrow>
        <mi>w</mi>
        <mo>|</mo>
      </mrow>
      <mo>,</mo>
    </mrow>
  </mrow>
</mrow>
</math>
<mathematica-file id="MATHEMATICA-00001" file="US20030004915A1-20030102-M00001.NB"/>
<image id="EMI-M00001" wi="216.027" he="21.12075" file="US20030004915A1-20030102-M00001.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0055" lvl="7"><number>&lsqb;0055&rsqb;</number> Following (Lin, D. 1998. Extracting Collocations from Text Corpora. <highlight><italic>Workshop on Computational Terminology. </italic></highlight>pp. 57-63. Montreal, Canada.), the mutual information between a path slot and its filler can be computed by the formula:  
<math-cwu id="MATH-US-00002">
<number>2</number>
<math>
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <mi>m</mi>
          <mo>&it;</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mrow>
            <mi>i</mi>
            <mo>&af;</mo>
            <mrow>
              <mo>(</mo>
              <mrow>
                <mi>p</mi>
                <mo>,</mo>
                <mi>Slot</mi>
                <mo>,</mo>
                <mi>w</mi>
              </mrow>
              <mo>)</mo>
            </mrow>
          </mrow>
        </mrow>
        <mo>=</mo>
        <mrow>
          <mi>log</mi>
          <mo>&af;</mo>
          <mrow>
            <mo>(</mo>
            <mfrac>
              <mrow>
                <mrow>
                  <mo>|</mo>
                  <mi>p</mi>
                </mrow>
                <mo>,</mo>
                <mi>Slot</mi>
                <mo>,</mo>
                <mrow>
                  <mi>w</mi>
                  <mo>|</mo>
                  <mrow>
                    <mo>&times;</mo>
                    <mrow>
                      <mo>|</mo>
                      <mo>*</mo>
                    </mrow>
                  </mrow>
                </mrow>
                <mo>,</mo>
                <mi>Slot</mi>
                <mo>,</mo>
                <mrow>
                  <mo>*</mo>
                  <mo>|</mo>
                </mrow>
              </mrow>
              <mrow>
                <mrow>
                  <mo>|</mo>
                  <mi>p</mi>
                </mrow>
                <mo>,</mo>
                <mi>Slot</mi>
                <mo>,</mo>
                <mrow>
                  <mo>*</mo>
                  <mrow>
                    <mo>|</mo>
                    <mrow>
                      <mo>&times;</mo>
                      <mrow>
                        <mo>|</mo>
                        <mo>*</mo>
                      </mrow>
                    </mrow>
                  </mrow>
                </mrow>
                <mo>,</mo>
                <mi>Slot</mi>
                <mo>,</mo>
                <mrow>
                  <mi>w</mi>
                  <mo>|</mo>
                </mrow>
              </mrow>
            </mfrac>
            <mo>)</mo>
          </mrow>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>1</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
<mathematica-file id="MATHEMATICA-00002" file="US20030004915A1-20030102-M00002.NB"/>
<image id="EMI-M00002" wi="216.027" he="19.93005" file="US20030004915A1-20030102-M00002.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0056" lvl="7"><number>&lsqb;0056&rsqb;</number> Equation (1) measures the strength of association between a slot of a path and a filler of that slot. The strength of the association between a slot of a path and a filler of that slot is measured by comparing the observed frequency of the filler-slot combination with the predicted frequency of the filler-slot combination assuming independence between the filler and the slot. The observed frequency of a filler slot combination is &verbar;p, Slot, w&verbar;. The probability P<highlight><subscript>1 </subscript></highlight>of a word w filling a slot S of any path is:  
<math-cwu id="MATH-US-00003">
<number>3</number>
<math>
<mrow>
  <msub>
    <mi>P</mi>
    <mn>1</mn>
  </msub>
  <mo>=</mo>
  <mfrac>
    <mrow>
      <mrow>
        <mo>|</mo>
        <mo>*</mo>
      </mrow>
      <mo>,</mo>
      <mi>S</mi>
      <mo>,</mo>
      <mrow>
        <mi>w</mi>
        <mo>|</mo>
      </mrow>
    </mrow>
    <mrow>
      <mrow>
        <mo>|</mo>
        <mo>*</mo>
      </mrow>
      <mo>,</mo>
      <mi>S</mi>
      <mo>,</mo>
      <mrow>
        <mo>*</mo>
        <mo>|</mo>
      </mrow>
    </mrow>
  </mfrac>
</mrow>
</math>
<mathematica-file id="MATHEMATICA-00003" file="US20030004915A1-20030102-M00003.NB"/>
<image id="EMI-M00003" wi="216.027" he="18.00225" file="US20030004915A1-20030102-M00003.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0057" lvl="7"><number>&lsqb;0057&rsqb;</number> The probability P<highlight><subscript>2 </subscript></highlight>of any word filling a slot S of a path p is:  
<math-cwu id="MATH-US-00004">
<number>4</number>
<math>
<mrow>
  <msub>
    <mi>P</mi>
    <mn>2</mn>
  </msub>
  <mo>=</mo>
  <mfrac>
    <mrow>
      <mrow>
        <mo>|</mo>
        <mi>p</mi>
      </mrow>
      <mo>,</mo>
      <mi>S</mi>
      <mo>,</mo>
      <mrow>
        <mo>*</mo>
        <mo>|</mo>
      </mrow>
    </mrow>
    <mrow>
      <mrow>
        <mo>|</mo>
        <mo>*</mo>
      </mrow>
      <mo>,</mo>
      <mi>S</mi>
      <mo>,</mo>
      <mrow>
        <mo>*</mo>
        <mo>|</mo>
      </mrow>
    </mrow>
  </mfrac>
</mrow>
</math>
<mathematica-file id="MATHEMATICA-00004" file="US20030004915A1-20030102-M00004.NB"/>
<image id="EMI-M00004" wi="216.027" he="18.00225" file="US20030004915A1-20030102-M00004.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0058" lvl="7"><number>&lsqb;0058&rsqb;</number> If we assume that a filler w and a slot S of a path p are independent, the predicted frequency of the slot-filler combination is P<highlight><subscript>1</subscript></highlight>&times;P<highlight><subscript>2</subscript></highlight>&times;&verbar;*, S, *&verbar;. Then using the logarithm scale of the two frequency counts  
<math-cwu id="MATH-US-00005">
<number>5</number>
<math>
<mrow>
  <mrow>
    <mi>log</mi>
    <mo>&it;</mo>
    <mrow>
      <mo>(</mo>
      <mfrac>
        <mrow>
          <mrow>
            <mo>|</mo>
            <mi>p</mi>
          </mrow>
          <mo>,</mo>
          <mi>S</mi>
          <mo>,</mo>
          <mrow>
            <mi>w</mi>
            <mo>|</mo>
          </mrow>
        </mrow>
        <mrow>
          <mrow>
            <mrow>
              <msub>
                <mi>P</mi>
                <mn>1</mn>
              </msub>
              <mo>&times;</mo>
              <msub>
                <mi>P</mi>
                <mn>2</mn>
              </msub>
              <mo>&times;</mo>
            </mrow>
            <mo>|</mo>
            <mo>*</mo>
          </mrow>
          <mo>,</mo>
          <mi>S</mi>
          <mo>,</mo>
          <mrow>
            <mo>*</mo>
            <mo>|</mo>
          </mrow>
        </mrow>
      </mfrac>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mi>log</mi>
    <mo>&it;</mo>
    <mrow>
      <mo>(</mo>
      <mfrac>
        <mrow>
          <mrow>
            <mo>|</mo>
            <mi>p</mi>
          </mrow>
          <mo>,</mo>
          <mi>S</mi>
          <mo>,</mo>
          <mrow>
            <mi>w</mi>
            <mo>|</mo>
            <mrow>
              <mo>&times;</mo>
              <mrow>
                <mo>|</mo>
                <mo>*</mo>
              </mrow>
            </mrow>
          </mrow>
          <mo>,</mo>
          <mi>S</mi>
          <mo>,</mo>
          <mrow>
            <mo>*</mo>
            <mo>|</mo>
          </mrow>
        </mrow>
        <mrow>
          <mrow>
            <mo>|</mo>
            <mi>p</mi>
          </mrow>
          <mo>,</mo>
          <mi>S</mi>
          <mo>,</mo>
          <mrow>
            <mo>*</mo>
            <mrow>
              <mo>|</mo>
              <mrow>
                <mo>&times;</mo>
                <mrow>
                  <mo>|</mo>
                  <mo>*</mo>
                </mrow>
              </mrow>
            </mrow>
          </mrow>
          <mo>,</mo>
          <mi>S</mi>
          <mo>,</mo>
          <mrow>
            <mi>w</mi>
            <mo>|</mo>
          </mrow>
        </mrow>
      </mfrac>
      <mo>)</mo>
    </mrow>
  </mrow>
</mrow>
</math>
<mathematica-file id="MATHEMATICA-00005" file="US20030004915A1-20030102-M00005.NB"/>
<image id="EMI-M00005" wi="216.027" he="18.96615" file="US20030004915A1-20030102-M00005.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0059" lvl="7"><number>&lsqb;0059&rsqb;</number> equation 1 is obtained. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> A slot s of a path p is denoted by (p, s). The similarity between a pair of slots: slot<highlight><subscript>1</subscript></highlight>&equals;(p<highlight><subscript>1</subscript></highlight>, s) and slot<highlight><subscript>2</subscript></highlight>&equals;(p<highlight><subscript>2</subscript></highlight>, s), is defined as:  
<math-cwu id="MATH-US-00006">
<number>6</number>
<math>
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <mi>sim</mi>
          <mo>&af;</mo>
          <mrow>
            <mo>(</mo>
            <mrow>
              <msub>
                <mi>slot</mi>
                <mn>1</mn>
              </msub>
              <mo>,</mo>
              <msub>
                <mi>slot</mi>
                <mn>2</mn>
              </msub>
            </mrow>
            <mo>)</mo>
          </mrow>
        </mrow>
        <mo>=</mo>
        <mfrac>
          <mrow>
            <mrow>
              <munder>
                <mo>&Sum;</mo>
                <mrow>
                  <mi>w</mi>
                  <mo>&Element;</mo>
                  <mrow>
                    <mrow>
                      <mi>T</mi>
                      <mo>&af;</mo>
                      <mrow>
                        <mo>(</mo>
                        <mrow>
                          <msub>
                            <mi>p</mi>
                            <mn>1</mn>
                          </msub>
                          <mo>,</mo>
                          <mi>s</mi>
                        </mrow>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                    <mo>&Cap;</mo>
                    <mrow>
                      <mi>T</mi>
                      <mo>&af;</mo>
                      <mrow>
                        <mo>(</mo>
                        <mrow>
                          <msub>
                            <mi>p</mi>
                            <mn>2</mn>
                          </msub>
                          <mo>,</mo>
                          <mi>s</mi>
                        </mrow>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                  </mrow>
                </mrow>
              </munder>
              <mo>&it;</mo>
              <mrow>
                <mi>m</mi>
                <mo>&it;</mo>
                <mstyle>
                  <mtext>&emsp;</mtext>
                </mstyle>
                <mo>&it;</mo>
                <mrow>
                  <mi>i</mi>
                  <mo>&af;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <msub>
                        <mi>p</mi>
                        <mn>1</mn>
                      </msub>
                      <mo>,</mo>
                      <mi>s</mi>
                      <mo>,</mo>
                      <mi>w</mi>
                    </mrow>
                    <mo>)</mo>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
            <mo>+</mo>
            <mrow>
              <mi>m</mi>
              <mo>&it;</mo>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mrow>
                <mi>i</mi>
                <mo>&af;</mo>
                <mrow>
                  <mo>(</mo>
                  <mrow>
                    <msub>
                      <mi>p</mi>
                      <mn>2</mn>
                    </msub>
                    <mo>,</mo>
                    <mi>s</mi>
                    <mo>,</mo>
                    <mi>w</mi>
                  </mrow>
                  <mo>)</mo>
                </mrow>
              </mrow>
            </mrow>
          </mrow>
          <mrow>
            <mrow>
              <munder>
                <mo>&Sum;</mo>
                <mrow>
                  <mi>w</mi>
                  <mo>&Element;</mo>
                  <mrow>
                    <mi>T</mi>
                    <mo>&af;</mo>
                    <mrow>
                      <mo>(</mo>
                      <mrow>
                        <msub>
                          <mi>p</mi>
                          <mn>1</mn>
                        </msub>
                        <mo>,</mo>
                        <mi>s</mi>
                      </mrow>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                </mrow>
              </munder>
              <mo>&it;</mo>
              <mrow>
                <mi>m</mi>
                <mo>&it;</mo>
                <mstyle>
                  <mtext>&emsp;</mtext>
                </mstyle>
                <mo>&it;</mo>
                <mrow>
                  <mi>i</mi>
                  <mo>&af;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <msub>
                        <mi>p</mi>
                        <mn>1</mn>
                      </msub>
                      <mo>,</mo>
                      <mi>s</mi>
                      <mo>,</mo>
                      <mi>w</mi>
                    </mrow>
                    <mo>)</mo>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
            <mo>+</mo>
            <mrow>
              <munder>
                <mo>&Sum;</mo>
                <mrow>
                  <mi>w</mi>
                  <mo>&Element;</mo>
                  <mrow>
                    <mi>T</mi>
                    <mo>&af;</mo>
                    <mrow>
                      <mo>(</mo>
                      <mrow>
                        <msub>
                          <mi>p</mi>
                          <mn>2</mn>
                        </msub>
                        <mo>,</mo>
                        <mi>s</mi>
                      </mrow>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                </mrow>
              </munder>
              <mo>&it;</mo>
              <mrow>
                <mi>m</mi>
                <mo>&it;</mo>
                <mstyle>
                  <mtext>&emsp;</mtext>
                </mstyle>
                <mo>&it;</mo>
                <mrow>
                  <mi>i</mi>
                  <mo>&af;</mo>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <msub>
                        <mi>p</mi>
                        <mn>2</mn>
                      </msub>
                      <mo>,</mo>
                      <mi>s</mi>
                      <mo>,</mo>
                      <mi>w</mi>
                    </mrow>
                    <mo>)</mo>
                  </mrow>
                </mrow>
              </mrow>
            </mrow>
          </mrow>
        </mfrac>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>2</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
<mathematica-file id="MATHEMATICA-00006" file="US20030004915A1-20030102-M00006.NB"/>
<image id="EMI-M00006" wi="216.027" he="36.9684" file="US20030004915A1-20030102-M00006.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0061" lvl="7"><number>&lsqb;0061&rsqb;</number> where p<highlight><subscript>1 </subscript></highlight>and p<highlight><subscript>2 </subscript></highlight>are paths, s is a slot of p<highlight><subscript>1 </subscript></highlight>and p<highlight><subscript>2</subscript></highlight>, T(p<highlight><subscript>1</subscript></highlight>, s) and T(p<highlight><subscript>2</subscript></highlight>, s) are sets of words that fill in the s slot of paths p<highlight><subscript>1 </subscript></highlight>and p<highlight><subscript>2 </subscript></highlight>respectively. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> Equation (2) measures the similarity between two slots. The similarity of two slots is a ratio between the commonality of the two slots and the totality of the two slots. The commonality of two slots is measured by the sum of association strength between the common fillers of the slots and the respective slots of the fillers. The totality of two slots is measured by the sum of association strength of the fillers of the first slot and the fillers of the second slot. The set of common fillers of two slots (p<highlight><subscript>1</subscript></highlight>, s) and (p<highlight><subscript>2</subscript></highlight>, s) is given by T(p<highlight><subscript>1</subscript></highlight>, s)&cap;T(p<highlight><subscript>2</subscript></highlight>, s). The commonality of two slots (p<highlight><subscript>1</subscript></highlight>, s) and (p<highlight><subscript>2</subscript></highlight>, s) is given by:</paragraph>
<paragraph lvl="0"><in-line-formula>&Sgr;<highlight><subscript>w&isin;T(p</subscript></highlight><highlight><subscript><highlight><subscript>1</subscript></highlight></subscript></highlight><highlight><subscript>,s)&cap;T(p</subscript></highlight><highlight><subscript><highlight><subscript>2</subscript></highlight></subscript></highlight><highlight><subscript>,s)</subscript></highlight>mi(p<highlight><subscript>1</subscript></highlight>,s,w)&plus;mi(p<highlight><subscript>2</subscript></highlight>,s,w)</in-line-formula></paragraph>
<paragraph id="P-0063" lvl="7"><number>&lsqb;0063&rsqb;</number> The totality of two slots (p<highlight><subscript>1</subscript></highlight>, s) and (p<highlight><subscript>2</subscript></highlight>, s) is given by:</paragraph>
<paragraph lvl="0"><in-line-formula>&Sgr;<highlight><subscript>w&isin;T(p</subscript></highlight><highlight><subscript><highlight><subscript>1</subscript></highlight></subscript></highlight><highlight><subscript>,s)</subscript></highlight>mi(p<highlight><subscript>1</subscript></highlight>,s,w)&plus;&Sgr;<highlight><subscript>w&isin;T(p</subscript></highlight><highlight><subscript><highlight><subscript>2</subscript></highlight></subscript></highlight><highlight><subscript>,s)</subscript></highlight>mi(p<highlight><subscript>2</subscript></highlight>,s,w)</in-line-formula></paragraph>
<paragraph id="P-0064" lvl="7"><number>&lsqb;0064&rsqb;</number> The similarity between two slots (p<highlight><subscript>1</subscript></highlight>, s) and (p<highlight><subscript>2</subscript></highlight>, s) is then given by equation 2. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> The similarity between a pair of paths p<highlight><subscript>1 </subscript></highlight>and p<highlight><subscript>2 </subscript></highlight>is defined as the geometric average of the similarities of their SlotX and SlotY slots:</paragraph>
<paragraph lvl="0"><in-line-formula>S(p<highlight><subscript>1</subscript></highlight>,p<highlight><subscript>2</subscript></highlight>) &equals;{square root}{square root over (sim(SlotX<highlight><subscript>1</subscript></highlight>,SlotX<highlight><subscript>2</subscript></highlight>)&times;sim(SlotY<highlight><subscript>1</subscript></highlight>,SlotY<highlight><subscript>2</subscript></highlight>))}&emsp;&emsp;(3) </in-line-formula></paragraph>
<paragraph id="P-0066" lvl="7"><number>&lsqb;0066&rsqb;</number> where SlotX<highlight><subscript>i </subscript></highlight>and SlotY<highlight><subscript>i </subscript></highlight>are path i&apos;s SlotX and SlotY slots. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, the steps carried out during an implementation of the invention are set forward. At step <highlight><bold>101</bold></highlight>, each sentence in the text (corpus) under consideration is parsed to identify paths formed by concatenated grammatical relationships between words in the text. For each parsed sentence <highlight><bold>102</bold></highlight>, paths are extracted from the sentence in step <highlight><bold>103</bold></highlight> and a count is made of the extracted paths in a triple database <highlight><bold>104</bold></highlight>. The counts determined at step <highlight><bold>104</bold></highlight> are the counts &verbar;p, Slot, w&verbar;. The program then returns to the next parsed sentence <highlight><bold>105</bold></highlight> and the process continues until all paths have been counted. The counts are then used as for example in the above noted equations to yield a similarity measure <highlight><bold>106</bold></highlight>, from which a ranked list of associated relations may be produced <highlight><bold>107</bold></highlight> as described below. Various similarity measures are possible (Frakes, W. B. and Baeza-Yates, R., editors. 1992. <highlight><italic>Information Retrieval, Data Structure and Algorithms. </italic></highlight>Prentice Hall.) The ranked associated paths <highlight><bold>107</bold></highlight> are stored in a database <highlight><bold>108</bold></highlight>. The database <highlight><bold>108</bold></highlight> may then be used in a search <highlight><bold>109</bold></highlight>. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> Step <highlight><bold>103</bold></highlight> is expanded in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. For each word in a parsed sentence <highlight><bold>201</bold></highlight>, and for each path between that word and another word in the same sentence <highlight><bold>202</bold></highlight>, first check that the path is valid <highlight><bold>203</bold></highlight> and then add it to a list of paths for that word <highlight><bold>204</bold></highlight>, and repeat for each path <highlight><bold>205</bold></highlight> and for each word <highlight><bold>206</bold></highlight> to yield a path list for each word and path. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> To check that a path is valid <highlight><bold>203</bold></highlight>, the procedure set forward in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is followed. For each relationship in the input path <highlight><bold>301</bold></highlight>, check that the path satisfies the constraints mentioned above. First check that the relationship connects two content words <highlight><bold>302</bold></highlight>. If the program returns yes for this test, then the program checks if the relationship is an internal relation <highlight><bold>303</bold></highlight>. If the program returns yes for this test, then the program checks whether the relationship has a frequency greater than a threshold <highlight><bold>304</bold></highlight> and whether the relationship connects a verb with either an object clause or small clause <highlight><bold>305</bold></highlight>. If the program returns no for any of the steps <highlight><bold>302</bold></highlight>, <highlight><bold>304</bold></highlight>, or <highlight><bold>305</bold></highlight>, then the program returns the indicator FALSE for that path in step <highlight><bold>203</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. If the program does not return no for any of the steps <highlight><bold>302</bold></highlight>, <highlight><bold>304</bold></highlight>, and <highlight><bold>305</bold></highlight>, then the program repeats this verification <highlight><bold>306</bold></highlight> for each relationship of the input path. If the program does not return no for steps <highlight><bold>302</bold></highlight>, <highlight><bold>304</bold></highlight>, and <highlight><bold>305</bold></highlight> for any relationship in the input path, then the program returns the indicator TRUE for that path in step <highlight><bold>203</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> Software for implementing this invention may be readily prepared from the flow diagrams and descriptions set out here. It is preferable to use an existing parsing program for parsing. The software may be stored on computer readable media such as a hard disk or compact disk. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> The discovery of inference rules is made by finding the most similar paths of a given path. The challenge here is that there are a large number of paths in the triple database (step <highlight><bold>104</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>). Even a simple triple database may contain over 200,000 distinct paths. Computing the similarity between every pair of paths is impractical with present computation devices. Given a path p, an exemplary algorithm for finding the most similar paths of p takes three steps: </paragraph>
<paragraph id="P-0072" lvl="2"><number>&lsqb;0072&rsqb;</number> 1) Retrieve all the paths that share at least one feature with p and call them candidate paths. This can be done efficiently by storing for each word the set of slots it fills in. </paragraph>
<paragraph id="P-0073" lvl="2"><number>&lsqb;0073&rsqb;</number> 2) For each candidate path c, count the number of features shared by c and p. Filter out c if the number of its common features with p is less than a fixed percent (for example 1%) of the total number of features for p and c. This step effectively uses a simpler similarity formula to filter out some of the paths since computing mutual information is more costly than counting the number of features. This idea has previously been used in Canopy (McCallum, A., Nigam, K., and Ungar, L. H. 2000. Efficient Clustering of High-Dimensional Data Sets with Application to Reference Matching. In <highlight><italic>Proceedings of KDD</italic></highlight>-2000. Boston, Mass.) </paragraph>
<paragraph id="P-0074" lvl="2"><number>&lsqb;0074&rsqb;</number> 3) Compute the similarity between p and the candidates that passed the filter using equation (3) and output the paths in descending order of their similarity to p. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> Table 3 lists the Top-50 most similar paths to &ldquo;X solves Y&rdquo; generated by an algorithm according to the invention. The ones tagged with an asterisk (*) are incorrect. Most of the paths can be considered as paraphrases of the original expression. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> The inference rules discovered by the algorithm represent linguistic knowledge about natural language expressions. In turn, this knowledge can be used to mine other types of knowledge from text. Consider the Top-50 paths similar to &ldquo;X causes Y&rdquo; generated by the invention in Table 4. Suppose one wants to find out from the medical literature causal relationships involving the drug phentolamine. Many information extraction (IE) systems make use of manually constructed templates that are semantically similar to the paths in Table 4. Translating the paths into extraction templates, an IE system can be used to extract causal relations from medical text. The incorrect paths (with asterisks) in Table 4 exemplify a main source of error in the invention. The problem is that a cause in a causal event might be the effect of another causal event. Therefore, there is a significant overlap between the SlotX and SlotY of the path &ldquo;X cause Y&rdquo;. Since the similarity between paths depends totally on the similarity of their slots, slots with the same kind of fillers are not distinguished in the present invention. It is easy to predict whether this type of error will happen in the outputs for a given path by computing the similarity between its SlotX and its SlotY. The higher this similarity is, the more likely the problem arises. However, teasing out the incorrect inference rules caused by this may be difficult, hence some caution has to be taken when using the results. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> Better tools are necessary to tap into the vast amount of textual data that is growing at an astronomical pace. Knowledge about inference relationships in natural language expressions would be extremely useful for such tools. In the present invention, such knowledge is discovered automatically from a large corpus of text. Paths in dependency trees tend to have similar meanings if they connect similar sets of words. Treating paths as binary relations, the inventive system is able to generate inference rules by searching for similar paths. It is difficult for humans to recall a list of inference rules. However, given the output of the present invention, humans can easily identify the correct inference rules. Hence, at the least, the present system would greatly ease the manual construction of inference rules for an information retrieval system. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> Care must be taken to account for polarity in inference relationships. High similarity values are often assigned to relations with opposite polarity. For example, &ldquo;X worsens Y&rdquo; has one of the highest similarity to &ldquo;X solves Y&rdquo; according to equation (2). In some situations, this may be helpful while for others it may cause confusion. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> Paths may be extended with constraints on the inference rule&apos;s variables. For example, instead of generating a rule &ldquo;X manufactures Y&ap;X&apos;s Y factory&rdquo;, there may be generated a rule with an additional clause: &ldquo;X manufactures Y&ap;X&apos;s Y factory, where Y is an artifact&rdquo;. The &ldquo;where&rdquo; clause can be potentially discovered by generalizing the intersection of the SlotY fillers of the two relations. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> Immaterial modifications may be made to the invention described here without departing from the essence of the invention.  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 1</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>A subset of the dependency relations in Minipar outputs.</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="49PT" align="left"/>
<colspec colname="2" colwidth="91PT" align="left"/>
<colspec colname="3" colwidth="77PT" align="left"/>
<tbody valign="top">
<row>
<entry>RELATION</entry>
<entry>DESCRIPTION</entry>
<entry>EXAMPLE</entry>
</row>
<row><entry namest="1" nameend="3" align="center" rowsep="1"></entry>
</row>
<row>
<entry>appo</entry>
<entry>appositive of a noun</entry>
<entry>the CEO, John</entry>
</row>
<row>
<entry>det</entry>
<entry>determiner of a noun</entry>
<entry>the dog</entry>
</row>
<row>
<entry>gen</entry>
<entry>genitive modifier of a noun</entry>
<entry>John&apos;s dog</entry>
</row>
<row>
<entry>mod</entry>
<entry>adjunct modifier of any</entry>
<entry>tiny hole</entry>
</row>
<row>
<entry></entry>
<entry>type of head</entry>
</row>
<row>
<entry>nn</entry>
<entry>prenominal modifier of a noun</entry>
<entry>station manager</entry>
</row>
<row>
<entry>pcomp</entry>
<entry>complement of a preposition</entry>
<entry>in the garden</entry>
</row>
<row>
<entry>subj</entry>
<entry>subject of a verb</entry>
<entry>John loves Mary.</entry>
</row>
<row>
<entry>sc</entry>
<entry>small clause complement</entry>
<entry>She forced him to resign</entry>
</row>
<row>
<entry></entry>
<entry>of a verb</entry>
</row>
<row><entry namest="1" nameend="3" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number>  
<table-cwu id="TABLE-US-00003">
<number>3</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 2a</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>An example entry in the triple database for the</entry>
</row>
<row>
<entry>path &ldquo;X pulls body from Y&rdquo;.</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>X pulls body from Y:</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="98PT" align="left"/>
<colspec colname="2" colwidth="14PT" align="center"/>
<colspec colname="3" colwidth="77PT" align="center"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>SlotX:</entry>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry>diver</entry>
<entry>1</entry>
<entry>2.45</entry>
</row>
<row>
<entry></entry>
<entry>equipment</entry>
<entry>1</entry>
<entry>1.65</entry>
</row>
<row>
<entry></entry>
<entry>police</entry>
<entry>2</entry>
<entry>2.24</entry>
</row>
<row>
<entry></entry>
<entry>rescuer</entry>
<entry>3</entry>
<entry>4.84</entry>
</row>
<row>
<entry></entry>
<entry>resident</entry>
<entry>1</entry>
<entry>1.60</entry>
</row>
<row>
<entry></entry>
<entry>who</entry>
<entry>2</entry>
<entry>1.32</entry>
</row>
<row>
<entry></entry>
<entry>worker</entry>
<entry>1</entry>
<entry>1.37</entry>
</row>
<row>
<entry></entry>
<entry>SlotY:</entry>
</row>
<row>
<entry></entry>
<entry>bus</entry>
<entry>2</entry>
<entry>3.09</entry>
</row>
<row>
<entry></entry>
<entry>coach</entry>
<entry>1</entry>
<entry>2.05</entry>
</row>
<row>
<entry></entry>
<entry>debris</entry>
<entry>1</entry>
<entry>2.36</entry>
</row>
<row>
<entry></entry>
<entry>feet</entry>
<entry>1</entry>
<entry>1.75</entry>
</row>
<row>
<entry></entry>
<entry>hut</entry>
<entry>1</entry>
<entry>2.73</entry>
</row>
<row>
<entry></entry>
<entry>landslide</entry>
<entry>1</entry>
<entry>2.39</entry>
</row>
<row>
<entry></entry>
<entry>metal</entry>
<entry>1</entry>
<entry>2.09</entry>
</row>
<row>
<entry></entry>
<entry>wreckage</entry>
<entry>3</entry>
<entry>4.81</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="3" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number>  
<table-cwu id="TABLE-US-00004">
<number>4</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 2</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Sample slot fillers for two paths extracted from a newspaper corpus.</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="98PT" align="center"/>
<colspec colname="2" colwidth="14PT" align="left"/>
<colspec colname="3" colwidth="77PT" align="center"/>
<colspec colname="4" colwidth="14PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&ldquo;X finds a solution to Y&rdquo;</entry>
<entry></entry>
<entry>&ldquo;X solves Y&rdquo;</entry>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="49PT" align="left"/>
<colspec colname="2" colwidth="63PT" align="left"/>
<colspec colname="3" colwidth="49PT" align="left"/>
<colspec colname="4" colwidth="42PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>SLOTX</entry>
<entry>SLOTY</entry>
<entry>SLOTX</entry>
<entry>SLOTY</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="4" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry>commission</entry>
<entry>strike</entry>
<entry>committee</entry>
<entry>problem</entry>
</row>
<row>
<entry></entry>
<entry>committee</entry>
<entry>civil war</entry>
<entry>clout</entry>
<entry>crisis</entry>
</row>
<row>
<entry></entry>
<entry>committee</entry>
<entry>crisis</entry>
<entry>government</entry>
<entry>problem</entry>
</row>
<row>
<entry></entry>
<entry>government</entry>
<entry>crisis</entry>
<entry>he</entry>
<entry>mystery</entry>
</row>
<row>
<entry></entry>
<entry>government</entry>
<entry>problem</entry>
<entry>she</entry>
<entry>problem</entry>
</row>
<row>
<entry></entry>
<entry>he</entry>
<entry>problem</entry>
<entry>petition</entry>
<entry>woe</entry>
</row>
<row>
<entry></entry>
<entry>I</entry>
<entry>situation</entry>
<entry>researcher</entry>
<entry>mystery</entry>
</row>
<row>
<entry></entry>
<entry>legislator</entry>
<entry>budget deficit</entry>
<entry>resistance</entry>
<entry>crime</entry>
</row>
<row>
<entry></entry>
<entry>sheriff</entry>
<entry>dispute</entry>
<entry>sheriff</entry>
<entry>murder</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="4" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number>  
<table-cwu id="TABLE-US-00005">
<number>5</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 3</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>The top-50 most similar paths to &ldquo;X solves Y&rdquo;.</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="91PT" align="left"/>
<colspec colname="2" colwidth="112PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Y is solved by X</entry>
<entry>X clears up Y</entry>
</row>
<row>
<entry></entry>
<entry>X resolves Y</entry>
<entry>*X creates Y</entry>
</row>
<row>
<entry></entry>
<entry>X finds a solution to Y</entry>
<entry>*Y leads to X</entry>
</row>
<row>
<entry></entry>
<entry>X tries to solve Y</entry>
<entry>*Y is eased between X</entry>
</row>
<row>
<entry></entry>
<entry>X deals with Y</entry>
<entry>X gets down to Y</entry>
</row>
<row>
<entry></entry>
<entry>Y is resolved by X</entry>
<entry>*X worsens Y</entry>
</row>
<row>
<entry></entry>
<entry>X addresses Y</entry>
<entry>X ends Y</entry>
</row>
<row>
<entry></entry>
<entry>X seeks a solution to Y</entry>
<entry>*X blames something for Y</entry>
</row>
<row>
<entry></entry>
<entry>X do something about Y</entry>
<entry>X bridges Y</entry>
</row>
<row>
<entry></entry>
<entry>X solution to Y</entry>
<entry>X averts Y</entry>
</row>
<row>
<entry></entry>
<entry>Y is resolved in X</entry>
<entry>*X talks about Y</entry>
</row>
<row>
<entry></entry>
<entry>Y is solved through X</entry>
<entry>X grapples with Y</entry>
</row>
<row>
<entry></entry>
<entry>X rectifies Y</entry>
<entry>*X leads to Y</entry>
</row>
<row>
<entry></entry>
<entry>X copes with Y</entry>
<entry>X avoids Y</entry>
</row>
<row>
<entry></entry>
<entry>X overcomes Y</entry>
<entry>X solves Y problem</entry>
</row>
<row>
<entry></entry>
<entry>X eases Y</entry>
<entry>X combats Y</entry>
</row>
<row>
<entry></entry>
<entry>X tackles Y</entry>
<entry>X handles Y</entry>
</row>
<row>
<entry></entry>
<entry>X alleviates Y</entry>
<entry>X faces Y</entry>
</row>
<row>
<entry></entry>
<entry>X corrects Y</entry>
<entry>X eliminates Y</entry>
</row>
<row>
<entry></entry>
<entry>X is a solution to Y</entry>
<entry>Y is settled by X</entry>
</row>
<row>
<entry></entry>
<entry>X makes Y worse</entry>
<entry>*X thinks about Y</entry>
</row>
<row>
<entry></entry>
<entry>X irons out Y</entry>
<entry>X comes up with a solution to Y</entry>
</row>
<row>
<entry></entry>
<entry>*Y is blamed for X</entry>
<entry>X offers a solution to Y</entry>
</row>
<row>
<entry></entry>
<entry>X wrestles with Y</entry>
<entry>X helps somebody solve Y</entry>
</row>
<row>
<entry></entry>
<entry>X comes to grip with Y</entry>
<entry>*Y is put behind X</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number>  
<table-cwu id="TABLE-US-00006">
<number>6</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 4</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>The top-50 most similar paths to &ldquo;X causes Y&rdquo;.</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="91PT" align="left"/>
<colspec colname="2" colwidth="98PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Y is caused by X</entry>
<entry>*Y contributes to X</entry>
</row>
<row>
<entry></entry>
<entry>X cause something Y</entry>
<entry>*X results from Y</entry>
</row>
<row>
<entry></entry>
<entry>X leads to Y</entry>
<entry>*X adds to Y</entry>
</row>
<row>
<entry></entry>
<entry>X triggers Y</entry>
<entry>X means Y</entry>
</row>
<row>
<entry></entry>
<entry>*X is caused by Y</entry>
<entry>*X reflects Y</entry>
</row>
<row>
<entry></entry>
<entry>*Y causes X</entry>
<entry>X creates Y</entry>
</row>
<row>
<entry></entry>
<entry>Y is blamed on X</entry>
<entry>*Y prompts X</entry>
</row>
<row>
<entry></entry>
<entry>X contributes to Y</entry>
<entry>X provoke Y</entry>
</row>
<row>
<entry></entry>
<entry>X is blamed for Y</entry>
<entry>Y reflects X</entry>
</row>
<row>
<entry></entry>
<entry>X results in Y</entry>
<entry>X touches off Y</entry>
</row>
<row>
<entry></entry>
<entry>X is the cause of Y</entry>
<entry>X poses Y</entry>
</row>
<row>
<entry></entry>
<entry>*Y leads to X</entry>
<entry>Y is sparked by X</entry>
</row>
<row>
<entry></entry>
<entry>Y results from X</entry>
<entry>*X is attributed to Y</entry>
</row>
<row>
<entry></entry>
<entry>Y is result of X</entry>
<entry>*Y is cause of X</entry>
</row>
<row>
<entry></entry>
<entry>X prompts Y</entry>
<entry>*X stems from Y</entry>
</row>
<row>
<entry></entry>
<entry>X sparks Y</entry>
<entry>*Y is blamed for X</entry>
</row>
<row>
<entry></entry>
<entry>*Y triggers X</entry>
<entry>*X is triggered by Y</entry>
</row>
<row>
<entry></entry>
<entry>X prevents Y</entry>
<entry>Y is linked to X</entry>
</row>
<row>
<entry></entry>
<entry>*X is blamed on Y</entry>
<entry>X sets off Y</entry>
</row>
<row>
<entry></entry>
<entry>Y is triggered by X</entry>
<entry>X is a factor in Y</entry>
</row>
<row>
<entry></entry>
<entry>Y is attributed to X</entry>
<entry>X exacerbates Y</entry>
</row>
<row>
<entry></entry>
<entry>X stems from Y</entry>
<entry>X eases Y</entry>
</row>
<row>
<entry></entry>
<entry>*Y results in X</entry>
<entry>Y is related to X</entry>
</row>
<row>
<entry></entry>
<entry>*X is result of Y</entry>
<entry>X is linked to Y</entry>
</row>
<row>
<entry></entry>
<entry>X fuels Y</entry>
<entry>X is responsible for Y</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">We claim: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of building a database from text, the method comprising the steps of: 
<claim-text>parsing text to identify paths formed by concatenated relationships between words in the text; and </claim-text>
<claim-text>associating, in a computer, paths with each other based on a similarity measure between the paths. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> in which the similarity measure is based on the frequency of occurrence of words in the paths. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> in which the words are at the end points of the paths. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> in which the step of associating paths with each other comprises the step of counting occurrences of words at the end points of specific paths. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference> in which the step of associating paths comprises the step of comparing counts of occurrences of words and associating paths based on the counts of occurrences of the words. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference> in which paths are associated only when the similarity measure exceeds a threshold. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A method of information retrieval, the method comprising the steps of: 
<claim-text>initiating a search for electronic information; and </claim-text>
<claim-text>expanding the search by reference to associated paths in a database constructed according to the method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> in which the search is initiated from a location remote from the location of the database. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> in which, in the method steps of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, the similarity measure is based on the frequency of occurrence of words in the paths. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, in which, in the method steps of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, the words are at the end points of the paths. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> in which, in the method steps of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, the step of associating paths with each other comprises the step of counting occurrences of words at the end points of specific paths. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference> in which the step of associating paths comprises the step of comparing counts of occurrences of words and associating paths based on the counts of occurrences of the words. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> in which paths are associated only when the similarity measure exceeds a threshold. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. Computer readable media containing instructions for carrying out the method steps of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. Computer readable media of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> in which, in the instructions for carrying out the method steps of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, the similarity measure is based on the frequency of occurrence of words in the paths. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. Computer readable media of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> in which, in the instructions for carrying out the method steps of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, the words are at the end points of the paths. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. Computer readable media of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, in which the instructions for carrying out the step of associating paths with each other comprise instructions for carrying out the step of counting occurrences of words at the end points of specific paths. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. Computer readable media of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> in which the instructions for carrying out the method step of associating paths comprise instructions for carrying out the method step of comparing counts of occurrences of words and associating paths based on the counts of occurrences of the words. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. Computer readable media of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference> in which, in the instructions for carrying out the method steps, paths are associated only when the similarity measure exceeds a threshold.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>6</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004915A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004915A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004915A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004915A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004915A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004915A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004915A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
