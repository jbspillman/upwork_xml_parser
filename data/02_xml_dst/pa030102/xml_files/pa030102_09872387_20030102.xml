<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005023A1-20030102-D00000.TIF SYSTEM "US20030005023A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005023A1-20030102-D00001.TIF SYSTEM "US20030005023A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005023A1-20030102-D00002.TIF SYSTEM "US20030005023A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005023A1-20030102-D00003.TIF SYSTEM "US20030005023A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005023A1-20030102-D00004.TIF SYSTEM "US20030005023A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005023A1-20030102-D00005.TIF SYSTEM "US20030005023A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005023A1-20030102-D00006.TIF SYSTEM "US20030005023A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005023A1-20030102-D00007.TIF SYSTEM "US20030005023A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030005023A1-20030102-D00008.TIF SYSTEM "US20030005023A1-20030102-D00008.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005023</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09872387</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010601</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/16</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>709</class>
<subclass>101000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>709</class>
<subclass>250000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>709</class>
<subclass>217000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Batch access method and system</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>John</given-name>
<family-name>Gilbert</family-name>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Dave</given-name>
<family-name>Hawkins</family-name>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>Steven R. Greenfield, Esq.</name-1>
<name-2>Jenkens &amp; Gilchrist, P.C.</name-2>
<address>
<address-1>1445 Ross Avenue, Suite 3200</address-1>
<city>Dallas</city>
<state>TX</state>
<postalcode>75202-2799</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Method and system of managing a plurality of communication devices are disclosed for maximizing the success rate of data access jobs performed thereon and to optimize the usage efficiency of the communication devices. An exemplary system includes a plurality of data access jobs that are placed in a queue. Each data access job in the queue is assigned to one of a plurality of communication devices. The assignments are made based on the availability of the communication devices. No data access job is permanently assigned to any communication device. Once a data access job is completed, the communication device is released and then can be reassigned to another data access job. Script files are generated for each data access job to control the operation of the communication devices. The progress of the data access jobs are logged. Unsuccessful data access jobs are aborted and rescheduled or otherwise permanently or temporarily canceled. Data related to the failure modes for unsuccessful jobs are captured and statistically compiled to observe any trends arising therefrom. The communication devices are graded and scored based on successful and failed jobs and failure modes of the communication data. Once a communication device attains a predetermined score, it is temporarily or permanently taken off-line. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates generally to batch access systems and, more particularly, to a method and system for managing a plurality of communication devices. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of the Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The tremendous popularity of the Internet has given rise to a host of B-commerce type applications including a number of on-line shopping or E-marketplace applications. In a typical B-marketplace application, vendors of the same or similar products and services provide information therefor to a searchable on-line database. This information is then made available to on-line users via a search engine associated with the database. To shop on-line, a user simply connects by way of the Internet to an appropriate one of the databases for a particular product or service and searches therein using the associated search engine. The user may thereafter place an order for the desired product or service on-line, or purchase the same by going directly to the vendor thereof. Such an arrangement allows a vendor to make its products and services available to a far greater number of potential customers than it heretofore could. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Because there are theoretically no geographical limits on-line, E-marketplace applications often involve vendors located throughout a very large geographical region or possibly an entire country or several countries. Consequently, the number of vendors engaged in a particular E-marketplace application may be very substantial, often in the hundreds or even thousands. The large number of vendors presents a challenge for operators of the searchable on-line databases to be able to obtain and update product information from every vendor accurately and at a sufficiently frequent rate. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Prior methods of obtaining data involve using a dedicated desktop computer having a single modem connected thereto to access a telephone network and, in turn, the vendor systems in order to obtain product and service information. Referring to <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> plurality of vendor systems <highlight><bold>10</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>i </italic></highlight>are shown, each vendor system representing one or more of the numerous vendors of a particular product or service being offered on a searchable on-line database. A plurality of dedicated desktop computers <highlight><bold>12</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c</italic></highlight>, each one having a communication device <highlight><bold>14</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>connected thereto, respectively, are used to access the vendor systems <highlight><bold>10</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>i </italic></highlight>via a telephone system <highlight><bold>16</bold></highlight> and obtain data therefrom. The communication devices <highlight><bold>14</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>are usually analog modems that dial in to the vendor systems <highlight><bold>10</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>i </italic></highlight>over regular public telephone lines <highlight><bold>18</bold></highlight>. Script files running on each one of the desktop computers <highlight><bold>12</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>control the communication devices <highlight><bold>14</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>to facilitate access to the vendor systems <highlight><bold>10</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>i. </italic></highlight></paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Because there are many more vendor systems <highlight><bold>10</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>i </italic></highlight>than there are desktop computers <highlight><bold>12</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c</italic></highlight>, it is necessary to divide the list of vendor systems amongst the available desktop computers. In the example of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the first desktop computer <highlight><bold>12</bold></highlight><highlight><italic>a </italic></highlight>has been assigned to access the first three vendor systems <highlight><bold>10</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c</italic></highlight>; while the second desktop computer <highlight><bold>12</bold></highlight><highlight><italic>b </italic></highlight>has been assigned to access the fourth, fifth, and sixth vendor system <highlight><bold>10</bold></highlight><highlight><italic>d</italic></highlight>-<highlight><italic>f</italic></highlight>; and the third desktop computer <highlight><bold>12</bold></highlight><highlight><italic>c </italic></highlight>has been assigned to access the last three vendor systems <highlight><bold>10</bold></highlight><highlight><italic>g</italic></highlight>-<highlight><italic>i</italic></highlight>. The desktop computers <highlight><bold>10</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>are then programmed according to some predetermined schedule to access the vendor systems <highlight><bold>10</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>i </italic></highlight>on their respective lists, one vendor system at a time. The accesses usually occur at night time when the vendor systems are considered to be less busy or less congested with data traffic. Typically, each access session, called a &ldquo;job&rdquo;, must be successfully completed in its turn before the next access job is attempted. An unsuccessful access job is repeated for a predetermined number of times before moving on to the next access job. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Such previous methods were not efficient, however, because one unsuccessful access job greatly delayed or disabled the other access jobs on the list. Moreover, if either a communication device <highlight><bold>14</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>or the desktop computer <highlight><bold>12</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>connected thereto became disabled, none of the access jobs assigned to that desktop computer would be completed. These incomplete access jobs would have to be rerun the next day, thereby preventing that desktop computer or another desktop computer from being used for other purposes. Furthermore, such previous methods were inflexible in that new desktop computers would have to be added each time the number of vendor systems increased beyond the incremental capacity of the existing desktop computers. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Therefore, it is desirable to be able to provide a way to reduce the inefficiency and inflexibility associated with the previous methods. More specifically, it is desirable to be able to manage a plurality of communication devices in such a way so as to maximize the success rate of the data access jobs performed thereon and to optimize the usage efficiency of the communication devices. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The present invention is related to a method and system for managing a plurality of communication devices so as to maximize the success rate of data access jobs performed thereon and to optimize the usage efficiency of the communication devices. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> An exemplary system includes a plurality of data access jobs that are placed in a queue. Each data access job in the queue is assigned to one of a plurality of communication devices. The assignments are made based on the availability of the communication devices. No data access job is permanently assigned to any communication device. Once a data access job is completed, the communication device is released and then can be reassigned to another data access job. Script files are generated for each data access job to control the operation of the communication devices. The progress of the data access jobs are logged. Unsuccessful data access jobs are aborted and rescheduled or otherwise permanently or temporarily canceled. Data related to the failure modes for unsuccessful jobs are captured and statistically compiled to observe any trends arising therefrom. The communication devices are graded and scored based on successful and failed jobs and failure modes of the communication data. Once a communication device attains a predetermined score, it is temporarily or permanently taken off-line. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> In one aspect, the invention is related to a method of managing a plurality of communication devices. The method comprises the steps of forming a queue of data access jobs to be run on the plurality of communication devices, executing the data access jobs in accordance with the queue, and controlling the queue in order to optimize a usage efficiency of the plurality of communication devices. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> In another aspect, the invention is related to a system for managing a plurality of data access jobs. The system comprises a plurality of communication devices for performing the plurality of data access jobs, a local control unit coupled to and configured to operate the plurality of communication devices in accordance with a queue, and a system control unit in communication with the local control unit and configured to control the queue in order to optimize a success rate of the data access jobs. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> In yet another aspect, the invention is related to a method of managing a plurality of communication devices. The method comprises the steps of forming a queue of data access jobs to be run on the plurality of communication devices and executing the data access jobs in accordance with the queue. The queue is controlled in order to optimize a success rate of the data access jobs, and such control is accomplished using the Internet. Failure data are compiled for unsuccessful data access jobs and a score is assigned to one or more of the plurality of communication devices based on the failure data. Communication devices that score above a predetermined score are taken off-line. The progress of one or more of the data access jobs is logged, and manual control of a data access job is allowed via an Internet connection upon user request.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> A more complete understanding of the method and apparatus of the present invention may be had by reference to the following detailed description when taken in conjunction with the accompanying drawings wherein: </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates a prior art method of obtaining data from a plurality of data systems; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates an exemplary communication device pool according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates an exemplary data access job queue according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates an exemplary network of communication device pools according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates the functional components of an exemplary system control unit according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> illustrates an exemplary batch access management program according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> FIGS. <highlight><bold>7</bold></highlight>A-C illustrate exemplary screen shots of the exemplary batch access management program in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>; and </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> illustrates an exemplary batch access management method according to an embodiment of the present invention. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> As mentioned previously, the present invention places data access jobs in a queue and assigns these data access jobs to a plurality of communication devices. The with assignments are made based on the availability of the communication devices so that no communication device is permanently assigned to carry out a particular one or set of data access jobs. Such an arrangement has an advantage in that the failure of one communication device will not unduly delay execution of the remaining data access jobs. Furthermore, resources are better utilized with the present invention because there is little or no idle time for the communication devices between jobs. Moreover, new data access jobs may simply be added to the queue without requiring additional communication devices and any hardware associated therewith to be purchased. Also, malfunctioning communication devices are taken off-line to increase the success rate of the pending data access jobs. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, in an exemplary embodiment of the present invention, the plurality of desktop computers described previously has been replaced by a communication device pool <highlight><bold>20</bold></highlight> formed by a plurality of communication devices <highlight><bold>22</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>l </italic></highlight>arranged therein. The communication devices <highlight><bold>22</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>l </italic></highlight>may be comprised of any communication device capable of making an on-line connection including analog modems, digital modems, network interface cards, or some combination thereof. Each of the communication devices <highlight><bold>22</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>l </italic></highlight>may be operated independently of the other communication devices and preferably has a separate access line <highlight><bold>24</bold></highlight> connected thereto. The access lines <highlight><bold>24</bold></highlight> may be comprised of any communication lines suitable for use with the communication devices <highlight><bold>22</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>l </italic></highlight>including public telephone lines, private subscriber lines (e.g., ISDN), a wireless transmission link, or some combination thereof. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Only twelve communication devices <highlight><bold>22</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>l </italic></highlight>have been included in the communication device pool <highlight><bold>20</bold></highlight> here for economy of the description and the drawings; however, the invention is not to be limited thereto and those of ordinary skill in the art will understand that a greater or lesser number of communication devices <highlight><bold>22</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>l </italic></highlight>may certainly be used. Also, for convenient reference, the communication device pool <highlight><bold>20</bold></highlight> has been divided into three banks of four communication devices each, with bank A having the first four communication devices, bank B having the second four communication devices, and bank C having the last four communication devices. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> A local control unit <highlight><bold>26</bold></highlight> is coupled to the communication device pool <highlight><bold>20</bold></highlight> for controlling the operation of the communication devices <highlight><bold>22</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>l </italic></highlight>therein. In a preferred embodiment, the local control unit <highlight><bold>26</bold></highlight> is a high-end computer such as a workstation or a server that is capable of exercising virtually simultaneous control over each one of the independently operable communication devices <highlight><bold>22</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>l</italic></highlight>. The particular hardware and software needed to connect the communication device pool <highlight><bold>20</bold></highlight> to the local control unit <highlight><bold>26</bold></highlight> are well known and will not be described here. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> In operation, script files are executed by the local control unit <highlight><bold>26</bold></highlight> to automate access to the vendor systems <highlight><bold>10</bold></highlight> by the communication devices <highlight><bold>22</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>l</italic></highlight>. Such script files are generally well known to those of ordinary skill in the art as being useful in providing the commands and controls for the various functions of the communication devices <highlight><bold>22</bold></highlight>. In a preferred embodiment, a script file is set up for each data access job and customized for a particular vendor system. For example, in the case of a modem, a script file can provide the dial-in number including any area code required, the login sequence including any user ID and/or password required, and the appropriate commands for extracting the subject data from the vendor system. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> In addition to direct dial, script files may also be set up for other access methods such as for a virtual network. Connection to the vendor systems and the transfer of data therefrom may be accomplished using protocols such as Telnet, FTP, Kermit, and any other suitable communication protocols. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The sequence or order in which the data access jobs are executed, as well as the communication devices <highlight><bold>22</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>l </italic></highlight>that will be executing the data access jobs, are specified by a queue stored on the local control unit <highlight><bold>26</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates an exemplary data access job queue <highlight><bold>30</bold></highlight> according to one embodiment of the present invention. As can be seen, the data access job queue <highlight><bold>30</bold></highlight> is comprised of one or more data access jobs <highlight><bold>32</bold></highlight> that are to be executed via the local control unit <highlight><bold>26</bold></highlight>. The order of execution is usually one job at a time starting at the top of the queue <highlight><bold>30</bold></highlight>, but in some embodiments the data access jobs <highlight><bold>32</bold></highlight> may be executed starting from the bottom of the queue <highlight><bold>30</bold></highlight> instead. The queue <highlight><bold>30</bold></highlight> itself, that is to say, the order of the data access jobs therein, is determined by a main system control unit <highlight><bold>40</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. As can be seen, the system control unit <highlight><bold>40</bold></highlight> is connected to the local control unit <highlight><bold>26</bold></highlight> described above as well as a second local control unit <highlight><bold>42</bold></highlight> and a third local control unit <highlight><bold>46</bold></highlight>. The second and third local control units <highlight><bold>42</bold></highlight> and <highlight><bold>46</bold></highlight> are coupled to a second and third communication device pool <highlight><bold>44</bold></highlight> and <highlight><bold>48</bold></highlight>, respectively, and are similar in construction and operation to the first local control unit <highlight><bold>26</bold></highlight>. Together, the system control unit <highlight><bold>40</bold></highlight> and the local control units <highlight><bold>26</bold></highlight>, <highlight><bold>42</bold></highlight>, and <highlight><bold>46</bold></highlight> form a network of communication device pools. In operation, the local control units <highlight><bold>26</bold></highlight>, <highlight><bold>42</bold></highlight>, and <highlight><bold>46</bold></highlight> query the system control unit <highlight><bold>40</bold></highlight> for pending data access jobs to executed, and the system control unit <highlight><bold>40</bold></highlight> assigns the data access jobs according to their positions in the queue <highlight><bold>30</bold></highlight> to the available communication devices of the local control units <highlight><bold>26</bold></highlight>, <highlight><bold>42</bold></highlight>, and <highlight><bold>46</bold></highlight>. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> A plurality of access lines <highlight><bold>49</bold></highlight> connect the system control unit <highlight><bold>40</bold></highlight> to the local control units <highlight><bold>26</bold></highlight>, <highlight><bold>42</bold></highlight>, and <highlight><bold>46</bold></highlight>. As before, the access lines may be any communication lines suitable for connecting the system control unit <highlight><bold>40</bold></highlight> to the local control units <highlight><bold>26</bold></highlight>, <highlight><bold>42</bold></highlight>, and <highlight><bold>46</bold></highlight>. However, in the preferred embodiment, each one of the access lines <highlight><bold>49</bold></highlight> represents one or more links that form a connection between the system control unit and the local control units across the Internet. Thus, in this embodiment, the system control unit <highlight><bold>40</bold></highlight> can conveniently and efficiently control the local control units <highlight><bold>26</bold></highlight>, <highlight><bold>42</bold></highlight>, and <highlight><bold>46</bold></highlight> from virtually anywhere using the Internet. Such an arrangement allows the local control units <highlight><bold>26</bold></highlight>, <highlight><bold>42</bold></highlight>, and <highlight><bold>46</bold></highlight> to be located almost anywhere in the world provided they can be connected to the Internet. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Each of the first, second, and third control units <highlight><bold>26</bold></highlight>, <highlight><bold>42</bold></highlight>, and <highlight><bold>46</bold></highlight> and their respective communication device pools <highlight><bold>20</bold></highlight>, <highlight><bold>44</bold></highlight>, and <highlight><bold>48</bold></highlight> preferably serve vendors located in a different geographic region, country, or even several countries. Note that although only three communication device pools are shown here, the invention should not be limited thereto and those of ordinary skill in the art will understand that a lesser or greater number of communication device pools may certainly be used. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The system control unit <highlight><bold>40</bold></highlight>, like the local control units <highlight><bold>26</bold></highlight>, <highlight><bold>42</bold></highlight>, <highlight><bold>46</bold></highlight>, may include one or more high-end computers such as a workstation or a server. In a preferred embodiment, the system control unit <highlight><bold>40</bold></highlight> includes a Web server <highlight><bold>50</bold></highlight>. In general, a Web server is a type of server that is capable of hosting a Web site thereon. Thus, a user having the appropriate security authorization (if required) may connect to the Web site using any one of several commercially available Web browsers by opening the URL of the Web site. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> Operation of the server <highlight><bold>50</bold></highlight> may be controlled by any one of several presently available software operating systems such as Windows (TM), Linux (TM), or Unix (TM). The choice of which operating system to run may depend, in part, on which operating system is being used by the vendor systems. For example, if the majority of the vendor systems are using Unix (TM) or a Unix-based operating system, it may be preferable to choose an operating system like Linux (TM) that is not only considered to be reliable, but is compatible with Unix (TM) and has Unix-like features such as Telnet that allows a user to manually access the vendor systems. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates some of the functional components of the server <highlight><bold>50</bold></highlight> of the system control unit <highlight><bold>40</bold></highlight>. Specifically, the server <highlight><bold>50</bold></highlight> includes a central processing unit <highlight><bold>51</bold></highlight>, a network interface <highlight><bold>52</bold></highlight>, a data storage unit <highlight><bold>53</bold></highlight>, an I/O unit <highlight><bold>54</bold></highlight>, and a display unit <highlight><bold>55</bold></highlight>, all interconnected as shown. During operation, the central processing unit <highlight><bold>51</bold></highlight> is primarily responsible for executing the various software programs that may be running on the server <highlight><bold>50</bold></highlight> including the server operating system. The network interface <highlight><bold>52</bold></highlight> is primarily responsible for connecting the server <highlight><bold>50</bold></highlight> to the on-line domain in general and specifically to the Internet. The data storage unit <highlight><bold>53</bold></highlight> provides storage for any data and software programs needed by the server <highlight><bold>50</bold></highlight>. The I/O unit <highlight><bold>54</bold></highlight> is primarily responsible for inputting data to and outputting data from the server <highlight><bold>50</bold></highlight> and includes one or more I/O ports for interfacing with, e.g., a keyboard, mouse, floppy disk drive, CD-ROM, and the like. Finally, the display unit <highlight><bold>38</bold></highlight> is responsible for displaying any visual graphics or images from the server <highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> One of the software programs stored in the storage unit <highlight><bold>53</bold></highlight> and executed by the central processing unit <highlight><bold>51</bold></highlight> of the server <highlight><bold>50</bold></highlight> is a batch access management program <highlight><bold>60</bold></highlight> for managing a plurality of data access jobs, as illustrated in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. In general, the batch access management program <highlight><bold>60</bold></highlight> of the system control unit <highlight><bold>40</bold></highlight> organizes a plurality of data access jobs into one or more queues, assigns the data access jobs to the available communication devices in the communication device pools, and provides these queues to the local control units of the communication device pools to be executed. The local control units thereafter provide feedback on the progress of each data access job to the system control unit <highlight><bold>40</bold></highlight>. The batch access management program <highlight><bold>60</bold></highlight> may then modify the queues as needed depending on the successful completion of the data access jobs as well as other information provided by the local control units. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> In a preferred embodiment, the batch access management program <highlight><bold>60</bold></highlight> is a Web-based application that can be executed in a Web browser environment. As such, the batch access management program <highlight><bold>60</bold></highlight> may be run from within any commercially available Web browser by clicking on the appropriate link in the Web site hosted by the server <highlight><bold>50</bold></highlight>. Such an arrangement has an advantage in that the batch access management program <highlight><bold>60</bold></highlight> may be accessed from virtually any location that can be connected to the Internet provided, of course, the user has the appropriate security authorization. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, the functional components of the batch access management program <highlight><bold>60</bold></highlight> generally include a configuration module <highlight><bold>61</bold></highlight>, a scheduling module <highlight><bold>62</bold></highlight>, a data logging module <highlight><bold>63</bold></highlight>, a status monitor module <highlight><bold>64</bold></highlight>, an error detection module <highlight><bold>65</bold></highlight>, and a manual control module <highlight><bold>66</bold></highlight>. Following is a short description of the operation of each module. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The configuration module <highlight><bold>61</bold></highlight> allows a user to set up and otherwise configure the various communication devices. For example, in the case of a modem, the configuration module <highlight><bold>61</bold></highlight> allows a user to specify the modem initialization string, baud rate, dialing prefix, and other properties of the modem. Alternatively, a modem may be automatically detected by the local control unit by virtue of a plug-n-play feature of the modem. In that case, the configuration module <highlight><bold>61</bold></highlight> can automatically set up the modem using the information provided by the local control unit. Other types of communication devices may be set up and configured in a similar manner. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> An exemplary screen shot of a partial display of the configuration module <highlight><bold>61</bold></highlight> is shown in <cross-reference target="DRAWINGS">FIG. 7A</cross-reference>. As can be seen, the screen shot shows a partial list of the communication devices of a communication device pool called &ldquo;Edison&rdquo; along with their modem number, device ID, initialization string, baud rate, and current status. An &ldquo;On-line&rdquo; status indicates the communication device is enabled; &ldquo;Off-line&rdquo; means the communication device has been taken off-line; &ldquo;Error&rdquo; indicates the communication device has experienced a failure; and &ldquo;Interactive&rdquo; means the data access job running on the communication device is being manually controlled by a user. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The scheduling module <highlight><bold>62</bold></highlight> has primary responsibility for ordering the data access jobs in the queues and assigning the data access jobs to the available communication devices. As each one of the communication devices become available (e.g., by completing its assigned job), data access jobs not yet assigned are immediately assigned thereto. Under such an arrangement, the idle time of the communication devices are substantially reduced or eliminated, thereby maximizing the usage efficiency of the communication devices. Moreover, new data access jobs may simply be placed in the queue and executed in due course without the need for additional communication devices. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The ordering of the data access jobs in the queues is based upon one or more ordering factors including the time zone in which a particular vendor is located, the geographical location of the vendor, the amount of data traffic on the vendor system, a prearranged agreement with the vendor, the success of the previous data access jobs, the amount of data to be extracted, a number of other suitable factors. Modifications or alterations of the queues may also be made by operation of the scheduling module <highlight><bold>62</bold></highlight>. For example, in some embodiments, unsuccessful data access jobs may be automatically rescheduled by the scheduling module <highlight><bold>62</bold></highlight>. Such an arrangement reduces the delay in executing a data access job due to, for example, a problem with the communication device assigned thereto. Depending on the reasons for the failure, however, a job may be set aside instead until the underlying problems (e.g., the vendor system is down) are corrected. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> The data logging module <highlight><bold>63</bold></highlight> operates to record the progress of one or more of the data access job from the beginning of the job to the conclusion. In a preferred embodiment, the progress of every data access job is recorded by the data logging module <highlight><bold>63</bold></highlight>. The type of information recorded by the data logging module <highlight><bold>63</bold></highlight> includes the name of the particular data access job, which communication device was assigned, the start time, whether the job was completed successfully, the reason for a failure, and the end time of the job. This information is provided by the local control units to the system control unit which subsequently stores the information in a log file by operation of the data logging module <highlight><bold>63</bold></highlight>. The information may thereafter be accessed by the user for review and analysis as needed. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The error analysis module <highlight><bold>64</bold></highlight> takes the failure data provided by the local control units and statistically compiles the data. A user may then review the compiled data to determine if there are any trends in the failure data. For example, if a high number of failures are observed during a particular time of day over a predetermined number of days, the user may determine that the vendor systems are busy or experiencing a high amount of data traffic during that part of the day. As a result of this analysis, the scheduled time for the job may be changed as needed. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> In a preferred embodiment, if job failures are indicated as being due to a malfunction in a particular communication device, the error analysis module <highlight><bold>64</bold></highlight> assigns a predetermined score to the failing communication device based on the failure mode (e.g., lost connection, no dial tone, etc.) thereof. The number of errors experienced by a particular communication device as recorded by the data logging module <highlight><bold>63</bold></highlight> can be seen in the exemplary screen shot shown in <cross-reference target="DRAWINGS">FIG. 7A</cross-reference>. Also, the &ldquo;Error Level&rdquo; shown in <cross-reference target="DRAWINGS">FIG. 7A</cross-reference> is an indication of the current score of the communication device. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> Once a communication device attains a certain threshold score indicative of a high level of communication device errors, the error analysis module <highlight><bold>64</bold></highlight> may temporarily take the communication device off-line in hopes that a cooling off period will enable the device to recover. In a preferred embodiment, when a device is taken off-line for a cooling off period, the device is also cleared and reset, via software control, to its system default state. Experimentation has determined that clearing and resetting the device clears most of the malfunctions in the modems and network connections. No data access jobs are assigned to the particular communication device until it is brought back on-line. Such an arrangement prevents a communication device which has a high failure rate from being assigned a data access job, thereby delaying execution of the data access jobs. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> If the data communication device continues to experience failures after being brought back on-line such that a second threshold score is reached, the error analysis module <highlight><bold>64</bold></highlight> may permanently remove the communication device from the communication device pool. The first and second threshold scores may be selectively set to suit the needs of a particular application. Moreover, in some embodiments, multiple threshold scores may be selectively set, with each threshold score representing an incrementally longer temporary off-line time. Alternatively, a user such as a system administrator may manually take the device off-line upon seeing that the device has a high failure rate. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> An exemplary list of the different types of failure modes has been provided in Table 1 below for convenient reference. The table includes a short description of the failure modes and the error codes assigned thereto. Also specified are which failure mode requires a data access job to be canceled, that is, removed from the queue, and which jobs may be rescheduled at a later time in accordance with the recommended delay period.  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="1" colwidth="21PT" align="center"/>
<colspec colname="2" colwidth="126PT" align="left"/>
<colspec colname="3" colwidth="28PT" align="center"/>
<colspec colname="4" colwidth="42PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="4" align="center">TABLE 1</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="4" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>Reschedule</entry>
</row>
<row>
<entry>Code</entry>
<entry>Description</entry>
<entry>Cancel</entry>
<entry>Delay</entry>
</row>
<row><entry namest="1" nameend="4" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="21PT" align="center"/>
<colspec colname="2" colwidth="126PT" align="left"/>
<colspec colname="3" colwidth="28PT" align="center"/>
<colspec colname="4" colwidth="21PT" align="right"/>
<colspec colname="5" colwidth="21PT" align="left"/>
<tbody valign="top">
<row>
<entry>&ensp;0</entry>
<entry>Script completed successfully</entry>
<entry></entry>
<entry></entry>
<entry></entry>
</row>
<row>
<entry>&ensp;1</entry>
<entry>Expect: TCL Error</entry>
<entry></entry>
<entry>5</entry>
<entry>min.</entry>
</row>
<row>
<entry>&ensp;2</entry>
<entry>Unable to initialize modem</entry>
<entry></entry>
<entry>5</entry>
<entry>min.</entry>
</row>
<row>
<entry>&ensp;3</entry>
<entry>No dial tone</entry>
<entry></entry>
<entry>5</entry>
<entry>min.</entry>
</row>
<row>
<entry>&ensp;4</entry>
<entry>No answer</entry>
<entry></entry>
<entry>45</entry>
<entry>min.</entry>
</row>
<row>
<entry>&ensp;5</entry>
<entry>Number busy</entry>
<entry></entry>
<entry>45</entry>
<entry>min.</entry>
</row>
<row>
<entry>&ensp;6</entry>
<entry>Connection timeout</entry>
<entry></entry>
<entry>30</entry>
<entry>min.</entry>
</row>
<row>
<entry>&ensp;7</entry>
<entry>Unable to access modem</entry>
<entry></entry>
<entry>5</entry>
<entry>min.</entry>
</row>
<row>
<entry>21</entry>
<entry>Unable to find login prompt</entry>
<entry></entry>
<entry>5</entry>
<entry>min.</entry>
</row>
<row>
<entry>22</entry>
<entry>Unable to get account prompt</entry>
<entry></entry>
<entry>5</entry>
<entry>min.</entry>
</row>
<row>
<entry>23</entry>
<entry>Unable to login to firewall</entry>
<entry></entry>
<entry>5</entry>
<entry>min.</entry>
</row>
<row>
<entry>24</entry>
<entry>Unable to login to host</entry>
<entry></entry>
<entry>5</entry>
<entry>min.</entry>
</row>
<row>
<entry>25</entry>
<entry>Unable to find password prompt</entry>
<entry></entry>
<entry>5</entry>
<entry>min.</entry>
</row>
<row>
<entry>26</entry>
<entry>Error obtaining path list. Lists are not</entry>
<entry>Yes</entry>
</row>
<row>
<entry></entry>
<entry>the same length</entry>
</row>
<row>
<entry>31</entry>
<entry>Capture path does not exist</entry>
<entry>Yes</entry>
</row>
<row>
<entry>41</entry>
<entry>Lost connection</entry>
<entry></entry>
<entry>5</entry>
<entry>min.</entry>
</row>
<row>
<entry>42</entry>
<entry>Invalid timeout</entry>
<entry></entry>
<entry>10</entry>
<entry>min.</entry>
</row>
<row>
<entry>43</entry>
<entry>Inactivity timeout</entry>
<entry></entry>
<entry>10</entry>
<entry>min.</entry>
</row>
<row>
<entry>44</entry>
<entry>Time limit exceeded</entry>
<entry>Yes</entry>
</row>
<row>
<entry>51</entry>
<entry>Check files failed</entry>
<entry>Yes</entry>
</row>
<row>
<entry>61</entry>
<entry>Backup mode</entry>
<entry></entry>
<entry>1</entry>
<entry>hour</entry>
</row>
<row>
<entry>62</entry>
<entry>Invalid password</entry>
<entry>Yes</entry>
</row>
<row>
<entry>63</entry>
<entry>Resize mode</entry>
<entry></entry>
<entry>1</entry>
<entry>hour</entry>
</row>
<row>
<entry>64</entry>
<entry>A new password was required</entry>
<entry>Yes</entry>
</row>
<row>
<entry>81</entry>
<entry>Currently waiting in queue</entry>
</row>
<row>
<entry>82</entry>
<entry>Currently running</entry>
</row>
<row>
<entry>83</entry>
<entry>Currently waiting for debug process</entry>
</row>
<row>
<entry>84</entry>
<entry>Removed from the queue</entry>
<entry>Yes</entry>
</row>
<row>
<entry>85</entry>
<entry>Dial task was already queued</entry>
<entry>Yes</entry>
</row>
<row>
<entry>86</entry>
<entry>Canceled due to questionable modem lock</entry>
<entry></entry>
<entry>5</entry>
<entry>min.</entry>
</row>
<row>
<entry>101&ensp;</entry>
<entry>Dial was run in debug mode. Result is</entry>
<entry>Yes</entry>
</row>
<row>
<entry></entry>
<entry>unknown</entry>
</row>
<row>
<entry>102&ensp;</entry>
<entry>Canceled from interactive mode</entry>
<entry>Yes</entry>
</row>
<row>
<entry>103&ensp;</entry>
<entry>Unable to locate interactive mode</entry>
<entry>Yes</entry>
</row>
<row>
<entry></entry>
<entry>application</entry>
</row>
<row>
<entry>104&ensp;</entry>
<entry>Unable to parse command-line parameters</entry>
<entry>Yes</entry>
</row>
<row>
<entry></entry>
<entry>for interactive mode</entry>
</row>
<row>
<entry>105&ensp;</entry>
<entry>User took manual control of job</entry>
</row>
<row>
<entry>106&ensp;</entry>
<entry>Unable to parse query for report</entry>
<entry>Yes</entry>
</row>
<row>
<entry>107&ensp;</entry>
<entry>Script completed successfully with</entry>
<entry>Yes</entry>
</row>
<row>
<entry></entry>
<entry>warnings</entry>
</row>
<row><entry namest="1" nameend="5" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> An exemplary screen shot of failure data that was statistically compiled and charted by the error analysis module <highlight><bold>64</bold></highlight> is shown in <cross-reference target="DRAWINGS">FIG. 7B</cross-reference>. As can be seen, within a <highlight><bold>24</bold></highlight>-hour period, a number failure modes from the list of failure modes in Table 1 have been charted in the screen shot in <cross-reference target="DRAWINGS">FIG. 7B</cross-reference>. Although only 15 specific failure modes have been charted, the invention is not limited thereto and those of ordinary skill in the art will understand that a lesser or greater number of failure modes may be selected. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> Brief definitions of the failure codes are now provided. &ldquo;Script completed successfully&rdquo; indicates a data access job was successfully completed. As can be seen, successfully completed scripts represent the majority of the data access jobs executed during this time period. &ldquo;Backup/Resize mode&rdquo; indicates that the vendor system did not allow access thereto because it was occupied with system backups or other similar tasks. This failure mode is not due to a malfunction in the communication device and, therefore, no score should be assessed to the specific communication device. Rather, in a preferred embodiment, the scheduling module <highlight><bold>62</bold></highlight> would recognize the nature of the failure from the failure mode and would reschedule the data access job for a later time when the vendor system is possibly available. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> Another type of failure that is not due to a communication device error is the &ldquo;Canceled from interactive mode&rdquo; which indicates a user manually canceled the data access job. Because this data access job was canceled by the user, the scheduling module <highlight><bold>62</bold></highlight> preferably would not automatically reschedule this job. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> One failure mode that is clearly due to a malfunction in the communication device is the &ldquo;Modem error&rdquo; failure mode. Upon experiencing this type of failure, the error analysis module <highlight><bold>64</bold></highlight> assesses a predetermined score associated with the failure mode against the communication device. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> As for the remaining failure modes, &ldquo;Capture path does not exist&rdquo; indicates that the specified path (e.g., in the script file) for capturing the data from the vendor system did not exist. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> &ldquo;Check files failed&rdquo; indicates the amount of data that was captured during a particular job is outside of the expected range. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> &ldquo;Could not connect&rdquo; indicates the communication device could not make a connection with the vendor system. This failure can occur, for example, when there is no answer at the vendor system during a dial-in or a connection via the Internet could not be established. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> &ldquo;Currently waiting in queue&rdquo; indicates someone tried to manually run a data access job that is already waiting in the queue. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> &ldquo;Error obtaining path list&rdquo; indicates a failure that is due to some unknown error in the software of the vendor system. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> &ldquo;Invalid/Change password&rdquo; indicates either the password used is invalid or it is time to change the current password. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> &ldquo;Removed from queue&rdquo; indicates a pending data access job was manually removed from the queue by a user. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> &ldquo;Timeout error&rdquo; indicates an expected response from the vendor system did not occur in the allotted time period. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> &ldquo;Unable to find prompt&rdquo; indicates an expected prompt (e.g., a login prompt) from the vendor system could not be found. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> &ldquo;Unable to parse query for report&rdquo; indicates a customized report designed to obtain specific data from a specific vendor system could not be run on that system. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> &ldquo;User took manual control of job&rdquo; indicates a user manually took control of a data access job. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> The progress of each data access job may be observed and monitored by the user through operation of the status monitor module <highlight><bold>65</bold></highlight>. The status monitor module <highlight><bold>65</bold></highlight> obtains data regarding the status of each data access job in the queues and outputs this information on the display unit of the server. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> An exemplary screen shot of the information displayed by the status monitor module <highlight><bold>65</bold></highlight> is shown in <cross-reference target="DRAWINGS">FIG. 7C</cross-reference> for data access jobs running on the communication devices of the communication device pool called &ldquo;Edison.&rdquo; As can be seen, the screen shot shows a list of the data access jobs <highlight><bold>70</bold></highlight> currently active, the communication devices <highlight><bold>71</bold></highlight> assigned thereto, the users <highlight><bold>72</bold></highlight> (if any) currently exercising manual control of the jobs, the estimated start time <highlight><bold>73</bold></highlight> of the jobs, the number of attempts <highlight><bold>74</bold></highlight> that have been made to execute the jobs, and the estimated ending time <highlight><bold>75</bold></highlight> of the jobs. Any data access jobs currently awaiting a communication device assignment would be shown in the &ldquo;Waiting in Queue&rdquo; section <highlight><bold>76</bold></highlight>. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> The screen shot of <cross-reference target="DRAWINGS">FIG. 7C</cross-reference> also includes an indication of how many communication devices are associated with the </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> &ldquo;Edison&rdquo; communication device pool along with their activity statuses. For example, the screen shot shows that there are three banks <highlight><bold>77</bold></highlight>, Banks A-C, of communication devices, represented by the little telephone icons <highlight><bold>78</bold></highlight>. There are a total of forty-eight communication icons. The darkened icon <highlight><bold>78</bold></highlight><highlight><italic>a </italic></highlight>indicates that a particular communication device is current active or in use, while the lighter icon <highlight><bold>78</bold></highlight><highlight><italic>b </italic></highlight>indicates the communication device is currently inactive. The icon <highlight><bold>78</bold></highlight><highlight><italic>c </italic></highlight>having an &ldquo;X&rdquo; mark thereon indicates the communication device malfunctioned during execution of a data access job. Thus, by viewing the screen shot, a user can quickly surmise the statuses of the various communication devices associated with a communication device pool as well as the progress of the data access jobs assigned thereto. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> Finally, the manual control module <highlight><bold>66</bold></highlight> allows a user to manually control a data access job from the system control unit over the Internet. The manual control module <highlight><bold>66</bold></highlight> operates to let a user takeover a data access job once a connection (e.g., dial-in, virtual net, etc., using Telnet, FTP, Kermit, etc.) between the communication device and the vendor system has been established. Manual control of the data access job is useful, for example, when a vendor system user ID and/or password is needed to be changed. Additionally, customized reports prepared by the user for extracting certain specific data from the vendor system may be run under manual control. Oftentimes, resolution of a particular failure mode can be expedited by a user manually controlling the system. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> illustrates an exemplary method of managing a batch access system according to an embodiment of the present invention. At step <highlight><bold>80</bold></highlight>, a data access job is scheduled including placing the job within a queue and assigning a communication device of one of the local control units to execute the job. Next, the particular access method for the data job is determined, e.g., by direct dial-in or via a virtual net using Telnet, FTP, Kermit, or some other suitable access protocol at step <highlight><bold>82</bold></highlight>. At step <highlight><bold>84</bold></highlight>, the data access job is executed by the assigned communication device according to its position in the queue. The progress of the data access job is then logged and stored at step <highlight><bold>86</bold></highlight>. A determination is made at step <highlight><bold>88</bold></highlight> to determine whether the job was successfully completed. If yes, the data extracted from the vendor system is processed and stored for transferring, for example, to a searchable on-line database. If the job was not completed successfully, then at step <highlight><bold>92</bold></highlight>, the particular failure mode is captured and statistically compiled in order to facilitate the determination of any failure trends. At step <highlight><bold>94</bold></highlight>, a determination is made as to whether the job should be rescheduled based on the failure mode. If yes, then step <highlight><bold>80</bold></highlight> is repeated to reschedule the job in the queue and another communication device thereto. If no, then the job is canceled at step <highlight><bold>96</bold></highlight>. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> Under such a batch access management method and system as described in the foregoing, both the success rate of the data access jobs and the usage efficiency of the communication devices may be optimized. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> Although several embodiments of the method and system of the present invention have been illustrated in the accompanying drawings and described in the foregoing detailed description, it should be understood that the invention is not limited to the embodiments disclosed, but is capable of numerous rearrangements, modifications, and substitutions without departing from the spirit of the invention as set forth and defined by the following claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of managing a plurality of communication devices, said communication device being adapted to be cleared and reset to a default state if a communication failure occurs a predetermined number of times, said method comprising the steps of: 
<claim-text>forming a queue of data access jobs to be run on said plurality of communication devices; </claim-text>
<claim-text>executing said data access jobs in accordance with said queue; and </claim-text>
<claim-text>controlling said queue in order to optimize a usage efficiency of said plurality of communication devices. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of controlling said queue is accomplished over the Internet. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein controlling said queue includes rescheduling unsuccessful data access jobs in said queue. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, further comprising the step of compiling failure data for said unsuccessful data access jobs. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, further comprising the step of assigning a score to one or more of said plurality of communication devices based on said compiled failure data. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, further comprising the step of temporarily taking off-line each one of said plurality of communication devices scoring higher than a first predetermined score. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, further comprising the step of permanently taking off-line each one of said plurality of communication devices scoring higher than a second predetermined score. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of logging a progress of one or more of said data access jobs. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of allowing manual control of said data access job via an Internet based device. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said plurality of communication devices includes a modem. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said plurality of communication devices includes a network interface card. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A system for managing a plurality of data access jobs, comprising: 
<claim-text>a plurality of communication devices for performing said plurality of data access jobs; </claim-text>
<claim-text>a local control unit coupled to and configured to operate said plurality of communication devices in accordance with a queue; and </claim-text>
<claim-text>a system control unit in communication with said local control unit and configured to control said queue in order to optimize a success rate of said data access jobs. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein said system control unit communicates with said local control unit via an Internet connection. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein said system control unit controls said queue by rescheduling unsuccessful data access jobs in said queue. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein said system control unit is further configured to compile failure data for unsuccessful data access jobs. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein said system control unit is further configured to assign a score to one or more of said plurality of communication devices based on said compiled failure data. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein said system control unit is further configured to temporarily take off-line any one of said plurality of communication devices scoring higher than a predetermined score. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein said system control unit is further configured to take off-line any one of said plurality of communication devices scoring higher than a predetermined score, said system control unit adapted to reset or clear any one of said plurality of communication devices scoring higher tat a predetermined score. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein said system control unit is further configured to log a progress of one or more of said data access jobs. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein manual control of a data access job can be accomplished over the Internet via said system control unit. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein said plurality of communication devices includes at least one of a modem and a network interface card. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. A method of managing a plurality of communication devices via a control system, comprising the steps of: 
<claim-text>forming a queue of data access jobs to be run on said plurality of communication devices; </claim-text>
<claim-text>executing said data access jobs in accordance with said queue; </claim-text>
<claim-text>controlling said queue in order to optimize a success rate of said data access jobs wherein said control of said queue is accomplished over the Internet; </claim-text>
<claim-text>compiling failure data for unsuccessful data access jobs and assigning a score to one or more of said plurality of communication devices based on said failure data; </claim-text>
<claim-text>taking off-line any one of said plurality of communication devices scoring higher than a predetermined score; </claim-text>
<claim-text>resetting any one of said plurality of communication devices scoring higher than a predetermined score; </claim-text>
<claim-text>logging a progress of one or more of said data access jobs; and </claim-text>
<claim-text>allowing manual control of a data access job via an Internet connection.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>8</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005023A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005023A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005023A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005023A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005023A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005023A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005023A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005023A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030005023A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
