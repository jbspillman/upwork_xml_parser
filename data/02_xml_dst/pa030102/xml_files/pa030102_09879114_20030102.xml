<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030003943A1-20030102-D00000.TIF SYSTEM "US20030003943A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030003943A1-20030102-D00001.TIF SYSTEM "US20030003943A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030003943A1-20030102-D00002.TIF SYSTEM "US20030003943A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030003943A1-20030102-D00003.TIF SYSTEM "US20030003943A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030003943A1-20030102-D00004.TIF SYSTEM "US20030003943A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030003943A1-20030102-D00005.TIF SYSTEM "US20030003943A1-20030102-D00005.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030003943</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09879114</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010613</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04B001/38</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>455</class>
<subclass>550000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>455</class>
<subclass>090000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>455</class>
<subclass>575000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>455</class>
<subclass>095000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Mobile computer system having a navigation mode to optimize system performance and power management for mobile applications</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Sundeep</given-name>
<middle-name>M.</middle-name>
<family-name>Bajikar</family-name>
</name>
<residence>
<residence-us>
<city>Sunnyvale</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>ANTONELLI TERRY STOUT AND KRAUS</name-1>
<name-2></name-2>
<address>
<address-1>SUITE 1800</address-1>
<address-2>1300 NORTH SEVENTEENTH STREET</address-2>
<city>ARLINGTON</city>
<state>VA</state>
<postalcode>22209</postalcode>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A mobile computer system such as mobile PC operable between a normal, stationary mode and a Navigation mode for optimal system performance and power management for mobile applications. The mobile PC comprises a disk drive; a host processor equipped with an operating system (OS) which enables operation in a normal mode when the computer system is stationary and a Navigation mode when the computer system is mobile; a vibration sensor arranged to detect whether there is a presence of sustained or sporadic mechanical vibrations over a designated time duration, and to generate therefrom a vibration signal indicating the presence of sustained or sporadic mechanical vibrations; a position sensor arranged to detect whether there is a change in the position of the computer system at a fixed or variable velocity or acceleration, and to generate a position signal indicating the change in the position of the computer system; and a chipset equipped with a disk drive control logic arranged to control disk accesses to the disk drive, including controlling disk accesses to the disk drive in order to reduce damages to the disk drive in response to the vibration signal indicating the presence of sustained or sporadic mechanical vibrations or the position signal indicating the change in the position of the computer system. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">TECHNICAL FIELD </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to an electronics system, and more particularly, relates to a mobile system such as a mobile PC having a mechanism for optimizing system performance and power management for mobile applications, while taking into account operating environments typical of such mobile applications and reducing the risk of damage to system components. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Computer systems typically incorporate some form of power saving and power management techniques to reduce power consumed by the computer systems, particularly portable or mobile personal computers (PCs) powered by a battery in order to maximize system performance and available battery usage time. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> One example such power saving and power management techniques is provided in the Advanced Power Management (APM) specification jointly developed by Intel Corporation and Microsoft Corporation in February 1996. The APM algorithm is implemented by basic input-output system (BIOS) instructions stored in read-only memory (ROM) to provide various power saving functions, and manage the progress of power saving between full-on, standby, and sleep mode. The sleep mode is the level of least power consumption, which interrupts power supplies directed to microprocessor, display apparatus, hard disk drives, floppy disk drives, and other subsystems. The only power supplied is that which can restore the system to the full-on state. Further, the sleep mode may urge the system to enter into full power-off state, if the power management system adopts a suspend-to-disk utility to save the contents of the main memory and the system information to a reserved space on the hard disk. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> A later power management specification, the Advanced Configuration and Power Interface (ACPI) specification, version 1.0B, jointly developed by Intel Corp., Microsoft Corp. and Toshiba Corp. in February 1999, is further implemented to enhance power management functionality and robustness, facilitate and accelerate industry-wide implementation of power management, and create a robust interface for configuring motherboard devices. The ACPI specification includes tables, BIOS, and hardware registers. ACPI tables are used to describe system information (e.g., supported power states, power sources, clock sources), features (e.g., available hardware devices), and methods for controlling those features (e.g., ACPI control methods). ACPI BIOS is that part of the computer system firmware that implements the ACPI specified interfaces for sleep, wake-up from sleeping, some restart operations, and provides permanent storage of ACPI table information. ACPI registers are used to store and pass event information between the hardware/firmware and an ACPI driver&mdash;an operating system (OS) level program that coordinates all transitions between active and inactive (sleeping) states. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Under the APM specification and the ACPI specification, computer systems such as mobile PCs may be configured to optimize system performance and save power during use, via various active and inactive states. Likewise, mobile PC mechanical structure (hardware) may be optimized for portability. However, system performance and power management features of the current APM and ACPI specifications require the mobile PCs to operate in a stationary environment, and make no distinction when the mobile PCs are used while being stationary or being transported from one location to another location. As a result, system performance and power management issues remain a challenge. This is because such a mobile PC is subject to very different operating environments and conditions when it is being transported than when it is stationary. For example, disk accesses may cause the disk drives to crash when extreme mechanical vibrations or impacts are present for short periods of time. In addition, there may be different requirements on the system performance and power management of the mobile PC if it is being used for certain types of applications while in motion. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Accordingly, there is a need for a mechanism to identify and differentiate between the stationary and mobile (dynamic) operating environments of the mobile PC and to optimize mobile PC system performance and power management for mobile applications, while taking into account operating environments typical of such mobile applications and reducing the risk of damage to system components.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> A more complete appreciation of exemplary embodiments of the present invention, and many of the attendant advantages of the present invention, will become readily apparent as the same becomes better understood by reference to the following detailed description when considered in conjunction with the accompanying drawings in which like reference symbols indicate the same or similar components, wherein: </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates an example computer system platform having a typical power management function incorporated therein; </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates an example computer system platform of a mobile PC having a host chipset and a mechanism incorporated therein for identifying between a normal (stationary) mode and a mobile (navigation) mode to optimize mobile PC system performance and power management for mobile applications according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates an example implementation of a position sensor of the mobile PC using a Bluetooth&trade; architecture according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates an example implementation of a position sensor of the mobile PC using a Global Position System (GPS) architecture according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates an example implementation of a position sensor of the mobile PC according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> illustrates an example hard disk drive (HDD) control logic according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> illustrates a flowchart of an example hard disk drive (HDD) control logic according to another embodiment of the present invention; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> illustrates a flowchart of an example computer system operation between the normal (stationary) mode and the mobile (navigation) mode according to an embodiment of the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> The present invention is applicable for use with all types of mobile devices and computer systems including mobile PCs, processors and chipsets, including chipsets which link together work stations, servers, peripherals and storage devices, and new chipsets having APM-compliant and ACPI-compliant control logic incorporated therein and new computer platforms which may become available as computer technology develops in the future. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Attention now is directed to the drawings and particularly to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, an example computer system platform having an APM and ACPI system incorporated to handle various types of power management events is illustrated. As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the computer system <highlight><bold>100</bold></highlight> (which can be a system commonly referred to as a mobile &ldquo;PC&rdquo;) may comprise a processor subsystem <highlight><bold>110</bold></highlight>, a memory subsystem <highlight><bold>120</bold></highlight>, connected to the processor subsystem <highlight><bold>110</bold></highlight> by a front side bus <highlight><bold>10</bold></highlight>, an I/O controller <highlight><bold>130</bold></highlight> connected to the memory subsystem <highlight><bold>120</bold></highlight> by a hub link <highlight><bold>20</bold></highlight> for providing an interface with peripheral buses such as a non-legacy Peripheral Component Interconnect (PCI) bus 30, a flash memory <highlight><bold>140</bold></highlight>, and a super I/O <highlight><bold>150</bold></highlight> connected thereto by a low pin count (LPC) bus <highlight><bold>40</bold></highlight> for providing an interface with a plurality of I/O devices <highlight><bold>160</bold></highlight>A-<highlight><bold>160</bold></highlight>N. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The processor subsystem <highlight><bold>110</bold></highlight> may include one or more processors or central processing units (CPUs) <highlight><bold>110</bold></highlight>A-<highlight><bold>110</bold></highlight>N such as Intel&reg; i386, i486, Celeron&trade; or Pentium&reg; processors. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The memory subsystem <highlight><bold>120</bold></highlight> may include a memory controller hub (MCH) <highlight><bold>122</bold></highlight> connected to the host processors <highlight><bold>110</bold></highlight>A-<highlight><bold>110</bold></highlight>N by a front side bus <highlight><bold>10</bold></highlight> (i.e., host bus or processor bus) and at least one memory element <highlight><bold>124</bold></highlight> connected to the MCH <highlight><bold>122</bold></highlight> by a memory bus <highlight><bold>50</bold></highlight>. The memory element <highlight><bold>124</bold></highlight> may preferably be a dynamic random-access-memory (DRAM), but may be substituted for read-only-memory (ROM), video random-access-memory (VRAM) and the like. The memory element <highlight><bold>124</bold></highlight> stores information and instructions such as an operating system (OS) such as Windows&trade; 95/98 and Windows&trade; 2000 for use by the host processors <highlight><bold>110</bold></highlight>A-<highlight><bold>110</bold></highlight>N. The graphics (not shown) may be connected to the main controller hub (MCH) <highlight><bold>122</bold></highlight> of the memory subsystem <highlight><bold>120</bold></highlight> by a graphics bus (not shown), and may include, for example, a graphics controller, a local memory and a display device (e.g., cathode ray tube, liquid crystal display, flat panel display, etc.). </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The <highlight><bold>10</bold></highlight> controller <highlight><bold>130</bold></highlight> may operate as an interface between the front side bus <highlight><bold>10</bold></highlight> and peripheral buses such as a non-legacy Peripheral Component Interconnect (PCI) bus <highlight><bold>30</bold></highlight> and a low pin bus <highlight><bold>40</bold></highlight>. The PCI bus <highlight><bold>30</bold></highlight> may be a high performance 32 or 64 bit synchronous bus with automatic configurability and multiplexed address, control and data lines as described in the &ldquo;<highlight><italic>PCI Local Bus Specification, Revision </italic></highlight>2.1&rdquo; set forth by the PCI Special Interest Group (SIG) on Jun. 1, 1995, or the latest version &ldquo;<highlight><italic>PCI Local Bus Specification, Revision </italic></highlight>2.2&rdquo; published on Dec. 18, 1998 for add-on arrangements (e.g., expansion cards) with new video, networking, or disk memory storage capabilities. Other types of bus architecture such as an Industry Standard Architecture (ISA) bus and Extended Industry Standard Architecture (EISA) bus may also be utilized. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The flash memory (e.g., EPROM) <highlight><bold>140</bold></highlight> may be connected to the ICH <highlight><bold>130</bold></highlight> via a low pin count (LDC) bus <highlight><bold>40</bold></highlight>. Such a flash memory <highlight><bold>140</bold></highlight> may also store an operating system (OS), a set of system basic input/output start up (BIOS) instructions at startup of the computer system <highlight><bold>100</bold></highlight> and ACPI instructions implemented to provide various power saving functions, and manage the progress of power saving between full-on, standby, and sleep mode. Alternatively, the operating system (OS), the BIOS instructions and the ACPI instructions may be stored in the memory <highlight><bold>124</bold></highlight> of the memory subsystem <highlight><bold>120</bold></highlight>. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The super I/O <highlight><bold>150</bold></highlight> may provide an interface with another group of I/O devices <highlight><bold>160</bold></highlight>A-<highlight><bold>160</bold></highlight>N, including, for example, a keyboard controller for controlling operations of an alphanumeric keyboard, a cursor control device such as a mouse, track ball, touch pad, joystick, etc., a mass storage device such as magnetic tapes, hard disk drives (HDD), and floppy disk drives (FDD), and serial and parallel ports to printers, scanners, and display devices. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> One or more PCI 2.1/2.2 compliant peripheral devices <highlight><bold>170</bold></highlight>A-<highlight><bold>170</bold></highlight>N, such as a modem and a local area network (LAN) device may be connected to the PCI bus <highlight><bold>30</bold></highlight> for enabling access to a public switched telephone network (PSTN) or other networks such as a local area network (LAN) for example. In addition, a PCI device and a universal serial bus (USB) device may also be utilized in compliance with the &ldquo;<highlight><italic>PCI Local Bus Specification, Revisions </italic></highlight>2.1 <highlight><italic>and </italic></highlight>2.2&rdquo; and the &ldquo;<highlight><italic>Universal Serial Bus Specification, Revision </italic></highlight>2.0&rdquo; published on Apr. 27, 2000 for add-on arrangements with new video, networking, disk memory storage capabilities and communication peripherals such as telephone/fax/modem adapters, answering machines, scanners, personal digital assistants (PDAs) etc. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The memory controller <highlight><bold>120</bold></highlight> and the graphics controller (not shown) may be integrated as a single graphics and memory controller hub (GMCH). Such a GMCH may also be implemented as part of a host chipset along with an I/O controller <highlight><bold>130</bold></highlight> as described with reference to <cross-reference target="DRAWINGS">FIG. 2</cross-reference> hereinbelow, for example, in Intel&reg; 810, Intel&reg; 870 and 8XX series chipsets. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> If the GMCH is implemented as part of a host chipset, then the I/O controller <highlight><bold>130</bold></highlight> may be utilized to provide an interface to a variety of I/O devices and the like, such as: a Peripheral Component Interconnect (PCI) bus (PCI Local Bus Specification Revision 2.2) which may have one or more I/O devices connected to PCI slots, an Industry Standard Architecture (ISA) bus option, and a local area network (LAN) option; a super I/O chip (not shown) for providing an interface with another group of I/O devices such as a mouse, keyboard and other peripheral devices; an audio coder/decoder (Codec) and modem Codec; a plurality of Universal Serial Bus (USB) ports (USB Specification, Revision 1.0); and a plurality of Ultra/66 AT Attachment (ATA) 2 ports (X3T9.2 948D specification; commonly also known as Integrated Drive Electronics (IDE) ports) for receiving one or more magnetic hard disk drives or other I/O devices. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The USB ports and IDE ports may be used to provide an interface to a hard disk drive (HDD) and compact disk read-only-memory (CD-ROM). I/O devices and a flash memory (e.g., EPROM) may also be connected to the I/O controller <highlight><bold>130</bold></highlight> of the host chipset <highlight><bold>200</bold></highlight> for extensive I/O supports and additional functionality. Those I/O devices may include, for example, a keyboard controller for controlling operations of an alphanumeric keyboard, a cursor control device such as a mouse, track ball, touch pad, joystick, etc., a mass storage device such as magnetic tapes, hard disk drives (HDD), and floppy disk drives (FDD), and serial and parallel ports to printers and scanners. The flash memory may also be connected to the ICH of the host chipset via a low pin count (LDC) bus. The flash memory may store a set of system basic input/output start up (BIOS) routines at startup of the computer system <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> As described with reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, such a computer system platform utilizes power management features of current APM and ACPI specifications which require the mobile PC to operate in a stationary environment. No distinction is provided nor consideration made, when the mobile PC is used while being stationary or being transported from one location to another location. As a result, system performance and power management issues remain a challenge particularly, when the mobile PC is stationary and when the mobile PC is being transported which may be subject to very different operating environments and conditions. For example, disk accesses (reads or writes) may cause the disk drives to crash when extreme mechanical vibrations or impacts are present for short periods of time. In addition, there may be different requirements on the system performance and power management of the mobile PC if it is being used for certain types of applications while in motion. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Turning now to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, an example computer system platform of a mobile PC <highlight><bold>100</bold></highlight> having a host chipset <highlight><bold>200</bold></highlight> and a mechanism incorporated therein for identifying between a normal (stationary) mode and a mobile (Navigation) mode in order to optimize mobile PC system performance and power management for mobile applications according to an embodiment of the present invention is illustrated. The purpose of the &ldquo;Navigation&rdquo; mode is to identify and differentiate between the stationary and the mobile operating modes of the mobile PC <highlight><bold>100</bold></highlight>. Such a &ldquo;Navigation&rdquo; mode provides a mechanism to optimize system performance and power management for mobile applications, while taking into account certain operating environments typical of such mobile applications and reducing the risk of damage to system components. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, hardware such as a thermal sensor <highlight><bold>210</bold></highlight>, a vibration sensor <highlight><bold>220</bold></highlight> and a position sensor <highlight><bold>230</bold></highlight> may be incorporated to the host chipset <highlight><bold>200</bold></highlight> utilized to trigger into and exit from the Navigation mode. The thermal sensor <highlight><bold>210</bold></highlight> is utilized to sense the temperature of the mobile PC <highlight><bold>100</bold></highlight> and to initiate power saving in accordance with the ACPI specification when the temperature of the mobile PC <highlight><bold>100</bold></highlight> exceeds a predetermined temperature. The vibration sensor <highlight><bold>220</bold></highlight> is utilized to sense whether there is a presence of sustained or sporadic mechanical vibrations of varying magnitude over a certain threshold duration of time, and/or there is a chance of mechanical shocks which are characteristics of a mobile (dynamic) operating environment. When there is a presence of sustained or sporadic mechanical vibrations or there is a chance of mechanical shocks, the vibration sensor <highlight><bold>220</bold></highlight> may trigger entry into a Navigation (mobile) mode from a normal (stationary) mode and exit from the Navigation (mobile) mode back to the normal (stationary) mode. Likewise, the position sensor <highlight><bold>230</bold></highlight> is utilized to sense whether there is a change in the position of the mobile PC <highlight><bold>100</bold></highlight> at a fixed or variable rate (velocity) and/or at a fixed or variable acceleration in order to trigger entry into and exit therefrom the Navigation (mobile) mode. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Both the vibration sensor <highlight><bold>220</bold></highlight> and the position sensor <highlight><bold>230</bold></highlight> may be integrated into the chipset <highlight><bold>200</bold></highlight>, or alternatively, may be attached to the chipset <highlight><bold>200</bold></highlight> as separate components used to trigger entry into a Navigation (mobile) mode from a normal (stationary) mode and exit therefrom. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The position sensor <highlight><bold>230</bold></highlight> may be implemented using, for example, short-range wireless communications devices in compliance with Bluetooth&trade; standards (BT) or IEEE 802.11 b standards, or long-range wireless communication devices in compliance with Global Positioning System (GPS) standards. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Bluetooth&trade; standard (BT) is a protocol of a short-range (typically 10 meter but can be extended to more than 100 meters) frequency-hopping radio link between devices. A mobile PC <highlight><bold>100</bold></highlight> using a Bluetooth&trade; standard may eliminate the need for wires and cables while allowing for data and voice communication interaction between the mobile PC <highlight><bold>100</bold></highlight> and another device using the Bluetooth&trade; standard. Bluetooth&trade; technology supports point to multiple point connections so that up to seven devices can be set to communicate with an access point (AP). This is called a piconet and several of these piconets can be established and linked together to form scatternets to allow communication among different configurations. In one embodiment, several transceivers using the Bluetooth&trade; standard can determine position information by communicating with several transmitters also using the Bluetooth&trade; standard and with each other. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> In an alternative short-range wireless communication embodiment, the IEEE 802.11b standard is utilized as a wireless local area network (LAN) developed by the Institute of Electrical and Electronic Engineering (IEEE) Institute in order to specify an &ldquo;over the air&rdquo; interface between a wireless client and a base station or access point (AP), as well as among wireless clients. A wireless LAN (WLAN) is a data transmission system designed to provide location-independent network access between computing devices by using radio waves rather than a cable infrastructure. Transceivers may use the IEEE 802.11b standard to communicate with transmitters using the IEEE 802.11b standard and with each other to determine position relative to the transmitters. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The following table lists examples of mechanisms that may be used to trigger entry into and exit from the Navigation mode. However, the following assumptions are made. First, in all places where Bluetooth&trade; (BT) or Global Position System (GPS) are referenced, it is assumed that these are an integral part of the mobile PC <highlight><bold>100</bold></highlight>. Second, during entry and exit from the Navigation mode, it is assumed that the mobile PC <highlight><bold>100</bold></highlight> has not been powered off, or otherwise put into a deep sleep state in accordance with the ACPI specification.  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="133PT" align="left"/>
<colspec colname="2" colwidth="126PT" align="left"/>
<thead>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Entry into Navigation Mode</entry>
<entry>Exit from Navigation Mode</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Disconnection from a BT/other AP</entry>
<entry>Loss of GPS satellite lock or no change in</entry>
</row>
<row>
<entry></entry>
<entry>GPS position</entry>
</row>
<row>
<entry>GPS satellite lock &amp; motion detection from</entry>
<entry>Connection with a (known) static AP</entry>
</row>
<row>
<entry>changing GPS position</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
<row>
<entry namest="1" nameend="2" align="left"><footnote id="FOO-00001">Note: BT &equals; Bluetooth, AP &equals; Access Point, GPS &equals; Global Positioning System </footnote></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> For example, <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates an example position sensor of the mobile PC using a Bluetooth&trade; architecture according to an embodiment of the present invention. In this example, the position sensor <highlight><bold>230</bold></highlight> of the mobile PC <highlight><bold>100</bold></highlight> may be equipped with Bluetooth&trade;. As shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the Bluetooth&trade; network comprises a centralized network server <highlight><bold>310</bold></highlight> and a number of BT Access Points (BTAPs) <highlight><bold>320</bold></highlight>A-<highlight><bold>320</bold></highlight>N each strategically installed at a pre-survey (known) location where the mobile PC <highlight><bold>200</bold></highlight> is in use. When the mobile PC <highlight><bold>100</bold></highlight> is disconnected from the BTAPs <highlight><bold>320</bold></highlight>A-<highlight><bold>320</bold></highlight>N, then the mobile PC <highlight><bold>100</bold></highlight> may be triggered entry into the Navigation mode. Likewise, when the mobile PC <highlight><bold>100</bold></highlight> re-establishes connection with any one of the BTAPs <highlight><bold>320</bold></highlight>A-<highlight><bold>320</bold></highlight>N, the mobile PC <highlight><bold>100</bold></highlight> may be triggered exit from the Navigation mode and return to the normal (stationary) mode. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates an example implementation of a position sensor of the mobile PC using a Global Position System (GPS) architecture according to an embodiment of the present invention. In this example, the position sensor <highlight><bold>230</bold></highlight> of the mobile PC <highlight><bold>100</bold></highlight> may be equipped with a GPS system. As shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the GPS network comprises a plurality of GPS satellites <highlight><bold>410</bold></highlight>A-<highlight><bold>410</bold></highlight>N each strategically located at a pre-survey (known) location where the mobile PC <highlight><bold>200</bold></highlight> is in use. When there is a GPS satellite lock or a change in GPS position, the mobile PC <highlight><bold>100</bold></highlight> may be triggered entry into the Navigation mode. Likewise, when there is a loss of GPS satellite lock or no change in GPS position, the mobile PC <highlight><bold>100</bold></highlight> may be triggered exit from the Navigation mode and return to the normal (stationary) mode. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates an example implementation of a position sensor <highlight><bold>230</bold></highlight> of the mobile PC according to an embodiment of the present invention. As shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the position sensor <highlight><bold>230</bold></highlight> may comprise a BT/GPS radio transceiver <highlight><bold>510</bold></highlight>, a RF interface <highlight><bold>520</bold></highlight>, and an indicator <highlight><bold>530</bold></highlight>. The BT/GPS radio transceiver <highlight><bold>510</bold></highlight> may be arranged to establish communication with either the BTAPs <highlight><bold>320</bold></highlight>A-<highlight><bold>320</bold></highlight>N as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> or the GPS satellites <highlight><bold>410</bold></highlight>A-<highlight><bold>410</bold></highlight>N in order to determine whether there is a change in the position of the mobile PC <highlight><bold>100</bold></highlight> at a fixed or variable rate (velocity) and/or at a fixed or variable acceleration. The indicator <highlight><bold>530</bold></highlight> may be arranged to generate an indication of the change in the position of the mobile PC <highlight><bold>100</bold></highlight> at a fixed or variable rate (velocity) and/or at a fixed or variable acceleration. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> In addition, hardware such as the hard disk drive &ldquo;HDD&rdquo; control logic <highlight><bold>240</bold></highlight> may also be integrated within the host chipset <highlight><bold>200</bold></highlight> to respond to the thermal sensor <highlight><bold>210</bold></highlight>, the vibration sensor <highlight><bold>220</bold></highlight> and the position sensor <highlight><bold>230</bold></highlight> in order to control operation of the hard disk drive &ldquo;HDD&rdquo; <highlight><bold>250</bold></highlight> and other storage devices <highlight><bold>260</bold></highlight>A-<highlight><bold>260</bold></highlight>N and enhance mPC system optimizations in the Navigation mode. For example: hard disk accesses (reads or writes) to hard disk drive &ldquo;HDD&rdquo; <highlight><bold>250</bold></highlight> and other storage devices <highlight><bold>260</bold></highlight>A-<highlight><bold>260</bold></highlight>N can be minimized by optimizing application programs to exploit the system memory capacity. Disk accesses can be reduced in duration by doing only short bursts in the Navigation mode. This can reduce the probability of a disk access while the mobile PC <highlight><bold>100</bold></highlight> is experiencing a mechanical shock, hence reducing the risk of damage to the hard disk drive &ldquo;HDD&rdquo; <highlight><bold>250</bold></highlight>. In addition, disk accesses (reads or writes) can be completely blocked under conditions where extreme mechanical vibrations are present for short periods of time. Vibrations can be detected from the vibration sensor <highlight><bold>220</bold></highlight>, or through the use of the position sensor <highlight><bold>230</bold></highlight>. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The number of required disk accesses (reads or writes) to hard disk drive &ldquo;HDD&rdquo; <highlight><bold>250</bold></highlight> and other storage devices <highlight><bold>260</bold></highlight>A-<highlight><bold>260</bold></highlight>N can also be reduced by emphasizing on main memory databases and execution of mobile applications (e.g. real-time driving directions based on positioning). Performance improvement of the mobile applications can also reduce the number of required disk accesses and benefit the power consumption while running these mobile applications. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> The HDD control logic <highlight><bold>240</bold></highlight> may be incorporated within a specifically designed application specific integrated circuit (ASIC) and may access the hard disk drive &ldquo;HDD&rdquo; <highlight><bold>250</bold></highlight> and other storage devices <highlight><bold>260</bold></highlight>A-<highlight><bold>260</bold></highlight>N via a HDD interface which is typically provided to support one or more of the following types of data transfers in either direction (chipset <highlight><bold>200</bold></highlight> to hard disk drive &ldquo;HDD&rdquo; <highlight><bold>250</bold></highlight>, hard disk drive &ldquo;HDD&rdquo; <highlight><bold>250</bold></highlight> to chipset <highlight><bold>200</bold></highlight>): (1) programmed I/O (PIO): The system processor(s) <highlight><bold>110</bold></highlight> is in control of the data transfer; (2) 8237 style Bus Master IDE (DMA): ISA style DMA protocol, 16 MB/sec; (3) Ultra33, Ultra66 or Ultra100 DMA: Both the host chipset <highlight><bold>200</bold></highlight> as well as the HDD <highlight><bold>250</bold></highlight> can throttle data, and transfer rates up to 111 MB/s reads and 88 MB/s writes may be possible. In the case of programmed I/O, a software-based throttling of the hard disk accesses may be implemented since the processor(s) <highlight><bold>110</bold></highlight> is in control of the data transfers. In the 8237 style DMA (Bus Master IDE) however, additional protocol modifications may be necessary in order to support explicit hard disk throttling as desired under the Navigation mode. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The HDD control logic <highlight><bold>240</bold></highlight> contains registers for the following purposes: (1) set timing (delay, burst size) to control frequency of read/write cycles; (2) set burst size to control how much data is transferred during each read/write cycle; and (3) completely block hard disk access (read or write) if the chipset-attached vibration sensor <highlight><bold>220</bold></highlight> indicates the presence of strong sustained vibrations. As a result, disk accesses (reads and writes) can be reduced in duration by short bursts in the Navigation mode. In addition, such disk accesses (reads and writes) can also be completely blocked under conditions where extreme mechanical vibrations are present for short periods of time. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> More specifically, the HDD control logic <highlight><bold>240</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, may include IDE control registers <highlight><bold>610</bold></highlight>, an IDE control logic <highlight><bold>620</bold></highlight> and IDE first-in/first-outs (FIFOs) <highlight><bold>630</bold></highlight>. The IDE control register(s) <highlight><bold>610</bold></highlight> are used to set the parameters for individual transfers (read or write) based on an indication signal from the vibration sensor <highlight><bold>220</bold></highlight> (e.g., magnitude of the vibration) or the position sensor <highlight><bold>230</bold></highlight> regardless whether the mobile PC <highlight><bold>100</bold></highlight> is operating in a normal (stationary) mode or a mobile (Navigation) mode. Such parameters may include &ldquo;burst size&rdquo;, &ldquo;transfer count&rdquo;, &ldquo;base memory address&rdquo;, etc. For example, if the mobile PC <highlight><bold>100</bold></highlight> is operating in a normal (stationary) mode, then the parameters such as &ldquo;burst size&rdquo;, &ldquo;transfer count&rdquo;, and &ldquo;base memory address&rdquo; may be set in such a way consistent with the normal (stationary) mode. Likewise, if the mobile PC <highlight><bold>100</bold></highlight> is operating in a mobile (Navigation) mode, then the parameters such as &ldquo;burst size&rdquo;, &ldquo;transfer count&rdquo;, and &ldquo;base memory address&rdquo; may be set in such a way consistent with the Navigation mode. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> The IDE control register(s) <highlight><bold>610</bold></highlight> are typically addressable as memory mapped addresses. The IDE control logic <highlight><bold>620</bold></highlight> may be utilized to set up the FIFO threshold level of the IDE FIFO <highlight><bold>630</bold></highlight> and the delay time, via the IDE control register(s) <highlight><bold>610</bold></highlight> in order to write/read data to/from the HDD <highlight><bold>250</bold></highlight>. The FIFO threshold level of the IDE FIFOs <highlight><bold>630</bold></highlight> may be fixed or programmable. However, for every access to the HDD <highlight><bold>250</bold></highlight>, data may not be written to the HDD <highlight><bold>250</bold></highlight> or read from the HDD <highlight><bold>250</bold></highlight> until the delay time set is completed and the programmable FIFO threshold is reached. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The IDE FIFOs <highlight><bold>630</bold></highlight> provide the line buffering during an actual data transfer on the IDE interface (not shown) to the HDD <highlight><bold>250</bold></highlight>. A common size for the IDE FIFO <highlight><bold>630</bold></highlight> may be 16 DWORDs (64 bytes). The 16 DWORDs may be broken down into a &ldquo;Ping&rdquo; and a &ldquo;Pong&rdquo; FIFO, each 8 DWORDS deep. Together, the IDE FIFOs <highlight><bold>630</bold></highlight> provide the data buffering required to maintain a continuous high rate of data transfers between the chipset <highlight><bold>200</bold></highlight> and the hard disk drive (HDD) <highlight><bold>250</bold></highlight> and other storage devices <highlight><bold>260</bold></highlight>A-<highlight><bold>260</bold></highlight>N. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> illustrates a flowchart of an example hard disk drive (HDD) control logic <highlight><bold>250</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. When an indication signal is received from the vibration sensor <highlight><bold>220</bold></highlight> (e.g., magnitude of the vibration) or the position sensor <highlight><bold>230</bold></highlight>, the IDE control logic <highlight><bold>620</bold></highlight> is utilized to set up the FIFO threshold level of the IDE FIFO <highlight><bold>330</bold></highlight> and the delay time, via the IDE control register(s) <highlight><bold>610</bold></highlight> in order to write/read data to/from the HDD <highlight><bold>250</bold></highlight> at block <highlight><bold>710</bold></highlight>. For example, if the magnitude of the vibration from the vibration sensor <highlight><bold>220</bold></highlight> is &ldquo;high&rdquo; then the programmable FIFO threshold level may be &ldquo;high&rdquo; and the delay time set may be &ldquo;long&rdquo;. Likewise, if the magnitude of the vibration from the vibration sensor <highlight><bold>220</bold></highlight> is &ldquo;low&rdquo; then the programmable FIFO threshold level may be &ldquo;low&rdquo; and the delay time set may be &ldquo;short&rdquo;. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> Next, the IDE control logic <highlight><bold>620</bold></highlight> initiates writing data to the HDD <highlight><bold>250</bold></highlight> at block <highlight><bold>720</bold></highlight>. Then the IDE control logic <highlight><bold>620</bold></highlight> waits until the delay time set is completed at block <highlight><bold>730</bold></highlight> and the programmable FIFO threshold level is reached at block <highlight><bold>740</bold></highlight> before data can be written onto the HDD <highlight><bold>250</bold></highlight>. In other words, the data may not be written to the HDD <highlight><bold>250</bold></highlight> until the delay time set is completed at block <highlight><bold>730</bold></highlight> and the programmable FIFO threshold is reached at block <highlight><bold>740</bold></highlight>. This way disk accesses (reads or writes) to the HDD <highlight><bold>250</bold></highlight> and other storage devices <highlight><bold>260</bold></highlight>A-<highlight><bold>260</bold></highlight>N can be minimized based on the programmable FIFO threshold level and delay time. If the mobile PC <highlight><bold>100</bold></highlight> is operating in a normal (stationary) mode, disk accesses may be normal. However if the mobile PC <highlight><bold>100</bold></highlight> is operating in a mobile (navigation) mode, the disk accesses may be reduced in duration by doing only short bursts in order to reduce the risk of damage to the hard disk drive &ldquo;HDD&rdquo; <highlight><bold>250</bold></highlight> and other storage devices <highlight><bold>260</bold></highlight>A-<highlight><bold>260</bold></highlight>N. In addition, if mechanical vibrations are present over a certain threshold duration of time, such disk accesses (reads or writes) can be completely blocked if the FIFO threshold level and the delay time are set as &ldquo;unreachable&rdquo; or deactivated. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> illustrates a flowchart of an example computer system (mobile PC) operation between the normal (stationary) mode and the mobile (navigation) mode according to an embodiment of the present invention. As shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, the mobile PC <highlight><bold>100</bold></highlight> operates in a normal (stationary) mode at block <highlight><bold>810</bold></highlight>. As such, system parameters such as &ldquo;burst size&rdquo;, &ldquo;transfer count&rdquo;, and &ldquo;base memory address&rdquo; are set for operation in a normal (stationary) mode. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> When a Navigation mode is triggered based on an occurrence of any one of the listed characteristics as described, including the change in the position of the mobile PC <highlight><bold>100</bold></highlight> at a fixed or variable rate (velocity) and/or at a fixed or variable acceleration from the position sensor <highlight><bold>230</bold></highlight>, the presence of sustained or sporadic mechanical vibrations of varying magnitude over a certain threshold duration of time, and/or the chance of mechanical shocks from the vibration sensor <highlight><bold>220</bold></highlight> at block <highlight><bold>520</bold></highlight>, the HDD control logic <highlight><bold>240</bold></highlight> of the chipset <highlight><bold>200</bold></highlight> changes the system settings and configurations for operation in a Navigation mode at block <highlight><bold>820</bold></highlight>. Specifically, the IDE control logic <highlight><bold>620</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> sets up the FIFO threshold level, the delay time and parameters such as &ldquo;burst size&rdquo;, &ldquo;transfer count&rdquo;, and &ldquo;base memory address&rdquo; in accordance with the Navigation mode. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The operating system (OS) of the mobile PC <highlight><bold>100</bold></highlight> then detects the Navigation mode entry and changes OS settings and configurations for operation in the Navigation mode at block <highlight><bold>840</bold></highlight>. After the OS settings and configurations are adjusted for operation in the Navigation mode, the mobile PC <highlight><bold>100</bold></highlight> operates in a Navigation mode at block <highlight><bold>850</bold></highlight>. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> When there is a break from a Navigation mode at block <highlight><bold>860</bold></highlight>, that is when there is a connection with a known access point (AP) in a Bluetooth&trade; system, a loss of GPS satellite lock or no change in GPS position as identified from the position sensor <highlight><bold>230</bold></highlight>, the HDD control logic <highlight><bold>240</bold></highlight> of the chipset <highlight><bold>200</bold></highlight> changes the system settings and configurations for operation back in a normal (stationary) mode at block <highlight><bold>870</bold></highlight>. Specifically, the IDE control logic <highlight><bold>620</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> sets up the FIFO threshold level, the delay time and parameters such as &ldquo;burst size&rdquo;, &ldquo;transfer count&rdquo;, and &ldquo;base memory address&rdquo; in accordance with the normal (stationary) mode. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The operating system (OS) of the mobile PC <highlight><bold>100</bold></highlight> then detects the Navigation mode exit and changes OS settings and configurations for operation back in the normal (stationary) mode at block <highlight><bold>880</bold></highlight>. After the OS settings and configurations are adjusted for operation in the normal (stationary) mode, the mobile PC <highlight><bold>100</bold></highlight> operates in a normal mode at block <highlight><bold>810</bold></highlight>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> Alternatively, current ACPI power management specification may also be modified or extended to provide smooth transitions into or out of the Navigation from applicable ACPI states. For example, the Navigation mode can be defined as being a subset of global systems states (Gx states). According ACPI power management specification, the hard disk drive &ldquo;HDD&rdquo; <highlight><bold>250</bold></highlight> and other storage devices <highlight><bold>260</bold></highlight>A-<highlight><bold>260</bold></highlight>N can be represented by device performance states (Px states) including P0-Pn where P0 indicates the HDD <highlight><bold>250</bold></highlight> is using its maximum performance capability and may consume maximum power and Pn indicates the HDD <highlight><bold>250</bold></highlight> is at its minimum level and consumes minimal power while remaining in an active state. While the HDD <highlight><bold>250</bold></highlight> is in Px state during a Navigation mode (where &ldquo;x&rdquo; not equal to &ldquo;0&rdquo;), the HDD <highlight><bold>250</bold></highlight> will consume less power than usual and also less susceptible to failure from unexpected mechanical shock. The HDD control logic <highlight><bold>240</bold></highlight> of the host chip <highlight><bold>200</bold></highlight> may still be utilized as described with reference to <cross-reference target="DRAWINGS">FIGS. 3 and 4</cross-reference> in order to control the timing (delay and burst size) of hard disk accesses (reads and writes) in the Navigation mode. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> As described in the foregoing, the present invention advantageously provides a mechanism for identifying and differentiating between the stationary and mobile (dynamic) operating environments of the mobile PC in order to optimize mobile PC system performance and power management for mobile applications, while taking into account certain operating environments typical of such mobile applications and reducing the risk of damage to system components. The Navigation mode provides a safe (for the mPC) way to use the mobile PC while it is in motion while optimizing power and performance for mobile applications at the same time. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> While there have been illustrated and described what are considered to be exemplary embodiments of the present invention, it will be understood by those skilled in the art and as technology develops that various changes and modifications may be made, and equivalents may be substituted for elements thereof without departing from the true scope of the present invention. For example, the computer system as shown in FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>2</bold></highlight> may be configured differently or employ some or different components than those illustrated. In addition, the HDD control logic shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> may be configured differently or employ some or different components than those illustrated without changing the basic function of the invention. Further, operating system (OS) and ACPI control methods may be designed to perform the same task as shown in FIGS. <highlight><bold>3</bold></highlight>-<highlight><bold>8</bold></highlight>. Many modifications may be made to adapt the teachings of the present invention to a particular situation without departing from the scope thereof. Therefore, it is intended that the present invention not be limited to the various exemplary embodiments disclosed, but that the present invention includes all embodiments falling within the scope of the appended claims.</paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A mobile system, comprising: 
<claim-text>a storage device; </claim-text>
<claim-text>a vibration sensor arranged to detect whether there is a presence of sustained or sporadic mechanical vibrations over a designated time duration, and to generate therefrom a vibration signal indicating the presence of sustained or sporadic mechanical vibrations; and </claim-text>
<claim-text>a chipset having a storage controller arranged to control accesses to said storage device, including limiting accesses to said storage device to minimize damages to said storage device in response to the vibration signal indicating the presence of sustained or sporadic mechanical vibrations. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The mobile system as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>a position sensor arranged to detect whether there is a change in the position of said mobile system at a fixed or variable velocity or acceleration, and to generate a position signal indicating the change in the position of said mobile system. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The mobile system as claimed in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein said storage controller of said chipset further limits accesses to said storage device to minimize damages to said storage device in response to the position signal indicating the change in the position of said mobile system. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The mobile system as claimed in <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein said storage device corresponds to a hard disk drive. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The mobile system as claimed in <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein said storage controller contains registers for the following purposes: (1) set timing (delay, burst size) to control frequency of read/write cycles; (2) set burst size to control how much data is transferred during each read/write cycle; and (3) completely block hard disk access (read or write) if the vibration signal indicates the presence of strong sustained vibrations for short periods of time. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The mobile system as claimed in <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein said storage controller comprises: 
<claim-text>control registers arranged to set the parameters for individual transfers (read or write) based on the vibration signal from said vibration sensor or the position signal from said position sensor regardless whether said mobile system is operating in a normal (stationary) mode or a mobile (Navigation) mode, wherein said parameters include a burst size, a transfer count, and a base memory address; </claim-text>
<claim-text>first-in/first-out (FIFO) devices arranged to provide line buffering required for data transfers to said storage device; and </claim-text>
<claim-text>control logic arranged to set up the FIFO threshold level of the FIFO devices and the delay time, via the control registers in order to write/read data to/from said storage device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The mobile system as claimed in <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein said control logic initiates writing data to said storage device, waits until the delay time set is completed and the FIFO threshold level is reached before data can be written onto said storage device. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The mobile system as claimed in <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein said position sensor is implemented with communication devices using Bluetooth&trade; standards or Global Position System (GPS) standards. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The mobile system as claimed in <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein said position sensor is used to trigger the mobile system to operate in a Navigation mode when the mobile system is out of position or disconnected from a Bluetooth Access Point, and exit from the Navigation mode when the mobile system is stationary or connected with said Bluetooth Access Point. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A computer system, comprising: 
<claim-text>a disk drive; </claim-text>
<claim-text>a host processor equipped with an operating system (OS) which enables operation in a normal mode when the computer system is stationary and a Navigation mode when the computer system is mobile; </claim-text>
<claim-text>a vibration sensor arranged to detect whether there is a presence of sustained or sporadic mechanical vibrations over a designated time duration, and to generate therefrom a vibration signal indicating the presence of sustained or sporadic mechanical vibrations; </claim-text>
<claim-text>a position sensor arranged to detect whether there is a change in the position of the computer system at a fixed or variable velocity or acceleration, and to generate a position signal indicating the change in the position of the computer system; and </claim-text>
<claim-text>a chipset equipped with a disk drive control logic arranged to control disk accesses to said disk drive, including controlling disk accesses to said disk drive in order to reduce damages to said disk drive in response to the vibration signal indicating the presence of sustained or sporadic mechanical vibrations or the position signal indicating the change in the position of the computer system. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The computer system as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, further comprising: 
<claim-text>a flash memory connected to the chipset, to store a set of system basic input/output start up (BIOS) instructions at startup, and ACPI instructions implemented to provide various power saving functions, manage the progress of power saving between full-on, standby, and sleep mode, and to provide transitions between the normal mode when the computer system is stationary and the Navigation mode when the computer system is mobile from applicable ACPI states. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The computer system as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein said disk drive control logic contains registers for the following purposes: (1) set timing (delay, burst size) to control frequency of read/write cycles; (2) set burst size to control how much data is transferred during each read/write cycle; and (3) completely block hard disk access (read or write) if the vibration signal indicates the presence of strong sustained vibrations for short periods of time. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The computer system as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein said disk drive control logic comprises: 
<claim-text>control registers arranged to set the parameters for individual transfers (read or write) based on the vibration signal from said vibration sensor or the position signal from said position sensor regardless whether said mobile system is operating in a normal (stationary) mode or a mobile (Navigation) mode, wherein said parameters include a burst size, a transfer count, and a base memory address; </claim-text>
<claim-text>first-in/first-out (FIFO) devices arranged to provide line buffering required for data transfers to said disk drive; and </claim-text>
<claim-text>control logic arranged to set up the FIFO threshold level of the FIFO devices and the delay time, via the control registers in order to write/read data to/from said disk drive. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The computer system as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein said control logic initiates writing data to said disk drive, waits until the delay time set is completed and the FIFO threshold level is reached before data can be written onto said disk drive. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The computer system as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said position sensor is implemented with communication devices using Bluetooth&trade; standards or Global Position System (GPS) standards. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The computer system as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said position sensor is used to trigger the mobile system to operate in a Navigation mode when the mobile system is out of position or disconnected from a Bluetooth Access Point, and exit from the Navigation mode when the mobile system is stationary or connected with said Bluetooth Access Point. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The computer system as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein, when the Navigation mode is triggered in response to the vibration signal or the position signal, said disk drive control logic of the chipset changes system settings and configurations for operation in the Navigation mode, and said operating system (OS) then detects the Navigation mode entry and changes OS settings and configurations for operation in the Navigation mode. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The computer system as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein, when there is a break from the Navigation mode, said disk drive control logic of the chipset changes system settings and configuration for operation in the normal stationary mode, and said operating system (OS) then detects the exit from the Navigation mode and changes OS settings and configurations for operation in the normal stationary mode. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A method for enabling a mobile PC having an operating system (OS) and a chipset configured to transition between a normal (stationary) mode and a Navigation (mobile) mode, comprising: 
<claim-text>receiving an indication from a vibration sensor or a position sensor attached to the chipset, which requests operation in a Navigation (mobile) mode when there is a presence of sustained or sporadic mechanical vibrations over a designated time duration or when there is a change in the position of the mobile PC at a fixed or variable velocity or acceleration; </claim-text>
<claim-text>changing, at the chipset, system settings and configurations for the mobile PC to operate in the Navigation (mobile) mode; </claim-text>
<claim-text>detecting, at the operating system (OS), the Navigation (mobile) mode entry and changing OS settings and configurations for the mobile PC to operate in the Navigation (mobile) mode; </claim-text>
<claim-text>determining whether there is a break from the Navigation (mobile) mode; </claim-text>
<claim-text>changing, at the chipset, system settings and configurations for the mobile PC to operate in back in the normal (stationary) mode, when there is a break from the Navigation (mobile) mode; and </claim-text>
<claim-text>detecting, at the operating system (OS), the Navigation mode exit and changing OS settings and configurations for the mobile PC to operate in the normal (stationary) mode. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein said system settings and configurations for the mobile PC to operate in the Navigation (mobile) mode include setting parameters for individual transfers (read or write) based on the indication from said vibration sensor or said position sensor, in which said parameters include a burst size, a transfer count, and a base memory address; and setting up a threshold level of FIFO devices and the delay time in order to initiate writing data to said disk drive, wait until the delay time set is completed and the FIFO threshold level is reached before data is written onto said disk drive.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030003943A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030003943A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030003943A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030003943A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030003943A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030003943A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
