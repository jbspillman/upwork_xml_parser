<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002058A1-20030102-D00000.TIF SYSTEM "US20030002058A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002058A1-20030102-D00001.TIF SYSTEM "US20030002058A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002058A1-20030102-D00002.TIF SYSTEM "US20030002058A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002058A1-20030102-D00003.TIF SYSTEM "US20030002058A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002058A1-20030102-D00004.TIF SYSTEM "US20030002058A1-20030102-D00004.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002058</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09881460</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010614</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>B41J001/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>358</class>
<subclass>001900</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method for multilevel printing of digital images using reduced colorant amounts</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Douglas</given-name>
<middle-name>W.</middle-name>
<family-name>Couwenhoven</family-name>
</name>
<residence>
<residence-us>
<city>Fairport</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Kevin</given-name>
<middle-name>E.</middle-name>
<family-name>Spaulding</family-name>
</name>
<residence>
<residence-us>
<city>Spencerport</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Rodney</given-name>
<middle-name>L.</middle-name>
<family-name>Miller</family-name>
</name>
<residence>
<residence-us>
<city>Fairport</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>Eastman Kodak Company</organization-name>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>Thomas H. Close</name-1>
<name-2>Patent Legal Staff</name-2>
<address>
<address-1>Eastman Kodak Company</address-1>
<address-2>343 State Street</address-2>
<city>Rochester</city>
<state>NY</state>
<postalcode>14650-2201</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method for modifying an input digital image having an (x, y) array of pixels, each pixel having an input code value for one or more color channels, wherein said input code value has a nonlinear relationship to colorant amount, to form an output digital image containing output code values for each pixel subject to a total colorant amount limit. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS REFERENCE TO RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> Reference is made to commonly assigned U.S. patent application Ser. No. 09/213,637 filed Dec. 17, 1998 by Couwenhoven, et al., the disclosure of which is herein incorporated by reference.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This invention pertains to the field of digital imaging, and more particularly to a colorant reduction method used during the process of printing a digital image. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> In the field of digital printing, a digital printer receives digital data from a computer and places colorant on a receiver to reproduce the image. A digital printer may use a variety of different technologies to transfer colorant to the page. Some common types of digital printers include inkjet, thermal dye transfer, thermal wax, electrophotographic, and silver halide printers. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Often when printing digital images, undesirable image artifacts may result when an excessive amount of colorant is placed in a small area on the page. These image artifacts degrade the image quality, and can result in an unacceptable print. In the case of an inkjet printer, some examples of these image artifacts include bleeding, cockling, banding, and noise. Bleeding is characterized by an undesirable mixing of colorants along a boundary between printed areas of different colorants. The mixing of the colorants results in poor edge sharpness, which degrades the image quality. Cockling is characterized by a warping or deformation of the receiver that can occur when printing excessive amounts of colorant. In severe cases, the receiver may warp to such an extent as to interfere with the mechanical motions of the printer, potentially causing damage to the printer. Banding refers to unexpected dark or light lines or streaks that appear running across the print, generally oriented along one of the axes of motion of the printer. Noise refers to undesired density or tonal variations that can give the print a grainy appearance, thus degrading the image quality. Although these artifacts are presented in the context of an inkjet printer, it is known to those skilled in the art that similar artifacts commonly exist with the other above mentioned printing technologies also. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> In a digital printer, satisfactory density and color reproduction can generally be achieved without using the maximum possible amount of colorant. Therefore, using excessive colorant not only introduces the possibility of the above described image artifacts occurring, but is also a waste of colorant. This is disadvantageous, since the user will get fewer prints from a given quantity of colorant. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> It has been recognized in the art that the use of excessive colorant when printing a digital image needs to be avoided. Generally, the amount of colorant needed to cause image artifacts (and therefore be considered excessive) is receiver, colorant, and printer technology dependent. Many techniques of reducing the colorant amount are known for binary printers in which a halftoning process is used (typically inside a software printer driver program) to convert input digital image data into &ldquo;on&rdquo; or &ldquo;off&rdquo; states at each pixel. In such printers, the input image to the halftoning process is a higher bit precision image, typically 8 bits (or 256 levels) per pixel, per color. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> U.S. Pat. No. 4,930,018 to Chan et al teaches a method of reducing paper cockle and graininess of inkjet prints utilizing multiple inks with different dye loadings. In this method, a given grey level can be reproduced a variety of different ways, some of which will use more colorant than others. The different ways to reproduce a given grey level are rank ordered according to the total ink coverage, and a selection is made by iterating through the order until one is found that satisfies a specified maximum coverage limit. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> U.S. Pat. No. 5,515,479 to Klassen teaches a method for reducing marking material (i.e., ink) coverage in a printing process by determining the ink coverage for each pixel in an image, determining if too much ink will be placed on the page in a given area, and reducing the amount of ink to an acceptable level by turning &ldquo;off&rdquo; a fraction of the pixels in the given area. The determination of which pixels to turn off is made by using a processing order through each area which tends to randomize the turn off effect. While this method successfully reduces the amount of ink placed on the page in a given area, it can introduce pattern noise into the image because of the processing order method of selecting which pixels to turn off. Also, the pixels that are turned off in each color separation are not correlated, which can lead to a grainy appearance to an image region that should appear otherwise uniform. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> U.S. Pat. No. 5,563,985 to Klassen addresses the problem of pattern noise by selecting which pixels to turn off in response to a random number function. While this method successfully eliminates pattern noise that can be generated in a given area, it can introduce random noise into the image because the selection of which pixels to turn off is determined by a random process. While this may be visually less objectionable than pattern noise, it is still not optimal. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> U.S. Pat. No. 5,012,257 to Lowe et al. describes a &ldquo;superpixel&rdquo; printing strategy to reduce bleed across color field boundaries. This strategy limits printing to no more than two drops of ink per cell or pixel, and no more than a total of three drops per superpixel, where a superpixel consists of a 2&times;2 array of pixel cells. This strategy controls bleed, but at a penalty in terms of color and spatial resolution. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> U.S. Pat. No. 6,081,340 to Klassen teaches a method for reducing marking material (i.e., ink) coverage in a printer that has a nonlinear marking material coverage. As understood, this method applies to a halftoned image signal where the number of gray levels in the image has been reduced to match the number of available printing levels in the printer. A coverage calculator is then used to determine the amount of marking material that is present in a local 8&times;8 region of the current pixel. This method is disadvantaged because it operates after the halftoning process, and is therefore required to sample a region of the halftoned image data in order to estimate the marking material coverage, which can be time consuming. Also, the process of reducing the marking material coverage is limited to turning off integer numbers of discrete dots, therefore limiting the fidelity of the reduction step. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The above mentioned references teach methods of reducing artifacts associated with excessive colorant usage by utilizing methods that operate on the digital data after halftoning. That is, the above techniques operate primarily on bitmaps of image data where each pixel is represented by a code value of 0 (&ldquo;off&rdquo;, meaning no colorant), or 1 (&ldquo;on&rdquo;, meaning fall colorant). At this point in the imaging chain of a digital printer, much information has been lost due to the halftoning process, and accurately controlling the total colorant amount becomes more costly and less accurate relative to a pre-halftoning algorithm. U.S. Pat. No. 5,633,662 to Allen et al. teaches a method of reducing colorant using a pre-halftoning algorithm that operates on higher bit precision data (typically 256 levels, or 8 bits per pixel, per color). However, this method is intended for a binary printer where the halftone dot area is substantially linear with digital code value, and therefore the amount of colorant placed on the page is substantially linear with the digital code values that are used to drive the printer. In general, this arrangement will not be optimal for a multilevel printer. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> In a multilevel printer, the colorant amount is typically not linear with digital code value. That is, if the digital code value (in a pre-halftone algorithm) is reduced by a certain percentage, the colorant amount is typically not reduced by the same percentage. In fact, the percentage of colorant amount reduction will typically vary based on the density (lightness/darkness) of the pixel. A printer with this characteristic is not handled well by any of the prior art methods, as they all assume that colorant amount is linear with digital code value. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> Thus, there is a need for a colorant reduction algorithm which can be applied to a multilevel printer to provide for high quality images free from the artifacts associated with using excess colorant. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> It is an object of the present invention to provide for printing high quality digital images that are free of the above described artifacts associated with using excessive amounts of colorant. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> It is a further object of the present invention to reduce the amount of colorant used to print an image on a multilevel printer in which the colorant amount may not be linear with digital code value, thereby resulting in improved image quality relative to the prior art. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> These objects are achieved by a method for modifying an input digital image having an (x,y) array of pixels, each pixel having an input code value for one or more color channels, wherein said input code value has a nonlinear relationship to colorant amount, to form an output digital image containing output code values for each pixel subject to a total colorant amount limit, comprising the steps of: </paragraph>
<paragraph id="P-0018" lvl="2"><number>&lsqb;0018&rsqb;</number> a) determining an input colorant amount for each color channel of a pixel in response to the corresponding input code value and a colorant amount function that relates the input code value to the colorant amount for the corresponding color channel; </paragraph>
<paragraph id="P-0019" lvl="2"><number>&lsqb;0019&rsqb;</number> b) determining a modified colorant amount for each color channel of the image pixel responsive to the input colorant amount for each color channel and a total colorant amount limit; </paragraph>
<paragraph id="P-0020" lvl="2"><number>&lsqb;0020&rsqb;</number> c) determining an output code value for each color channel of the pixel responsive to the modified colorant amount and an inverse colorant amount function that relates colorant amount to the output code value for the corresponding color channel, and </paragraph>
<paragraph id="P-0021" lvl="2"><number>&lsqb;0021&rsqb;</number> d) repeating steps (a) through (c) for each pixel in the input digital image. </paragraph>
</section>
<section>
<heading lvl="1">ADVANTAGES </heading>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The present invention has an advantage over the prior art in that it provides for reducing the amount of colorant used to print a digital image without introducing random noise into the image. Another advantage of the present invention is that it can be applied to multilevel printers in which the colorant amount is not necessarily linear with digital code value. Yet another advantage of the present invention is that the maximum amount of colorant is more accurately controlled for a multilevel printer relative to the prior art methods, providing for improved control over image artifacts associated with using excess colorant. It is a feature of the present invention that colored images are produced which are esthetically pleasing and free from the above described artifacts.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a flow diagram showing the placement of the ink depletion processor in an inkjet printer or printer driver; </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a graph showing comparing the volume change for a given code value change for binary and multilevel printers; </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a flow diagram showing a preferred embodiment of the present invention; and </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flow diagram showing another preferred embodiment of the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> This invention describes a method for reducing the amount of colorant used in printing a digital image to avoid undesirable image artifacts that degrade the image quality of a digital print. The invention is presented hereinafter in the context of an inkjet printer. However, it should be recognized that this method is applicable to other printing technologies as well. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> An input digital image is composed of a two dimensional array of individual picture elements, or pixels, and can be represented as a function of two spatial coordinates, (x and y), and a color channel coordinate, c. Each unique combination of the spatial coordinates defines the location of a pixel within the image, wherein the pixel possesses input code values representing the amount of ink present at the given location for each of a number of different inks represented by the color channel coordinate, c. Each code value representing the amount of ink in a color channel is generally represented by numbers on the range &lcub;0,255&rcub;, and a typical set of inks for an inkjet printer consists of cyan (C), magenta (M), yellow (Y), and black (K) inks. Although the present invention will be described in the context of an inkjet printer with C, M, Y, and K colorants, the invention can be applied to other printer technologies and colorants as well. In the context of an inkjet printer, the colorant amounts will be described in terms of ink volume, but one skilled in the art will recognize that other metrics may be more convenient for computing the colorant amount for different printing technologies. Another example of the input colorant amount that can be used is the mass of toner that is used in an electrophotographic printer. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> generic image processing algorithm chain is shown for an inkjet printer in which a raster image processor <highlight><bold>10</bold></highlight> receives digital image data in the form of an input image from a digital image source <highlight><bold>12</bold></highlight> which may be a host computer, network, computer memory, or other digital image storage device. The raster image processor <highlight><bold>10</bold></highlight> applies imaging algorithms to produce a processed digital image signal having input code values i(x, y, c), where x, y are the spatial coordinates of the pixel location, and c is the color channel coordinate. In one embodiment of the present invention, c has values 0, 1, 2, 3 corresponding to C, M, Y, K color channels. In another embodiment of the present invention, the input image is an RGB image and the values for c are 0, 1, 2. The types of imaging algorithms applied in the raster image processor 10 typically include sharpening (sometimes called &ldquo;unsharp masking&rdquo; or &ldquo;edge enhancement&rdquo;), color conversion (converts from the source image color space, typically RGB, to the CMYK color space of the printer), resizing (or spatial interpolation), and others. The imaging algorithms that are applied in the raster image processor <highlight><bold>10</bold></highlight> can vary depending on the application, and are not fundamental to the present invention. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Following the raster image processor <highlight><bold>10</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is an ink depletion processor <highlight><bold>20</bold></highlight>, which receives the input code value i(x, y, c) and a total colorant amount limit V<highlight><subscript>t</subscript></highlight>, and produces a depleted image signal having output code values o(x, y, c). The total colorant amount limit V<highlight><subscript>t </subscript></highlight>is provided by a total colorant amount limit adjustor <highlight><bold>22</bold></highlight>, which is typically adjusted by the user to provide acceptable image quality for a given ink and receiver media combination. The ink depletion processor <highlight><bold>20</bold></highlight> performs the function of reducing the total colorant amount (per pixel, or per unit area) below the specified limit V<highlight><subscript>t </subscript></highlight>to prevent image artifacts from occurring. There are many different methods presented in the prior art to accomplish this, and the particular algorithm used in the ink depletion processor is not fundamental to the invention. In a preferred embodiment of the present invention, the algorithm used in the ink depletion processor is disclosed in commonly assigned U.S. patent application Ser. No. 09/213,637 filed Dec. 17, 1998 by Couwenhoven, et al., the disclosure of which is herein incorporated by reference. This disclosure teaches a method of turning off pixels in an image region having excess colorant in response to a spatially periodic dither signal. The dither signal is constructed to have &ldquo;blue noise&rdquo; characteristics that have minimal visibility to the human eye. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> Still referring to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the ink depletion processor <highlight><bold>20</bold></highlight> is followed by a multitone processor <highlight><bold>30</bold></highlight> which receives the output code value o(x, y, c) and produces a multitoned image signal h(x, y, c). The multitone processor <highlight><bold>30</bold></highlight> performs the function of reducing the number of bits used to represent each image pixel to match the number of printing levels available in the printer. Typically, the output code value o(x, y, c) will have 8 bits per pixel (per color), and the multitone processor <highlight><bold>30</bold></highlight> generally reduces this to 1 to 3 bits per pixel (per color) depending on the number of available printing levels. The multitone processor <highlight><bold>30</bold></highlight> may use a variety of different methods known to those skilled in the art to perform the multitoning. Such methods typically include error diffusion, clustered-dot dithering, or stochastic (blue noise) dithering. The particular multitoning method used in the multitone processor <highlight><bold>30</bold></highlight> is not fundamental to the present invention, but the present invention does require that the ink depletion processor <highlight><bold>20</bold></highlight> is applied prior to the multitone processor <highlight><bold>30</bold></highlight> in the imaging chain. Finally, an inkjet printer <highlight><bold>36</bold></highlight> receives the multitoned image signal h(x, y, c), and deposits ink on the page at each pixel location according to the value of the multitoned image signal h(x, y, c) to produce the desired image. All of the pixels in the input digital image are sequentially processed through the image chain of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, and sent to the inkjet printer <highlight><bold>36</bold></highlight>, which typically prints the pixels in a raster scanned fashion. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Turning now to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, an example of the ink volume deposited on the page as a function of the output code value o(x, y, c) (normalized on the range &lcub;0, 1&rcub;) is shown for a binary printer as a solid line <highlight><bold>140</bold></highlight>, and for a multilevel printer as a dashed line <highlight><bold>150</bold></highlight>. These will be referred to hereinafter as the binary printer colorant volume function <highlight><bold>140</bold></highlight>, and the multilevel printer colorant volume function <highlight><bold>150</bold></highlight>. A binary printer can eject either no drop (i.e., volume 0) as indicated by point &ldquo;A&rdquo;, or one drop with normalized volume 1.0, as indicated by point &ldquo;B&rdquo; at each pixel. The multilevel printer can print these two, plus an additional drop that has a normalized drop volume of roughly 0.72, as indicated by point &ldquo;C&rdquo;. Ink drops corresponding to points A, B, and C will be hereinafter referred to as &ldquo;drop A&rdquo;, &ldquo;drop B&rdquo;, and &ldquo;drop C&rdquo; respectively. For illustration purposes, the normalized code values that correspond to drops A, B, and C will be 0, 0.5, and 1.0, respectively. It is important to understand that even though the printers can eject discrete ink drops with fixed volumes at each pixel, it is possible to have a fractional colorant volumes at each pixel due to the halftoning (or multitoning) step. This will now be described in more detail, as it is fundamental to the understanding of the invention. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> As an illustration, consider a printer system as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, but where the ink depletion processor <highlight><bold>20</bold></highlight> has been disabled. That is, the output of the ink depletion processor <highlight><bold>20</bold></highlight>, o(x, y, c), is set to be identical to the input, i(x, y, c). Also consider for a given pixel that the raster image processor <highlight><bold>10</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> produces a normalized code value of 0.62, as indicated by the point X<highlight><subscript>0 </subscript></highlight>of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. In the case of the binary printer, the multitone (halftone) processor <highlight><bold>30</bold></highlight> generates a multitoned image signal for this pixel which has a 62% probability of being &ldquo;on&rdquo; (i.e., drop B with normalized drop volume 1.0 is ejected at this pixel), and a 38% probability of being &ldquo;off&rdquo; (i.e., no drop ejected at this pixel). Thus, conceptually, it can be said that the colorant volume per pixel for a normalized code value of 0.62 is 0.62 normalized volume units, as indicated by point V<highlight><subscript>10</subscript></highlight>. Indeed, if an image containing 100 pixels all having a normalized code value of 0.62 is processed by the multitone processor <highlight><bold>30</bold></highlight> with 2 possible output levels, then 62 of the pixels in the multitoned image signal h(x, y, c) would be &ldquo;on&rdquo; (drop B), and <highlight><bold>38</bold></highlight> would be &ldquo;offs (drop A). This same calculation can be performed for any normalized code value between 0.0 and 1.0 to arrive at the binary printer colorant volume function <highlight><bold>140</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The same calculation shown above can be repeated for a multilevel printer to arrive at the multilevel printer colorant volume function <highlight><bold>150</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. Consider in the case of a multilevel printer that the same normalized code value of 0.62 is produced by the raster image processor <highlight><bold>10</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, and that the ink depletion processor <highlight><bold>20</bold></highlight> is still disabled as in the above example. In this case, the multitone processor <highlight><bold>30</bold></highlight> will generate a multitoned image signal h(x, y, c) that has (0.62&minus;0.50)/(1.00&minus;0.50)&equals;0.24, or a 24% chance of being a drop B, and a 100&minus;24&equals;76% chance of being a drop C. Thus, if an image containing 100 pixels all having a normalized code value of 0.62 is processed by the multitone processor <highlight><bold>30</bold></highlight> with 3 possible output levels, then 24 of the pixels in the multitoned image signal h(x, y, c) would be drop B, and 76 would be drop C. Thus, the normalized drop volume per pixel produced by the multilevel printer for a normalized code value of 0.62 can be computed by simple linear interpolation between the normalized volumes of drop C and drop B according to (0.24)(1.0)&plus;(0.76)(0.72)&equals;0.79, as indicated by point V<highlight><subscript>20</subscript></highlight>. This same calculation can be performed for any normalized code value between 0.0 and 1.0 to arrive at the multilevel printer colorant volume function <highlight><bold>150</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Still referring to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the functioning of the ink depletion processor <highlight><bold>20</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> will now be examined for both the binary and multilevel printer cases. The total colorant amount for each pixel is the sum of the colorant amounts for each color channel of the pixel. In either case, the ink depletion processor <highlight><bold>20</bold></highlight> will attempt to modify the normalized code value to ensure that a normalized colorant volume limit V<highlight><subscript>t </subscript></highlight>is not exceeded. All implementations of the ink depletion processor <highlight><bold>20</bold></highlight> will strive for this goal, and therefore the particular implementation of the ink depletion processor <highlight><bold>20</bold></highlight> is not fundamental to the invention. As mentioned earlier, the prior art ink depletion algorithms implicitly assume that the relationship between code value and drop volume is linear, corresponding to the binary printer colorant volume function <highlight><bold>140</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. Thus in the prior art, a total code value limit (corresponding to the point X<highlight><subscript>1 </subscript></highlight>of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) is used as an indicator of the normalized colorant volume limit V<highlight><subscript>t</subscript></highlight>. For the case of the binary printer, this assumption is valid, and the prior art ink depletion algorithms will reduce the normalized code value from X<highlight><subscript>0 </subscript></highlight>to X<highlight><subscript>1</subscript></highlight>, causing the normalized drop volume per pixel to decrease from V<highlight><subscript>10</subscript></highlight>, to V<highlight><subscript>11</subscript></highlight>, thereby satisfying the normalized colorant volume limit V<highlight><subscript>t </subscript></highlight>constraint. However, if the same assumption is made in the case of a multitone printer, reducing the normalized code value from X<highlight><subscript>0 </subscript></highlight>to X<highlight><subscript>1 </subscript></highlight>causes the normalized drop volume per pixel to decrease from V<highlight><subscript>20 </subscript></highlight>to V<highlight><subscript>21</subscript></highlight>. Not only does this not satisfy the normalized colorant volume limit V<highlight><subscript>t </subscript></highlight>constraint, but the actual reduction in normalized drop volume &Dgr;V<highlight><subscript>2 </subscript></highlight>is less than what was expected, indicated by &Dgr;V<highlight><subscript>1</subscript></highlight>. Clearly, the assumptions made by the prior art ink depletion algorithms will not perform as expected with a printer having a nonlinear colorant volume function as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> The goal of the present invention is to modify the normalized code value for a multitone printer in such a way that any ink depletion algorithm that assumes a linear printer colorant volume function can be used. Essentially, this means restoring the linearity between the image signal normalized code value and the normalized ink drop volume. A means for accomplishing this goal will now be described. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> In a preferred embodiment of the invention, as shown in <cross-reference target="DRAWINGS">FIG. 3, a</cross-reference> volumetric ink depletion processor <highlight><bold>62</bold></highlight> is used in place of the ink depletion processor <highlight><bold>20</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The volumetric ink depletion processor <highlight><bold>62</bold></highlight> contains an colorant volume function processor <highlight><bold>40</bold></highlight>, an ink depletion processor <highlight><bold>50</bold></highlight>, and an inverse colorant volume function processor <highlight><bold>60</bold></highlight>. In this embodiment, an inkjet printer is used, so the colorant is measured in terms of ink volume. However, for other printing technologies that measure colorant differently, the colorant volume function processor <highlight><bold>40</bold></highlight> and inverse colorant volume function processor <highlight><bold>60</bold></highlight> would be appropriately modified to a colorant amount function processor and inverse colorant amount function processor that produce colorant amounts in an appropriate metric, such as toner mass for an electrophotographic printer. The colorant volume function processor <highlight><bold>40</bold></highlight> receives the input code value i(x, y, c), and produces a volume code value v(x, y, c). (Typically, the volume code value will be represented by an integer digital code value, but it could also be represented by a floating point number.) The colorant volume function processor <highlight><bold>40</bold></highlight> operates in such a way that the normalized ink drop volume is linear with respect to the volume code value v(x, y, c). The ink depletion processor <highlight><bold>50</bold></highlight> then receives the volume code value v(x, y, c) and a total code value limit V<highlight><subscript>t</subscript></highlight>, and produces a depleted volume code value v&prime;(x, y, c). The total code value limit V<highlight><subscript>t </subscript></highlight>is produced by a total colorant amount limit adjustor <highlight><bold>22</bold></highlight>, such as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Since the ink depletion processor <highlight><bold>50</bold></highlight> operates on the volume code value v(x, y, c), the assumption that normalized ink drop volume is linear with code value is satisfied, and the ink depletion processor <highlight><bold>50</bold></highlight> will therefore produce the desired result. The inverse colorant volume function processor <highlight><bold>60</bold></highlight> receives the depleted volume code value v&prime;(x, y, c) and produces the output code value o(x, y, c). The output of the inverse colorant volume function processor <highlight><bold>60</bold></highlight> is applied to a multitone (halftone) processor <highlight><bold>30</bold></highlight> such as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. In this embodiment of the present invention, the inverse colorant volume function processor <highlight><bold>60</bold></highlight> implements substantially the inverse mathematical transform of the colorant volume function processor <highlight><bold>40</bold></highlight>. This provides a conversion of the depleted volume code value v&prime;(x, y, c) back to the &ldquo;original&rdquo; space of the output code value o(x, y, c) prior to multitoning. In this manner, the overall code value to colorant volume relationship is maintained by the volumetric ink depletion processor <highlight><bold>62</bold></highlight>, but the actual process of reducing the amount of colorant performed by the ink depletion processor <highlight><bold>50</bold></highlight> is performed on a volume code value v(x, y, c) that is linear with colorant volume, and therefore a more accurate reduction of the colorant amount is achieved. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> In the above embodiment of the present invention, the colorant volume function processor <highlight><bold>40</bold></highlight> and inverse colorant volume function processor <highlight><bold>60</bold></highlight> are pre-programmed with volume data that relates to the shape of the colorant volume function for the particular printer, such as the multilevel printer colorant volume function <highlight><bold>150</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. Turning now to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, another embodiment of the present invention is shown in which the volume data needed to specify the colorant volume function is provided (preferably by the raster image processor <highlight><bold>10</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) to a volumetric ink depletion processor <highlight><bold>112</bold></highlight> via a colorant volume data source <highlight><bold>72</bold></highlight>. The colorant volume data source <highlight><bold>72</bold></highlight> is typically a data file stored on computer disk or programmable memory that is accessible to the volumetric ink depletion processor <highlight><bold>112</bold></highlight>. The volume data consists of an array of code value and ink drop volume pairs for each colorant, and is indicated by a volume data signal, vol(cv, c), where cv is the code value and c is the colorant index. In this embodiment, a colorant volume LUT generator <highlight><bold>70</bold></highlight> receives the volume data signal vol(cv, c), and creates a lookup table vfun(i, c), which is supplied to a colorant volume function processor <highlight><bold>90</bold></highlight>. Similarly, an inverse colorant volume LUT generator <highlight><bold>80</bold></highlight> receives the volume data signal vol(cv, c), and creates a lookup table vfun_inv(v&prime;, c), which is supplied to an inverse colorant volume function processor <highlight><bold>110</bold></highlight>. The lookup table vfun(i, c) is created such that the output of the lookup table will be linear with ink drop volume as discussed above. The lookup table vfun_inv(v&prime;, c) is created such that it provides substantially the inverse mathematical transform as the lookup table vfun(i, c). The colorant volume function processor <highlight><bold>90</bold></highlight> uses the lookup table vfun(i, c) to convert the input code value i(x, y, c) into a volume code value v(x, y, c). </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The process of creating the lookup table vfun(i, c) based on the volume data signal vol(cv, c) and the process of applying the lookup table vfun(i, c) to the input code value i(x, y, c) are image processing techniques that will be well known to those skilled in the art. It is assumed that the volume data signal vol(cv, c) is known for a given printer, or can be measured directly using test image signals. The code value and ink drop volume pairs of the volume data signal are then fit with a spline curve to interpolate the ink drop volumes between the sampled code value points. Then, the spline fit is sampled at a number of equally spaced discrete code values corresponding to the number of possible levels of the input code value, which is typically <highlight><bold>256</bold></highlight>, and the <highlight><bold>256</bold></highlight> corresponding code value and ink drop volume pairs are stored as the lookup table vfun(i, c). This process is performed independently for each color, as it is possible for each color channel to have a different volume data signal. The colorant volume function processor <highlight><bold>90</bold></highlight> applies the lookup table vfun(i, c) to the input code values i(x, y, c) by simply addressing the lookup table vfun(i, c) with the input code value, and retrieving the result. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> Similarly, the lookup table vfun_inv(v&prime;, c) is created from the volume data signal vol(cv, c), except that the process is &ldquo;inverted&rdquo;, such that the ink drop volume is sampled at a number of equally spaced discrete volumes and the spline fit is used to compute the corresponding code values. The inverse colorant volume function processor <highlight><bold>110</bold></highlight> applies the lookup table vfun_inv(v&prime;, c) to the depleted volume code value v&prime;(x, y, c) by simply addressing the lookup table vfun_inv(v&prime;, c) with the depleted volume code value, and retrieving the result. As mentioned above, these techniques are well known to those skilled in the art. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Still referring to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, an ink depletion processor <highlight><bold>100</bold></highlight> receives the volume code value v(x, y, c) and the total code value limit V<highlight><subscript>t</subscript></highlight>, and produces a depleted volume code value v&prime;(x, y, c). As described in the first embodiment, since the ink depletion processor <highlight><bold>100</bold></highlight> operates on the volume code value v(x, y, c), the assumption that normalized ink drop volume is linear with code value is satisfied, and the ink depletion processor <highlight><bold>100</bold></highlight> will therefore produce the desired result. The inverse colorant volume function processor <highlight><bold>110</bold></highlight> receives the depleted volume code value v&prime;(x, y, c) and the lookup table vfun_inv(v&prime;, c), and produces the output code value o(x, y, c). </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> A computer program product may include one or more storage medium, for example; magnetic storage media such as magnetic disk (such as a floppy disk) or magnetic tape; optical storage media such as optical disk, optical tape, or machine readable bar code; solid-state electronic storage devices such as random access memory (RAM), or read-only memory (ROM); or any other physical device or media employed to store a computer program having instructions for controlling one or more computers to practice the method according to the present invention. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> The invention has been described in detail with particular reference to certain preferred embodiments thereof, but it will be understood that variations and modifications can be effected within the spirit and scope of the invention. In particular, the present invention has been described in the context of an inkjet printer which prints with cyan, magenta, yellow, and black colorants, but in theory the invention should apply to other types of printing technologies also. This includes multilevel inkjet printing in which more than three printing levels are available for at least one colorant at each pixel. Also, the invention can be applied to inkjet printers in which additional colorants, such as light cyan, light magenta, orange, or green inks are used.  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>PARTS LIST</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="63PT" align="char" char="."/>
<colspec colname="2" colwidth="154PT" align="left"/>
<tbody valign="top">
<row>
<entry>10</entry>
<entry>raster image processor</entry>
</row>
<row>
<entry>12</entry>
<entry>digital image source</entry>
</row>
<row>
<entry>20</entry>
<entry>ink depletion processor</entry>
</row>
<row>
<entry>22</entry>
<entry>total colorant amount limit adjustor</entry>
</row>
<row>
<entry>30</entry>
<entry>multitone (or halftone) processor</entry>
</row>
<row>
<entry>36</entry>
<entry>inkjet printer</entry>
</row>
<row>
<entry>40</entry>
<entry>colorant volume function processor</entry>
</row>
<row>
<entry>50</entry>
<entry>ink depletion processor</entry>
</row>
<row>
<entry>60</entry>
<entry>inverse colorant volume function processor</entry>
</row>
<row>
<entry>62</entry>
<entry>volumetric ink depletion processor</entry>
</row>
<row>
<entry>70</entry>
<entry>colorant volume LUT generator</entry>
</row>
<row>
<entry>72</entry>
<entry>colorant volume data source</entry>
</row>
<row>
<entry>80</entry>
<entry>inverse colorant volume LUT generator</entry>
</row>
<row>
<entry>90</entry>
<entry>colorant volume function processor</entry>
</row>
<row>
<entry>100</entry>
<entry>ink depletion processor</entry>
</row>
<row>
<entry>110</entry>
<entry>inverse colorant volume function processor</entry>
</row>
<row>
<entry>112</entry>
<entry>volumetric ink depletion processor</entry>
</row>
<row>
<entry>140</entry>
<entry>binary printer colorant volume function</entry>
</row>
<row>
<entry>150</entry>
<entry>multilevel printer colorant volume function</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for modifying an input digital image having an (x, y) array of pixels, each pixel having an input code value for one or more color channels, wherein said input code value has a nonlinear relationship to colorant amount, to form an output digital image containing output code values for each pixel subject to a total colorant amount limit, comprising the steps of: 
<claim-text>a) determining an input colorant amount for each color channel of a pixel in response to the corresponding input code value and a colorant amount function that relates the input code value to the colorant amount for the corresponding color channel; </claim-text>
<claim-text>b) determining a modified colorant amount for each color channel of the image pixel responsive to the input colorant amount for each color channel and a total colorant amount limit; </claim-text>
<claim-text>c) determining an output code value for each color channel of the pixel responsive to the modified colorant amount and an inverse colorant amount function that relates colorant amount to the output code value for the corresponding color channel, and </claim-text>
<claim-text>d) repeating steps (a) through (c) for each pixel in the input digital image. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the input colorant amount is substantially linear with colorant volume. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the input colorant amount is a mass of colorant. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further including providing a lookup table for each color channel wherein the colorant amount function is provided by the lookup table. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the colorant amount function and the inverse colorant amount function are substantially mathematically inverse operations from each other. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein step b) further includes the steps of: 
<claim-text>i) determining a total colorant amount for each pixel as the sum of the colorant amounts for each of the color channels; and </claim-text>
<claim-text>ii) determining the modified colorant amount for each color channel of the pixel responsive to the total colorant amount and the total colorant amount limit such that for such pixel the sum of the modified colorant amount for each color channels is less than the total colorant amount limit. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the colorants are inks for use in an inkjet printer. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein the colorant amounts correspond to ink volumes. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of forming a color image in response to the modified digital image produced by <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A computer storage medium having instructions stored therein for causing a computer to perform the method of claim <highlight><bold>1</bold></highlight>.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>3</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002058A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002058A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002058A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002058A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002058A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
