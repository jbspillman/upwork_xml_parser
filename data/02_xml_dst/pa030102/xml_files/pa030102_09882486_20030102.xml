<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005465A1-20030102-P00001.TIF SYSTEM "US20030005465A1-20030102-P00001.TIF" NDATA TIF>
<!ENTITY US20030005465A1-20030102-P00002.TIF SYSTEM "US20030005465A1-20030102-P00002.TIF" NDATA TIF>
<!ENTITY US20030005465A1-20030102-D00000.TIF SYSTEM "US20030005465A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005465A1-20030102-D00001.TIF SYSTEM "US20030005465A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005465A1-20030102-D00002.TIF SYSTEM "US20030005465A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005465A1-20030102-D00003.TIF SYSTEM "US20030005465A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005465A1-20030102-D00004.TIF SYSTEM "US20030005465A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005465A1-20030102-D00005.TIF SYSTEM "US20030005465A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005465A1-20030102-D00006.TIF SYSTEM "US20030005465A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005465A1-20030102-D00007.TIF SYSTEM "US20030005465A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030005465A1-20030102-D00008.TIF SYSTEM "US20030005465A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030005465A1-20030102-D00009.TIF SYSTEM "US20030005465A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030005465A1-20030102-D00010.TIF SYSTEM "US20030005465A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030005465A1-20030102-D00011.TIF SYSTEM "US20030005465A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030005465A1-20030102-D00012.TIF SYSTEM "US20030005465A1-20030102-D00012.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005465</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09882486</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010615</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04N007/173</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>G06F015/16</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>725</class>
<subclass>119000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>725</class>
<subclass>087000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>709</class>
<subclass>219000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Method and apparatus to send feedback from clients to a server in a content distribution broadcast system</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Jay</given-name>
<middle-name>H.</middle-name>
<family-name>Connelly</family-name>
</name>
<residence>
<residence-us>
<city>Portland</city>
<state>OR</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>James Y. Go</name-1>
<name-2>BLAKELY, SOKOLOFF, TAYLOR &amp; ZAFMAN LLP</name-2>
<address>
<address-1>Seventh Floor</address-1>
<address-2>12400 Wilshire Boulevard</address-2>
<city>Los Angeles</city>
<state>CA</state>
<postalcode>90025-1026</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Methods and apparatuses providing feedback to a server from a client in a content distribution broadcast system. In one aspect, feedback is sent from a client to a server in response to a trigger. In another aspect, feedback is sent after a predetermined amount of time has lapsed. In yet another aspect, feedback is sent after a rankings or ratings have been generated for a predetermined number of pieces of content. In still another aspect, feedback is sent after a predetermined amount of content has been consumed. In yet another aspect, feedback is sent when the amount of unconsumed content is less than a predetermined threshold amount. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates generally to broadcast systems and, more specifically, the present invention relates to providing content on demand in broadcast systems. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Background Information </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Broadcast systems traditionally transmit data in one direction from a server system to a plurality of client systems. Users of the client systems typically consume the signals received from the server system as they are broadcast. One paradigm in which users are provided with content on demand involves server systems that broadcast the same data continuously and/or at staggered intervals. Thus, if a user desires to consume a particular piece of content or data file on demand, the user &ldquo;tunes in&rdquo; to one of the repeated broadcasts of the content. One example of this paradigm can be illustrated with present day &ldquo;pay per view&rdquo; movies that are available from cable or satellite television providers. For instance, cable television providers commonly broadcast the same movies repeatedly on multiple channels at staggered intervals. Users that wish to watch a particular movie &ldquo;on demand&rdquo; simply tune in to one of the channels on which the desired movie is broadcast at the beginning of one of the times that the movie is broadcast. The continuous and repeated broadcasts of the same data or programs results in a very inefficient use of broadcast bandwidth. Bandwidth used to broadcast the same data repeatedly on multiple channels could otherwise be used to broadcast different data. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Another paradigm for providing content on demand in a broadcast system involves a user recording a particular data file and later accessing the data file &ldquo;on demand.&rdquo; Continuing with the television broadcast illustration discussed above, an example of this paradigm is a user setting up his or her video cassette recorder (VCR) to record a desired television program. Later, when the user wishes to watch the television program &ldquo;on demand,&rdquo; the user simply plays the earlier recorded program from his or her VCR. Recently, more advanced digital video recorders have become available, which record the television broadcasts on internal hard drives instead of the video cassette tapes used by traditional VCRs. However, use of the digital video recorders is similar to traditional VCRs in that the users are required to explicitly set the criteria used (e.g. date, time) to determine which broadcasts are recorded on the internal hard drives. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Another limitation with present day broadcast systems is that it is difficult for most users of the client systems to provide feedback to broadcasters with regard to programming. For example, continuing with the television broadcast illustration discussed above, many of today&apos;s television broadcasters rely upon Nielson ratings to determine broadcast programming and/or scheduling. Nielson ratings are generally based upon only a small sampling of a cross-section of the public. Consequently, most television viewers have relatively little or no impact on broadcast schedules and/or content. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The present invention is illustrated by way of example and not limitation in the accompanying figures. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1A</cross-reference> is a block diagram illustrating one embodiment of a broadcast system in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1B</cross-reference> is a block diagram illustrating another embodiment of a broadcast system in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1C</cross-reference> is a block diagram illustrating yet another embodiment of a broadcast system in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of one embodiment of a computer system representative of a client or a server in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a flow diagram illustrating one embodiment of the flow of events in a server and a client with multiple stages of content descriptors and further descriptive content being broadcast to the clients and multiple stages of demand data feedback being sent from the clients to the server in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 4A through 4C</cross-reference> are flow diagrams illustrating various embodiments of content descriptor files being broadcast from a server to clients in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 5A through 5E</cross-reference> are flow diagrams illustrating various embodiments of demand data feedback being sent from a client to a server in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flow diagram illustrating an embodiment of the flow of events in a client when processing content descriptors broadcast from a server to maintain a content descriptor table and demand data table in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is an illustration of one example of content descriptors broadcast by a server to describe a in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is an illustration of one example of a content descriptor table updated and maintained by a client in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is an illustration of one example of a demand data table updated and maintained by a client in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a diagram illustrating one embodiment of data files that are classified by a user in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a diagram illustrating one embodiment of a content descriptor table that is updated in response to user classifications in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a diagram illustrating one embodiment of a content descriptor table that is updated after a user access in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a diagram illustrating one embodiment of a demand data table that is updated after a user access in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a diagram illustrating another embodiment of a content descriptor table that is updated after another user access in accordance with the teachings of the present invention. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> In one aspect of the present invention, methods and apparatuses for determining a content broadcast schedule using a multi-stage broadcast system are disclosed. In another aspect of the present invention, methods and apparatuses are disclosed for sending content descriptors from a server to clients are disclosed. In yet another aspect of the present invention, methods and apparatuses for sending demand data from a client to a server are disclosed. In the following description numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent, however, to one having ordinary skill in the art that the specific detail need not be employed to practice the present invention. In other instances, well-known materials or methods have not been described in detail in order to avoid obscuring the present invention. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Reference throughout this specification to &ldquo;one embodiment&rdquo; or &ldquo;an embodiment&rdquo; means that a particular feature, structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, appearances of the phrases &ldquo;in one embodiment&rdquo; or &ldquo;in an embodiment&rdquo; in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures or characteristics may be combined in any suitable manner in one or more embodiments. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1A</cross-reference> is an illustration of one embodiment of a broadcast system in accordance with the teachings of the present invention. As illustrated in the depicted embodiment, a broadcast operations center or server <highlight><bold>103</bold></highlight> is configured to broadcast information to a plurality of clients <highlight><bold>105</bold></highlight>, <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight>. In the embodiment shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>A, client <highlight><bold>105</bold></highlight> receives a broadcast from server <highlight><bold>103</bold></highlight> through a link <highlight><bold>115</bold></highlight> from a broadcast antenna <highlight><bold>111</bold></highlight>. Similarly, client <highlight><bold>107</bold></highlight> receives a broadcast from server <highlight><bold>103</bold></highlight> through a link <highlight><bold>117</bold></highlight> and client <highlight><bold>109</bold></highlight> receives a broadcast from server <highlight><bold>103</bold></highlight> through a link <highlight><bold>119</bold></highlight> from broadcast antenna <highlight><bold>111</bold></highlight>. In one embodiment, links <highlight><bold>115</bold></highlight>, <highlight><bold>117</bold></highlight> and <highlight><bold>119</bold></highlight> are uni-directional wireless radio frequency (RF) links from broadcast antenna in a format such as for example, but not limited to known amplitude modulation (AM) or frequency modulation (FM) radio signals, television (TV) signals, digital video broadcast (DVB) signals or the like, which are broadcast through the atmosphere. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> In one embodiment, server <highlight><bold>103</bold></highlight> is configured to broadcast a plurality of data files or pieces of content, which may be received by clients <highlight><bold>105</bold></highlight>, <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight>. In one embodiment, the data files may be any combination of a number of different types of files including for example video, audio, graphics, text, multi-media or the like. The files may be accessed, streamed or consumed in real-time by the clients <highlight><bold>105</bold></highlight>, <highlight><bold>107</bold></highlight> or <highlight><bold>109</bold></highlight> as they are received or the files may be cached or stored for later consumption. For purposes of explanation, many of the examples provided in this disclosure to help describe the present invention assume that the data files to be broadcast by the server are audio/video files, such as for example movies with moving images and sound. However, it will be appreciated that the data files broadcast in accordance with the teachings of the present invention are not limited only to audio/video files. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> As illustrated in the embodiment shown <cross-reference target="DRAWINGS">FIG. 1</cross-reference>A, there is a one-way or uni-directional link between the server <highlight><bold>103</bold></highlight> and clients <highlight><bold>105</bold></highlight>, <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight>. However, in another embodiment, it is appreciated that there may also be a communications link between server <highlight><bold>103</bold></highlight> and each client <highlight><bold>105</bold></highlight>, <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight>, respectively. In particular, <cross-reference target="DRAWINGS">FIG. 1B</cross-reference> is an illustration of the broadcast system of <cross-reference target="DRAWINGS">FIG. 1A</cross-reference> with the addition of a &ldquo;back channel&rdquo; or communications link between each client <highlight><bold>105</bold></highlight>, <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight> and server <highlight><bold>103</bold></highlight>. In particular, the embodiment illustrated in <cross-reference target="DRAWINGS">FIG. 1B</cross-reference> shows links <highlight><bold>121</bold></highlight>, <highlight><bold>123</bold></highlight> and <highlight><bold>125</bold></highlight>, which may be used by clients <highlight><bold>105</bold></highlight>, <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight>, respectively, to send information back to server <highlight><bold>103</bold></highlight>. Although links <highlight><bold>121</bold></highlight>, <highlight><bold>123</bold></highlight> and <highlight><bold>125</bold></highlight> are illustrated in <cross-reference target="DRAWINGS">FIG. 1B</cross-reference> as direct links between clients <highlight><bold>105</bold></highlight>, <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight> and server <highlight><bold>103</bold></highlight>, it is appreciated that clients <highlight><bold>105</bold></highlight>, <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight> may communicate information to server <highlight><bold>103</bold></highlight> through indirect links such as for example but not limited to broadcasted wireless signals, network communications or the like. In one embodiment, it is assumed that links <highlight><bold>121</bold></highlight>, <highlight><bold>123</bold></highlight> and <highlight><bold>125</bold></highlight> are lower bandwidth connections than links <highlight><bold>115</bold></highlight>, <highlight><bold>117</bold></highlight> and <highlight><bold>119</bold></highlight>. For example, that links <highlight><bold>121</bold></highlight>, <highlight><bold>123</bold></highlight> and <highlight><bold>125</bold></highlight> could be low bandwidth connections such as modem connections through a public switched telephone network or the like while links <highlight><bold>115</bold></highlight>, <highlight><bold>117</bold></highlight> and <highlight><bold>119</bold></highlight> are high bandwidth connections such as television broadcasts, cable television broadcasts, satellite television broadcasts or the like. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1C</cross-reference> is an illustration of yet another embodiment of a broadcast system in accordance with the teachings of the present invention. As shown, server <highlight><bold>103</bold></highlight> is coupled to broadcast information to a plurality of clients <highlight><bold>105</bold></highlight>, <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight> through a network <highlight><bold>113</bold></highlight>. In one embodiment, network <highlight><bold>113</bold></highlight> may be any type of communications network through which a plurality of different devices may communicate such as for example but not limited to the Internet, a wide area network (WAN), a local area network (LAN), an intranet, or the like. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> In the embodiment illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>C, client <highlight><bold>105</bold></highlight> is coupled to communicate with broadcast from server <highlight><bold>103</bold></highlight> through link <highlight><bold>115</bold></highlight>. Similarly, client <highlight><bold>107</bold></highlight> is coupled to communicate with server <highlight><bold>103</bold></highlight> through link <highlight><bold>117</bold></highlight> and client <highlight><bold>109</bold></highlight> coupled to communicate with server <highlight><bold>103</bold></highlight> through link <highlight><bold>119</bold></highlight>. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram illustrating one embodiment of a machine <highlight><bold>201</bold></highlight> that may be used for the server <highlight><bold>103</bold></highlight>, or clients <highlight><bold>103</bold></highlight>, <highlight><bold>105</bold></highlight> or <highlight><bold>107</bold></highlight> in accordance with the teachings of the present invention. In one embodiment, machine <highlight><bold>201</bold></highlight> is a computer or an apparatus that includes a processor <highlight><bold>203</bold></highlight> coupled to a bus <highlight><bold>207</bold></highlight>. In one embodiment, memory <highlight><bold>205</bold></highlight>, storage <highlight><bold>211</bold></highlight>, display controller <highlight><bold>209</bold></highlight>, communications interface <highlight><bold>213</bold></highlight>, input/output controller <highlight><bold>215</bold></highlight> and audio controller <highlight><bold>227</bold></highlight> are also coupled to bus <highlight><bold>207</bold></highlight>. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> In one embodiment, machine <highlight><bold>201</bold></highlight> interfaces to external systems through communications interface <highlight><bold>213</bold></highlight>. Communications interface <highlight><bold>213</bold></highlight> may include a radio transceiver compatible with AM, FM, TV, digital TV, DVB, wireless telephone signals or the like. Communications interface <highlight><bold>213</bold></highlight> may also include an analog modem, Integrated Services Digital Network (ISDN) modem, cable modem, Digital Subscriber Line (DSL) modem, a T-1 line interface, a T-3 line interface, an optical carrier interface (e.g. OC-3), token ring interface, satellite transmission interface, a wireless interface or other interfaces for coupling a device to other devices. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> In one embodiment, a carrier wave signal <highlight><bold>223</bold></highlight> is received by communications interface <highlight><bold>213</bold></highlight> to communicate with antenna <highlight><bold>111</bold></highlight>. In one embodiment, carrier wave signal <highlight><bold>225</bold></highlight> is received/transmitted between communications interface <highlight><bold>213</bold></highlight> and network <highlight><bold>113</bold></highlight>. In one embodiment, a communications signal <highlight><bold>225</bold></highlight> may be used to interface machine <highlight><bold>201</bold></highlight> with another computer system, a network hub, switch, router or the like. In one embodiment, carrier wave signals <highlight><bold>223</bold></highlight> and <highlight><bold>225</bold></highlight> are considered to be machine-readable media, which may be transmitted through wires, cables, optical fibers or through the atmosphere, or the like. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> In one embodiment, processor <highlight><bold>203</bold></highlight> may be a conventional microprocessor, such as for example but not limited to an Intel x<highlight><bold>86</bold></highlight> or Pentium family microprocessor, a Motorola family microprocessor, or the like. Memory <highlight><bold>205</bold></highlight> may be a machine-readable medium such as dynamic random access memory (DRAM) and may include static random access memory (SRAM). Display controller <highlight><bold>209</bold></highlight> controls in a conventional manner a display <highlight><bold>219</bold></highlight>, which in one embodiment may be a cathode ray tube (CRT), a liquid crystal display (LCD), an active matrix display, a television monitor or the like. The input/output device <highlight><bold>217</bold></highlight> coupled to input/output controller <highlight><bold>215</bold></highlight> may be a keyboard, disk drive, printer, scanner and other input and output devices, including a television remote, mouse, trackball, trackpad, joystick, or the like. In one embodiment, audio controller <highlight><bold>227</bold></highlight> controls in a conventional manner audio output <highlight><bold>231</bold></highlight>, which may include for example audio speakers, headphones, an audio receiver, amplifier or the like. In one embodiment, controller also controls in a conventional manner audio input <highlight><bold>229</bold></highlight>, which may include for example a microphone or input(s) from an audio or musical device, or the like. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Storage <highlight><bold>211</bold></highlight> in one embodiment may include machine-readable media such as for example but not limited to a magnetic hard disk, a floppy disk, an optical disk, a smart card or another form of storage for data. In one embodiment, storage <highlight><bold>211</bold></highlight> may include removable media, read-only media, readable/writable media or the like. Some of the data may be written by a direct memory access process into memory <highlight><bold>205</bold></highlight> during execution of software in computer system <highlight><bold>201</bold></highlight>. It is appreciated that software may reside in storage <highlight><bold>211</bold></highlight>, memory <highlight><bold>205</bold></highlight> or may be transmitted or received via modem or communications interface <highlight><bold>213</bold></highlight>. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> For the purposes of the specification, the term &ldquo;machine-readable medium&rdquo; shall be taken to include any medium that is capable of storing data, information or encoding a sequence of instructions for execution by processor <highlight><bold>203</bold></highlight> to cause processor <highlight><bold>203</bold></highlight> to perform the methodologies of the present invention. The term &ldquo;machine-readable medium&rdquo; shall be taken to include, but is not limited to solid-state memories, optical and magnetic disks, carrier wave signals, and the like. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> In one embodiment, a broadcast system, such as for example one similar to any of those illustrated in FIGS. <highlight><bold>1</bold></highlight>A-<highlight><bold>1</bold></highlight>C, is configured to have a server <highlight><bold>103</bold></highlight> broadcast a plurality of data files to a plurality of clients <highlight><bold>105</bold></highlight>, <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight>. As will be discussed in greater detail below, each of the plurality of data files is described with meta-data or content descriptors in accordance with the teachings of one embodiment of the present invention. In general, content descriptors can be considered as a set of descriptors or attribute values that describe pieces of content or data files are available to be broadcast or potentially be broadcast from server <highlight><bold>103</bold></highlight>. The content descriptors of the present invention provide information that enables client systems <highlight><bold>105</bold></highlight>, <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight> to reason and make informed decisions regarding the content of the data files to be broadcast later by server <highlight><bold>103</bold></highlight>. As will be discussed, various embodiments of the present invention utilize the content descriptors for client-side filtering, storage management and other personalization techniques as well as provide demand data feedback determine broadcast schedules and content of future server broadcasts. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a flow diagram <highlight><bold>301</bold></highlight> illustrating processing that is performed in accordance with teachings of one embodiment of the present invention. In particular, flow diagram <highlight><bold>301</bold></highlight> illustrates one embodiment of a content distribution system that utilizes a multi-stage process to distribute content from a broadcast operations center or server to one or more clients. As illustrated in processing block <highlight><bold>303</bold></highlight>, the server broadcasts content descriptors to one or more clients. Block <highlight><bold>305</bold></highlight> illustrates that the content descriptors are received by the one or more clients. In one embodiment, the content descriptors include meta-data or attribute value pairs that are used to describe the available content that may be broadcast potentially by the server. As will be discussed below in connection with <cross-reference target="DRAWINGS">FIGS. 4A through 4C</cross-reference>, there are a variety of different embodiments in which content descriptor filea may be sent from the server to the clients in accordance with the teachings of the present invention. In one embodiment, the clients may be segregated into specific groups based on geography, network connections or some other criteria. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Block <highlight><bold>309</bold></highlight> shows that after content descriptors are received, the clients update their content descriptor tables and demand data tables. As will be discussed in detail below, the content descriptor tables and demand data tables are utilized in various embodiments of the present invention by the clients during processing to create demand data. For purposes of this disclosure, &ldquo;demand data&rdquo; is an indication by the clients of the desirability of a particular piece of content available from the server. Accordingly, a piece of content that is in high &ldquo;demand&rdquo; will have a high degree of desirability and a piece of content that is not in &ldquo;demand&rdquo; will have a relatively low degree desirability. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> Demand data can be generated in a variety of manners including ranking, rating or the like. For instance, demand data can be determined by generating an ordered list of rankings of at least some of the available content. The ranking establishes a relative order of the available content among content choices. In another embodiment, the demand data can be determined by a generating a list of absolute rating numbers for some or all of the pieces of content. The rating may be accomplished by a user assigning a specific desirability value to each piece of content. The demand data may or may not take into account existing content that is cached on a particular client system. The demand data may be generated by considering explicit user feedback at the client or may be based on previous user behavior or content consumption. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Block <highlight><bold>313</bold></highlight> shows that demand data feedback is then sent from the client back to the server and block <highlight><bold>307</bold></highlight> shows that the demand data feedback is received by the server from the client(s). As will be discussed below in connection with <cross-reference target="DRAWINGS">FIGS. 5A through 5E</cross-reference>, there are a variety of different embodiments in which demand data may be sent from each client to the server in accordance with the teachings of the present invention. For instance, the demand data may be sent in real-time or in batches. The demand data may represent feedback from the users for all available content or only a portion of it. In addition, the feedback may be sent independently by the clients, in response to triggers from the server, or based on some rules. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> Block <highlight><bold>311</bold></highlight> shows that the server then creates a list of the most demanded content in response to the demand data feedback received from the clients. In one embodiment, the list is a sorted list ranging from the higher demanded content down to the lower demanded content based on the demand data feedback received from the clients. In one embodiment, the sorted list is utilized by the server to prioritize the order in which the content is to be broadcast. For instance, in one embodiment, the higher demanded content is broadcast before the lower demanded content is broadcast. In some instances, some of the lower demanded content that is ranked or rated may never be broadcast by the server. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> In one embodiment, it is appreciated that this stage of sending content descriptors and receiving demand data feedback from the clients is highly automated and may be transparent to the users. In one embodiment, the ranking or rating systems used to generate the demand data may or may not utilize the same algorithms as those used by the clients to capture and cache the pieces of content when broadcast by the server. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> In the next stage, block <highlight><bold>315</bold></highlight> shows that the server broadcasts further descriptive content to the one or more clients and block <highlight><bold>317</bold></highlight> shows that the client receives the further descriptive client. In one embodiment, the further descriptive content that is sent is limited to a smaller portion of the available content. The smaller portion of content that is described by the further descriptive content is the content that is determined to be more likely in demand as indicated in the list created in block <highlight><bold>311</bold></highlight>. In one embodiment, the clients filter the further descriptive content sent by the server in block <highlight><bold>315</bold></highlight>. Accordingly, the further descriptive content that is cached by the client describes pieces of content that are more likely to be ranked, rated and/or consumed by the client. In another embodiment, filtering is not performed in block <highlight><bold>317</bold></highlight>. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> It is appreciated that in this stage of processing, the server in one embodiment distributes portions of the content in order to receive more user feedback in the form of demand data. In one embodiment, the further descriptive content includes portions of the content and is cheaper to send than the actual content. For example, assuming that the available content includes movies, the further descriptive content may include movie trailers, box art, awards, movie scenes or the like. In the case of music, the further descriptive content may include a song clip, an album preview, historical information about the music artist or the like. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> Block <highlight><bold>321</bold></highlight> shows that the content descriptor table and demand data table are then updated on the client. In one embodiment, the updates to the content descriptor table and demand data table occur in response to explicit user feedback such as rankings or ratings. For example, a user can review the further descriptive content by for example viewing the movie trailers and/or listening to the song clips that the user may potentially be interested in consuming. After reviewing the further descriptive content cached in the user&apos;s client system, the user can provide explicit feedback regarding whether the user would be interested in consuming the entire piece of content. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Block <highlight><bold>325</bold></highlight> shows that updated demand data feedback is then sent from the client back to the server and block <highlight><bold>319</bold></highlight> shows that the server receives the demand data from the client(s). Block <highlight><bold>323</bold></highlight> shows that the list of the most demanded content is then further refined in response to the demand data received from the client(s). Accordingly, by receiving feedback from the clients in multiple stages, the server is able to better ascertain the pieces of content that the clients are more likely to consume. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> In one embodiment, processing from block <highlight><bold>323</bold></highlight> loops back to block <highlight><bold>315</bold></highlight> and processing from block <highlight><bold>325</bold></highlight> loops back to block <highlight><bold>317</bold></highlight>. In one embodiment, this looping may be repeated a plurality of iterations until the list of most demanded content is refined or narrowed down to a desired degree. As such, an embodiment of the present invention as able to further refine and narrow the list of most demanded content based on explicit feedback. Thus, when the pieces of content are ultimately selected to be broadcast by the server, there is an increased degree of confidence that the clients will consume the content. In one embodiment, explicit user feedback is given more weight that automatically generated feedback without explicit user feedback because explicit user feedback is often more accurate than automated feedback. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> In one embodiment, each partial piece of content sent by the server when sending further descriptive content is tracked. In particular, the system maintains and tracks the content pieces such that the final and complete content associated with each partial content is eventually sent in the case that any client requests it. Thus, user expectations are managed as the users become involved in this portion of the ranking or ratings system. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> As mentioned above, client systems in one embodiment may apply filters to the further descriptive content received in block <highlight><bold>317</bold></highlight>. Accordingly, the further descriptive content that is cached in the client applies to the pieces of content that the user will more likely desire to consume. As a result, the system is able to send more total further descriptive content in block <highlight><bold>315</bold></highlight> than an individual client can cache. For example, assume that a client system has a capacity of 5 gigabytes of storage available for further descriptive content sent by the server in block <highlight><bold>315</bold></highlight>. By applying filtering in block <highlight><bold>317</bold></highlight>, the client system will cache 5 gigabytes of for example a total of 20 gigabytes sent by the server. In addition, the 5 gigabytes of further descriptive content that is cached by the client applies to pieces of content that the user is more likely to consume. Furthermore, by applying filtering in block <highlight><bold>317</bold></highlight>, the user will have increased confidence that the cached further descriptive content will describe content in which the user is interested. Since the user will have increased confidence, there may be a higher likelihood that the user will explicitly rank or rate the content to provide the updated demand data in block <highlight><bold>325</bold></highlight>. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> In one embodiment, the results of the list created in block <highlight><bold>311</bold></highlight> in response to the demand data received in block <highlight><bold>307</bold></highlight> may be stored. In this case, the refined list created in block <highlight><bold>323</bold></highlight> in response to the demand data received in block <highlight><bold>319</bold></highlight> are assigned a higher weight since the demand data received in block <highlight><bold>307</bold></highlight> may have been automatically generated. In another embodiment, the list created in block <highlight><bold>311</bold></highlight> is not considered once the list refined in block <highlight><bold>323</bold></highlight> is generated. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> In the next stage, block <highlight><bold>327</bold></highlight> shows that selected pieces of content are then broadcast by the server and block <highlight><bold>329</bold></highlight> shows that the clients receive the content. In one embodiment, any pieces of content that are described in the further descriptive sent to the clients in block <highlight><bold>315</bold></highlight> are eventually included in the broadcast of block <highlight><bold>327</bold></highlight>, except for the case where no client explicitly provided positive feedback in the demand data sent to the server in block <highlight><bold>325</bold></highlight>. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> As will be discussed in greater detail below, in one embodiment, block <highlight><bold>331</bold></highlight> shows that the client then selectively stores the pieces of content according to the demand data table maintained by each particular client. In one embodiment, block <highlight><bold>333</bold></highlight> shows that the content descriptor table and demand data table on each client is then updated if content is consumed. Block <highlight><bold>335</bold></highlight> shows that the updated demand data is then sent back to the server such that the refined list can be further refined by the server. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> As mentioned earlier, there are a variety of different embodiments in which content descriptor file may be sent from the server and received by the clients in blocks <highlight><bold>303</bold></highlight> and <highlight><bold>305</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference> in accordance with the teachings of the present invention. For instance, <cross-reference target="DRAWINGS">FIG. 4A</cross-reference> is a flow diagram <highlight><bold>401</bold></highlight> showing one embodiment of content descriptors being broadcast from a server to one or more clients. In the illustrated embodiment, block <highlight><bold>403</bold></highlight> shows that a content descriptor broadcast schedule signal is broadcast from the server and block <highlight><bold>405</bold></highlight> shows that the client receives the content descriptor broadcast schedule signal. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> In one embodiment, the content descriptor broadcast schedule signal is a signal sent to all clients indicating that the content descriptor file will be sent. In one embodiment, the content descriptor broadcast schedule signal includes a description of when the content descriptor file will be sent. For instance, the content descriptor broadcast schedule signal can indicate an absolute time when the content descriptor file will be sent or a relative ordering among other information broadcast by the server. In one embodiment, the content descriptor broadcast schedule signal also indicates to the client how to locate the content descriptor file using for example frequency, Internet protocol (IP) port, IP address information or the like. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> In one embodiment, the content descriptor broadcast schedule signal is broadcast using an Internet protocol (IP) signaling protocol, a digital video broadcast signal (DVB), a program and system information protocol (PSIP) signal, or the like. In another embodiment, the content descriptor broadcast schedule signal is embedded within a file broadcast by the server to the clients. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> In one embodiment, the client system monitors a broadcast channel for the arrival of the content descriptor broadcast schedule signal. When the content descriptor broadcast schedule signal is received by the client, the client then prepares to receive the content descriptor file when it is scheduled to be broadcast. In one embodiment, the client prepares to receive the content descriptor file by notifying other processes running on the client system that are responsible for processing content descriptors. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> In one embodiment, the server then generates or collects the content descriptors into a file. Block <highlight><bold>407</bold></highlight> shows that the content descriptor file is then broadcast at the appropriate time and then block <highlight><bold>409</bold></highlight> shows that the content descriptor file is then received as scheduled. In an embodiment in which the content descriptor broadcast schedule signal indicates that the content descriptor file is to be broadcast at an absolute time, the server waits until the designated time and then broadcasts the content descriptor file at that time. In an embodiment in which the content descriptor broadcast schedule signal indicates that the content descriptor file is to be broadcast in a relative order, the server first broadcasts all of the files scheduled to be broadcast prior to the content descriptor file. Then, the server broadcasts the content descriptor file. In one embodiment, the server broadcasts the content descriptor file to the clients using a file transfer protocol such as for example hypertext transfer protocol (HTTP), file transfer protocol (FTP) or the like. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4B</cross-reference> is a flow diagram <highlight><bold>431</bold></highlight> showing another embodiment of content descriptors being broadcast from a server to one or more clients. In the illustrated embodiment, block <highlight><bold>433</bold></highlight> shows that a unique identifier is assigned to the content descriptor file by the server. Block <highlight><bold>437</bold></highlight> then shows that the content descriptor file is then broadcast to the clients. In one embodiment, the content descriptor file is sent to all clients in a segment. For purposes of this disclosure, a segment can be defined as the plurality of clients or a subset of clients based on geography, network connections, rights vectors or the like. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> Block <highlight><bold>435</bold></highlight> shows that the content descriptor file is then received by the client. Block <highlight><bold>439</bold></highlight> shows that the client identifies the received file as the content descriptor file based on the unique identifier assigned to the file. In one embodiment, the unique identifier assigned to the content descriptor files causes the client system to store the content descriptor files at a special and/or known location on the client. The client system therefore identifies the incoming file in block <highlight><bold>409</bold></highlight> as the content descriptor file and processes the file accordingly. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> In one embodiment, the client system will allocate a temporary buffer for the content descriptors to be placed in and once the content descriptor file has been completely transferred, the client will lock the previously received content descriptor file and replace its contents with the newly received content descriptor file. In one embodiment, the client system will then signal the process for processing the content descriptors that a new content descriptor file has been received. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4C</cross-reference> is a flow diagram <highlight><bold>461</bold></highlight> showing yet another embodiment of content descriptors being broadcast from a server to one or more clients. In the illustrated embodiment, block <highlight><bold>463</bold></highlight> shows that a general purpose identifier is assigned to the content descriptor file by the server. Block <highlight><bold>465</bold></highlight> then shows that the content descriptor file is then broadcast by the server. Block <highlight><bold>467</bold></highlight> shows that the clients receive the content descriptor file. In one embodiment, the content descriptor file broadcast by the server is received by the client as it would receive any other file. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> Block <highlight><bold>469</bold></highlight> shows that the server then broadcasts a signal to the clients indicating that the content descriptor file has been broadcast. Block <highlight><bold>471</bold></highlight> shows that the clients receive the signal broadcast by the server indicating that the content descriptor file has been broadcast. In one embodiment, this signal also indicates to the clients how to locate the content descriptor file and the signal is broadcast using an Internet protocol (IP) signaling protocol, a digital video broadcast signal (DVB), a program and system information protocol (PSIP) signal, or the like. In another embodiment, the content descriptor broadcast schedule signal is embedded within a file broadcast by the server to the clients. In one embodiment, the client system will then signal the process for processing the content descriptors that a new content descriptor file has been received. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> As mentioned earlier, there are a variety of different embodiments in which demand data may be sent from the clients and received by the server in for examples <highlight><bold>313</bold></highlight>, <highlight><bold>325</bold></highlight> or <highlight><bold>335</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference> in accordance with the teachings of the present invention. For instance, <cross-reference target="DRAWINGS">FIG. 5A</cross-reference> is a flow diagram <highlight><bold>501</bold></highlight> showing one embodiment of demand data being sent from a client to the server in accordance with the teachings of the present invention. Block <highlight><bold>503</bold></highlight> shows that a trigger signal is broadcast to the clients when the server is ready to receive demand data feedback from the clients. In one embodiment, the server may broadcast the trigger signal because the server is ready to construct another list or schedule of content to be broadcast to the clients. Block <highlight><bold>505</bold></highlight> shows that the client receives the trigger signal broadcast by the server. In one embodiment, the trigger signal can request demand data feedback from all of the clients or from a set of clients in for example a segment. In response, block <highlight><bold>509</bold></highlight> shows that the client sends the demand data to the server and block <highlight><bold>507</bold></highlight> shows that the server receives the demand data feedback. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> In one embodiment, the clients send the demand data to the server by initiating a connection to the server to provide the demand data feedback to the server. In the case where a client is unable to establish a connection for reasons including for example a busy telephone signal or the like, the client in one embodiment utilizes a binary exponential back-off system. Accordingly, the server is provided regular connections to the plurality of clients attempting to provide demand data feedback. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5B</cross-reference> is a flow diagram <highlight><bold>521</bold></highlight> illustrating another embodiment of demand data being sent from a client to the server in accordance with the teachings of the present invention. In the embodiment illustrated in flow diagram <highlight><bold>521</bold></highlight>, the clients provide demand data feedback to the server at different times. This embodiment may be utilized in situations where it is not practical for the server to receive demand data feedback from all of the clients simultaneously due to for example bandwidth or network load limitations. For instance, if a public switched telephone network (PSTN) is used for a back channel, it may be unrealistic or impractical for all clients to dial up the server simultaneously after receiving the trigger signal. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> Block <highlight><bold>523</bold></highlight> shows that the client system keeps track of the amount of time that has lapsed since the last time demand data was sent back to the server. In one embodiment, block <highlight><bold>523</bold></highlight> is accomplished by the client by maintaining a timer representing the amount of time since the client last provided demand data feedback to the server. In one embodiment, after a predetermined amount of time has lapsed, block <highlight><bold>527</bold></highlight> shows that the client sends the demand data back to the server and block <highlight><bold>525</bold></highlight> shows that the server receives the demand data. In one embodiment, the client system sends the demand data by establishing the connection to the server. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5C</cross-reference> is a flow diagram <highlight><bold>541</bold></highlight> illustrating yet another embodiment of demand data being sent from a client to the server in accordance with the teachings of the present invention. In the embodiment illustrated in flow diagram <highlight><bold>541</bold></highlight>, the clients are assumed to generate demand data feedback at different rates. As a result, some clients will have more demand data feedback than others over a given time period. Consequently, clients provide the feedback based on the amount of content that has been ranked or rated. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> To illustrate, block <highlight><bold>543</bold></highlight> shows that the client system generates demand data related to content described by the content descriptors. The demand data may be generated automatically or manually. In one embodiment, the client maintains a count of the number of pieces of content that have been rated since that last time demand data feedback was sent to the server. Block <highlight><bold>547</bold></highlight> shows that after demand data related to a predetermined amount of pieces of content have been generated, the demand data is sent to the server. In one embodiment, the predetermined amount of pieces of content that is used as a threshold to determine when to send the demand data feedback is fine tuned to each client system to consider the rate at which content is broadcast, the rate at which content descriptors are broadcast and bandwidth capacity of the communications link from the client to the server. Block <highlight><bold>545</bold></highlight> shows that the demand data is received by the server. In one embodiment, the client system sends the demand data by initiating the connection to the server. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5D</cross-reference> is a flow diagram <highlight><bold>561</bold></highlight> illustrating still another embodiment of demand data being sent from a client to the server in accordance with the teachings of the present invention. In the embodiment illustrated in flow diagram <highlight><bold>561</bold></highlight>, the clients are assumed to consume content at different rates. As a result, some clients will have consumed more content than other clients in a given amount of time. Thus, clients provide feedback based on the amount of content consumed. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> To illustrate, block <highlight><bold>563</bold></highlight> shows that the client system generates demand data related to content consumed by the user. In one embodiment, the client maintains a count of the number of pieces of content that have been consumed since that last time demand data feedback was sent to the server. Block <highlight><bold>567</bold></highlight> shows that after a predetermined amount of pieces of content have been consumed, the demand data is sent to the server. Block <highlight><bold>565</bold></highlight> shows that the demand data is received by the server. In one embodiment, the client system sends the demand data by initiating the connection to the server. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5E</cross-reference> is a flow diagram <highlight><bold>581</bold></highlight> illustrating yet another embodiment of demand data being sent from a client to the server in accordance with the teachings of the present invention. In the embodiment illustrated in flow diagram <highlight><bold>581</bold></highlight>, the clients are assumed to consume content at different rates, as in the embodiment illustrated in flow diagram <highlight><bold>561</bold></highlight>. As a result, some clients will use up the available unconsumed content cached in their client systems faster than other clients in a given amount of time. Thus, clients provide feedback based on the amount of unconsumed content remaining cached in their client systems. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> To illustrate, block <highlight><bold>583</bold></highlight> shows that the client system generates demand data related to content consumed by the user. In one embodiment, the client maintains a count of the number of unconsumed pieces of content that remain stored in the client system. Block <highlight><bold>587</bold></highlight> shows that when less than a predetermined amount of pieces of content remain cached at the client, the demand data is sent to the server. Thus, when the client ultimately receives more content broadcast by the server to refill the cache, the server will have had an opportunity to consider the demand data generated by the client previously. As a result, the client cache is more likely to be refilled with content that is more desirable to the client. Block <highlight><bold>585</bold></highlight> shows that the demand data is received by the server. In one embodiment, the client system sends the demand data by initiating the connection to the server. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flow diagram <highlight><bold>601</bold></highlight> illustrating one embodiment of the flow of events in a client when processing content descriptors broadcasted from a server and updating and maintaining a content descriptor table and a demand data table in accordance with the teachings of the present invention. In particular, process block <highlight><bold>603</bold></highlight> shows that a content descriptor table is updated with attributes and attribute values included in the content descriptors broadcasted from the server. Process block <highlight><bold>605</bold></highlight> shows that the demand data table is then updated with an entry for each one of the data files described by the content descriptors broadcast from the server. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> In one embodiment, it is assumed that a content descriptor table, a demand data table and a plurality of data files already exist in the client system. In one embodiment, the content descriptor table, demand data table and plurality of data files may be stored and maintained in the client system in memory <highlight><bold>205</bold></highlight>, storage <highlight><bold>211</bold></highlight> or by accessing a local network or the like with machine <highlight><bold>201</bold></highlight>, as illustrated in the embodiment shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> To help illustrate the content descriptors aspect of the present invention, <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is an example of one embodiment of content descriptors <highlight><bold>701</bold></highlight>, which may be broadcast by the server <highlight><bold>103</bold></highlight> to the clients <highlight><bold>105</bold></highlight>, <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight>. For explanation purposes, it is assumed that the data files broadcast by server <highlight><bold>103</bold></highlight> in this example are audio/video files such as for example movies or TV programming. As mentioned above, data files may be other types of files such as for example but not limited to audio, graphics, text, multi-media or the like. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> In the illustrated embodiment, content descriptors <highlight><bold>701</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows that four movies, or data files, will be broadcast later by server <highlight><bold>103</bold></highlight>. These movies shown in this example are &ldquo;Action Dude,&rdquo; &ldquo;The Funny Show,&rdquo; &ldquo;Blast &apos;Em&rdquo; and &ldquo;Hardy Har Har.&rdquo; Content descriptors <highlight><bold>701</bold></highlight> include attributes and attribute values that describe each one of the movies to be broadcast later by server <highlight><bold>103</bold></highlight>. In the example illustrated, two attributes are provided to describe each movie in content descriptors <highlight><bold>701</bold></highlight>. The attributes shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference> are &ldquo;Actor&rdquo; and &ldquo;Genre.&rdquo; It is appreciated that other embodiments of the present invention may include different attributes as well as other attributes values. For instance, a non-exhaustive list of other attributes that may be used to describe movies may include &ldquo;Director,&rdquo; &ldquo;Year,&rdquo; &ldquo;Effects,&rdquo; &ldquo;Ending,&rdquo; etc. In one embodiment, for example, 40-50 different attributes are provided to describe movies in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> Referring back to the particular example shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, &ldquo;Action Dude&rdquo; is an &ldquo;action&rdquo; movie featuring actor &ldquo;Joe Smith.&rdquo; &ldquo;The Funny Show&rdquo; is &ldquo;comedy&rdquo; movie featuring actress &ldquo;Jane Doe.&rdquo; &ldquo;Blast &apos;Em&rdquo; is an &ldquo;action&rdquo; movie featuring actor &ldquo;Jane Doe.&rdquo; &ldquo;Hardy Har Har&rdquo; is a &ldquo;comedy&rdquo; movie featuring &ldquo;Joe Smith.&rdquo;</paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> To help illustrate the content descriptor table aspect of the present invention, <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is an example of one embodiment of content descriptor table <highlight><bold>801</bold></highlight>, which is updated and maintained locally by each client <highlight><bold>105</bold></highlight>, <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight>. In the illustrated embodiment, content descriptor table <highlight><bold>801</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> has been populated with the data included in content descriptors <highlight><bold>701</bold></highlight>, which was broadcasted earlier from server <highlight><bold>103</bold></highlight>. In one embodiment, content descriptor table <highlight><bold>801</bold></highlight> includes a list of attributes, attribute values and corresponding relevance values and believability factors. In particular, content descriptor table <highlight><bold>801</bold></highlight> includes attribute values &ldquo;Joe Smith,&rdquo; &ldquo;Jane Doe,&rdquo; &ldquo;action,&rdquo; and &ldquo;comedy.&rdquo; At this time, the relevance values and believability factors for attribute values &ldquo;Joe Smith,&rdquo; &ldquo;Jane Doe,&rdquo; &ldquo;action,&rdquo; and &ldquo;comedy&rdquo; are all zero in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. As will be shown, in one embodiment, the relevance values and believability factors of the present invention will be updated and maintained as the user interacts with the client system. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> In one embodiment, the relevance values in content descriptor table <highlight><bold>801</bold></highlight> are indicators as to how relevant the associated attribute and attribute values are for predicting a particular user&apos;s behavior. For instance, the relevance value indicates how likely it is for the user to watch a particular movie because of this particular attribute value. In one embodiment, relevance values in content descriptor table <highlight><bold>801</bold></highlight> are within a range of values such as for example from &minus;10 to 10. As will be discussed, the relevance value may be increased if for example the user watches a particular movie or at least expresses an interest in a particular movie having that particular attribute value. Conversely, the relevance value may be decreased if the user for example does not watch a particular movie or if the user explicitly indicates that he or she does not want to watch a particular movie having that particular attribute value. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> In one embodiment, the believability factors in content descriptor table <highlight><bold>801</bold></highlight> are weighting factors to be applied to specific attribute and attribute value pairs when rating or predicting whether a user will actually access a particular data file having that particular attribute value. In one embodiment, believability factors in content descriptor table <highlight><bold>801</bold></highlight> are within a range of values such as for example from &minus;10 to 10. In one embodiment, the believability factors may be increased for example when an attribute value accurately predicts a data file in which the user is interested. Conversely, the believability factors may be decreased when a user is interested in the data file, even though the particular attribute value indicates otherwise. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> In one embodiment, content descriptor table <highlight><bold>801</bold></highlight> entries are constructed from the aggregation of all content descriptors <highlight><bold>701</bold></highlight> associated with potential content or data files to be broadcast from server <highlight><bold>103</bold></highlight>. In one embodiment, entries in content descriptor table <highlight><bold>801</bold></highlight> are updated based on explicit user requests. In addition, updates to content descriptor table <highlight><bold>801</bold></highlight> may also be implicitly based on whether a user accesses specific data files having particular attribute values, independent of whether the user explicitly classifies a particular movie. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> To help illustrate the demand data table aspect of the present invention, <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is an example of one embodiment of a demand data table <highlight><bold>901</bold></highlight>, which in one embodiment is updated and maintained locally by each client <highlight><bold>105</bold></highlight>, <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight>. In the illustrated embodiment, demand data table <highlight><bold>901</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 9</cross-reference> includes a list of the data files described in content descriptors <highlight><bold>701</bold></highlight> as well as any additional data files that are currently stored or cached locally by the client. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> In one embodiment, data files may be stored locally by the client in for example memory <highlight><bold>205</bold></highlight>, storage <highlight><bold>211</bold></highlight> or in a locally accessible network by machine <highlight><bold>201</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. For purposes of this disclosure, data files being stored locally by the client may also be interpreted to include a data file stored &ldquo;locally&rdquo; by the client in a known network storage configuration, separate from the server. For purposes of this disclosure, the data file being stored or cached locally by the client is to be interpreted as the data file being stored for later access, retrieval or consumption. In one embodiment, the local cache of the present invention is considered to be a first level cache. Thus, the local cache of the present invention is sized accordingly to increase the possibility of a single hit. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> Referring back to the continuing example of data files representing audio/video files, a movie is stored locally by the client. After a user watches the movie, the storage space occupied by the movie is generally considered to be available for storage of another movie to be broadcast sometime later. Thus, it is appreciated that the local cache of the client system is modeled as the single use system, e.g. fire and forget, in accordance with teachings of the present invention. In one embodiment, it is assumed that when a user accesses a data file, it is not likely that the user will want to access that same data file again. If a user has not watched a particular movie, the storage space occupied by that movie is generally considered not to be available for storage of another movie. However, if there is no additional storage space available and a higher rated movie is to be broadcast, the lower rated unwatched movie is replaced by the higher rated movie in accordance with the teachings of the present invention. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> Referring back to the embodiment of demand data table <highlight><bold>901</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, each movie also has an associated rating, a rating type indicator, an in cache indicator and a next treatment indicator. In one embodiment, the rating indicates a rating value for the associated data file. The rating value in one embodiment may either be explicitly input by a user or implicitly generated by the client system by processing content descriptors associated with that particular data file. In one embodiment, a relatively high rating value predicts that the particular data file may be of interest to the user. Conversely, in one embodiment, a relatively low rating value predicts that the particular data file is unlikely to be of interest to the user. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> In one embodiment, the rating type indicator indicates whether the rating value of this particular data file was a result of explicit input from the user or if the rating value was implicitly generated by the client system. Thus, in one embodiment, the rating type indicator of demand data table <highlight><bold>901</bold></highlight> may be explicit, implicit or N/A if the data file or movie has not yet been rated. In one embodiment, if a data file has been explicitly classified by a user, the rating values of attribute values of the data file are no longer updated implicitly by the client system. However, if a data file has not yet been classified or has only been implicitly rated by the client system, the rating of the attribute values of the data file may be further updated or adjusted by the client system. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> In one embodiment, the in cache indicator indicates whether that particular data file is currently stored or cached locally by the client. In the embodiment illustrated in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, the movies &ldquo;Action Dude,&rdquo; &ldquo;The Funny Show&rdquo; and &ldquo;Blast &apos;Em&rdquo; already exist in the local storage of the client system. Conversely, the movie &ldquo;Hardy Har Har&rdquo; has not been stored in the local storage of the client system in the example illustrated in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> In one embodiment, the next treatment indicator is used to track future actions to be taken for the particular data file. For example, if a movie has already been watched by the user, the next treatment indicator would indicate &ldquo;replace&rdquo; to indicate that the storage space occupied by that particular movie is available for storage of another movie. In one embodiment, if the movie has not yet been watched by the user, the next treatment indicator would indicate &ldquo;keep.&rdquo; In one embodiment, if the movie has not been stored locally by the client and if the rating value predicts that this particular movie may be of interest to the user, the next treatment indicator would indicate &ldquo;capture.&rdquo; In one embodiment, if the movie has not yet been broadcast by the server and the rating predicts that this movie is unlikely to be of interest to the user, the next treatment indicator would indicate &ldquo;ignore.&rdquo;</paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> As was discussed back to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, process blocks <highlight><bold>603</bold></highlight> and <highlight><bold>605</bold></highlight> show that the content descriptor table and the demand data table are updated according to content descriptors broadcast from the server. Decision block <highlight><bold>607</bold></highlight> shows that it is then determined whether there is a user classification of any of the data files. Referring briefly to <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, an example is shown where a user classifies some of the movies, as described by content descriptors <highlight><bold>701</bold></highlight>. In particular, the user has expressed interest in the movie &ldquo;Action Dude&rdquo; by indicating that he or she wishes to receive that movie. In this example, the user has expressed that he or she does not have any interest in the movie &ldquo;The Funny Show&rdquo; by indicating that he or she refuses that movie. In this example, the user has not provided any information or classification regarding any of the remaining movies. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> Referring back to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, if the user has classified any of the data files, process block <highlight><bold>609</bold></highlight> shows that the relevance values of the particular attributes of the classified data files are updated in content descriptor table <highlight><bold>801</bold></highlight>. Process block <highlight><bold>611</bold></highlight> shows that the ratings of data files having attribute values with relevance values that were adjusted in response to the user classification(s) are also adjusted. In one embodiment, if the user has not classified any data files, process blocks <highlight><bold>609</bold></highlight> and <highlight><bold>611</bold></highlight> are skipped. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> To illustrate an example of when a user classifies data files, <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows a content descriptor table <highlight><bold>801</bold></highlight> that is updated or adjusted in response to a user classification. In the example provided in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the user indicated that he or she was interested in the movie &ldquo;Action Dude.&rdquo; Content descriptors <highlight><bold>701</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows that &ldquo;Action Dude&rdquo; features actor &ldquo;Joe Smith&rdquo; and is an &ldquo;action&rdquo; movie. Thus, referring to content descriptor table <highlight><bold>801</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, the relevance values for attribute values &ldquo;Joe Smith&rdquo; and &ldquo;action&rdquo; are adjusted to reflect that the user explicitly expressed an interest in &ldquo;Action Dude.&rdquo; In one embodiment, the relevance values are increased to reflect that the user was interested. As will be discussed, in one embodiment, the believability factors associated with each attribute value are not updated until there is a user access of the data file having that particular attribute value. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> Continuing with the example of <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the user indicated that he or she was not interested in the movie &ldquo;The Funny Show.&rdquo; Content descriptors <highlight><bold>701</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows that &ldquo;The Funny Show&rdquo; features actress &ldquo;Jane Doe&rdquo; and is a &ldquo;comedy&rdquo; movie. Thus, referring back to content descriptor table <highlight><bold>801</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, the relevance values for attribute values &ldquo;Jane Doe&rdquo; and &ldquo;comedy&rdquo; are adjusted to reflect that the user explicitly expressed that he or she was not interested in &ldquo;The Funny Show.&rdquo; In one embodiment, the relevance values are decremented to reflect that the user was not interested. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> Continuing with the example of <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the user did not provide any information regarding the movies &ldquo;Blast &apos;Em&rdquo; and &ldquo;Hardy Har Har.&rdquo;Accordingly, the relevance values of the attribute values associated with &ldquo;Blast &apos;Em&rdquo; and &ldquo;Hardy Har Har&rdquo; are not updated in content descriptor table <highlight><bold>801</bold></highlight>. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> As will be discussed, in one embodiment, updates to the ratings in demand data table <highlight><bold>901</bold></highlight>, as described in process block <highlight><bold>611</bold></highlight>, are related to the relevance values and believability factors of the attribute values listed in content descriptor table <highlight><bold>801</bold></highlight>. A detailed description of the processing that occurs in process block <highlight><bold>611</bold></highlight> will be discussed below with a discussion of process block <highlight><bold>617</bold></highlight>. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> Referring back to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, if the user accesses any of the data files, e.g. the user watches a movie, as determined in decision block <highlight><bold>613</bold></highlight>, process block <highlight><bold>615</bold></highlight> shows that the relevance values and the believability factors of the particular attributes of the user accessed data files are updated in content descriptor table <highlight><bold>801</bold></highlight>. Process block <highlight><bold>617</bold></highlight> shows that the ratings of data files having attribute values with relevance values that were adjusted in response to the user access(es) are also adjusted. If the user has not accessed any data files, process blocks <highlight><bold>615</bold></highlight> and <highlight><bold>617</bold></highlight> are skipped. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> To illustrate an example of a user accessing data files, assume that the user watches the movie &ldquo;Action Dude.&rdquo; Content descriptors <highlight><bold>701</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows that &ldquo;Action Dude&rdquo; features actor &ldquo;Joe Smith&rdquo; and is an &ldquo;action&rdquo; movie. In one embodiment, each time a user accesses or interacts with particular data file, the believability factor of the attribute values of that film are adjusted or updated. In one embodiment, for attribute values having relevance values greater than zero, the believability factor for that attribute value is increased, since that attribute value accurately served as a predictor for a data file that the user would access. In one embodiment, for attribute values having relevance values less than zero, the believability factor for that attribute value is decreased, since that attribute value did not accurately serve as a predictor for a data file that the user would access. Therefore, <cross-reference target="DRAWINGS">FIG. 12</cross-reference> shows a content descriptor table <highlight><bold>801</bold></highlight> that is updated or adjusted in response to the user access of &ldquo;Action Dude.&rdquo; In this example, the believability factors of &ldquo;Joe Smith&rdquo; and &ldquo;action&rdquo; are increased since the relevance values for these attribute values were greater than zero. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> In one embodiment, the relevance values associated with implicitly rated data files are also increased in content descriptor table <highlight><bold>801</bold></highlight> in response to a user access. However, in the example shown in content descriptor table <highlight><bold>801</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, &ldquo;Action Dude&rdquo; was explicitly classified by the user. In one embodiment, the relevance values are not updated in content descriptor table <highlight><bold>801</bold></highlight> in response to a user access of data files explicitly classified by the user. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> shows demand data table <highlight><bold>901</bold></highlight>, which is updated in response to the user access of &ldquo;Action Dude,&rdquo; as described in process block <highlight><bold>617</bold></highlight>. As mentioned earlier, demand data table <highlight><bold>901</bold></highlight> is also updated as described in process block <highlight><bold>611</bold></highlight> in accordance with the teachings of the present invention. As shown in demand data table <highlight><bold>901</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, &ldquo;Action Dude&rdquo; has a rating value of 1. The rating type of &ldquo;Action Dude&rdquo; is &ldquo;explicit&rdquo; because the user explicitly classified &ldquo;Action Dude,&rdquo; as described above in connection with <cross-reference target="DRAWINGS">FIG. 10</cross-reference>. The in cache indicator indicates that &ldquo;Action Dude&rdquo; is presently locally stored by the client system. The next treatment indicator indicates replace because the user has already watched &ldquo;Action Dude.&rdquo;</paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> In one embodiment, the rating values in demand data table <highlight><bold>901</bold></highlight> are determined as follows. Content descriptors <highlight><bold>701</bold></highlight> shows that &ldquo;Action Dude&rdquo; has the attribute values &ldquo;Joe Smith&rdquo; and &ldquo;action.&rdquo; Content descriptor table <highlight><bold>801</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 12</cross-reference> shows that &ldquo;Joe Smith&rdquo; has a relevance value of 1 and a believability factor of 1. Content descriptor table <highlight><bold>801</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 12</cross-reference> also shows that &ldquo;action&rdquo; has a relevance value of 1 and a believability factor of 1. In one embodiment, the rating value of a particular data file is determined considering all of the relevance values combined with their respective believability factors for all the attribute values of the data file. For instance, in one embodiment, the rating value for a data file is equal to the average of all of products of each relevance value and corresponding believability factor for the attribute values of the data file. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> To illustrate, referring to &ldquo;Action Dude&rdquo; in demand data table <highlight><bold>901</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, the product of the relevance value and believability factor of &ldquo;Joe Smith&rdquo; is 1*1, which equals 1. The product of the relevance value and believability factor of &ldquo;action&rdquo; is 1*1, which equals <highlight><bold>1</bold></highlight>. The average of the products, 1 and 1, is 1. Therefore, the rating of &ldquo;Action Dude&rdquo; in demand data table <highlight><bold>901</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is 1. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> Similarly, with regard to &ldquo;Blast &apos;Em&rdquo; in demand data table <highlight><bold>901</bold></highlight>, &ldquo;Blast &apos;Em&rdquo; has the attribute values &ldquo;Jane Doe&rdquo; and &ldquo;action.&rdquo; The relevance value and believability factors for &ldquo;Jane Doe&rdquo; in content descriptor table <highlight><bold>801</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 12</cross-reference> are &minus;1 and 0, respectively. Thus, the rating of &ldquo;Blast &apos;Em&rdquo; in demand data table <highlight><bold>901</bold></highlight> is the average of 1*0 and 1*1, which equals 0.5. The ratings for &ldquo;The Funny Show&rdquo; and &ldquo;Hardy Har Har&rdquo; in demand data table <highlight><bold>901</bold></highlight> in the example shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> are determined in a similar fashion in one embodiment of the present invention. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> It is noted that since the user classified the movies &ldquo;Action Dude&rdquo; and &ldquo;The Funny Show&rdquo; above in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, these movies have an explicit rating type as shown in demand data table <highlight><bold>901</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. Since the user did not classify the movies &ldquo;Blast &apos;Em&rdquo; and &ldquo;Hardy Har Har,&rdquo; these movies have an implicit rating in demand data table <highlight><bold>901</bold></highlight>. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> It is appreciated that the discussion above provides one example of how the rating values in demand data table <highlight><bold>901</bold></highlight> are determined in accordance with the teachings of the present invention. It is noted that ratings values may be determined in other ways in accordance with the teachings of the invention, which consider the relevance values and believability factors for each of the attribute values of a data file. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> In one embodiment, the entry for next treatment in demand data table <highlight><bold>901</bold></highlight> is determined in part by the rating and in cache values for the particular data file. For example, assume in one embodiment that a rating of greater than zero indicates that the user is predicted to have at least some interest in that particular movie. Therefore, the movies &ldquo;Blast &apos;Em&rdquo; and &ldquo;Hardy Har Har&rdquo; may be of some interest to the user. Thus, the next treatment indicates that the movie &ldquo;Blast &apos;Em&rdquo; will be kept in storage and the movie &ldquo;Hardy Har Har&rdquo; will be captured when it is later broadcast by the server. As mentioned above, the movie &ldquo;Action Dude&rdquo; is marked for replacement in the next treatment field because it has already been watched by the user. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> In one embodiment, future interactions by a user with the client system results in similar processing as described above. For instance, assume that the user now watches the movie &ldquo;Blast &ldquo;Em.&rdquo; In this particular example, the user did not classify the movie &ldquo;Blast &apos;Em&rdquo; before watching the movie. In one embodiment, both of the relevance values and believability factors are updated for the attribute values of unclassified data files that are accessed, as shown in content descriptor table <highlight><bold>801</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 14</cross-reference>. Recall from <cross-reference target="DRAWINGS">FIG. 7</cross-reference> that the movie &ldquo;Blast &apos;Em&rdquo; features &ldquo;Jane Doe&rdquo; and is an &ldquo;action&rdquo; movie. As shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, the relevance value of &ldquo;Jane Doe&rdquo; was less than zero, or &minus;1, prior to the user watching &ldquo;Blast &apos;Em.&rdquo; Nevertheless, in this example, the user watched &ldquo;Blast &apos;Em,&rdquo; despite the fact that it featured actress &ldquo;Jane Doe.&rdquo; Accordingly, the believability factor of the &ldquo;Jane Doe&rdquo; attribute the value is adjusted downward since this particular attribute value now appears less likely or relevant when predicting a user&apos;s viewing habits. In one embodiment, since the relevance value is already less than zero, the believability factor is not adjusted further downward. However, the relevance value and believability factor for the attribute value &ldquo;action&rdquo; are adjusted upwards since &ldquo;action&rdquo; had a relevance value of greater than zero prior to the user watching &ldquo;Blast &apos;Em.&rdquo; Thus, in this example, the relevance value is adjusted upwards from 1 to 2 and the believability factor is also adjusted upwards from 1 to 2. Therefore, the demand data table <highlight><bold>801</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 14</cross-reference> now predicts that &ldquo;action&rdquo; movies are movies that the user is more likely to watch. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> In one embodiment, each time the user interacts with the client system, the content descriptor table <highlight><bold>801</bold></highlight> and the demand data table <highlight><bold>901</bold></highlight> are updated. Updates to content descriptor table <highlight><bold>801</bold></highlight> and demand data table <highlight><bold>901</bold></highlight> are performed when the user accesses data files as well as when the user explicitly classifies data files. It is appreciated that the user is not required to classify data files explicitly in order for the content descriptor table <highlight><bold>801</bold></highlight> and demand data table <highlight><bold>901</bold></highlight> to be updated in accordance with the teachings of the present invention. As a result, the demand data table over time will more accurately predict data files in which the user is interested. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> In one embodiment, the data files in which the user is predicted implicitly to be most interested as well as the data files in which the user explicitly classified an interest will be the data files that are cached locally on the client system. In effect, the movies that the user is most likely to want to watch are automatically stored locally, and therefore available &ldquo;on demand,&rdquo; in accordance with teachings of the present invention without the user having to explicitly request these movies in advance or explicitly specify criteria used to identify the movies. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> As can be appreciated, by storing the data files locally on each client, broadcast bandwidth is utilized more efficiently in accordance with teachings of the present invention. Indeed, when a user watches a movie from the local storage of the client, no additional broadcast bandwidth is utilized. In addition, it is also appreciated that a substantial amount of the processing performed in a system according to the teachings of the present invention is performed on each of the client systems when updating their respective content descriptor tables and demand data tables. This distributed processing of the present invention enables the presently disclosed broadcast system to scale across a very large number of users since the incremental cost to the server for each additional client is zero. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> In the foregoing detailed description, the method and apparatus of the present invention have been described with reference to specific exemplary embodiments thereof. It will, however, be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the present invention. The present specification and figures are accordingly to be regarded as illustrative rather than restrictive. 
<image file="US20030005465A1-20030102-P00001.TIF" id="EMI-00001"></image>
<image file="US20030005465A1-20030102-P00002.TIF" id="EMI-00002"></image>
</paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method, comprising: 
<claim-text>receiving content descriptors, which describe content, from a server; </claim-text>
<claim-text>receiving a trigger signal from the server; </claim-text>
<claim-text>sending feedback to the server in response to the trigger signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein sending the feedback to the server in response to the trigger signal from the server comprises establishing a connection to the server. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> further comprising utilizing a binary exponential back-off system to establish the connection with the server if the connection to the server cannot be established. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the sending the feedback to the server comprises establishing the connection the server through a back channel. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the sending the feedback to the server comprises establishing the connection the server through a network connection to the server. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A method, comprising: 
<claim-text>receiving content descriptors, which describe content, from a server; </claim-text>
<claim-text>timing an amount of time lapsed since a previous feedback was sent to the server; </claim-text>
<claim-text>sending a next feedback to the server after the amount of time lapsed since the previous feedback was sent to the server is greater than a predetermined amount of time. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference> wherein timing the amount of time lapsed since the previous feedback was sent to the server comprises maintaining a local timer of the amount of time lapsed since the previous feedback was sent to the server. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference> further comprising resetting a timer of the amount of time lapsed since a previous feedback was sent to the server after sending the next feedback to the server. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference> wherein sending the next feedback to the server comprises establishing a connection to the with the server. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A method, comprising: 
<claim-text>receiving content descriptors, which describe content, from a server; </claim-text>
<claim-text>generating demand data related to the content described by the content descriptors; </claim-text>
<claim-text>sending feedback to the server after demand data is generated related to a first amount of content. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein the generation of the demand data comprises consuming at least a portion of content locally stored, the generation of demand data responsive to the portion of content that is consumed. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein the generation of demand data related to the content described by the content descriptors comprises receiving explicit user input regarding specific pieces of content. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein the sending of the feedback to the server comprises sending the feedback to the server after demand data related to a first number of pieces of content have been generated. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein the generation of the demand data related to the content comprises ranking the content. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein the generation of the demand data related to the content comprises rating the content. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A method, comprising: 
<claim-text>receiving content descriptors, which describe content, from a server; </claim-text>
<claim-text>receiving content from the server; </claim-text>
<claim-text>storing the content received from the server in a storage device; </claim-text>
<claim-text>sending feedback to the server after a first amount of content stored in the storage device has been consumed. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> further comprising maintaining a count of a number of pieces of content that have been consumed since a previous feedback was sent to the server. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> further comprising resetting the count of the number of pieces of content that have been consumed since the previous feedback was sent to the server after sending the feedback to the server after the first amount of content stored in the storage device has been consumed. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A method, comprising: 
<claim-text>receiving content descriptors, which describe content, from a server; </claim-text>
<claim-text>receiving content from the server; </claim-text>
<claim-text>storing the content received from the server in a storage device; </claim-text>
<claim-text>sending feedback to the server after a first amount of unconsumed content remains stored in the storage device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> further comprising consuming content that is stored in the storage device. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> further comprising maintaining a count of an amount of unconsumed content stored in the storage device. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> further comprising: 
<claim-text>receiving additional content from the server after sending the feedback to the server; and </claim-text>
<claim-text>storing the additional content received from the server in the storage device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. An apparatus, comprising: 
<claim-text>a machine-readable medium having instructions stored thereon to: 
<claim-text>receive content descriptors from a server, the content descriptors to describe content potentially to be sent from the server; </claim-text>
<claim-text>receive a trigger signal from the server; </claim-text>
<claim-text>send feedback to the server in response to the trigger signal. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference> wherein when the instructions stored on the machine-readable medium send the feedback to the server in response to the trigger signal from the server, the instructions on the machine-readable medium further establish a connection to the server. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> wherein the machine-readable medium further has instructions stored thereon to utilize a binary exponential back-off system to establish the connection with the server if the connection to the server cannot be established. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference> wherein when the instructions stored on the machine-readable medium send the feedback to the server, the instructions on the machine-readable medium further establish the connection to the server through a back channel. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference> wherein when the instructions stored on the machine-readable medium send the feedback to the server, the instructions on the machine-readable medium further establish the connection to the server through a network connection to the server. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. An apparatus, comprising: 
<claim-text>a machine-readable medium having instructions stored thereon to: 
<claim-text>receive content descriptors, which describe content, from a server; </claim-text>
<claim-text>time an amount of time lapsed since a previous feedback was sent to the server; </claim-text>
<claim-text>send a next feedback to the server after the amount of time lapsed since the previous feedback was sent to the server is greater than a predetermined amount of time. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference> wherein when the instructions stored on the machine-readable medium time the amount of time lapsed since the previous feedback was sent to the server, the machine-readable medium further has instructions to maintain a local timer to time the amount of time lapsed since the previous feedback was sent to the server. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference> wherein the machine-readable medium further has instructions to reset a timer of the amount of time lapsed since a previous feedback was sent to the server after sending the next feedback to the server. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference> wherein when the instructions stored on the machine-readable medium send the next feedback to the server, the machine-readable medium further has instructions stored thereon to establish a connection to the with the server. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. An apparatus, comprising: 
<claim-text>a machine-readable medium having instructions stored thereon to: 
<claim-text>receive content descriptors, which describe content, from a server; </claim-text>
<claim-text>generate demand data related to the content described by the content descriptors; </claim-text>
<claim-text>send feedback to the server after demand data related to a first amount of content has been generated. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference> wherein the machine-readable medium further has instructions to consume at least a portion of content locally stored, the demand data generated in responsive to the portion of content that is consumed. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference> wherein the machine-readable medium further has instructions to receive explicit user input regarding specific pieces of content, the demand data generated in responsive to the explicit user input. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference> wherein the demand data is generated related to the first amount of content after demand data has been generated in connection with a first number of pieces of content. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference> generating the demand data related to the content comprises ranking the content. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference> generating the demand data related to the content comprises rating the content. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. An apparatus, comprising: 
<claim-text>a machine-readable medium having instructions stored thereon to: 
<claim-text>receive content descriptors, which describe content, from a server; </claim-text>
<claim-text>receive content from the server; </claim-text>
<claim-text>store the content received from the server in a storage device; </claim-text>
<claim-text>send feedback to the server after a first amount of content stored in the storage device has been consumed. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference> wherein the machine-readable medium further has instructions to maintain a count of a number of pieces of content that have been consumed since a previous feedback was sent to the server. </claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference> wherein the machine-readable medium further has instructions to reset the count of the number of pieces of content that have been consumed since the previous feedback was sent to the server. </claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. An apparatus, comprising: 
<claim-text>a machine-readable medium having instructions stored thereon to: 
<claim-text>receive content descriptors, which describe content, from a server; </claim-text>
<claim-text>receive content from the server; </claim-text>
<claim-text>store the content received from the server in a storage device; </claim-text>
<claim-text>send feedback to the server after a first amount of unconsumed content remains stored in the storage device. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference> wherein the machine-readable medium further has instructions to consume content that is stored in the storage device. </claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference> wherein the machine-readable medium further has instructions to maintain a count of an amount of unconsumed content stored in the storage device. </claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference> wherein the machine-readable medium further has instructions to: 
<claim-text>receive additional content from the server after sending the feedback to the server; and </claim-text>
<claim-text>store the additional content received from the server in the storage device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. An apparatus, comprising 
<claim-text>a processor having circuitry to execute instructions; </claim-text>
<claim-text>a communications interface coupled to the processor, the communications interface coupled to receive communications from a server; </claim-text>
<claim-text>a storage device coupled to the processor, having instructions stored therein, which when executed cause the apparatus to: 
<claim-text>receive content descriptors from a server, the content descriptors to describe content potentially to be sent from the server; </claim-text>
<claim-text>receive a trigger signal from the server; </claim-text>
<claim-text>send feedback to the server in response to the trigger signal. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 45</dependent-claim-reference> wherein the apparatus is further caused to establish a connection with the server when sending feedback to the server in response to the trigger signal. </claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference> wherein the apparatus is further caused to utilize a binary exponential back-off system to establish the connection with the server if the connection to the server cannot be established. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 45</dependent-claim-reference> wherein the apparatus is further caused to establish a connection with the server through a back channel when sending feedback to the server in response to the trigger signal. </claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 45</dependent-claim-reference> wherein the apparatus is further caused to establish a connection with the server through a network connection when sending feedback to the server in response to the trigger signal. </claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. An apparatus, comprising 
<claim-text>a processor having circuitry to execute instructions; </claim-text>
<claim-text>a communications interface coupled to the processor, the communications interface coupled to receive communications from a server; </claim-text>
<claim-text>a storage device coupled to the processor, having instructions stored therein, which when executed cause the apparatus to: 
<claim-text>receive content descriptors, which describe content, from a server; </claim-text>
<claim-text>time an amount of time lapsed since a previous feedback was sent to the server; </claim-text>
<claim-text>send a next feedback to the server after the amount of time lapsed since the previous feedback was sent to the server is greater than a predetermined amount of time. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00055">claim 50</dependent-claim-reference> wherein the apparatus is further caused to maintain a local timer to time the amount of time lapsed since the previous feedback was sent to the server. </claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00055">claim 50</dependent-claim-reference> wherein the apparatus is further caused to establish a connection with the server when sending the next feedback to the server. </claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. An apparatus, comprising 
<claim-text>a processor having circuitry to execute instructions; </claim-text>
<claim-text>a communications interface coupled to the processor, the communications interface coupled to receive communications from a server; </claim-text>
<claim-text>a storage device coupled to the processor, having instructions stored therein, which when executed cause the apparatus to: 
<claim-text>receive content descriptors, which describe content, from a server; </claim-text>
<claim-text>rank or rate the content described by the content descriptors; </claim-text>
<claim-text>send feedback to the server after demand data related to a first amount of content has been generated. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00055">claim 53</dependent-claim-reference> wherein the apparatus is further caused to consume at least a portion of content locally stored, the demand data generated in responsive to the portion of content that is consumed. </claim-text>
</claim>
<claim id="CLM-00055">
<claim-text><highlight><bold>55</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00055">claim 53</dependent-claim-reference> wherein the apparatus is further caused to receive explicit user input regarding specific pieces of content, the demand data generated in responsive to the explicit user input. </claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00055">claim 53</dependent-claim-reference> wherein the demand data related to the first amount of content is generated after demand data has been generated in connection with a first number of pieces of content. </claim-text>
</claim>
<claim id="CLM-00057">
<claim-text><highlight><bold>57</bold></highlight>. An apparatus, comprising: 
<claim-text>a processor having circuitry to execute instructions; </claim-text>
<claim-text>a communications interface coupled to the processor, the communications interface coupled to receive communications from a server; </claim-text>
<claim-text>a storage device coupled to the processor, having instructions stored therein, which when executed cause the apparatus to: 
<claim-text>receive content descriptors, which describe content, from a server; </claim-text>
<claim-text>receive content from the server; </claim-text>
<claim-text>store the content received from the server in a storage device; </claim-text>
<claim-text>send feedback to the server after a first amount of content stored in the storage device has been consumed. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00058">
<claim-text><highlight><bold>58</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00055">claim 57</dependent-claim-reference> wherein the apparatus is further caused to maintain a count of a number of pieces of content that have been consumed since a previous feedback was sent to the server. </claim-text>
</claim>
<claim id="CLM-00059">
<claim-text><highlight><bold>59</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00055">claim 58</dependent-claim-reference> wherein the apparatus is further caused to reset the count of the number of pieces of content that have been consumed since the previous feedback was sent to the server after sending the feedback to the server. </claim-text>
</claim>
<claim id="CLM-00060">
<claim-text><highlight><bold>60</bold></highlight>. An apparatus, comprising: 
<claim-text>a processor having circuitry to execute instructions; </claim-text>
<claim-text>a communications interface coupled to the processor, the communications interface coupled to receive communications from a server; </claim-text>
<claim-text>a storage device coupled to the processor, having instructions stored therein, which when executed cause the apparatus to: 
<claim-text>receive content descriptors, which describe content, from a server; </claim-text>
<claim-text>receive content from the server; </claim-text>
<claim-text>store the content received from the server in a storage device; </claim-text>
<claim-text>send feedback to the server after a first amount of unconsumed content remains stored in the storage device. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00061">
<claim-text><highlight><bold>61</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00066">claim 60</dependent-claim-reference> wherein the apparatus is further caused to consume content that is stored in the storage device. </claim-text>
</claim>
<claim id="CLM-00062">
<claim-text><highlight><bold>62</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00066">claim 60</dependent-claim-reference> wherein the apparatus is further caused to maintain a count of an amount of unconsumed content stored in the storage device. </claim-text>
</claim>
<claim id="CLM-00063">
<claim-text><highlight><bold>63</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00066">claim 60</dependent-claim-reference> wherein the apparatus is further caused to: 
<claim-text>receive additional content from the server after sending the feedback to the server; and </claim-text>
<claim-text>store the additional content received from the server in the storage device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00064">
<claim-text><highlight><bold>64</bold></highlight>. A method, comprising: 
<claim-text>sending content descriptors, which describe content, to one or more clients; </claim-text>
<claim-text>sending a trigger signal to said one or more clients; </claim-text>
<claim-text>receiving feedback from the one or more clients in response to the trigger signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00065">
<claim-text><highlight><bold>65</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 64</dependent-claim-reference> further comprising generating the content descriptors to describe the content prior to sending the content descriptors to the one or more clients. </claim-text>
</claim>
<claim id="CLM-00066">
<claim-text><highlight><bold>66</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 64</dependent-claim-reference> further comprising determining an order to send the content in response to the feedback received from the one or more clients. </claim-text>
</claim>
<claim id="CLM-00067">
<claim-text><highlight><bold>67</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 64</dependent-claim-reference> further comprising identifying the content to send to the one or more clients in response to the feedback received from the one or more clients. </claim-text>
</claim>
<claim id="CLM-00068">
<claim-text><highlight><bold>68</bold></highlight>. A method, comprising: 
<claim-text>generating content descriptors to describe content; </claim-text>
<claim-text>sending the content descriptors to one or more clients; </claim-text>
<claim-text>receiving feedback from the one or more clients without the sending of a trigger signal to the one or more clients. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00069">
<claim-text><highlight><bold>69</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 68</dependent-claim-reference> further comprising determining an order to send the content in response to the feedback received from the one or more clients. </claim-text>
</claim>
<claim id="CLM-00070">
<claim-text><highlight><bold>70</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 68</dependent-claim-reference> further comprising identifying the content to send to the one or more clients in response to the feedback received from the one or more clients. </claim-text>
</claim>
<claim id="CLM-00071">
<claim-text><highlight><bold>71</bold></highlight>. A system, comprising: 
<claim-text>a server; </claim-text>
<claim-text>one ore more clients coupled to the server; </claim-text>
<claim-text>wherein the server is coupled to broadcast content descriptors, which describe available content, to the one or more clients; </claim-text>
<claim-text>wherein the server is coupled to broadcast a trigger signal to the one or more clients; </claim-text>
<claim-text>wherein the one or more clients are coupled to send feedback to the server in response to the trigger signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00072">
<claim-text><highlight><bold>72</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference> wherein the one or more clients are coupled to utilize a binary exponential back-off system to establish a connection with the server to send the feedback to the server if a connection to the server cannot be established. </claim-text>
</claim>
<claim id="CLM-00073">
<claim-text><highlight><bold>73</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference> wherein the one or more clients are coupled to establish a connection to the server through a back channel to send the feedback to the server. </claim-text>
</claim>
<claim id="CLM-00074">
<claim-text><highlight><bold>74</bold></highlight>. A system, comprising: 
<claim-text>a server; </claim-text>
<claim-text>one ore more clients coupled to the server; </claim-text>
<claim-text>wherein the server is coupled to broadcast content descriptors, which describe available content, to the one or more clients; </claim-text>
<claim-text>wherein each of the one or more clients are coupled to time an amount of time lapsed since a previous feedback was sent to the server; </claim-text>
<claim-text>wherein each of the one or more clients are coupled to send a next feedback to the server after the amount of time lapsed since the previous feedback was sent to the server is greater than a predetermined amount of time. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00075">
<claim-text><highlight><bold>75</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00077">claim 74</dependent-claim-reference> each of the one or more clients each of the one or more clients include a timer to time the amount of time lapsed since the previous feedback was sent to the server. </claim-text>
</claim>
<claim id="CLM-00076">
<claim-text><highlight><bold>76</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00077">claim 75</dependent-claim-reference> wherein each of the one or more clients each of the one or more clients are coupled to reset the timer of the amount of time lapsed since a previous feedback was sent to the server after the next feedback is sent to the server. </claim-text>
</claim>
<claim id="CLM-00077">
<claim-text><highlight><bold>77</bold></highlight>. A system, comprising: 
<claim-text>a server; </claim-text>
<claim-text>one ore more clients coupled to the server; </claim-text>
<claim-text>wherein the server is coupled to broadcast content descriptors, which describe available content, to the one or more clients; </claim-text>
<claim-text>wherein the one or more clients are each coupled to generate demand data related to the content described by the content descriptors; </claim-text>
<claim-text>wherein the one or more clients are each coupled to send feedback to the server after demand data is generated related to a first amount of content on each respective one of the clients. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00078">
<claim-text><highlight><bold>78</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00077">claim 77</dependent-claim-reference> wherein each of the one or more clients are each coupled to consume at least a portion of content locally stored, the generation of demand data on each client responsive to the portion of content that is consumed. </claim-text>
</claim>
<claim id="CLM-00079">
<claim-text><highlight><bold>79</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00077">claim 77</dependent-claim-reference> wherein each of the one or more clients are each coupled to receive explicit user input regarding specific pieces of content when generating the demand data. </claim-text>
</claim>
<claim id="CLM-00080">
<claim-text><highlight><bold>80</bold></highlight>. A system, comprising: 
<claim-text>a server; </claim-text>
<claim-text>one ore more clients coupled to the server; </claim-text>
<claim-text>wherein the server is coupled to broadcast content descriptors, which describe available content, to the one or more clients; </claim-text>
<claim-text>wherein the server is coupled to broadcast content to the one or more clients; </claim-text>
<claim-text>wherein the one or more clients are each coupled to receive and store the content received from the server; </claim-text>
<claim-text>wherein the one or more clients are each coupled to consume the content; </claim-text>
<claim-text>wherein the one or more clients are each coupled to send feedback to the server after a first amount of content stored in the storage device has been consumed. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00081">
<claim-text><highlight><bold>81</bold></highlight>. The system of claim <highlight><bold>80</bold></highlight> wherein the one or more clients are each coupled to maintain a count of a number of pieces of content that have been consumed since a previous feedback was sent to the server. </claim-text>
</claim>
<claim id="CLM-00082">
<claim-text><highlight><bold>82</bold></highlight>. The system of claim <highlight><bold>81</bold></highlight> wherein the one or more clients are each coupled to reset the count of the number of pieces of content that have been consumed since the previous feedback was sent to the server after sending the feedback to the server after the first amount of content stored in the storage device has been consumed. </claim-text>
</claim>
<claim id="CLM-00083">
<claim-text><highlight><bold>83</bold></highlight>. A system, comprising: 
<claim-text>a server; </claim-text>
<claim-text>one ore more clients coupled to the server; </claim-text>
<claim-text>wherein the server is coupled to broadcast content descriptors, which describe available content, to the one or more clients; </claim-text>
<claim-text>wherein the server is coupled to broadcast content to the one or more clients; </claim-text>
<claim-text>wherein the one or more clients are each coupled to receive and store the content received from the server; </claim-text>
<claim-text>wherein the one or more clients are each coupled to consume the content; </claim-text>
<claim-text>wherein the one or more clients are each coupled to send feedback to the server after a first amount of unconsumed content remains stored at the client. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00084">
<claim-text><highlight><bold>84</bold></highlight>. The system of claim <highlight><bold>83</bold></highlight> wherein the one or more clients are each coupled to maintain a count of an amount of unconsumed content stored at the client. </claim-text>
</claim>
<claim id="CLM-00085">
<claim-text><highlight><bold>85</bold></highlight>. The system of claim <highlight><bold>83</bold></highlight> wherein the one or more clients are each coupled to receive additional content from the server after sending the feedback to the server and store the additional content received from the server at the client.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005465A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005465A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005465A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005465A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005465A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005465A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005465A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005465A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030005465A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030005465A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030005465A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030005465A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030005465A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
