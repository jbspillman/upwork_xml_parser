<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002713A1-20030102-M00001.NB SYSTEM "US20030002713A1-20030102-M00001.NB" NDATA NB>
<!ENTITY US20030002713A1-20030102-M00001.TIF SYSTEM "US20030002713A1-20030102-M00001.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-M00002.NB SYSTEM "US20030002713A1-20030102-M00002.NB" NDATA NB>
<!ENTITY US20030002713A1-20030102-M00002.TIF SYSTEM "US20030002713A1-20030102-M00002.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-M00003.NB SYSTEM "US20030002713A1-20030102-M00003.NB" NDATA NB>
<!ENTITY US20030002713A1-20030102-M00003.TIF SYSTEM "US20030002713A1-20030102-M00003.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-M00004.NB SYSTEM "US20030002713A1-20030102-M00004.NB" NDATA NB>
<!ENTITY US20030002713A1-20030102-M00004.TIF SYSTEM "US20030002713A1-20030102-M00004.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-D00000.TIF SYSTEM "US20030002713A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-D00001.TIF SYSTEM "US20030002713A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-D00002.TIF SYSTEM "US20030002713A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-D00003.TIF SYSTEM "US20030002713A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-D00004.TIF SYSTEM "US20030002713A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-D00005.TIF SYSTEM "US20030002713A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-D00006.TIF SYSTEM "US20030002713A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-D00007.TIF SYSTEM "US20030002713A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-D00008.TIF SYSTEM "US20030002713A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-D00009.TIF SYSTEM "US20030002713A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-D00010.TIF SYSTEM "US20030002713A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-D00011.TIF SYSTEM "US20030002713A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002713A1-20030102-D00012.TIF SYSTEM "US20030002713A1-20030102-D00012.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002713</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09886931</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010620</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06K009/00</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>G06K009/48</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>382</class>
<subclass>104000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>382</class>
<subclass>199000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Vision-based highway overhead structure detection system</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Yang</given-name>
<family-name>Chen</family-name>
</name>
<residence>
<residence-us>
<city>Westlake Village</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>Tope-McKay &amp; Associates</name-1>
<name-2></name-2>
<address>
<address-1>23852 Pacific Coast Highway #311</address-1>
<city>Malibu</city>
<state>CA</state>
<postalcode>90265</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">An image sequence is inputted <highlight><bold>200 </bold></highlight>from the camera and vertical motion is estimated <highlight><bold>202. </bold></highlight>A windowed horizontal edge projection <highlight><bold>204 </bold></highlight>is extracted from the inputted image sequence <highlight><bold>200 </bold></highlight>and the horizontal edges are projected <highlight><bold>206. </bold></highlight>The horizontal edge projection <highlight><bold>206 </bold></highlight>and the vertical motion estimation <highlight><bold>202 </bold></highlight>are combined in a horizontal segmentation and tracking element <highlight><bold>208, </bold></highlight>and forwarded to an object parameter estimation element <highlight><bold>210 </bold></highlight>where the object&apos;s distance and height are estimated. This data is combined in a fusion with radar detection element <highlight><bold>212. </bold></highlight>By correctly matching the overhead objects sensed by the radar and video camera, the proximity and relative speed can be ascertained. Once overhead objects have been identified they can be isolated and not considered for collision avoidance purposes. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">TECHNICAL FIELD </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This invention relates generally to a detection system and more specifically to an apparatus and method for detecting objects in a motor vehicle environment. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> There has been notable progress in the development of fully autonomous automobiles capable of navigating through traffic without human intervention. For example, systems may use sensing technology to warn drivers of impending collisions, or even take control of a vehicle in certain situations where the driver either ignores or cannot heed a warning. While the autonomous vehicle will probably exist at some time, existing vehicle systems still have many challenges to overcome in order to be practical. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Some collision warning systems use a radar-based detector, combined with a vision-based land-sensing module, to detect and track vehicles ahead of the host vehicle. The radar-based system monitors the moving pattern of all objects tracked by the radar sensor to determine potential threats along the host&apos;s path. The host&apos;s path is provided by the lane module. The radar sensor has a limitation in that it not only detects moving and stationary vehicles, but also many fixed roadway infrastructures, such as overpasses and overhead signs. A collision warning system that provides frequent false alarms can be a nuisance rather than a help to drivers. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Typical radar sensors are designed to have a small vertical field of view (VFOV)&tilde;5 degrees in an effort to avoid detection of overhead objects. Even at a maximum detection range of 120 meters, some overhead objects are still routinely detected. There are a number of possible explanations for the false alarms, including, misalignment of the radar axis relative to the ground, often as a result of the radar transmitter being aimed too high. Other factors include ground reflections, which can create &ldquo;ghosting&rdquo;. Additional possible sources of error include radar side lobes, and certain types of terrain. The terrain based error sources can occur because overhead objects may actually be within the vertical field of view due to the slope of the road. Therefore redesigning a radar sensor to provide a narrower vertical beam will not likely be successful in solving the problem completely. Additionally, many of these solutions could result in a less robust system that might miss actual obstructions and may still generate false alarms. Therefore there is a need for a robust system that effectively warns users when there is a potential for collision and simultaneously minimizes or eliminates the number of false alarms. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The present invention provides a robust method and apparatus that effectively warns users when there is a potential for collision and simultaneously minimizes or eliminates the number of false alarms. The embodiments described herein relate to a vision based identification system that can be used for the reduction of false radar sensor alarms, preferably due to overhead objects. The identification system utilizes an image collection device mounted in a vehicle to supply an image processor with images of objects ahead of the vehicle. The image processor analyzes the images and extracts horizontal edges from each frame. These edges are then tracked through successive image frames by taking into account both the vertical and the forward motion of the vehicle. The distance and height of the horizontal edges from the vehicle are determined and tracked. The tracked horizontal edges are subsequently supplied to a radar sensor processor. When the data from the image processor is matched with the data from the radar sensor processor, false alarms that would be generated by these overhead objects can be avoided. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> One embodiment of the invention includes an apparatus and method for reducing the incidence of vehicle collisions. The embodiment provides an image capture device, such as a video camera, an image processor, a radar transceiver, and a radar signal processor. In this embodiment the image capture device is configured to provide a video signal to the image signal processor. The radar transceiver is configured to provide input to the radar signal processor, and the image processor and radar signal processor are configured to provide input to a matching processor where the combined processed signals complement each other and allow the apparatus to effectively identify elements likely to result in false radar sensor alarms. By squelching the rate of false alarms, the effectiveness of vehicle collision avoidance systems is enhanced. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Another embodiment of the present invention expands on the embodiment just discussed. In this embodiment the image processor is configured to extract substantially horizontal edges from the image inputs in the form of edge pixels, and project the edge pixels in each row of the image signal inputs to get a horizontal edge projection vector for each image. These horizontal edges represent bridges, overpasses, trucks, and other potential alarm triggering devices. In the discussed embodiment, the vision based identification apparatus&apos; horizontal edge projection vector has a companion vector. The companion vector has definite distance traveled, since the beginning of the tracking of the horizontal edge projection vector, and the companion vector may be computed by integrating speed over elapsed time, and the horizontal edge projection vectors are sorted based on a plurality of factors, some of which may include the average magnitude of the horizontal edge projection vectors, and the status of the horizontal edge projection vector. The status of the horizontal edge projection may be updating, which occurs when the horizontal edge is being tracked and updated. Alternatively the edge could be present but no longer updating. A third possibility is that the horizontal edge is new, or observed for the first time. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> In another embodiment of the invention, wherein the tracking of horizontal edge projection vectors is assisted by using one or both of the following, vertical motion compensation or forward motion compensation. The vertical motion compensation helps predict where the tracked horizontal edge projection vectors will be located on successive image inputs by compensating for vertical motion. Similarly forward motion compensation helps predict where tracked horizontal edge projection vectors will be located on successive image inputs by compensating for forward motion. The forward motion compensation can be achieved by using a plurality of previous points from one or more previous images. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The typical embodiment will likely use a full motion video camera, which will be located in a motor vehicle and will face in the direction of the vehicle&apos;s motion. The image collection device will have its optical axis parallel to the ground and the camera may be configured to have a limited horizontal field of view.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The objects, features, and advantages of the present invention will be apparent from the following detailed description of the preferred embodiment of the invention with references to the following drawings. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a photograph showing a freeway overpass with overhead signs; </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a flowchart depicting the overall overhead object determination method; </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a photograph showing sample images from a video sequence, and showing the center windows selected for horizontal edge extraction; </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a depiction showing extracted horizontal edge images and their projections as graph plots from the image in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a graphical example of a sequence of horizontal edge projections with the track for a horizontal edge traced; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is an illustration of vertical motion estimation using a one-dimensional optical flow method; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a graphical depiction of examples of vertical image motion estimation; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference><highlight><italic>a </italic></highlight>is a graphical depiction of a sample horizontal edge projection map; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference><highlight><italic>b </italic></highlight>is the horizontal edge projection map shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference><highlight><italic>a </italic></highlight>after vertical motion compensation; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference><highlight><italic>c </italic></highlight>is a graphical representation showing the horizontal edge projection tracks extracted from the horizontal edge projection map corresponding to the horizontal projection map shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference><highlight><italic>b; </italic></highlight></paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a flowchart depicting the horizontal edge projection tracking method; and </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a sample horizontal edge projection track and the re-projected trajectory using the estimated object parameters.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The present invention provides a method and apparatus for reducing the false alarm rate associated with vehicle collision warning systems. The invention augments radar-based collision warning systems, and is configured to reduce the false alarm rate associated with conventional systems&apos; misidentification of overhead objects as collision threats. The following description, taken in conjunction with the referenced drawings, is presented to enable one of ordinary skill in the art to make and use the invention and to incorporate it in the context of particular applications. Various modifications, as well as a variety of uses in different applications, will be readily apparent to those skilled in the art, and the general principles defined herein may be applied to a wide range of embodiments. Thus, the present invention is not intended to be limited to the embodiments presented, but is to be accorded the widest scope consistent with the principles and novel features disclosed herein. Furthermore it should be noted that unless explicitly stated otherwise, the figures included herein are illustrated diagrammatically and without any specific scale, as they are provided as qualitative illustrations of the concept of the present invention. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The invention reduces the frequency of false radar alarms that result from overhead objects being mistaken for collision hazards. One embodiment of the present invention utilizes an in-vehicle video camera to capture video images. The captured images are then processed, and certain features are extracted. The extracted features correspond to stationary and overhead objects as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The bridge <highlight><bold>100</bold></highlight> and sign <highlight><bold>102</bold></highlight> are both identified as overhead objects. The invention matches the bridge <highlight><bold>100</bold></highlight> and sign <highlight><bold>102</bold></highlight> to the input from a radar sensor that reports the position and relative motion of objects. When the matching operation is finished, the radar and video inputs of the bridge <highlight><bold>100</bold></highlight> and sign <highlight><bold>102</bold></highlight> are unified. By correctly matching the overhead objects sensed by the radar and video camera, the proximity, identity and relative speed can be ascertained. Once overhead objects have been identified they can be isolated, and are not considered for collision avoidance purposes; thus reducing the incidence of false alarms. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Two observations are made when analyzing images to determine if overhead objects are present. The first observation is that the overhead objects contain significant horizontal line segments. The second observation is that the horizontal line segments follow well-defined trajectories in a video image sequence. As the vehicle travels, the image of the horizontal line segments from an overhead object moves in a prescribed way determined by a plurality of factors including: The height of the corresponding overhead object, the distance from the host vehicle to the object, the speed of the host vehicle, and the camera set-up. These factors may serve as the basis that the invention uses to detect and track significant horizontal edges in captured video images. The invention utilizes tracked horizontal edges to estimate distance and height of the underlying overhead objects. From the distance and height of the objects it is possible to determine if the tracked horizontal edges are due to an overhead object, and if the object is at a distance consistent with one or more radar reports of fixed objects. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> One embodiment of the present invention utilizes horizontal edge projections and estimates the overhead object&apos;s distance and height. The horizontal edge projection is robust to noise in the edge identification process, since it tolerates missing edge pixels. Using horizontal edge projection also reduces the search space for feature matching from the original two-dimensional search down to a one-dimensional search. The resulting search is a simpler tracking algorithm, which allows for faster computation and requires fewer resources. The approach of the present invention requires no special hardware and can share the video output from a lane-sensing camera. Additionally it can share computational resources with other existing in-vehicle modules. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> A flowchart of the method utilized in identifying overhead objects is presented in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. An image sequence is inputted <highlight><bold>200</bold></highlight> from the camera and vertical motion is estimated <highlight><bold>202</bold></highlight>. Windowed horizontal edges <highlight><bold>204</bold></highlight> are extracted from the inputted image sequence <highlight><bold>200</bold></highlight> and the horizontal edges are projected <highlight><bold>206</bold></highlight>. The horizontal edge projection (HEP) <highlight><bold>206</bold></highlight> and the vertical motion estimation <highlight><bold>202</bold></highlight> are combined in a HEP segmenting and tracking element <highlight><bold>208</bold></highlight> and forwarded to an object parameter estimation element <highlight><bold>210</bold></highlight> where the object&apos;s distance and height are estimated. This data is combined in a fusion with the radar detection element <highlight><bold>212</bold></highlight>. By correctly matching the overhead objects sensed by the radar and video camera, the overhead objects can be identified, isolated, and ignored for collision avoidance purposes. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> In another embodiment of the present invention, a vehicle is equipped with a video camera, optionally mounted at the rear-view mirror and pointing forward. The camera should be mounted along the vehicle&apos;s longitudinal axis, and have an optical axis parallel to the ground surface in which the vehicle travels. The acquisition of the images from the video camera should be at a full video rate of 30 frames/second, and provide the system with images of approximately 320 pixels wide by approximately 240 pixels high. However different capture rates and resolutions may be selected for specific applications. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> In order to detect and track the overhead objects, a windowed horizontal edge projection is constructed for each image in the image sequence. The procedure for horizontal edge projection construction includes the following steps: </paragraph>
<paragraph id="P-0030" lvl="2"><number>&lsqb;0030&rsqb;</number> 1. An image is received from a camera as illustrated in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. The image <highlight><bold>300</bold></highlight> is separated into a plurality of windows. The center window <highlight><bold>302</bold></highlight> is isolated and tracked. </paragraph>
<paragraph id="P-0031" lvl="2"><number>&lsqb;0031&rsqb;</number> 2. In <cross-reference target="DRAWINGS">FIG. 4</cross-reference> the horizontal edges <highlight><bold>400</bold></highlight> are extracted from the image window. </paragraph>
<paragraph id="P-0032" lvl="2"><number>&lsqb;0032&rsqb;</number> 3. The edge pixels are then projected in each row of the image window by counting the number of edge pixels in that row to get a horizontal edge projection vector <highlight><bold>402</bold></highlight>. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> In step 1 above, the window can optionally be shifted off-center to more precisely provide relevant information regarding the vehicle&apos;s anticipated trajectory. The shifting protocol may rely on lane tracking technology, vehicle yaw rate, or other factors. Further, in step 2 above, the edge gradient in the vertical direction can be computed and then projected. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 5 a</cross-reference> sequence of horizontal edge projections <highlight><bold>500</bold></highlight> are shown as graph plots adjoined in the order of the image sequence. The peaks <highlight><bold>502</bold></highlight> in the horizontal edge projection represent the horizon line segments, and the trajectories of the peaks form horizontal edge projection tracks <highlight><bold>504</bold></highlight>. The rationale for using the projection <highlight><bold>500</bold></highlight> of the horizontal edges is that it makes tracking the edges <highlight><bold>504</bold></highlight> easier. The projection reduces the tracking search space from two-dimensions to one-dimension. Additionally, the projections <highlight><bold>500</bold></highlight> will also be more robust than the edge segments since the projections <highlight><bold>500</bold></highlight> will tolerate missing edge pixels. Furthermore, the projection operation is much simpler than linking the edge pixels into edge segments and further fitting into line segments, which is a necessary step for tracking when working in two-dimensions. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The fundamental assumption for using horizontal edge projection as a representation for overhead object identification is that the edges are horizontal. This is mostly true, but occasionally the horizontal edges of the overhead objects can be slightly tilted, or the overhead object may be slightly curved. This results in a reduction of the horizontal edge projection peaks relative the noise floor because the edge pixels from a single tilted line segment cover more than one image row. Therefore they contribute to multiple elements of the horizontal edge projection. To alleviate this problem a horizontally centered window <highlight><bold>300</bold></highlight> of the image as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is used for edge extraction as in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. Windowing reduces the extent of the line segments being projected <highlight><bold>400</bold></highlight> into the horizontal edge projection <highlight><bold>402</bold></highlight>, thereby reducing the footprint of a tilted line in the horizontal edge projection so that individual peaks are still separable. Two other benefits of windowing should also be noted. The first is the elimination of background noise in horizontal edge projection from the roadside clutter. The second is the reduction in computation resources that are required. Possible extensions to this approach include orienting the projection in which the edge pixels are projected to include not only the direction parallel to the image rows, but also directions at several pre-set angles to the image rows. These directions can be determined via experiments or by calculating the expected tilt angle of the horizontal line segments of commonly observed overhead objects. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> The width of the image window <highlight><bold>300</bold></highlight> is currently set at about 50 pixels. In addition, the window <highlight><bold>300</bold></highlight> can be adjusted either left or right based on the vehicle heading if lane information is provided, or if the position of the steering wheel is provided. When using such an adjusted window the system can concentrate on the portion of the image in the path of the host vehicle. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> Vertical motion of the image can lead to tracking difficulty and therefore must be considered. Ideally the image&apos;s vertical motion can be compensated for using either conventional approaches or those described herein. The vertical motion in the image can be caused by the vehicle traveling on an uneven road. Such a road may cause the camera to move somewhat randomly in the vertical direction. The result of this image motion is significant, in that it will adversely affect the accuracy of an object parameter estimation algorithm. The vertical image motion estimation is based on a one dimensional optical flow concept. A number of equally spaced vertical slices from each image are taken. In one embodiment, 10 slices are taken at columns 96, 112, 128, 144, 160, 192, 208, and 224 for the image size of 240 rows by 320 columns. The vertical motion of the images is then analyzed by developing a one-dimensional optical flow of the image intensity profile for each slice across consecutive image frames, as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. The one-dimensional optical flow between two consecutive image frames is summarized as follows: </paragraph>
<paragraph id="P-0038" lvl="2"><number>&lsqb;0038&rsqb;</number> 1. Find the one-dimensional edge of slice j for image frame i and i&plus;1 by convoluting them with a kernel of &lsqb;1, 1, 0, &minus;1, &minus;1&rsqb;; </paragraph>
<paragraph id="P-0039" lvl="2"><number>&lsqb;0039&rsqb;</number> 2. Find the minimum (negative extreme) <highlight><bold>602</bold></highlight> of the one dimensional edge of slice j for image i and record its location as g(j, i) (image row number); </paragraph>
<paragraph id="P-0040" lvl="2"><number>&lsqb;0040&rsqb;</number> 3. Find the minimum (negative extreme) <highlight><bold>604</bold></highlight> of the one-dimensional edge of slice j for image i&plus;1 within a window of 3 pixels of g(j, i) (i.e., &lsqb;&minus;1, 1&rsqb; of g(j, i)) and record this location as g(j, i&plus;1). The relative movement of the image from frame i to i&plus;1 at slide j is equal to (g(j, i&plus;1)&minus;g(j, i)); </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> When the motion estimates from all slices are received, the motion between the two image frames is computed as the average of the motion from all image slices. The minimum <highlight><bold>600</bold></highlight> of the one dimensional edge filter corresponds to the real horizon. The real horizon is the transition between the sky <highlight><bold>602</bold></highlight> (bright) and the land <highlight><bold>604</bold></highlight> (dark). The real horizon is a very reliable feature to track for motion estimation. To make the system more robust, only rows 96 to 130 of each slice are used for the one dimensional optical flow analysis. These rows correspond to the region where the horizon is likely to occur. If the system fails to find a match in step 3 above, the estimate for that slice is excluded from the averaging computation at the end. <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows an example of the estimated motion from an image sequence. Plot <highlight><bold>700</bold></highlight> shows the motion between the adjacent image frames, and plot <highlight><bold>702</bold></highlight> shows the relative displacement of the images relative to the first frame of the sequence. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The waving pattern of the horizontal edge projection map in <cross-reference target="DRAWINGS">FIG. 8</cross-reference><highlight><italic>a </italic></highlight>is due to the vertical motion of the image. <cross-reference target="DRAWINGS">FIG. 8</cross-reference><highlight><italic>b </italic></highlight>show examples of horizontal edge projection maps with vertical motion compensation, and <cross-reference target="DRAWINGS">FIG. 8</cross-reference><highlight><italic>c </italic></highlight>shows the horizontal edge projection tracks corresponding to the motion compensated horizontal edge projection map of <cross-reference target="DRAWINGS">FIG. 8</cross-reference><highlight><italic>b</italic></highlight>. Significant horizontal edges representing the top and bottom of the overhead objects have been tracked from the beginning of the sequence in <cross-reference target="DRAWINGS">FIG. 8</cross-reference><highlight><italic>c. </italic></highlight></paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> Due to the effect of averaging, the motion computed using the technique presented above has a higher resolution than the pixel resolution of the image. This makes it possible to achieve sub-pixel resolution in horizontal edge projection tracking, and helps reduce the image quantization effects associated with the horizontal edge projection, which is important in the estimation of the object parameters. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The purpose of horizontal edge projection tracking in <cross-reference target="DRAWINGS">FIG. 8</cross-reference><highlight><italic>c </italic></highlight>is to describe quantitatively the location of horizontal edges present in a horizontal edge projection sequence <highlight><bold>500</bold></highlight>. A horizontal edge projection track <highlight><bold>504</bold></highlight> is a sequence of points corresponding to a single horizontal edge in the horizontal edge projection <highlight><bold>500</bold></highlight>. The location of the track points and the vehicle position form the basis for distance and height estimation of the overhead objects. The task of horizontal edge projection tracking includes segmentation and tracking. Segmentation is to identify the peak locations in the horizontal edge projection, which correspond to significant horizontal edges. This is done by thresholding the horizontal edge projection and locating the local maximum of the result. Tracking is the association of the segmented horizontal edge projections from one frame to the next. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The flowchart used in horizontal edge projection tracking, shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, illustrates how a set of existing tracks is extended from one frame to the next. The horizontal edge projection tracks, or tracked horizontal edge projections, are built by executing the steps frame after frame as new images are captured. The process begins with a horizontal edge projection input <highlight><bold>900</bold></highlight>. Each horizontal edge projection comes as a vector containing nonnegative numbers indexed by the image row number. The next element thresholds the horizontal edge projection with T_high <highlight><bold>902</bold></highlight> (in this example T_high&equals;15). The horizontal edge projection and the vector elements with smaller values than the threshold value are set to zero. The rest are left unchanged. The local maximum <highlight><bold>904</bold></highlight> is found, a point in the vector value that is larger than those held by both neighbors of the element in the resulting vector. The resulting local maximum <highlight><bold>904</bold></highlight> becomes the track candidates for new and continuing horizontal edge projection tracks. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The threshold is currently set empirically, and its value should be related to the width of the window <highlight><bold>300</bold></highlight> used for constructing the horizontal edge projection (in this example 50 pixels). Since the maximum value of T_high cannot exceed the window width, T_high acts as a threshold. There is a complementary threshold called T_low (in this example T_low&equals;10), which is the lower limit allowed for a current track&apos;s horizontal edge projection value below which the track can be terminated. This arrangement is the same as the hysteresis approach used in many edge identification methods. Once the horizontal edge projection segmentation for the current frame is completed, existing tracks can be extended to the current frame by matching. Before an existing track from a previous frame <highlight><bold>906</bold></highlight> can be matched to the next track candidates <highlight><bold>904</bold></highlight>, track prediction <highlight><bold>910</bold></highlight> and motion compensation <highlight><bold>912</bold></highlight> are carried out. Track prediction <highlight><bold>910</bold></highlight> uses the history, up to the last frame of the current track, to predict the location of the track in the current frame. Motion compensation <highlight><bold>912</bold></highlight> corrects the predicted location by incorporating the estimated vertical motion <highlight><bold>914</bold></highlight> for the current frame. These steps are important for obtaining accurate tracks from the horizontal edge projections. The absolute change in location of a horizontal line between two consecutive frames due to image vertical motion can be up to 1 pixel, and the horizontal lines in the image can be as close together as 2 pixels, separated by one pixel. Therefore accurate track prediction <highlight><bold>910</bold></highlight> and motion compensation <highlight><bold>912</bold></highlight> are required. Otherwise, track crossing will occur which will adversely affect the height and distance estimation. The track prediction method <highlight><bold>910</bold></highlight> uses a linear predictor. Ten previous points, on the track immediately before the current frame, are used and a line using a least-squares method is fitted. The track prediction <highlight><bold>910</bold></highlight> is computed using extrapolation based on the fitted line. Alternative predictors can also be used, such as an imaging model-based method. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Motion compensation <highlight><bold>912</bold></highlight> applies the estimated vertical motion <highlight><bold>914</bold></highlight> to the predicted track location <highlight><bold>910</bold></highlight> to further improve the prediction. Note that both the predicted track location <highlight><bold>910</bold></highlight> and the motion estimate <highlight><bold>914</bold></highlight> are in floating-point format; therefore accuracy is not lost in this process. This approach is preferred to performing motion compensation <highlight><bold>912</bold></highlight> on the horizontal edge projection, which would cause the loss of the sub-pixel resolution potential of the new track point. When a match is found, the motion estimate will be applied to the new track point. This will allow the sub-pixel resolution potential to exist in the resulting track. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> The predicted track location is matched to the candidate tracks <highlight><bold>916</bold></highlight>. Track matching refers to the association of an existing track to one of the track candidates in the current horizontal edge projection. If a match is found <highlight><bold>918</bold></highlight> then motion compensation is applied to the matched candidate track <highlight><bold>926</bold></highlight>. If no match is found the horizontal edge projection is searched for a local maximum <highlight><bold>920</bold></highlight>. There are two phases of matching, the first phase is the matching to the segmented horizontal edge projection, and the second phase is to the original horizontal edge projection <highlight><bold>900</bold></highlight>. The segmented horizontal edge projection represents the local maximum in the horizontal edge projection input <highlight><bold>900</bold></highlight> with values exceeding the high threshold. Matching the segmented horizontal edge projection is the first attempt at finding the continuation of a current track. This matching is done by searching the predicted location of a current track in the segmented horizontal edge projection after the motion compensation is applied <highlight><bold>912</bold></highlight>. If this matching <highlight><bold>918</bold></highlight> fails, the horizontal edge projection is searched for a local maximum <highlight><bold>920</bold></highlight>. The local maximum <highlight><bold>920</bold></highlight> is searched for in the same search window as the one in the first phase, both in location and window size. If a local maximum <highlight><bold>922</bold></highlight> is found and the value of the horizontal edge projection at the location exceeds T_low <highlight><bold>924</bold></highlight>, it is declared that a match is found and motion compensation is applied to the matched candidate track <highlight><bold>926</bold></highlight>. If no match is found for a current track in either the segmented horizontal edge projection or the original horizontal edge projection, the track will be allowed to coast for a pre-specified number of frames. If the coast limit is exceeded <highlight><bold>928</bold></highlight> the track is terminated <highlight><bold>934</bold></highlight> and the track record is updated <highlight><bold>932</bold></highlight> to reflect the termination. Otherwise the coasting track <highlight><bold>930</bold></highlight> updates the track record <highlight><bold>932</bold></highlight>. There is a limit on how many frames a track is allowed to be in coasting status. In this example the coasting limit was set at 2 frames. That is, if a match is not found for more that two frames, the track would be terminated <highlight><bold>934</bold></highlight>. In addition, new tracks, in this example those that have a current track length of 1, are not allowed to coast since they are more likely to be spontaneous noisy spikes in the horizontal edge projection, rather than from real overhead objects. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The updated track record <highlight><bold>932</bold></highlight> is searched for any unmatched existing tracks <highlight><bold>936</bold></highlight>, if there are unmatched existing tracks <highlight><bold>936</bold></highlight> then the invention gets the next track <highlight><bold>908</bold></highlight>. Conversely, if there are no unmatched existing tracks <highlight><bold>936</bold></highlight> and there are more unmatched candidates <highlight><bold>938</bold></highlight>, new tracks are created <highlight><bold>940</bold></highlight>, sorted <highlight><bold>942</bold></highlight>, and the process is finished. If there are no more unmatched candidates <highlight><bold>938</bold></highlight> the tracks are sorted <highlight><bold>942</bold></highlight> and the process is finished. Once all current tracks have been considered for possible continuation through matching, if there are any candidates left in the segmented horizontal edge projection, new tracks are initiated at these locations. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> With the exception of coasting tracks, the location for the continuing and the new tracks in the current frame is their location in the horizontal edge projection, compensated by the motion estimated <highlight><bold>914</bold></highlight> for the current frame. This allows the track locations to retain the sub-pixel resolution capability promised by the motion estimated. In addition, a &lsquo;track-point strength&rsquo; is defined for the point as the value of the original horizontal edge projection at the location where the match is found. All tracks, new or continuing, will be updated to include the new track point. A track record contains a vector of floating-point numbers in image row coordinates representing the location of the track over a number of consecutive image frames. The track record also contains a companion vector of traveled distance since the beginning of the track, which can be computed by integration of the speed of the vehicle over the elapsed time. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> All of the updated tracks are sorted <highlight><bold>942</bold></highlight> based on the criteria set forth below. Preference is given to long and strong tracks, so that real tracks have a better chance to survive and noisy tracks can be suppressed. This is achieved by selecting the tracks in a pre-sorted order when considering the next current tracks <highlight><bold>908</bold></highlight> for continuation during the matching phase. The sorting <highlight><bold>942</bold></highlight> is done based on the following criteria in the order given: </paragraph>
<paragraph id="P-0052" lvl="2"><number>&lsqb;0052&rsqb;</number> 1. The length of the track in terms of the number of image frames the track spans; </paragraph>
<paragraph id="P-0053" lvl="2"><number>&lsqb;0053&rsqb;</number> 2. The strength of the track measured by the average strength of the track points; </paragraph>
<paragraph id="P-0054" lvl="2"><number>&lsqb;0054&rsqb;</number> 3. The status of the track in the order of current, coast, and new track. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Once a horizontal edge projection track is established, the underlying object&apos;s height and the distance to the host vehicle can be estimated. A method to achieve this has been developed. It is required that the camera&apos;s focal length, f, be known. The assumptions for the method are: </paragraph>
<paragraph id="P-0056" lvl="2"><number>&lsqb;0056&rsqb;</number> 1. The vehicle has been traveling substantially straight on a mostly flat surface, </paragraph>
<paragraph id="P-0057" lvl="2"><number>&lsqb;0057&rsqb;</number> 2. The camera&apos;s optical axis is parallel to the ground plane in which the vehicle travels, and passes through the center of the image. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> To estimate the object height and distance, the following set of equations are established for the points in a horizontal edge projection track using a one-dimensional imaging model:  
<math-cwu id="MATH-US-00001">
<number>1</number>
<math>
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <msub>
            <mi>y</mi>
            <mi>i</mi>
          </msub>
          <mo>=</mo>
          <mrow>
            <mrow>
              <mfrac>
                <mi>fH</mi>
                <msub>
                  <mi>Z</mi>
                  <mi>i</mi>
                </msub>
              </mfrac>
              <mo>&it;</mo>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mi>i</mi>
            </mrow>
            <mo>=</mo>
            <mn>0</mn>
          </mrow>
        </mrow>
        <mo>,</mo>
        <mi>&hellip;</mi>
        <mo>&it;</mo>
        <mstyle>
          <mtext>&emsp;</mtext>
        </mstyle>
        <mo>,</mo>
        <mrow>
          <mi>N</mi>
          <mo>-</mo>
          <mn>1</mn>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>1</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
<mathematica-file id="MATHEMATICA-00001" file="US20030002713A1-20030102-M00001.NB"/>
<image id="EMI-M00001" wi="216.027" he="18.96615" file="US20030002713A1-20030102-M00001.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0059" lvl="7"><number>&lsqb;0059&rsqb;</number> Where y<highlight><subscript>i </subscript></highlight>is the track point&apos;s Y coordinate (the Y axis points up) at frame i, H is the underlying object&apos;s height above the camera, Z<highlight><subscript>i </subscript></highlight>is the distance of the object to the host vehicle at frame i, and N is the number of points in the track, or the length of the track. Letting r<highlight><subscript>i </subscript></highlight>be the track location for frame i, y<highlight><subscript>i </subscript></highlight>can be written as: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>y</italic></highlight><highlight><subscript>1</subscript></highlight><highlight><italic>&equals;Y</italic></highlight><highlight><subscript>0</subscript></highlight><highlight><italic>&minus;r</italic></highlight><highlight><subscript>i</subscript></highlight>&emsp;&emsp;(2) </in-line-formula></paragraph>
<paragraph id="P-0060" lvl="7"><number>&lsqb;0060&rsqb;</number> Where Y<highlight><subscript>0 </subscript></highlight>is the reference horizon in the image. It usually corresponds to the middle image row and can be obtained through calibration. Let d<highlight><subscript>i </subscript></highlight>be the distance the host vehicle has traveled from frame 0 (d<highlight><subscript>0</subscript></highlight>&equals;0). Z<highlight><subscript>i </subscript></highlight>can be expressed in terms of d<highlight><subscript>i </subscript></highlight>and D, the distance of the host vehicle at frame 0 to the object as: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>Z</italic></highlight><highlight><subscript>i</subscript></highlight><highlight><italic>&equals;D&minus;d</italic></highlight><highlight><subscript>i</subscript></highlight>&emsp;&emsp;(3) </in-line-formula></paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Substituting equations (2) and (3) into equation (1): </paragraph>
<paragraph lvl="0"><in-line-formula>(<highlight><italic>Y</italic></highlight><highlight><subscript>0&minus;</subscript></highlight><highlight><italic>r</italic></highlight><highlight><subscript>i</subscript></highlight>)<highlight><italic>D&minus;fH</italic></highlight>&equals;(<highlight><italic>Y</italic></highlight><highlight><subscript>0</subscript></highlight><highlight><italic>&minus;r</italic></highlight><highlight><subscript>i</subscript></highlight>)<highlight><italic>d</italic></highlight><highlight><subscript>i</subscript></highlight><highlight><italic>, i&equals;</italic></highlight>0, . . . ,<highlight><italic>N&minus;</italic></highlight>1&emsp;&emsp;(4) </in-line-formula></paragraph>
<paragraph id="P-0062" lvl="7"><number>&lsqb;0062&rsqb;</number> Or:  
<math-cwu id="MATH-US-00002">
<number>2</number>
<math>
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <mi>A</mi>
          <mo>&af;</mo>
          <mrow>
            <mo>[</mo>
            <mtable>
              <mtr>
                <mtd>
                  <mi>D</mi>
                </mtd>
              </mtr>
              <mtr>
                <mtd>
                  <mi>H</mi>
                </mtd>
              </mtr>
            </mtable>
            <mo>]</mo>
          </mrow>
        </mrow>
        <mo>=</mo>
        <mi>B</mi>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>5</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
<mathematica-file id="MATHEMATICA-00002" file="US20030002713A1-20030102-M00002.NB"/>
<image id="EMI-M00002" wi="216.027" he="21.12075" file="US20030002713A1-20030102-M00002.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0063" lvl="7"><number>&lsqb;0063&rsqb;</number> Where the matrix A (N by 2) and the column vector B (size N) are made up of coefficients in equation (4): </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>A</italic></highlight>&equals;&lsqb;(<highlight><italic>a</italic></highlight><highlight><subscript>0</subscript></highlight>),(<highlight><italic>a</italic></highlight><highlight><subscript>1</subscript></highlight>), . . . ,(<highlight><italic><highlight><uline>a</uline></highlight></italic></highlight><highlight><subscript>n&minus;1</subscript></highlight>)&rsqb;<highlight><superscript>T</superscript></highlight><highlight><italic>a</italic></highlight><highlight><subscript>i</subscript></highlight><highlight><italic>&equals;&lsqb;Y</italic></highlight><highlight><subscript>0</subscript></highlight><highlight><italic>&minus;r</italic></highlight><highlight><subscript>i</subscript></highlight><highlight><italic>, &minus;f&rsqb;</italic></highlight><highlight><superscript>T</superscript></highlight><highlight><italic>&equals;&lsqb;y</italic></highlight><highlight><subscript>i</subscript></highlight><highlight><italic>, &minus;f&rsqb;</italic></highlight><highlight><superscript>T</superscript></highlight><highlight><italic>, i&equals;</italic></highlight>0, . . . ,<highlight><italic>N&minus;</italic></highlight>1 </in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>B&equals;&lsqb;b</italic></highlight><highlight><subscript>0</subscript></highlight><highlight><italic>,b</italic></highlight><highlight><subscript>1</subscript></highlight><highlight><italic>, . . . ,b</italic></highlight><highlight><subscript>n&minus;1</subscript></highlight>&rsqb;<highlight><superscript>&tgr;</superscript></highlight><highlight><italic> b</italic></highlight><highlight><subscript>i</subscript></highlight>&equals;(<highlight><italic>Y</italic></highlight><highlight><subscript>0</subscript></highlight><highlight><italic>&minus;r</italic></highlight><highlight><subscript>i</subscript></highlight>)<highlight><italic>d</italic></highlight><highlight><subscript>i</subscript></highlight><highlight><italic>&equals;y</italic></highlight><highlight><subscript>i</subscript></highlight><highlight><italic>d</italic></highlight><highlight><subscript>i</subscript></highlight><highlight><italic>, i&equals;</italic></highlight>0, . . . ,<highlight><italic>N&minus;</italic></highlight>1&emsp;&emsp;(6) </in-line-formula></paragraph>
<paragraph id="P-0064" lvl="7"><number>&lsqb;0064&rsqb;</number> Where Y<highlight><subscript>0 </subscript></highlight>is given, and since r<highlight><subscript>i </subscript></highlight>the track location, and d<highlight><subscript>i </subscript></highlight>the travel distance, are known, then it is possible to solve for D and H using a least-squares method for the over-determined system for N&gt;2: 
<math-cwu id="MATH-US-00003">
<number>3</number>
<math>
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <mo>[</mo>
          <mtable>
            <mtr>
              <mtd>
                <mover>
                  <mi>D</mi>
                  <mo>&Cap;</mo>
                </mover>
              </mtd>
            </mtr>
            <mtr>
              <mtd>
                <mover>
                  <mi>H</mi>
                  <mo>&Cap;</mo>
                </mover>
              </mtd>
            </mtr>
          </mtable>
          <mo>]</mo>
        </mrow>
        <mo>=</mo>
        <mrow>
          <msup>
            <mrow>
              <mo>(</mo>
              <mrow>
                <msup>
                  <mi>A</mi>
                  <mi>T</mi>
                </msup>
                <mo>&it;</mo>
                <mi>A</mi>
              </mrow>
              <mo>)</mo>
            </mrow>
            <mrow>
              <mo>-</mo>
              <mn>1</mn>
            </mrow>
          </msup>
          <mo>&it;</mo>
          <msup>
            <mi>A</mi>
            <mi>T</mi>
          </msup>
          <mo>&it;</mo>
          <mi>B</mi>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>7</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
<mathematica-file id="MATHEMATICA-00003" file="US20030002713A1-20030102-M00003.NB"/>
<image id="EMI-M00003" wi="216.027" he="29.0304" file="US20030002713A1-20030102-M00003.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> As a measure of the quality of the parameter estimation, an error is defined:  
<math-cwu id="MATH-US-00004">
<number>4</number>
<math>
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <mi>e</mi>
          <mo>=</mo>
          <msqrt>
            <mrow>
              <mfrac>
                <mn>1</mn>
                <mi>N</mi>
              </mfrac>
              <mo>&it;</mo>
              <mrow>
                <mo>&Sum;</mo>
                <mstyle>
                  <mtext>&emsp;</mtext>
                </mstyle>
                <mo>&it;</mo>
                <msubsup>
                  <mi>e</mi>
                  <mi>i</mi>
                  <mn>2</mn>
                </msubsup>
              </mrow>
            </mrow>
          </msqrt>
        </mrow>
        <mo>,</mo>
        <mrow>
          <msub>
            <mi>e</mi>
            <mi>i</mi>
          </msub>
          <mo>=</mo>
          <mrow>
            <mrow>
              <msub>
                <mi>y</mi>
                <mi>i</mi>
              </msub>
              <mo>-</mo>
              <mfrac>
                <mi>fH</mi>
                <msub>
                  <mi>Z</mi>
                  <mi>i</mi>
                </msub>
              </mfrac>
            </mrow>
            <mo>=</mo>
            <mrow>
              <msub>
                <mi>Y</mi>
                <mn>0</mn>
              </msub>
              <mo>-</mo>
              <msub>
                <mi>r</mi>
                <mi>i</mi>
              </msub>
              <mo>-</mo>
              <mfrac>
                <mrow>
                  <mi>f</mi>
                  <mo>&it;</mo>
                  <mover>
                    <mi>H</mi>
                    <mo>&Cap;</mo>
                  </mover>
                </mrow>
                <mrow>
                  <mover>
                    <mi>D</mi>
                    <mo>&Cap;</mo>
                  </mover>
                  <mo>-</mo>
                  <msub>
                    <mi>d</mi>
                    <mi>i</mi>
                  </msub>
                </mrow>
              </mfrac>
            </mrow>
          </mrow>
        </mrow>
        <mo>,</mo>
        <mrow>
          <mi>i</mi>
          <mo>=</mo>
          <mn>0</mn>
        </mrow>
        <mo>,</mo>
        <mi>&hellip;</mi>
        <mo>&it;</mo>
        <mstyle>
          <mtext>&emsp;</mtext>
        </mstyle>
        <mo>,</mo>
        <mrow>
          <mi>N</mi>
          <mo>-</mo>
          <mn>1</mn>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>8</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
<mathematica-file id="MATHEMATICA-00004" file="US20030002713A1-20030102-M00004.NB"/>
<image id="EMI-M00004" wi="216.027" he="27.13095" file="US20030002713A1-20030102-M00004.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0066" lvl="7"><number>&lsqb;0066&rsqb;</number> where e<highlight><subscript>i </subscript></highlight>is the error of the track location (y<highlight><subscript>i</subscript></highlight>) with respect to the re-projected location (f&Hcirc;/({circumflex over (D)}&minus;d<highlight><subscript>i</subscript></highlight>)) using the estimated parameters. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> Equation 7 gives very good results when the amount of noise is reasonable, as shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>. In this example, d<highlight><subscript>i</subscript></highlight>, the distances that the host vehicle has traveled since the beginning of the track, is computed by integrating the vehicle speed over the time span of the track. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> As the system identifies and tracks the horizontal line segments as discussed in previous sections, the object parameters need to be estimated to determine whether the horizontal lines do indeed come from an overhead object. The track information is substituted into the equations developed above to find the distance and height of the underlying object. A number of reasons can cause this approach to fail. The main issue is the noise in the estimated track position. Inaccuracies in vertical motion estimation can also cause the parameter estimation to provide incorrect results. Constraints have been developed to help ensure the results of the parameter estimation to be more robust and reliable. The constraints include using tracked horizontal edge projections near and above the reference horizon for parameter estimation. Doing so eliminates most of the noisy tracks caused by the real horizon, shadows cast on the ground by overhead objects, and the vehicles on the road. This window may be set to be from row 1 to 140, the bottom of which corresponds to a nominal Y<highlight><subscript>0 </subscript></highlight>of the 120 plus 20 pixels of margin for an image of 240 rows. A second constraint includes utilizing a lower limit to set the number of frames, and the tracked horizontal edge projection has a duration such that the tracked horizontal edge projection can be used for parameter estimation. Shorter tracks are not considered established, and therefore are deemed less reliable, in this example this threshold is set to 20 frames. A third constraint requires that tracks have sufficient apparent change or movement in the Y direction. When an object is far away from the vehicle, the resulting track&apos;s position does not change significantly over a relatively long sequence of images. These tracks will be relatively flat, and impose little constraint to the parameter estimation. As a result, the quality of parameter estimation is very poor and the results are often dominated by the noise present in the track. Ignoring such tracks is safe since the object is far away. To enforce this requirement, the difference between the locations of the last and the first track points is checked to insure that this difference exceeds a set threshold. In one example this threshold was set at 10 pixels. A fourth constraint is an estimated parameter abnormality test. For example the results of distance and height are checked for values less than zero, and the corresponding tracks are ignored. For the remaining non-zero tracks, the standard deviation of the error vector &ldquo;e&rdquo; in equation (8) is checked to see if it is a reasonably small value. This will ensure the estimated parameters fit well within the track points. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> The overhead object identification is developed to help reduce false alarms from a radar sensor for collision warning purposes. Once the parameters of the horizontal edge projection tracks have been estimated, the objects that correspond to the individual overhead objects will be grouped based on the estimated distance from each track. Within such a group, the lowest track, which is often the one with the smallest estimated height value, determines the lower reach of the object. This track information, combined with the results from the vehicle radar system, will help determine if the reported objects come from an overhead object, or a stopped vehicle. Once it is determined that the object is an overhead object, the information is combined with objects that are determined to be a potential threat by the radar. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> Radar reports, which include object distance, speed relative to the host vehicle, and object angle relative to the vehicle longitudinal axis, need to be separated into those that are a potential threat and those that are not. The radar reports are first classified into moving and fixed objects. This is achieved by comparing the measured object speed with that of the host vehicle. The fixed objects are further classified into in-lane versus out-of-lane objects by examining their lateral distance to the center of the host path. The objects that are within a certain range (in this example 6 meters, 3 meters on each side which is adjusted to adapt to actual lane width or other constraint) around the host path are considered in-lane. Only those radar reports that are classified as &ldquo;fixed&rdquo; and &ldquo;in-lane&rdquo; are compared with the overhead object information. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> The last step in the fusion process is comparing the distance of the overhead object with the fixed in-lane reports from the radar. The estimated distances from all overhead objects belonging to a group are averaged to find the average distance to the object. This distance is then compared with those of in-lane fixed objects. If the distance of an in-lane fixed object is within 10 meters of the averaged distance of the overhead object, the fixed in-lane radar report is classified as from the overhead object, and declared not a threat. Alternatively objects that are &ldquo;fixed&rdquo; and &ldquo;in-lane&rdquo; and have been determined not to be a non-hazardous overhead structure are considered a threat to the host. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A vision-based identification apparatus comprising: 
<claim-text>a host vehicle; </claim-text>
<claim-text>wherein said host vehicle is equipped with a plurality of elements including: 
<claim-text>i) an image capture device element; operatively interconnected with; </claim-text>
<claim-text>ii) an image signal processor element; which is operatively interconnected with; </claim-text>
<claim-text>iii) a matching processor element; which is also operatively interconnected with; </claim-text>
<claim-text>iv) a radar transceiver element; </claim-text>
</claim-text>
<claim-text>wherein the image capture device is configured to provide a time based sequence of data frames to the image signal processor and the image signal processor provides a processed image signal to the matching processor, and </claim-text>
<claim-text>wherein the data frames include a two dimensional array of pixel elements; and </claim-text>
<claim-text>wherein the radar transceiver is configured to provide a radar signal to the matching processor, and </claim-text>
<claim-text>wherein the matching processor combines the processed image signal and the radar signal, whereby the combined signals complement each other and allow the apparatus to effectively identify objects likely to be misidentified as collision threats. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the image capture device is a video camera responsive to electromagnetic radiation substantially in at least one of the regions selected from the group consisting of the visible region, and the infrared region. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the time based sequence of data frames include a plurality of data elements including at least one horizontal edge; and 
<claim-text>wherein each horizontal edge is identified based on a plurality of pixels having a substantially similar electromagnetic radiation response across a plurality of substantially horizontally aligned pixels; and </claim-text>
<claim-text>wherein the image signal processor extracts horizontal edges, from the time based sequence of data frames, in the form of edge pixels, and </claim-text>
<claim-text>wherein the edge pixels are projected in each row of the data frames, to get a horizontal edge projection in the sequence of data frames; and </claim-text>
<claim-text>wherein each horizontal edge projection may be tracked in time based on the horizontal edge projection&apos;s sequential appearance in the data frames. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein horizontal edge projections may be tracked in time by recording sequential data frames and matching horizontal edge projections in the sequential data frames while allowing, in the sequential data frames, for minor variations from, in at least one of the following categories: 
<claim-text>i. the relative position of the horizontal edge projection in the frame; </claim-text>
<claim-text>ii. the relative orientation of the horizontal edge projection in the frame; and </claim-text>
<claim-text>iii. the relative length of the horizontal edge projection; and </claim-text>
<claim-text>wherein at least one new tracking sequence can exist for horizontal edge projections that have predefined characteristics but were not present in prior data frames. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein allowed, minor variations in the sequential data frames provide data that allows for the determination and recordation of distance traveled since the beginning of each horizontal edge projection tracking sequence, and 
<claim-text>wherein horizontal edge projection tracks are sorted based on at least one of the following; 
<claim-text>i) the duration of image inputs that the horizontal edge projection track records, </claim-text>
<claim-text>ii) the average length of the horizontal edge projection, and </claim-text>
<claim-text>iii) whether the horizontal edge projection track at current image frame is in an updating mode, a non-updating mode, or is a new horizontal edge projection. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference> wherein the horizontal edge projection tracks are compared with predetermined parameters to determine if tracking possibilities exist; 
<claim-text>if tracking possibilities exist then the vision-based identification apparatus is utilized to track substantially horizontal edges through successive image inputs. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference> wherein the predetermined parameters include at least one of the following; 
<claim-text>i. the number of successive image inputs having horizontal edge projection tracks, and </claim-text>
<claim-text>ii. the magnitude of the horizontal edge projection tracks. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference> wherein if no tracking possibilities exist, tracking may still occur for a pre-specified number of image inputs without tracking possibilities before the tracked horizontal edge projection track is discarded. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein tracking of horizontal edge projection vectors is assisted by using at least one of the following: 
<claim-text>i) vertical motion compensation; </claim-text>
<claim-text>ii) forward motion compensation; </claim-text>
<claim-text>wherein vertical motion compensation helps predict where tracked horizontal edge projection vectors will be located on successive image inputs by compensating for vertical motion, and </claim-text>
<claim-text>wherein the forward motion compensation helps predict where tracked horizontal edge projection vectors will be located on successive image inputs by compensating for forward motion. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein forward motion compensation is achieved by using at least two previous points from the image input on the tracked horizontal edge projection tracks, immediately before the image input that requires forward motion compensation for tracked horizontal edge projection vectors location prediction. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein vertical motion is determined by: 
<claim-text>i. extracting vertical slices of the image input; and </claim-text>
<claim-text>ii. extracting one dimensional optical flow profiles of relative intensity of the vertical slices; and </claim-text>
<claim-text>iii. averaging the optical flow of all vertical slices. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference> wherein the vertical slices are extracted from each image input, and 
<claim-text>the relative extreme negative intensities relate to a change from light to dark of an apparent horizon. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference> wherein the extreme negative intensities&apos; average variation between rows on successive image inputs is an indicia of how an image collection device is moving vertically relative to at least one of the following: 
<claim-text>i. an apparent horizon; and </claim-text>
<claim-text>ii. a distinct feature in the distance. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the signal input from the image capture device to the image signal processor is a single horizontally centered window of the image signal input from the image capture device. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> wherein the single horizontally centered window is set at a predetermined width and a predetermined height and wherein the single horizontally centered window can be adjusted either left or right based on steering wheel position, or lane information. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> wherein successive horizontal edge projection tracks have a length in excess of a predetermined length. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The vision-based identification apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> wherein if no tracking possibilities exist, a tracking protocol will be allowed to remain in operation for a pre-specified number of image inputs without tracking possibilities before the tracked horizontal edge projection track is discarded. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A vision-based identification method comprising the steps of: 
<claim-text>providing a host vehicle; and </claim-text>
<claim-text>equipping the host vehicle with a plurality of elements including: 
<claim-text>i) an image capture device element; operatively interconnected with; </claim-text>
<claim-text>ii) an image signal processor element; which is operatively interconnected with; </claim-text>
<claim-text>iii) a matching processor element; which is also operatively interconnected with; </claim-text>
<claim-text>iv) a radar transceiver element; </claim-text>
</claim-text>
<claim-text>wherein the image capture device is configured to provide a time based sequence of data frames to the image signal processor and the image signal processor provides a processed image signal to the matching processor; and </claim-text>
<claim-text>wherein the data frames include a two dimensional array of pixel elements; and </claim-text>
<claim-text>wherein the radar transceiver is configured to provide a radar signal to the matching processor; and </claim-text>
<claim-text>wherein the matching processor combines the processed image signal and the radar signal, whereby the combined signals complement each other and allow for the effective identification of objects likely to be misidentified as collision threats. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A vision-based identification method as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein the image capture device element is a video camera responsive to electromagnetic radiation substantially in at least one of the regions selected from the group consisting of the visible region, and the infrared region. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A vision-based identification method as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein the time based sequence of data frames include a plurality of data elements including at least one horizontal edge; and 
<claim-text>wherein each horizontal edge is identified based on a plurality of pixels having a substantially similar electromagnetic radiation response across a plurality of substantially horizontally aligned pixels; and </claim-text>
<claim-text>wherein the image signal processor extracts horizontal edges, from the time based sequence of data frames, in the form of edge pixels; and </claim-text>
<claim-text>wherein the edge pixels are projected in each row of the data frames, to get a horizontal edge projection in the sequence of data frames; and </claim-text>
<claim-text>wherein each horizontal edge projection may be tracked in time based on the horizontal edge projection&apos;s sequential appearance in the data frames. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. A vision-based identification method as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein horizontal edge projections may be tracked in time by recording sequential data frames and matching horizontal edge projections in the sequential data frames while allowing, in the sequential data frames, for minor variations from, in at least one of the following categories: 
<claim-text>i. the relative position of the horizontal edge projection in the frame; </claim-text>
<claim-text>ii. the relative orientation of the horizontal edge projection in the frame; and </claim-text>
<claim-text>iii. the relative length of the horizontal edge projection; and </claim-text>
<claim-text>wherein at least one new tracking sequence can exist for horizontal edge projections that have predefined characteristics but were not present in prior data frames. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. A vision-based identification method as set forth <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein allowed, minor variations in the sequential data frames provide data that allows for the determination and recordation of distance traveled since the beginning of each horizontal edge projection tracking sequence, and 
<claim-text>wherein horizontal edge projection tracks are sorted based on at least one of the following; 
<claim-text>i. the duration of image inputs that the horizontal edge projection track records; </claim-text>
<claim-text>ii. the average length of the horizontal edge projection; and </claim-text>
<claim-text>iii. whether the horizontal edge projection track at current image frame is in an updating mode, a non-updating mode, or is a new horizontal edge projection. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A vision-based identification method as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> wherein the horizontal edge projection tracks are compared with predetermined parameters to determine if tracking possibilities exist; 
<claim-text>if tracking possibilities exist then the vision-based identification apparatus is utilized to track substantially horizontal edges through successive image inputs. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A vision-based identification method as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference> wherein the predetermined parameters include at least one of the following; 
<claim-text>i. the number of successive image inputs having horizontal edge projection tracks; and </claim-text>
<claim-text>ii. the magnitude of the horizontal edge projection tracks. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A vision-based identification method as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> wherein if no tracking possibilities exist, tracking may still occur for a pre-specified number of image inputs without tracking possibilities before the tracked horizontal edge projection track is discarded. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The vision-based identification method of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference> wherein tracking of horizontal edge projection vectors is assisted by using at least one of the following: 
<claim-text>i) vertical motion compensation; and </claim-text>
<claim-text>ii) forward motion compensation; </claim-text>
<claim-text>wherein vertical motion compensation helps predict where tracked horizontal edge projection vectors will be located on successive image inputs by compensating for vertical motion, and </claim-text>
<claim-text>wherein the forward motion compensation helps predict where tracked horizontal edge projection vectors will be located on successive image inputs by compensating for forward motion. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The vision-based identification method of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, wherein forward motion compensation is achieved by using at least two previous points from at the image input on the tracked horizontal edge projection tracks, immediately before the image input that requires forward motion compensation for tracked horizontal edge projection vectors location prediction. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. A vision-based identification method as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, wherein vertical motion is determined by: 
<claim-text>i. extracting vertical slices of the image input; and </claim-text>
<claim-text>ii. extracting one dimensional optical flow profiles of relative intensity of the vertical slices; and </claim-text>
<claim-text>iii. averaging the optical flow of all vertical slices. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. A vision-based identification method as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein the vertical slices are extracted from each image input, and 
<claim-text>the relative extreme negative intensities relate to a change from an electromagnetic radiation emission region having a greater intensity to an electromagnetic radiation emission region of lower intensity of an apparent horizon. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A vision-based identification method as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein the extreme negative intensities&apos; average variation between rows on successive image inputs is an indicia of how an image collection device is moving vertically relative to at least one of the following: 
<claim-text>i. an apparent horizon; and </claim-text>
<claim-text>ii. a distinct feature in the distance. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. A vision-based identification method as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein the signal input from the image capture device to the image signal processor is a single horizontally centered window of the image signal input from the image capture device. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. A vision-based identification method as set forth in <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein the single horizontally centered window is set at a predetermined width and a predetermined height; and 
<claim-text>wherein the single horizontally centered window can be adjusted either left or right based on steering wheel position, or lane information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. A vision-based identification method as set forth in <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein successive horizontal edge projection tracks have a length in excess of a predetermined length. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. A vision-based identification method as set forth in <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein if no tracking possibilities exist, a tracking protocol will be allowed to remain in operation for a pre-specified number of image inputs without tracking possibilities before the tracked horizontal edge projection track is discarded.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002713A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002713A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002713A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002713A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002713A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002713A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002713A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002713A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002713A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002713A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002713A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002713A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002713A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
