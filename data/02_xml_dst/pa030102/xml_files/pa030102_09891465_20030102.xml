<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004706A1-20030102-D00000.TIF SYSTEM "US20030004706A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004706A1-20030102-D00001.TIF SYSTEM "US20030004706A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004706A1-20030102-D00002.TIF SYSTEM "US20030004706A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004706A1-20030102-D00003.TIF SYSTEM "US20030004706A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004706A1-20030102-D00004.TIF SYSTEM "US20030004706A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004706A1-20030102-D00005.TIF SYSTEM "US20030004706A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004706A1-20030102-D00006.TIF SYSTEM "US20030004706A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004706A1-20030102-D00007.TIF SYSTEM "US20030004706A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004706A1-20030102-D00008.TIF SYSTEM "US20030004706A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004706A1-20030102-D00009.TIF SYSTEM "US20030004706A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004706A1-20030102-D00010.TIF SYSTEM "US20030004706A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030004706A1-20030102-D00011.TIF SYSTEM "US20030004706A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030004706A1-20030102-D00012.TIF SYSTEM "US20030004706A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030004706A1-20030102-D00013.TIF SYSTEM "US20030004706A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030004706A1-20030102-D00014.TIF SYSTEM "US20030004706A1-20030102-D00014.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004706</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09891465</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010627</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F017/27</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>704</class>
<subclass>009000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Natural language processing system and method for knowledge management</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Thomas</given-name>
<middle-name>W.</middle-name>
<family-name>Yale</family-name>
</name>
<residence>
<residence-us>
<city>Sherman</city>
<state>IL</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Lawrence</given-name>
<middle-name>L.</middle-name>
<family-name>Stone</family-name>
</name>
<residence>
<residence-us>
<city>Sherman</city>
<state>IL</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>Richard C. Litman</name-1>
<name-2>LITMAN LAW OFFICES, LTD.</name-2>
<address>
<address-1>P.O. Box 15035</address-1>
<city>Arlington</city>
<state>VA</state>
<postalcode>22215</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A computerized natural language processing system and method for knowledge management. The system is made up of a computer keyboard for entering data into the system, at least one server computer having a processor, an area of main memory for executing program code under the direction of the processor, and a disk storage device for storing data and program code. Computer program code stored in disk storage device and executing in the main memory is under the direction of the processor and a knowledge repository with a relational database structure with a plurality of database listings that are integrated and managed within the knowledge repository. A computerized natural language processing method for knowledge management of data, between the system and a user, is also disclosed and involves performing lexical analysis, performing structural analysis, performing data management steps and generating a response in proper grammatical form. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to a natural language processing system and method for knowledge management. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of the Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> A person&apos;s effectiveness in performing any kind of work involves his or her ability to process and exchange information. This is especially true today, in a society with a great dependence on computers. In the past, information was primarily expressed in the form of the English language. Today, information is more commonly expressed in database fields, spreadsheet cells and passages in text files and e-mail. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The mode of communication has shifted. To operate computers and to function appropriately in most kind of work, requires us to be familiar with the computer&apos;s language instead of our own. Consequently, despite the tremendous strides in interface design and refined programming methods, computers are generally quite difficult to use. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> It seems only natural that, if the computer bore more of the responsibility in interacting with the user in the user&apos;s own language (instead of the other way around), the user could perform tasks, diagnose problems and generally operate the computer much more easily. The user could concentrate more on how to perform work and less on how to reinterpret the information involved for the benefit of the machine. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> However, it is difficult to build software that can actually manage English language information in a meaningful way, or to use it to operate other software with English commands. The reason is that English is the product of centuries of evolution. It is irregular and inexact in nature and it has a multitude of grammatical exceptions, which makes English ill suited for computer processing. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> This is reflected in the related art and the following patents. U.S. Pat. No. 4,688,195 issued to Thompson et al. outlines the use of a system for interactively generating a natural language input interface, without any computer programming work being required. The natural language menu interface thus generated provides a menu selection technique where a totally unskilled computer user, who need not even be able to type, can access a relational or hierarchical database, without any error. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> U.S. Pat. No. 5,056,021 issued to Ausborn, outlines the use of a method and system for abstracting meanings from natural language words. Each word is analyzed for its semantic content by mapping into its category of meanings from within each of four levels of abstraction. The preferred embodiment uses Roget&apos;s Thesaurus and Index of Classification to determine the levels of abstraction and category of meanings for words. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> U.S. Pat. No. 5,237,502 issued to White et al., outlines the use of a system and method of analyzing natural language inputs to a computer system for creating queries to databases. In the process of such analysis, it is desirable to present to the user of the system an interpretation of the created query for verification by the user that the natural language expression has been transformed into a correct query statement. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> U.S. Pat. No. 5,442,780 issued to Takanashi et al., outlines the use of a database information retrieval system, which includes a parser for parsing a natural language input query into constituent phrases with an analysis of the syntax of the phrase. The parser may make use of tables and or dictionaries to aid in terminology identification and grammatical syntax analysis. The system also includes virtual tables for converting phrases from the natural language query into retrieval keys that are possessed by the database. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> U.S. Pat. No. 5,748,974 issued to Johnson, outlines the use of user interfaces for computer systems and, more particularly, to a multimodal natural language interface that allows users of computer systems conversational and intuitive access to multiple applications. The term &ldquo;multinodal&rdquo; refers to combining input from various modalities, such as combining spoken, typed or handwritten input from a user. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> U.S. Pat. No. 6,081,774 issued to de Hita et al., outlines the use of an information retrieval system that represents the content of a language based database being searched as well as the user&apos;s natural language query. In accordance with one aspect of the invention, the information retrieval system includes a non-real-time development system for automatically creating a database index having one or more content based database key words of the database. There is also a real-time retrieval system that, in response to a user&apos;s natural language query, searches the keyword index for one or more content based query key words derived from the natural language query. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> European patent application number 87308955.1 issued to Ali et al., outlines the use of a domain independent natural language interface for an existing entity relationship database management system. Syntactically, it relies on augmented phrase structure grammar which retains the convenience and efficiency of semantic grammar while removing some of its ad hoc nature. More precisely, it is syntactic domain independent grammar augmented with semantic variables used by the parser to enforce the semantic correctness of a query. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Although each of the previously described patents is useful in some respect, none directly address the problems involved with a user easily exchanging natural language information with a knowledge management system. If such a problem could be solved, it could greatly simplify how persons not familiar with computer technology work with computers. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> None of the above inventions and patents, taken either singularly or in combination, is seen to describe the instant invention as claimed. Thus a natural language processing system for knowledge management solving the aforementioned problems is desired. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The invention is a computerized natural language processing system and method for knowledge management. The system is made up of a computer keyboard for entering data into the system, at least one server computer having a processor, an area of main memory for executing program code under the direction of the processor, and a disk storage device for storing data and program code. Computer program code stored in disk storage device and executing in the main memory is under the direction of the processor and a knowledge repository with a relational database structure with a plurality of database listings that are integrated and managed within the knowledge repository. A computerized natural language processing method for knowledge management of data, between the system and a user, is also disclosed and involves performing lexical analysis, performing structural analysis, performing data management steps and generating a response in proper grammatical form. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Accordingly, it is a principal object of the invention to provide a simplified system and method of using a computer. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> It is another object of the invention to provide a computerized system and method for natural language processing. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> It is a further object of the invention to provide a computerized system and method for knowledge management that utilizes conceptual dependency. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Still another object of the invention is to provide a computerized system and method for allowing a user to interact with a computer using his own native language. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> It is an object of the invention to provide improved elements and arrangements thereof for the purposes described which is inexpensive, dependable and fully effective in accomplishing its intended purposes. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> These and other objects of the present invention will become readily apparent upon further review of the following specification and drawings.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a natural language processing system for knowledge management according to the present invention. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is an outline of a natural language processing an overall method for knowledge management according to the present invention. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is an outline of an lexical analysis according to the present invention. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, <cross-reference target="DRAWINGS">FIG. 6</cross-reference> and <cross-reference target="DRAWINGS">FIG. 7</cross-reference> are examples of lexical analysis data according to the present invention. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is an outline of a structural analysis according to the present invention. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9A</cross-reference> is a table of sentence type data according to the present invention. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9B</cross-reference> is an example of POS specific fragment analysis according to the present invention. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9C</cross-reference> is an example of POS specific transformational analysis according to the present invention. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> and <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is an example of a conceptual dependency representation and related data according to the present invention. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is an outline of data management steps according to the present invention. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is an outline of response generation according to the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Similar reference characters denote corresponding features consistently throughout the attached drawings. </paragraph>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT </heading>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> The present invention is computerized natural language processing system <highlight><bold>10</bold></highlight> and method <highlight><bold>100</bold></highlight> for knowledge management. The present invention allows a user to conduct information management with a computer in the natural language of the user. In the preferred embodiment, the native language of the user is assumed to be English and the preferred form of communication is type-written text. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> The system <highlight><bold>10</bold></highlight> comprises an input means <highlight><bold>20</bold></highlight> for entering data into the system <highlight><bold>10</bold></highlight>, at least one server computer <highlight><bold>30</bold></highlight> having a processor <highlight><bold>40</bold></highlight>, an area of main memory <highlight><bold>50</bold></highlight> for executing program code under the direction of the processor <highlight><bold>40</bold></highlight> and a disk storage device <highlight><bold>60</bold></highlight> for storing data and program code. The computer program code is stored in the disk storage device <highlight><bold>60</bold></highlight> and executes in main memory <highlight><bold>50</bold></highlight> under the direction of the processor <highlight><bold>40</bold></highlight>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> A knowledge repository <highlight><bold>70</bold></highlight> with a relational database structure and a plurality of database listings that are integrated and managed within the knowledge repository <highlight><bold>70</bold></highlight> is provided. An output means <highlight><bold>80</bold></highlight> for generating a response to the data originally input in the system <highlight><bold>10</bold></highlight> is also provided. The input means <highlight><bold>20</bold></highlight> for the system <highlight><bold>10</bold></highlight> is a computer keyboard (not shown) and the output means <highlight><bold>80</bold></highlight> for generating a response to the data originally input in the system <highlight><bold>10</bold></highlight>, is a computer monitor and printer (not shown). This is shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> An overall method <highlight><bold>100</bold></highlight> can be expressed in terms of lexical analysis <highlight><bold>110</bold></highlight>, structural analysis <highlight><bold>120</bold></highlight>, data management <highlight><bold>130</bold></highlight> and response generation <highlight><bold>140</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> Once the user enters the data or information as a sentence, whether that sentence is a declarative statement or question, the system <highlight><bold>10</bold></highlight> seeks individual words utilizing the user&apos;s sentence in a lexicon to collect lexical data on each word. In the lexicon, nouns, verbs, adjectives and adverbs are organized into synonym sets, each representing one underlying lexical concept. Lexical relations common in the study of lexicography, such as antonyms, hyponyms, hypernyms, holonyms, troponyms and meronyms link the synonym sets together. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> For example, the word &ldquo;board&rdquo; can signify either a piece of lumber or a group of people assembled for some purpose. The synonym sets (board, plank) and (board, committee) can serve as unambiguous designators of those two meanings of the word &ldquo;board&rdquo;. Synonyms sets are then connected with semantic relations. For example, a series of superordinate associations or hypernyms, in the lexicon states that an &ldquo;oak&rdquo; is a &ldquo;tree&rdquo; which is a &ldquo;plant&rdquo; which is an &ldquo;organism&rdquo;. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> Lexical analysis data involves the parts of speech, word senses and semantic associations to other words outside the context of the user&apos;s sentence. The lexicon in which this lexical data is sought is divided into two parts for words which are &ldquo;identifiers&rdquo; and &ldquo;non-identifiers&rdquo;. Identifiers are words such as articles, conjunctions, propositions, pronouns and other words which are unlikely to be misconstrued to have any other grammatical function in a sentence. Those words in the sentence which are non-identifiers, which have more than one possible part of speech (hence more than one possible grammatical function) within the context of a sentence, are identified along with the possible parts of speech they may have within a sentence. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> A lexical data search of the non-identifier &ldquo;computer&rdquo; results in generating the lexical analysis data <highlight><bold>150</bold></highlight> depicted in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. The lexicon may include multiple parts of speech, and as individual parts of speech and multiple word senses, as for the non-identifier &ldquo;blanket&rdquo;. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> Depending on applicable parts of speech, there may be lexical associations present for a word sense, as illustrated in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> for the verb form of the word &ldquo;blanket&rdquo;. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> An example of lexical associations for the a non-identifier word such as the verb &ldquo;go&rdquo; is also depicted in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> In the lexicon, the word senses of non-identifiers as possible verbs are linked to a database structure which lists conceptual dependency definitions of the verb sense. These definitions serve as a template from which the conceptual dependency representation of the entire user sentence is constructed. For example, the word &ldquo;send&rdquo; is defined as:</paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>s: </italic></highlight>entity<highlight><bold>1</bold></highlight> <highlight><italic>t*&plus;DO o:</italic></highlight>entity<highlight><bold>2</bold></highlight>-<highlight><italic>c</italic></highlight>--&gt;<highlight><italic>t*&plus;PTRANS s:</italic></highlight>entity<highlight><bold>2</bold></highlight> <highlight><italic>d:</italic></highlight>place<highlight><bold>1</bold></highlight>--&gt;place<highlight><bold>2</bold></highlight></in-line-formula></paragraph>
<paragraph id="P-0047" lvl="2"><number>&lsqb;0047&rsqb;</number> where s:, o: and d: are markers for subjective, objective and directional clauses, respectively (there are 12 different clauses available); </paragraph>
<paragraph id="P-0048" lvl="2"><number>&lsqb;0048&rsqb;</number> DO and PTRANS verb primatives, defined as &ldquo;performing an action&rdquo; and &ldquo;performing physical motion&rdquo;, respectively (there are 21 different verb primatives); </paragraph>
<paragraph id="P-0049" lvl="2"><number>&lsqb;0049&rsqb;</number> t*&plus; are verb operators, indicating the time, mode and manner of the action described by the verb primative; and </paragraph>
<paragraph id="P-0050" lvl="2"><number>&lsqb;0050&rsqb;</number> -c--&gt; is an interpredicate connector indicating the action described in one predicate causing the action of the predicate following it. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> This example definition above is described in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> This includes for each verb sense one or more sentence frames, which specify the subcategorization features of the verbs in the synonym set by indicating the kinds of sentences they can occur in. They aid in identifying the verb sense of a word based on the grammatical structure in which the verb is used in the user&apos;s sentence. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> For example, the word &ldquo;write&rdquo;, in the sense of &ldquo;produce a literary work&rdquo; is restricted to the sentence frames &ldquo;Somebody --s something&rdquo; as in &ldquo;Longfellow wrote the book,&rdquo; whereas write in the sense of &ldquo;communicate with writing&rdquo; is restricted to the sentence frames &ldquo;Somebody --s somebody,&rdquo; as in &ldquo;John writes Bob,&rdquo; and &ldquo;Somebody --s to somebody,&rdquo; as in &ldquo;John writes to Bob.&rdquo;</paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> The system <highlight><bold>10</bold></highlight> identifies the parts of speech of a word by its syntactic inflection codes as listed in the lexicon. Syntactic inflection involves codes to convert particular words from its nominal form to other forms. These forms involve converting singular nouns to plural nouns (e.g., &ldquo;ball&rdquo; to &ldquo;balls&rdquo; and &ldquo;fungus&rdquo; to &ldquo;fungi&rdquo;), infinitive verbs to simple past, third person singular present, passive participles and active participles (e.g., &ldquo;ride&rdquo; to &ldquo;rode, rides, ridden and riding&rdquo; and &ldquo;go&rdquo; to &ldquo;went, goes, gone, going&rdquo;), and nominal adjectives to comparative and superlative forms (e.g., &ldquo;efficient&rdquo; to &ldquo;more efficient, most efficient&rdquo; and &ldquo;good&rdquo; to &ldquo;better, best&rdquo;). </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Words with multiple parts of speech have multiple syntactic inflection codes. For example, &ldquo;clean&rdquo; is both a verb and adjective, its lexicon entry includes a corresponding syntactic inflection code as a verb and an adjective, allowing the system <highlight><bold>10</bold></highlight> to recognize the forms &ldquo;cleans, cleaned, cleaning, cleaner, cleanest&rdquo;. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> If a word in the user&apos;s statement is not found in the lexicon, it may be misspelled, and the user may correct the spelling. If not, the user has the option, through a graphical interface, of entering the word as a new lexicon entry, designating its possible parts of speech and lexical relationships to existing lexicon entries. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> For example, an unknown word &ldquo;widget&rdquo; may be designated as a noun being &ldquo;a kind of&rdquo; &lcub;instrument and instrumentality&rcub;. This is analogous to a human&apos;s ability to learn new words by relating them to concepts with which the human is already familiar. The user also has the option to have the system ignore the entered sentence altogether, allowing entry of a new sentence. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> outlines the process of undergoing structural analysis <highlight><bold>120</bold></highlight> on an entered set of data or information (expressed in a user sentence). In this system <highlight><bold>10</bold></highlight>, structural analysis attempts to deduce, by context, the part of speech and sense of each word in the user sentence based on the vast plurality of such data provided by a lexical analysis <highlight><bold>110</bold></highlight>. The system <highlight><bold>10</bold></highlight> therefore assumes that the user statement &ldquo;means one thing&rdquo; by parsing it on the basis of each word recognized as only one part of speech and only one intended sense. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> The lexical analysis data provides ample criteria for the system <highlight><bold>10</bold></highlight> to reasonably assume the permutation of parts of speech and word senses that accurately reflects the meaning the user has intended. This criteria is analogous to knowledge of language and everyday experience, with which a human effortlessly sifts through word ambiguities to understand an English statement. However, in cases where a sentence may be equally ambiguous to human beings, the system <highlight><bold>10</bold></highlight> by necessity produces two or more such permutations as ambiguities from which the user must choose. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> To streamline the parsing process of an user sentence, numerals, adverbs, dates and times are transferred from the lexical analysis data listing in memory to another data structure. The position of these items is charted according to their original position in the user sentence. For example, &ldquo;the Dodgers admirably hit 5 home runs&rdquo; removes &ldquo;admirably&rdquo; and &ldquo;5&rdquo; from the lexical analysis data, but charts their positions as occurring just before &ldquo;hit&rdquo; and &ldquo;home runs&rdquo; respectively. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Phrase extraction also tacitly divides the sentence into recognizable fragments based on the words&apos; status as identifiers and non-identifiers for subsequent processing by the transformational grammar rules. For example, the sentence &ldquo;the nurses keep clean sheets and blankets in the closet&rdquo; is divided into fragments based on the words &ldquo;the&rdquo;, &ldquo;and&rdquo; and &ldquo;in&rdquo; as identifiers, and the remaining words as non-identifiers: </paragraph>
<paragraph id="P-0062" lvl="2"><number>&lsqb;0062&rsqb;</number> &lcub;the&rcub; &lcub;nurses keep clean sheets&rcub; &lcub;and&rcub; &lcub;blankets&rcub; &lcub;in&rcub; &lcub;the&rcub; &lcub;closet&rcub;. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> Structural analysis thereafter determines the type of use sentence. The following table (in <cross-reference target="DRAWINGS">FIG. 9A</cross-reference>) lists the sentence type data <highlight><bold>160</bold></highlight> those used by the system <highlight><bold>10</bold></highlight>, supplanted by example sentences. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> The transformational grammar rules analyzing the user sentence and attempting to deduce the part of speech and sense of each word in the sentence, consist of four sets of rules, executed in the order described below. The first rules involve POS (part of speech) specific phrase structure rules. These rules test each fragment or specific phrase to determine the contextual part of speech of each word within the fragment. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> For example, in the sentence &ldquo;the military demands change under certain circumstances,&rdquo; the fragment &lcub;military demands change&rcub; is recognized as the possible POS permutations and meanings depicted in <cross-reference target="DRAWINGS">FIG. 9B</cross-reference> utilizing POS specific fragment analysis <highlight><bold>170</bold></highlight>. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> The second set of rules involve POS-specific transformational analysis <highlight><bold>180</bold></highlight>. These rules test the resulting fragments in tandem to determine the contextual parts of speech for the entire sentence. The rules are successively executed to abbreviate the word sequence and result in a recognizable subject and verb, upon which all grammatically correct sentences are based. One such succession of executed rules, for the sentence &ldquo;Thomas declined the dinner invitation because Bill had a cold&rdquo; may include the possible POS permutations, word sequences applied and resulting word sequences depicted in <cross-reference target="DRAWINGS">FIG. 9C</cross-reference>. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> The third set of rules involve concept specific transformational analysis. The results of each POS specific transformational rule applied are tested against one or more concept specific equivalents. Just as POS specific rules narrow the possibilities of sequences of parts of speech, concept specific rules narrow the possibilities of sequences of word senses. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> In addition, while POS specific rules diagram the user sentence by reducing it to a recognizable noun and verb, the concept specific rules work in reverse, extending the noun and verb pair back to the original sentence. In so doing, it applies methods in constructing a representation of the user sentence to be processed by the Data Management <highlight><bold>130</bold></highlight> portion of the system <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> For example, one POS specific rule that processes the sentence &ldquo;Thomas saw mountains flying in a plane&rdquo; (noun-verb-noun-active participle-preposition-article-noun) has two equivalent concept specific rules, the first resulting in a conceptual interpretation that Thomas does the flying, producing the propositions &ldquo;Thomas see mountains (while) Thomas fly in plane&rdquo;. The second equivalent concept specific rule results in an interpretation that mountains do the flying, producing the propositions &ldquo;Thomas see mountains (while) mountains fly in plane&rdquo;. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> Sentence frames, conceptual dependency verb definitions, and constraints limiting the scope of certain word senses to fill clauses in these definitions (all of which are associated with lexical data for words identified as verbs) serve as the criteria by which the system <highlight><bold>10</bold></highlight> favors the first concept specific rule over the second as the most reasonable understanding of the sentence. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> The fourth set of rules involve concept specific fragment analysis. These rules perform the same function as those for concept specific transformational analysis, but tests the results of each POS specific fragment rule applied against one or more concept specific equivalents. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> The concept specific rules described above, for both transformational and fragment analysis, contain data with which the system <highlight><bold>10</bold></highlight> generates a conceptual dependency representation of the entire sentence. This representation is accompanied by propositions, propositional linkages as independent grammatical clauses, optional peripheral data if included in the sentence, and optional subordinate conjunction linkages between independent grammatical clauses if the user sentence consists of two or more such clauses. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> For example, the concept specific rules applied to the statement, &ldquo;The supervisor directed Mary not to type 3 proposal letters at the office for the board of directors on Jan. 15, 2001 so the market analysis would be completed.&rdquo; where definitions of identified verbs consist of:</paragraph>
<paragraph lvl="0"><in-line-formula>&ldquo;direct&rdquo;: s:PERSON<highlight><bold>1</bold></highlight>*tMTRANS o:PERSON<highlight><bold>2</bold></highlight>-c--&gt;s:PERSON<highlight><bold>2</bold></highlight>ACT</in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula>&ldquo;type&rdquo;: s:PERSON<highlight><bold>1</bold></highlight>*tMAKE o:OBJECT<highlight><bold>1</bold></highlight> i:&ldquo;typewriter&rdquo;</in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula>&ldquo;complete&rdquo;: s:OBJECT<highlight><bold>1</bold></highlight> DO o:OBJECT<highlight><bold>2</bold></highlight>-c--&gt;s:OBJECT<highlight><bold>2</bold></highlight> tf STATE q:&ldquo;complete&rdquo;</in-line-formula></paragraph>
<paragraph id="P-0074" lvl="7"><number>&lsqb;0074&rsqb;</number> would produce the conceptual dependency representation <highlight><bold>190</bold></highlight> depicted in <cross-reference target="DRAWINGS">FIG. 10</cross-reference> and <cross-reference target="DRAWINGS">FIG. 11</cross-reference>. <cross-reference target="DRAWINGS">FIG. 12</cross-reference> also depicts the data management steps involved with the overall method <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> The conceptual dependency representation is compared to existing data stored in a relational database resident to the system <highlight><bold>10</bold></highlight>, otherwise referred to as the knowledge depository <highlight><bold>70</bold></highlight>. The knowledge depository <highlight><bold>70</bold></highlight> accumulates all representational data from previous entry of declarative statements by the user. This comparison is performed on the basis of a synthesis of different types of logic so improvised as to apply to real world events, and thus serves to locate knowledge repository <highlight><bold>70</bold></highlight> data that may agree or conflict, directly or by logical inference, in responding to the user&apos;s declarative statement or in answering the user&apos;s question. Data involving the user&apos;s declarative statements is added to the knowledge repository <highlight><bold>70</bold></highlight>, if not already present. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> The system <highlight><bold>10</bold></highlight> initially searches a database table containing accumulated propositions for propositions generated by the user sentence. References to individual words in the propositions are made up of record numbers of the words&apos; lexicon entries and an additional numeric code. If a word is used as a noun or adjective, this additional code represents word sense. If a word is used as a verb, this additional code represents a verb primitive combination of this verb&apos;s conceptual dependency definition. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> For any propositions found, the system <highlight><bold>10</bold></highlight> then searches a series of database tables containing accumulated propositional links to which propositions found are linked to others. For any propositional linkages found, the system <highlight><bold>10</bold></highlight> then searches a series of database tables containing peripheral data associated with the found propositional linkages. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> Using the first sequential record in a set of peripheral data records found, the system <highlight><bold>10</bold></highlight> then searches a database table for relevant subordinate conjunction linkages between propositional linkages as independent grammatical clauses. User sentence type, as described earlier, plays a role in whether the system <highlight><bold>10</bold></highlight> accepts certain data from the knowledge repository <highlight><bold>70</bold></highlight> as appropriate. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> For example, peripheral data with reference to the date and/or time the event occurs would satisfy a user question asking when an event occurs. An independent grammatical clause linked to the user&apos;s statement by the subordinate conjunction &ldquo;because&rdquo; would satisfy a user question asking why an event occurs. A proposition linked to another with the propositional phrase example &ldquo;in Italy&rdquo; as the object would satisfy a user asking where an event occurs. Peripheral data with reference to a numeric quantity would satisfy a user question asking how much of something was involved in an event. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> If the system <highlight><bold>10</bold></highlight> cannot locate the conceptual dependency representation of the user&apos;s original statement in the knowledge repository <highlight><bold>70</bold></highlight>, it applies a &ldquo;common sense&rdquo; logic to the representation to produce other conceptual dependency representations of events or facts which the representation of the user&apos;s original statement may logically infer. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> Common sense logic is a synthesis of different types of logic, including syllogistic logic, modal logic, propositional logic and first order predicate calculus so improvised as to apply to a wide variety of real world events. Premises and assertions in common sense logic are expressed in a revised format of Roger Schank&apos;s design of conceptual dependency graphs. Clauses in these graphs employ semantic inheritance, where in the lexical analysis of a word may include hyponymic, hypernymic, meronymic and troponymic associations with other entries in the lexicon. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> This logical synthesis therefore expands the system&apos;s <highlight><bold>10</bold></highlight> scope of maintaining data integrity throughout the knowledge repository <highlight><bold>70</bold></highlight>. For example, the representation:</paragraph>
<paragraph lvl="0"><in-line-formula>subject: &ldquo;Thomas&rdquo; &lt;t LOC direction/location: &ldquo;Italy&rdquo;</in-line-formula></paragraph>
<paragraph id="P-0083" lvl="7"><number>&lsqb;0083&rsqb;</number> is the underlying meaning of statements such as &ldquo;Thomas was in Italy,&rdquo;, &ldquo;Thomas stayed in Italy&rdquo; and &ldquo;Thomas vacationed in Italy&rdquo;. The common sense logic contains rules by which the system <highlight><bold>10</bold></highlight> can infer that at one time, Thomas was in Italy, but may or may not be located there at present or in the future. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> The following example more clearly illustrates the extended scope of data integrity for testing the validity or truth of a given statement against related data extant in the knowledge repository <highlight><bold>70</bold></highlight>, a statement such as &ldquo;Thomas vacationed in Italy&rdquo; is present in the knowledge repository <highlight><bold>70</bold></highlight>. The user then enters a subsequent statement, &ldquo;no IT programmers ever went to Europe&rdquo;. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> First, lexical analysis reveals that one meronym of &ldquo;Europe&rdquo; is &ldquo;Italy&rdquo;, meaning that Italy is part of Europe. Secondly, while structural analysis determines the most likely conceptual dependency verb definition verb definition of &ldquo;go&rdquo; (infinitive form of went), asserting that if no IT programmers went to Europe or </paragraph>
<paragraph id="P-0086" lvl="2"><number>&lsqb;0086&rsqb;</number> subject: &ldquo;IT programmer&rdquo;/&lt;tPTRANS direction/location: &ldquo;Europe&rdquo; a common sense rule infers therefore that: </paragraph>
<paragraph id="P-0087" lvl="2"><number>&lsqb;0087&rsqb;</number> subject: &ldquo;IT programmer&rdquo;/&lt;tLOC direction/location:&ldquo;Europe&rdquo; meaning &ldquo;no IT programmers have been to Europe&rdquo;, &ldquo;no IT programmers have vacationed in Europe&rdquo; or &ldquo;no IT programmers have stayed in Europe&rdquo;. Thirdly, another statement previously entered into the knowledge repository <highlight><bold>70</bold></highlight> may also assert that &ldquo;Thomas is an IT programmer&rdquo;. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> The system <highlight><bold>10</bold></highlight> searches for propositions, first on verbs, then on subjects, then on objects, successively transposing possible words and word senses with those originally in the representation of the user statement. These data searches are conducted through a logical process of elimination, so as to reduce the total number of searches to a bare minimum while also ensuring a survey both exhaustive and nearly instantaneous. Thus, one search locates the proposition &ldquo;Thomas LOC Italy&rdquo; successively replaced with transposable words starting from &ldquo;programmer PTRANS Europe&rdquo;. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> Thereafter, the system <highlight><bold>10</bold></highlight> searches for propositional linkages, any peripheral data and any subordinate conjunction linkages with which these propositions may be associated. Ultimately, the system&apos;s <highlight><bold>10</bold></highlight> programming deduces that since &ldquo;Thomas vacationed in Italy,&rdquo; the subsequent user statement &ldquo;no IT programmers went to Europe,&rdquo; is false. The user is then given the opportunity of overwriting the earlier data as &ldquo;an IT programmer went to Europe,&rdquo; in addition to adding the current user statement. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> According to <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, outlining the response generation <highlight><bold>140</bold></highlight> steps of the system <highlight><bold>10</bold></highlight>, the system <highlight><bold>10</bold></highlight> locates additional inverse concept specific grammar rules with which to reconstruct a statement from the knowledge repository <highlight><bold>70</bold></highlight>, in the form of a grammatically correct sentence. It does so with respect to the framework of relevant data found in the knowledge repository <highlight><bold>70</bold></highlight>, the user sentence type and results of the common sense logic applied to representations of both the user statement and relevant statements from the knowledge repository <highlight><bold>70</bold></highlight>. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> If the user sentence is a question, and if relevant data was found in and derived from the knowledge repository <highlight><bold>70</bold></highlight>, the response is reconstructed and displayed on screen to the user. Otherwise, if data regarding an event indicates the actuality of an event, but no additional data was found appropriate to the user&apos;s question, the system <highlight><bold>10</bold></highlight> displays a response in the format &ldquo;I don&apos;t know who/how much/when/where/why, etc.&rdquo;&plus;&lt;statement reconstructed from repository data&gt;&plus;&ldquo;nevertheless&rdquo;&lt;subject in reconstructed statement&gt;&plus;&ldquo;does/did/can/would/will, etc.&rdquo;. Otherwise, if no such relevant data was found, the system <highlight><bold>10</bold></highlight> displays a response in the format, &ldquo;I don&apos;t know whether&rdquo;&plus;&lt;statement reconstructed from repository data&gt;&plus;&ldquo;much less who/how much/when/where/why, etc.&rdquo;. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> If the user sentence is a declarative statement, and if an data found and derived from the knowledge depository <highlight><bold>70</bold></highlight> conflicts with the user statement, the system <highlight><bold>10</bold></highlight> displays the response in the format &ldquo;But&rdquo;&plus;&lt;statement reconstructed from knowledge repository data <highlight><bold>70</bold></highlight>&gt;, in addition to &ldquo;because&rdquo;&plus;&lt;supporting statements from knowledge repository data <highlight><bold>70</bold></highlight>&gt;, if such supporting statements were found to invalidate the user&apos;s statement. In this case, the user has the option of overwriting such data so as to agree with the original statement, as well as append the original statement itself to the knowledge repository <highlight><bold>70</bold></highlight>. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> Otherwise, if any such data agrees with the user statement, the system <highlight><bold>10</bold></highlight> response is displayed in the format, &ldquo;I already know that&rdquo;&plus;&lt;statement reconstructed from repository data&gt;,&plus;in addition to &ldquo;because&rdquo;&plus;&lt;supporting statements reconstructed from knowledge repository data&gt;, if such supporting statements were found to validate the user&apos;s statement. Otherwise, no relevant data was found, in which case the system <highlight><bold>10</bold></highlight> displays &ldquo;OK&rdquo;, and appends data to the knowledge repository <highlight><bold>70</bold></highlight>. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> It is to be understood that the present invention is not limited to the embodiment described above, but encompasses any and all embodiments within the scope of the following claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">We claim: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A computerized natural language processing system for knowledge management comprising: 
<claim-text>an input means for entering data into the system; </claim-text>
<claim-text>at least one server computer having a processor, an area of main memory for executing program code under the direction of the processor, and a disk storage device for storing data and program code; </claim-text>
<claim-text>computer program code stored in disk storage device and executing in the main memory under the direction of the processor; </claim-text>
<claim-text>a knowledge repository with a relational database structure with a plurality of database listings that are integrated and managed within the knowledge repository; and </claim-text>
<claim-text>an output means for generating a response to the data originally input in the system. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The computerized natural language processing system for knowledge management, according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said input means is a computer keyboard. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The computerized natural language processing system for knowledge management, according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said plurality of database listings include derived propositions, subordinate conjunction linkages, nouns, logic database listings and peripheral databases. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The computerized natural language processing system for knowledge management, according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said output means for generating a response to the data originally input in the system, is a computer monitor and printer. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A computerized natural language processing method for knowledge management of data, between the system and a user, comprising the steps of: 
<claim-text>performing lexical analysis; </claim-text>
<claim-text>performing structural analysis; </claim-text>
<claim-text>performing data management steps; and </claim-text>
<claim-text>generating a response in proper grammatical form. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the step of performing lexical analysis further comprises the steps of: 
<claim-text>receiving sentences of data by the user; </claim-text>
<claim-text>seeking individual words in the sentence and utilizing the user&apos;s sentence in a lexicon to collect lexical data on each word&apos;s parts of speech, word senses and semantic associations to other words; </claim-text>
<claim-text>organizing the words from the sentences into synonym sets in the lexicon; and </claim-text>
<claim-text>dividing the lexical data into identifiers and non-identifiers. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the step of performing structural analysis further comprises the steps of: 
<claim-text>extracting numerals, adverbs, dates and times; </claim-text>
<claim-text>determining a sentence type for each sentence; </claim-text>
<claim-text>deducing the fewest number of permutations of word senses resulting in reasonable meanings and understandings of the sentences; </claim-text>
<claim-text>processing the lexical data using transformational grammar rules involving part of speech (POS) specific phrase structure rules, POS specific transformational rules, concept specific transformational rules and concept specific phrase structure rules; and </claim-text>
<claim-text>constructing a conceptual dependency representation of the sentences from the permutations and the lexical data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the step of performing data management steps, further comprises the steps of: 
<claim-text>locating and comparing the conceptual dependency representation to existing data relevant to the user&apos;s statement, stored in a relational database and serving as a knowledge repository, which accumulates all data from previous entry by the user; </claim-text>
<claim-text>locating and comparing the conceptual dependency representation utilizing different types of logic to apply to real world events; </claim-text>
<claim-text>utilizing the different types of logic to determine whether existing data agrees or conflicts with the conceptual dependency representation; and </claim-text>
<claim-text>adding data from the conceptual dependency representation to the knowledge repository. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the step for generating a response in proper grammatical form further comprises the step of constructing and displaying one or more grammatically correct responses which are appropriate and relevant to the user&apos;s data.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004706A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004706A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004706A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004706A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004706A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004706A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004706A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004706A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004706A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004706A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004706A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030004706A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030004706A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030004706A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030004706A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
