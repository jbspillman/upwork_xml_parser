<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030001612A1-20030102-D00000.TIF SYSTEM "US20030001612A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030001612A1-20030102-D00001.TIF SYSTEM "US20030001612A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030001612A1-20030102-D00002.TIF SYSTEM "US20030001612A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030001612A1-20030102-D00003.TIF SYSTEM "US20030001612A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030001612A1-20030102-D00004.TIF SYSTEM "US20030001612A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030001612A1-20030102-D00005.TIF SYSTEM "US20030001612A1-20030102-D00005.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030001612</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09891541</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010627</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H03K019/173</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>326</class>
<subclass>037000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Multiplexor generating a glitch free output when selecting from multiple clock signals</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Vinod</given-name>
<family-name>Menezes</family-name>
</name>
<residence>
<residence-non-us>
<city>Bangalore</city>
<country-code>IN</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Rajith</given-name>
<middle-name>Kumar</middle-name>
<family-name>Mavila</family-name>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>TEXAS INSTRUMENTS INCORPORATED</name-1>
<name-2></name-2>
<address>
<address-1>P O BOX 655474, M/S 3999</address-1>
<city>DALLAS</city>
<state>TX</state>
<postalcode>75265</postalcode>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A multiplexor generating a glitch free output. A slower clock signal and sleep clock signal are respectively synchronized with positive and negative edges of the faster clock signal. The sleep signal is further synchronized with a negative edge of the slower clock signal and provided to an AND gate gating the slower clock signal based on the value of a select signal formed by the synchronized sleep signal. The slower clock signal is delayed by a number of faster clock cycles equal to the time taken by the select signal to be received at the AND gate after the sleep signal is synchronized to the slower clock signal. In an alternative embodiment, a signal control block ensures that the 0 to 1 transition on one of the select signals follows the 1 to 0 transition on another select signal when the value of the sleep signal changes. In addition, each select signal is synchronized with a negative edge of the corresponding clock signal selected. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to integrated circuit design, and more specifically to a method and apparatus for generating a glitch free output when selecting from multiple clock signals. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> A need often exists to select from multiple clock signals. For example, a device may operate using one of two clock signals having different speeds (i.e., clock period), with a slower clock signal typically being used to consume lower electrical power in durations of inactivity of the device. Thus, a higher speed clock signal may be used during normal operation and the lower speed clock signal may be used during periods of inactivity. Accordingly, the device may need to select from among multiple clock signals, and the selected output may be used to drive several other components of the device. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> A multiplexor is often used to perform the selection operation. The multiplexor may receive several clock signals (&ldquo;input clock signals&rdquo;) as input and select one of the clock signals depending upon the value of a selection input. For simplicity of understanding it is hereafter assumed that the multiplexor receives only two clock signals, and the selection input accordingly is a binary number. However, the present invention may be used in conjunction with more than two clock signals provided as inputs. Depending on the state of the select signal (high or low) one of the two clock signals is selected to generate the output clock signal. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> A glitch can result in the output clock signal particularly when a phase relationship does not exist between the input clock signals. A glitch generally refers to a pulse of a short duration. A glitch typically occurs when the multiplexor changes the selection in a short duration after a prior transition of the output signal. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Glitches are generally undesirable in that the components driven by an output signal may be implemented under the assumption that the output signal would only have pulses of at least a pre-specified duration. Glitches having a duration of less than the pre-specified duration can lead to unpredictable or erroneous results, and are thus undesirable. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Therefore, what is needed is a method and an apparatus which generates a glitch-free output when selecting from multiple input clock signals. In addition, it may be desirable to consume minimal electrical power when generating the output at least in environments (e.g., mobile devices operating from batteries) where minimizing power consumption is of particular interest. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> A clock generation circuit provided in accordance with the present invention generates a glitch free output when selecting from among multiple clock signals. In an embodiment, the clock generation circuit selects either a faster clock signal or a slower clock signal depending on the logical value of a sleep signal. The sleep signal specifies whether the faster clock or the slower clock signal is to be selected. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The clock generation circuit may contain two AND gates, with a first AND gate passing through (gating) the slower clock signal if a first select signal is at high logical value. The second AND gate may pass the faster clock signal if a second select is at a high logical value. An OR gate performs a logical OR operation of the outputs of the two AND gates. A signal control block delays some of the select signal, the faster and slower clock signals to ensure that glitches are not generated on the output of any of the three gates (i.e, two AND gates and an OR gate) as described below. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> According to an aspect of the present invention, the signal control block generates the two select signals such that at least a desired delay exists between transitions on the first select signal and the slower clock signal. Similarly, the second select signal is generated such that at least the desired delay exists between transitions on the second select signal and the faster clock signal. The desired delay determines the minimum pulse width. As a result, glitches (with a pulse width less than the determined minimum pulse width) are absent at the output of the AND gates. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> According to another aspect of the present invention, the signal control block introduces delays into at some of the first select signal, the second select signal, the slower clock signal and the faster clock signal to avoid the occurrence of a high to low transition on one input followed by low to high transition on another input of the two inputs of the OR gate within a desired duration. As a result, glitches are eliminated at the output of the OR gate also. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> In one embodiment, the signal control block comprises a first synchronizer synchronizing the sleep signal with a negative edge of the faster clock signal to generate the second select signal. An inverter inverts the second select signal to generate an inverted output. A second synchronizer synchronizes the inverted output with a negative edge of the faster clock signal to generate the first select signal. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The signal control block may further include a third synchronizer to synchronize the sleep signal with a negative edge of the slower clock signal to generate an output. The output of the third synchronizer is provided as an input to the first synchronizer. A fourth synchronizer synchronizes the slower clock signal with a positive edge of the faster clock signal to generate an output. The output of the fourth synchronizer being provided as an input to the first AND gate. As a result of the connections, the sequencing of the transitions on the slower and faster clock signals are controlled to avoid glitches at the output of the OR gate as well. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> In an alternative embodiment, the signal control block ensures that a 1 to 0 transition on one of the first select signal and the second select signal precedes a 0 to 1 transition on another one of the first select signal and the second select signal, with the two transitions occurring in response to a change in value on the sleep signal. Such a feature ensures that glitches are not generated by the OR gate (when each AND gate does not generate a glitch). </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> The clock generation circuit of the alternative embodiment may contain two synchronizers, a third AND logic gate and an NOR gate. The third AND gate generates an output by performing an AND logical operation of an inverted value of the output of the second synchronizer and the sleep signal. The output of the third AND logic gate is provided as an input to the first synchronizer. The NOR logic gate performs a NOR logical operation of the sleep signal and the output of the first synchronizer, and the resulting output is provided as an input to the second synchronizer. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The first synchronizer may generate the first select signal by synchronizing the input signal to a negative edge of the faster signal. The second synchronizer is designed to generate the second select signal by synchronizing the input to the negative edge of the slower clock signal. Due to the synchronization, glitches are avoided at the output of the AND gates. Due to the feedback loop (resulting from the above connections), the 0 to 1 transition on one select line always follows the 1 to 0 transition on the other select line. A short dead period (i.e., no clock signal generated) may be present on the output of the AND gate between the two transitions, but such a situation may be acceptable when glitches are avoided. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Further features and advantages of the invention, as well as the structure and operation of various embodiments of the invention, are described in detail below with reference to the accompanying drawings. In the drawings, like reference numbers generally indicate identical, functionally similar, and/or structurally similar elements. The drawing in which an element first appears is indicated by the leftmost digit(s) in the corresponding reference number.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The present invention will be described with reference to the accompanying drawings, wherein: </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram illustrating an example environment in which the present invention can be implemented; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram illustrating the details of an embodiment of a multiplexer provided in accordance with the present invention; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram of the details of a multiplexor illustrating the principles of operation of the described embodiments; </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flow chart illustrating a method in accordance with the present invention; </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram illustrating the details of another embodiment of a multiplexer in accordance with the present invention; </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a timing diagram representing the various states of signals of the embodiment(s) of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>; and </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a timing diagram representing the various states of signals of another embodiment of a multiplexer.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0027" lvl="7"><number>&lsqb;0027&rsqb;</number> 1. Overview and Discussion of the Invention </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The present invention allows a glitch free output to be generated when selecting between multiple input clock signals having no phase relationship. A multiplexor in accordance with the present invention can be implemented using multiple AND logic gates and an OR logic gate, with each AND logic gate performing a logical AND operation of one of the clock signals with a corresponding select signal. The OR logic gate selects one of the outputs of the AND gates. In general, a logic gate may be implemented using any combination of several types of gates. For example, as is well known, any logic gate can be implemented using XOR gates. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The timing of the transitions on the inputs to each of the gates may be controlled to provide a glitch free output. The considerations underlying the timing relationships are described first. Example environments implementing the invention are described then. </paragraph>
<paragraph id="P-0030" lvl="7"><number>&lsqb;0030&rsqb;</number> 2. General Considerations </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram illustrating the considerations underlying the timing relationships of the various signals used in a multiplexor implemented in accordance with the present invention. The block diagram is shown containing several AND gates <highlight><bold>380</bold></highlight>-A through <highlight><bold>380</bold></highlight>-X, and OR gate <highlight><bold>390</bold></highlight>. The use and operation of each of the gates is described below. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Each AND gate receives a clock signal and a corresponding select signal, and the clock signal is gated to the output when select signal is high. OR gate <highlight><bold>390</bold></highlight> receives the outputs of the AND gates as inputs and performs a logical OR operation on the inputs. The properties of AND gates and OR gates are examined to appreciate the manner in which glitches may be avoided at the output of OR gate <highlight><bold>390</bold></highlight>. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> Assuming an AND gate has two inputs A and B, there are five relevant possible scenarios with respect to transitions on the two inputs: </paragraph>
<paragraph id="P-0034" lvl="2"><number>&lsqb;0034&rsqb;</number> i) one input (e.g., A) going from low logical value to a high logical value followed by another input going from low logical value to a high logical value; </paragraph>
<paragraph id="P-0035" lvl="2"><number>&lsqb;0035&rsqb;</number> ii) both inputs continue to be at a high logical value; </paragraph>
<paragraph id="P-0036" lvl="2"><number>&lsqb;0036&rsqb;</number> iii) one of the two inputs continues to be at a low logical value; </paragraph>
<paragraph id="P-0037" lvl="2"><number>&lsqb;0037&rsqb;</number> iv) one of the inputs goes from high to low and then another input goes from low to high; and </paragraph>
<paragraph id="P-0038" lvl="2"><number>&lsqb;0038&rsqb;</number> v) one of the inputs goes from low to high followed by (or simultaneously with) another input going from high to low. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> It may be readily appreciated that only in situation (v) of above, a glitch could result in the output of the AND gate. Accordingly, with respect to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the timings of the clock signal and the corresponding select signal are controlled to ensure that at least some delay exists between the transitions of the two inputs to each of the AND gates <highlight><bold>380</bold></highlight>-A through <highlight><bold>380</bold></highlight>-X. In an embodiment described below, a delay of half a clock cycle is ensured by synchronizing one of the inputs to a positive edge of a clock signal and another input to a negative edge of a clock cycle. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> With respect to OR gates, assuming the OR gate also has two inputs, there are the following relevant scenarios: </paragraph>
<paragraph id="P-0041" lvl="2"><number>&lsqb;0041&rsqb;</number> A) One of the two inputs goes from a low logical value to a high logical value followed by the second input going from a low logical value to a high logical value; </paragraph>
<paragraph id="P-0042" lvl="2"><number>&lsqb;0042&rsqb;</number> B) One of the two inputs goes from a low logical value to a high logical value followed by (or simultaneously with) the second input going from a high logical value to a low logical value; and </paragraph>
<paragraph id="P-0043" lvl="2"><number>&lsqb;0043&rsqb;</number> C) If one of the two inputs goes from a high logical value to a low logical value followed by the second input going from a low logical level to a high logical level. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> It may be readily appreciated that only in situation (C) of above, a glitch results in the output of the OR gate. Accordingly, the timings of the inputs to the AND gates may also be controlled to ensure that the transitions on the two clock signals do not occur as in situation (C), at least when the selection is to be switched from one clock to the other. Based on the above principles, the manner in which a multiplexor may generate a glitch free output is described with reference to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0045" lvl="7"><number>&lsqb;0045&rsqb;</number> 3. Method </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flow-chart illustrating a method in accordance with the present invention. The method is described with reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference> for illustration. The method begins in step <highlight><bold>201</bold></highlight>, in which control passes to step <highlight><bold>201</bold></highlight>. In step <highlight><bold>410</bold></highlight>, multiple AND gates and OR gates may be provided, with the outputs of the AND gate being provided as an input to the OR gate. A scenario when two AND gates are connected to an OR gate is depicted in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> In step <highlight><bold>420</bold></highlight>, a clock signal and a corresponding select signal are provided as inputs to each of the AND dates. Thus, each clock signal is gated to the output of the corresponding AND gate when the corresponding select signal is at a logical high state. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> In step <highlight><bold>450</bold></highlight>, delays are introduced into at least one of the two inputs to each AND gates to ensure that at least a desired delay exists between the two inputs. Accordingly, situation (iv) noted in the above section may be avoided. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> In step <highlight><bold>470</bold></highlight>, delays are introduced into one or more of the clock signals and select signals to avoid a high-to-low transition on one input followed by a low-to-high transition on another input of the OR gate within a desired duration. Steps <highlight><bold>450</bold></highlight> and <highlight><bold>470</bold></highlight> may need to be designed taking into consideration the effect of each other. Some example approaches for designing steps <highlight><bold>450</bold></highlight> and <highlight><bold>470</bold></highlight> are described below in further details. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> Several aspects of the invention are described below with reference to example environments for illustration. It should be understood that numerous specific details, relationships, and methods are set forth to provide a full understanding of the invention. One skilled in the relevant art, however, will readily recognize that the invention can be practiced without one or more of the specific details, or with other methods, etc. In other instances, well-known structures or operations are not shown in detail to avoid obscuring the invention. </paragraph>
<paragraph id="P-0051" lvl="7"><number>&lsqb;0051&rsqb;</number> 4. Example Environment </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram illustrating an example environment in which the present invention can be implemented. There is shown crystal oscillator <highlight><bold>110</bold></highlight>, a divide by counter <highlight><bold>120</bold></highlight>, two PLLs <highlight><bold>130</bold></highlight> and <highlight><bold>140</bold></highlight>, register <highlight><bold>150</bold></highlight>, multiplexor(MUX) <highlight><bold>160</bold></highlight> and processor <highlight><bold>170</bold></highlight>. Each component is described below in further detail. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> Oscillator <highlight><bold>110</bold></highlight> may be implemented using a quartz crystal which oscillates to generate a clock signal. In one embodiment, the clock signal has a frequency of 50 MHz. Output clock signal of crystal oscillator <highlight><bold>110</bold></highlight> is provided as an input simultaneously to a divide by counter <highlight><bold>120</bold></highlight>, PLL <highlight><bold>130</bold></highlight> and PLL <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> Divide by counter <highlight><bold>120</bold></highlight> receives a clock signal of 50 MHz frequency and generates a 10 MHz clock signal <highlight><bold>126</bold></highlight> in a known way. PLL <highlight><bold>130</bold></highlight> receives 50 MHZ clock signal and generates a faster clock signal <highlight><bold>136</bold></highlight> with frequency of 60 MHz. PLL <highlight><bold>140</bold></highlight> receives 50 MHz clock signal and generates a clock signal <highlight><bold>145</bold></highlight> with a frequency of 80 MHz. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Register <highlight><bold>150</bold></highlight> operates using 80 MHz clock signal <highlight><bold>145</bold></highlight> received from PLL <highlight><bold>140</bold></highlight>. A bit in register <highlight><bold>150</bold></highlight> may be set by processor <highlight><bold>170</bold></highlight>, and the bit may be provided on sleep signal line <highlight><bold>156</bold></highlight>. The bit may be set depending on the specific one of the two input signals <highlight><bold>126</bold></highlight> and <highlight><bold>136</bold></highlight> required to be used to drive processor <highlight><bold>170</bold></highlight>. For example, 10 MHz clock signal <highlight><bold>126</bold></highlight> may be used during periods of inactivity and 60 MHz clock signal <highlight><bold>136</bold></highlight> during normal operation as described below. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> MUX <highlight><bold>160</bold></highlight> generates output <highlight><bold>167</bold></highlight> by selecting either 10 MHz signal <highlight><bold>126</bold></highlight> or 60 MHz signal <highlight><bold>136</bold></highlight> under the control of sleep signal <highlight><bold>156</bold></highlight>. When the value received on sleep signal <highlight><bold>156</bold></highlight> changes, MUX <highlight><bold>160</bold></highlight> provides a corresponding different input signal on output <highlight><bold>167</bold></highlight>. The manner in which MUX <highlight><bold>160</bold></highlight> may generate a glitch free output (meeting the criteria (v) and (C) of above) while selecting from the input clock signals is described below. </paragraph>
<paragraph id="P-0057" lvl="7"><number>&lsqb;0057&rsqb;</number> 5. Multiplexor </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of an embodiment of MUX (multiplexor) <highlight><bold>160</bold></highlight> illustrating the details as relevant to an understanding of several aspects of the present invention. MUX <highlight><bold>160</bold></highlight> is shown containing signal control block <highlight><bold>205</bold></highlight>, synchronizer <highlight><bold>275</bold></highlight>, AND gates <highlight><bold>285</bold></highlight>, AND <highlight><bold>290</bold></highlight> and OR gate <highlight><bold>295</bold></highlight>. The manner in which the two criteria (v) and (C) are met can be better appreciated based on an understanding the operation of the individual components. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> Synchronizer <highlight><bold>275</bold></highlight> synchronizes the slower clock signal (10 MHz clock signal in this example) with the positive edge of the fastest clock signal to generate a slower synchronized clock signal. The positive edge represents a different edge than the edge (i.e., negative) used for synchronization in signal control block <highlight><bold>205</bold></highlight>. Synchronization with different edges enables transitions of the two inputs to each AND gate <highlight><bold>285</bold></highlight> and <highlight><bold>290</bold></highlight> to occur at different instances of time, thereby preventing (situation V noted above) glitches at the outputs of the AND gates. In an embodiment, synchronizer <highlight><bold>275</bold></highlight> contains two positively triggered D flip flops <highlight><bold>270</bold></highlight> and <highlight><bold>280</bold></highlight> connected in series and clocked by the positive. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> AND gate <highlight><bold>285</bold></highlight> performs a logic AND operation of the slower synchronized clock signal on path <highlight><bold>283</bold></highlight> and inverted synchronized sleep signal on path <highlight><bold>258</bold></highlight>. As described above, the signal on path <highlight><bold>283</bold></highlight> is synchronized to a positive edge of the faster clock signal and the signal on path <highlight><bold>258</bold></highlight> is synchronized to a negative edge of the same clock signal. As a result, the transitions on the two signals are separated by at least half a clock period of the fastest clock signal, and the possibility of a glitch at output <highlight><bold>289</bold></highlight> is eliminated. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> AND gate <highlight><bold>290</bold></highlight> receives fastest (60 MHz) clock signal and synchronized sleep signal <highlight><bold>234</bold></highlight> as inputs. As the synchronized sleep signal <highlight><bold>234</bold></highlight> is synchronized with a negative edge of the fastest clock signal and as the fastest clock signal always transitions to a logical high on a positive edge, a lag of half a clock period of the fastest clock signal is ensured in the inputs of AND gate <highlight><bold>390</bold></highlight>. Due to the lag, glitch is avoided at output <highlight><bold>288</bold></highlight>. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> OR gate <highlight><bold>295</bold></highlight> generates a logical OR value of outputs <highlight><bold>288</bold></highlight> and <highlight><bold>289</bold></highlight>. As described above, the two output signals are generated to be glitch free. In addition, situation (C) is avoided by the appropriate design of signal control block <highlight><bold>205</bold></highlight> as described below. </paragraph>
<paragraph id="P-0063" lvl="7"><number>&lsqb;0063&rsqb;</number> 6. Signal Control Block </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Continuing with reference to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, signal control block <highlight><bold>205</bold></highlight> is shown containing synchronizers <highlight><bold>215</bold></highlight>, <highlight><bold>275</bold></highlight> and <highlight><bold>235</bold></highlight>, NOT gate <highlight><bold>245</bold></highlight>, and delay module <highlight><bold>255</bold></highlight>. Each component is described below. The operation of the individual components is described before describing the manner in which situation (C) is avoided. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> Synchronizer <highlight><bold>215</bold></highlight> synchronizes sleep signal first with a positive edge of the slower clock signal and then with the negative edge of the slower clock signal. In an embodiment, synchronizer <highlight><bold>215</bold></highlight> contains D flip flops <highlight><bold>210</bold></highlight> and D flip flop <highlight><bold>220</bold></highlight> connected in series. D flip flop <highlight><bold>210</bold></highlight> is positively clocked, thereby synchronizing sleep signal with the positive edge of the slower clock. D flip flop <highlight><bold>220</bold></highlight> is clocked by inverted slower clock (negatively triggered), thus synchronizing sleep signal with the negative edge of the slower clock signal. The resulting synchronization delays the switch of selection from one clock signal to the other, but facilitates prevention of glitches as described below in further detail. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> Synchronizer <highlight><bold>235</bold></highlight> synchronizes sleep signal with the negative edge of 60 MHz clock signal. In an embodiment, synchronizer <highlight><bold>235</bold></highlight> may contain a positively triggered D flip flop <highlight><bold>230</bold></highlight> and a negatively triggered D flip flop <highlight><bold>240</bold></highlight>. D flip flop <highlight><bold>230</bold></highlight> synchronizes sleep signal with the positive edge of the fastest clock and D flip flop <highlight><bold>240</bold></highlight> synchronizes sleep signal with the following negative edge of the fastest clock. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> NOT gate <highlight><bold>245</bold></highlight> inverts sleep signal <highlight><bold>234</bold></highlight>. As the inversion operation introduces a delay on the sleep signal, synchronization may be lost, hence inverted sleep signal <highlight><bold>247</bold></highlight> needs to be synchronized with fastest clock signal. Delay module <highlight><bold>255</bold></highlight> synchronizes inverted sleep signal <highlight><bold>247</bold></highlight> with the negative edge of fastest clock signal. Synchronizing with the negative edge ensures that the inputs to AND gate <highlight><bold>285</bold></highlight> transition with at least half a clock cycle (of the fastest clock) delay because synchronizer <highlight><bold>275</bold></highlight> synchronizes the slower clock signal to the positive edge of the fastest clock. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> Synchronizer <highlight><bold>275</bold></highlight> contains the same number (here <highlight><bold>2</bold></highlight>) of delay elements (<highlight><bold>270</bold></highlight> and <highlight><bold>280</bold></highlight>) as the number of synchronizers (here <highlight><bold>235</bold></highlight> and <highlight><bold>255</bold></highlight>). The delay elements are triggered by the positive edges of the faster clock signals. As a result, the negative transition of the delayed slower clock signal on line <highlight><bold>283</bold></highlight> occurs half a clock cycle before the 1 to 0 transition of the select signal. The manner in which the components of above operate to avoid the situation C of above is described below. </paragraph>
<paragraph id="P-0069" lvl="7"><number>&lsqb;0069&rsqb;</number> 7. Avoiding Situation C in Embodiment of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> Two situations when the sleep signal transitions from 0 to 1, and then from 1 to 0 are considered. In either case, the transitions are synchronized by synchronizers <highlight><bold>215</bold></highlight> and <highlight><bold>235</bold></highlight> to the slower clock signal and then the faster clock signal respectively. The synchronized sleep signal is provided on line <highlight><bold>234</bold></highlight>. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> When the synchronized sleep signal changes from 1 to 0, both AND gates <highlight><bold>285</bold></highlight> and <highlight><bold>290</bold></highlight> are disabled for a short duration. As a result, neither of the two clock signals is provided as an output of OR gate <highlight><bold>299</bold></highlight>. The resulting &lsquo;dead period&rsquo; (i.e., no clock signal) may be acceptable. In addition, as the select signals and the slower clock signal are synchronized with the fastest clock signal, pulses having a minimum duration equal to the duration of the high or low levels of the fastest clock signal are generated, and thus glitches are not generated. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> When the synchronized sleep signal changes from 0 to 1, the select signals (<highlight><bold>258</bold></highlight> and <highlight><bold>234</bold></highlight>) are both at a high logical level for a short duration. However, synchronization operations performed by the various synchronizers causes a high logical level to be extended to longer duration that the duration provided by the slower clock signal as described below in detail. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> The operation of synchronizer <highlight><bold>215</bold></highlight> causes 1 to 0 (the inverted sleep signal) transition on line <highlight><bold>258</bold></highlight> to occur slightly after (at least two clock cycles of the faster clock signal) a negative edge of the (un-delayed) slower clock signal. Thus a pulse width of at least two clock cycles is guaranteed when the slower clock signal is selected. The slower clock signal is also delayed by similar amount during synchronization (to the positive edge of the faster clock) by synchronizer <highlight><bold>275</bold></highlight>. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> The effect of the synchronization(s) and delays is that the select signal on line <highlight><bold>258</bold></highlight> transitions to 0 on a negative edge of the faster clock signal. Thus, both the faster clock signal generated on line <highlight><bold>288</bold></highlight> and the delayed slower clock signal generated on line <highlight><bold>289</bold></highlight> transition to a lower level at the same time point. From that point on, the faster clock signal is provided on output <highlight><bold>299</bold></highlight>. A glitch is thus avoided. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> It may be further noted that the switch from the slower clock signal to the faster clock signal lags the change in value on the sleep signal. The lag is due to the synchronization by various synchronizers as described above. As also noted above, the lag is typically acceptable if the glitches are prevented. A timing diagram further illustrating the operation of the components of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> and the avoidance of situation (C) is described below. </paragraph>
<paragraph id="P-0076" lvl="7"><number>&lsqb;0076&rsqb;</number> 8. Timing Diagram </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a timing diagram illustrating the timing relationships of various signals generated in the embodiment of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. The inputs to MUX <highlight><bold>160</bold></highlight> are labeled as 10 MHz (slower clock signal) and 60 MHz (faster clock signal) signals. The sleep signal which controls the selection of the input signals is shown with several transitions <highlight><bold>601</bold></highlight>-<highlight><bold>605</bold></highlight>. The effect of transitions of sleep signal from logical 1 to 0 is described with reference to transition <highlight><bold>602</bold></highlight>. Then, the transition from 0 to 1 of the sleep signal is described with reference to transition <highlight><bold>603</bold></highlight>. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> With reference to transition (1 to 0) <highlight><bold>602</bold></highlight>, D flip flop output <highlight><bold>212</bold></highlight> is shown delaying the transition of sleep signal at time point <highlight><bold>602</bold></highlight> to time point <highlight><bold>610</bold></highlight>. Output <highlight><bold>213</bold></highlight> is generated by D flip flop <highlight><bold>220</bold></highlight> and is synchronized to the negative edge of the 10 MHz clock signal. Due to the delay introduced by D flip flop <highlight><bold>220</bold></highlight>, the transition at time point <highlight><bold>610</bold></highlight> is shown further delayed to time point <highlight><bold>620</bold></highlight>. Time point <highlight><bold>620</bold></highlight> occurs at the same time as time point <highlight><bold>612</bold></highlight> at which a negative transition of the slower clock signal (10 MHz occurs). </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> Outputs <highlight><bold>232</bold></highlight> and <highlight><bold>234</bold></highlight> respectively represent the sleep signal further delayed due to synchronization with the positive and then with the negative edge of the fastest clock signal. The select clock signal is shown delayed to time points <highlight><bold>630</bold></highlight> and <highlight><bold>640</bold></highlight> respectively. Time point <highlight><bold>640</bold></highlight> occurs during a period when the slower clock signal is at a low logical level, as also noted above. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> The slower clock signal (10 MHz) which is enabled when the device is inactive is shown with several transitions <highlight><bold>611</bold></highlight>-<highlight><bold>615</bold></highlight>. The description is continued with respect to transition <highlight><bold>613</bold></highlight>. Output <highlight><bold>278</bold></highlight> is generated by D flip flop <highlight><bold>270</bold></highlight> and is synchronized the positive edge of 60 MHz clock signal. D flip flop <highlight><bold>270</bold></highlight> is shown delaying the transition of the slower clock signal at time point <highlight><bold>613</bold></highlight> to time point <highlight><bold>650</bold></highlight>. Output <highlight><bold>283</bold></highlight> is generated by D flip flop <highlight><bold>280</bold></highlight> and is synchronized to the next positive edge of 60 MHz clock signal. D flip flop <highlight><bold>280</bold></highlight> further delays the transition at time point <highlight><bold>650</bold></highlight> to time point <highlight><bold>660</bold></highlight>. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> Output <highlight><bold>289</bold></highlight> is that of AND gate <highlight><bold>285</bold></highlight> which is enabled only when the corresponding select signal <highlight><bold>258</bold></highlight> is at a high logical level. Similarly, AND gate <highlight><bold>290</bold></highlight> generates output <highlight><bold>288</bold></highlight> when the corresponding select signal <highlight><bold>234</bold></highlight> is at a high logical level. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> Thus, immediately after time point <highlight><bold>640</bold></highlight> (when the synchronized sleep signal goes low), the faster clock signal is shown being disabled on output <highlight><bold>299</bold></highlight>. Between time points <highlight><bold>640</bold></highlight> and <highlight><bold>660</bold></highlight> (the occurrence of the first positive edge of the delayed slower clock signal after time point <highlight><bold>640</bold></highlight>), no clock signal is generated on output <highlight><bold>299</bold></highlight>, and represents the dead period noted above. Due to the dead period, situation (C) noted above is avoided. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> With respect to transition (0 to 1) <highlight><bold>603</bold></highlight>, transition <highlight><bold>603</bold></highlight> is shown delayed to time point <highlight><bold>671</bold></highlight> (and provided on line <highlight><bold>234</bold></highlight>) by the operation of synchronizers <highlight><bold>215</bold></highlight> and <highlight><bold>235</bold></highlight>. The select signals corresponding to AND gates <highlight><bold>285</bold></highlight> and <highlight><bold>290</bold></highlight> are both at a high logical level for a duration of one clock cycle of the faster clock signal as may be deduced from analysis of inverter <highlight><bold>245</bold></highlight> and synchronizer <highlight><bold>255</bold></highlight>. Situation (C) is avoided as (described above) illustrated below. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> Select signal <highlight><bold>258</bold></highlight> corresponds to inverted value of output <highlight><bold>234</bold></highlight> delayed by one clock cycle of the fastest clock signal. During that one clock cycle, both the select signals <highlight><bold>258</bold></highlight> and <highlight><bold>234</bold></highlight> are at a high logical value. Thus, between time points <highlight><bold>671</bold></highlight> and <highlight><bold>672</bold></highlight>, both the select signals are at a high logical value. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> As the slower clock signal generated on line <highlight><bold>283</bold></highlight> (input to AND gate <highlight><bold>285</bold></highlight>) is synchronized with a positive edge of the faster clock signal, the high level to low level transition on line <highlight><bold>283</bold></highlight> occurs only at a negative transition of the faster clock signal after time point <highlight><bold>672</bold></highlight>. The operation of synchronizer <highlight><bold>275</bold></highlight> is shown extending the high logical level of signal on line <highlight><bold>289</bold></highlight> to time point <highlight><bold>672</bold></highlight>. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> Thus, at time point <highlight><bold>672</bold></highlight>, the slower clock signal ceases to provide the high logical level on output <highlight><bold>289</bold></highlight> (and thus <highlight><bold>299</bold></highlight> also). However, between time points <highlight><bold>672</bold></highlight> and <highlight><bold>674</bold></highlight>, the faster clock signal provides the high logical level for the output <highlight><bold>299</bold></highlight>. Accordingly, the high logical level is extended until time point <highlight><bold>674</bold></highlight>. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> Thus, a glitch free output is generated by OR gate <highlight><bold>295</bold></highlight> and is the output of MUX <highlight><bold>160</bold></highlight>. Thus, when sleep signal is high, faster clock is generated by MUX <highlight><bold>160</bold></highlight>, and when sleep signal is low, slower clock is generated by MUX <highlight><bold>160</bold></highlight>. As noted above, MUX <highlight><bold>160</bold></highlight> switches between the two clocks a little after sleep signal switches from high to low or vice versa. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> It should be understood that several alternative embodiments of MUX <highlight><bold>160</bold></highlight> can be implemented without departing from the scope and spirit of the present invention. An example alternative embodiment is described below in further detail. </paragraph>
<paragraph id="P-0089" lvl="7"><number>&lsqb;0089&rsqb;</number> 9. Alternative Embodiment of Multiplexor (MUX) </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram of another embodiment of MUX <highlight><bold>160</bold></highlight> illustrating the details as relevant to an understanding of several aspects of the present invention. MUX <highlight><bold>160</bold></highlight> is shown containing signal control block <highlight><bold>505</bold></highlight>, AND gates <highlight><bold>570</bold></highlight> and <highlight><bold>580</bold></highlight>, and OR gate <highlight><bold>590</bold></highlight>. Each component of MUX <highlight><bold>160</bold></highlight> is described in further detail below. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> Signal control block <highlight><bold>505</bold></highlight> receives a sleep signal and generate the select signals <highlight><bold>537</bold></highlight> and <highlight><bold>568</bold></highlight> to AND gates <highlight><bold>570</bold></highlight> and <highlight><bold>580</bold></highlight> respectively. The select signals <highlight><bold>537</bold></highlight> and <highlight><bold>568</bold></highlight> are generated to be synchronous with the negative edges of the faster and slower clock signal respectively, which causes situation (V) to be avoided. In addition, a feedback path is used to ensure that a logical low to high transition on one path only follows a logical high to low transition, which causes situation (C) to be avoided. An embodiment of signal control block <highlight><bold>505</bold></highlight> (details shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>) is described below in further detail. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> AND gate <highlight><bold>570</bold></highlight> generates an output by performing a logical AND operation of the faster clock and the corresponding select signal which is synchronized with the negative edge of the faster clock signal. Due to the synchronization, transition of the two inputs do not occur (i.e., situation V avoided) at the same instant, and glitches are not produced at the output of AND gate <highlight><bold>570</bold></highlight>. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> Similarly, glitches are avoided at the output of AND gate <highlight><bold>580</bold></highlight> as well as the corresponding select signal is synchronized with the negative edge of the slower clock signal. Thus, AND gates <highlight><bold>570</bold></highlight> and <highlight><bold>580</bold></highlight> respectively generate the faster clock signal and the slower clock signal without glitches when the corresponding select signal is at a high logical level. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> OR gate <highlight><bold>590</bold></highlight> performs an or operation on the two outputs of the AND gates <highlight><bold>570</bold></highlight> and <highlight><bold>580</bold></highlight>. The manner in which signal control block <highlight><bold>505</bold></highlight> delays some of the signals to ensure OR gate <highlight><bold>590</bold></highlight> also generates a glitch free output is described below. </paragraph>
<paragraph id="P-0095" lvl="7"><number>&lsqb;0095&rsqb;</number> 10. Signal Control Block in the Embodiment of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> Signal control block <highlight><bold>505</bold></highlight> is shown containing AND gate <highlight><bold>510</bold></highlight>, synchronizer <highlight><bold>525</bold></highlight>, synchronizer <highlight><bold>555</bold></highlight> and NOR gate <highlight><bold>540</bold></highlight>. The sleep signal is provided as an input to both the AND gate <highlight><bold>510</bold></highlight> and NOR gate <highlight><bold>540</bold></highlight>. AND gate <highlight><bold>510</bold></highlight> receives an inverted output of synchronizer <highlight><bold>555</bold></highlight> as another input. NOR gate <highlight><bold>540</bold></highlight> receives the output of synchronizer <highlight><bold>525</bold></highlight> as another input. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> The effect of the connections is to ensure that all 0 to 1 transitions on one of the select lines <highlight><bold>537</bold></highlight> and <highlight><bold>568</bold></highlight> follows the 1 to 0 transition on the other select line (as described below with reference to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>). As a result, no clock signal may be generated on the output of OR gate <highlight><bold>590</bold></highlight> for a short duration, and such a situation may be acceptable as glitches are avoided in the generated clock signal. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> Synchronizer <highlight><bold>525</bold></highlight> (containing flip-flops <highlight><bold>520</bold></highlight> and <highlight><bold>530</bold></highlight>) receives the output of AND gate <highlight><bold>510</bold></highlight> and synchronizes the received output with the negative edge of the faster clock signal. Synchronizer <highlight><bold>555</bold></highlight> (containing flip-flops <highlight><bold>550</bold></highlight> and <highlight><bold>560</bold></highlight>) receives the output of NOR gate <highlight><bold>540</bold></highlight> and synchronizes the received output to the negative edge of the slower clock signal. The outputs of the two synchronizers represent the respective select signal for the two clock signals (faster and slower). </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> As noted above, signal control block <highlight><bold>505</bold></highlight> operates to avoid situation (C) by ensuring that the 0 to 1 transition (generated in response to change in sleep signal value) on one of the two select signals follows the 1 to 0 transition on the other signal. The manner in which such result is accomplished is described below in further detail with reference to the timing diagram of <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. </paragraph>
<paragraph id="P-0100" lvl="7"><number>&lsqb;0100&rsqb;</number> 11. Timing Diagram </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a timing diagram illustrating the timing relationships of various signals generated in the embodiment of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. The faster and slower clock signals are respectively labeled as 60 MHz and 10 MHz signals. The select signal is initially shown at a low logical level and successive transitions are shown at time points <highlight><bold>701</bold></highlight>, <highlight><bold>702</bold></highlight> and <highlight><bold>703</bold></highlight>. The operation of signal control block <highlight><bold>505</bold></highlight> is described with reference to transitions at <highlight><bold>701</bold></highlight> (0 to 1) and <highlight><bold>702</bold></highlight> (1 to 0). </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> With reference to transition <highlight><bold>701</bold></highlight>, the resulting transition on select line (output) <highlight><bold>537</bold></highlight> is shown synchronized with a negative edge of the faster clock signal at time point <highlight><bold>720</bold></highlight>. The transition on select line <highlight><bold>568</bold></highlight> is shown synchronized with a negative edge of the slower clock signal at time point <highlight><bold>705</bold></highlight>. As a result, both the AND gates <highlight><bold>570</bold></highlight> and <highlight><bold>580</bold></highlight> generate glitch-free output. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> In addition, the transition from 1 to 0 on select line <highlight><bold>568</bold></highlight> at time point <highlight><bold>706</bold></highlight> precedes the transition from 0 to 1 at time point <highlight><bold>720</bold></highlight> on select line <highlight><bold>537</bold></highlight> due to the operation of the feedback paths <highlight><bold>525</bold></highlight> and <highlight><bold>555</bold></highlight>. A dead area is present between time points <highlight><bold>706</bold></highlight> and <highlight><bold>720</bold></highlight>. Also, as the transition of the select signals are synchronized with the negative edges of the corresponding clock signals, the minimum pulse width generated by each AND gate equals the positive pulse width of the corresponding clock signal. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> With reference to transition <highlight><bold>702</bold></highlight>, the transitions on select lines <highlight><bold>537</bold></highlight> and <highlight><bold>568</bold></highlight> are respectively shown at time points <highlight><bold>725</bold></highlight> and <highlight><bold>730</bold></highlight>. The transition (1 to 0) at time point <highlight><bold>725</bold></highlight> on select line <highlight><bold>537</bold></highlight> precedes the transition (0 to 1) at time point <highlight><bold>730</bold></highlight>. Thus, a dead period is again present between time points <highlight><bold>725</bold></highlight> and <highlight><bold>730</bold></highlight>, and situation (C) noted above may be avoided. Thus, the present invention can be used to generate glitch free output when selecting from multiple clock signals. </paragraph>
<paragraph id="P-0105" lvl="7"><number>&lsqb;0105&rsqb;</number> 12. Conclusion </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> While various embodiments of the present invention have been described above, it should be understood that they have been presented by way of example only, and not limitation. Thus, the breadth and scope of the present invention should not be limited by any of the above described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of generating a glitch free output when selecting from a plurality of clock signals, said method comprising: 
<claim-text>(a) providing an OR logic gate and a plurality of AND logic gates, each of said OR logic gate and said plurality of AND logic gates comprises an output and a plurality of inputs, wherein the output of each of said plurality of AND logic gates is connected as an input of said OR logic gate; </claim-text>
<claim-text>(b) providing a clock signal and a select signal as two inputs to a corresponding one of said plurality of AND logic gates; </claim-text>
<claim-text>(c) introducing delays into at least one of said select signal and said clock signal corresponding to each one of said plurality of AND logic gates to ensure a desired delay exists between transitions on the corresponding select signal and the clock signal; and </claim-text>
<claim-text>(d) introducing delays into at least a plurality of said select signals and said clock signals to avoid the occurrence of a high to low transition on one input followed by low to high transition on another input of said two inputs of said OR gate within a desired duration, </claim-text>
<claim-text>wherein said desired delay prevents glitches at the output of each of said plurality of AND gates and wherein said desired duration prevents glitches at the output of said OR gate, </claim-text>
<claim-text>whereby the output of said OR logic gate represents said glitch free output. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein (c) comprises synchronizing one of said two inputs to one edge of a given clock signal and another one of said two inputs to another edge of said given clock signal. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein said plurality of clock signals comprise a faster clock signal and a slower clock signal, wherein said method further comprises receiving a sleep signal, wherein one of the two select signals corresponding to said faster clock signal and said slower clock signal is to be set to a high logical level when said sleep signal is at one logical level and another one of said two select signals is to be selected when said sleep signal is at another logical level. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein (d) comprises: 
<claim-text>(e) synchronizing each of said slower clock signal and the select signals corresponding to said faster clock signal and said slower clock signal to an edge of said faster clock signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein (d) further comprises: 
<claim-text>(f) first synchronizing said sleep signal with said slower clock signal, wherein (e) is performed after (f); </claim-text>
<claim-text>(g) using said sleep signal generated by (e) as one of said two select signals. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein (g) comprises using said sleep signal generated by (e) as said select signal associated with said faster clock signal, wherein (e) further comprises synchronizing said sleep signal with a negative edge of said faster clock signal. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, further comprising: 
<claim-text>inverting said sleep signal generated in (e) to generate an inverted sleep signal; </claim-text>
<claim-text>synchronizing said inverted sleep signal with a negative edge of said faster clock signal to generate a synchronized inverted signal, wherein said synchronized inverted signal is presented as said select signal for said slower clock signal; and </claim-text>
<claim-text>wherein (e) comprises delaying said slower clock signal based on a number of faster clock signal cycles taken for said sleep signal to be received at said AND logic gate after synchronization in (f), and said slower clock signal being synchronized with a positive edge of said faster clock signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein (d) comprises: 
<claim-text>(h) ensuring that a 0 to 1 transition on one of said two select lines follows a 1 to 0 transition on another select line when a logical value of said sleep signal changes, whereby no clock signal is generated on the output of said AND logic gate between the two transitions. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein (c) further comprises: 
<claim-text>(i) synchronizing a first one of said two select signals with a negative edge of said faster clock signal and providing said first one of said two select signals and said faster clock signal to one of said plurality of AND logic gates; and </claim-text>
<claim-text>(j) synchronizing a second one of said two select signals with a negative edge of said faster clock signal and providing said second one of said two select signals and said faster clock signal to another one of said plurality of AND logic gates. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein (g) comprises: 
<claim-text>receiving an inverted output of a first synchronizer and said sleep signal on another AND logic gate, said another AND logic gate also generating an output signal; and </claim-text>
<claim-text>receiving an output of a second synchronizer and said sleep signal on an XOR logic gate, said XOR logic gate also generating an output signal, </claim-text>
<claim-text>wherein (i) and (j) respectively comprise synchronizing a corresponding one of the output signal of said AND logic gate and said XOR logic gate. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein each of said AND logic gate comprises an AND gate, said OR logic gate comprises an OR gate, said XOR logic gate comprises an XOR gate, and said first delay comprises half a clock cycle period. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A method of generating a glitch free output when selecting from a faster clock signal and a slower clock signal in response to a sleep signal, wherein said sleep signal specifies which one of said faster clock signal and said slower clock signal is to be selected, said method comprising: 
<claim-text>receiving said sleep signal, said faster clock signal and said slower clock signal; </claim-text>
<claim-text>synchronizing said slower clock signal to an edge of said faster clock signal to generate a synchronized slower clock signal; </claim-text>
<claim-text>synchronizing said sleep signal to another edge of said faster clock signal to generate a synchronized select signal; and </claim-text>
<claim-text>selecting from said faster clock signal and said synchronized slower clock signal according to said synchronized select signal to generate said glitch free output. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, further comprising generating a inverted synchronized select signal, wherein one of said faster clock signal and said synchronized slower clock signal is selected using said inverted synchronized select signal and another one of said faster clock signal and said synchronized slower clock signal is selected according to said sleep signal. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A method of generating a glitch free output when selecting from a faster clock signal and a slower clock signal in response to a sleep signal, wherein said sleep signal specifies which one of said faster clock signal and said slower clock signal is to be selected, said method comprising: 
<claim-text>receiving said sleep signal, said faster clock signal and said slower clock signal; </claim-text>
<claim-text>inverting said sleep signal to generate an inverted sleep signal; </claim-text>
<claim-text>synchronizing said sleep signal with a negative edge of said of said faster clock signal to generate a synchronized sleep signal; </claim-text>
<claim-text>synchronizing said inverted sleep signal with a negative edge of said slower clock signal to generate a synchronized inverted sleep signal; </claim-text>
<claim-text>ensuring that a 0 to 1 transition on one of said synchronized sleep signal and said synchronized inverted sleep signal follows a 1 to 0 transition on another of said synchronized sleep signal and said synchronized inverted sleep signal; and </claim-text>
<claim-text>generating said glitch free output by selecting said faster clock signal when said sleep signal is at a 1 logical state and selecting said slower clock signal when said inverted sleep signal is at a 1 logical state. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A clock generation circuit generating a glitch free output when selecting from a plurality of clock signals, said circuit comprising: 
<claim-text>an OR logic gate and a plurality of AND logic gates, each of said OR logic gate and said plurality of AND logic gates comprises an output and a plurality of inputs, wherein the output of each of said plurality of AND logic gates is connected as an input of said OR logic gate, wherein a clock signal and a select signal are provided as two inputs to a corresponding one of said plurality of AND logic gates; </claim-text>
<claim-text>first means for introducing delays into at least one of said select signal and said clock signal corresponding to each one of said plurality of AND logic gates to ensure a desired delay exists between transitions; and </claim-text>
<claim-text>second means for introducing delays into at least a plurality of said select signals and said clock signals to avoid the occurrence of a high to low transition on one input followed by low to high transition on another input of said two inputs of said OR gate within a desired duration, </claim-text>
<claim-text>wherein said desired delay prevents glitches at the output of each of said plurality of AND gates and wherein said desired duration prevents glitches at the output of said OR gate </claim-text>
<claim-text>whereby the output of said OR logic gate represents said glitch free output. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The clock generation circuit of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein said first means for introducing comprises means for synchronizing one of said two inputs to one edge of a given clock signal and another one of said two inputs to another edge of said given clock signal. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The clock generation circuit of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein said plurality of clock signals comprise a faster clock signal and a slower clock signal, wherein said circuit further comprises means for receiving a sleep signal, wherein one of the two select signals corresponding to said faster clock signal and said slower clock signal is to be set to a high logical level when said sleep signal is at one logical level and another one of said two select signals is to be selected when said sleep signal is at another logical level. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The clock generation circuit of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein said second means for introducing comprises: 
<claim-text>first means for synchronizing each of said slower clock signal and the select signals corresponding to said faster clock signal and said slower clock signal to an edge of said faster clock signal; </claim-text>
<claim-text>second means for synchronizing said sleep signal with said slower clock signal, wherein said second means for synchronizing performs synchronization after synchronization by said first means for synchronization; and </claim-text>
<claim-text>means for using said sleep signal generated by (e) as one of said two select signals. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The clock generation circuit of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein said means for using uses said sleep signal generated by first means for synchronizing as said select signal associated with said faster clock signal, wherein said first means for synchronizing synchronizes said sleep signal with a negative edge of said faster clock signal. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The clock generation circuit of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, further comprising: 
<claim-text>means for inverting said sleep signal generated by said first synchronizing means to generate an inverted sleep signal; </claim-text>
<claim-text>third means for synchronizing said inverted sleep signal with a negative edge of said faster clock signal to generate a synchronized inverted signal, wherein said synchronized inverted signal is presented as said select signal for said slower clock signal; and </claim-text>
<claim-text>wherein said first means for synchronization delays said slower clock signal based on a number of faster clock signal cycles taken for said sleep signal to be received at said AND logic gate after synchronization in said second means for synchronization, and said slower clock signal being synchronized with a positive edge of said faster clock signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The clock generation circuit of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein said second means for introducing ensures that a 0 to 1 transition on one of said two select lines follows a 1 to 0 transition on another select line when a logical value of said sleep signal changes, whereby no clock signal is generated on the output of said AND logic gate between the two transitions. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The clock generation circuit of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein first means for introducing synchronizes a first one of said two select signals with a negative edge of said faster clock signal and providing said first one of said two select signals and said faster clock signal to one of said plurality of AND logic gates, said first means for introducing further synchronizing a second one of said two select signals with a negative edge of said faster clock signal and providing said second one of said two select signals and said faster clock signal to another one of said plurality of AND logic gates. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The clock generation circuit of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein said means for using comprises: 
<claim-text>means for receiving an inverted output of a first synchronizer and said sleep signal on another AND logic gate, said another AND logic gate also generating an output signal; and </claim-text>
<claim-text>means for receiving an output of a second synchronizer and said sleep signal on an XOR logic gate, said XOR logic gate also generating an output signal, </claim-text>
<claim-text>wherein (i) and (j) respectively comprise synchronizing a corresponding one of the output signal of said AND logic gate and said XOR logic gate. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A clock generation circuit for generating a glitch free output when selecting from a faster clock signal and a slower clock signal in response to a sleep signal, wherein said sleep signal specifies which one of said faster clock signal and said slower clock signal is to be selected, said clock generation circuit comprising: 
<claim-text>a first logical AND gate generating a first output by performing a logical AND operation of a first select signal and a slower clock signal; </claim-text>
<claim-text>a second logical AND gate generating a second output by performing a logical AND operation of a second select signal and said faster clock signal; </claim-text>
<claim-text>an OR gate generating said glitch free output by performing a logical OR operation of said first output and said second output received as two inputs; and </claim-text>
<claim-text>a signal control block receiving said sleep signal and generating said first select signal and said second select signal based on said sleep signal, said first select signal being generated such that at least a desired delay exists between transitions on said first select signal and said slower clock signal, said second select signal being generated such that at least a desired delay exists between transitions on said second select signal and said faster clock signal, said signal control block further introducing delays into at least two of said first select signal, said second select signal, said slower clock signal and said faster clock signal to avoid the occurrence of a high to low transition on one input followed by low to high transition on another input of said two inputs within a desired duration. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The clock generation circuit of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, wherein said signal control block comprises a first synchronizer synchronizing said sleep signal with a negative edge of said faster clock signal to generate said second select signal. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The clock generation circuit of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein said signal control block further comprises: 
<claim-text>an inverter inverting said second select signal to generate an inverted output; and </claim-text>
<claim-text>a second synchronizer synchronizing said inverted output with a negative edge of said faster clock signal to generate said first select signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The clock generation circuit of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, wherein said signal control block further comprises: 
<claim-text>a third synchronizer synchronizing said sleep signal with a negative edge of said slower clock signal to generate an output, wherein the output of said third synchronizer is provided to said first synchronizer; and </claim-text>
<claim-text>a fourth synchronizer synchronizing said slower clock signal with a positive edge of said faster clock signal to generate an output, the output of said fourth synchronizer being provided as an input to said first AND gate. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The clock generation circuit of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, wherein said signal control block ensures that a 1 to 0 transition on one of said first select signal and said second select signal precedes a 0 to 1 transition on another one of said first select signal and said second select signal, wherein said 1 to 0 transition and said 0 to 1 transition occur in response to a change in value on said sleep signal. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The clock generation circuit of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein said signal control block comprises: 
<claim-text>a first synchronizer and a second synchronizer, each generating an output; </claim-text>
<claim-text>a third AND logic gate generating an output by performing an AND logical operation of an inverted value of the output of said second synchronizer and said sleep signal, wherein the output of said third AND logic gate is provided as an input to said first synchronizer; and </claim-text>
<claim-text>a NOR logic gate generating an output by performing a NOR logical operation of said sleep signal and the output of said first synchronizer, wherein the output of said NOR logic gate is provided as an input to said second synchronizer, </claim-text>
<claim-text>wherein said first synchronizer is designed to generate said first select signal by synchronizing the input to said negative edge of said faster signal, and wherein said second synchronizer is designed to generate said second select signal by synchronizing the input to said negative edge of said slower clock signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A system operating using a slower clock signal when electrical power needs to be saved and using a faster clock signal otherwise, said system comprising: 
<claim-text>a processor generating a sleep signal which indicates that said slower clock signal is to be used when said sleep signal is at one logical value, and said faster clock signal is to be used otherwise; </claim-text>
<claim-text>a clock generation circuit for generating a glitch free output by selecting one of said faster clock signal and said slower clock signal, said clock generation circuit comprising: 
<claim-text>a first logical AND gate generating a first output by performing a logical AND operation of a first select signal and a slower clock signal; </claim-text>
<claim-text>a second logical AND gate generating a second output by performing a logical AND operation of a second select signal and said faster clock signal; </claim-text>
<claim-text>an OR gate generating said glitch free output by performing a logical OR operation of said first output and said second output received as two inputs; and </claim-text>
<claim-text>a signal control block receiving said sleep signal and generating said first select signal and said second select signal based on said sleep signal, said first select signal being generated such that at least a desired delay exists between transitions on said first select signal and said slower clock signal, said second select signal being generated such that at least a desired delay exists between transitions on said second select signal and said faster clock signal, said signal control block further introducing delays into at least two of said first select signal, said second select signal, said slower clock signal and said faster clock signal to avoid the occurrence of a high to low transition on one input followed by low to high transition on another input of said two inputs within a desired duration. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein said signal control block comprises a first synchronizer synchronizing said sleep signal with a negative edge of said faster clock signal to generate said second select signal. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein said signal control block further comprises: 
<claim-text>an inverter inverting said second select signal to generate an inverted output; and </claim-text>
<claim-text>a second synchronizer synchronizing said inverted output with a negative edge of said faster clock signal to generate said first select signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference>, wherein said signal control block further comprises: 
<claim-text>a third synchronizer synchronizing said sleep signal with a negative edge of said slower clock signal to generate an output, wherein the output of said third synchronizer is provided to said first synchronizer; and </claim-text>
<claim-text>a fourth synchronizer synchronizing said slower clock signal with a positive edge of said faster clock signal to generate an output, the output of said fourth synchronizer being provided as an input to said first AND gate. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein said signal control block ensures that a 1 to 0 transition on one of said first select signal and said second select signal precedes a 0 to 1 transition on another one of said first select signal and said second select signal, wherein said 1 to 0 transition and said 0 to 1 transition occur in response to a change in value on said sleep signal. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 34</dependent-claim-reference>, wherein said signal control block comprises: 
<claim-text>a first synchronizer and a second synchronizer, each generating an output; </claim-text>
<claim-text>a third AND logic gate generating an output by performing an AND logical operation of an inverted value of the output of said second synchronizer and said sleep signal, wherein the output of said third AND logic gate is provided as an input to said first synchronizer; and </claim-text>
<claim-text>a NOR logic gate generating an output by performing a NOR logical operation of said sleep signal and the output of said first synchronizer, wherein the output of said NOR logic gate is provided as an input to said second synchronizer, </claim-text>
<claim-text>wherein said first synchronizer is designed to generate said first select signal by synchronizing the input to said negative edge of said faster signal, and wherein said second synchronizer is designed to generate said second select signal by synchronizing the input to said negative edge of said slower clock signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 35</dependent-claim-reference>, wherein said glitch free circuit is provided as a clock signal driving said processor.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030001612A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030001612A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030001612A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030001612A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030001612A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030001612A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
