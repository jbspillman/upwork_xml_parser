<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005160A1-20030102-D00000.TIF SYSTEM "US20030005160A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005160A1-20030102-D00001.TIF SYSTEM "US20030005160A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005160A1-20030102-D00002.TIF SYSTEM "US20030005160A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005160A1-20030102-D00003.TIF SYSTEM "US20030005160A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005160A1-20030102-D00004.TIF SYSTEM "US20030005160A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005160A1-20030102-D00005.TIF SYSTEM "US20030005160A1-20030102-D00005.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005160</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09892394</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010627</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/16</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>709</class>
<subclass>248000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>709</class>
<subclass>245000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Dynamic logical control of network units in ad-hoc communications networks</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Donald</given-name>
<middle-name>E.</middle-name>
<family-name>Schaefer</family-name>
</name>
<residence>
<residence-us>
<city>Wantagh</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>Daniel R. McGlynn</name-1>
<name-2>Symbol Technologies, Inc.</name-2>
<address>
<address-1>One Symbol Plaza, Ms A-6</address-1>
<city>Holtsville</city>
<state>NY</state>
<postalcode>11742</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A logical function is executed in addressable units in a wireless local area network based upon the current state value of other units in the network. Depending upon a persistence setting which may be pre-set or programmed into each unit, the logical function may be recomputed at predetermined time intervals, or upon receiving an overriding resetting signal or control packet. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The apparatus and methods consistent with the present invention relates to computer terminals or network addressible units operated in ad hoc wireless networks, and more particularly to the network architecture, configuration software, and inter-network messaging and communications protocols needed to support updating message and synchronization services between network units operated in such networks, and from network to network. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Background of the Invention </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Wireless local area networks use infrared or radio frequency communications channels to communicate between stationary, portable or mobile computer terminals and stationary access points or base stations. These access points are in turn connected by a wired (or possibly wireless) communication channel to a network infrastructure which connects groups of access points together to form a local area network, including, optionally, one or more servers or host computer systems. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Wireless and radio frequency (RF) protocols are known which support the logical interconnection of portable roaming terminals having a variety of types of communication capabilities to host computers. The logical interconnections are based upon an infrastructure in which at least some each of the remote terminals are capable of communicating with at least two of the access points when located within a predetermined range therefrom, each terminal unit being normally associated with and in communication with a single one of such access points. Based on the overall spatial layout, response time, and loading requirements of the network, different networking schemes and communication protocols have been designed so as to most efficiently regulate the communications between a given terminal and the network through the selected access point. One such protocol is set forth in the ISO/IEC 8802-11, or ANSI/IEEE Std 802.11 entitled &ldquo;Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) Specifications&rdquo; (1999 edition) available from the IEEE Standards Department, Piscataway, N.J. (hereinafter the &ldquo;IEEE 802.11 Standard&rdquo;). </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Prior to the present invention, there has not been a simple, ad hoc network architecture which would allow a user of a network to automatically control the status and operation of network units on a dynamic basis without the use of a controller, master station, or other centralization unit. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF INVENTION </heading>
</section>
<section>
<heading lvl="1">OBJECTS OF THE INVENTION </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> It is a general object of the present invention to provide a dynamic logical messaging and communications protocol and network architecture in an ad hoc wireless network. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> It is another object of the invention to provide a method for updating and sychronizing network units in a ad hoc network using announcement messages. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> It is a further object of the present invention to provide a logical interface between network units in an ad hoc wireless personal area network. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> It is another object of the present invention to provide a low cost, consumer wireless ad hoc communications network for controlling light switches, appliances, and other portable or stationary network units. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> It is an even further object of the invention to provide a method which can be used to accomplish one or more of the above objectives. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Additional objects, advantages and novel features of the present invention will become apparent to those skilled in the art from this disclosure, including the following detail description as well as by practice of the invention. While the invention is described below with reference to preferred embodiments, it should be understood that the invention is not limited thereto. Those of ordinary skill in the art having access to the teachings herein will recognize additional applications, modifications and embodiments in other fields, which are within the scope of the invention as disclosed and claimed herein and with respect to which the invention could be of significant utility. </paragraph>
</section>
<section>
<heading lvl="1">FEATURES OF THE INVENTION </heading>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The present invention provides a method for providing control signals or updates to network addressible nodes including periodically broadcasting an announcement message from each network unit; including the state value the user identification communication link; receiving the announcement message at each node on the network; and processing the state value and the user identification information to determine a new state value for each node. The invention further provides a method of operating an wireless area network in which each unit has a state value at any given time, comprising broadcasting from each unit in the network its identity and state value; and receiving in each mobile unit in the network the identity and state value of every other unit and computing a predetermined Boolean expression in each respective mobile unit a new state value based upon the received identities and state values. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The novel features and characteristics of the invention are set forth in the appended claims. The invention itself, however, as well as other features and advantages thereof, will be best understood by reference to a detailed description of a specific embodiment, when read in conjunction with the accompanying drawings.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">DESCRIPTION OF DRAWINGS </heading>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates a network environment in which the present invention can be implemented; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates the coupling of the ad hoc network to a LAN; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates a block diagram of a network unit; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates an operating system and application environment in the network unit; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates a process flow diagram of a network updating system according to the present invention;</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Like reference symbols in the various drawings indicate like elements. </paragraph>
<section>
<heading lvl="1">DESCRIPTION OF THE PREFERRED EMBODIMENT </heading>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Referring now to the figures, <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a diagrammatic representation of a typical networking environment consistent with the present invention in a preferred embodiment of the home, small office, school, or similar public or private space. The physical hardware components reside at the lowermost OSI layer, or physical layer, and include various nodes distributed along the wireless network link. Although the term &ldquo;node&rdquo; broadly refers to all types of physical devices attached to the network link, only client or peer nodes are depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> More specifically, <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates clients interconnected through network links, although both clients and servers, as well as other types of nodes, may be distributed along the network link as well. As used in this specification, the term &ldquo;client&rdquo; will generally denote a peripheral device or network appliance of some type associated with a user. The term &ldquo;server&rdquo; includes any device directed for controlling and coordinating shared usage of an network resource, such as an access point, or website content or data source. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> depicts an ad-hoc network of network units A, B, C, D, and E. Each unit has an address or identifier uniquely associated with it, and a state value. In one embodiment, the address may be its media access control (MAC) address, or in Bluetooth networks, a Bluetooth address. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The state value may be in simpliest terms a digital 1 or 0, i.e. a single bit. The initial state value may be predetermined, e.g. &ldquo;0&rdquo; for off, which may be subsequently changed by the user, either manually by direction action on the mobile unit, or through a wireless transmitted control signal. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The wireless ad hoc network is initiated by each network unit transmitting an announcement message or packet containing its address and state value. The announcement message may also contain timing, clock, or synchronization information. The media access control technique (CSMA/CD, TDMA, etc.) may be selected depending upon the type of network. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Each network unit within a working range of the broading unit will receive the announcement message and process it, storing the identies (or address es) of the broadcasting units, and this current state value, in tables in memory in the mobile unit. Such table values may be periodically updated as new broadcasts are received. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> A logical function is executed in addressable units in a wireless local area network based upon the current state value of other units in the network. Depending upon a persistence setting which may be pre-set or programmed into each unit, the logical function may be recomputed at predetermined time intervals, or upon receiving an overriding resetting signal or control packet. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> For example, network unit B executes the Boolean logic function shown in the Figure. If B is a light, it may change state (i.e., go on or off) depending upon the value computed by the logic function. There may be a persistence setting so such value is not changed for a period of time after switching, which may be programmable or varied according to time of day, day of week, or other variables. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Although control switches or network addressible appliances are the preferred network unit, the data units may also include bar-code readers, and may be portable or stationery or worn by the user rather than hand-held. The mobile units <highlight><bold>15</bold></highlight> may also function as voice communication handsets, pagers, still image or video cameras, cellular telephones, AM/FM radio broadcast receivers, or any combination of the foregoing. Other types of data gathering devices may be utilized as terminals and use the message forwarding features of the invention, such as temperature, pressure, or other biophysical or environmental measuring devices, event counters, voice or sound activated devices, intrusion detectors, etc. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Various other types of network nodes or terminals may be advantageously employed in a system having features of the invention; these portable terminals ordinarily could utilize data entry media such as keyboards, touchscreens, a magnetic cards, RFID tags, biometric sources, SIM devices, smart cards, electronic key (e.g. &ldquo;Ving&rdquo;) access cards, or the like, as well as a display (or printer) for providing a display of the information detected, transmitted and/or received by the terminal. In this embodiment used as an illustrative example, there may be from one up to sixty-four of the base stations (three stations being shown in the Figure) and up to several hundred of the remote portable units; of course, the network is scalable and may be expanded by merely changing the size of address fields and the like in the digital system, as will appear, but a limiting factor is the RF traffic and attendant delays in waiting for a quiet channel. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The ad hoc network <highlight><bold>100</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, may be coupled to additional LANs <highlight><bold>200</bold></highlight>, <highlight><bold>300</bold></highlight>, <highlight><bold>400</bold></highlight> etc. through controllers such as bridges <highlight><bold>50</bold></highlight>, <highlight><bold>60</bold></highlight>, etc. or routers <highlight><bold>55</bold></highlight>, <highlight><bold>65</bold></highlight>, <highlight><bold>75</bold></highlight>, <highlight><bold>85</bold></highlight>, etc. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The LAN networks may also include a server <highlight><bold>95</bold></highlight> which may be associated with an Internet site, and may include a plurality of software components that can be accessed by an agent program. Such components may include one or more object classes including applets, servlets, Java Beans&trade; etc. or in general any executable unit of code. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The server may be a directory server or standard database management system. The server <highlight><bold>95</bold></highlight> may include facilities for address translation, formatting, storage, and encryption key management, among others. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> Such extensive LAN communications networks, as depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, may a also ordinarily be used in a convention centers, manufacturing facility, office building complex, warehouse, retail establishment, shopping malls, or like commercial or public facility, or combination of these facilities, where the data-gathering terminals or mobile units would be used for inventory control in stockroom or receiving/shipping facilities, at checkout (point of sale) counters, for reading forms or invoices of the like, for personnel security checking at gates or other checkpoints, at time clocks, for manufacturing or process flow control, for providing information to customers (such as location, and directions to a site or person) and many other such uses. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> An RF packet communications protocol is provided between the remote units and the base stations, and includes a transmit/receive exchange, referred to hereinafter simply as an &ldquo;exchange&rdquo;. This protocol is similar to collision-sense multiple access (CSMA) in that a unit first listens before transmitting, and does not transmit if the channel is not free. This exchange always begins with a remote-to-base transmitted packet, representing an RF transmission from a remote unit to be received by the base stations within range. The transmitted packet is followed after a fixed time interval by a base-to-remote unit of RF information transmitted by the base station servicing this particular remote unit. Each of these packets is of fixed timing; a transceiver in a remote unit begins an exchange at its own initiative by first listening for other traffic for a brief interval t<highlight><subscript>o </subscript></highlight>(typically 0.3 msec.) and, if the RF channel is quiet, starting a transmission at a time of its own selection (asynchronous to any clock period of the base stations or host computer). This outgoing transmission packet lasts for a time t<highlight><subscript>1 </subscript></highlight>as seen in the Figure, and in an example embodiment this period is 4.8 milliseconds. Then at a precise time delay t<highlight><subscript>2 </subscript></highlight>after it started transmission (e.g. 5 msec after the beginning of t<highlight><subscript>1</subscript></highlight>the transceiver begins listening for the return packet from the base station. The transceiver in the remote unit only responds to receipt of the packet beginning in a very rigid time window t<highlight><subscript>3 </subscript></highlight>of a few microseconds length, and if the packet has not started during this window then anything to follow is ignored. The packet is an acknowledge signal, and also contains data if the base station has any message waiting to be sent. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> The steps carried out by a mobile unit <highlight><bold>15</bold></highlight> which is not currently associated to an access point in selecting an access point according to the IEEE 802.11 standard are described as follows. The mobile unit (MU) sends out a probe packet to all access points (APs), typically at the lowest data rate it is otherwise able to use with the network. The probe packet contains the mobile unit source address but has no destination address and hence any access point that detects the probe packet and is capable of responding at the same data rate must send a response. Accordingly, the probe packet is detected by all access points within range and a subset of those access points sends out a probe response packet. An evaluation of the signal quality and possibly other factors is made by the MU of the communications with the most eligible access point (if any) at the highest data rate. If such communications are acceptable, the MU will associate with the selected AP. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> If the MU is already associated with an access point and operating at a data rate lower than the highest data rate, then depending upon the performance statistics, it will carry out an update probe at predetermined intervals to see if it can operate at a higher data rate, and associate with a new AP at the higher data rate. Such association with different AP, known as roaming, is typically encountered when the MU is moved in and out of range, e.g. to and from the periphery of the range of the original of AP, but may occur even if the mobile unit is motionless during conditions of fluctuations in traffic on the AP with which the MU is associated. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The MU can be used for a variety of information retrieving and computing purposes including but not limited to Internet access, data base lookup, order entry, messaging, document preparation and word processing, scheduling, mathematical computation, and the like. For these purposes, MU are provided with operating system software. In an embodiment, the operating system can be Windows 9x , Windows 2000, CE or NT platforms. In other embodiments, the operating system can be Mac OS, Palm OS, or Linux. In one embodiment, the memory <highlight><bold>341</bold></highlight> can be random access memory into which the operating system is loaded. In another embodiment, the memory <highlight><bold>341</bold></highlight> can be any type of firmware such as EPROM or EEPROM into which the operating system is &ldquo;burned&rdquo;. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates a detailed view of a remote unit <highlight><bold>15</bold></highlight>. The remote unit <highlight><bold>15</bold></highlight> includes a CPU <highlight><bold>340</bold></highlight> connected to a local bus <highlight><bold>342</bold></highlight>. A memory <highlight><bold>341</bold></highlight> is also connected to the local bus <highlight><bold>342</bold></highlight>, and can provide instructions to the CPU <highlight><bold>340</bold></highlight>. A peripheral bar code data acquisition device <highlight><bold>343</bold></highlight> is optionally coupled to the CPU via the bus <highlight><bold>342</bold></highlight>. The device <highlight><bold>343</bold></highlight> can be used to detect and/or decode data from a bar code (not shown). The device <highlight><bold>343</bold></highlight> can be used to input data from a photodetector device <highlight><bold>345</bold></highlight> that produces a serial electrical signal fed to a decoder <highlight><bold>347</bold></highlight> responding to the characteristic patterns of bar code symbols and providing bar code data to the memory <highlight><bold>341</bold></highlight> via device <highlight><bold>343</bold></highlight> when a bar code is scanned. The bar code data can be moved to memory by a variety of techniques such as direct memory access (DMA) or CPU instructions. Ultimately the bar code data is transferred to an RF transceiver <highlight><bold>344</bold></highlight> for transmission to the base unit <highlight><bold>12</bold></highlight>, <highlight><bold>13</bold></highlight>, <highlight><bold>14</bold></highlight> and ultimately the host computer <highlight><bold>10</bold></highlight>. The RF transceiver <highlight><bold>344</bold></highlight> is coupled to and controlled by the CPU through the bus <highlight><bold>342</bold></highlight>, and transmits the RF signal through an antenna <highlight><bold>345</bold></highlight> or detects and converts RF signals received by the antenna <highlight><bold>345</bold></highlight>. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> Typically, the remote unit <highlight><bold>15</bold></highlight> has a manual entry device <highlight><bold>348</bold></highlight> such as a keyboard, and a visual display <highlight><bold>349</bold></highlight> such as a liquid crystal display (LCD) device. The elements of the entry device <highlight><bold>348</bold></highlight> and the display <highlight><bold>349</bold></highlight> are scanned by signals generated in the CPU <highlight><bold>340</bold></highlight>, or generated in a entry device and display I/O controller. In one embodiment, the I/O controller is an Intel&reg; 8052 microcontroller. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates an operating system having an application environment. As discussed above the operating system <highlight><bold>430</bold></highlight> can be one of the various Windows environments. The operating system <highlight><bold>430</bold></highlight> provides software to manage configure, enable and allocate physical resources of the MU <highlight><bold>15</bold></highlight>. For example, the operating system <highlight><bold>430</bold></highlight> may include a memory allocation algorithm to allocate the memory <highlight><bold>341</bold></highlight> among various software tasks. Additionally, the operating system includes instructions from the memory to control the RF transmissions and receptions as well as data flow between the data acquisition device <highlight><bold>343</bold></highlight> and the RF transceiver <highlight><bold>344</bold></highlight>. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> An application environment <highlight><bold>410</bold></highlight> contains one or more software application processes <highlight><bold>411</bold></highlight>, <highlight><bold>414</bold></highlight>. The applications <highlight><bold>411</bold></highlight>, <highlight><bold>414</bold></highlight> can be any variety of applications for use on the remote unit <highlight><bold>15</bold></highlight>. For example, the application <highlight><bold>411</bold></highlight> can be a browser for connecting to a network such as the Internet. The application <highlight><bold>414</bold></highlight> can be a configuration program that configures the remote unit <highlight><bold>15</bold></highlight> for use with the network to which the remote unit <highlight><bold>15</bold></highlight> connects. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> Each application <highlight><bold>411</bold></highlight>, <highlight><bold>414</bold></highlight> can have one or more processes <highlight><bold>412</bold></highlight>, <highlight><bold>413</bold></highlight>, <highlight><bold>415</bold></highlight>, <highlight><bold>416</bold></highlight> respectively, associated with them. These processes can serve a variety of purposes related to the applications <highlight><bold>411</bold></highlight>, <highlight><bold>414</bold></highlight>. For example, one or more of the processes can be a dynamic link library (DLL) <highlight><bold>412</bold></highlight>, <highlight><bold>413</bold></highlight>, and <highlight><bold>415</bold></highlight>, <highlight><bold>416</bold></highlight> respectively associated with it. A DLL is a feature of Windows platform that allow executable code modules to be loaded on demand and dynamically, and linked at run time. Library code can be updated, transparent to the application <highlight><bold>411</bold></highlight>, <highlight><bold>414</bold></highlight>, and unloaded when no longer needed. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The operating system <highlight><bold>430</bold></highlight> can include an application programming interface <highlight><bold>490</bold></highlight> (API). The API <highlight><bold>490</bold></highlight> is the software that the application processes <highlight><bold>411</bold></highlight>, <highlight><bold>414</bold></highlight> use to request and carry out lower level services performed by the operating system <highlight><bold>430</bold></highlight>. For Windows, the API also helps applications <highlight><bold>411</bold></highlight>, <highlight><bold>414</bold></highlight> manage windows, menus, icons and other graphical user interface (GUI) elements. The API <highlight><bold>490</bold></highlight> includes a set of standard software interrupts, calls and data formats applications <highlight><bold>411</bold></highlight>, <highlight><bold>414</bold></highlight> use to initiate contact with device drivers <highlight><bold>450</bold></highlight>, <highlight><bold>460</bold></highlight>. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The operating system <highlight><bold>430</bold></highlight> can include one or more device drivers <highlight><bold>450</bold></highlight>, <highlight><bold>460</bold></highlight>. The device drivers <highlight><bold>450</bold></highlight>, <highlight><bold>460</bold></highlight> provide control functionally specific to a particular physical device or class of devices. Additionally, the device drivers <highlight><bold>450</bold></highlight>, <highlight><bold>460</bold></highlight> provides standard software interfaces allowing other system components to access the controlled device. For example, one device driver <highlight><bold>450</bold></highlight> can control the code data acquisition device <highlight><bold>343</bold></highlight> and provide data to and from applications <highlight><bold>411</bold></highlight>, <highlight><bold>414</bold></highlight> through the API <highlight><bold>490</bold></highlight>. The other device driver <highlight><bold>460</bold></highlight> can control the RF transceiver <highlight><bold>344</bold></highlight> that allows data to be transferred from operating system <highlight><bold>430</bold></highlight> to the RF transceiver <highlight><bold>344</bold></highlight> through device driver <highlight><bold>460</bold></highlight>. Operating system <highlight><bold>430</bold></highlight> also includes a BIOS <highlight><bold>402</bold></highlight> to run standard start up routines for the remote unit <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> A variety of application programs can be included in the operating system. One such application according to the present invention is a manual activation and radio activation program. Such an application program derives data from manual activation of a switch, and places the switch state in a message for automatic transmission by the RF transceiver. A key aspect of the present invention is that such operations may be done automatically through the use of an configuration program in which a profile has been created to automatically transmit the data to other nodes, the Internet or other network website for further processing at a server <highlight><bold>95</bold></highlight>, such as for deriving destination address and hand-off to another type of network. This configuration program can enable a user to store configurations for numerous networks such that when a user turns on the network unit <highlight><bold>15</bold></highlight>, the program automatically loads the correct configuration to communicate with each destination station that the unit <highlight><bold>15</bold></highlight> may wish to send a message. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a flow diagram of the processing of updating units in an ad hoc network according to the present invention. We assume a configuration such as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, and that the process is initiated by the user manually changing the state of unit A, e.g. by flipping a switch, <highlight><bold>501</bold></highlight>. Unit A then broadcasts its state information into the air <highlight><bold>501</bold></highlight>, and the signal is received by nearby units B, C, D, and E, <highlight><bold>503</bold></highlight>. According to a predetermined schedule, the received state values will be stored in each unit until computation of the new state value is scheduled for each unit. Each unit may be scheduled independently, at different update rates, depending upon the type of unit or its application. At such time, the new state value is computed in the nearby units, <highlight><bold>504</bold></highlight>. Then, again according to a predetermined schedule, the revised state values in each of the units will be broadcast, <highlight><bold>505</bold></highlight>. As the broadcast state values are received in nearby units, the process repeats itself as at step <highlight><bold>503</bold></highlight>. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> Another feature of the present invention is to provide a graphical user interface which enables a user to develop a specify scanning, paging, or other notification operational parameters for a network unit through the use of icons, buttons, meters, slides, or other objects implemental on a interactive display. More particularly, the present invention may also provide an interactive display to the user depicting a graph or list of the servers, networks, or users, wherein points represent mobile units, network nodes, gateways, service providers, radio paging services, or other well known designated network units together, while lines represent channels, links, or other connectivity media. The user may define the architecture by pointing and clicking, or drag and dropping, on such objects on the display as is well known in the art. so as to achieve the desired control architecture and activation schedule. One such architecture is specified by a user or network manager, it may be exported or broadcast as a software file to the actual various network elements represented, along activation schedules, to indicate the duration, context, or other bounds with which the network service is to be configured. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> In addition to the ad hoc network configuration by a user, by interacting with a graphical user interface, the present invention also allows the automatic reconfiguration of a network &ldquo;on the fly&rdquo;, or adaptively in response to changing traffic patterns, instructions in signal protocols, or the like. Resident software modules at each network node may adaptively configure the network node or channel links attached to the network node, according to levels or type of incoming traffic, or in response to signaling protocols. Such adaptation may take place through the use of separate signaling channels or through the use of management packets addressed to a specific network node and designed to reconfigure that network node in connection with a specific session or traffic condition. In addition to the foregoing, the network node may also be reconfigured for a series or set of packets, i.e. in the context for providing higher quality of service to particular identified set of packets while providing normal quality of service to all other packets. One application of the foregoing is to achieve uniformity in the quality of service from end to end, along each network link from source to destination regardless of the particular packet path chosen or network nodes encountered during the transmission from source to destination. The exporting or automatic installation of software modules in network nodes or mobile units according to the present invention is one suitable method for achieving such &ldquo;on the fly&rdquo; adaptive network configuration. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> Various aspects of the techniques and apparatus may be implemented in digital circuitry, or in computer hardware, firmware, software, or in combinations of them. Apparatus of the invention may be implemented in computer products tangibly embodied in a machine-readable storage device for execution by a programmable processor, or on software located at a network node or web site which may be downloaded to the computer product automatically or on demand. The foregoing techniques may be performed, for example, single central processor, a multiprocessor, one or more digital signal processors, gate arrays of logic gates, or hardwired logic circuits for executing a sequence of signals or program of instructions to perform functions of the invention by operating on input data and generating output. The methods may advantageously be implemented in one or more computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from, and to transmit data and instructions to, a data storage system, at least one in/out device, and at least one output device. Each computer program may be implemented in a high-level procedural or object-oriented programming language, or in assembly or machine language if desired; and in any case, the language may be compiled or interpreted language. Suitable processors include, by way of example, both general and special purpose microprocessors. Generally, a processor will receive instructions and data from read-only memory and/or random access memory. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non-volatile memory, including by way of example, semiconductor devices, such as EPROM, EEPROM, and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto-optical disks; and CD-ROM disks. Any of the foregoing may be supplemented by or incorporated in, specially designed application-specific integrated circuits (ASICS). </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> It will be understood that each of the elements described above, or two or more together, also may find a useful application in other types of constructions differing from the types described above. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> While the invention has been illustrated and described as embodied in a ad hoc communications network, it is not intended to be limited to the details shown, since various modifications and structural changes may be made without departing in any way from the spirit of the present invention. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> Without further analysis, the foregoing will so fully reveal the gist of the present invention that others can, by applying current knowledge, readily adapt it for various applications without omitting features that, from the standpoint of prior art, fairly constitute essential characteristics of the generic or specific aspects of this invention and, therefore, such adaptations should and are intended to be comprehended within the meaning and range of equivalence of the following claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed as new and desired to be protected by Letter Patent is set forth in the appended claims: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of operating an wireless area network in which each unit has a state value at any given time, comprising 
<claim-text>broadcasting from each unit in the network its identity and state value; and </claim-text>
<claim-text>receiving in each mobile unit in the network the identity and state value of every other unit and computing a predetermined Boolean expression in each respective mobile unit a new state value based upon the received identities and state values. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising a distribution node on the network which is an Internet website. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the announcement broadcast is in the form of a radio signal. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the broadcast includes information on the location of the network unit. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the distribution node includes a database containing address information for each network unit. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein the distribution node on the network is a stationary access point in a wireless local area network. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the message is in the form of a HTML script. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising providing access to the network page through a URL containing the appropriate query strings necessary to present the appropriate page to the destination station. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the announcement signal identifies the user to the destination station. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the network is an ad hoc network.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005160A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005160A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005160A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005160A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005160A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005160A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
