<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005281A1-20030102-D00000.TIF SYSTEM "US20030005281A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005281A1-20030102-D00001.TIF SYSTEM "US20030005281A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005281A1-20030102-D00002.TIF SYSTEM "US20030005281A1-20030102-D00002.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005281</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09892671</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010627</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L009/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>713</class>
<subclass>151000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>System for increasing realized secure sockets layer encryption and decryption connections</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Joseph</given-name>
<middle-name>F.</middle-name>
<family-name>Cihula</family-name>
</name>
<residence>
<residence-us>
<city>Hillsboro</city>
<state>OR</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>Pillsbury Winthrop LLP</name-1>
<name-2>Intellectual Property Group</name-2>
<address>
<address-1>Suite 2800</address-1>
<address-2>725 So. Figueroa Street</address-2>
<city>Los Angeles</city>
<state>CA</state>
<postalcode>90017-5406</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A system for increasing realized secure sockets layer (&ldquo;SSL&rdquo;) encryption and decryption connections is disclosed. The system combines monitoring of server load with adjustment of static SSL parameters to optimize a system of devices. The system monitors parameters of the servers that affect the ability of the servers to process SSL connections. An &ldquo;SSL capacity&rdquo; value for each server is calculated which represents the capability of that server to process SSL connections. This value is used to calculate an SSL threshold for that server, which is then applied to the SSL device to determine how many SSL connections the SSL device should process for that server. Since the connection threshold for an SSL device is a function of the device&apos;s load and each server&apos;s SSL capacity, and these values are dynamic, the connection threshold values are recalculated periodically to ensure increased SSL performance without impact to client response. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Embodiments described herein are directed to a system for increasing realized secure sockets layer (&ldquo;SSL&rdquo;) encryption and decryption connections without significant impact to client response. The system combines monitoring of server load with dynamic adjustment of static SSL parameters to optimize an entire system of devices. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Secure Sockets Layer (&ldquo;SSL&rdquo;) is a protocol for transmitting private documents in a public data communication network. SSL operates by using a key to encrypt data that is transferred over an SSL connection. The SSL protocol typically uses Transmission Control Protocol/Internet Protocol (&ldquo;TCP/IP&rdquo;) and allows the following: 1) an SSL-enabled server to authenticate itself to an SSL-enabled client; 2) the client to authenticate itself to the server; and 3) both machines to establish an encrypted connection. An encrypted SSL connection requires the encryption by the sending software, and the decryption by the receiving software, of all information sent between a server and a client, thereby providing a high degree of confidentiality. Confidentiality is important for both parties to any private transaction. In addition, all data sent over an encrypted SSL connection is protected with a mechanism for detecting tampering&mdash;that is, for automatically determining whether the data has been altered from the point of transmission from the sending software until the data is received by the receiving software. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> In current systems, SSL encryption and decryption devices (&ldquo;SSL devices&rdquo;) operate independently of the servers upon which they are performing the SSL operations. That is, they do not use information from the servers to determine loading of the device that is performing the SSL encryption and decryption. Load refers to the amount of data, i.e., traffic that the device carries. Parameters for configuring the SSL performance are static, if existent at all. When thresholds for the number of connections that an SSL device will accept are available, they are static because they are the only information available to the device. Without information about server loading, the SSL device cannot make dynamic choices or decisions. The SSL device can, for example, determine when it can no longer sustain more connections. The SSL device is unable, however, to determine which server can sustain the same. The result is that overall SSL performance of a system of servers and SSL devices, with the constraint of no significant client impact, is limited by the performance of the SSL device. This is because static algorithms that determine SSL offload to individual servers cannot meet a no significant-impact guarantee. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> A system for increasing realized SSL encryption and decryption connections is thus designed to combine monitoring of server load with adjustment of SSL parameters to optimize the system of devices. The result of this dynamic system is increased SSL performance without significant impact to end-user response.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> A detailed description of embodiments of the invention will be made with reference to the accompanying drawings, wherein like numerals designate corresponding parts in the several figures. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a depiction of network connectivity of one SSL device and three servers. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a flowchart illustrating the optimization process of a system of one SSL device and three servers. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The following paragraphs describe a system for increasing realized secure sockets layer (&ldquo;SSL&rdquo;) encryption and decryption connections. An embodiment of the present invention includes an SSL encryption and decryption device (&ldquo;SSL device&rdquo;) that includes both hardware and software. The software contains the code that performs calculations and acts on the calculations. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> According to one embodiment of the present invention, as illustrated in <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> system <highlight><bold>160</bold></highlight><highlight><italic>a </italic></highlight>includes one SSL device <highlight><bold>120</bold></highlight> located within a data communication network <highlight><bold>110</bold></highlight> between a set of three servers <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>and a client machine <highlight><bold>130</bold></highlight>. Coupled to one side of the data communication network <highlight><bold>110</bold></highlight> is the client machine <highlight><bold>130</bold></highlight>. Meanwhile, a switch <highlight><bold>135</bold></highlight> acts as an intermediary between the SSL device <highlight><bold>120</bold></highlight> and the servers <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c</italic></highlight>, whereby the switch <highlight><bold>135</bold></highlight> receives data from the SSL device <highlight><bold>120</bold></highlight> and then forwards the data to the servers <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c. </italic></highlight></paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> This system <highlight><bold>160</bold></highlight><highlight><italic>a </italic></highlight>is dynamically optimized within the data communication network <highlight><bold>110</bold></highlight>. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The data communication network <highlight><bold>110</bold></highlight> may include the Internet, an Intranet, or any combination of public and private data communication networks. The data communication network <highlight><bold>110</bold></highlight> may be configured as a local-area network, wide-area network, or another kind of architecture. A multitude of systems, as depicted by <highlight><bold>160</bold></highlight><highlight><italic>b</italic></highlight>-<highlight><italic>c</italic></highlight>, may further be sustained within the data communication network <highlight><bold>110</bold></highlight>. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The client machine <highlight><bold>130</bold></highlight> attempts to open SSL connections to the servers <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c</italic></highlight>. The SSL device <highlight><bold>120</bold></highlight> intercepts these connections, performs SSL encryption and decryption, and then sends the encrypted information to the appropriate server <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>in an unencrypted format. For example, if client machine <highlight><bold>130</bold></highlight> attempts to open an SSL connection to server <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>, the SSL device <highlight><bold>120</bold></highlight> intercepts the connection and opens it with client machine <highlight><bold>130</bold></highlight>. The SSL device <highlight><bold>120</bold></highlight> then unencrypts the data sent over the connection and sends that data to server <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>, unencrypted. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The system combines the monitoring of server <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>load with dynamic adjustment of SSL device <highlight><bold>120</bold></highlight> parameters to optimize the entire system. The system, i.e. software running on some platform such as, but not limited to, an SSL device or a server, monitors certain parameters of the servers <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>such as, but not limited to, CPU utilization and available memory, that are known to affect the ability of the servers to process SSL connections. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> The servers <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>may be monitored by many mechanisms. An agent, i.e., software, may be installed on the servers <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>that then communicates to the SSL device <highlight><bold>120</bold></highlight>. Windows NT has a protocol for remote monitoring of many types of server statistics, including CPU usage. UNIX operating systems support the remote execution of programs that can provide this information. In addition, Simple Network Management Protocol (&ldquo;SNMP&rdquo;) may also be used for monitoring. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, an &ldquo;SSL capacity&rdquo; value for each server <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>is calculated and represents the capacity of that server <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>to process SSL connections. This is illustrated in step <highlight><bold>210</bold></highlight> for server <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>, step <highlight><bold>220</bold></highlight> for server <highlight><bold>140</bold></highlight><highlight><italic>b</italic></highlight>, and step <highlight><bold>230</bold></highlight> for server <highlight><bold>140</bold></highlight><highlight><italic>c</italic></highlight>. The calculation may be a direct value or a computation of values. Various algorithms may be used to determine such a value. One such algorithm is capacity&equals;max &lsqb;(&num; processors&times;processor speed in MHz/100)&times;(0.7&minus;CPU utilization), 0&rsqb;. Since SSL acceleration hardware may be present in some systems, another possible algorithm is capacity&equals;max &lsqb;(&num; processors&times;processor speed in MHz/100)&times;(0.7&minus;CPU utilization)&plus;f<highlight><subscript>n</subscript></highlight>(x), 0&rsqb;, where f<highlight><subscript>n</subscript></highlight>(x) represents the SSL acceleration capabilities of the SSL acceleration hardware. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The greater the SSL capacity of the server <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c</italic></highlight>, the fewer SSL connections the SSL device <highlight><bold>120</bold></highlight> should process. The number of SSL connections processed by the SSL device <highlight><bold>120</bold></highlight> also depends on the load of the SSL device <highlight><bold>120</bold></highlight>. Load is a direct value or computation such as, but not limited to, CPU utilization. Calculating the load of the SSL device <highlight><bold>120</bold></highlight> is shown in step <highlight><bold>240</bold></highlight>. If an SSL device <highlight><bold>120</bold></highlight> is lightly loaded, it processes more SSL connections for all the servers <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>than if it is heavily loaded. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> As illustrated in step <highlight><bold>250</bold></highlight>, the SSL capacity value is then used to calculate an &ldquo;SSL connection threshold&rdquo; for that server <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c</italic></highlight>. This is applied to the SSL device <highlight><bold>120</bold></highlight> to determine how many SSL connections the SSL device <highlight><bold>120</bold></highlight> should process for that server <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c</italic></highlight>, as shown in step <highlight><bold>260</bold></highlight>. One algorithm for this calculation is threshold&equals;10&times;server capacity&times;device CPU utilization. This represents the number of SSL connections that the SSL device <highlight><bold>120</bold></highlight> would allow to be processed by a given server <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c. </italic></highlight></paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Since the connection threshold for the SSL device <highlight><bold>120</bold></highlight> is a function of both the load of the SSL device <highlight><bold>120</bold></highlight> and the SSL capacity of each server <highlight><bold>140</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c</italic></highlight>, and these values are dynamic, the connection threshold values are recalculated periodically. The recalculation is based either on time or on additional thresholds that are functions of the SSL capacity and/or SSL device load. The result of this dynamic system is increased SSL performance without significant impact to client response. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> While the above description refers to particular embodiments of the present invention, it will be understood to those of ordinary skill in the art that modifications may be made without departing from the spirit thereof. The accompanying claims are intended to cover any such modifications as would fall within the true scope and spirit of the present invention. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The presently disclosed embodiments are therefore to be considered in all respects as illustrative and not restrictive; the scope of the invention being indicated by the appended claims, rather than the foregoing description. All changes that come within the meaning and range of equivalency of the claims are therefore intended to be embraced therein. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of increasing realized secure sockets layer encryption and decryption connections comprising: 
<claim-text>monitoring at least one parameter of a server that is known to affect an ability of a device to process secure sockets layer connections; </claim-text>
<claim-text>calculating a secure sockets layer capacity value for the server; </claim-text>
<claim-text>calculating a load value for a secure sockets layer device; </claim-text>
<claim-text>calculating a secure sockets layer connection threshold for the server; </claim-text>
<claim-text>setting the secure sockets layer connection threshold for the server; </claim-text>
<claim-text>applying the secure sockets layer connection threshold to the secure sockets layer device to be used in determining a number of connections for processing by the secure sockets layer device for the server; and </claim-text>
<claim-text>recalculating the secure sockets layer connection threshold value for the secure sockets layer device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the server parameter is CPU utilization. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the server parameter is available memory. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the secure sockets layer capacity value of the server represents a capability of the server to process secure sockets layer connections. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein at least one of the secure sockets layer capacity value and the load value is a direct value. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein at least one of the secure sockets layer capacity value and the load value is a computation of values. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein the secure sockets layer capacity value&equals;max &lsqb;(&num; processors&times;processor speed/100)&times;(0.7&minus;CPU utilization), 0&rsqb;. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the secure sockets layer connection threshold for the secure sockets layer device is a function of both device load and server capacity. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein device load and server capacity are variable values. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the connection threshold&equals;10&times;server capacity&times;device CPU utilization, represents the number of secure sockets layer connections that the secure sockets layer device allows a server to process. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A computer readable medium having computer readable instructions encoded therein to: 
<claim-text>calculate a secure sockets layer capacity of a server; </claim-text>
<claim-text>calculate a load of a secure sockets layer device; </claim-text>
<claim-text>calculate a secure sockets layer connection threshold for the server; </claim-text>
<claim-text>set the secure sockets layer connection threshold for the server; </claim-text>
<claim-text>apply the secure sockets layer connection threshold to the secure sockets layer device; and </claim-text>
<claim-text>recalculate the secure sockets layer connection threshold value for the secure sockets layer device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the secure sockets layer capacity of the server represents a capability of the server to process secure sockets layer connections. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the secure sockets layer capacity is a direct value or a computation of values. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the secure sockets layer capacity&equals;max &lsqb;(&num; processors&times;processor speed/100)&times;(0.7&minus;CPU utilization), 0&rsqb;. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the load is a direct value or a computation of values. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the secure sockets layer connection threshold for the secure sockets layer device is a function of both device load and the secure sockets layer capacity of the server. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the device load and the secure sockets layer capacity are variables. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the secure sockets layer connection threshold determines a number of connections that the secure sockets layer device processes for the server. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the secure sockets layer connection threshold&equals;0&times;server capacity&times;device CPU utilization. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A system for providing a secure sockets layer connection within a data communication network comprising: 
<claim-text>a secure sockets layer encryption and decryption device; </claim-text>
<claim-text>a client machine; and </claim-text>
<claim-text>at least one server wherein the system is adapted to: 
<claim-text>monitor at least one parameter of a server that is known to affect an ability of the server to process secure sockets layer connections; </claim-text>
<claim-text>calculate a secure sockets layer capacity value for the server; </claim-text>
<claim-text>calculate a load value for the secure sockets layer encryption and decryption device; </claim-text>
<claim-text>calculate a secure sockets layer connection threshold for the server; </claim-text>
<claim-text>set the secure sockets layer connection threshold for the server; </claim-text>
<claim-text>apply the secure sockets layer connection threshold to the secure sockets layer encryption and decryption device to determine a number of connections for processing by the secure sockets layer encryption and decryption device for the server; and </claim-text>
<claim-text>recalculate the secure sockets layer connection threshold value for the secure sockets layer encryption and decryption device. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the data communication network includes at least one of an Internet or an Intranet. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein a secure sockets layer encryption and decryption device within the data communication network includes software for performing calculations. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the server parameter is at least one of CPU utilization and available memory. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the secure sockets layer capacity value&equals;max &lsqb;(&num; processors&times;processor speed/100)&times;(0.7&minus;CPU utilization), 0&rsqb;. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, wherein the secure sockets layer capacity value of the server represents a capability of the server to process secure sockets layer connections. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the secure sockets layer connection threshold&equals;10&times;server capacity&times;device CPU utilization. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, wherein the secure sockets layer connection threshold for the secure sockets layer device is a function of device load and server capacity, both of which are variable values. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein at least one of the secure sockets layer capacity value and the load value is a direct value. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein at least one of the secure sockets layer capacity value and the load value is a computation of values.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005281A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005281A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005281A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
