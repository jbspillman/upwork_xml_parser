<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005317A1-20030102-D00000.TIF SYSTEM "US20030005317A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005317A1-20030102-D00001.TIF SYSTEM "US20030005317A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005317A1-20030102-D00002.TIF SYSTEM "US20030005317A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005317A1-20030102-D00003.TIF SYSTEM "US20030005317A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005317A1-20030102-D00004.TIF SYSTEM "US20030005317A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005317A1-20030102-D00005.TIF SYSTEM "US20030005317A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005317A1-20030102-D00006.TIF SYSTEM "US20030005317A1-20030102-D00006.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005317</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09892904</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010628</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F012/14</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>713</class>
<subclass>193000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>380</class>
<subclass>030000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Method and system for generating and verifying a key protection certificate</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Yves</given-name>
<middle-name>Louis Gabriel</middle-name>
<family-name>Audebert</family-name>
</name>
<residence>
<residence-us>
<city>Los Gatos</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Eric</given-name>
<middle-name>F.</middle-name>
<family-name>Le Saint</family-name>
</name>
<residence>
<residence-us>
<city>Fremont</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>STEVENS, DAVIS, MILLER &amp; MOSHER, LLP</name-1>
<name-2></name-2>
<address>
<address-1>Suite 850</address-1>
<address-2>1615 L Street, N.W.</address-2>
<city>Washington</city>
<state>DC</state>
<postalcode>20036</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A data processing method and system for generating and verifying a key protection certificate. </paragraph>
<paragraph id="A-0002" lvl="0">The data processing system comprises a PSD including a unique device name, cryptography means, data processing means, data storage means and communications means. </paragraph>
<paragraph id="A-0003" lvl="0">The cryptography means includes an asymmetric key pair generating algorithm, a first securely shared secret key, a second securely shared secret key, symmetric cryptography means, a concatenation algorithm, a message authentication code algorithm, cryptographic seed information, a key protection certificate algorithm and a signing algorithm. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to a data processing system and method for generating a unique digital certificate within the secure domain of a personal security device (PSD). The generated certificate is used by another party to verify that cryptographic keys are bound to and protected by a specific PSD. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The current art involving personal security devices (PSD) including smart cards, subscriber identification modules (SIM), wireless identification modules (WIM), identification tokens and related devices are designed to afford enhanced protection of asymmetric private keys and shared secret symmetric keys over that provided by software solutions or other means. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> PSDs also provide improved support of digital signature applications for non-repudiation purposes than is afforded using software solutions or other means. For non-repudiation purposes, it is essential that private and secret keys be protected by the security mechanisms implemented within a PSD and not be disclosed. This is a basic foundational premise behind the various public key infrastructures available in the current art and as such is an area vulnerable to compromise by a sophisticated attacker as described below. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Currently, there are two methods in which cryptographic keys are installed within the secure domains of a PSD. The first method involves placement of cryptographic seed information inside a PSD which is then used to generate cryptographic keys based upon internal key generating algorithms. A second method involves directly injecting the cryptographic keys into a secure domain of the PSD and storing the keys in accordance with the security policies included in the PSD. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Neither method generates any proof to another party that the cryptography keys are securely stored and bound to the PSED in which they were intended. The keys exist essentially independent of the device in which they are stored. Users and third parties therefore implicitly rely upon the security of the installation process to ensure that the cryptographic keys have been installed in the correct PSD and have not been replaced or duplicated in another unauthorized device. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Until recently, the generation of cryptography keys in PSDs occurred using end-to-end security mechanisms. The card issuer controlled all aspects of key generation and card issuance, which provided little opportunity for unauthorized disclosure of private or secret keys. However, as demand for increased security mechanisms and storage of multiple credentials on a single card has developed, the use of end-to-end security mechanisms is being replaced with remote post issuance methods, </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> For example, U.S. Pat. No. 6,005,942 describes a post issuance method of installing applications into a smart card. This method allows an authorized entity other than the original card issuer to install applications including proprietary information such as cryptographic seeds, private keys and symmetric keys into a secure domain of the card. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The implicit assumption utilizing this method is that the existing cryptographic keys employed during the post issuance installation process have not been compromised. Thus, it becomes possible for an authorized provider, unaware that the original cryptographic keys have been compromised to operatively install additional proprietary information into an unauthorized card There currently is no method for verifying that a particular key is bound to a particular device. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF INVENTION </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> This invention provides a method for generating a unique key protection certificate, which provides assurances to another party that private or secret (symmetric) keys are securely stored within the PSD. The certificate is generated using the cryptographic services and data processing capabilities normally provided with the current generation of PSDs. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> A typical PSD, for example a smart card, contains a microprocessor for executing programmatic instructions, read only memory (ROM) for containing essential programs such as a runtime environment and security policies, non-volatile memory for storage of Information using electrically erasable programmable read-only memory (EEPROM) and lastly volatile random access memory (RAM) for temporary storage of information. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The installed security policies and added security extensions generally support standardized cryptographic methods including asymmetric key methods such as DSA, RSA, or both, symmetric key methods such as DES, 3DES or both, non-keyed message digest methods such as MD5, SHA-1 or both and keyed message digest methods such as MAC. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> PSDs are also configurable to allow separate secure domains allowing different providers to store proprietary information including symmetric and asymmetric keys. Each domain allows access to common utilities and services installed in the PSD but the PSD&apos;s security policies prevent accessing of secure information installed outside of a providers allocated domain. Thus, multiple sets of separately accessible keys may exist within a PSD at any one time but only the owner of the keys may access the domain in which they are installed. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> By using the established security policies and added extensions employed in a typical PSD, it is possible to generate a key protection certificate, which provides greater assurances to another party that private or secret keys are bound to and protected by a PSD. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> To practice this invention, a key protection certificate generating algorithm is loaded into a common domain of a PSD and operatively stored in either the system ROM during masking or in non-volatile RAM. This algorithm operates sequentially with installed cryptographic key generating algorithms and a pre-encoded device name (usually the PSD&apos;s serial number) to produce a unique digital certificate upon completion of cryptographic key generation. The digital certificate is then available for verification. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> In the preferred embodiment of the invention, an additional set of parameters is generated which includes contextual attributes related to the PSD and a particular private or symmetric key generated within the PSD. The contextual attributes may include but are not limited to a counter, trusted time source, the date and time of generation, version numbers, applications the key is intended to be used for, key life cycle information (expiration date, etc.), cryptography methods employed, key identification labels and receiving party identification information. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> A portion of the contextual attributes are intended to be available as clear text in the key protection certificate along with the device name for review and verification by a receiving party. The remaining portion of the contextual attributes are obfuscated using a second symmetric encryption method and key. Some or all of these attributes may also be used to reference or diversify the shared secret keys by the receiving party. The receiving party may be a second party who is seeking direct verification of the sending party&apos;s credentials using for example pretty good privacy (PGP) techniques or a trusted third party certificate authority (CA) who provides the verification as part of an organized service using for example X.509 formatted certificates. For simplicity, &ldquo;receiving party&rdquo; will be used to refer to both a second party and trusted third party. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> In the preferred embodiment of the invention, the key protection certificate is produced by encrypting a portion of the contextual attributes with a first shared secret key, signing a device name (or derivation thereof) with a private key and concatenating the encrypted portion of the contextual attributes, clear text portion of the contextual attributes, clear text device name and signed device name producing an intermediate result. This intermediate result will be used by a receiving party to verify that the private key is securely stored in the PSD. Additionally, the intermediate result may be used to prove that the result was generated within the secure domain of the PSD. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> A message authentication code (MAC) function is then performed on the intermediate result and encrypted using a second shared secret key. The second shared secret key is a symmetric key known only to the PSD and the receiving party. The results of the MAC are then concatenated with the intermediate result described above, producing the key protection certificate. The MAC portion will be used by a receiving party to verify that the device private key was generated within the secure domain of the PSD. Once produced, the certificate is available for verification by a receiving party. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> A receiving party verifies the certificate by cross referencing the device name (or derivation thereof) with the proper public contextual information, secret keys, public key, cryptographic algorithms, reference parameters, etc. contained in a database, lookup table or similar arrangement. Once the proper access information is determined, the verification is performed by decrypting the device name portion of the certificate using the complementary public key and comparing the result to the plain text version of the device name This operation confirms to the receiving party that the transaction occurred using the proper key pair. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Next, the receiving party, using the same MAC algorithm and shared secret key generates a duplicate MAC. The generated MAC is then compared to the MAC contained in the certificate. An exact match between the independently created MAC and the received MAC provides assurances that the transaction occurred within the secure domain of the PSD. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Lastly, the private contextual attributes are decrypted using a second shared secret key and compared to reference parameters securely shared between the PSD and the receiving party. An exact match of these parameters provides further assurances that the certificate was validly generated. The parameters maintained by the receiving party may be a counter which increments each time the certificate is verified, a trusted time stamp or another variable controlled by the receiving party which is securely shared with the PSD. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> New digital certificates may be generated each time an authorized change is made to any of the cryptography algorithms or keys contained within the PSD. In the preferred embodiment, context attributes are updated and stored as part of the digital certificates. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> It should be understood to those familiar with the art that more than one digital certificate and associated cryptography keys might be stored within the secure domain of a PSD for servicing different receiving parties. The number of digital certificates and associated cryptography keys is limited only by available memory resources. In the preferred embodiment of the invention, the key protection certificate is intended to conform to the X.509 and/or ANSI X.9 certificate format standards for use by a trusted third party certificate authority. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Furthermore, different combinations of asymmetric and symmetric keys, signed and unsigned message digest functions, and other information may be employed to generate and validate an equivalent key protection certificate. For example, a null vector could be signed with the private key rather than using the device name. Other combinations involving the use of shared secret keys and a private key will work as well</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF DRAWINGS </heading>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference>&mdash;is a general system block diagram for implementing present invention. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference>&mdash;is a detailed block diagram illustrating the digital certificate generating process. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference>A&mdash;is a detailed block diagram illustrating the first part of the validation process. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference>B&mdash;is a detailed block diagram illustrating the second part of the validation process. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference>C&mdash;is a detailed block diagram illustrating the third part of the validation process. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference>&mdash;is a detailed block diagram illustrating final part of the validation process.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF PREFERRED EMBODIMENT </heading>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> In this invention, a key protection certificate is created and stored sequentially in conjunction with cryptographic key generation. In the preferred embodiment of the invention, a shared secret key is securely injected into a PSD during or after personalization. In one embodiment of the invention, the secret key is shared with a second party who will perform the direct verification of the digital certificate when received. In another embodiment of the invention, the secret key is shared with a trusted third party certificate authority who performs the verification of the certificate and informs a third party of the validly of the certificate in the form of an X.509 and/or ANSI X.9 formatted certificate. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Referring to FIG, <highlight><bold>1</bold></highlight>, a typical arrangement of a PSD <highlight><bold>40</bold></highlight> is depicted where separate domains (Domain <highlight><bold>1</bold></highlight> <highlight><bold>45</bold></highlight>, Domain <highlight><bold>2</bold></highlight> <highlight><bold>50</bold></highlight>, Domain <highlight><bold>3</bold></highlight> <highlight><bold>55</bold></highlight> through Domain n <highlight><bold>60</bold></highlight>) are established allowing unrelated service providers to install and maintain provider specific sets of asymmetric public <highlight><bold>15</bold></highlight> and private keys <highlight><bold>10</bold></highlight>, a first shared secret key (MAC) <highlight><bold>5</bold></highlight> used during the encryption of the message digest, a second shared secret key (Encrypt) <highlight><bold>95</bold></highlight> used for encrypting the private portion of the contextual attributes, and key protection certificate <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> A unique device name <highlight><bold>65</bold></highlight> is generated during the PSD manufacturing process, which is common and accessible to all domains but unalterable for the life of the PSD. Cryptographic algorithms <highlight><bold>70</bold></highlight>, including symmetric <highlight><bold>25</bold></highlight> and asymmetric <highlight><bold>30</bold></highlight> key generating modules, a message authentication code module <highlight><bold>85</bold></highlight>, the added key protection certificate module <highlight><bold>90</bold></highlight> and asymmetric decryption module are contained in an API layer and are likewise common and accessible to all domains. These modules are used for generating the cryptographic information stored in each of the providers secure domain. Another layer <highlight><bold>75</bold></highlight> contains cryptographic seed information for generation of cryptographic keys. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> PSDs follow a layered structure in which an applications programming interface (API) rides above a runtime-operating environment <highlight><bold>80</bold></highlight>. In the preferred embodiment of the invention, the layers below the API layer are unmodified and thus not included in the basic depiction. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 2, a</cross-reference> detailed block diagram of the digital certificate generating process is depicted. To generate the key protection certificate <highlight><bold>20</bold></highlight>, an initial set of contextual attributes is generated <highlight><bold>270</bold></highlight>AB. A portion of the initial contextual attributes are then encrypted with a first shared secret key <highlight><bold>95</bold></highlight> forming a private and public set of contextual attributes, followed by signing the device name <highlight><bold>65</bold></highlight> with a private key <highlight><bold>10</bold></highlight>. The device name may be the PSD serial number or name derived from the serial number. The signed device name <highlight><bold>210</bold></highlight> is then concatenated <highlight><bold>220</bold></highlight> with the clear text device name <highlight><bold>65</bold></highlight>, public contextual attributes <highlight><bold>270</bold></highlight>B and private contextual attributes <highlight><bold>270</bold></highlight>A to produce a first intermediate result <highlight><bold>230</bold></highlight>. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> The first intermediate result <highlight><bold>230</bold></highlight> is then processed using a message authentication code <highlight><bold>240</bold></highlight> and a second shared secret symmetric key <highlight><bold>5</bold></highlight> producing a second intermediate result <highlight><bold>245</bold></highlight>. The second intermediate result <highlight><bold>245</bold></highlight> is then concatenated <highlight><bold>250</bold></highlight> with the first intermediate result <highlight><bold>230</bold></highlight> producing the key protection certificate <highlight><bold>20</bold></highlight>. Once generated, the certificate is available for validation by a receiving party. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 3A, a</cross-reference> detailed block diagram of the first part of the multi-step process employed to validate the key protection certificate <highlight><bold>20</bold></highlight> is depicted. Upon receiving the key protection certificate <highlight><bold>20</bold></highlight>, the portions of the digital certificate containing the plain text device name <highlight><bold>65</bold></highlight> and signed device name <highlight><bold>210</bold></highlight> are extracted. The device name <highlight><bold>65</bold></highlight> is used to cross-reference the required cryptographic keys, algorithms and reference parameters necessary to perform the validation process. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> Once the proper access information has been determined, the signed device name <highlight><bold>210</bold></highlight> is decrypted <highlight><bold>305</bold></highlight> using the complementary public key <highlight><bold>15</bold></highlight> resulting in an unverified device name <highlight><bold>65</bold></highlight>&prime;. The unverified device name <highlight><bold>65</bold></highlight>&prime; is compared <highlight><bold>315</bold></highlight> to the extracted device name <highlight><bold>65</bold></highlight>. If the results are equal <highlight><bold>320</bold></highlight>, then the private key has been validated. Otherwise <highlight><bold>310</bold></highlight>, the private key has somehow been altered and a failure flag is set in the certificate identifying the invalid key pair validation step. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>B, the next part of the validation process generates an independent message authentication code (MAC) using a method authentication code <highlight><bold>325</bold></highlight> identical to that <highlight><bold>85</bold></highlight> implemented in the PSD. The MAC uses the portions of the certificate containing the private contextual attributes <highlight><bold>270</bold></highlight>A, public contextual attributes <highlight><bold>270</bold></highlight>B, device name <highlight><bold>65</bold></highlight>, signed device name <highlight><bold>210</bold></highlight> and the second shared secret key <highlight><bold>5</bold></highlight>. The resulting message authentication code <highlight><bold>340</bold></highlight> is compared <highlight><bold>345</bold></highlight> with the message authentication code <highlight><bold>260</bold></highlight> contained in the certificate <highlight><bold>20</bold></highlight>. If the results are equal <highlight><bold>355</bold></highlight>, then the key generation process can be assumed to have occurred within the secure domain of the PSD (since only the PSD and the receiving party should possess the shared secret key,) and this portion of the key generating process is validated. Otherwise <highlight><bold>350</bold></highlight>, the key generating process may not have occurred within the secure domain of the PSD and a failure flag is set in the key protection certificate identifying the invalid key generation location step </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>C, the third part of the validation process decrypts <highlight><bold>360</bold></highlight> the private contextual attributes <highlight><bold>270</bold></highlight>A using the first shared secret key <highlight><bold>95</bold></highlight> resulting in a clear text version of the private contextual attributes <highlight><bold>270</bold></highlight>A&prime;. One or more parameters included in the private contextual attributes <highlight><bold>270</bold></highlight>A&prime; is compared <highlight><bold>370</bold></highlight> against reference parameters <highlight><bold>375</bold></highlight> maintained by the receiving party. If the results are equal <highlight><bold>380</bold></highlight>, then the contextual attributes have been validated. Otherwise <highlight><bold>365</bold></highlight>, the key protection certificate may not be valid and a failure flag is set in the key protection certificate identifying the invalid contextual attribute step. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the results of the preceding validation processes are summarized. If a valid device name has been verified <highlight><bold>410</bold></highlight> as described in <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> <highlight><bold>320</bold></highlight>, then it is verified that a valid MAC has been obtained as described in <cross-reference target="DRAWINGS">FIG. 3B</cross-reference> <highlight><bold>355</bold></highlight>. If a valid MAC has been verified <highlight><bold>420</bold></highlight>, then it is verified that valid contextual attributes have been verified as described in <cross-reference target="DRAWINGS">FIG. 3C</cross-reference> <highlight><bold>380</bold></highlight>. If valid contextual attributes have been verified <highlight><bold>430</bold></highlight>, then the key protection certificate <highlight><bold>435</bold></highlight> is fully validated and should be accepted by the receiving party. If validation is being performed by a trusted third party certificate authority, no failure flags should be set and the validated digital certificate should be forwarded to the receiving party for acceptance. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> If any of the three validation steps fail, then the key protection certificate should be rejected <highlight><bold>440</bold></highlight> by the receiving party. If validation is being performed by a trusted third party certificate authority, appropriate failure flags should be set and the failed digital certificate should be forwarded to the receiving party for rejection. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> The foregoing described embodiments of the invention are provided as illustrations and descriptions. They are not intended to limit the invention to precise form described. In particular, it is contemplated that functional implementation of the invention described herein may be implemented equivalently in hardware, software, firmware, and/or other available functional components or building blocks, Other variations and embodiments are possible in light of above teachings, and it is not intended that this Detailed Description limit the scope of invention, but rather by the Claims following herein </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A data processing system for generating a key protection certificate comprising; 
<claim-text>a PSD further comprising a unique device name, cryptography means, data processing means, data storage means and communications means; </claim-text>
<claim-text>wherein said cryptography means includes an asymmetric key pair generating algorithm, a first securely shared secret key, a second securely shared secret key, symmetric cryptography means, a concatenation algorithm, a message authentication code algorithm, cryptographic seed information, a key protection certificate algorithm and a signing algorithm. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein at least a portion of said cryptographic seed information is used by said asymmetric key pair generating algorithm to generate at least one asymmetric private key and one asymmetric public key upon receipt of at least one key generation command, said keys being stored in a secure domain. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein said key protection certificate algorithm, upon receipt of said key generation command, generates a plurality of contextual attributes. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein at least a portion of said contextual attributes are encrypted using said first shared secret key and said symmetric cryptography means to generate private contextual attributes. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein the remaining unencrypted of said plurality of said contextual attributes forms public contextual attributes. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein a signed device name is generated using said unique device name and said asymmetric private key as inputs into said signing algorithm </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein said private contextual attributes, public contextual attributes, signed device name and unique device name are concatenated by said concatenation algorithm, generating a first intermediate result. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein a message authentication code is generated using said second shared secret key and said first intermediate result as inputs into said message authentication code algorithm, forming a second intermediate result. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein said first intermediate result and said second intermediate result are concatenated by said concatenation algorithm forming said key protection certificate then stored in said secure domain. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said unique device name is an embedded serial number. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said unique device name is the result of a cryptographic process using said embedded serial number as a cryptographic seed. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said communications means includes means for receiving commands to generate asymmetric and symmetric keys and means for sending said public key and said key protection certificate. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A data processing system for validating a key protection certificate comprising; 
<claim-text>data processing means, data storage means, communications means, cryptography means, a first securely shared secret symmetric key, a second securely shared secret symmetric key and a public key, wherein the cryptography means includes a message authentication code algorithm, cross referencing means and a comparator algorithm. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein said first symmetric key, said second symmetric key and said public key have a direct generation relationship with said key protection certificate </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein said communications means includes means for transmitting requests for said key protection certificate and said public key and means for receiving said key protection certificate and said public key. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein said received key protection certificate includes private contextual attributes, public contextual attributes, a device name, a signed device name and a message authentication code. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein said device name is used by said cross referencing means for selecting the proper shared secret keys, public key, cryptographic algorithms and reference parameters associated with said key protection certificate. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein said signed device name is decrypted using said public key, generating a second device name. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein said second device name and said device name contained in said certificate are compared by the comparator algorithm to determine if said second device name and said device name contained in said certificate match. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein a second message authentication code is generated using said private contextual attributes, public contextual attributes, device name, said signed device name included in said certificate and said second shared secret key as inputs into said message authentication code algorithm. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein said second message authentication code and said message authentication code contained in said certificate are compared using said comparator algorithm to determine if said second message authentication code and said message authentication code contained in said certificate match. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein said private contextual attributes are decrypted using said first shared secret key. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein at least one predetermined parameter is contained in at least a portion of said decrypted private contextual attributes. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein at least one predetermined parameter and said reference parameters are compared using said comparator algorithm to determine if said at least one predetermined parameter and said reference parameters match. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, <highlight><bold>21</bold></highlight> or <highlight><bold>24</bold></highlight>, wherein a failure to achieve a match invalidates said key protection certificate. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. A method for generating a key protection certificate comprising: 
<claim-text>injecting a first securely shared secret symmetric key, a second securely shared secret symmetric key, a key protection algorithm and cryptographic seed information into a PSD, wherein at least a portion of said seed information is used in generating at least one public key and one private key, </claim-text>
<claim-text>storing said injected symmetric keys and said seed information in a secure domain within said PSD, </claim-text>
<claim-text>sending a command to said PSD for generating said at least one public key and one private key, wherein said command initiates generation of said keys and of said key protection certificate, </claim-text>
<claim-text>generating said at least one public key and said one private key using at least a portion of said seed information, </claim-text>
<claim-text>generating contextual attributes specific to at least the generation of said private key, </claim-text>
<claim-text>encrypting at least a portion of said contextual attributes using said first shared secret key, forming private contextual attributes and public contextual attributes, </claim-text>
<claim-text>wherein predetermined parameters are included in said private contextual attributes, </claim-text>
<claim-text>storing said public key and said private key in said secure domain, </claim-text>
<claim-text>generating a digital signature of a unique device name using said private key, </claim-text>
<claim-text>concatenating said device name, private contextual attributes, public contextual attributes with said digital signature and generating a first intermediate result, </claim-text>
<claim-text>generating a message authentication code of said first intermediate result using said second shared secret key producing a second intermediate result, </claim-text>
<claim-text>concatenating said first intermediate result with said second intermediate result producing said key protection certificate; and </claim-text>
<claim-text>storing said key protection certificate in said secure domain. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. A method for validating a key protection certificate comprising: 
<claim-text>receiving said key protection certificate and a public key, wherein said certificate contains at least a plain text device name portion, a signed device name portion and cryptogram portion, </claim-text>
<claim-text>cross-referencing said device name with proper shared secret keys, public key, cryptographic algorithms and reference parameters associated with said key protection certificate, </claim-text>
<claim-text>verifying said signed device name portion of said certificate using said public key, comparing the resulting device name with said device name portion included in said certificate, </claim-text>
<claim-text>independently performing a message authentication code function on said concatenated private contextual attributes, public contextual attributes, device name, and signed device name portions of said certificate using a first of said shared secret keys, </claim-text>
<claim-text>comparing the resulting message authentication code with a method authentication code included in said certificate, </claim-text>
<claim-text>decrypting said private contextual attributes using a second of said shared secret keys, </claim-text>
<claim-text>comparing at least a portion of the private contextual attributes to the reference parameters, </claim-text>
<claim-text>validating said certificate if said resulting device name matches said device name contained in said certificate, said independently generated message authentication code matches said message authentication code contained in said certificate and at least a portion of said private contextual attributes matches said reference parameter, </claim-text>
<claim-text>rejecting said certificate if any of said matches is not achieved. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, wherein said receiving party possesses said securely shared secret keys and said public key. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein said receiving party is a trusted third party certificate authority.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005317A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005317A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005317A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005317A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005317A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005317A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005317A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
