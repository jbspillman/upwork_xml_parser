<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005282A1-20030102-D00000.TIF SYSTEM "US20030005282A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005282A1-20030102-D00001.TIF SYSTEM "US20030005282A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005282A1-20030102-D00002.TIF SYSTEM "US20030005282A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005282A1-20030102-D00003.TIF SYSTEM "US20030005282A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005282A1-20030102-D00004.TIF SYSTEM "US20030005282A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005282A1-20030102-D00005.TIF SYSTEM "US20030005282A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005282A1-20030102-D00006.TIF SYSTEM "US20030005282A1-20030102-D00006.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005282</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09892969</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010627</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L009/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>713</class>
<subclass>151000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method, system, and product for pre-encrypting static information transmitted by secure web sites</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Steven</given-name>
<middle-name>A.</middle-name>
<family-name>Bade</family-name>
</name>
<residence>
<residence-us>
<city>Georgetown</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>International Business Machines Corporation</organization-name>
<address>
<city>Armonk</city>
<state>NY</state>
</address>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>Duke W. Yee</name-1>
<name-2>Carstens, Yee &amp; Cahoon, LLP</name-2>
<address>
<address-1>P.O. Box 802334</address-1>
<city>Dallas</city>
<state>TX</state>
<postalcode>75380</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A data processing system, method, and product are disclosed for pre-encrypting static information transmitted by secure Web sites. The data processing system includes a server computer system coupled to a client computer system utilizing a network. The server computer system receives a request for a secure Web page that is maintained by the server. The secure Web page includes dynamically-changing information and static information. The server encrypts and transmits the encrypted dynamically-changing information. The server determines whether the static information has been pre-encrypted. If the static information has been pre-encrypted, the server bypasses the encryption step and transmits the pre-encrypted static information. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Technical Field </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates generally to the field of computer systems and, more specifically to a data processing system, method, and product for pre-encrypting static information transmitted by secure Web sites. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The Internet, also referred to as an &ldquo;internetwork&rdquo;, is a set of computer networks, possibly dissimilar, joined together by means of gateways that handle data transfer and the conversion of messages from the sending network to the protocols used by the receiving network (with packets if necessary). When capitalized, the term &ldquo;Internet&rdquo; refers to the collection of networks and gateways that use the TCP/IP suite of protocols. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The Internet has become a cultural fixture as a source of both information and entertainment. Many businesses are creating Internet sites as an integral part of their marketing efforts, informing consumers of the products or services offered by the business or providing other information seeking to engender brand loyalty. Many federal, state, and local government agencies are also employing Internet sites for informational purposes, particularly agencies, such as the Internal Revenue Service and secretaries of state, which must interact with virtually all segments of society. Providing informational guides and/or searchable databases of online public records may reduce operating costs. Further, the Internet is becoming increasingly popular as a medium for commercial transactions. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The Internet includes the World Wide Web. Web-based applications, executed by server computer systems, may be accessed by client computer systems. In order to access a Web-based application, a user first must establish an Internet connection. The user may then specify a URL (uniform resource locator) of a particular Web page. A Web page includes an HTML file and associated files for displaying images, such as graphics images. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Each Web page may contain text, graphics, images, sound, multimedia files, links to other Web pages, and any other type of electronic information. The server computer system does not typically store all of the components of a Web page in one single file. Instead, the server stores code in the HTML file which can be used by a client&apos;s Web browser in order to build the page. The server, thus, stores references to enable the browser to find the files that are needed to display the various text and images which then make up the Web page. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Many Internet Web sites encrypt the data transmitted between the site&apos;s server computer system and the user&apos;s client computer system, and, therefore, are considered to be &ldquo;secure&rdquo; sites. The Secure Sockets Layer (SSL) is a commonly-used protocol that describes the security used to transmit data from a secure site via the Internet. The SSL protocol includes a record layer which is responsible for encrypting and transmitting data. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Secure sites encrypt all data transferred to the client computer systems. Therefore, when a client&apos;s browser requests a particular page, all of the information needed to create the page is encrypted and then transmitted to the client&apos;s browser. All of the information is encrypted each time it is requested. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Encrypting all of the data each time a Web page is requested is often unnecessary. The percentage of the Web page including information that should be encrypted may be small. Many Web pages include various marketing information and logos that are not unique to any particular page, are not security sensitive, and do not change frequently. For example, company logo images do not often change. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The known systems described above encrypt the non-sensitive and static data along with the security sensitive data each time the information is transmitted to a client. This is unnecessary and can be very time-consuming. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Therefore, a need exists for a method, system, and product whereby a secure Web site stored pre-encrypted static information. The Web site then encrypts dynamically-changing information in response to each request, and bypasses the encryption step for the static information that has been pre-encrypted. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> A data processing system, method, and product are disclosed for pre-encrypting static information transmitted by secure Web sites. The data processing system includes a server computer system coupled to a client computer system utilizing a network. The server computer system receives a request from a client for a secure Web page that is maintained by a secure Web site within the server. Because the Web page is maintained by a secure Web site, a security session is established between the client and server. A cache is associated with this session. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The secure Web page includes dynamically-changing information and static information. The server encrypts and then transmits the encrypted dynamically-changing information. For the static information, the server first checks the current session&apos;s cache to determine whether a pre-encrypted version of the static information is already stored in the cache. If a pre-encrypted version is found in the cache, the server bypasses the encryption step and then transmits the pre-encrypted version of the static information. If a pre-encrypted version of the static information has not already been stored in the cache, the server encrypts the static information, transmits the encrypted static information, and stores the encrypted static information in the cache for future use. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The above as well as additional objectives, features, and advantages of the present invention will become apparent in the following detailed written description. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself, however, as well as a preferred mode of use, further objectives and advantages thereof, will best be understood by reference to the following detailed description of an illustrative embodiment when read in conjunction with the accompanying drawings, wherein: </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a pictorial representation which depicts a data processing system in which the present invention may be implemented in accordance with a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates a block diagram of a computer system which may be utilized as a server computer system in accordance with the present invention; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> depicts a block diagram of a computer system which may be utilized as a client computer system in accordance with the present invention; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> depicts a high level flow chart which illustrates a process executing within a server computer system for transmitting pre-encrypted data in accordance with the present invention; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates a high level flow chart which depicts a secure sockets layer (SSL) record layer, that is being executed within a server computer system, transmitting pre-encrypted data in accordance with the present invention; and </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> illustrates a high level flow chart which depicts a process executing within a client computer system for requesting, receiving, and displaying a Web page in accordance with the present invention. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT </heading>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> A preferred embodiment of the present invention and its advantages are better understood by referring to the figures, like numerals being used for like and corresponding parts of the accompanying figures. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The invention is preferably realized using a well-known computing platform, such as an IBM RS/6000 server running the IBM AIX operating system. However, it may be realized in other popular computer system platforms, such as an IBM personal computer running the Microsoft Windows operating system or a Sun Microsystems workstation running operating systems such as UNIX or LINUX, without departing from the spirit and scope of the invention. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> With reference now to the figures, <cross-reference target="DRAWINGS">FIG. 1</cross-reference> depicts a pictorial representation of a network of data processing systems in which the present invention may be implemented. Network data processing system <highlight><bold>100</bold></highlight> is a network of computers in which the present invention may be implemented. Network data processing system <highlight><bold>100</bold></highlight> contains a network <highlight><bold>102</bold></highlight>, which is the medium used to provide communications links between various devices and computers connected together within network data processing system <highlight><bold>100</bold></highlight>. Network <highlight><bold>102</bold></highlight> may include connections, such as wire, wireless communication links, or fiber optic cables. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> In the depicted example, a server <highlight><bold>104</bold></highlight> is connected to network <highlight><bold>102</bold></highlight> along with storage unit <highlight><bold>106</bold></highlight>. In addition, clients <highlight><bold>108</bold></highlight>, <highlight><bold>110</bold></highlight>, and <highlight><bold>112</bold></highlight> also are connected to network <highlight><bold>102</bold></highlight>. Network <highlight><bold>102</bold></highlight> may include permanent connections, such as wire or fiber optic cables, or temporary connections made through telephone connections. The communications network <highlight><bold>102</bold></highlight> also can include other public and/or private wide area networks, local area networks, wireless networks, data communication networks or connections, intranets, routers, satellite links, microwave links, cellular or telephone networks, radio links, fiber optic transmission lines, ISDN lines, T1 lines, DSL, etc. In some embodiments, a user device may be connected directly to a server <highlight><bold>104</bold></highlight> without departing from the scope of the present invention. Moreover, as used herein, communications include those enabled by wired or wireless technology. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Clients <highlight><bold>108</bold></highlight>, <highlight><bold>110</bold></highlight>, and <highlight><bold>112</bold></highlight> may be, for example, personal computers, portable computers, mobile or fixed user stations, workstations, network terminals or servers, cellular telephones, kiosks, dumb terminals, personal digital assistants, two-way pagers, smart phones, information appliances, or network computers. For purposes of this application, a network computer is any computer, coupled to a network, which receives a program or other application from another computer coupled to the network. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> In the depicted example, server <highlight><bold>104</bold></highlight> provides data, such as boot files, operating system images, and applications to clients <highlight><bold>108</bold></highlight>-<highlight><bold>112</bold></highlight>. Clients <highlight><bold>108</bold></highlight>, <highlight><bold>110</bold></highlight>, and <highlight><bold>112</bold></highlight> are clients to server <highlight><bold>104</bold></highlight>. Network data processing system <highlight><bold>100</bold></highlight> may include additional servers, clients, and other devices not shown. In the depicted example, network data processing system <highlight><bold>100</bold></highlight> is the Internet with network <highlight><bold>102</bold></highlight> representing a worldwide collection of networks and gateways that use the TCP/IP suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high-speed data communication lines between major nodes or host computers, consisting of thousands of commercial, government, educational and other computer systems that route data and messages. Of course, network data processing system <highlight><bold>100</bold></highlight> also may be implemented as a number of different types of networks, such as for example, an intranet, a local area network (LAN), or a wide area network (WAN). <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is intended as an example, and not as an architectural limitation for the present invention. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 2, a</cross-reference> block diagram of a data processing system that may be implemented as a server, such as server <highlight><bold>104</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, is depicted in accordance with a preferred embodiment of the present invention. Data processing system <highlight><bold>200</bold></highlight> may be a symmetric multiprocessor (SMP) system including a plurality of processors <highlight><bold>202</bold></highlight> and <highlight><bold>204</bold></highlight> connected to system bus <highlight><bold>206</bold></highlight>. Alternatively, a single processor system may be employed. Also connected to system bus <highlight><bold>206</bold></highlight> is memory controller/cache <highlight><bold>208</bold></highlight>, which provides an interface to local memory <highlight><bold>209</bold></highlight>. I/O bus bridge <highlight><bold>210</bold></highlight> is connected to system bus <highlight><bold>206</bold></highlight> and provides an interface to I/O bus <highlight><bold>212</bold></highlight>. Memory controller/cache <highlight><bold>208</bold></highlight> and I/O bus bridge <highlight><bold>210</bold></highlight> may be integrated as depicted. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Peripheral component interconnect (PCI) bus bridge <highlight><bold>214</bold></highlight> connected to I/O bus <highlight><bold>212</bold></highlight> provides an interface to PCI local bus <highlight><bold>216</bold></highlight>. A number of modems may be connected to PCI bus <highlight><bold>216</bold></highlight>. Typical PCI bus implementations will support four PCI expansion slots or add-in connectors. Communications links to network computers <highlight><bold>108</bold></highlight>-<highlight><bold>112</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> may be provided through modem <highlight><bold>218</bold></highlight> and network adapter <highlight><bold>220</bold></highlight> connected to PCI local bus <highlight><bold>216</bold></highlight> through add-in boards. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> Additional PCI bus bridges <highlight><bold>222</bold></highlight> and <highlight><bold>224</bold></highlight> provide interfaces for additional PCI buses <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight>, from which additional modems or network adapters may be supported. In this manner, data processing system <highlight><bold>200</bold></highlight> allows connections to multiple network computers. A memory-mapped graphics adapter <highlight><bold>230</bold></highlight> and hard disk <highlight><bold>232</bold></highlight> may also be connected to I/O bus <highlight><bold>212</bold></highlight> as depicted, either directly or indirectly. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Those of ordinary skill in the art will appreciate that the hardware depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> may vary. For example, other peripheral devices, such as optical disk drives and the like, also may be used in addition to or in place of the hardware depicted. The depicted example is not meant to imply architectural limitations with respect to the present invention. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The data processing system depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> may be, for example, an IBM RISC/System 6000 system, a product of International Business Machines Corporation in Armonk, N.Y., running the Advanced Interactive Executive (AIX) operating system. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> With reference now to <cross-reference target="DRAWINGS">FIG. 3, a</cross-reference> block diagram illustrating a data processing system is depicted in which the present invention may be implemented. Data processing system <highlight><bold>300</bold></highlight> is an example of a client computer. Data processing system <highlight><bold>300</bold></highlight> employs a peripheral component interconnect (PCI) local bus architecture. Although the depicted example employs a PCI bus, other bus architectures such as Accelerated Graphics Port (AGP) and Industry Standard Architecture (ISA) may be used. Processor <highlight><bold>302</bold></highlight> and main memory <highlight><bold>304</bold></highlight> are connected to PCI local bus <highlight><bold>306</bold></highlight> through PCI bridge <highlight><bold>308</bold></highlight>. PCI bridge <highlight><bold>308</bold></highlight> also may include an integrated memory controller and cache memory for processor <highlight><bold>302</bold></highlight>. Additional connections to PCI local bus <highlight><bold>306</bold></highlight> may be made through direct component interconnection or through add-in boards. In the depicted example, local area network (LAN) adapter <highlight><bold>310</bold></highlight>, SCSI host bus adapter <highlight><bold>312</bold></highlight>, and expansion bus interface <highlight><bold>314</bold></highlight> are connected to PCI local bus <highlight><bold>306</bold></highlight> by direct component connection. In contrast, audio adapter <highlight><bold>316</bold></highlight>, graphics adapter <highlight><bold>318</bold></highlight>, and audio/video adapter <highlight><bold>319</bold></highlight> are connected to PCI local bus <highlight><bold>306</bold></highlight> by add-in boards inserted into expansion slots. Expansion bus interface <highlight><bold>314</bold></highlight> provides a connection for a keyboard and mouse adapter <highlight><bold>320</bold></highlight>, modem <highlight><bold>322</bold></highlight>, and additional memory <highlight><bold>324</bold></highlight>. Small computer system interface (SCSI) host bus adapter <highlight><bold>312</bold></highlight> provides a connection for hard disk drive <highlight><bold>326</bold></highlight>, tape drive <highlight><bold>328</bold></highlight>, and CD-ROM drive <highlight><bold>330</bold></highlight>. Typical PCI local bus implementations will support three or four PCI expansion slots or add-in connectors. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> An operating system runs on processor <highlight><bold>302</bold></highlight> and is used to coordinate and provide control of various components within data processing system <highlight><bold>300</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. The operating system may be a commercially available operating system, such as Windows 2000, which is available from Microsoft Corporation. An object oriented programming system such as Java may run in conjunction with the operating system and provide calls to the operating system from Java programs or applications executing on data processing system <highlight><bold>300</bold></highlight>. &ldquo;Java&rdquo; is a trademark of Sun Microsystems, Inc. Instructions for the operating system, the object-oriented operating system, and applications or programs are located on storage devices, such as hard disk drive <highlight><bold>326</bold></highlight>, and may be loaded into main memory <highlight><bold>304</bold></highlight> for execution by processor <highlight><bold>302</bold></highlight>. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Those of ordinary skill in the art will appreciate that the hardware in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> may vary depending on the implementation. Other internal hardware or peripheral devices, such as flash ROM (or equivalent nonvolatile memory) or optical disk drives and the like, may be used in addition to or in place of the hardware depicted in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. Also, the processes of the present invention may be applied to a multiprocessor data processing system. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> As another example, data processing system <highlight><bold>300</bold></highlight> may be a stand-alone system configured to be bootable without relying on some type of network communication interface, whether or not data processing system <highlight><bold>300</bold></highlight> comprises some type of network communication interface. As a further example, data processing system <highlight><bold>300</bold></highlight> may be a Personal Digital Assistant (PDA) device, which is configured with ROM and/or flash ROM in order to provide non-volatile memory for storing operating system files and/or user-generated data. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The depicted example in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> and above-described examples are not meant to imply architectural limitations. For example, data processing system <highlight><bold>300</bold></highlight> also may be a notebook computer or hand held computer in addition to taking the form of a PDA. Data processing system <highlight><bold>300</bold></highlight> also may be a kiosk or a Web appliance. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Each Web page may contain text, graphics, images, sound, multimedia files, links to other Web pages, and any other type of electronic information. The server computer system stores code in an HTML file which is used by a client&apos;s Web browser in order to build the page. When the user requests a particular page, the user types in the page URL. This HTML file is then returned to the browser. The HTML file tells the browser where to find the necessary components of the page, such as text files, image files, etc., as well as how to build the page. The flowcharts below describe the process used to obtain and display each component of a Web page. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> depicts a high level flow chart which illustrates a process executing within a server computer system for transmitting pre-encrypted data in accordance with the present invention. The process starts as depicted by block <highlight><bold>400</bold></highlight> and thereafter passes to block <highlight><bold>402</bold></highlight> which illustrates a server computer system receiving a request for a secure URL. Next, block <highlight><bold>404</bold></highlight> depicts the server establishing an SSL session with the client. An encryption key is established and associated with this session. Once an SSL session is established, all data transmitted by the server to the client will be encrypted, either pre-encrypted or encrypted at the time of transmission. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The process then passes to block <highlight><bold>406</bold></highlight> which illustrates the server establishing a cache which is associated with this session. A separate cache is established within the server for each session. Therefore, each session has an associated cache. Block <highlight><bold>408</bold></highlight>, then, depicts the server transmitting information from an HTML file associated with this page to the client about how to build and display the secure Web page that the client requested. This information includes information about images that are to be displayed as part of the requested Web page. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The process then passes to block <highlight><bold>410</bold></highlight> which illustrates the server receiving a request for an image which is a component of the requested Web page. Next, block <highlight><bold>412</bold></highlight> depicts the server checking the cache associated with this SSL session to determine whether a pre-encrypted version of the image is already stored in the cache. If the image is static and has been requested before during this session, a pre-encrypted version of the image will already be stored in the session&apos;s cache. If the image is static and has not been requested before during this session or if the image is dynamically-changing, a pre-encrypted version will not be stored in the cache. Static information which changes infrequently can be pre-encrypted and stored in the cache for future use. Block <highlight><bold>414</bold></highlight>, then, illustrates a determination of whether or not the server found a pre-encrypted version of the image in the cache. If a determination is made that the server did not find a pre-encrypted version of the image in the cache, the process passes to block <highlight><bold>422</bold></highlight>. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> Referring again to block <highlight><bold>414</bold></highlight>, if a determination is made that the server did find a pre-encrypted version of the image in the cache, the process passes to block <highlight><bold>416</bold></highlight> which depicts the server sending this pre-encrypted version of the image to the SSL record layer. Next, block <highlight><bold>418</bold></highlight> illustrates a determination of whether or not the server received a notice from the SSL layer that the cache data, i.e. the pre-encrypted version of the image, is invalid. If a determination is made that the server did not receive a notice that the cache data is invalid, i.e. the cache data is thus valid, the process passes to block <highlight><bold>424</bold></highlight>. Referring again to block <highlight><bold>418</bold></highlight>, if a determination is made that the server did receive a notice that the cache data is invalid, the process passes to block <highlight><bold>420</bold></highlight> which depicts the server flushing the cache that is associated with this SSL session. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The process then passes to block <highlight><bold>422</bold></highlight> which illustrates the server sending a non-encrypted version of the image to the SSL record layer. Next, block <highlight><bold>424</bold></highlight> illustrates a determination of whether or not the server has received a request for another image. If a determination is made that the server has received a request, the process passes back to block <highlight><bold>412</bold></highlight>. Referring again to block <highlight><bold>424</bold></highlight>, if a determination is made that the server has not received a request, the process passes to block <highlight><bold>426</bold></highlight>. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates a high level flow chart which depicts a secure sockets layer (SSL) record layer, that is being executed within a server computer system, transmitting pre-encrypted data in accordance with the present invention. The process starts as depicted by block <highlight><bold>500</bold></highlight> and thereafter passes to block <highlight><bold>502</bold></highlight> which illustrates the SSL record layer receiving data, such as an image that is to be displayed as part of a Web page, to be transmitted. Next, the SSL record layer determines whether this data has already been encrypted. If a determination is made that the data has not been pre-encrypted, i.e. the data is not encrypted, the process passes to block <highlight><bold>506</bold></highlight> which illustrates the SSL record layer encrypting the data using the current session encryption key. Thereafter, block <highlight><bold>508</bold></highlight> depicts the SSL layer transmitting the encrypted data to the client. The process then passes back to block <highlight><bold>502</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> Referring again to block <highlight><bold>504</bold></highlight>, if the SSL record layer determines that the data has already been encrypted, the process passes to block <highlight><bold>510</bold></highlight> which illustrates the SSL record layer comparing the encryption key associated with this data with the encryption key currently being used for this SSL session. The process then passes to block <highlight><bold>512</bold></highlight> which depicts a determination of whether or not the keys are the same. The pre-encrypted image stored in this session&apos;s cache may have been encrypted using an encryption key that is different from the encryption key currently being used for this session. Each SSL session will have its own, unique encryption key. The SSL protocol permits the client and server to renegotiate the encryption key during the session such that a new, different encryption key will be used. The pre-encrypted image stored in the session&apos;s cache will have been encrypted with a particular encryption key. If the client and server have renegotiated a different encryption key, the cache data will be invalid because the encryption key used to pre-encrypt the image has changed. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> If a determination is made that the keys are different, the process passes to block <highlight><bold>514</bold></highlight> which illustrates the SSL record layer notifying the server that the data is invalid. Next, block <highlight><bold>516</bold></highlight> depicts the SSL record layer discarding the data. The process then passes back to block <highlight><bold>502</bold></highlight>. Referring again to block <highlight><bold>512</bold></highlight>, if a determination is made that the keys are the same, the process passes to block <highlight><bold>518</bold></highlight> which illustrates the SSL record layer transmitting the pre-encrypted data to the client. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> illustrates a high level flow chart which depicts a process executing within a client computer system for requesting, receiving, and displaying a Web page in accordance with the present invention. The process starts as depicted by block <highlight><bold>600</bold></highlight> and thereafter passes to block <highlight><bold>602</bold></highlight> which illustrates a client computer system requesting a secure Web page identified by a particular uniform resource locator (URL). The process then passes to block <highlight><bold>604</bold></highlight> which depicts a browser that is executing on the client transmitting the request for the Web page by transmitting the URL to the server computer system identified by the URL. Next, block <highlight><bold>606</bold></highlight> illustrates the client establishing a secure sockets layer (SSL) session with the server. A particular encryption key is established and associated with this session. The process then passes to block <highlight><bold>608</bold></highlight> which depicts the browser receiving information from the server. This information is the content of the HTML file which describes how to build and display the requested page and includes a listing of other URL&apos;s which must be accessed in order to display the images which are part of the page. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> Block <highlight><bold>610</bold></highlight>, then, illustrates the browser requesting one of the images from the server. Next, block <highlight><bold>612</bold></highlight> depicts the client receiving the image. Thereafter, block <highlight><bold>614</bold></highlight> illustrates the client decrypting the image using the encryption key associated with this session. The process then passes to block <highlight><bold>616</bold></highlight> which depicts the browser displaying the decrypted image. Next, block <highlight><bold>618</bold></highlight> illustrates a determination of whether or not this image is the last image to be displayed for this Web page. If a determination is made that other images also need to be displayed for this Web page, the process passes back to block <highlight><bold>610</bold></highlight>. Referring again to block <highlight><bold>618</bold></highlight>, if a determination is made that there are no other images to be displayed, the process passes to block <highlight><bold>620</bold></highlight>. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> It is important to note that while the present invention has been described in the context of a fully functioning data processing system, those of ordinary skill in the art will appreciate that the processes of the present invention are capable of being distributed in the form of a computer readable medium of instructions and a variety of forms and that the present invention applies equally regardless of the particular type of signal bearing media actually used to carry out the distribution. Examples of computer readable media include recordable-type media, such as a floppy disk, a hard disk drive, a RAM, CD-ROMs, DVD-ROMs, and transmission-type media, such as digital and analog communications links, wired or wireless communications links using transmission forms, such as, for example, radio frequency and light wave transmissions. The computer readable media may take the form of coded formats that are decoded for actual use in a particular data processing system. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The description of the present invention has been presented for purposes of illustration and description, and is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. The embodiment was chosen and described in order to best explain the principles of the invention, the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method in a data processing system, said method comprising the steps of: 
<claim-text>receiving a request for a secure Web page, said secure Web page including data; </claim-text>
<claim-text>determining whether said data has been pre-encrypted; and </claim-text>
<claim-text>bypassing an encryption step and transmitting said data in response to a determination that said data has been pre-encrypted. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of in response to a determination that said data has not been pre-encrypted, encrypting said data and transmitting said encrypted data. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, further comprising the step of in response to a determination that said data has not been pre-encrypted, storing said encrypted data. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, further comprising the step of storing said encrypted data in a cache. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the steps of: 
<claim-text>receiving a request for an image included within said Web page; </claim-text>
<claim-text>checking a cache to determine whether a pre-encrypted version of said image is already stored in said cache; </claim-text>
<claim-text>in response to a determination that said pre-encrypted version is stored in said cache, bypassing an encryption step and transmitting said pre-encrypted version; and </claim-text>
<claim-text>in response to a determination that said pre-encrypted version is not stored in said cache, encrypting said image and transmitting said encrypted image. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the steps of: 
<claim-text>receiving said request for said secure Web page, said secure Web page including static information and dynamically-changing information; </claim-text>
<claim-text>determining whether said static information has been pre-encrypted; </claim-text>
<claim-text>bypassing an encryption step and transmitting said static information in response to a determination that said static information has been pre-encrypted; </claim-text>
<claim-text>encrypting said dynamically-changing information; and </claim-text>
<claim-text>transmitting said encrypted, dynamically-changing information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said data processing system further includes a server computer system coupled to a client computer system utilizing a network, said method further comprising the steps of: 
<claim-text>receiving a request for said Web page by said server; </claim-text>
<claim-text>establishing a Secure Sockets Layer (SSL) session between said client and said server in response to said client transmitting said request; </claim-text>
<claim-text>associating a cache with said SSL session; </claim-text>
<claim-text>determining whether a pre-encrypted version of said data has been stored in said cache in response to said receipt of said request; </claim-text>
<claim-text>in response to a determination that said pre-encrypted version of said data has not been stored in said cache, encrypting said data and transmitting said encrypted data; and </claim-text>
<claim-text>in response to a determination that said pre-encrypted version of said data has been stored in said cache, transmitting said pre-encrypted version of said data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of maintaining said Web page by a secure Web site. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A computer program product in a data processing system, comprising: 
<claim-text>instruction means for receiving a request for a secure Web page, said secure Web page including data; </claim-text>
<claim-text>instruction means for determining whether said data has been pre-encrypted; and </claim-text>
<claim-text>instruction means for bypassing an encryption step and transmitting said data in response to a determination that said data has been pre-encrypted. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The product according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, further comprising instruction means for in response to a determination that said data has not been pre-encrypted, encrypting said data and transmitting said encrypted data. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The product according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, further comprising instruction means for in response to a determination that said data has not been pre-encrypted, storing said encrypted data. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The product according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, further comprising instruction means for storing said encrypted data in a cache. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The product according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, further comprising: 
<claim-text>instruction means for receiving a request for an image included within said Web page; </claim-text>
<claim-text>instruction means for checking a cache to determine whether a pre-encrypted version of said image is already stored in said cache; </claim-text>
<claim-text>instruction means for in response to a determination that said pre-encrypted version is stored in said cache, bypassing an encryption step and transmitting said pre-encrypted version; and </claim-text>
<claim-text>instruction means for in response to a determination that said pre-encrypted version is not stored in said cache, encrypting said image and transmitting said encrypted image. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The product according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, further comprising: 
<claim-text>instruction means for receiving said request for said secure Web page, said secure Web page including static information and dynamically-changing information; </claim-text>
<claim-text>instruction means for determining whether said static information has been pre-encrypted; </claim-text>
<claim-text>instruction means for bypassing an encryption step and transmitting said static information in response to a determination that said static information has been pre-encrypted; </claim-text>
<claim-text>instruction means for encrypting said dynamically-changing information; and </claim-text>
<claim-text>instruction means for transmitting said encrypted, dynamically-changing information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The product according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein said data processing system further includes a server computer system coupled to a client computer system utilizing a network, said product further comprising: 
<claim-text>instruction means for receiving a request for said Web page by said server; </claim-text>
<claim-text>instruction means for establishing a Secure Sockets Layer (SSL) session between said client and said server in response to said client transmitting said request; </claim-text>
<claim-text>instruction means for associating a cache with said SSL session; </claim-text>
<claim-text>instruction means for determining whether a pre-encrypted version of said data has been stored in said cache in response to said receipt of said request; </claim-text>
<claim-text>instruction means for in response to a determination that said pre-encrypted version of said data has not been stored in said cache, encrypting said data and transmitting said encrypted data; and </claim-text>
<claim-text>instruction means for in response to a determination that said pre-encrypted version of said data has been stored in said cache, transmitting said pre-encrypted version of said data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The product according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, further comprising instruction means for maintaining said Web page by a secure Web site. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A data processing system, comprising: 
<claim-text>a request being received by said data processing system for a secure Web page, said secure Web page including data; </claim-text>
<claim-text>said data processing system including a CPU executing code for determining whether said data has been pre-encrypted; and </claim-text>
<claim-text>said data processing system including a CPU executing code for bypassing an encryption step and transmitting said data in response to a determination that said data has been pre-encrypted. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, further comprising in response to a determination that said data has not been pre-encrypted, said CPU executing code for encrypting said data and transmitting said encrypted data. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, further comprising in response to a determination that said data has not been pre-encrypted, said CPU executing code for storing said encrypted data. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, further comprising a cache for storing said encrypted data. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, further comprising: 
<claim-text>said Web page including a request for an image included within said Web page; </claim-text>
<claim-text>said CPU executing code for checking a cache to determine whether a pre-encrypted version of said image is already stored in said cache; </claim-text>
<claim-text>in response to a determination that said pre-encrypted version is stored in said cache, said CPU executing code for bypassing an encryption step and transmitting said pre-encrypted version; and </claim-text>
<claim-text>in response to a determination that said pre-encrypted version is not stored in said cache, said CPU executing code for encrypting said image and transmitting said encrypted image. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, further comprising: 
<claim-text>said secure Web page including static information and dynamically-changing information; </claim-text>
<claim-text>said CPU executing code for determining whether said static information has been pre-encrypted; </claim-text>
<claim-text>said CPU executing code for bypassing an encryption step and transmitting said static information in response to a determination that said static information has been pre-encrypted; </claim-text>
<claim-text>said CPU executing code for encrypting said dynamically-changing information; and </claim-text>
<claim-text>said CPU executing code for transmitting said encrypted, dynamically-changing information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein said data processing system further includes a server computer system coupled to a client computer system utilizing a network, further comprising: 
<claim-text>said server for receiving a request for said Web page; </claim-text>
<claim-text>a Secure Sockets Layer (SSL) session being established between said client and said server in response to said client transmitting said request; </claim-text>
<claim-text>a cache associated with said SSL session; </claim-text>
<claim-text>said CPU executing code for determining whether a pre-encrypted version of said data has been stored in said cache in response to said receipt of said request; </claim-text>
<claim-text>in response to a determination that said pre-encrypted version of said data has not been stored in said cache, said CPU executing code for encrypting said data and transmitting said encrypted data; and </claim-text>
<claim-text>in response to a determination that said pre-encrypted version of said data has been stored in said cache, said CPU executing code for transmitting said pre-encrypted version of said data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, further comprising said Web page being maintained by a secure Web site.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005282A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005282A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005282A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005282A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005282A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005282A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005282A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
