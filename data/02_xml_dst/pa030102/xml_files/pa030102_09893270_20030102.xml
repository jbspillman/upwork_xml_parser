<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005037A1-20030102-D00000.TIF SYSTEM "US20030005037A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005037A1-20030102-D00001.TIF SYSTEM "US20030005037A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005037A1-20030102-D00002.TIF SYSTEM "US20030005037A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005037A1-20030102-D00003.TIF SYSTEM "US20030005037A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005037A1-20030102-D00004.TIF SYSTEM "US20030005037A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005037A1-20030102-D00005.TIF SYSTEM "US20030005037A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005037A1-20030102-D00006.TIF SYSTEM "US20030005037A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005037A1-20030102-D00007.TIF SYSTEM "US20030005037A1-20030102-D00007.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005037</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09893270</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010627</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/16</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>709</class>
<subclass>203000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Crash recovery system</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Gunnar</given-name>
<family-name>Aija</family-name>
</name>
<residence>
<residence-non-us>
<city>Rimforsa</city>
<country-code>SE</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Alexander</given-name>
<family-name>Larsson</family-name>
</name>
<residence>
<residence-us>
<city>Chapel Hill</city>
<state>NC</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>COHEN, PONTANI, LEIBERMAN &amp; PAVANE</name-1>
<name-2></name-2>
<address>
<address-1>Suite 1210</address-1>
<address-2>551 Fifth Avenue</address-2>
<city>New York</city>
<state>NY</state>
<postalcode>10176</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A client device is connectable to a server via a communication network for receiving new software packages. The client device includes a pair of system partitions designated as current and backup system partitions and at least one package partition on which all installed system packages are saved. A central processing unit of the client device uses the contents of the current system partition. In response to an startup failure or a runtime failure, the client device reboots using the backup system partition and allows a user to selectively install any of the software packages saved on the at least one package partition. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to the installation of software and recovering from installation and runtime errors in a continuously updated and extended distributed computer environment. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of the Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Many software systems are continuously being updated and extended with new system components and applications. Therefore, purchasers of such software systems often receive updates from the software manufacturers to update the original versions. These updates are typically transmitted by a server of the software provider to the client via a communication network such as the internet. The updates may be automatically sent or a user may download a new version of software via the internet. If any errors occur during either the download, installation, or runtime of the software, it is desirable if the client device can recover from the error. Preferably, the client device reverts back to a previous version of the software system. Furthermore, the installation itself, especially if it is automatic, must be performed so that it does not disturb the user&apos;s use of the device. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> PCT Patent Publication No. WO 00/58834 discloses a software installation and recovery system for a television viewing computer system. In that system, the computer system has a three stage startup procedure including a bootloader stage, an operating system kernel stage, and an application stage. A persistent storage (hard disk) has two partitions for each stage of the three stage startup procedure, a primary partition and a backup partition. More specifically, there are two partitions dedicated to holding a copy of the second stage boot loader, two partitions holding a copy of the operating system kernel, and two partitions holding a copy of the application software. An indication is recorded that specifies which of the partitions of each pair is the primary and which is the backup. When a new software image is installed, the new image is first copied into the appropriate backup partition and an indication is made in the database that the software installation is underway. The primary and backup partitions are then swapped and the system is rebooted using the new primary partition of the software that has just been downloaded. Control is passed to the backup partition for each software component if the primary partition fails to load properly. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> This prior art device includes a separate backup partition for the bootloader stage, the operating kernel loading stage, and the applications loading stage of the installation procedure. The disclosed system detects only failures during loading of programs associated with these stages. That is, this system detects whether the loading process for each of these stages is successfully completed. Accordingly, this system does not address runtime failures, i.e., failures which occur during the running of the programs such as if the program becomes non-responsive or &ldquo;hangs&rdquo;. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The object of the present invention is to provide a client device and a method for keeping a software system that is continuously updated and extended consistent and stable over time. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The object is met by a method for recovering from installation and runtime errors on a client device, wherein the client device includes a persistent memory such as a hard drive including first and second system partitions and a package partition. The runtime components of a software system of the client device are installed in the system partitions. All installed packages are saved in the package partition. Furthermore, one of the first and second system partitions is designated the &ldquo;current&rdquo; partition and the other is designated the &ldquo;back-up partition&rdquo;. The dual system partitions are used to perform a recovery procedure in which the software system returns to a previous version in response to a startup (boot) failure, a runtime failure (i.e. a failure that causes the program to &ldquo;hang&rdquo;), or a user request. Since at least all the software packages installed in the computer that have been downloaded from a remote server are saved on the package partition, it is possible to selectively reinstall these system components such as the operating system kernel and applications. If the software packages for all the installed system components are saved on the package partition, it is also possible to fully reinstall the entire software system by installing all the software packages contained on the package partition. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> When a new software package is received by the client device, the new software package is installed in one of the system partitions and is saved in the package partition. If the software package contains a critical component of the software system, i.e., a component that is continuously loaded or continuously running, the current system partition is first copied onto the backup partition. Then the new software package is installed on the backup system partition and saved on the package partition. If the new software package is a new version of an existing package, then the old version is deleted from the package partition. The designations of the backup and current system partitions are switched and the software system is restarted (rebooted) using the new current system partition which includes the new software. If a booting failure occurs or a runtime failure occurs, the recovery procedure described above is entered. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> If the new software package does not contain a critical component, the new software package is installed on the current system partition and saved to the package partition. If the new software package includes a new version of an existing package, then the old version is deleted from the package partition. If a booting failure occurs or a runtime failure occurs, the recovery procedure described above is entered. The recovery procedure may also be initiated by a user of the client device to revert back to a previous version of the software system. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The above-described installation process and recovery process are particularly useful when the client device is a &ldquo;smart accessory&rdquo; such as a mobile phone, a set top box for cable or satellite television services, a personal digital assistant (PDA), or a personal computer (PC) which automatically receives software updates from a service provider. If a loading failure or runtime failure occurs, the smart accessory will revert to a previous version of the software. The user of the smart accessory can continue using the client device. Furthermore, the service provider may then provide a further update packet for non-user-interactive (automatic) installation to cure a bug or security problem. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The object of the invention is also met by a device having a persistent memory including first and second system partitions and a package partition for implementing the above described method. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Other objects and features of the present invention will become apparent from the following detailed description considered in conjunction with the accompanying drawings. It is to be understood, however, that the drawings are designed solely for purposes of illustration and not as a definition of the limits of the invention, for which reference should be made to the appended claims. It should be further understood that the drawings are not necessarily drawn to scale and that, unless otherwise indicated, they are merely intended to conceptually illustrate the structures and procedures described herein. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> In the drawings, wherein like reference characters denote similar elements throughout the several views: </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a schematic diagram of system in which the client device according to the present invention is connected; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a partial schematic diagram showing portions of the client device according to the present invention; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a flow diagram showing the method according to the present invention of installing a new software package; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flow diagram showing an upgrade procedure of the method in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a flow diagram showing an update procedure of the method of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flow diagram showing a recovery procedure for the client device of the present invention; and </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a flow diagram showing use of a packet management system. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PRESENTLY PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a distributed computer environment in which client devices <highlight><bold>100</bold></highlight>, <highlight><bold>101</bold></highlight>, <highlight><bold>101</bold></highlight>, and <highlight><bold>102</bold></highlight> according to the present invention may be arranged. Each of the client devices <highlight><bold>100</bold></highlight>-<highlight><bold>102</bold></highlight> is connectable to servers <highlight><bold>300</bold></highlight> and <highlight><bold>301</bold></highlight> via a communication network <highlight><bold>200</bold></highlight> such as the world wide web or a satellite broadcast network. To maintain software or to install new software on one of the client devices <highlight><bold>100</bold></highlight>, the server <highlight><bold>300</bold></highlight> may download software packages to the client device <highlight><bold>100</bold></highlight> through the communication network <highlight><bold>200</bold></highlight>. The downloading may occur automatically or may be initiated by a user of the client device <highlight><bold>100</bold></highlight>, i.e., the user may request a copy of a new version of the software. Although four client devices and two servers are shown, any number of devices may be connected through the network. Furthermore, the server <highlight><bold>300</bold></highlight> may be arranged so that the downloading of the software package occurs via a broadcast transmission by the server <highlight><bold>300</bold></highlight> to all client devices to which the software package applies. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Each of the client devices <highlight><bold>100</bold></highlight>-<highlight><bold>102</bold></highlight> may be any type of device that is connectable to a remote server through a communication network such as, for example, a mobile phone, a set top box for cable or satellite television services, a personal digital assistant (PDA), or a personal computer (PC). </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a partial schematic diagram of the client device <highlight><bold>100</bold></highlight> which includes a persistent memory <highlight><bold>10</bold></highlight> such as a hard drive or other non-volatile memory and a CPU <highlight><bold>20</bold></highlight>. The persistent memory has first and second system partitions <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight> and a package partition <highlight><bold>16</bold></highlight>. The first and second system partitions <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight> are collectively referred to as the system partitions <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight>. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> During operation, one of the system partitions <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight> is designated the &ldquo;current&rdquo; system partition and the other is designated the &ldquo;backup&rdquo; system partition. This designation is stored in a boot indicator <highlight><bold>24</bold></highlight> in a non-volatile memory <highlight><bold>26</bold></highlight> of the client device <highlight><bold>100</bold></highlight>. The nonvolatile memory <highlight><bold>26</bold></highlight> may comprise a part of the persistent memory <highlight><bold>10</bold></highlight> or may comprise a separate non-volatile memory. When the client device <highlight><bold>100</bold></highlight> starts, i.e., boots, the &ldquo;current&rdquo; one of the system partitions <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight> is used. The information in the boot indicator <highlight><bold>24</bold></highlight> instructs the CPU <highlight><bold>20</bold></highlight> regarding which of the system partitions <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight> is the current partition. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Runtime components of the software system of the client device <highlight><bold>100</bold></highlight> are stored in the system partitions <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight>. The runtime components include an operating system kernel, system commands, configuration files, libraries, a window system, applications and tools, and the user interface. When no new software package is being downloaded to the client device <highlight><bold>100</bold></highlight>, the current system partition contains the latest version of the runtime components of the software system and the backup system partition contains the previous version of the runtime components of the software system. The system partitions <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight> are used for the maintenance and installation of software and for recovering from a &ldquo;crash&rdquo; of the client device <highlight><bold>100</bold></highlight> by allowing an automatic return to the previous version of the system software in response to the crash as discussed in further detail below. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The package partition <highlight><bold>16</bold></highlight> is a space in the persistent memory <highlight><bold>10</bold></highlight> which may include a copy of all of the software packages installed on the computer (thus providing a means for reinstalling the software system from scratch). Alternatively, the package partition <highlight><bold>16</bold></highlight> may include copies of only the new downloaded software packages. A package management system <highlight><bold>18</bold></highlight> includes a package database in each of the system partitions <highlight><bold>10</bold></highlight>, <highlight><bold>12</bold></highlight> including information relating to the dependencies between the software packages and versioning information about the software packages installed in the associated ones of the system partitions <highlight><bold>10</bold></highlight>, <highlight><bold>12</bold></highlight>. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows the process for installing new software packages onto the client device <highlight><bold>100</bold></highlight>. For the description of the installation of a new software package, we will assume that the first system partition <highlight><bold>12</bold></highlight> is the current partition and the second system partition <highlight><bold>14</bold></highlight> is the backup partition at the start of the process for installing new software packages. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> When a software installation package is received by the client device <highlight><bold>100</bold></highlight> from a server <highlight><bold>300</bold></highlight>, step S<highlight><bold>10</bold></highlight>, the client device <highlight><bold>100</bold></highlight> must determine whether the software installation package includes a critical component of the system, step S<highlight><bold>12</bold></highlight>. To accomplish this, the software package is transmitted from the server <highlight><bold>300</bold></highlight> with a meta-file which includes specific information regarding whether the software component package includes a critical component. If the software does contain a critical component, an upgrade is performed in step S<highlight><bold>14</bold></highlight>. If the software contains only non-critical components, an update is performed in step S<highlight><bold>16</bold></highlight>. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Critical components are components that are continuously running or loaded and that require a system reboot/restart to run when upgraded. In the present embodiment, e.g., the operating system kernel, the device drivers, and the window system are considered critical components. Non-critical components include, e.g., new applications, system commands, and configurations files. Other components must be evaluated by the software manufacturer on a case by case basis to determine whether they are considered critical components. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates the steps for the upgrade procedure which applies to the installation of a software package containing a critical software component. In step S<highlight><bold>20</bold></highlight>, an indication is made in the non-volatile memory of the client device <highlight><bold>100</bold></highlight> that the upgrade procedure has started. This indication allows the client device <highlight><bold>100</bold></highlight> to determine whether the upgrade was interrupted before being finished. Then the current system partition, i.e., the first system partition <highlight><bold>12</bold></highlight> in this case, is copied onto the backup system partition, i.e., the second system partition <highlight><bold>14</bold></highlight>, step S<highlight><bold>22</bold></highlight>. The new software package is then installed on the backup system partition <highlight><bold>14</bold></highlight>, step S<highlight><bold>24</bold></highlight>. The new software package is then also saved on the package partition <highlight><bold>16</bold></highlight>, step S<highlight><bold>26</bold></highlight>. If the new software package is a replacement of a preexisting version, then the preexisting version of the software package is deleted from the package partition, step S<highlight><bold>28</bold></highlight>. In addition, the information in the package management system <highlight><bold>18</bold></highlight> must be updated for the new software package, step S<highlight><bold>29</bold></highlight>. This information may be in a meta-file sent with the new software package. After the new software package is installed, the boot indicator <highlight><bold>24</bold></highlight> in the non-volatile memory <highlight><bold>26</bold></highlight> is updated so that the backup system partition, i.e., the second system partition, is labeled as the current system partition and the current system partition, the first system partition, is labeled as the backup system partition, step S<highlight><bold>30</bold></highlight>. Accordingly, after step S<highlight><bold>30</bold></highlight>, the second system partition <highlight><bold>14</bold></highlight> is designated as the current system partition and the first system partition <highlight><bold>12</bold></highlight> is designated as the backup system partition. In step S<highlight><bold>32</bold></highlight>, the indication in the nonvolatile memory <highlight><bold>26</bold></highlight> is changed to indicate that the upgrade procedure is finished. The client device <highlight><bold>100</bold></highlight> is now rebooted in step S<highlight><bold>34</bold></highlight> using the current system partition <highlight><bold>14</bold></highlight> which includes the new software package. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows the steps for the update procedure which applies to the installation of a software package containing only non-critical software components. In step S<highlight><bold>40</bold></highlight>, an indication is made in a non-volatile memory of the client device <highlight><bold>100</bold></highlight> that the update procedure has started. This indication allows the client device <highlight><bold>100</bold></highlight> to determine whether the update procedure was interrupted before being finished. The new software package is then installed into the current system partition <highlight><bold>12</bold></highlight>, step S<highlight><bold>42</bold></highlight>. The new software package is then also saved on the package partition <highlight><bold>16</bold></highlight>, step S<highlight><bold>44</bold></highlight>. If the new software package is a replacement of a preexisting version, then the preexisting version of the software package is deleted from the package partition, step S<highlight><bold>46</bold></highlight>. The information in the package management system <highlight><bold>18</bold></highlight> is updated for the new software package, step S<highlight><bold>47</bold></highlight>. As stated above, this information may be in the meta-file sent with the new software package. In step S<highlight><bold>48</bold></highlight>, the indication in the nonvolatile memory is changed to indicate that the update procedure is finished. A reboot is not needed for installation of non-critical components. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> If a failure, i.e., a system crash, occurs in the client device <highlight><bold>100</bold></highlight> after the installation process of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the client device initiates a recovery process. <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flow diagram illustrating the recovery process. The recovery process may be initiated in step S<highlight><bold>60</bold></highlight> by a startup (boot) failure, a runtime (hangup) failure, or by a user request to revert back to a previous version of the system. Instead of initiating the recovery period at each runtime failure, the recovery process may alternatively be initiated after a number of hangups, i.e., five, occur within a predefined time period. After initiation of the recovery process, the client device <highlight><bold>100</bold></highlight> starts, i.e., boots up, from the backup one of the first and second system partitions <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight>, step S<highlight><bold>62</bold></highlight>. If the upgrade procedure of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> has just been performed the backup system partition is the first system partition <highlight><bold>12</bold></highlight>, and if the update procedure of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> has been performed the backup system partition is the second system partition. The boot indicator <highlight><bold>24</bold></highlight> of the non-volatile memory <highlight><bold>26</bold></highlight> is then updated to indicate that the backup system partition is now the new current system partition, step S<highlight><bold>64</bold></highlight>. The switching of the boot indicator may be performed before rebooting of step S<highlight><bold>62</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> A new backup system partition is then created by copying the previously current system partition, step S<highlight><bold>66</bold></highlight>, i.e., copying the system partition that was current during the step S<highlight><bold>60</bold></highlight>. The client device <highlight><bold>100</bold></highlight> then presents to the user a list of all software packages that were installed on the previously current system partition, step S<highlight><bold>68</bold></highlight>. This list of software packages may be kept on or derived from package databases of the package management system <highlight><bold>18</bold></highlight>, which are updated for each upgrade and update procedure. The user may then selectively install application and system components on the system partition, step S<highlight><bold>70</bold></highlight>, from the list. Accordingly, if a user determines that a component that was previously installed caused the system to crash, the user scan remove that component from the system package to avoid further problems in step S<highlight><bold>70</bold></highlight>. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Alternatively, the user could completely reinstall the system of the user device <highlight><bold>100</bold></highlight> in step S<highlight><bold>70</bold></highlight> by installing all software packages saved on the package partition. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Accordingly, if the client device <highlight><bold>100</bold></highlight> is a mobile phone or a set top box for a cable or satellite television system, the user of the client device can continue using the device after a system crashes caused by an automatic download of a software package from the server <highlight><bold>300</bold></highlight>. In this case, the user at the server <highlight><bold>300</bold></highlight> can selectively install the software programs as required. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a flow diagram showing how the package management system <highlight><bold>18</bold></highlight> may be used according to the present invention during the step S<highlight><bold>70</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. The package management system <highlight><bold>18</bold></highlight> provides information to the user regarding the dependencies between the various software packages on the package partition. When a user selects a user selected software package for installation in the system partitions during the recovery procedure after a &ldquo;crash&rdquo;, step S<highlight><bold>80</bold></highlight>, the package management system <highlight><bold>18</bold></highlight> checks for compatibility with the existing software packages, step S<highlight><bold>82</bold></highlight>. If the user selected software package is not compatible with one of the existing software packages, the CPU <highlight><bold>20</bold></highlight> issues a warning and/or blocks the installation of the user selected software package, step S<highlight><bold>84</bold></highlight>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The package management system <highlight><bold>18</bold></highlight> then determines whether the user selected software package requires any further software packages to support the user selected software package, step S<highlight><bold>86</bold></highlight>. If the user selected software package requires further software packages, the CPU <highlight><bold>20</bold></highlight> issues a warning and/or automatically includes the required software packages with the installation of the user selected software package, step <highlight><bold>88</bold></highlight>. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Thus, while there have shown and described and pointed out fundamental novel features of the invention as applied to a preferred embodiment thereof, it will be understood that various omissions and substitutions and changes in the form and details of the devices illustrated, and in their operation, may be made by those skilled in the art without departing from the spirit of the invention. For example, it is expressly intended that all combinations of those elements and/or method steps which perform substantially the same function in substantially the same way to achieve the same results are within the scope of the invention. Moreover, it should be recognized that structures and/or elements and/or method steps shown and/or described in connection with any disclosed form or embodiment of the invention may be incorporated in any other disclosed or described or suggested form or embodiment as a general matter of design choice. It is the intention, therefore, to be limited only as indicated by the scope of the claims appended hereto. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for recovering from startup and runtime failures of a software system in a computer environment including a client device, comprising the steps of: 
<claim-text>(a) providing a persistent memory in the client device including at least first and second system partitions and at least one package partition, wherein runtime components of the software system are installed on the first and second system partitions and at least the software packages of the software system downloaded from remote servers are saved on the at least one package partition; </claim-text>
<claim-text>(b) designating one of the first and second system partitions as a current system partition and the other of the first and second system partitions as a backup system partition; </claim-text>
<claim-text>(c) using the current system partition by a central processing unit of the client device for controlling the client device; </claim-text>
<claim-text>(d) rebooting the software system of the client device using the backup system partition in response to one of an startup failure, a runtime failure of the software system of the client device, and a user request; </claim-text>
<claim-text>(e) designating the backup system partition as the new current system partition; and </claim-text>
<claim-text>(f) creating a new backup system partition from the new current system partition. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein all installed software packages of the software system are saved on the at least one package partition, said method further comprising the step of reinstalling the entire software system by installing all of the software packages residing on the at least one package partition after said step (f). </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, further comprising the step of allowing selective removal of the software packages from the at least one package partition after said step (f). </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of allowing selective removal of the software packages from the at least one package partition after said step (f). </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of: 
<claim-text>(g) allowing selective installation of software packages on the first and second system partitions from the software packages saved on the at least one package partition after said step (f). </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein said step (g) further comprises using a package management system to determine dependencies between the software packages saved on the at least one package partition. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein said step (g) further comprises the steps of selecting a user selected software package on the package partition for installation in one of the system partitions, determining whether the user selected software package is compatible with existing installed software packages, and blocking installation of the user selected software package if the user selected software package is not compatible with existing installed software packages. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein said step (g) further comprises the steps of selecting a user selected software package on the package partition for installation in one of the system partitions, determining whether the user selected software package is compatible with existing installed software packages, and outputting a warning if the user selected software package is not compatible with existing installed software packages. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein said step (g) further comprises selecting a user selected software package from the package partition for installation in one of the system partitions, identifying other software packages on the package partitions required for the user selected software package using the package management system, and installing both the selected software package and the other software packages identified by the package management system. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of performing a software package installation procedure for installing a new software package in the client device before said step (d), wherein the step of installing a new software package includes the substeps of: 
<claim-text>(i) receiving the new software package at the client device; </claim-text>
<claim-text>(ii) determining whether the new software package contains a critical component, the critical component being a component that requires a reboot of the client device to run after installation; </claim-text>
<claim-text>(iii) performing an upgrade procedure including installing the new software package in the background system partition if it is determined in said step (ii) that the new software package contains a critical component; </claim-text>
<claim-text>(iv) performing an update procedure including installing the new software package in the current system partition if it is determined in said step (ii) that the new software package does not contain a critical component; and </claim-text>
<claim-text>(v) saving the new software package in the at least one package partition. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, further comprising the step of: 
<claim-text>(g) allowing selective installation of software packages on the first and second system partitions from the software packages saved on the at least one package partition after said step (f). </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein said step (g) further comprises outputting, by the client device, a list of software packages installed on the system partitions during the most recently performed software package installation procedure. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said new software package replaces a preexisting software package such that said substep (v) further includes removing the preexisting software package from the at least one package partition after the new software package has been saved. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, further comprising the step of indicating in a non-volatile memory of the computer that the installation process has started after said substep (i) and indicating in the non-volatile memory after said substep (v) that the installation process is completed. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said substep (i) comprises receiving the new software package from a remote server via a communication network. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein said substep (i) comprises receiving the new software package from the remote server automatically. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein said substep (i) comprises receiving the new software package in response to a user request. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said substep (ii) comprises reading a meta-file sent with the new software package to determine whether the package contains a critical component. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said upgrade procedure of said substep (iii) comprises: 
<claim-text>copying the current system partition to the backup system partition; </claim-text>
<claim-text>installing the new software package on the backup system partition; </claim-text>
<claim-text>saving the new software on the at least one package partition; </claim-text>
<claim-text>switching the designations of the current and backup system partitions so that the current system partition includes the new software package; and </claim-text>
<claim-text>rebooting the client device with the current system partition. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, further comprising the step of deleting an old version of the software package from the at least one package partition. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, further comprising the step of updating a package management system of the client device used to determine dependencies between the software packages of the software system. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said update procedure of said substep (iv) comprises: 
<claim-text>installing the new software package on the current system partition; and </claim-text>
<claim-text>saving the new software package on the at least one package partition. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, further comprising the step of deleting an old version of the software package from the at least one package partition. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, further comprising the step of updating a package management system of the client device used to determine dependencies between the software packages of the software system. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, where said substep (iii) is performed if the new software package includes one of at least part of an operating system kernel, a device driver, and at least part of a window system. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, where the client device is one of a personal computer, a personal digital assistant, a mobile phone, a cable television set top box, and a satellite television set top box. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. A computer system comprising a client device connectable to a server via a communication network for receiving software packages, said client device comprising: 
<claim-text>a persistent memory connected to said central processing unit, said persistent memory having two system partitions and at least one package partition, wherein runtime components of a software system of said client device are installed on said two system partitions, one of said two system partitions being designated as a current system partition and the other one of said two system partitions is designated as a backup system partition, and wherein all software packages installed in the computer system are saved on said at least one package partition; </claim-text>
<claim-text>a central processing unit connected to said persistent memory and using said current system partition for control; and </claim-text>
<claim-text>means for automatically rebooting said computer system using the backup partition in response to one of a startup failure, a runtime failure, and a user request to revert to a previous software version. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, wherein said client device further comprises means for allowing user selected ones of the software packages from the at least one package partition to be installed on one of the system partitions in response to one of a startup failure, a runtime failure, and a user request to revert to a previous software version. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, wherein said client device further comprises a package management system including information regarding the dependencies and version information for each of the software packages on the at least one package partition. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, wherein said client device comprises one of a personal computer, a personal digital assistant, and a mobile phone.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>3</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005037A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005037A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005037A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005037A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005037A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005037A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005037A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005037A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
