<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002663A1-20030102-D00000.TIF SYSTEM "US20030002663A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002663A1-20030102-D00001.TIF SYSTEM "US20030002663A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002663A1-20030102-D00002.TIF SYSTEM "US20030002663A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002663A1-20030102-D00003.TIF SYSTEM "US20030002663A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002663A1-20030102-D00004.TIF SYSTEM "US20030002663A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002663A1-20030102-D00005.TIF SYSTEM "US20030002663A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002663A1-20030102-D00006.TIF SYSTEM "US20030002663A1-20030102-D00006.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002663</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09893461</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04K001/06</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>380</class>
<subclass>037000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method and apparatus for data encryption</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Michael</given-name>
<middle-name>Thomas</middle-name>
<family-name>Kurdziel</family-name>
</name>
<residence>
<residence-us>
<city>Rochester</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>DUANE MORRIS LLP</name-1>
<name-2></name-2>
<address>
<address-1>1667 K STREET NW</address-1>
<address-2>SUITE 700</address-2>
<city>WASHINGTON</city>
<state>DC</state>
<postalcode>20006</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method and apparatus for use in encrypting and decrypting digital communications converting an initial block to final block based on freely selectable control information and secret key information having double the length of prior art keys and maintaining compatibility with the prior art encryption system. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The invention is directed to encrypting and decrypting blocks of digital data, and more specifically, to a cipher method and device for the block-by-block conversion of a first digital block into a second digital block using at least one freely selectable control block, using an improved block cipher with double the key length and significantly increased cryptographic strength while still providing a mode for inter-operability with prior art systems. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The rapidly growing use of digital communication systems in commerce has spurred the need for cryptographic systems which are secure against popular &ldquo;cryptoanalysis&rdquo; or cracking techniques at least for a sufficient length of time. Prior art systems such as Massey, et al. U.S. Pat. No. 5,214,703 use a block cipher device which is suitable both for the encryption of plain text blocks and for the decryption of ciphertext blocks. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The prior art system of Kurdziel, et al. U.S. Pat. No. 6,108,421, which is commonly owned and has inventors in common with the present application, is directed to a scaleable block cipher device which is customizable and not vulnerable to standard cryptoanalysis techniques. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> It is known to use multiple encryption to provide robust and enhanced security of the encrypted data. However, such multiple encryption schemes have disadvantages. Multiple encryption schemes require multiple iterations through a cryptographic system. In the case of duplicate hardware blocks, this doubles or triples the gate count and power consumption in hardware renderings. In cases where execution of a single block is repeated, the maximum speed that the cryptographic system can operate at will be reduced to one-half or one-third depending on the number of iterations required. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Additionally, multiple encryption schemes require that a cipher method not be a mathematical function known as a &ldquo;group&rdquo;. If a cipher method is a group, no security enhancement is obtained by using it in a multiple encryption scheme. The significance of this is that it is often impossible to conclusively prove a cryptographic system is not a group. Indeed, a cryptographic system that approximates the behavior of a group, to even a slight degree will suffer security vulnerabilities when used in a multiple encryption scheme. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Thus, there is a need for block cipher device which is scaleable and customizable and providing the all the enhanced cryptographic strengths of a multiple encryption scheme, but without the severe disadvantages associated with multiple encryption. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Accordingly, it is an object of the present invention to provide a novel scaleable block cipher device that is secure against available cryptanalysis or cracking techniques. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> It is another object of the present invention to provide a novel block cipher device which provides enhanced security while maintaining compatibility with the prior art cipher devices. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> It is still another object of the present invention to provide a novel block cipher device having double the cryptographic strength without a proportional increase in gate count of hardware renderings. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> These and many other objects and advantages of the present invention will be readily apparent to one skilled in the art to which the invention pertains from a perusal of the claims, the appended drawings, and the following detailed description of the preferred embodiments.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a high level block diagram of a block cipher device of the present invention. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a schematic diagram of the block cipher device shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a schematic diagram of a key scheduling unit for use with the block cipher shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates a communication system using an embodiment of the present invention in Block Cipher Feedback Mode (BCFM). </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates a communication system using an embodiment of the present invention in Minimum Error Propagation Mode (MEP). </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> illustrates a communication system using an embodiment of the present invention in Self-synchronizing Cipher Feedback Mode (SSCFB). </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> block cipher device <highlight><bold>100</bold></highlight> is non-recursive and may include an input unit (not shown), nine encryption stages <highlight><bold>1</bold></highlight>-<highlight><bold>8</bold></highlight> and <highlight><bold>12</bold></highlight>, an output unit (not shown), and a key scheduling unit <highlight><bold>9</bold></highlight>. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The input unit and output unit assemble and buffer input and output data to and from the block cipher device <highlight><bold>100</bold></highlight>. The structure of the input unit and output unit generally depends on an application (e.g., serial or parallel). The input unit and output unit are not unique to the block cipher device <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The block cipher device receives three input variables, X, Z<highlight><subscript>1</subscript></highlight>, and Z<highlight><subscript>9 </subscript></highlight>and produces an output variable, Y. X is the primary traffic input to the block cipher device <highlight><bold>100</bold></highlight> and Y is the primary traffic output. Z<highlight><subscript>1 </subscript></highlight>and Z<highlight><subscript>9 </subscript></highlight>may be externally applied variables. Z<highlight><subscript>9 </subscript></highlight>may be a secret &ldquo;Key&rdquo; variable which is input to the block cipher device <highlight><bold>100</bold></highlight> via a secure channel (e.g., a courier with sealed cover) prior to encryption or decryption. Z<highlight><subscript>1 </subscript></highlight>(or &ldquo;customer algorithm modification&rdquo; variable) and subunits of Z<highlight><subscript>1 </subscript></highlight>(i.e., Z<highlight><subscript>2</subscript></highlight>, Z<highlight><subscript>3</subscript></highlight>, Z<highlight><subscript>5 </subscript></highlight>and Z<highlight><subscript>6</subscript></highlight>) are operated on in the first, second, third, fourth and fifth units <highlight><bold>1</bold></highlight>, <highlight><bold>2</bold></highlight>, <highlight><bold>3</bold></highlight>, <highlight><bold>4</bold></highlight> and <highlight><bold>5</bold></highlight> of the block cipher device <highlight><bold>100</bold></highlight>. The output Y of the block cipher device <highlight><bold>100</bold></highlight> is a unique function of the primary traffic X, the Key variable Z<highlight><subscript>9 </subscript></highlight>and the variable Z<highlight><subscript>1</subscript></highlight>. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> With continued reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, each encryption stage has at least a 64-bit I/O space. Encryption stages <highlight><bold>1</bold></highlight>, <highlight><bold>5</bold></highlight>, <highlight><bold>6</bold></highlight> and <highlight><bold>8</bold></highlight> consist of modular arithmetic logic. Stages <highlight><bold>1</bold></highlight>, <highlight><bold>5</bold></highlight> and <highlight><bold>8</bold></highlight> perform modular additions and stage <highlight><bold>6</bold></highlight> performs a modular cubing operation. Each stage employs a different modulus. Stage <highlight><bold>7</bold></highlight> is a non-invertable &ldquo;Mid Transform&rdquo;. In addition, stages <highlight><bold>1</bold></highlight>, <highlight><bold>5</bold></highlight>, <highlight><bold>6</bold></highlight>, <highlight><bold>7</bold></highlight> and <highlight><bold>8</bold></highlight> can not be segmented into a set of lower level operations. These design features make the Block Cipher Device secure against popular &ldquo;Cryptanalysis&rdquo; or cracking techniques. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Stages <highlight><bold>2</bold></highlight> and <highlight><bold>4</bold></highlight> are &ldquo;nibble swapping&rdquo; blocks. These blocks allow the structure of the algorithm to be changed based on an externally applied input, Z<highlight><subscript>1</subscript></highlight>. Stage <highlight><bold>3</bold></highlight> is a customizable Substitution/Expansion block. This allows a custom operation with inputs W<highlight><subscript>2 </subscript></highlight>and Z<highlight><subscript>3 </subscript></highlight>and output W<highlight><subscript>3 </subscript></highlight>to be inserted into the Block Cipher Device structure. This allows unique algorithm variants to be implemented. The structure of block <highlight><bold>3</bold></highlight> is not arbitrary and must meet the requirements of secure cipher design. Custom Substitution/Expansion block designs are disclosed only to the intended end user. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> An input unit <highlight><bold>10</bold></highlight> assembles and buffers input data to the block cipher device <highlight><bold>100</bold></highlight> and the output unit <highlight><bold>11</bold></highlight> assembles and buffers output data from the block cipher device <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Encryption stage <highlight><bold>12</bold></highlight>, like stages <highlight><bold>1</bold></highlight>, <highlight><bold>5</bold></highlight> and <highlight><bold>8</bold></highlight>, performs a modular addition operation. Key scheduling unit <highlight><bold>9</bold></highlight> accepts an externally applied input variable, Z<highlight><subscript>9</subscript></highlight>, and deterministically generates three pseudo random bit patterns, Z<highlight><subscript>4</subscript></highlight>, Z<highlight><subscript>7</subscript></highlight>, and Z<highlight><subscript>8</subscript></highlight>. These patterns are used as operands for blocks <highlight><bold>12</bold></highlight>, <highlight><bold>5</bold></highlight> and <highlight><bold>8</bold></highlight> respectively. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> To facilitate the description, <cross-reference target="DRAWINGS">FIGS. 2, 3</cross-reference>, <highlight><bold>4</bold></highlight> and <highlight><bold>5</bold></highlight> illustrate 64 bit block implementations. 64 bit blocks are used only as an example. Generally, in 64 bit block implementations, each unit includes at least a 64 bit input/output space. A block cipher device of the present invention having any input or output size can be designed by appropriately scaling the size of block cipher device operations. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the first unit <highlight><bold>1</bold></highlight> performs a modulo <highlight><bold>2</bold></highlight> addition (Exclusive-Or) on primary traffic input X with variable Z<highlight><subscript>1 </subscript></highlight>resulting in first unit <highlight><bold>1</bold></highlight> output W<highlight><subscript>1</subscript></highlight>. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The second unit <highlight><bold>2</bold></highlight> performs a nibble swap operation. The second unit <highlight><bold>2</bold></highlight> segments W<highlight><subscript>1 </subscript></highlight>into 8 pairs of nibbles; each nibble holding 4 bits. The second unit <highlight><bold>2</bold></highlight> transposes each segment based on Z<highlight><subscript>2 </subscript></highlight>(e.g., bits <highlight><bold>0</bold></highlight>-<highlight><bold>7</bold></highlight> of Z<highlight><subscript>1</subscript></highlight>) resulting in second unit <highlight><bold>2</bold></highlight> output W<highlight><subscript>2</subscript></highlight>. For example, when the value of bit &ldquo;0&rdquo; in Z<highlight><subscript>2 </subscript></highlight>is equal to binary &ldquo;1&rdquo; then the order of the nibbles pair &ldquo;0&rdquo; will be transposed. Likewise, if bit &ldquo;0&rdquo; in Z<highlight><subscript>2 </subscript></highlight>is equal to binary &ldquo;0&rdquo; then the order is left unchanged. The order of each nibble pair will be determined by the value of the corresponding bit in Z<highlight><subscript>2</subscript></highlight>. The value of bit <highlight><bold>0</bold></highlight> controls the order of nibble pair <highlight><bold>0</bold></highlight>, the value of bit <highlight><bold>1</bold></highlight> the order of nibble pair <highlight><bold>1</bold></highlight> continuing through to bit <highlight><bold>7</bold></highlight> which controls the order of nibble pair <highlight><bold>7</bold></highlight>. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The third unit <highlight><bold>3</bold></highlight> is a custom unit providing a custom substitution and expansion operation. The custom operation with inputs W<highlight><subscript>2 </subscript></highlight>and Z<highlight><subscript>3 </subscript></highlight>and output W<highlight><subscript>3 </subscript></highlight>may be inserted into the block cipher device <highlight><bold>100</bold></highlight> in the form of a look-up table. Z<highlight><subscript>3 </subscript></highlight>may be bits <highlight><bold>24</bold></highlight> through <highlight><bold>31</bold></highlight> of Z<highlight><subscript>1</subscript></highlight>. Providing a custom unit allows unique system variants to be designed and provided while meeting the requirements of secure cipher design. For example, the customized substitution or expansion operation of a look-up table is only disclosed to intended end users. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The fourth unit <highlight><bold>4</bold></highlight> may be another nibble swap operation where W<highlight><subscript>8 </subscript></highlight>is segmented into 16 nibbles. Z<highlight><subscript>5 </subscript></highlight>(for example, bits <highlight><bold>24</bold></highlight> through <highlight><bold>31</bold></highlight> of Z<highlight><subscript>1</subscript></highlight>) controls the re-ordering of W<highlight><subscript>8 </subscript></highlight>in a slightly different manner than explained for the second unit <highlight><bold>2</bold></highlight>. For example, when the value of bit &ldquo;8&rdquo; in Z<highlight><subscript>5 </subscript></highlight>is equal to a binary &ldquo;0&rdquo; then the first nibble in the pair will be written to the first position in the high order segment of W<highlight><subscript>4 </subscript></highlight>and the second nibble will be written to the first position in the low order segment of W<highlight><subscript>4</subscript></highlight>. When the value of bit &ldquo;8&rdquo; in Z<highlight><subscript>5 </subscript></highlight>is equal to a binary &ldquo;1&rdquo; then the two nibbles will be transposed before being written to W<highlight><subscript>4</subscript></highlight>. As with the second unit <highlight><bold>2</bold></highlight>, the re-ordering of each nibble pair will be determined by a corresponding bit in Z<highlight><subscript>5</subscript></highlight>. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The fifth unit <highlight><bold>5</bold></highlight> performs a modulo addition operation. W<highlight><subscript>4 </subscript></highlight>and Z<highlight><subscript>7 </subscript></highlight>are operands of the fifth unit <highlight><bold>5</bold></highlight>. W<highlight><subscript>4 </subscript></highlight>is the output of the fourth unit <highlight><bold>4</bold></highlight> and Z<highlight><subscript>7 </subscript></highlight>is an output from the key scheduler unit <highlight><bold>9</bold></highlight>. The modulus q of the operation is determined using Z<highlight><subscript>6 </subscript></highlight>by the following relation:</paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>q&equals;</italic></highlight>2<highlight><superscript>128</superscript></highlight><highlight><italic>&minus;Z</italic></highlight><highlight><subscript>6</subscript></highlight>&emsp;&emsp;(1)</in-line-formula></paragraph>
<paragraph id="P-0030" lvl="7"><number>&lsqb;0030&rsqb;</number> Z<highlight><subscript>6 </subscript></highlight>may be bits <highlight><bold>33</bold></highlight> through <highlight><bold>64</bold></highlight> of Z<highlight><subscript>1</subscript></highlight>. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The sixth unit <highlight><bold>6</bold></highlight> performs a modular cubing operation. In other words, W<highlight><subscript>5 </subscript></highlight>is raised to the third power modulo p and the result is designated as W<highlight><subscript>6</subscript></highlight>. The modulus p is determined by the following relation:</paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>p&equals;</italic></highlight>2<highlight><superscript>125</superscript></highlight><highlight><italic>&minus;X</italic></highlight>&emsp;&emsp;(2)</in-line-formula></paragraph>
<paragraph id="P-0032" lvl="7"><number>&lsqb;0032&rsqb;</number> The variable X is chosen such that the greatest common denominator between the order of the operation &ldquo;3&rdquo; and (p&minus;1) is equal to 1. This is captures in the following equation:</paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>GCD</italic></highlight>(3, <highlight><italic>p&minus;</italic></highlight>1)&equals;1&emsp;&emsp;(3)</in-line-formula></paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The seventh unit <highlight><bold>7</bold></highlight> performs a non-invertible operation such as an operation known as a mid transform. The input to the operation, W<highlight><subscript>6</subscript></highlight>, is 128 bits in length and the output of the operation, W<highlight><subscript>7</subscript></highlight>, is 64 bits in length. The mid transform simply maps bits 64 bits of the input to a 64 bit output. For example, the mid transform may map bits <highlight><bold>30</bold></highlight> through <highlight><bold>93</bold></highlight> of W<highlight><subscript>6 </subscript></highlight>to bits <highlight><bold>0</bold></highlight> through <highlight><bold>63</bold></highlight> of W<highlight><subscript>7</subscript></highlight>. The rest of the bits in W<highlight><subscript>6 </subscript></highlight>are discarded. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The eighth unit <highlight><bold>8</bold></highlight> performs another modulo addition operation. W<highlight><subscript>7 </subscript></highlight>and Z<highlight><subscript>8 </subscript></highlight>are operands of this unit. W<highlight><subscript>7 </subscript></highlight>is an output from the seventh unit <highlight><bold>7</bold></highlight> and Z<highlight><subscript>8 </subscript></highlight>is an output from the Key Scheduler <highlight><bold>9</bold></highlight>. The modulus of the operation is chosen as 2<highlight><superscript>64</superscript></highlight>. The output of this stage is the output of the block cipher device and is designated as Y<highlight><subscript>1</subscript></highlight>. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Although specific values are specified for moduli of the first, fifth, sixth, and eighth units <highlight><bold>1</bold></highlight>, <highlight><bold>5</bold></highlight>, <highlight><bold>6</bold></highlight>, and <highlight><bold>8</bold></highlight>, the objective of the block cipher device will be satisfied by a range of choices. It is required, however, that the constraint of equ. 3 be satisfied and that a unique modulus be used in each stage. The &ldquo;modulo&rdquo; units <highlight><bold>1</bold></highlight>, <highlight><bold>5</bold></highlight>, <highlight><bold>6</bold></highlight>, and <highlight><bold>8</bold></highlight> along with &ldquo;non-invertible&rdquo; unit <highlight><bold>7</bold></highlight> are not segmentable into a set of lower level operations. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, The key scheduler unit <highlight><bold>9</bold></highlight> comprises a first function unit <highlight><bold>13</bold></highlight>, a second function unit <highlight><bold>16</bold></highlight>, a third function unit <highlight><bold>15</bold></highlight>, a fourth function unit <highlight><bold>18</bold></highlight>, a fifth function unit <highlight><bold>22</bold></highlight>, a first shift register <highlight><bold>14</bold></highlight>, a second shift register <highlight><bold>17</bold></highlight>, a first mod <highlight><bold>2</bold></highlight> add logic gate <highlight><bold>19</bold></highlight>, a second mod <highlight><bold>2</bold></highlight> add logic gate <highlight><bold>20</bold></highlight>, and a third mod <highlight><bold>2</bold></highlight> add logic gate. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> The key scheduling unit <highlight><bold>9</bold></highlight> processes key variable Z<highlight><subscript>9 </subscript></highlight>to produce variables Z<highlight><subscript>4</subscript></highlight>, Z<highlight><subscript>7</subscript></highlight>, and Z<highlight><subscript>8</subscript></highlight>. These variables are used during encryption and decryption. Z<highlight><subscript>10 </subscript></highlight>and Z<highlight><subscript>11</subscript></highlight>, are deterministic functions, h, of the higher and lower halves of key variable Z<highlight><subscript>9</subscript></highlight>. Z<highlight><subscript>10 </subscript></highlight>and Z<highlight><subscript>11 </subscript></highlight>are the outputs of the third function unit <highlight><bold>15</bold></highlight> and fourth function unit <highlight><bold>18</bold></highlight>, respectively, and are input to shift register <highlight><bold>14</bold></highlight> and shift register <highlight><bold>17</bold></highlight>, respectively. Each of these registers is shifted to the right one bit at a time until its contents have been completely recirculated. With each shift, the least significant bit in each register is mod <highlight><bold>2</bold></highlight> added to the output of its associated function unit, the first function unit <highlight><bold>13</bold></highlight> or the second function unit <highlight><bold>16</bold></highlight>. The result is moved into the most significant bit position of each register. When the contents of the first shift register <highlight><bold>14</bold></highlight> and the second shift register <highlight><bold>17</bold></highlight> have been completely processed, it is output as variables Z<highlight><subscript>7 </subscript></highlight>and Z<highlight><subscript>13</subscript></highlight>, respectively. Z<highlight><subscript>7 </subscript></highlight>becomes one of three pseudo random outputs of the key scheduling unit <highlight><bold>9</bold></highlight>. Z<highlight><subscript>13 </subscript></highlight>is modulo <highlight><bold>2</bold></highlight> added to Z<highlight><subscript>7 </subscript></highlight>to produce pseudo random output Z<highlight><subscript>4</subscript></highlight>. In addition, Z<highlight><subscript>13 </subscript></highlight>is input to fifth function unit <highlight><bold>22</bold></highlight> to produce variable pseudo random output Z<highlight><subscript>8</subscript></highlight>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The first function unit <highlight><bold>13</bold></highlight> and the second function unit <highlight><bold>16</bold></highlight> are custom lookup tables. They map at least 6 one bit inputs to a single one bit output. Each of the inputs to the first function unit <highlight><bold>13</bold></highlight> and the second function unit <highlight><bold>16</bold></highlight> is a &ldquo;tap&rdquo; connected to an individual bit position in the first shift register <highlight><bold>14</bold></highlight> and the second shift register <highlight><bold>17</bold></highlight>, respectively. The tap locations can be arbitrarily chosen with the following constraint. No tap can be connected to either the least significant or to the most significant bit positions on shift register <highlight><bold>14</bold></highlight> and shift register <highlight><bold>17</bold></highlight>. The structure of the first function unit <highlight><bold>13</bold></highlight> and the second function unit <highlight><bold>16</bold></highlight> are not arbitrary and must meet the requirements of secure cipher design. Note that the first function unit <highlight><bold>13</bold></highlight> and the second function unit <highlight><bold>16</bold></highlight> can be independently specified. However, as described below, the first function unit <highlight><bold>13</bold></highlight> must be set equal to the second function if the block cipher <highlight><bold>100</bold></highlight> is to operate in a mode compatible with the prior art block cipher described in U.S. Pat. No. 6,108,421. The first function unit <highlight><bold>13</bold></highlight> and the second function unit <highlight><bold>16</bold></highlight> may be customized and disclosed only to the intended end user. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The fifth function unit <highlight><bold>22</bold></highlight> performs a bit-wise mod <highlight><bold>2</bold></highlight> add without carry of the higher and lower order halves of Z<highlight><subscript>13 </subscript></highlight>to produce Z<highlight><subscript>8</subscript></highlight>. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> The third function unit <highlight><bold>15</bold></highlight> and the fourth function unit <highlight><bold>18</bold></highlight> perform a bit-wise mod <highlight><bold>2</bold></highlight> add without carry of each of each half of key variable Z<highlight><subscript>9 </subscript></highlight>and a custom bit pattern of equal length, producing variables Z<highlight><subscript>10 </subscript></highlight>and Z<highlight><subscript>11</subscript></highlight>. Note that a third function unit <highlight><bold>15</bold></highlight> and the fourth function unit <highlight><bold>18</bold></highlight> can be independently specified. However, as described below the third function unit <highlight><bold>15</bold></highlight> must be set equal to the fourth function unit <highlight><bold>18</bold></highlight>, if the block cipher <highlight><bold>100</bold></highlight> is to operate in a mode compatible with the prior art block cipher described in U.S. Pat. No. 6,108,421. The value of the custom bit pattern is disclosed only to the intended end user. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the ninth unit <highlight><bold>12</bold></highlight> is a modulo addition stage. It adds the output W<highlight><subscript>3 </subscript></highlight>of the third unit to Z<highlight><subscript>4 </subscript></highlight>from the key scheduling unit <highlight><bold>9</bold></highlight> to produce output W<highlight><subscript>8</subscript></highlight>. Outputs Z<highlight><subscript>7 </subscript></highlight>and Z<highlight><subscript>8 </subscript></highlight>are used as inputs to the fifth unit <highlight><bold>5</bold></highlight> and the eighth unit <highlight><bold>8</bold></highlight>, respectively. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> A significant feature of the key scheduling unit <highlight><bold>9</bold></highlight> is that it uses a key variable, Z<highlight><subscript>9</subscript></highlight>, which is twice the length of the key variable of the prior art system of U.S. Pat. No. 6,108,421 and therefore offers significantly increased cryptographic strength. In addition, when a symmetric key variable (i.e. upper half and lower half are equal) is input, then Z<highlight><subscript>4 </subscript></highlight>will evaluate to zero. This negates any effect of encryption block <highlight><bold>12</bold></highlight>. In fact, when a symmetric key variable is input, all operations will evaluate such that the block cipher device <highlight><bold>9</bold></highlight> will produce the same output for a given input as the prior art block cipher of U.S. Pat. No. 6,108,421. Significant, equipment can be designed to use the present embodiment of block cipher <highlight><bold>100</bold></highlight> with double the key length having significantly increased cryptographic strength while still providing a mode for inter-operating with equipment using prior art block ciphers. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> When required, the value of the original key variable Z<highlight><subscript>9 </subscript></highlight>can be recovered. Variables Z<highlight><subscript>7 </subscript></highlight>and Z<highlight><subscript>13 </subscript></highlight>are reloaded into the first shift register <highlight><bold>14</bold></highlight> and the second shift register <highlight><bold>17</bold></highlight>, respectively. Each register is shifted to the left one bit at a time until its contents have been completely re-circulated. With each shift, the most significant bit in each register is mod <highlight><bold>2</bold></highlight> added to the outputs of the first function unit <highlight><bold>13</bold></highlight> and the second function unit <highlight><bold>16</bold></highlight>. The result is moved into the least significant bit position. When the contents of the first shift register <highlight><bold>14</bold></highlight> and the second shift register <highlight><bold>17</bold></highlight> have been completely processed, each is input to the third function unit <highlight><bold>15</bold></highlight> and the fourth function unit <highlight><bold>18</bold></highlight>, respectively. In the third function unit <highlight><bold>15</bold></highlight> and the fourth function unit <highlight><bold>18</bold></highlight>, the same custom bit pattern is bit-wise mod <highlight><bold>2</bold></highlight> added to reproduce the upper and lower halves of Z<highlight><subscript>9</subscript></highlight>. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> This permits an original encryption key to be recovered for other cryptographic operations, for example key wrapping (key encryption). Alternately, a copy of the original key may be kept in an auxiliary register. However, this would require a 256 bit auxiliary storage register which would add to the gate count of a hardware rendering. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The block cipher device may be operated in various modes such as a self-synchronizing cipher feedback mode (SSCFB), a minimum error propagation (or counter) mode (MEP), or a block cipher feedback mode (BCFB). </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> With reference now to <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrating a BCFB mode, a block of unencrypted data or &ldquo;Plain Text&rdquo; (PT) is applied to the input of the encrypter <highlight><bold>500</bold></highlight> labeled PT<highlight><subscript>E</subscript></highlight>. PT<highlight><subscript>E </subscript></highlight>is then modulo <highlight><bold>2</bold></highlight> added to a block of &ldquo;Key Stream&rdquo; KS. KS represents the output of the block cipher device <highlight><bold>100</bold></highlight>-<highlight><bold>1</bold></highlight>. CT represents the resulting block (i.e., cipher text). CT is output at the port labeled CT<highlight><subscript>E </subscript></highlight>and is then transmitted over a channel <highlight><bold>200</bold></highlight>. In the next iteration, CT is fed back as input to the block cipher device <highlight><bold>100</bold></highlight>-<highlight><bold>1</bold></highlight>. The block cipher device processes the fed back block to produce a new block of KS. KS is then combined with the next block of PT and the encryption process continues. At the decrypter <highlight><bold>600</bold></highlight>, received CT is represented by CT<highlight><subscript>D</subscript></highlight>. CT<highlight><subscript>D </subscript></highlight>is combined with a block of KS to produce as output a block of recovered plain text PT<highlight><subscript>D</subscript></highlight>. The CT<highlight><subscript>D </subscript></highlight>block is simultaneously applied to the input of the block cipher device <highlight><bold>100</bold></highlight>-<highlight><bold>2</bold></highlight>. The block cipher device <highlight><bold>100</bold></highlight>-<highlight><bold>2</bold></highlight> uses the CT<highlight><subscript>D </subscript></highlight>block as input to produce another block of KS. This KS block is used to process the next block of CT<highlight><subscript>D</subscript></highlight>. This mode is intended for relatively error free communication channels. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> With reference now to <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrating a MEP mode, unencrypted data or &ldquo;Plain Text&rdquo; PT is applied to the input of the encrypter <highlight><bold>500</bold></highlight> labeled PT<highlight><subscript>E</subscript></highlight>. PT<highlight><subscript>E </subscript></highlight>is then modulo <highlight><bold>2</bold></highlight> added to a block of KS to produce a block of cipher text. CT is output at a port labeled CT<highlight><subscript>E </subscript></highlight>and is then transmitted over the channel <highlight><bold>200</bold></highlight>. For a next iteration, encrypter counter <highlight><bold>300</bold></highlight>-<highlight><bold>1</bold></highlight> is incremented and the output of the counter <highlight><bold>300</bold></highlight>-<highlight><bold>1</bold></highlight> is input to the block cipher device <highlight><bold>100</bold></highlight>-<highlight><bold>1</bold></highlight>. The block cipher device <highlight><bold>100</bold></highlight>-<highlight><bold>1</bold></highlight> processes to produce a new block of KS. The new block of KS is then combined with the next block of PT and the encryption process continues. At the decrypter <highlight><bold>600</bold></highlight>, received CT is represented by CT<highlight><subscript>D</subscript></highlight>. CT<highlight><subscript>D </subscript></highlight>is combined with a block of KS to produce as output a block of recovered plain text PT<highlight><subscript>D </subscript></highlight>and decrypter counter <highlight><bold>300</bold></highlight>-<highlight><bold>2</bold></highlight> is incremented. The block cipher device <highlight><bold>100</bold></highlight>-<highlight><bold>2</bold></highlight> uses the output of the counter to produce another block of KS. This KS block is used to process the next block of CT<highlight><subscript>D</subscript></highlight>. This mode is intended for noisy or error prone communication channels. A toggled bit error on the channel will likely result in only a one bit error on PT<highlight><subscript>D</subscript></highlight>. In other words, in this mode the cryptographic system will likely have only one bit of error extension. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> With reference now to <cross-reference target="DRAWINGS">FIG. 6</cross-reference> illustrating a SSCFB mode, unencrypted data or &ldquo;Plain Text&rdquo; (PT) is applied one bit at time to the input labeled PT<highlight><subscript>E</subscript></highlight>. Each PT<highlight><subscript>E </subscript></highlight>bit is modulo <highlight><bold>2</bold></highlight> added to a bit of KS to produce a bit of cipher text CT. Encryption continues until another iteration is initiated. Another iteration may begin when either the entire block of KS is consumed or when the pattern detector <highlight><bold>400</bold></highlight>-<highlight><bold>1</bold></highlight> is triggered. The pattern detector <highlight><bold>400</bold></highlight>-<highlight><bold>1</bold></highlight> continually monitors CT for a specific bit sequence and when the sequence is detected a new iteration is triggered. Because CT appears statistically random, this mechanism will initiate a new iteration at pseudo-random intervals. When a new iteration is initiated, all remaining KS is purged from the key buffer <highlight><bold>401</bold></highlight>-<highlight><bold>1</bold></highlight> and the most recent bit block of CT, CT<highlight><subscript>E</subscript></highlight>, is input to the block cipher device <highlight><bold>100</bold></highlight>-<highlight><bold>1</bold></highlight>. The block cipher device <highlight><bold>100</bold></highlight>-<highlight><bold>1</bold></highlight> uses the most recent block as input to produce another block of KS. The new block of KS is stored in the key buffer <highlight><bold>401</bold></highlight>-<highlight><bold>1</bold></highlight> and is used to continue the encryption process. At the decrypter <highlight><bold>600</bold></highlight>, the received CT is applied one bit at time to input labeled CT<highlight><subscript>D</subscript></highlight>. Each CT<highlight><subscript>D </subscript></highlight>bit is modulo <highlight><bold>2</bold></highlight> added with a bit of KS to produce a bit of recovered &ldquo;Plain Text&rdquo; as output PT<highlight><subscript>D</subscript></highlight>. The CT bit stream is simultaneously applied to the input buffer <highlight><bold>402</bold></highlight>-<highlight><bold>2</bold></highlight> (CB<highlight><bold>1</bold></highlight>) of the block cipher device <highlight><bold>100</bold></highlight>-<highlight><bold>2</bold></highlight>. When either the input buffer <highlight><bold>402</bold></highlight>-<highlight><bold>2</bold></highlight> becomes full or the pattern detector <highlight><bold>400</bold></highlight>-<highlight><bold>1</bold></highlight> triggers, the following will occur: </paragraph>
<paragraph id="P-0049" lvl="2"><number>&lsqb;0049&rsqb;</number> 1) the key buffer <highlight><bold>401</bold></highlight>-<highlight><bold>2</bold></highlight> is purged; </paragraph>
<paragraph id="P-0050" lvl="2"><number>&lsqb;0050&rsqb;</number> 2) the most recent block of CT, CT<highlight><subscript>E</subscript></highlight>, is input to the block cipher device <highlight><bold>100</bold></highlight>-<highlight><bold>2</bold></highlight>; </paragraph>
<paragraph id="P-0051" lvl="2"><number>&lsqb;0051&rsqb;</number> 3) the block cipher device uses the most recent block of CT to produce a new block of KS; and </paragraph>
<paragraph id="P-0052" lvl="2"><number>&lsqb;0052&rsqb;</number> 4) the new block of KS is stored in the key buffer <highlight><bold>401</bold></highlight>-<highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0053" lvl="7"><number>&lsqb;0053&rsqb;</number> The block cipher device <highlight><bold>100</bold></highlight>-<highlight><bold>2</bold></highlight> continues processing and CT<highlight><subscript>D </subscript></highlight>continues to be shifted into input buffer <highlight><bold>402</bold></highlight>-<highlight><bold>2</bold></highlight> until another iteration is initiated. This mode is intended for communication channels that are subject to synchronization errors. In this mode, a communication system will be able to automatically recover from loss cryptographic and block boundary synchronization. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> To operate in any of the modes shown in FIGS. <highlight><bold>3</bold></highlight>-<highlight><bold>63</bold></highlight>, the encrypter <highlight><bold>500</bold></highlight> and the decrypter <highlight><bold>600</bold></highlight> must first be initialized such that their internal states are all identical. Initialization may be obtained using an initialization vector &ldquo;IV&rdquo; which is generated on the encrypter side and is used to initialize all internal states of the encrypter. The IV is then transmitted over the channel <highlight><bold>200</bold></highlight> to the decrypter <highlight><bold>600</bold></highlight>. Using the IV, all internal states of the decrypter <highlight><bold>600</bold></highlight> are initialized to the same values. </paragraph>
</section>
<section>
<heading lvl="1">Advantages and Scope of the Invention </heading>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> The method of the present invention offers the many advantages including twice the cryptographic strength without a proportional increase in the gate count of hardware renderings. This is extremely significant in that operational parameters, such as heat dissipation and power consumption increase proportionally with gate count. Other parameters such as data rate and production yield will generally be inversely proportional to gate count. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> The method is also more robust cryptographically. It does not suffer from the strength vulnerabilities associated with other approaches, most notably, multiple encryption schemes. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> Moreover, the method of the present invention provides the above mentioned and other advantages while maintaining backward interoperability with less robust systems of the prior art such as disclosed in U.S. Pat. No. 6,108,421, referenced above. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> While preferred embodiments of the present invention have been described in the foregoing, it is to be understood that the embodiments described are illustrative only and the scope of the invention is to be defined solely by the appended claims when accorded a full range of equivalence, many variations and modifications naturally occurring to those of skill in the art from a perusal hereof. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A plural block cipher device cryptographically secured digital communication system comprising: 
<claim-text>at least one block cipher device responsive to a first fixed length selectively variable key to encrypt and decrypt a digital signal; </claim-text>
<claim-text>at least one block cipher device responsive to a second fixed length selectively variable key different from the first fixed length selectively variable key to encrypt and decrypt a digital signal; and </claim-text>
<claim-text>means for selectively adapting said first block cipher device to decrypt data encrypted by said second block cipher device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The communication system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the length of said first key is twice the length of said second key. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The communications system of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein said means for adapting includes means for duplicating and repeating said second key as said first key. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. In a plural block cipher device cryptographically secured digital communication system having at least one block cipher device responsive to a first fixed length selectively variable key to encrypt and decrypt a digital signal, and at least one block cipher device responsive to a second fixed length selectively variable key different from the first fixed length selectively variable key to encrypt and decrypt a digital signal, the method of adapting a block cipher device having the second key for operation with a block cipher device having the second key comprising the step of effectively inhibiting the operation of the most downstream of the modulo operators in the block cipher device having the first key. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference> wherein the effective inhibiting is accomplished by the step of modifying the key of the first block cipher device to conform to two sequential iterations of the key of the second block cipher device. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. In a cryptographically secured digital communication system, a method of selectively adapting a block cipher device having a having at least one block cipher device responsive to a first fixed length selectively variable key to encrypt and decrypt a digital signal for operation with a block cipher device responsive to a second selectively variable fixed length one half the length of the first key to encrypt and decrypt the digital signal comprising the steps of: 
<claim-text>(a) providing a first key generator in two equal sections each a functional replica of the second key generator; </claim-text>
<claim-text>(b) replicating the second key in both of sections of the first key; </claim-text>
<claim-text>(c) using the symbols provided by one of the two sections to encode and decode the signal in a first stage; and </claim-text>
<claim-text>(d) combining the symbols provided by the two sections of the first key generator to cancel the symbols applied to a second stage. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A block cipher device for encrypting and decrypting information in a cryptographically secured digital communication system comprising: 
<claim-text>a key scheduler unit responsive to a key data block comprising: 
<claim-text>a first function unit responsive to a first portion of the key data block for producing a first key data sub-block; </claim-text>
<claim-text>a second function unit responsive to a second portion of the key data block for producing a second key data sub-block; and </claim-text>
</claim-text>
<claim-text>an encryption stage responsive to the first and second key data sub-blocks where the encryption stage will not encrypt data if the first portion of the key data block is equal to the second portion of the key data block, and the first function unit is equal to the second functional unit. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. In a block cipher device use in encrypting and decrypting information in a cryptographically secured digital communication system having plural encryption stages responsive to an input data block, a control data block, a key data sub-block, and a key scheduler for randomizing the key data sub-block, the improvement wherein the key scheduler comprises 
<claim-text>a first shift register; </claim-text>
<claim-text>a first means for randomizing a portion of the key data block responsive to said first shift register; </claim-text>
<claim-text>a first modulo two summing combiner for serially combining the serial output from the first shift register and the serial output from said first randomizing means to provide a first combined data output; </claim-text>
<claim-text>a first key data sub-block derived from the contents of said first shift register; </claim-text>
<claim-text>a second shift register; </claim-text>
<claim-text>a second means for randomizing a portion of the key data block responsive to said second shift register; </claim-text>
<claim-text>a first modulo two summing combiner for serially combining the serial output from the first shift register and the serial output from said first randomizing means to provide a second combined data output; </claim-text>
<claim-text>a second key data sub-block derived from the contents of the second shift register; </claim-text>
<claim-text>a third modulo two summing combiner for combining said first key data sub-block and said second key data sub-block to produce a third key data sub-block; </claim-text>
<claim-text>a first function unit responsive to the second key data sub-block for providing a fourth key data sub-block; and </claim-text>
<claim-text>circuit means for providing said first, third and fourth key data sub-blocks to different ones of said plural encryption stages. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The block cipher device of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> wherein both said first and second randomizing means includes a selectively customized look-up table. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The block cipher device of claim <highlight><bold>11</bold></highlight> wherein the customized look-up table of said first and second means for randomizing are identical</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002663A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002663A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002663A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002663A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002663A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002663A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002663A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
