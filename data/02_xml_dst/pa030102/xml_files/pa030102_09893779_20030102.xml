<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005222A1-20030102-D00000.TIF SYSTEM "US20030005222A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005222A1-20030102-D00001.TIF SYSTEM "US20030005222A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005222A1-20030102-D00002.TIF SYSTEM "US20030005222A1-20030102-D00002.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005222</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09893779</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010627</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F013/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>711</class>
<subclass>118000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>On-die cache memory with repeaters</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Kenneth</given-name>
<middle-name>R.</middle-name>
<family-name>Smits</family-name>
</name>
<residence>
<residence-us>
<city>San Ramon</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Bharat</given-name>
<family-name>Bhushan</family-name>
</name>
<residence>
<residence-us>
<city>Cupertino</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>Intel Corporation</organization-name>
<address>
<city>Santa Clara</city>
<state>CA</state>
</address>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>Bradley J. Bereznak</name-1>
<name-2>Blakely, Sokoloff, Taylor &amp; Zafman LLP</name-2>
<address>
<address-1>Seventh Floor</address-1>
<address-2>12400 Wilshire Boulevard</address-2>
<city>Los Angeles</city>
<state>CA</state>
<postalcode>90025-1030</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A cache memory organized into banks of subarrays includes repeaters for connecting to the data provided by the subarrays to a global data bus. The repeaters comprise a logic gate providing either a NAND or NOR function coupled in series with an inverter. The logic gate has a first input connected to receive a first logic value of a bus line, and a second input coupled to receive data output from a subarray. The inverter drives the first logic value onto the bus line when the cache bank subarray is inactive, and drives the data value from the subarray onto the bus line when the cache bank subarray is activate. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is related to Ser. No.______ filed ______, entitled &ldquo;CACHE ARCHITECTURE WITH REDUNDANT SUB ARRAY&rdquo; and Ser. No. ______filed ______, entitled &ldquo;CACHE ARCHITECTURE FOR PIPELINED OPERATION WITH ON-DIE PROCESSOR, both of which are assigned to the assignee of the present application.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates generally to the field of very large scale integrated circuits fabricated on a single semiconductor die or chip. More particularly, the invention relates to the field of high-performance cache memories. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Cache memories have been used to maximize processor performance, while maintaining reasonable system costs, for many years. A cache memory is a very fast buffer comprising an array of local storage cells that is used by a processor to hold frequently requested copies of data. A typical cache memory system comprises a hierarchy of memory structures, which usually includes a local (L<highlight><bold>1</bold></highlight>), on-chip cache that represents the first level in the hierarchy. A secondary (L<highlight><bold>2</bold></highlight>) cache is often associated with the processor for providing an intermediate level of cache memory between the processor and main memory. Main memory, also commonly referred to as system or bulk memory, lies at the bottom (i.e., slowest, largest) level of the memory hierarchy. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> In a conventional computer system, a processor is coupled to a system bus that provides access to main memory. An additional backside bus may be utilized to couple the processor to a L<highlight><bold>2</bold></highlight> cache memory. Other system architectures may couple the L<highlight><bold>2</bold></highlight> cache memory to the system bus via its own dedicated bus. Most often, L<highlight><bold>2</bold></highlight> cache memory comprises a static random access memory (SRAM) that includes a data array, a cache directory, and cache management logic. The cache directory usually includes a tag array, tag status bits, and least recently used (LRU) bits. (Each directory entry is called a &ldquo;tag&rdquo;.) The tag RAM contains the main memory addresses of code and data stored in the data cache RAM plus additional status bits used by the cache management logic. By way of background, U.S. Pat. No. 6,115,795 discloses a computer system comprising a processor that includes second level cache controller logic for use in conjunction with an external second level cache memory. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Recent advances in semiconductor processing technology have made possible the fabrication of large L<highlight><bold>2</bold></highlight> cache memories on the same die as the processor core. As device and circuit features continue to shrink as the technology improves, researchers have begun proposing designs that integrate a very large (e.g., multiple megabytes) third level (L<highlight><bold>3</bold></highlight>) cache memory on the same die as the processor core for improved data processing performance. While such a high level of integration is desirable from the standpoint of achieving high-speed performance, there are still difficulties that must be overcome. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Large on-die cache memories are typically subdivided into multiple cache memory banks, which are then coupled to a wide (e.g., 32 bytes, 256 bits wide) data bus. For example, U.S. Pat. Nos. 5,752,260 and 5,818,785 teach interleaved cache memory devices having a plurality of banks consisting of memory cell subarrays. In a very large cache memory comprising multiple banks, one problem that arises is the large RC signal delay associated with the long bus lines when driven at a high clock rate. Thus, there is a need for some sort of repeater device to connect each bank of cache memory to the data bus without loss of signal integrity. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> One traditional method for sharing a bus is to have each circuit utilize a tri-state driver in order to connect to the bus. Tri-state driver devices are well known in the prior art. A conventional tri-state driver comprises two transistor devices coupled in series to pull the output to either a high or low logic level. The third output state is a high impedance (i.e., inactive) state. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> When a tri-state driver is utilized to connect to a bus, the two series-connected output devices of the driver need to be large so as to provide adequate drive strength to the long bus wire. This requirement, however, makes it difficult to use tri-state drivers as repeaters in a multi-megabyte on-die cache memory because the large source/drain diode of the output devices adds considerable load to the bus. The additional load attributable to the tri-state drivers increases bus power and causes significant RC signal delay. Another drawback of using tri-state drivers as repeaters is the need for decoding circuitry for the drivers. This decoding circuitry is in addition to the decoding circuitry already required for the cache memory banks. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Therefore, what is needed is repeater circuit for a very large on-die cache memory which overcomes the problems and drawbacks associated with the use of conventional tri-state bus drivers. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The present invention will be understood more fully from the detailed description which follows and from the accompanying drawings, which however, should not be taken to limit the invention to the specific embodiments shown, but are for explanation and understanding only, </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a logic diagram of a repeater circuit in accordance with one embodiment of the present invention. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a circuit schematic diagram of a cache memory with repeaters according to one embodiment of the present invention. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a logic diagram of a repeater circuit in accordance with another embodiment of the present invention </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> A repeater for use with an on-die cache memory is described. In the following description, numerous details are set forth, such as specific circuit configurations, logic device types, numerical values, etc., in order to provide a thorough understanding of the invention. It will be clear, however, to one skilled in the art, that these specific details may not be needed to practice the present invention. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> In typical cache memory storage arrays that are organized into banks, when one bank is active, it drives a data bus. All of the bit signal lines of the data bus are usually collected at some central location on the die, from there the information is transmitted to the processor core. Because of the high frequencies that signals are driven at, and the smaller metal traces that are printed on the die using modern processing techniques, it is a need to repeat or rejuvenate the signal every so often. For example, in state-of-the-art semiconductor processing technology a transmitted signal needs to be repeated every 1500 microns or so of metal trace. Without some means of rejuvenating or repeating the signal, the RC delay associated with a long bus line operating at high frequency would result in loss of data. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> According to the present invention, each bit of the cache memory bank is connected to a repeater that comprises logic which overcomes the drawbacks associated with the conventional use of tri-state buffers. In one embodiment, the invention comprises a single logic gate that drives an inverter. If a bank in the memory is unselected, its output is precharged so that it does not drive the bus. In this manner, when the bank connected to the logic gate is selected, the data stored in the cache array is transmitted through the combinatorial logic structure. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, there is shown one embodiment of the present invention in which repeater <highlight><bold>10</bold></highlight> is connected in series with data bus <highlight><bold>13</bold></highlight>. In this embodiment, repeater <highlight><bold>10</bold></highlight> comprises a 2-input NAND gate <highlight><bold>11</bold></highlight> having an output connected to the input of an inverter <highlight><bold>12</bold></highlight>. One of the inputs of gate <highlight><bold>11</bold></highlight> is coupled to data bus <highlight><bold>13</bold></highlight>, and the other input is coupled to receive data output from the subarray of an associated cache bank (in this example bank B<highlight><subscript>0</subscript></highlight>). The output of inverter <highlight><bold>12</bold></highlight> drives data bus <highlight><bold>13</bold></highlight>, which, in this example, is shown connected to another repeater comprising NAND gate <highlight><bold>14</bold></highlight> and inverter <highlight><bold>15</bold></highlight>, both associated with a corresponding subarray of bank B<highlight><subscript>1</subscript></highlight>. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The use of the repeater structure shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> implies certain conventions be adopted in the cache memory architecture. One convention is that if the cache bank is unselected (i.e., inactive), the data output from the cache bank is held precharged (high). In the example of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the precharged state is a logical high potential (&equals;1). A logical high potential at one input of NAND gate <highlight><bold>11</bold></highlight> means that repeater <highlight><bold>10</bold></highlight> will allow whatever signal is present on data bus <highlight><bold>13</bold></highlight> to pass through the repeater structure unaltered. That is, data driven from any other cache bank in the memory is unaffected by an inactive cache bank. In this way, repeaters may be concatenated together along a data bus line, with individual repeaters being associated with corresponding subarrays of each bank of cache memory storage. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> Practitioners familiar with the data storage arts will also appreciate that the repeater structure of the present invention obviates the need for additional enable logic or enable pulses. This is made possible, in part, by the convention of precharging the output of the cache bank when the bank is inactive, and also by the convention of assigning a default logic value to the data bus itself. Note that in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, data bus line <highlight><bold>13</bold></highlight> is initially coupled to a logical high potential (e.g., V<highlight><subscript>CC</subscript></highlight>). In other words, the first segment of data bus <highlight><bold>13</bold></highlight> that is provided as one of the inputs to NAND gate <highlight><bold>11</bold></highlight> of the first cache bank (B<highlight><subscript>0</subscript></highlight>) is driven by the positive supply potential of the integrated circuit. Thus, a logical high potential is the default value assigned to the data bus in the cache memory architecture of the embodiment of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> All together, the combinatorial logic gate structure of repeater <highlight><bold>10</bold></highlight> and the conventions of precharging the cache data output and assigning a default logic potential to the bus lines allows data to simply flow from cache bank to processor core, without concern about set-up and hold times. For instance, in the case where the data output from an active cache bank is a logical 1, it is already valid by the existing bus line state. The state of data bus line <highlight><bold>13</bold></highlight> only changes if the data value output from a given cache bank is a logical 0, in which case there is a propagation delay through all of the repeaters associated with each of the banks before the data on the bus becomes valid. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> It should be understood that there is no precharging of the data bus line itself; that is, there is no switching or clocking applied to the data bus. A scheme in which the data bus is switched or clocked periodically would require some sort of dynamic driver design, adding complexity, power, and cost. Instead, the repeater structure of the present invention may be advantageously implemented with simple combinatorial logic. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Another important advantage of the present invention, as exemplified in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, is that the NAND logic gate <highlight><bold>11</bold></highlight> may be made relatively small, with the inverter <highlight><bold>12</bold></highlight> made relatively large to drive the next segment of the bus. This construction has the benefit of providing increased speed and reduced power so that no additional repeaters are needed before the bus line reaches the next data bank in the cache memory. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Practitioners in the art will further appreciate that the approach of the present invention also provides another advantage when redundant subarrays are employed. Each subarray in a block can have its own enable signal that is used to switch the subarray on or off the bus. In this manner, a subarray can be substituted for any other subarray with just the switching of an enable signal, leaving the bus itself unchanged. Hence, the present invention permits implementing a redundant subarray scheme without adversely impacting power or speed. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> With reference now to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, there is shown an alternative embodiment of the repeater structure of the present invention. The embodiment of <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is essentially the same as that shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> except that repeater <highlight><bold>20</bold></highlight> includes a NOR gate <highlight><bold>21</bold></highlight> instead of a NAND gate as the input logic device. The output of NOR gate <highlight><bold>21</bold></highlight> is coupled to inverter <highlight><bold>22</bold></highlight>, which, in turn, drives data bus <highlight><bold>23</bold></highlight>. As can be seen, repeater <highlight><bold>20</bold></highlight> is associated with cache bank B<highlight><subscript>0</subscript></highlight>, and is concatenated in series on the bus with a second repeater (associated with bank B<highlight><subscript>1</subscript></highlight>) comprising NOR gates <highlight><bold>24</bold></highlight> and inverter <highlight><bold>25</bold></highlight>. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Instead of being precharged to a logical high potential, the data outputs from all inactive cache banks are precharged to a logical low potential (&equals;0). Also, the default data bus logic level is a logical 0, e.g., V<highlight><subscript>SS</subscript></highlight>. Thus, when the data output from an active bank is logically low, the data on the bus is already valid. The only case in which there is a propagation delay through the repeaters before the data on the bus becomes valid is when a cache bank outputs a logical 1. As discussed in connection with <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> cache organization implemented using the repeaters shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> has the advantage of permitting activation of redundant subarray elements with minimal overhead. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates a cache memory <highlight><bold>17</bold></highlight> organized into banks (B<highlight><subscript>0</subscript></highlight>-B<highlight><subscript>M</subscript></highlight>) with repeaters associated with corresponding subarrays (A<highlight><subscript>0</subscript></highlight>-A<highlight><subscript>N</subscript></highlight>) of each bank in accordance to one embodiment of the present invention. By way of example, data from subarray A<highlight><subscript>0 </subscript></highlight>of each bank is selectively connected to one of the lines of bus <highlight><bold>18</bold></highlight> through repeaters <highlight><bold>10</bold></highlight>. In typical operation, only one of the banks of memory <highlight><bold>17</bold></highlight> is activated at a time, with the data from the subarrays of that bank being transmitted onto bus <highlight><bold>18</bold></highlight> exclusively. For instance, bank B<highlight><subscript>2 </subscript></highlight>may be activated (with remaining banks B<highlight><subscript>0</subscript></highlight>-B<highlight><subscript>1 </subscript></highlight>and B<highlight><subscript>3</subscript></highlight>-B<highlight><subscript>M </subscript></highlight>inactive) in order to read data stored in subarrays A<highlight><subscript>0</subscript></highlight>-A<highlight><subscript>N </subscript></highlight>on bus <highlight><bold>18</bold></highlight>. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> It should be appreciated that the present invention allows cache memory <highlight><bold>17</bold></highlight> to be easily configurable to any size as spaced allows on the die. Moreover, the solution offered by the present invention may be used on any cache memory. For example, current cache memory designs often use the way hit information to decode individual wordlines internal to the subarray. According to the prior art, if the size of the cache memory is changed and the number of ways changes, then the subarray must be redesigned to accommodate the new number of ways. In contrast, according to the present invention, the way hit may be used to select a bank. If the number of ways is changed, the bank is simply added or removed from the die. This approach is much easier and less disruptive to the die floorplan as compared to prior art schemes, and no edits to the subarrays are required. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Practitioners in the art will further appreciate that the repeater structure described above is not limited to just memory array implementations. For example, the present invention may be advantageously utilized in any block of logic that requires interface to a bus. Accordingly, the specification and drawings are to be regarded in an illustrative rather than a restrictive sense. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">We claim: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A repeater for series connection with a bus line, comprising: 
<claim-text>a receiver node coupled to receive a first logic value of the bus line; </claim-text>
<claim-text>a driver node coupled to drive the bus line; </claim-text>
<claim-text>a data input node coupled to a logic block, when in an active state the logic block providing a data value of either the first logic value or a second logic value to the data input node, when in an inactive state the logic block providing the first logic value to the data input node; </claim-text>
<claim-text>logic having inputs coupled to the receiver and data input nodes, and an output coupled to the bus driver node, the logic to drive the first logic value on the bus line when the logic block is in the inactive state, and to drive the data value onto the bus line when the logic block is in the active state. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the first logic value is 1 and the second logic value is 0. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the first logic value is 0 and the second logic value is 1. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein the logic comprises a NAND gate having first and second inputs coupled to the receiver and data input nodes, respectively. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference> wherein the logic comprises a NOR gate having first and second inputs coupled to the receiver and data input nodes, respectively. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference> wherein the logic further comprises: 
<claim-text>an inverter coupled between the NAND gate and the output. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference> wherein the logic further comprises: 
<claim-text>an inverter coupled between the NOR gate and the output. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference> wherein the NAND gate has a relatively small size. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein the NOR gate has a relatively small size. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> wherein the inverter has a relatively large size. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein the inverter has a relatively large size. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A repeater for series connection with a bus line, comprising: 
<claim-text>a first logic device having a first input coupled to receive a first logic value of the bus line, a second input coupled to a cache bank, and an output, the first logic device to provide the first logic value at the output when the cache bank is in an inactive state, and to provide a data value from the cache bank at the output when the cache bank is in an active state, the data value being either the first logic value or a second logic value; </claim-text>
<claim-text>an inverter coupled between the output of the first logic device and the bus line, the inverter driving either the first or second logic value onto the bus line. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> wherein the first logic value is 1 and the second logic value is 0. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> wherein the first logic value is 0 and the second logic value is 1. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference> wherein the first logic device comprises a NAND gate. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> wherein the first logic device comprises a NOR gate. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein the NAND gate has a relatively small size and the inverter has a relatively large size. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> wherein the NOR gate has a relatively small size and the inverter has a relatively large size. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A cache memory comprising: 
<claim-text>a plurality of cache banks, each cache bank including a plurality of memory cell subarrays to store data; </claim-text>
<claim-text>a data bus having a plurality of bus lines; </claim-text>
<claim-text>repeaters to connect data from the subarrays to the data bus, each repeater comprising: 
<claim-text>a first logic device having a first input coupled to receive a first logic value of a bus line, a second input coupled to a subarray, and an output, the first logic device providing the first logic value at the output when the subarray is in an inactive state, and to provide a data value from the subarray at the output when the subarray is in an active state, the data value being either the first logic value or a second logic value; </claim-text>
<claim-text>an inverter coupled between the output of the first logic device and the bus line, the inverter driving either the first or second logic value onto the bus line. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein the first logic value is 1 and the second logic value is 0. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein the first logic value is 0 and the second logic value is 1. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference> wherein the first logic device comprises a NAND gate. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> wherein the first logic device comprises a NOR gate. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference> wherein the NAND gate has a relatively small size and the inverter has a relatively large size. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference> wherein the NOR gate has a relatively small size and the inverter has a relatively large size. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. A repeater for connection to a bus line, comprising: 
<claim-text>a receiver node coupled to a first segment of the bus line; </claim-text>
<claim-text>a driver node coupled to a next segment of the bus line; </claim-text>
<claim-text>a data input node coupled to a cache array, when in an active state the cache array providing a data value of either a first logic value or a second logic value at the data input node, when in an inactive state the cache array providing the first logic value at the data input node; </claim-text>
<claim-text>means having inputs coupled to the receiver and data input nodes and an output coupled to the driver node for driving the first logic value on the bus line at the driver node when the cache array is in the inactive state, and to drive the data value onto the bus line when the cache array is in the active state. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein the first logic value is 1 and the second logic value is 0. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein the first logic value is 0 and the second logic value is 1. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference> wherein the means comprises a NAND gate coupled in series with an inverter, the NAND gate having first and second inputs coupled to the receiver and data input nodes, respectively; the inverter having an output connected to the driver node. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The repeater of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference> wherein the means comprises a NOR gate coupled in series with an inverter, the NOR gate having first and second inputs coupled to the receiver and data input nodes, respectively; the inverter having an output connected to the driver node.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005222A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005222A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005222A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
