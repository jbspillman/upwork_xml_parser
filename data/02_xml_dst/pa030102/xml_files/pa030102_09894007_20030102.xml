<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005374A1-20030102-D00000.TIF SYSTEM "US20030005374A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005374A1-20030102-D00001.TIF SYSTEM "US20030005374A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005374A1-20030102-D00002.TIF SYSTEM "US20030005374A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005374A1-20030102-D00003.TIF SYSTEM "US20030005374A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005374A1-20030102-D00004.TIF SYSTEM "US20030005374A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005374A1-20030102-D00005.TIF SYSTEM "US20030005374A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005374A1-20030102-D00006.TIF SYSTEM "US20030005374A1-20030102-D00006.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005374</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09894007</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G01R031/28</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>714</class>
<subclass>724000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method and apparatus for testing an I/O buffer</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Eric</given-name>
<middle-name>T.</middle-name>
<family-name>Fought</family-name>
</name>
<residence>
<residence-us>
<city>Chandler</city>
<state>AZ</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Cass</given-name>
<middle-name>A.</middle-name>
<family-name>Blodgett</family-name>
</name>
<residence>
<residence-us>
<city>Phoenix</city>
<state>AZ</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Akira</given-name>
<family-name>Kakizawa</family-name>
</name>
<residence>
<residence-us>
<city>Phoenix</city>
<state>AZ</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>ANTONELLI TERRY STOUT AND KRAUS</name-1>
<name-2></name-2>
<address>
<address-1>SUITE 1800</address-1>
<address-2>1300 NORTH SEVENTEENTH STREET</address-2>
<city>ARLINGTON</city>
<state>VA</state>
<postalcode>22209</postalcode>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A buffer circuit is provided having a driver device and an input device to receive a first set of signals and to produce a second set of signals. The driver device may receive the second set of signals and output a third set of signals based on the second set of signals input to said driver device. A comparing device may receive the third set of signals from the driver device and produce a fourth set of signals based on the third set of signals, the comparing device may compare the fourth set of signals with the first set of signals. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention is directed to high speed interfaces. More particularly, the present invention is directed to testing high speed interface timings so as to detect defects of a chip. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Computing devices and systems may contain components such as chips that contain high speed interfaces. During design of such systems, and prior to distribution to consumers, these interfaces need to be tested to determine their proper functionality. Such testing may be accomplished by using a testing device that couples to the interface, for example, and testing the timing of signals across the interface. However, modern chips may operate at frequencies higher than that of the testing device. It is therefore desirable to have a built-in self test to test these high speed interfaces.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The foregoing and a better understanding of the present invention will become apparent from the following detailed description of example embodiments and the claims when read in connection with the accompanying drawings, all forming a part of the disclosure of this invention. While the foregoing and following written and illustrated disclosure focuses on disclosing example embodiments of the invention, it should be clearly understood that the same is by way of illustration and example only and that the invention is not limited thereto. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The following represents brief descriptions of the drawings in which like reference numerals represent like elements and wherein: </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is an example arrangement showing AC IO loopback for an IO buffer; </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates a structure for a built-in self test of an IO buffer according to an example embodiment of the present invention; </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates modes of a state machine according to an example embodiment of the present invention; </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a timing diagram according to an example embodiment of the present invention; </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a timing diagram according to an example embodiment of the present invention; and </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> illustrates the testing of a full chip according to an example embodiment of the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> In the following detailed description, like reference numerals and characters may be used to designate identical, corresponding or similar components in differing figure drawings. Further, example sizes/models/values/ranges may be given, although the present invention is not limited to these specific examples. The clock and timing signal FIGS. are not drawn to scale, and instead, exemplary time values may be mentioned. With regard to the description of any timing signals, the terms HIGH and LOW may be used in a generic sense. More particularly, such terms may be used to avoid confusion when working with a mixture of &ldquo;active-low&rdquo; and &ldquo;active-high&rdquo; signals, and to represent the fact that the invention is not limited to the illustrated/described signals, but could be implemented with a total/partial reversal of any of the &ldquo;active-low&rdquo; and &ldquo;active-high&rdquo; signals by a change in logic. Additionally, well known power/ground connections to integrated circuits (ICs) and other components may not be shown within the FIGS. for simplicity of illustration and discussion, and so as not to obscure the invention. Where specific details (e.g., circuits, flowcharts) are set forth in order to describe example embodiments of the invention, it should be apparent to one skilled in the art that the invention can be practiced without, or with variation of, these specific details. Finally, it should be apparent that differing combinations of hard-wired circuitry can be used to implement embodiments of the present invention. That is, the present invention is not limited to any specific combination of hardware. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Any reference in the specification to &ldquo;one embodiment&rdquo;, &ldquo;an embodiment&rdquo;, &ldquo;example embodiment&rdquo;, etc., means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the invention. The appearances of such phrases in various places in the specification are not necessarily all referring to the same embodiment. Further, when a particular feature, structure, or characteristic is described in connection with any embodiment, it is submitted that it is within the knowledge of one skilled in the art to effect such feature, structure, or characteristic in connection with other ones of the embodiments. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Embodiments of the present invention relate to the testing of signals and components so as to validate high speed interface timings. Embodiments of the present invention may be used to validate high speed source synchronous buffers by using a high speed tester. A front side bus buffer may include quad pumped 133 MHz buffers with a data rate of 533 MHz. However, a tester device such as an S9K tester may have a maximum frequency of 156 MHz. The testing device therefore operates slower than the fast speed buffers thereby making it difficult to test the higher speed interfaces. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> AC IO loopback is one method of using a lower speed testing device to test higher speed buffers. AC IO loopback involves the transfer of external data into a chip and looping that data internally within the chip. Strobe signals may be used as clock signals to determine if the chip passes or fails the desired timings. This type of method and structure may use scan chains to load data into outbound flip-flop circuits. Once the data is loaded into the flip-flop circuits, it may be transmitted through the IO buffer and captured on the inbound paths. The captured strobes may be delayed in predetermined increments. The idea is to find the point at which one path (i.e., one IO buffer) fails and a second point when all paths fail. A difference between the first failure condition and the second failure condition may be measured. The calculated value (delta T) may be compared with an acceptable value. If the delta T is within an acceptable range, the part is considered good. On the other hand, if the delta T is too large, then the part may be defective. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates an example arrangement showing AC IO loopback for an IO buffer. Other arrangements for AC IO loopback are also possible. More particularly, <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows an IO buffer <highlight><bold>100</bold></highlight> and a core <highlight><bold>200</bold></highlight> that are provided within a chip. This chip includes the AC IO loopback structure for testing at least an output driver circuit <highlight><bold>116</bold></highlight>. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> The core <highlight><bold>200</bold></highlight> may include multiplexors <highlight><bold>212</bold></highlight>, <highlight><bold>214</bold></highlight>, <highlight><bold>216</bold></highlight> and <highlight><bold>218</bold></highlight> that are coupled to combinational logic <highlight><bold>202</bold></highlight>, <highlight><bold>204</bold></highlight>, <highlight><bold>206</bold></highlight> and <highlight><bold>208</bold></highlight>. The combinational logic <highlight><bold>202</bold></highlight>, <highlight><bold>204</bold></highlight>, <highlight><bold>206</bold></highlight> and <highlight><bold>208</bold></highlight> provides functional components that may be used to perform various operating functions of the chip when the chip is under normal operation (i.e., not undergoing testing). This path may also be used to test at lower frequencies. The multiplexors <highlight><bold>212</bold></highlight>, <highlight><bold>214</bold></highlight>, <highlight><bold>216</bold></highlight> and <highlight><bold>218</bold></highlight> may be clocked by the signal aciolpbk and provide an output signal to a corresponding one of the D flip-flop circuits <highlight><bold>222</bold></highlight>, <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight>. The D flip-flop circuits <highlight><bold>222</bold></highlight>, <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight>, and <highlight><bold>228</bold></highlight> may be loaded with IO data for the testing. Output signals from the D flip-flop circuits <highlight><bold>222</bold></highlight>, <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight> may be fed back to another input of the multiplexors <highlight><bold>212</bold></highlight>, <highlight><bold>214</bold></highlight>, <highlight><bold>216</bold></highlight> and <highlight><bold>218</bold></highlight>. In the IO buffer <highlight><bold>100</bold></highlight>, output signals of the D flip-flop circuits <highlight><bold>222</bold></highlight>, <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight> are also input to D flip-flop circuits <highlight><bold>102</bold></highlight>, <highlight><bold>104</bold></highlight>, <highlight><bold>106</bold></highlight> and <highlight><bold>108</bold></highlight> of the IO buffer <highlight><bold>100</bold></highlight>. Output signals of the D flip-flop circuits <highlight><bold>102</bold></highlight>, <highlight><bold>104</bold></highlight>, <highlight><bold>106</bold></highlight> and <highlight><bold>108</bold></highlight> are input to 0, 1, 2, and 3 inputs, respectively, of a multiplexor <highlight><bold>110</bold></highlight>. The multiplexor <highlight><bold>110</bold></highlight> may be incremented by a counter <highlight><bold>112</bold></highlight> and output a signal to a D flip-flop circuit <highlight><bold>114</bold></highlight>. The signal output from the D flip-flop circuit <highlight><bold>114</bold></highlight> is input to the output driver circuit <highlight><bold>116</bold></highlight>, which in turn outputs a signal to a pad <highlight><bold>118</bold></highlight>. The pad <highlight><bold>118</bold></highlight> may correspond to a pin of the chip. The signal output from the output driver circuit <highlight><bold>116</bold></highlight> may also be input to a D flip-flop circuit <highlight><bold>122</bold></highlight> and to a D flip-flop circuit <highlight><bold>124</bold></highlight>. Signals output from the D flip-flop circuit <highlight><bold>122</bold></highlight> and the D flip-flop circuit <highlight><bold>124</bold></highlight> are input to an 8-latch circuit <highlight><bold>126</bold></highlight>. The 8-latch circuit <highlight><bold>126</bold></highlight> outputs signals to each of the D flip-flop circuits <highlight><bold>132</bold></highlight>, <highlight><bold>134</bold></highlight>, <highlight><bold>136</bold></highlight> and <highlight><bold>138</bold></highlight>. The signals (ifdata0, ifdata1, ifdata2 and ifdata3) output from the D flip-flop circuits <highlight><bold>132</bold></highlight>, <highlight><bold>134</bold></highlight>, <highlight><bold>136</bold></highlight> and <highlight><bold>138</bold></highlight> are input to D inputs of the D flip-flop circuits <highlight><bold>242</bold></highlight>, <highlight><bold>244</bold></highlight>, <highlight><bold>246</bold></highlight> and <highlight><bold>248</bold></highlight>, respectively. A Q output signal of the D flip-flop circuit <highlight><bold>242</bold></highlight> is input to the Si input of the D flip-flop circuit <highlight><bold>244</bold></highlight>. A Q output signal of the D flip-flop circuit <highlight><bold>244</bold></highlight> is input to the Si input of the D flip-flop circuit <highlight><bold>246</bold></highlight>. Additionally, a Q output of the D flip-flop circuit <highlight><bold>246</bold></highlight> is input to the Si input of the D flip-flop circuit <highlight><bold>248</bold></highlight>. A Q output of the D flip-flop circuit <highlight><bold>248</bold></highlight> is shown as signal scan_input (next pad). This output signal scan_input (next pad) may be used to determine a delta T value. That is, the signal scan_input (next pad) may be observed externally so that the delta T value may be calculated. The delta T value is used by a testing device to determine if the timing of the signals are within an acceptable range (i.e., whether the circuit is defective). </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> More generally speaking, in AC IO loopback the outbound D flip-flop circuits <highlight><bold>222</bold></highlight>, <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight> in the core <highlight><bold>200</bold></highlight> may have their output signals fed back to the multiplexers <highlight><bold>212</bold></highlight>, <highlight><bold>214</bold></highlight>, <highlight><bold>216</bold></highlight> and <highlight><bold>218</bold></highlight>. This re-circulates the data during the AC IO loopback testing mode. The desired data may be scanned into the outbound D flip-flop circuits <highlight><bold>222</bold></highlight>, <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight> and retained by asserting the signal aciolpbk that is applied to the multiplexors <highlight><bold>212</bold></highlight>, <highlight><bold>214</bold></highlight>, <highlight><bold>216</bold></highlight> and <highlight><bold>218</bold></highlight>. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> further shows that a signal clk<highlight><bold>1</bold></highlight> is used as a clock input to the D flip-flop circuits <highlight><bold>102</bold></highlight>, <highlight><bold>104</bold></highlight>, <highlight><bold>106</bold></highlight> and <highlight><bold>108</bold></highlight>, the D flip-flop circuits <highlight><bold>132</bold></highlight>, <highlight><bold>134</bold></highlight>, <highlight><bold>136</bold></highlight> and <highlight><bold>138</bold></highlight> and the D flip-flop circuits <highlight><bold>242</bold></highlight>, <highlight><bold>244</bold></highlight>, <highlight><bold>246</bold></highlight> and <highlight><bold>248</bold></highlight>. A signal clk<highlight><bold>2</bold></highlight> may be used as a clock input to the counter <highlight><bold>112</bold></highlight> and the D flip-flop circuit <highlight><bold>114</bold></highlight>. In one example arrangement, the signal clk<highlight><bold>1</bold></highlight> may be a 100 MHz clock signal and the signal clk<highlight><bold>2</bold></highlight> may be a 400 MHz clock signal. Other arrangements for the clock input frequency are also possible. The use of a 100 MHz clock signal and a 400 MHz clock signal allows 4 pieces of data to be input for every 100 MHz clock cycle. Stated differently, the IO test data comes into the chip at 100 MHz and gets tested at 400 MHz. Based on operations of the D flip-flop circuits, the multiplexors and the clock signals, the data inputs to the D flip-flop circuits <highlight><bold>222</bold></highlight>, <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight> may pass through the output driver circuit <highlight><bold>116</bold></highlight> and may be captured by the inbound D flip-flop circuits <highlight><bold>122</bold></highlight> and <highlight><bold>124</bold></highlight>. This is the loopback of the data from the output driver circuit <highlight><bold>116</bold></highlight> to the D flip-flop circuits <highlight><bold>122</bold></highlight> and <highlight><bold>124</bold></highlight>. The D flip-flop circuits <highlight><bold>122</bold></highlight> and <highlight><bold>124</bold></highlight> may be clocked by the strobe signals stb and stbb, which may operate at 200 MHz to capture the data. Once all four signals (corresponding to that originally provided within the D flip-flop circuits <highlight><bold>222</bold></highlight>, <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight>) have been captured in the <highlight><bold>8</bold></highlight>-latch circuit <highlight><bold>126</bold></highlight>, the data may be transmitted to the inbound D flip-flop circuits <highlight><bold>132</bold></highlight>, <highlight><bold>134</bold></highlight>, <highlight><bold>136</bold></highlight> and <highlight><bold>138</bold></highlight>. The next clock edge of the signal clk<highlight><bold>1</bold></highlight> may load the data into the core <highlight><bold>200</bold></highlight>. That is, the D flip-flop circuits <highlight><bold>132</bold></highlight>, <highlight><bold>134</bold></highlight>, <highlight><bold>136</bold></highlight>, and <highlight><bold>138</bold></highlight> bring the data back to operating at 100 MHz. At this point, the scan loaden signal may be asserted and the data may be shifted out. That is, data may be shifted out from the D flip-flop circuit <highlight><bold>248</bold></highlight> as the signal scan_input(next pad). This signal scan_input (next pad) may be compared against the original data that was loaded into the D flip-flop circuits <highlight><bold>222</bold></highlight>, <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight>. The signal scan_input (next pad) may be used to determine whether a defect occurs within the chip and, more particularly, whether a defect occurs within the output driver circuit <highlight><bold>116</bold></highlight>. That is, the signal scan_input (next pad) may be observed externally to determine whether a defect occurs. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> Embodiments of the present invention may improve upon the AC IO loopback arrangement shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> by reducing the amount of time to generate the patterns of data. The amount of test time may be dramatically reduced by utilizing embodiments of the present invention. In order to better illustrate this, embodiments of the present invention may be described with respect to an IO Buffer BIST (built-in self test) that may be implemented on a chip having source synchronous buffers, although embodiments of the present invention are also applicable to other types of buffers and chips. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates a structure for a built-in self tester (BIST) of an IO buffer according to an example embodiment of the present invention. Other embodiments and configurations are also within the scope of the present invention. Further, embodiments of the present invention will be described with respect to D flip-flop circuits, multiplexors, XOR circuits, AND circuits and OR circuits. One skilled in the art would understand that other combinations or types of logic circuits or types of flip-flop circuits may be used to obtain the desired functionality. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> In order to avoid repetitive description, similar components in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> and <cross-reference target="DRAWINGS">FIG. 1</cross-reference> may not be described again as their interconnections and operations have already been described or would be understandable to one skilled in the art. <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows that the inputs to the multiplexors <highlight><bold>212</bold></highlight>, <highlight><bold>214</bold></highlight>, <highlight><bold>216</bold></highlight> and <highlight><bold>218</bold></highlight> (that feed the outbound D flip-flop circuits <highlight><bold>222</bold></highlight>, <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight>) are loaded via an ACIOLPB_data(<highlight><bold>3</bold></highlight>:<highlight><bold>0</bold></highlight>) bus. For example, the signal ACIOLPB_data0 may be input to the multiplexor <highlight><bold>212</bold></highlight>, the signal ACIOLPB_data1 may be input to the multiplexor <highlight><bold>214</bold></highlight>, the signal ACIOLPB_data2 may be input to the multiplexor <highlight><bold>216</bold></highlight> and the signal ACIOLPB_data3 may be input to the multiplexor <highlight><bold>218</bold></highlight>. Accordingly, the chip (and more particularly the IO Buffer BIST) may be programmed with data that is loaded into the outbound D flip-flop circuits <highlight><bold>222</bold></highlight>, <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight> via the ACIOLPB_data bus. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> further shows XOR circuits <highlight><bold>252</bold></highlight>, <highlight><bold>254</bold></highlight>, <highlight><bold>256</bold></highlight> and <highlight><bold>258</bold></highlight> provided within the core <highlight><bold>200</bold></highlight>. Unlike the <cross-reference target="DRAWINGS">FIG. 1</cross-reference> arrangement, the input signals on the ACIOLPB data bus are input to XOR circuits <highlight><bold>252</bold></highlight>, <highlight><bold>254</bold></highlight>, <highlight><bold>256</bold></highlight> and <highlight><bold>258</bold></highlight> for testing as will be described. More specifically, the signal ACIOLPB_data0 is input to an inO input of the XOR circuit <highlight><bold>252</bold></highlight> and a Q output from the D flip-flop circuit <highlight><bold>242</bold></highlight> is input to an in2 input of the XOR circuit <highlight><bold>252</bold></highlight>. The signal ACIOLPB_data1 is input to an in0 input of the XOR circuit <highlight><bold>254</bold></highlight> and a Q output from the D flip-flop circuit <highlight><bold>244</bold></highlight> is input to an in2 input of the XOR circuit <highlight><bold>254</bold></highlight>. The signal ACIOLPB_data2 is input to an in0 input of the XOR circuit <highlight><bold>256</bold></highlight> and a Q output from the D flip-flip circuit <highlight><bold>246</bold></highlight> is input to an in2 input of the XOR circuit <highlight><bold>256</bold></highlight>. Finally, the signal ACIOLPB_data3 is input to an in0 input of the XOR circuit <highlight><bold>258</bold></highlight> and a Q output from the D flip-flop circuit <highlight><bold>248</bold></highlight> is input to an in2 input of the XOR circuit <highlight><bold>258</bold></highlight>. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Signals output from each of the XOR circuits <highlight><bold>252</bold></highlight>, <highlight><bold>254</bold></highlight>, <highlight><bold>256</bold></highlight> and <highlight><bold>258</bold></highlight> are input to an AND circuit <highlight><bold>262</bold></highlight> that provides an output signal ALL_FAIL if all of its inputs are HIGH. That is, a high output signal from the AND circuit <highlight><bold>262</bold></highlight> corresponds to an all fail condition. Similarly, the signals output from each of the XOR circuits <highlight><bold>252</bold></highlight>, <highlight><bold>254</bold></highlight>, <highlight><bold>256</bold></highlight> and <highlight><bold>258</bold></highlight> are input to an OR circuit <highlight><bold>264</bold></highlight> that provides an output signal At_Least<highlight><subscript>&mdash;</subscript></highlight>1_Fail if at least one of the input signals to the OR circuit <highlight><bold>264</bold></highlight> is HIGH. That is, a HIGH output signal from the OR circuit <highlight><bold>264</bold></highlight> corresponds to the at least one fail condition. In accordance with embodiments of the present invention, the signal ALL_FAIL and the signal At_Least<highlight><subscript>&mdash;</subscript></highlight>1_Fail may be used to determine the delta T value for the circuit and thereby determine if the IO buffer <highlight><bold>100</bold></highlight>, including the output driver circuit <highlight><bold>116</bold></highlight>, is defective. That is, a delta T value may be determined and compared against an acceptable delta T value. In these embodiments, delta T may be a time difference between the at least one fail condition and an all fail condition. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the D flip-flop circuits <highlight><bold>122</bold></highlight> and <highlight><bold>124</bold></highlight> may be clocked by the strobe signal stbp and the strobe signal stbn, respectively. The output signals flop_e and flop_o are input to a 2-latch bank with mixing circuit <highlight><bold>130</bold></highlight> (similar to the 8-latch circuit <highlight><bold>126</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>). Each bank within the circuit <highlight><bold>130</bold></highlight> has 4 latches. Embodiments of the present invention may skew or delay the strobe signals stbp and stbn by increments to capture and test the next data. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> In order to operate the circuit shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the chip may include a state machine and other combinational logic to control operations of the IO Buffer BIST. <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows a flow chart <highlight><bold>300</bold></highlight> that represents operations of the state machine. Other operations and types of state machines are also within the scope of the present invention. As shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the state machine may remain in an Idle state <highlight><bold>302</bold></highlight> until the chip enters a testing mode. At this point, the state machine may transition to a Load Data state <highlight><bold>304</bold></highlight> to allow the transmit data to propagate to the pads. As discussed above, the input data may be programmed into the chip on the ACIOLPBK_data (3:0) bus that is coupled to the multiplexors <highlight><bold>212</bold></highlight>, <highlight><bold>214</bold></highlight>, <highlight><bold>216</bold></highlight> and <highlight><bold>218</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>). The state machine may transition to a Transmit mode that causes data transmission. That is, the transmit signal may be active for 1 cycle. For example, as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the data may be transmitted across the D flip-flop circuits <highlight><bold>222</bold></highlight>, <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight>, the D flip-flop circuits <highlight><bold>102</bold></highlight>, <highlight><bold>104</bold></highlight>, <highlight><bold>106</bold></highlight>, <highlight><bold>108</bold></highlight>, the multiplexor <highlight><bold>110</bold></highlight>, the D flip-flop circuit <highlight><bold>114</bold></highlight> and through the output driver circuit <highlight><bold>116</bold></highlight> where it may be captured by the inbound D flip-flop circuits <highlight><bold>122</bold></highlight> and <highlight><bold>124</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the state machine may enter a No_Op (no operation) state <highlight><bold>308</bold></highlight> and a No_Op 2 (no operation) state <highlight><bold>310</bold></highlight>. The No-op State <highlight><bold>308</bold></highlight> allows for the flip-flop delay in the pad. The No-op State <highlight><bold>310</bold></highlight> allows for the flip-flop delay in the core <highlight><bold>200</bold></highlight>. These states may represent the flip-flop delays in the IO buffer <highlight><bold>100</bold></highlight> and the core <highlight><bold>200</bold></highlight> (corresponding to the D flip-flop circuits <highlight><bold>132</bold></highlight>, <highlight><bold>134</bold></highlight>, <highlight><bold>136</bold></highlight> and <highlight><bold>138</bold></highlight> and the D flip-flop circuits <highlight><bold>242</bold></highlight>, <highlight><bold>244</bold></highlight>, <highlight><bold>246</bold></highlight> and <highlight><bold>248</bold></highlight>). There is no limit to the number of No_op states. That is, the number may be design specific. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Once the data has been captured in the inbound D flip-flop circuits <highlight><bold>242</bold></highlight>, <highlight><bold>244</bold></highlight>, <highlight><bold>246</bold></highlight> and <highlight><bold>248</bold></highlight>, the data may be compared with the original data using the XOR circuits <highlight><bold>252</bold></highlight>, <highlight><bold>254</bold></highlight>, <highlight><bold>256</bold></highlight> and <highlight><bold>258</bold></highlight>. This may occur in the Compare state <highlight><bold>312</bold></highlight>. On the other hand, if the chip is being debugged, then the state machine may enter a Shift mode <highlight><bold>316</bold></highlight> to scan out data. This selection of the modes <highlight><bold>312</bold></highlight> and <highlight><bold>316</bold></highlight> may be accomplished by using a test register that controls the next state selection (between the Compare mode <highlight><bold>312</bold></highlight> and the Shift mode <highlight><bold>316</bold></highlight>). If in the Shift mode <highlight><bold>312</bold></highlight>, the chip may operate to shift (or clock) the data until all the data may be shifted out through the scan chain. The state machine may remain in the Shift mode until a shift_done signal is asserted. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Once this Shift mode <highlight><bold>316</bold></highlight> or the Compare mode <highlight><bold>312</bold></highlight> have been completed, the state machine may enter a Done/Control_Full state <highlight><bold>314</bold></highlight> in which pass/fail flags may be generated depending on the inputs from the units. This state may be used to determine if the Buffer BIST sequence is complete in which case the state machine may return to the Idle state <highlight><bold>302</bold></highlight>. On the other hand, if the Buffer BIST sequence is not complete, then the state machine may increment the strobe delay and enter the Load Data state <highlight><bold>304</bold></highlight>. If the ALL_FAIL condition occurs and the expected strobe (i.e, the expected strobe is determined by characterization and may be programmed into the test register) matches the current strobe count, then a pass_flag may be asserted. Otherwise, the state machine may continue counting. This loop of the flow chart <highlight><bold>300</bold></highlight> may continue until a pass_flag is asserted or the maximum strobe count is reached. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> In order to use the Buffer BIST, an acceptable delta T (or window) value is calculated. This delta T (or window) value may be the amount of time between the at least one fail condition and the all fail condition. By sampling a number of chips, a delta T value may be calculated. Calculating the delta T value for circuit components may be an automated process by using the above described Buffer BIST. That is, the state machine may loop through the various testing modes until the all_fail condition is obtained. The delta T value may be determined by counting the number of cycles or loops from when the At_Least<highlight><subscript>&mdash;</subscript></highlight>1_Fail flag is asserted to when the All_Fail flag is asserted. Another method to determine an acceptable delta T value may be accomplished with timing specifications of a particular interface or IO buffer. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The calculation to properly characterize (i.e., determine an acceptable delta T value) a chip component using this testing mode will now be described. Initially, the chip may be reset. The test registers may be loaded with the ACIOLPBK data, starting with the strobe delay and the test mode enable bit. The state machine may then send the ACIOLPBK data to the outbound D flip-flop circuits <highlight><bold>222</bold></highlight>, <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight>. The data may then be transmitted which requires that the strobe pads that generate the strobes with the proper delay is specified by the testing unit. The data may be captured by the D flip-flop circuits <highlight><bold>222</bold></highlight>, <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight>. This data may be compared with the original data using the XOR circuits <highlight><bold>252</bold></highlight>, <highlight><bold>254</bold></highlight>, <highlight><bold>256</bold></highlight>, <highlight><bold>258</bold></highlight>, the AND circuit <highlight><bold>262</bold></highlight> and the OR circuit <highlight><bold>264</bold></highlight> to generate the All_Fail signal and the At_Least<highlight><subscript>&mdash;</subscript></highlight>1_Fail signal. The state machine may then determine whether the test mode is complete by monitoring the All_Fail flag. If the flag is not asserted, then the strobe delay may be incremented and the process may be repeated. However, this time the ACIOLPBK data may be inverted. This may continue until either the All_Fail flag is asserted or the maximum strobe delay has been reached. If the All_Fail flag is asserted, then the test is complete. On the other hand, if the All_Fail flag is not asserted within the specified delta T, then the chip may be defective. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a timing diagram showing the timing of various signals (of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) according to an example embodiment of the present invention. Most particularly, <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows the signal clk <highlight><bold>100</bold></highlight> that operates at 100 MHz. The line labeled &ldquo;Present State&rdquo; corresponds to the various modes (i.e., Idle State <highlight><bold>302</bold></highlight>, Load State <highlight><bold>304</bold></highlight>, Transmit State <highlight><bold>306</bold></highlight>, No_Op State <highlight><bold>308</bold></highlight>, No_Op State <highlight><bold>310</bold></highlight>, Compare State <highlight><bold>312</bold></highlight>, Done State <highlight><bold>314</bold></highlight> and Shift State <highlight><bold>316</bold></highlight>) of the state machine that controls the IO Buffer BIST. <cross-reference target="DRAWINGS">FIG. 4</cross-reference> further shows that a first fail condition (i.e., the signal At_Least<highlight><subscript>&mdash;</subscript></highlight>1_Fail) occurs during a second cycle of the state machine. The delta T value is determined based on the time separation between the HIGH state of the signal At_Least<highlight><subscript>&mdash;</subscript></highlight>1_Fail and the HIGH state of the signal All_Fail. The testing device that couples to the chip determines this delta T value and compares it with a predetermined standard to determine if the chip is defective or not. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a more detailed timing diagram than <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. More specifically, <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows the signal clk <highlight><bold>100</bold></highlight> operating at 100 MHz and the signal clk <highlight><bold>400</bold></highlight> operating at 400 MHz. This figure further shows the signal stbp and the signal stbn that clock the D flip-flop circuits <highlight><bold>122</bold></highlight> and <highlight><bold>124</bold></highlight>, respectively. The figure further shows the strobe signals stbp and stbn being delayed. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> illustrates a front side bus that may include <highlight><bold>64</bold></highlight> buffers each similar to that shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. In this example, data may be loaded into the testing device by a <highlight><bold>128</bold></highlight> bit shift register. That is, only two bits of the 128 bit register are used for IO BUFFER BIST data. To generate the At_Least<highlight><subscript>&mdash;</subscript></highlight>1_Fail flag for the front side bus data, a 256&times;1 OR gate is used. The output of each XOR gate is OR&apos;d together thereby generating the At_Least<highlight><subscript>&mdash;</subscript></highlight>1_Fail flag. To generate the All_Fail_Flag for the front side bus, a 256&times;1 AND gate may be used. The output of each XOR gate is AND&apos;d together thereby generating the All_Fail flag. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows the logic to support the IO Buffer BIST for the front side bus data pads. All of the D flip-flop circuits are provided in the design and the comparators (i.e., XOR circuits) and two large comparators are used. There are only two bits of test data because the only patterns for the <highlight><bold>4</bold></highlight>x path are 0101 and 1010. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> As may be seen from the above discussion, embodiments of the present invention may improve on an AC IO loopback structure by internally generating the data as compared to loading the data into the flip-flop circuits. This saves a significant amount of tester time. The XOR circuits <highlight><bold>252</bold></highlight>, <highlight><bold>254</bold></highlight>, <highlight><bold>256</bold></highlight>, and <highlight><bold>258</bold></highlight> may be coupled to receive the input data and perform the necessary comparisons internally within the chip. That is , the At_least<highlight><subscript>&mdash;</subscript></highlight>1_Fail signal and the All_Fail signal may be generated by the OR circuit <highlight><bold>264</bold></highlight> and the AND circuit <highlight><bold>262</bold></highlight> respectively. Accordingly, the external testing device does not need to load the test data into the chip and subsequently perform the comparison. The data may be loaded internally, the comparison may be done internally and the results may be fed out through pins of the chip. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Accordingly, the embodiments of the present invention may utilize a Buffer BIST that makes testing of high speed interfaces more bearable. For example, the testing mode may be run on slow testing devices. The tested time may be dramatically reduced. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> This concludes the description of the example embodiments. Although the present invention has been described with reference to a number of illustrative embodiments thereof, it should be understood that numerous other modifications and embodiments can be devised by those skilled in the art that will fall within the spirit and scope of this invention. More particularly, reasonable variations and modifications are possible in the component parts and/or arrangements of the subject combination arrangement within the scope of the foregoing disclosure, the drawings and the appended claims without departing from the spirit of the invention. In addition to variations and modifications in the component parts and/or arrangements, alternative uses may also be apparent to those skilled in the art.</paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A buffer circuit comprising: 
<claim-text>a driver device; </claim-text>
<claim-text>an input device to receive a first set of signals and to produce a second set of signals, said driver device to receive said second set of signals and to output a third set of signals based on said second set of signals input to said driver device; and </claim-text>
<claim-text>a comparing device to receive said third set of signals from said driver device and to produce a fourth set of signals based on said third set of signals, said comparing device to compare said fourth set of signals with said first set of signals. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The buffer circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said input device comprises a plurality of first multiplexor devices to receive said first set of signals and at least a plurality of latch devices to receive outputs from said plurality of first multiplexor devices. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The buffer circuit of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein said input device further comprises a second multiplexor device to couple to an output of each of said plurality of latch devices, and a latch device to couple to an output of said second multiplexor device and to an input of said driver device. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The buffer circuit of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein said plurality of latch devices operate based on a first clock signal, and said latch device operates based on a second clock signal, said second clock signal being faster than said first clock signal. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The buffer circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said comparing device comprises a first plurality of logic circuits and a plurality of latch devices, said plurality of latch circuits to output said fourth set of signals to inputs of said first plurality of logic circuits, said first plurality of logic circuits to further receive said first set of signals as inputs and to perform a comparison based on said received first set of signals and said fourth set of signals. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The buffer circuit of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein said plurality of latch devices comprises a plurality of flip-flop circuits. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The buffer circuit of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein said first plurality of logic circuits comprise a plurality of XOR logic circuits. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The buffer circuit of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, further comprising a second plurality of logic circuits, each to receive an output from each one of said first plurality of logic circuits. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The buffer circuit of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein a first one of said second plurality of logic circuits comprises an AND logic circuit and a second one of said second plurality of logic circuits comprises an OR logic circuit. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The buffer circuit of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein an output of said AND logic circuit represents an ALL FAIL condition and an output of said OR logic circuit represents an AT LEAST ONE FAIL condition. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The buffer circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said buffer circuit is provided on a chip. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. An apparatus for testing a driver device, said apparatus comprising: 
<claim-text>an input device to receive a first set of signals and to provide a second set of signals to said driver device; and </claim-text>
<claim-text>a comparing device to receive a third set of signals output from said driver device and to produce a fourth set of signals, said comparing device to further receive said first set of signals from said input device and to compare said first set of signals with said fourth set of signals. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein said input device comprises a plurality of first multiplexor devices to receive said first set of signals and at least a plurality of latch devices to receive outputs from said plurality of first multiplexor devices. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein said input device further comprises a second multiplexor device to couple to an output of each of said plurality of latch devices, and a latch device to couple to an output of said second multiplexor device and to an input of said driver device. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein said plurality of latch devices operate based on a first clock signal, and said latch device operates based on a second clock signal, said second clock signal being faster than said first clock signal. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein said comparing device comprises a first plurality of logic circuits and a plurality of latch devices, said plurality of latch circuits to output said fourth set of signals to inputs of said first plurality of logic circuits, said first plurality of logic circuits to further receive said first set of signals as inputs and to perform a comparison based on said received first set of signals and said fourth set of signals. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein said plurality of latch devices comprises a plurality of flip-flop circuits. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein said first plurality of logic circuits comprise a plurality of XOR logic circuits. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, further comprising a second plurality of logic circuits, each to receive an output from each one of said first plurality of logic circuits. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein a first one of said second plurality of logic circuits comprises an AND logic circuit and a second one of said second plurality of logic circuits comprises an OR logic circuit. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein an output of said AND logic circuit represents an ALL FAIL condition and an output of said OR logic circuit represents an AT LEAST ONE FAIL condition. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, further comprising a device to determine a difference in time between the AT LEAST ONE FAIL CONDITION and the ALL FAIL CONDITION, said device to compare said determined difference with a predetermined difference to determine if said driver device is defective. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein each of said fourth set of signals is delayed based on strobe signals. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein said apparatus is provided on a chip with said driver device. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A method of testing a driver device, said method comprising: 
<claim-text>receiving a first set of signals at a first component; </claim-text>
<claim-text>transmitting a second set of signals from said first component to said driver device, said second set of signals being based on said first set of signals; </claim-text>
<claim-text>receiving a third set of signals from said driver device; </claim-text>
<claim-text>providing a fourth set of signals and said first set of signals to a second component, said fourth set of signals being based on said third set of signals; and </claim-text>
<claim-text>comparing said fourth set of signal with said first set of signals at said second component. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, further comprising delaying each one of said third plurality of signals so as to provide signals corresponding to said fourth set of signals. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein said first component, said second component and said driver device are all provided on a chip. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, further comprising outputting a first signal when one of said fourth set of signals does not match a corresponding one of said first set of signals. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, further comprising outputting a second signal when all of said fourth set of signals do not match corresponding ones of said second set of signals. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, further comprising comparing a time difference between said first signal and said second signal with a predetermined time difference so as to determine if said driver device is defective.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005374A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005374A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005374A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005374A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005374A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005374A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005374A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
