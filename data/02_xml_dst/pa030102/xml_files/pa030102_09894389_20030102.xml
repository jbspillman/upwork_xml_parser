<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005318A1-20030102-D00000.TIF SYSTEM "US20030005318A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005318A1-20030102-D00001.TIF SYSTEM "US20030005318A1-20030102-D00001.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005318</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09894389</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010628</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F012/14</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>713</class>
<subclass>193000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>705</class>
<subclass>057000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>380</class>
<subclass>201000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Data protection via reversible data damage</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Michael</given-name>
<family-name>Epstein</family-name>
</name>
<residence>
<residence-us>
<city>Spring Valley</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>Corporate Patent Counsel</name-1>
<name-2>U.S. Philips Corporation</name-2>
<address>
<address-1>580 White Plains Road</address-1>
<city>Tarrytown</city>
<state>NY</state>
<postalcode>10591</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A security system purposely damages at least a portion of content material, using a damaging process that is easily reversible, until a verification of authorization is determined. While the authorization to access the content material is in an unverified state, an undamaged version is provided for immediate rendering, but any stored versions of the content material is stored in the damaged state. When the authorization is verified, the damaging process ceases, and the stored damaged version is repaired, thereby allowing unimpeded subsequent access to the authorized content material. If sufficient evidence is obtained to warrant a determination that the content material is unauthorized, the access to the material is terminated, and any stored content material remains in the damaged state, thereby precluding subsequent access to the unauthorized content material. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This invention relates to the field of data protection, and in particular to protecting data from illicit copying from a remote location. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The protection of data is becoming an increasingly important area of security. In many situations,the authority to copy or otherwise process information is verified via a time-consuming process. For example, copy-protected material may contain watermarks or other encodings which identify the material as being copy-protected, and also contains other encodings which identify whether this particular copy of the material is an authorized copy, and whether it can be copied again. For example, an authorized copy of content material may contain a robust watermark and a fragile watermark. The robust watermark is intended to be irremovable from the content material without causing damage to the content material. The fragile watermark is intended to be damaged when the content material is illicitly copied. For example, common fragile watermarks are damaged if the content material is compressed or otherwise altered. In this manner, content material that is compressed in order to be efficiently communicated via the Internet will be received with a robust watermark and a damaged fragile watermark. A content-processing device that is configured to enforce copy protection rights in this example will be configured to detect the presence of a robust watermark, and prevent the processing of the content material containing this robust watermark unless the fragile watermark is also present. The time required to verify the presence of a robust and a fragile watermark, however, may be substantial. Other verification schemes may include accessing a remote source to verify a user identification or user authorization, and the transmission time delay may also be substantial. Still other verification schemes, discussed further below, may induce an even longer latency between when the content material is presented for processing and when the content material is verified as being authorized for processing. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> In most consumer applications, the consumer expects a relatively immediate response to commands. For example, when a user presses &ldquo;play&rdquo; on a CD player, the user expects music to be rendered within a few seconds. If the user has an authorized copy of copy protected material, the user will expect the same relatively immediate response to commands when requesting access to this material. A security system that imposes a noticeable delay before responding to the user&apos;s commands for access to authorized content material will not be well received by consumers. In like manner, a security system that allows a substantial portion of unauthorized content material to be processed while the user&apos;s authorization is being verified, will not be well received by the providers of protected content material. </paragraph>
</section>
<section>
<heading lvl="1">BRIEF SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> It is an object of this invention to provide a system or method of preventing select uses of material until the material is verified as being authorized for the specified use. It is a further object of this invention to provide select access to the material while the verification process is underway. It is a further object of this invention to prevent a subsequent rendering of material that has not been verified. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> These objects and others are achieved by providing a security system that purposely damages at least a portion of content material, using a damaging process that is easily reversible. While the authorization to access the content material is in an unverified state, an undamaged version of the material is provided for immediate rendering, but any stored versions of the content material is stored in the damaged state. When the authorization is verified, the damaging process ceases, and the stored damaged version is repaired, thereby allowing unimpeded subsequent access to the authorized content material. If sufficient evidence is obtained to warrant a determination that the content material is unauthorized, the access to the material is terminated, and any stored content material remains in the damaged state, thereby precluding subsequent access to the unauthorized content material.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The invention is explained in further detail, and by way of example, with reference to the accompanying drawing wherein: </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates an example block diagram of a control access system in accordance with this invention. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates an example block diagram of a control gate in accordance with this invention. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates an example block diagram of a damaging device in accordance with this invention. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates an example block diagram of a repairing device in accordance with this invention. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Throughout the drawing, the same reference numerals indicate similar or corresponding features or functions.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates an example control access system <highlight><bold>100</bold></highlight> in accordance with this invention. The control access system <highlight><bold>100</bold></highlight> includes a processor <highlight><bold>120</bold></highlight> that is configured to process material from a physical media, such as a CD <highlight><bold>130</bold></highlight>, via an access device, such as a reader <highlight><bold>132</bold></highlight>. The processor <highlight><bold>120</bold></highlight> may be a recording device that records one or more songs from the CD <highlight><bold>130</bold></highlight> onto a memory stick, onto a compilation CD, and so on. The processor <highlight><bold>120</bold></highlight> may also be a playback device that is configured to provide an output suitable for human perception, such as images on a screen, sounds from a speaker, and so on, or, it may be a combination of rendering and storage capabilities. The example processor <highlight><bold>120</bold></highlight> includes a receiver <highlight><bold>122</bold></highlight> that provides the interface with the access device <highlight><bold>132</bold></highlight>, and a verifier <highlight><bold>126</bold></highlight> that is configured to verify the presence of authorized material <highlight><bold>130</bold></highlight>. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> A common method of misappropriating content material is to copy the material from its original media <highlight><bold>130</bold></highlight>, such as the original purchased CD containing the content material. Such misappropriated content material is often made available from a remote source <highlight><bold>140</bold></highlight>, via the Internet <highlight><bold>144</bold></highlight>. Often, for ease of downloading, individual songs are downloaded, rather than the entire set of material constituting the material on the original media <highlight><bold>130</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 1</cross-reference> includes an example &ldquo;CD Imitator&rdquo; device <highlight><bold>142</bold></highlight>, for ease of reference to alternative devices that can be configured to provide an output that is substantially indistinguishable from an access device <highlight><bold>132</bold></highlight>. This invention is presented using a misappropriation of material via the Internet as a paradigm for the means of obtaining unauthorized material, although the principles of this invention are applicable to copy-protection schemes in general, without regard to how the unauthorized material is obtained. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Using this example form of misappropriation, when a user commences access to material from the media <highlight><bold>130</bold></highlight>, the processor <highlight><bold>120</bold></highlight> is configured to verify the presence of the media <highlight><bold>130</bold></highlight>. One method of effecting this verification is to request the access device <highlight><bold>132</bold></highlight> to provide evidence that the media <highlight><bold>130</bold></highlight> is available to provide material or information that differs from the material that the user is attempting to render. For example, if the user commences the rendering of a song, the verifier <highlight><bold>126</bold></highlight> may direct the receiver <highlight><bold>122</bold></highlight> to request a portion of a different song that is known to be on the media <highlight><bold>130</bold></highlight> from the access device <highlight><bold>132</bold></highlight>. If the access device is unable to provide the requested portion of a different song, the verifier <highlight><bold>126</bold></highlight> can conclude that the media <highlight><bold>130</bold></highlight> is not actually present, and will terminate subsequent rendering or storage of the material, via the gate <highlight><bold>200</bold></highlight>. For example, a user may illicitly download a selection of different copy-protected songs from a remote site <highlight><bold>140</bold></highlight> on the Internet <highlight><bold>144</bold></highlight>, and then attempt to create a compilation CD containing these user-selected songs. Typically, the size of an entire album of material discourages the downloading of the entire album merely to obtain a user-selected song. When the verifier <highlight><bold>126</bold></highlight> requests a portion of a different song from the album corresponding to an actual CD <highlight><bold>130</bold></highlight>, the user who downloaded only the user-selected song from the album will be prevented from further rendering of the downloaded material. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> A variety of techniques may be employed to assure that the material provided in response to the request corresponds to the material that is contained on the actual CD <highlight><bold>130</bold></highlight>. For example, copending U.S. patent application &ldquo;Protecting Content from Illicit Reproduction by Proof of Existence of a Complete Data Set via Self-Referencing Sections&rdquo;, U.S. Ser. No. 09/536,944, filed Mar. 28, 2000 for Antonius A. M. Staring, Michael A. Epstein, and Martin Rosner, Attorney Docket US000040, and incorporated by reference herein, teaches a self-referential data set wherein each section of a data set, such as a copy-protected album, is uniquely identified by a section identifier that is securely associated with each section. To assure that a collection of sections are all from the same data set, an identifier of the data set is also securely encoded with each section. Using exhaustive or random sampling, the presence of the entirety of the data set is determined, either absolutely or with statistical certainty, by checking the section and data-set identifiers of selected sections. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The above example of a verification scheme is intended to illustrate a verification scheme that can be expected to consume a noticeable amount of time before the verification process is completed, particularly if an exhaustive check is performed. A substantial amount of time may pass between the time that the user requests access to the content material and the time that the verifier <highlight><bold>126</bold></highlight> determines, one way or the other, whether the user is authorized to access the material. During this time, the user, and particularly a user who has an authorized copy of the material, will expect to have access to the content material. Also during this time, however, a user who has an illicit copy of the material will be able to have access to the unauthorized content material. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> This invention is based on the assumption that the prevention of the storage of a copy of unauthorized content material is a primary goal of a copy protection scheme, whereas the prevention of a one-time playback of unauthorized content material is not as important, and may be sacrificed in return for user satisfaction. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> In accordance with this invention, any stored version of the copy-protected content material is stored in a damaged state, whereas an immediate rendering of the material is permitted in an undamaged state, until the authorization to access the copy-protected content material is verified, or until such verification fails. If the authorization is verified, the damaging process ceases, and the stored damaged material is repaired. In a preferred embodiment of this invention, the damage to the stored material is easily and quickly repairable, and provides a repaired version of the material that is substantially identical to the input content material. By providing a quick repair procedure, the user of authorized material will perceive little, if any, difference from a conventional direct storage of undamaged content material. The gate <highlight><bold>200</bold></highlight> of the processor <highlight><bold>120</bold></highlight> is configured to effect the controlled damage and subsequent repair process. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Also in accordance with this invention, if the processor <highlight><bold>120</bold></highlight> is configured to render the content material for human perception, the gate <highlight><bold>200</bold></highlight> provides an undamaged version of the material for rendering until the authorization is verified. In this manner, a user is provided an immediate rendering of the material, and is not affected by the verification process. During this verification process, however, any stored material is stored in a damaged state. The undamaged version of the material may be provided directly, by bypassing the damaging process, or may be provided by a repair of damaged material. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates an example block diagram of a control gate <highlight><bold>200</bold></highlight> in accordance with this invention. The verifier <highlight><bold>126</bold></highlight> enables the damager <highlight><bold>210</bold></highlight> to damage content material <highlight><bold>201</bold></highlight> before storing it in a storage device <highlight><bold>250</bold></highlight>, until the verifier <highlight><bold>126</bold></highlight> confirms that the content material is authorized for copying. Depending upon the particular configuration, the gate <highlight><bold>200</bold></highlight> may include a temporary storage device <highlight><bold>280</bold></highlight>, such as a solid-state memory that buffers the material before transferring it to a more permanent storage <highlight><bold>250</bold></highlight>, such as a disc or portable memory stick. When the verifier <highlight><bold>126</bold></highlight> verifies that the received content material <highlight><bold>201</bold></highlight> is authorized for copying, the verifier <highlight><bold>126</bold></highlight> enables the repairer <highlight><bold>220</bold></highlight> to effect a repair of the damaged material that was stored. If the temporary storage <highlight><bold>280</bold></highlight> is available, and the damaged material has not yet been transferred to the storage <highlight><bold>250</bold></highlight>, the repair is effected on the material that is in the temporary storage <highlight><bold>280</bold></highlight>. If damaged material has been communicated to the storage <highlight><bold>250</bold></highlight>, the repairer <highlight><bold>220</bold></highlight> effects a repair on the material that was stored at the storage <highlight><bold>250</bold></highlight>. Because temporary storage <highlight><bold>280</bold></highlight> is generally faster and easier to modify than permanent storage <highlight><bold>250</bold></highlight>, a preferred embodiment contains sufficient temporary storage <highlight><bold>280</bold></highlight> to contain the quantity of content material that is expected to be received during the time required to effect the authorization verification. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> In a preferred embodiment, only a portion of the content material <highlight><bold>201</bold></highlight> is damaged, as indicated by the cross-hatched portion <highlight><bold>211</bold></highlight> of the transferred content material <highlight><bold>201</bold></highlight>&prime;. By limiting the amount of damage that is introduced, the time and resources required to repair the damage can be minimized. However, to be effective, the amount of damage introduced by the damager <highlight><bold>210</bold></highlight> is greater than the amount of damage that can be corrected by any error correcting codes in the content material <highlight><bold>201</bold></highlight>, and sufficient to cause a noticeable distortion of the original content material. Beyond the minimum damage required to avoid error correcting schemes, the degree of distortion is heuristically determined, typically by estimating the amount of distortion necessary to discourage a subsequent rendering of the distorted material. This distortion may include, for example, a periodic distortion of the audio segments of entertainment material, distortions of color or contrast in video segments, out-of-sequence storage of the material, out-of-sync storage of audio and video information, and so on. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The choice of determining the portion of the content material to damage is preferably based on the architecture of the storage device. For example, if the storage device is partitioned into tracks and sectors, and data is read and/or written to the storage device as blocks of data of a given size, the damager <highlight><bold>210</bold></highlight> may be configured to destroy the M<highlight><superscript>th </superscript></highlight>block of every sector. Alternatively, the first byte of every block may be destroyed, or an entire sector in each track may be destroyed, and so on. The choice of a destructive pattern that will have a substantial visible or audible effect, but only require the destruction of portions of the content information, will be evident to one of ordinary skill in the art in view of this disclosure. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates an example block diagram of a damager <highlight><bold>210</bold></highlight> in accordance with this invention. The selected portion <highlight><bold>311</bold></highlight> of the content material <highlight><bold>201</bold></highlight> is provided to a destruction device <highlight><bold>320</bold></highlight>. The destruction device <highlight><bold>320</bold></highlight> can be any function that modifies the selected portion <highlight><bold>311</bold></highlight> of the input content material <highlight><bold>201</bold></highlight> in such a manner that it easy to repair by a suitably enabled repairer <highlight><bold>220</bold></highlight>, but difficult to repair otherwise. In the example shown, the destruction device <highlight><bold>320</bold></highlight> is an exclusive&mdash;or device that is configured to compute the exclusive&mdash;or of the combination of the selected portion <highlight><bold>311</bold></highlight> and a key <highlight><bold>350</bold></highlight>, to provide the damaged content material <highlight><bold>211</bold></highlight>. As is known in the art, the exclusive-or function is easily reversible to find one of the original inputs, if the other input is known: </paragraph>
<paragraph id="P-0026" lvl="2"><number>&lsqb;0026&rsqb;</number> If Damaged&equals;Original &oplus; Key, Then Damaged &oplus; Key&equals;Original. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> As illustrated in <cross-reference target="DRAWINGS">FIG. 4, a</cross-reference> corresponding repairer <highlight><bold>220</bold></highlight> contains an exclusive&mdash;or device <highlight><bold>320</bold></highlight>&prime; corresponding to the exclusive&mdash;or device <highlight><bold>320</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. Because the input to the device <highlight><bold>320</bold></highlight>&prime; is the damaged input <highlight><bold>211</bold></highlight>, the output <highlight><bold>221</bold></highlight> will correspond to the original undamaged input <highlight><bold>311</bold></highlight>, but only if the same key is used. That is, with knowledge of the key <highlight><bold>350</bold></highlight>, the original undamaged material can be easily recovered by the repairer <highlight><bold>220</bold></highlight>. However, without knowledge of the key, the undamaged material cannot be recovered. Reference numeral <highlight><bold>350</bold></highlight>&prime; is used in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> to illustrate a key that is supposed to be equal to the key <highlight><bold>350</bold></highlight>, but may be different. If the repairing key <highlight><bold>350</bold></highlight>&prime; is not equal to the damaging key <highlight><bold>350</bold></highlight>, the output <highlight><bold>221</bold></highlight> will not be equal to the original undamaged input <highlight><bold>311</bold></highlight>. In like manner, the reference numeral <highlight><bold>320</bold></highlight>&prime; is used in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> to illustrate a device that is supposed to contain an reversing function corresponding to the function used in the device <highlight><bold>320</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. If the device <highlight><bold>320</bold></highlight>&prime; does not provide an reversing function of the device <highlight><bold>320</bold></highlight>, the damaged material will not be repaired. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> To avoid a systematic attempt to determine the key <highlight><bold>350</bold></highlight> that is used by a particular system, the key <highlight><bold>350</bold></highlight> for each damaging session is randomly generated by the verifier <highlight><bold>126</bold></highlight>, and, if the verification process is lengthy, multiple random keys <highlight><bold>350</bold></highlight> may be used. In a preferred embodiment of this invention, a pseudo-random number generator is used, which produces a sequence of random numbers, starting from a seed number; the same sequence is produced whenever the same seed is provided. In such an embodiment, the key <highlight><bold>350</bold></highlight> in the damager <highlight><bold>210</bold></highlight> comprises the stream of random numbers produced by the random number generator from a key-seed that is generated for each session. Given this same key-seed, the repairer <highlight><bold>220</bold></highlight> is provided the same stream of random numbers from the random number generator, for use as the key <highlight><bold>350</bold></highlight>&prime; that restores the original material <highlight><bold>221</bold></highlight> from the damaged material <highlight><bold>211</bold></highlight>. The use of a changing key further discourages attempts to repair the damaged segments without knowledge of the changing key values. If the verifier <highlight><bold>126</bold></highlight> determines that the material is unauthorized, the key <highlight><bold>350</bold></highlight>, and any key-seed used to generate the key <highlight><bold>350</bold></highlight>, are destroyed, so that the stored unauthorized material remains damaged. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The foregoing merely illustrates the principles of the invention. It will thus be appreciated that those skilled in the art will be able to devise various arrangements which, although not explicitly described or shown herein, embody the principles of the invention and are thus within the spirit and scope of the following claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">I claim: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A security system comprising: 
<claim-text>a verifier that is configured to determine an authorization to process protected material, and </claim-text>
<claim-text>a gate that is configured to: 
<claim-text>store a damaged version of the protected material while the verifier is determining the authorization, and </claim-text>
<claim-text>repair the damaged version of the protected material to form a repaired version of the protected material after the verifier determines the authorization. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The security system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein 
<claim-text>the verifier is configured to determine the authorization based on a verification of a presence of an entirety of a data set corresponding to the protected material. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The security system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein 
<claim-text>the gate is further configured to store the damaged version on a removable media. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The security system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein 
<claim-text>the gate is further configured to 
<claim-text>store the damaged version in a temporary storage device, and </claim-text>
<claim-text>store the repaired version in a permanent storage device. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The security system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein 
<claim-text>the gate comprises: 
<claim-text>a damager that is configured to damage a select portion of the protected material to form the damaged version, and </claim-text>
<claim-text>a repairer that is configured to repair a corresponding select portion of the damaged version to form the repaired version. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The security system of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein 
<claim-text>the gate is configured to disable the damager to prevent subsequent damage, after the verifier determines the authorization. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The security system of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein 
<claim-text>the damager includes: 
<claim-text>a first device that is configured to damage the select portion of the protected material via an exclusive&mdash;or function with a key, and </claim-text>
</claim-text>
<claim-text>the repairer includes: 
<claim-text>a second device that is configured to repair the select portion of the protected material via an exclusive&mdash;or function with the key. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The security system of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein 
<claim-text>the key is provided via a random process. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The security system of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein 
<claim-text>the key includes a series of random numbers that are provided via a pseudo-random process based on a key-seed. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The security system of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein 
<claim-text>the key is destroyed if the verifier fails to determine the authorization. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The security system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein 
<claim-text>the gate is further configured to: 
<claim-text>provide an undamaged version of the protected material for rendering while the verifier is determining the authorization. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A method of protecting protected material comprising: 
<claim-text>determining an authorization to process the protected material, and </claim-text>
<claim-text>storing a damaged version of the protected material while determining the authorization, and </claim-text>
<claim-text>repairing the damaged version of the protected material to form a repaired version of the protected material after determining the authorization. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein 
<claim-text>determining the authorization is based on a verification of a presence of an entirety of a data set corresponding to the protected material. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein 
<claim-text>storing the damaged version includes storing the damaged version on a removable media. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein 
<claim-text>storing the damaged material includes storing the damaged version in a temporary storage device, and </claim-text>
<claim-text>the method further includes </claim-text>
<claim-text>storing the repaired version in a permanent storage device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, further including 
<claim-text>damaging a select portion of the protected material to form the damaged version, and wherein </claim-text>
<claim-text>repairing the damaged version comprises repairing a corresponding select portion of the damaged version to form the repaired version. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein 
<claim-text>damaging the protected material includes an exclusive&mdash;or of the select portion with a key, and </claim-text>
<claim-text>repairing the damaged version includes an exclusive&mdash;or of the corresponding select portion with the key. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, further including 
<claim-text>generating the key via a random process. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein 
<claim-text>generating the key includes generating a series of random numbers via a pseudo-random process based on a key-seed. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, further including 
<claim-text>destroying the key if a failure is reported in determining the authorization. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, further including 
<claim-text>providing an undamaged version of the protected material for rendering while determining the authorization.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005318A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005318A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
