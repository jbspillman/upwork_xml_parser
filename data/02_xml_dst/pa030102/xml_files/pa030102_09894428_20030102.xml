<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005202A1-20030102-D00000.TIF SYSTEM "US20030005202A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005202A1-20030102-D00001.TIF SYSTEM "US20030005202A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005202A1-20030102-D00002.TIF SYSTEM "US20030005202A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005202A1-20030102-D00003.TIF SYSTEM "US20030005202A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005202A1-20030102-D00004.TIF SYSTEM "US20030005202A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005202A1-20030102-D00005.TIF SYSTEM "US20030005202A1-20030102-D00005.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005202</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09894428</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010627</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F013/38</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>710</class>
<subclass>305000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Dual storage adapters utilizing clustered adapters supporting fast write caches</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Brian</given-name>
<middle-name>Eric</middle-name>
<family-name>Bakke</family-name>
</name>
<residence>
<residence-us>
<city>Rochester</city>
<state>MN</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Robert</given-name>
<middle-name>Edward</middle-name>
<family-name>Galbraith</family-name>
</name>
<residence>
<residence-us>
<city>Rochester</city>
<state>MN</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Frederic</given-name>
<middle-name>Lawrence</middle-name>
<family-name>Huss</family-name>
</name>
<residence>
<residence-us>
<city>Rochester</city>
<state>MN</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Daniel</given-name>
<middle-name>Frank</middle-name>
<family-name>Moertl</family-name>
</name>
<residence>
<residence-us>
<city>Rochester</city>
<state>MN</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Paul</given-name>
<middle-name>Gary</middle-name>
<family-name>Reuland</family-name>
</name>
<residence>
<residence-us>
<city>Rochester</city>
<state>MN</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Timothy</given-name>
<middle-name>Jerry</middle-name>
<family-name>Schimke</family-name>
</name>
<residence>
<residence-us>
<city>Oronoco</city>
<state>MN</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>BRACEWELL &amp; PATTERSON, L.L.P.</name-1>
<name-2></name-2>
<address>
<address-1>P.O. BOX 969</address-1>
<city>AUSTIN</city>
<state>TX</state>
<postalcode>78767-0969</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">An Input/Output (I/O) adapter for use with a second I/O adapter in a clustered configuration. The I/O adapter includes a dedicated communication link, such as a high-speed serial bus, that provides for communication between the I/O adapter and the second I/O adapter. The I/O adapter also includes a message passing circuit, coupled to the dedicated communication link, that allows for transferring of data between the I/O adapter and the second I/O adapter. The I/O adapter further includes a doorbell circuit, coupled to the message passing circuit, that generates interrupts to provide a low level communication between the I/O adapter and the second I/O adapter. A mirroring directory, coupled to the message passing circuit, is also included in the I/O adapter to provide for the mirroring of cache directory writes. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Technical Field </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates in general to input/output (I/O) devices and, in particular, to I/O storage adapters. More particularly, the present invention relates to a dual storage adapter that utilizes I/O adapters that mirror write cache data and cache directory between them. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of the Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Business use of computer systems has increased dramatically over the last half century. The use of the computer has also evolved and in today&apos;s business environment, more and more customers are becoming critically dependent on their information technology resources. As a result, they demand that these resources are always available. Any outage affecting their information technology resources has serious business implications including lost revenue and lost business. At the extreme, an extended system outage can cause a business to be permanently closed. Furthermore, the cost of one hour of system downtime can range from tens of thousands of dollars to several million dollars, depending on the nature of the business. Therefore, users require that their system services be continuously available, that is that the services be available 24 hours a day, 365 days a year. Technology that supports increased computer system availability has become critical to many businesses. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> A key technology that enables systems to provide continuous availability is clustering. A cluster is a collection of one or more complete systems that operate together to provide a single, unified computing capability. The perspective from the end user is that the cluster operates as though it were a single system. Work can be distributed across multiple systems in the cluster and any single outage, planned or unplanned, in the cluster will not disrupt the services provided to the end user. The end user services can be relocated from system to system within the cluster in a relatively transparent fashion. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> For computer systems, reliability is a measure of unexpected failures and availability is a measure of system downtime; the lower the downtime, the higher the availability. One can draw a relationship between reliability and availability, of course, because unexpected software and hardware failures are one cause of downtime. Thus, with all other factors being equal, a system with high reliability will also have high availability. To achieve continuous availability, more than just robust system availability is needed. Critical data and critical applications must also be resilient to outages and both must be accessible across the cluster even when the normal hosting system for the resource fails. A complete solution is achieved when the critical data and the critical applications are made to be resilient resources and are always available. Data resilience ensures that a copy of the data is always accessible to end users of the cluster while application resilience ensures that the services provided by the application are always accessible to end users of the cluster. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Input/output (I/O) storage adapters are interfaces between a computing system and a storage subsystem. In a high availability configuration, such as a cluster, redundant adapters are utilized to provide the necessary reliability, in the event that when a primary adapter fails, the backup adapter can takeover ensuring continued operation. When employing storage adapters that have resident write caches, the write cache data and directory information must be kept in synch, i.e., the cache data and directory information in the primary and backup adapters must mirror each other, to ensure a &ldquo;flawless&rdquo; takeover in the event of a failure in the primary adapter to maintain data resiliency. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Accordingly, what is needed in the art is a storage adapter with a resident write cache that can be clustered with another storage adapter with a resident write cache and still be ensured of data resiliency. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> It is therefore an object of the invention to provide an improved data processing system. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> It is another object of the invention to provide a clustered dual storage adapter employing storage adapters that have resident write caches. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> To achieve the foregoing objects, and in accordance with the invention as embodied and broadly described herein, an Input/Output (I/O) adapter for use with a second I/O adapter in a clustered configuration is disclosed. The I/O adapter includes a dedicated communication link that, in an advantageous embodiment, is a high-speed serial bus. The communication link provides for communication between the I/O adapter and the second I/O adapter. The I/O adapter also includes a message passing circuit, coupled to the dedicated communication link, that allows for transferring of data between the I/O adapter and the second I/O adapter. The message passing circuit, in an advantageous embodiment, includes a transmit buffer, a receive buffer, a transmit register that initiates the transfer of data stored in the transmit buffer to the second I/O adapter and a receive register that indicates the receipt of data from the second I/O adapter. The I/O adapter further includes a doorbell circuit, coupled to the message passing circuit, that generates interrupts to provide a low level communication between the I/O adapter and the second I/O adapter. The doorbell circuit includes, in an advantageous embodiment, a transmit doorbell register that permits the I/O adapter to set bits in the second I/O adapter&apos;s corresponding receive doorbell register, a receive doorbell register and a mask doorbell register that allows for the masking of incoming receive doorbell interrupts. A mirroring directory, coupled to the message passing circuit, is also included in the I/O adapter to provide for the mirroring of cache directory writes. In a related embodiment, both the transferring of data and the performing of a write operation by the message passing circuit between the I/O adapter and the second I/O adapter is a write operation with no required acknowledgment from the second I/O adapter. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The present invention discloses a novel hardware assisted mechanism for mirroring required data and directory information between two clustered storage adapters that support fast write cache utilizing a dedicated, independent physical hardware communication link. The present invention allows the utilization of a synchronous firmware model instead of an asynchronous model to accomplish write cache directory updates. Thus, the implemented firmware does not need to wait for an update to cache directory to complete. The direct memory access (DMA) firmware setup for each write operation is almost identical to the firmware setup for a non-clustered write operation with a minimal delay added to each host write operation when compared to a non-clustered storage adapters configuration. Furthermore, the data protection mechanisms provided by the present invention prevent the firmware in the failed adapter from inadvertently corrupting data in either its own adapter or the backup data. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The foregoing description has outlined, rather broadly, preferred and alternative features of the present invention so that those skilled in the art may better understand the detailed description of the invention that follows. Additional features of the invention will be described hereinafter that form the subject matter of the claims of the invention. Those skilled in the art should appreciate that they can readily use the disclosed conception and specific embodiment as a basis for designing or modifying other structures for carrying out the same purposes of the present invention. Those skilled in the art should also realize that such equivalent constructions do not depart from the spirit and scope of the invention in its broadest form. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself however, as well as a preferred mode of use, further objects and advantages thereof, will best be understood by reference to the following detailed description of an illustrative embodiment when read in conjunction with the accompanying drawings, wherein: </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates an exemplary data processing system that provides a suitable environment for the practice of the present invention; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates a simplified block diagram of an exemplary switchable DASD utilizing an embodiment of a dual storage adapter according to the principles disclosed by the present invention; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates a block diagram of an embodiment of an I/O adapter according to the present invention; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4A</cross-reference> illustrates an exemplary memory layout of a cache directory control area; and </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4B</cross-reference> illustrates an exemplary memory layout of a cache data store area. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT </heading>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> With reference now to the figures and in particular with reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, there is depicted an exemplary data processing system <highlight><bold>100</bold></highlight> that provides a suitable environment for the practice of the present invention. Data processing system <highlight><bold>100</bold></highlight> includes first, second and third systems (processing units) <highlight><bold>110</bold></highlight>, <highlight><bold>120</bold></highlight>, <highlight><bold>130</bold></highlight>, such as conventional personal computers or workstations, that are coupled together utilizing a system interconnection <highlight><bold>140</bold></highlight> that provides a means for communication between the systems. Interconnection <highlight><bold>140</bold></highlight> may be any one of several conventional network connection topologies, such as Ethernet. Also depicted in the illustrative embodiment are first, second and third local data storage devices <highlight><bold>110</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>10</bold></highlight><highlight><italic>b</italic></highlight>, <highlight><bold>110</bold></highlight><highlight><italic>c</italic></highlight>, e.g., conventional hard disk drives, each of which is associated with a corresponding processing unit. First, second and third systems <highlight><bold>110</bold></highlight>, <highlight><bold>120</bold></highlight>, <highlight><bold>130</bold></highlight> are also coupled via an input/output (I/O) interconnect <highlight><bold>180</bold></highlight>, such as Fibre Channel, to a plurality of switchable direct access storage devices (DASDs), generally designated first, second and third switchable DASDs <highlight><bold>150</bold></highlight>, <highlight><bold>160</bold></highlight>, <highlight><bold>170</bold></highlight>. It should be noted that each of the switchable DASDs may be, in an advantageous embodiment, a redundant array of independent disks (RAID) storage subsystem or, alternatively, a single storage device. In a preferred embodiment, data processing system <highlight><bold>100</bold></highlight> utilizes a clustering configuration and the switchable DASDs allows data processing system <highlight><bold>100</bold></highlight> to incur a primary system, e.g., first system <highlight><bold>110</bold></highlight>, failure and still be able to continue running on a backup system, e.g., second system <highlight><bold>120</bold></highlight>, without having to replicate or duplicate DASD data during normal run-time. The switchable DASD is automatically switched, i.e., no movement of cables required, from the failed system to the backup system as part of an automatic or manual failover. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, there is illustrated a simplified block diagram of an exemplary switchable DASD <highlight><bold>200</bold></highlight> utilizing an embodiment of a dual storage adapter according to the principles disclosed by the present invention. In the illustrated embodiment, switchable DASD <highlight><bold>200</bold></highlight> (analogous to first, second or third switchable DASDs <highlight><bold>150</bold></highlight>, <highlight><bold>160</bold></highlight>, <highlight><bold>170</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) is shown coupled to an I/O interconnect <highlight><bold>220</bold></highlight> (analogous to I/O interconnect <highlight><bold>180</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>). Switchable DASD <highlight><bold>200</bold></highlight> includes a dual storage adapter having first and second I/O adapters <highlight><bold>230</bold></highlight>, <highlight><bold>240</bold></highlight> coupled to a storage device <highlight><bold>250</bold></highlight> that, as discussed above, may be a single storage device or a number of storage devices in a RAID configuration. A dedicated communication link <highlight><bold>260</bold></highlight>, such as a high-speed serial bus, is utilized to provide a means of communication between first and second I/O adapters <highlight><bold>230</bold></highlight>, <highlight><bold>240</bold></highlight>. The operation and construction of an I/O adapter that may be advantageously utilized for first and second I/O adapters <highlight><bold>230</bold></highlight>, <highlight><bold>240</bold></highlight> will be described in greater detail hereinafter in conjunction with <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, with continuing reference to <cross-reference target="DRAWINGS">FIGS. 1 and 2</cross-reference>. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Turning now to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, there is depicted a block diagram of an embodiment of an I/O adapter <highlight><bold>300</bold></highlight> according to the present invention. I/O adapter <highlight><bold>300</bold></highlight> includes an adapter controller <highlight><bold>310</bold></highlight> that provides the local processing functions coupled to a cache memory <highlight><bold>320</bold></highlight> and a cache directory <highlight><bold>370</bold></highlight>. A dedicated hardware communication link <highlight><bold>360</bold></highlight> that, in an advantageous embodiment, is a high-speed serial bus, couples I/O adapter <highlight><bold>300</bold></highlight> to a second I/O adapter (not shown) in a dual storage adapter configuration (analogous to first and second I/O adapters <highlight><bold>230</bold></highlight>, <highlight><bold>240</bold></highlight> depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). Communication link <highlight><bold>360</bold></highlight> is utilized to keep the fast write cache directory information in cache directory <highlight><bold>370</bold></highlight> and data in cache memory <highlight><bold>320</bold></highlight> mirrored between I/O adapter <highlight><bold>300</bold></highlight> and a corresponding cache directory and cache memory in the second I/O adapter. Communication link <highlight><bold>360</bold></highlight> is coupled to a message passing circuit <highlight><bold>340</bold></highlight> that provides I/O adapter <highlight><bold>300</bold></highlight> the ability to sent and receive data from the second adapter and the means for determining if a message being read at a receiving end has been overlaid with a new incoming message. It should be noted that hardware acknowledgment of the successful transmission of the message is not required, essentially a &ldquo;send and forget&rdquo; operation. In the event that the data gets &ldquo;corrupted&rdquo; during transmission, the receiving adapter will simply discard the data. A higher-level firmware protocol utilized in I/O adapter <highlight><bold>300</bold></highlight>, for example, may utilize a time-out mechanism to determine if retransmission is required. In the case of a cache data write or a cache directory write from I/O adapter <highlight><bold>300</bold></highlight> to the second adapter, a pass/fail acknowledgment is required. This acknowledgment is important because the second adapter sends the acknowledgment without invoking or interrupting the firmware running on the second adapter. This communication traffic, i.e., writing a mirror copy of the data and directory to the second adapter, that makes up the majority of the traffic on communication link <highlight><bold>360</bold></highlight>, does not require any firmware resources on the second adapter. This is a synchronized firmware model, since I/O adapter <highlight><bold>300</bold></highlight> is notified of the successful mirroring of the data in the second adapter. This results in a fast data transfer that requires no firmware support on the second adapter while keeping I/O adapter <highlight><bold>300</bold></highlight> informed of the success or failure of the mirroring operation, i.e., cache data and cache directory writes. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> To accomplish its functional tasks, message passing circuit <highlight><bold>340</bold></highlight> includes transmit and receive registers <highlight><bold>340</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>340</bold></highlight><highlight><italic>b </italic></highlight>and transmit and receive buffers <highlight><bold>340</bold></highlight><highlight><italic>c </italic></highlight>and <highlight><bold>340</bold></highlight><highlight><italic>d</italic></highlight>. In a preferred embodiment, both transmit and receive buffers <highlight><bold>340</bold></highlight><highlight><italic>c</italic></highlight>, <highlight><bold>340</bold></highlight><highlight><italic>d </italic></highlight>are conventional 128 byte registers that are utilized to buffer an outgoing or an incoming message, respectively. Transmit register <highlight><bold>340</bold></highlight><highlight><italic>a </italic></highlight>is utilized to initiate the sending of a message stored in transmit buffer <highlight><bold>340</bold></highlight><highlight><italic>c </italic></highlight>across communication link <highlight><bold>360</bold></highlight> to the second adapter. A write to transmit register <highlight><bold>340</bold></highlight><highlight><italic>a </italic></highlight>to set a send bit will initiate the data transfer to the second adapter. The set send bit in transmit register <highlight><bold>340</bold></highlight><highlight><italic>a </italic></highlight>will be cleared when I/O adapter <highlight><bold>300</bold></highlight> believes that the data has been sent. It should be noted that the successful receipt of the transmitted data will not be provided to I/O adapter <highlight><bold>300</bold></highlight> from the second adapter. Receive register <highlight><bold>340</bold></highlight><highlight><italic>b</italic></highlight>, in an advantageous embodiment, includes a &ldquo;dirty&rdquo; bit and a &ldquo;message received&rdquo; bit. Following the receipt of the first byte of an incoming message from the second adapter at I/O adapter <highlight><bold>300</bold></highlight>, the dirty bit will be set. After all of the 128 byte message has been successfully received from the second adapter, the dirty bit is cleared and the message received bit will be set in I/O adapter <highlight><bold>300</bold></highlight>. The message receive bit may also be utilized to interrupt the adapter&apos;s firmware to indicate that a message has not been received. The dirty bit will not be reset and the message receive bit will not be set if the full message was not successfully received. In another advantageous embodiment, a mask register (not shown) may be utilized by the adapters to prevent incoming messages from generating an interrupt. An illustrative message passing sequence from I/O adapter <highlight><bold>300</bold></highlight> to the second adapter is as follows. Initially, the firmware in I/O adapter <highlight><bold>300</bold></highlight> checks the send bit in transmit register <highlight><bold>340</bold></highlight><highlight><italic>a </italic></highlight>to ensure that there are no messages currently being sent to the second adapter. If the send bit is not set, a 128 byte message is loaded into transmit buffer <highlight><bold>340</bold></highlight><highlight><italic>c</italic></highlight>, following which, the send bit in transmit register <highlight><bold>340</bold></highlight><highlight><italic>a </italic></highlight>is set. Subsequently, the 128 byte message is sent via communication link <highlight><bold>360</bold></highlight> to a receive buffer in the second adapter and the send bit in transmit register <highlight><bold>340</bold></highlight><highlight><italic>a </italic></highlight>is cleared. Following the receipt of the first byte, a dirty bit in a receive register in the second adapter is set. Upon receiving the full message, the second adapter sets a receive bit in it&apos;s receive register and concurrently, in the same clock cycle, clears the dirty bit in it&apos;s receive register. The second adapter then proceeds to clear a message receive bit in an interrupt register (not shown) and copies the message out of it&apos;s receive buffer. Finally, the second adapter checks the dirty bit and the message receive bit in it&apos;s receive register to ensure that the message being copied out of it&apos;s receive buffer was not overlaid with another incoming message. It should be noted that the hardware in the second adapter does not prevent a new message from I/O adapter <highlight><bold>300</bold></highlight> from overlaying an older message in the receive buffer. It is the responsibility of the implemented firmware in the adapters to control the rate at which it transmits messages to prevent messages from being lost. Any conventional suitable techniques that are well-known in the art may be advantageously employed. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> A doorbell circuit <highlight><bold>350</bold></highlight> is utilized in I/O adapter <highlight><bold>300</bold></highlight> to provide a means for base low level communication between I/O adapter <highlight><bold>300</bold></highlight> and the second adapter, i.e., &ldquo;mirrored&rdquo; adapter, by supplying the ability to generate interrupts in the mirrored adapter. Doorbell circuit <highlight><bold>350</bold></highlight> includes a transmit doorbell register <highlight><bold>350</bold></highlight><highlight><italic>a</italic></highlight>, a receive doorbell register <highlight><bold>350</bold></highlight><highlight><italic>b </italic></highlight>and a mask doorbell register <highlight><bold>350</bold></highlight><highlight><italic>c</italic></highlight>. Transmit doorbell register <highlight><bold>350</bold></highlight><highlight><italic>a </italic></highlight>is utilized by I/O adapter <highlight><bold>300</bold></highlight> to set bits in the second adapter&apos;s receive doorbell register active by setting a corresponding bit in transmit doorbell register <highlight><bold>350</bold></highlight><highlight><italic>a</italic></highlight>. The bits in receive doorbell register <highlight><bold>350</bold></highlight><highlight><italic>b </italic></highlight>are set by the second adapter utilizing it&apos;s transmit doorbell register. It should be noted that both I/O adapter <highlight><bold>300</bold></highlight> and the second adapter can clear its own receive doorbell register. The bits in receive doorbell register <highlight><bold>350</bold></highlight><highlight><italic>b </italic></highlight>can be masked and any unmasked bits that are active can raise an interrupt. Mask doorbell register <highlight><bold>350</bold></highlight><highlight><italic>c </italic></highlight>is utilized to mask incoming receive doorbell interrupts from the second adapter. To initiate communication with the second adapter, I/O adapter <highlight><bold>300</bold></highlight> writes a &ldquo;value&rdquo; to a doorbell transmit port (not shown). Following which, this value is transmitted to the second adapter. Upon receipt of the value from I/O adapter <highlight><bold>300</bold></highlight>, the second adapter, in an advantageous embodiment, &ldquo;ORs&rdquo; the value into it&apos;s receive doorbell register. Any resulting unmasked active bit in the second adapter&apos;s receive doorbell register will raise an interrupt to the second adapter. It should be noted that no confirmation is returned to I/O adapter <highlight><bold>300</bold></highlight> from the second adapter following receipt of the value. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> I/O adapter <highlight><bold>300</bold></highlight> also includes a mirroring directory <highlight><bold>330</bold></highlight> that, in turn, includes a base address register <highlight><bold>330</bold></highlight><highlight><italic>a</italic></highlight>, a split point register <highlight><bold>330</bold></highlight><highlight><italic>b</italic></highlight>, an access control register <highlight><bold>330</bold></highlight><highlight><italic>c</italic></highlight>, a posted write register <highlight><bold>330</bold></highlight><highlight><italic>d </italic></highlight>and a status register <highlight><bold>330</bold></highlight><highlight><italic>e</italic></highlight>. Mirroring directory <highlight><bold>330</bold></highlight> is utilized to provide the ability to mirror cache directory writes in I/O adapter <highlight><bold>300</bold></highlight> to the second adapter and memory partitioning of cache directory <highlight><bold>370</bold></highlight> between the primary and backup adapter. Mirroring directory <highlight><bold>330</bold></highlight> also supports positive confirmation that the cache directory data has exited all temporary buffers in the &ldquo;mirrored&rdquo; adapter and is resident in a nonvolatile memory and ensures mirrored write ordering since all writes must be executed in the order that they were issued. Write protection of mirrored copy areas is also supported by mirroring directory <highlight><bold>330</bold></highlight>. Base address register <highlight><bold>330</bold></highlight><highlight><italic>a </italic></highlight>defines the address location, e.g., in bulk memory, where cache directory <highlight><bold>370</bold></highlight> will be located. I/O adapter <highlight><bold>300</bold></highlight>, i.e., primary adapter, will automatically mirror writes to this memory region across communication link <highlight><bold>360</bold></highlight> to the second adapter, i.e., backup adapter. Split point register <highlight><bold>330</bold></highlight><highlight><italic>b </italic></highlight>breaks cache directory <highlight><bold>370</bold></highlight> into two regions; one for cache directory data from the primary adapter and one for cache directory data from the backup adapter. Exemplary cache control area and data memory layouts in primary A and backup B adapters are illustrated in <cross-reference target="DRAWINGS">FIGS. 4A and 4B</cross-reference>, respectively. It should be noted that the two regions in memory dedicated to cache directory data from the primary and backup adapters need not be equal in size. Access control register <highlight><bold>330</bold></highlight><highlight><italic>c </italic></highlight>is utilized to define which regions in the allocated cache directory region in memory belong to the primary adapter and to the backup adapter to enable mirroring in the primary region and to provide write protection for both regions. Posted write register <highlight><bold>330</bold></highlight><highlight><italic>d </italic></highlight>is utilized to ensure that there is adequate performance and prevent the primary adapter&apos;s processor from stalling. Status register <highlight><bold>330</bold></highlight><highlight><italic>e </italic></highlight>provides positive confirmation that the mirrored writes from the primary adapter to the backup adapter&apos;s nonvolatile memory have been committed. Status register <highlight><bold>330</bold></highlight><highlight><italic>e </italic></highlight>contains the number of writes still pending in posted write register <highlight><bold>330</bold></highlight><highlight><italic>d</italic></highlight>, the number of acknowledges from the backup adapter that is pending and the error bits for mirror write failures. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> With respect to error reporting, all write operations that an adapter issues to its own cache directory will always occur. The following error conditions only blocks those write operations from being mirrored to a backup adapter. (1) Errors that occur during the execution of a mirror of cache directory <highlight><bold>370</bold></highlight> data to the cache directory in the second adapter utilizing communication link <highlight><bold>360</bold></highlight> will be reported by I/O adapter <highlight><bold>300</bold></highlight>. The second adapter, in this case, will not report errors to its local processor. (2) Errors occurring when writing from the posted write queue in posted write register <highlight><bold>330</bold></highlight><highlight><italic>d </italic></highlight>will be reported utilizing status register <highlight><bold>330</bold></highlight><highlight><italic>e</italic></highlight>. No interrupts will be generated as a result of an error on a write from the posted write queue. (3) In the event of an error occurring on a mirror write operation to the cache directory area in the second adapter, all subsequent mirror writes to the second, or backup, adapter will be blocked by I/O adapter <highlight><bold>300</bold></highlight> and the second adapter. Additionally, all writes that are resident in temporary buffers and in the posted write queue will be discarded. Any writes across communication link <highlight><bold>360</bold></highlight> from I/O adapter <highlight><bold>300</bold></highlight> to the second adapter will not be allowed until I/O adapter <highlight><bold>300</bold></highlight> clears the error condition. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Although not shown, I/O adapter <highlight><bold>300</bold></highlight> also includes a direct memory access (DMA) device that can be programmed to transfer data from I/O adapter&apos;s <highlight><bold>300</bold></highlight> write cache to the second adapter&apos;s write cache. The DMA device is provided with starting and ending addresses for I/O adapter <highlight><bold>300</bold></highlight> write cache data area and the starting and ending addresses for the second adapter write cache data area. Write protection is provided by the write cache data area memory controller and only data from communication link <highlight><bold>360</bold></highlight> is allowed write access to the memory region reserved for the backup write cache data area, e.g., see <cross-reference target="DRAWINGS">FIG. 4B</cross-reference>. Writes received across communication link <highlight><bold>360</bold></highlight> to memory locations other than those locations reserved for the second adapter are rejected. In the case of errors that occur during the execution of the DMAs to the second adapter&apos;s memory locations across communication link <highlight><bold>360</bold></highlight> will be reported by the adapter that issued the DMA command. The target adapter will not report errors to its local processor and these errors will not prevent the DMAs from continuing, as opposed to memory mapped I/Os (MMIOs) utilized in the cache directory. This allows I/O adapter <highlight><bold>300</bold></highlight> to have the ability to mirror fast write cache data to the second adapter while having write protection of the mirrored copy memory areas where the memory partitioning of write cache area within cache memory <highlight><bold>320</bold></highlight> is between I/O adapter <highlight><bold>300</bold></highlight> and the second adapter, i.e., primary and backup adapters, respectively. It should be noted that support to read the remote copy of a cache data, e.g., I/O adapter <highlight><bold>300</bold></highlight> cache data mirrored in the second adapter, is not required. Although certain details of I/O adapter <highlight><bold>300</bold></highlight> have been described and discussed in terms of its function herein above, it should be readily apparent to those skilled in the art that these functionally described mechanisms can be mapped to any suitable physical layer protocol. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> While the invention has been particularly shown and described with reference to a preferred embodiment, it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. An Input/Output (I/O) adapter for use with a second I/O adapter, the I/O adapter comprising: 
<claim-text>a dedicated communication link that provides for communication between the I/O adapter and the second I/O adapter; </claim-text>
<claim-text>a message passing circuit, coupled to the dedicated communication link, that allows for transferring of data between the I/O adapter and the second I/O adapter; </claim-text>
<claim-text>a doorbell circuit, coupled to the message passing circuit, that generates interrupts to provide a low level communication between the I/O adapter and the second I/O adapter; and </claim-text>
<claim-text>a mirroring directory, coupled to the message passing circuit, that provides for the mirroring of cache directory writes. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The I/O adapter as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the transferring of data between the I/O adapter and the second I/O adapter is a write operation with no required acknowledgment from the second I/O adapter. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The I/O adapter as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the doorbell passing circuit performs a write operation from the I/O adapter to the second I/O adapter with no required acknowledgment from the second I/O adapter. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The I/O adapter as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>an adapter controller; </claim-text>
<claim-text>a cache memory; and </claim-text>
<claim-text>a cache directory. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The I/O adapter as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the message passing circuit includes: 
<claim-text>a transmit buffer; </claim-text>
<claim-text>a receive buffer; </claim-text>
<claim-text>a transmit register that initiates the transfer of data stored in the transmit buffer to the second I/O adapter; and </claim-text>
<claim-text>a receive register that indicates the receipt of data from the second I/O adapter. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The I/O adapter as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the doorbell circuit includes: 
<claim-text>a transmit doorbell register that permits the I/O adapter to set bits in the second I/O adapter&apos;s corresponding receive doorbell register; </claim-text>
<claim-text>a receive doorbell register; and </claim-text>
<claim-text>a mask doorbell register that allows for the masking of incoming receive doorbell interrupts. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The I/O adapter as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the mirroring directory includes: 
<claim-text>a base address register; </claim-text>
<claim-text>a split point register; </claim-text>
<claim-text>an access control register; </claim-text>
<claim-text>a posted write register; and </claim-text>
<claim-text>a status register. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The I/O adapter as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the dedicated communication link is a high-speed serial bus. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A dual storage adapter, comprising: 
<claim-text>a first I/O adapter; </claim-text>
<claim-text>a second I/O adapter; </claim-text>
<claim-text>a dedicated communication link between first and second I/O adapters that provides communication between the first and second I/O adapters; and </claim-text>
<claim-text>wherein each of the first and second I/O adapters includes: 
<claim-text>a message passing circuit, coupled to the dedicated communication link, that allows for transferring of data between the first and second I/O adapters; </claim-text>
<claim-text>a doorbell circuit, coupled to the message passing circuit, that generates interrupts to provide a low level communication between the first and second I/O adapters; and </claim-text>
<claim-text>a mirroring directory, coupled to the message passing circuit, that provides for the mirroring of cache directory writes. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The dual storage adapter as recited in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the transferring of data between the I/O adapter and the second I/O adapter is a write operation with no required acknowledgment from the second I/O adapter. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The dual storage adapter as recited in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the doorbell passing circuit performs a write operation from the I/O adapter to the second I/O adapter with no required acknowledgment from the second I/O adapter. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The dual storage adapter as recited in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein each of the first and second I/O adapters further including: 
<claim-text>an adapter controller; </claim-text>
<claim-text>a cache memory; and </claim-text>
<claim-text>a cache directory. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The dual storage adapter as recited in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the message passing circuit includes: 
<claim-text>a transmit buffer; </claim-text>
<claim-text>a receive buffer; </claim-text>
<claim-text>a transmit register that initiates the transfer of data stored in the transmit buffer to the second I/O adapter; and </claim-text>
<claim-text>a receive register that indicates the receipt of data from the second I/O adapter. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The dual storage adapter as recited in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the doorbell circuit includes: 
<claim-text>a transmit doorbell register that permits the I/O adapter to set bits in the second I/O adapter&apos;s corresponding receive doorbell register; </claim-text>
<claim-text>a receive doorbell register; and </claim-text>
<claim-text>a mask doorbell register that allows for the masking of incoming receive doorbell interrupts. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The dual storage adapter as recited in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the mirroring directory includes: 
<claim-text>a base address register; </claim-text>
<claim-text>a split point register; </claim-text>
<claim-text>an access control register; </claim-text>
<claim-text>a posted write register; and </claim-text>
<claim-text>a status register. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The dual storage adapter as recited in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the dedicated communication link is a high-speed serial bus. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A data processing system, comprising: 
<claim-text>at least one processing unit; </claim-text>
<claim-text>at least one storage device; and </claim-text>
<claim-text>a dual storage adapter that couples the processing unit to the storage device, the dual storage adapter including: 
<claim-text>a first I/O adapter; </claim-text>
<claim-text>a second I/O adapter; </claim-text>
<claim-text>a dedicated communication link between first and second I/O adapters that provides for communication between the first and second I/O adapters; and </claim-text>
<claim-text>wherein each of the first and second I/O adapters includes: 
<claim-text>a message passing circuit, coupled to the dedicated communication link, that allows for transferring of data between the first and second I/O adapters; </claim-text>
<claim-text>a doorbell circuit, coupled to the message passing circuit, that generates interrupts to provide a low level communication between the first and second I/O adapters; and </claim-text>
<claim-text>a mirroring directory, coupled to the message passing circuit, that provides for the mirroring of cache directory writes. </claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The data processing system as recited in <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the transferring of data between the I/O adapter and the second I/O adapter is a write operation with no required acknowledgment from the second I/O adapter. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The data processing system as recited in <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the doorbell passing circuit performs a write operation from the I/O adapter to the second I/O adapter with no required acknowledgment from the second I/O adapter. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The data processing system as recited in <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the message passing circuit includes: 
<claim-text>a transmit buffer; </claim-text>
<claim-text>a receive buffer; </claim-text>
<claim-text>a transmit register that initiates the transfer of data stored in the transmit buffer to the second I/O adapter; and </claim-text>
<claim-text>a receive register that indicates the receipt of data from the second I/O adapter. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The data processing system as recited in <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the doorbell circuit includes: 
<claim-text>a transmit doorbell register that permits the I/O adapter to set bits in the second I/O adapter&apos;s corresponding receive doorbell register; </claim-text>
<claim-text>a receive doorbell register; and </claim-text>
<claim-text>a mask doorbell register that allows for the masking of incoming receive doorbell interrupts. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The data processing system as recited in <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the mirroring directory includes: 
<claim-text>a base address register; </claim-text>
<claim-text>a split point register; </claim-text>
<claim-text>an access control register; </claim-text>
<claim-text>a posted write register; and </claim-text>
<claim-text>a status register. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The data processing system as recited in <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the dedicated communication link is a high-speed serial bus. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The data processing system as recited in <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the storage device is a switchable direct access storage device (DASD).</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005202A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005202A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005202A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005202A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005202A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005202A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
