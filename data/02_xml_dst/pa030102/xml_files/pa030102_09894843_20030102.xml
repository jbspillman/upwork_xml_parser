<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002442A1-20030102-D00000.TIF SYSTEM "US20030002442A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002442A1-20030102-D00001.TIF SYSTEM "US20030002442A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002442A1-20030102-D00002.TIF SYSTEM "US20030002442A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002442A1-20030102-D00003.TIF SYSTEM "US20030002442A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002442A1-20030102-D00004.TIF SYSTEM "US20030002442A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002442A1-20030102-D00005.TIF SYSTEM "US20030002442A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002442A1-20030102-D00006.TIF SYSTEM "US20030002442A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002442A1-20030102-D00007.TIF SYSTEM "US20030002442A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002442A1-20030102-D00008.TIF SYSTEM "US20030002442A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002442A1-20030102-D00009.TIF SYSTEM "US20030002442A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002442A1-20030102-D00010.TIF SYSTEM "US20030002442A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002442A1-20030102-D00011.TIF SYSTEM "US20030002442A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002442A1-20030102-D00012.TIF SYSTEM "US20030002442A1-20030102-D00012.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002442</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09894843</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010627</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G01R031/08</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>370</class>
<subclass>230000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>370</class>
<subclass>432000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Method and apparatus for contention management in a radio-based packet network</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>George</given-name>
<middle-name>H.</middle-name>
<family-name>Flammer</family-name>
<name-suffix>III</name-suffix>
</name>
<residence>
<residence-us>
<city>Cupertino</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>David</given-name>
<middle-name>L.</middle-name>
<family-name>Paulsen</family-name>
</name>
<residence>
<residence-us>
<city>Mountain View</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Michael</given-name>
<middle-name>W.</middle-name>
<family-name>Ritter</family-name>
</name>
<residence>
<residence-us>
<city>Los Altos</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>Metricom, Inc.</organization-name>
<address>
<city>San Jose</city>
<state>CA</state>
</address>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>Lesley S Craig</name-1>
<name-2>Townsend and Townsend and Crew LLP</name-2>
<address>
<address-1>Two Embarcadero Center 8th Floor</address-1>
<city>San Francisco</city>
<state>CA</state>
<postalcode>94111-3834</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">In a mesh communication network, a poll request protocol (PRP) is provided in which a special packet is broadcast by the congested node when it is ready to provide services. The controlling node (usually the more congested node) broadcasts a packet to request poll signals from nodes desiring resources of the controlling node. The contending nodes then have equal chances to request the services of the controlling node by sending poll signals. The controlling node can then arbitrate the requests, determine the most fair and efficient use of its resources, and broadcast a scheduling packet to inform the contending nodes when to inform the contending nodes of controlling node scheduling. The contending nodes then send their packets to the controlling node without lost packets caused by congestion collisions. The controlling node can then send data to the contending nodes also without lost packets. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This invention relates methods and apparatus for regulating traffic among contending nodes, being particularly advantageous in a wireless mesh packet radio network system. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> In a meshed communication system, packets will favor routes which historically have provided the best performance. As traffic increases, previously acceptable paths will provide degraded performance because of congestion unless alternate, normally slower paths are used or unless communication protocols provide dynamic relief at the affected nodes by changing their characteristics to be more efficient under load. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Meshed packet networks are one of several types of data communication network architectures that support packet communication. Other major types are star (e.g., cellular or 10-base T) and bus (e.g., computer backplane). Mesh networks have several advantages over other architectures for providing high-capacity, high reliability data communication over a large area and to a large number of users. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> In a radio-based packet mesh network, an interconnected mesh of data packet sending and receiving nodes collectively captures, routes and delivers data packets in a shared medium. The sharing of this medium results in mutual interference and loss of some packets due to collisions caused by congestion. When a packet is lost, it must be retransmitted, which causes further congestion in the network and causes further packet loss. The packet loss and retransmission consume the limited bandwidth that is used to provide the communication services the network was installed for. It is desirable to minimize this loss of packets so that the network can provide a greater level of performance to the greatest number of users of the network. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Any transmissions or packets that are sent that do not deliver data to the users of the network decrease the efficiency of the network. The higher the efficiency of the network, the more useful work it is performing and the higher its intrinsic value. It is desirable therefore to minimize the overhead packets and transmissions that the protocol uses to communicate to other nodes and to maximize the number of packets that actually deliver data to the users of the network. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> As a network becomes more congested and it attempts to deliver more packets than it is capable of, it is desirous that a user get their fair share of the resources. In typical packet networks some users will be favored over others because of the topology of the network or the time distribution of the traffic that they are sending. The network protocols should be designed so that the bandwidth is allocated in a fair and equitable manner regardless of these circumstances. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In a network with intelligent nodes, each node works to manage the traffic through itself. There are several known methods by which this might be done, each has disadvantages, as described below, over the invention described in this patent: </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Polling: The controlling or contended node may poll each of the nodes contending for services. The controlling node has imperfect information regarding the servicing needs of the contending (or slave) nodes. Bandwidth used by the controlling node determining if demand exists is overhead which should be minimized. Particularly in a meshed radio network, the extra transmissions can cause further degradation of services because they can increase congestion for multiple nodes. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> CSMA/CD: With the Carrier Sense Multiple Access/Collision Detect protocol each node contending for the services transmits (polls) and awaits a response. If the expected acknowledgment is not forthcoming, each of the contending nodes &ldquo;backs off&rdquo; or delays an algorithmic amount of time and then retries the poll transmission. This technique is commonly used in wired LAN topologies where all nodes are in reliable communication with each other and thus can reliably hear the acknowledgment to the poll and know when not to transmit. Unfortunately, in many topologies, because of unreliable communication channels, each node has only imperfect information about the state of the targeted node. In this case, only the successful contender (if there was one) is guaranteed to know exactly when the contended node will be free to receive another packet (after the successful node has finished transmitting its packet.) </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> CDMA: With Code Division Multiple Access, contending nodes transmit by means of a limited set of orthogonal codes. These codes can be selectively detected by decoding each transmission with its own coding sequence. This technique can be used for sending packets from multiple simultaneously transmitting mobile units on the same frequency channel where relative timing can be maintained. However, the frequency channel bandwidth must be increased to handle the additional transmissions. The limitations of this technique are manifold: the processing gain of the coding used limits the number of simultaneously transmitting mobile units. For greatest capacity, the power level of the mobile units must be controlled to be nearly uniform when received at each multiple-station receiving node such as a mobile telephone cellsite. This requires additional protocol overhead which reduces the efficiency of the network. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> It is well known that CSMA/CD does not work efficiently as a congestion-limiting scheme for meshed radio networks because of the nature of radio where all nodes cannot &lsquo;see&rsquo;, or simultaneously communicate with, each other and thus are not able to reliably avoid burst transmissions which block each other. This is a particularly severe problem when the applied load of traffic is large relative to congested node capacity. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Other, more sophisticated protocols (such as GAMA-PS as described by Andrew Muir and J. J. Garcia-Luna-Aceves, &ldquo;An Efficient Packet Sensing MAC Protocol for Wireless Networks&rdquo;, MONET 3(2):221-234 (1998)) work better as a congestion-limiting scheme for radio based systems communicating with each other on a single frequency channel (analogous to a wire.) They are; however, unable to handle multiple channels and thus take advantage of the inherent efficiencies available in a meshed network where multiple packets can be sent between different pairs of nodes simultaneously. Protocols designed to handle multiple channels, such as those used for optical networks, have not been designed to efficiently handle unreliable channels, such as those typical in radio networks. Other protocols (such as PRMA as described by D. J. Goodman, R. A. Valenzuela, K. T. Gayliard and B. Ramamurthy, &ldquo;Packet Reservation Multiple Access for Local Wireless Communications,&rdquo; IEEE Transactions on Communications, (August <highlight><bold>1989</bold></highlight>) require even more complicated collision detection that is not cost effective or is not available with current radio technology. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The following patents and publications provide further background information: </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> U.S. Pat. No. 5,384,777 Ahmadi, et. al. Jan. 24, 1995, entitled &ldquo;Adaptive Medium Access Control Scheme for Wireless LAN&rdquo;; Ahmadi, Hamid; Bantz, David F.; Bauchot, Frederic J.; Krishna, Arvind; La Maire, Richard O.; Natarajan, Kadathur S.; assigned to IBM Corporation filed Apr. 19, 1993. It discloses an evidently inflexible fixed slot master (base)/slave contention reduction scheme. Access is random access, but there is no teaching of mini-slot categories. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> ANSI/IEEE Standard 802.11, 1999 Edition. &ldquo;IEEE Standards for information technology; Telecommunications and information exchange between systems; Local and metropolitan area networks; specific requirements; Part II: Wireless LAN Medium Access Control (MAC) and Physical Specifications. It teaches a time-based scheme dependent on a single base-station with which all nodes must be in contact. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> U.S. Pat. No. 5,471,469: Nov. 28, 1995, entitled. &ldquo;Method of resolving media contention in radio communication links&rdquo;; George Flammer and Brett Galloway, assigned to Metricom of Los Gatos, Calif. This disclosure teaches a novel way of reducing contention in a frequency hopped packet radio network but under load (heavy contention) is an inefficient and unfair protocol. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> U.S. Pat. No. 5,297,144: &ldquo;Reservation-based polling protocol for a wireless data communications network&rdquo;; Gilbert; Sheldon L., Heide; Carolyn L., Director; Dennis L., assigned to Spectrix Corporation of Evanston, Ill. This teaches an inefficient polling mechanism that does not take advantage of the broadcast nature of wireless and requires multiple handshakes between each data transfer. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> U.S. Pat. No. 5,818,828: Oct. 6, 1998 entitled &ldquo;Hybrid multiple access protocol for wireless frequency hopping microcells with adaptive backhaul and heartbeat&rdquo;; Packer; Robert L., Xu; Milton Y., Bettendorff; John, assigned to Metricom, Inc., Los Gatos, Calif. This disclosure teaches a polling system that requires a Master/Slave relationship to be set up and is inefficient in requiring a poll for every data packet sent and a poll to determine if there is any data available to send. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> What is needed is an improvement in communication protocols for mesh networks with multiple channels that can perform efficiently with imperfect channels and provide increased throughput and fair allocation of resources, even under load, with minimal increase in control overhead. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> According to the invention, in a mesh communication network such as a radio-based packet network, a poll request protocol (PRP) is implemented in which a special packet or datum of information is broadcast by the congested node when it is ready to provide services. Specifically, the controlling node (usually the more congested node) broadcasts a packet requesting poll signals from nodes desiring resources of the controlling node. The contending nodes then have equal chances to request the services of the controlling node by sending poll signals. The controlling node can then arbitrate the requests, determine the most fair and efficient use of its resources, and broadcast a scheduling packet to inform the contending nodes of when to send their packets and inform the contending nodes that the controlling node will send data to them. The contending nodes then send their packets as scheduled to the controlling node without lost packets caused by congestion collisions, the controlling node can then send data to the contending nodes also without lost packets caused by random access collisions with the receiving nodes. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The present invention is an advance on the typical method and apparatus utilized in a mesh network among communicating nodes that experience congestion due to unavoidably high traffic levels. The invention also provides advantages in efficiency and fairness, particularly in a meshed packet radio network system where broadcast must be used and bandwidth is a very limited resource. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> This technique is particularly advantageous when coordinating the resource demands of an indeterminate number of nodes, each generating such demand asynchronously. In this case (which is typical of packet radio networks) the broadcast packet from the contended node provides identical information to all of the potential client nodes; such as timing, load, and availability, thereby giving each contending node an equal view of the controlling node&apos;s state. This allows each contending node an equal chance of using the controlling node&apos;s resources, thus preventing resource capture by lucky or favored nodes. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Widespread implementation of PRP increases the network carrying capacity by substantially reducing poll packets over the prior art and limiting them to the active clients of the contended node, the PRP master. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Unlike prior art polling methods, which operate within the master/slave paradigm, where the master polls the slave units, asking them if they have data for transfer and/or whether they are present to receive a data transfer to them; PRP limits the number of polls sent and received. In the prior art, the slave units either respond to polling whether or not they have data or decline to respond if they have none. It is worthwhile to note that the master interrogates the slaves through the polling. Polls unheard or which fall upon slaves with no data to send are examples of expensive spectrum wasted. Since the master (being the contended resource) is typically in a propagationally favored location or configuration, wasted packet from the master radio node are maximally deleterious to the network as a whole. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Since the PRP packet is broadcast, and thus available to a large number of interested and affected nodes, the number of Polls and the number of wasted packets in the media is minimized, leaving greater network capacity for message traffic. Since the radios responding to the single broadcast PRP packet, i.e., doing the polling, are often subscriber devices with a smaller radius of interference, their polls are less deleterious to the network, thus leaving greater network capacity for communicating. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Since all requested polls are received in the same phase, prioritization of the traffic around and through the contended node is optimizable so multiple levels of service are possible. This is an advance over prior art in polling which did not allow for scheduling or priority. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Since a PRP master can easily listen for another PRP master, and the PRP system operates asynchronously, all nodes in the network, even portable nodes, can use PRP to control their own congestion. In particular, network software code is more manageable since all nodes can run the same algorithm and all nodes react similarly. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The invention will be better understood upon reference to the following detailed description in connection with the accompanying drawings.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a mesh radio system for illustrating contention resolution according to the invention. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a time-flow chart according to the invention. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3A, 3B</cross-reference>, <highlight><bold>3</bold></highlight>C are graphical descriptions of the types of packets used in the invention. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a state diagram of the invention. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> FIGS. <highlight><bold>5</bold></highlight>A-<highlight><bold>5</bold></highlight>E is a detailed flow chart of one aspect of the invention relating to the PRP master. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> FIGS. <highlight><bold>6</bold></highlight>A-<highlight><bold>6</bold></highlight>C is a detailed flow chart of another aspect of the invention relating to the PRP client.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF SPECIFIC EMBODIMENTS </heading>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, it is often the case in a mesh network <highlight><bold>10</bold></highlight> that multiple radios of a selected type, namely wireless modems <highlight><bold>12</bold></highlight> or poletops <highlight><bold>14</bold></highlight>, wish to send their packet to the same node A. The modems <highlight><bold>12</bold></highlight> send packets to and receive packets from various poletops <highlight><bold>14</bold></highlight>. The poletops <highlight><bold>14</bold></highlight> send and receive packets to and from a poletop <highlight><bold>14</bold></highlight> at Node A that is connected to the wired infrastructure backbone <highlight><bold>16</bold></highlight>. Each group <highlight><bold>16</bold></highlight>, <highlight><bold>18</bold></highlight>, <highlight><bold>20</bold></highlight>, <highlight><bold>22</bold></highlight> of radios participating in a PRP group is logically associated by communication with a common server at Node A, Node B, Node C and Node D (as circled). One of the PRP groups <highlight><bold>22</bold></highlight> can be defined as consisting of only poletop units associated with a server at node A. The node with contention above an indeterminate threshold representing congestion is the controlling node for its PRP group; all of the other radios must request its service in order to be functional. In the other three groups, the poletop (at nodes B, C, or D) the nodes are also under contention and the radios in the respective associated PRP groups request service. Thus a node may be a controlling node in one PRP group, while at the same time it could be a requesting node in another PRP group. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a state diagram of a method according to the invention. There are three basic states or modes involved in the implementation. First a nonPRP mode <highlight><bold>1</bold></highlight>, in which any node detects that it may benefit from the increased overhead of congestion management protocol (transition Step A). It may determine this from a variety of sources, such as client nodes that can report their &ldquo;success rate&rdquo; or &ldquo;desperation index&rdquo; to the contended node (when they finally get to give the node some data). Alternatively, a congested node can determine for itself that the level of traffic it is carrying must be generating delays and enter the StartPRP mode (state) itself. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> Once it is determined that the PRP mode is appropriate, the congested node goes into the StartPRP state <highlight><bold>2</bold></highlight> and advertises its changed state via any mechanisms it has available to do so (transition Step B). These means include: </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> Broadcast packets that indicate state, timing, and traffic level. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Bits set in the header of packets exchanged in the course of &lsquo;normal&rsquo; communication. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> &ldquo;Assumptions&rdquo; made by other nodes in response to local failures generated and tabulated in the course of data traffic handling. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Thereupon, the node is in the PRP state <highlight><bold>3</bold></highlight> and the PRP mechanism is used to resolve contention and manage client radios in the vicinity (transition Step C). </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> When a node determines that it is no longer under contention, e.g., it receives no polls after a poll request or it determines that the requested services can be handled more efficiently without PRP, it exits the PRP state and returns to the NonPRP state <highlight><bold>1</bold></highlight> (via transition Step D). </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a time-flow diagram of a method of the invention showing in greater detail the exchange of packets between the various nodes when the contended node is in PRP state <highlight><bold>3</bold></highlight>. When in the PRP state <highlight><bold>3</bold></highlight>, a node broadcasts a Poll Request Packet (PRP) to solicit polls from the clients that actively have traffic to offer (Step C<highlight><bold>1</bold></highlight>). Since client nodes can vary widely in number and in traffic profiles, the Poll Request Protocol &lsquo;master&rsquo; can dynamically assign bandwidth to clients for poll requests and data packets under control of its particular selection algorithms. The number of mini-slots for Polls can be increased and distributed among different classes of traffic. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The contending nodes that have not been scheduled to send data in the PRP packet send Polls to the master node requesting to send a data packet. The Polls are targeted to fall into one of several mini-slots in time after the end of the PRP packet according to the algorithms dynamically specified in the PRP packet. Several mini-slots may be assigned to a particular class of clients by the PRP master to reduce contention for that class of clients. The clients randomly target the polls into one of the designated minislots. (Step C<highlight><bold>2</bold></highlight>). </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The PRP packet and, after receipt of the polls, the Contention Resolution Packet (CRP), lay out the rules of transmission among nodes desiring to transmit to the PRP master (Step C<highlight><bold>3</bold></highlight>). These are heard by all and provide useful client-client transmission information. &lsqb;Note that a PRP master may be (and usually will be) a client to another PRP master.&rsqb;</paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> This mechanism has many advantages. By this means the client/master communications are synchronized, communication in the affected community of radios is freed of collisions, and priorities can be directly enforced so that high priority exchanges are completed before lower priority traffic is started. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Specifically, transmit/receive phases are enabled (Step C<highlight><bold>4</bold></highlight>). In this mode, all traffic to be sent to the master can be consecutively sent before the master radio node transmits data back. This mode permits reduction or elimination of &ldquo;turn around time&rdquo; as the clients and master radios switch back and forth between transmit and receive. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> During this mode, availability and traffic load are announced, as well as acknowledgments for correctly received data packets (Step C<highlight><bold>5</bold></highlight>). Thereby, the &ldquo;losers&rdquo; of the polling competition for the attention of the master radio have useful knowledge by which they can decide whether to select another node for forwarding their traffic. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The clients that received data packets as schedule in the CR Packet, transmit their scheduled acknowledgments of the received data packets back to the controlling node (Step C<highlight><bold>6</bold></highlight>). Thus a complete PRP cycle is completed and data is transferred between a controlling node under contention to a plurality of requesting nodes in a fair and efficient manner. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> The node then determines if it is still in poll-request mode, if not, it proceeds to transition Step D, if it is still under contention, for instance, multiple clients have just requested to transmit data to it in this PRP cycle, then the node stays in PRP mode. Before starting a new PRP cycle, the node can attempt to send data that it has that was not destined to any of the requesting clients. (This data would have been sent in Step C<highlight><bold>4</bold></highlight>). For instance, some of the data that a requesting client has just sent may be forwarded further along in the network. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The whole PRP cycle then repeats, starting at step C <highlight><bold>1</bold></highlight>. </paragraph>
</section>
<section>
<heading lvl="1">Description of Fields in Packets </heading>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> The Poll Request Protocol (PRP) has been designed with a number of optional fields: </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> The PRP packet itself can be sent upon return from completion of off-channel traffic carrying (sent as an &ldquo;I&apos;m back&rdquo; packet). </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> The PRP master allocates its resources by specifying the number and permitted occupants of the (smaller) poll minislots. These minislots are short periods in time where specific nodes or classes of nodes are permitted to poll the PRP master. By specifying the number of these slots and their possible occupants, the PRP master can arbitrarily refine the performance of the radios by using it as a forwarding or terminus link. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> The client radios receive the results of their polls in a subsequent contention resolution packet. This form of contention resolution packet has timing and frequency information in it that the contending clients must follow if they are to utilize the PRP master. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference>A-<highlight><bold>5</bold></highlight>E is a flow chart of the invention showing more detail of the states. The node enters the PRP mode (State <highlight><bold>3</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, Step <highlight><bold>5</bold></highlight>A-<highlight><bold>1</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5A</cross-reference>) and detects for packets on the nonPRP send queue (<highlight><bold>5</bold></highlight>A-<highlight><bold>2</bold></highlight>); if yes, it sends the nonPRP data (<highlight><bold>5</bold></highlight>A-<highlight><bold>3</bold></highlight>) and proceeds; otherwise it simply proceeds to determine the number of minislots required for pollers (&ldquo;clients&rdquo;) (<highlight><bold>5</bold></highlight>A-<highlight><bold>4</bold></highlight>). The minislots are timeslots allocated during which clients are permitted to contact the node. The node then determines if any of the pollers are already assigned minislots (<highlight><bold>5</bold></highlight>A-<highlight><bold>5</bold></highlight>). Next the node determines its average load for the past time period (<highlight><bold>5</bold></highlight>A-<highlight><bold>6</bold></highlight>) to allow the use of an algorithm to advertise the allocation of minislots. It then constructs a Broadcast Request Packet (<cross-reference target="DRAWINGS">FIG. 3A</cross-reference>) (<highlight><bold>5</bold></highlight>A-<highlight><bold>7</bold></highlight>) and thereupon sends the Broadcast Request Packet (<highlight><bold>5</bold></highlight>A-<highlight><bold>8</bold></highlight>). </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>B, the node thereafter listens during a contention minislot for a Poll Packet (<cross-reference target="DRAWINGS">FIG. 3B</cross-reference>) (Step <highlight><bold>5</bold></highlight>B-<highlight><bold>1</bold></highlight>) and if it does hear a Poll Packet (<highlight><bold>5</bold></highlight>B-<highlight><bold>2</bold></highlight>) it records the Poll Packet (<highlight><bold>5</bold></highlight>B-<highlight><bold>3</bold></highlight>), increments a first counter of the number of minislots listened to <highlight><bold>5</bold></highlight>B-<highlight><bold>4</bold></highlight>). If it does not hear a Poll Packet, it merely increments the counter value (<highlight><bold>5</bold></highlight>B-<highlight><bold>4</bold></highlight>). If it senses that the counter value is equal to the number of contention minislots, it continues on (<highlight><bold>5</bold></highlight>B-<highlight><bold>5</bold></highlight>); otherwise it continues to listen (<highlight><bold>5</bold></highlight>B-<highlight><bold>1</bold></highlight>). </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>C, it then continues by listening during one or more reserved minislots for a Poll Packet (<cross-reference target="DRAWINGS">FIG. 3B</cross-reference>) (Step <highlight><bold>5</bold></highlight>C-<highlight><bold>1</bold></highlight>) and if it hears a Poll Packet (<highlight><bold>5</bold></highlight>C-<highlight><bold>2</bold></highlight>) responds as before by recording the Poll Packet (<highlight><bold>5</bold></highlight>C-<highlight><bold>3</bold></highlight>), incrementing a second counter (<highlight><bold>5</bold></highlight>C-<highlight><bold>4</bold></highlight>) and tests to see if the second counter value equals the number of reserved minislots (<highlight><bold>5</bold></highlight>C-<highlight><bold>5</bold></highlight>), repeating the process until it does equal. When it continues, it constructs a Contention Resolution Packet (<cross-reference target="DRAWINGS">FIG. 3C</cross-reference>) (Step <highlight><bold>5</bold></highlight>C-<highlight><bold>6</bold></highlight>), which is used to carry the sending transmit start time to clients and pollers. It then broadcasts this Contention Resolution Packet (<highlight><bold>5</bold></highlight>C-<highlight><bold>7</bold></highlight>). </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the node next sets up and triggers a timer to set the maximum listening time for the end of an expected variable length data packet (<cross-reference target="DRAWINGS">FIG. 2</cross-reference> at C<highlight><bold>4</bold></highlight>) (Step <highlight><bold>5</bold></highlight>D-<highlight><bold>1</bold></highlight>). This could be a timer for each data packet or it could be a timer for all expected packets in a sequence. The node then listens for the Data Packets (<highlight><bold>5</bold></highlight>D-<highlight><bold>2</bold></highlight>) and if it doesn&apos;t hear one (<highlight><bold>5</bold></highlight>D-<highlight><bold>3</bold></highlight>) it checks for time expiration (<highlight><bold>5</bold></highlight>D-<highlight><bold>6</bold></highlight>) and either repeats or times out. If it hears a Data Packet, it records the Data Packet (<highlight><bold>5</bold></highlight>D-<highlight><bold>4</bold></highlight>) and checks to see if this is the last Data Packet to listen for (<highlight><bold>5</bold></highlight>D-<highlight><bold>5</bold></highlight>). Once it has completed listening, it sends the Designated Data Packets directed to the clients (<highlight><bold>5</bold></highlight>D-<highlight><bold>7</bold></highlight>), then checks all received packets for correctness, deleting those that are incorrect (<highlight><bold>5</bold></highlight>D-<highlight><bold>8</bold></highlight>) before continuing. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>E, the node thereafter constructs a single Broadcast Acknowledgment Packet (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) which carries an acknowledgment for every correctly received packet, plus designating a set of reserved minislots for each client wishing to reply with more data (Step <highlight><bold>5</bold></highlight>E-<highlight><bold>1</bold></highlight>), and it broadcasts this packet (<highlight><bold>5</bold></highlight>E-<highlight><bold>2</bold></highlight>), thereafter listing for receive acknowledgments (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) (Step <highlight><bold>5</bold></highlight>E-<highlight><bold>3</bold></highlight>). For each acknowledged packet, it deletes the corresponding packet from its send queue (<highlight><bold>5</bold></highlight>E-<highlight><bold>4</bold></highlight>) so it will not be resent, places each received packet that is destined for a poller in the PRPsend queue (<highlight><bold>5</bold></highlight>E-<highlight><bold>5</bold></highlight>), and then it places all other packets in the nonPRPsend queue (<highlight><bold>5</bold></highlight>E-<highlight><bold>6</bold></highlight>). If there is nothing placed in these queues as checked (<highlight><bold>5</bold></highlight>E-<highlight><bold>7</bold></highlight>), it exits the PRP mode (state <highlight><bold>3</bold></highlight> <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, Step <highlight><bold>5</bold></highlight>E-<highlight><bold>8</bold></highlight>); otherwise it repeats the process from the beginning of the sequence. (<cross-reference target="DRAWINGS">FIG. 5E</cross-reference> to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>A, Step <highlight><bold>5</bold></highlight>E-<highlight><bold>9</bold></highlight>). </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Referring to FIGS. <highlight><bold>6</bold></highlight>A-<highlight><bold>6</bold></highlight>C, the flow chart for a PRP client is described. Its state diagram is not shown, but the states are evident as being correspondence to the state diagram of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. In <cross-reference target="DRAWINGS">FIG. 6</cross-reference>A, the client node enters a PRP state corresponding to the same state as the server node (Step <highlight><bold>6</bold></highlight>A-<highlight><bold>1</bold></highlight>), sets up a timer for PRP timeout on the server node (<highlight><bold>6</bold></highlight>A-<highlight><bold>2</bold></highlight>) and monitors for timer expiration (<highlight><bold>6</bold></highlight>A-<highlight><bold>3</bold></highlight>). If the timer expires, the client leaves the PRP state corresponding to the state in the server node (<highlight><bold>6</bold></highlight>A-<highlight><bold>4</bold></highlight>). </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> Until the timer expires, the client listens for the (<highlight><bold>6</bold></highlight>A-<highlight><bold>5</bold></highlight>) and if it doesn&apos;t hear it, continues with other work (<highlight><bold>6</bold></highlight>A-<highlight><bold>10</bold></highlight>). When it hears the Broadcast Poll Request Packet, it checks for a reserved contention minislot for itself (<highlight><bold>6</bold></highlight>A-<highlight><bold>7</bold></highlight>). Upon finding none it sends a Poll Packet in any random contention minislot (<highlight><bold>6</bold></highlight>A-<highlight><bold>8</bold></highlight>) and continues. Otherwise it sends a Poll Packet in the specified reserved minislot (<highlight><bold>6</bold></highlight>A-<highlight><bold>9</bold></highlight>) and continues. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>B, the client then listens for the Broadcast response Packet (<highlight><bold>6</bold></highlight>B-<highlight><bold>1</bold></highlight>) and finding none (<highlight><bold>6</bold></highlight>B-<highlight><bold>2</bold></highlight>) continues; otherwise it checks to see if its own data was requested (<highlight><bold>6</bold></highlight>B-<highlight><bold>3</bold></highlight>) and if so, sends packets at the specified time (<highlight><bold>6</bold></highlight>B-<highlight><bold>4</bold></highlight>). It then determines if the data packets are to be sent to it (<highlight><bold>6</bold></highlight>B-<highlight><bold>5</bold></highlight>); if not it continues; otherwise it listens for the data packets at the specified time (<highlight><bold>6</bold></highlight>B-<highlight><bold>6</bold></highlight>). It also tests for the reception of data packets designated for it (Step <highlight><bold>6</bold></highlight>B-<highlight><bold>7</bold></highlight>) and proceeds with the processes. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Referring to <highlight><bold>6</bold></highlight>C, if Data Packets are heard, it prepares a Receive Acknowledgment Packet(<highlight><bold>6</bold></highlight>C-<highlight><bold>1</bold></highlight>) and listens for a broadcast acknowledgment from the server (<highlight><bold>6</bold></highlight>C-<highlight><bold>2</bold></highlight>). Continuing it checks for whether it heard the Broadcast Acknowledgment of the sent packets (<highlight><bold>6</bold></highlight>C-<highlight><bold>3</bold></highlight>) and if heard, deletes the acknowledged packets from its own send queue (<highlight><bold>6</bold></highlight>C-<highlight><bold>4</bold></highlight>) and sends the receive acknowledgment packet (<highlight><bold>6</bold></highlight>C-<highlight><bold>5</bold></highlight>). Checking to see if any packets are left to be sent by the server (<highlight><bold>6</bold></highlight>C-<highlight><bold>6</bold></highlight>), if yes it reverts to the timer setup (<highlight><bold>6</bold></highlight>A-<highlight><bold>2</bold></highlight>) to repeat the process. If not, it checks for any further expected data to transfer (<highlight><bold>6</bold></highlight>C-<highlight><bold>7</bold></highlight>) and either reverts as above or if nothing further is expected, leaves the PRPstate with the server (<highlight><bold>6</bold></highlight>C-<highlight><bold>8</bold></highlight>). </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> The invention has now been explained with respect to specific embodiments. Other embodiments will be apparent to those of ordinary skill in the art. It is therefor not intended that the invention be limited, except as indicated by the appended claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for requesting access to a congested communication node in a mesh communication packet network comprising: 
<claim-text>withholding, at a requesting node, requests for access to said congested communication node while awaiting receipt, at said requesting node, of a poll request packet containing a first datum of information indicating availability of a communication slot; </claim-text>
<claim-text>broadcasting from said congested communication node said poll request packet when said congested communication node is ready to provide services; and thereafter </claim-text>
<claim-text>directing from said requesting node a poll packet to request access to the congested node. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the controlling node is a more congested node, the method further comprising 
<claim-text>broadcasting from the controlling node a packet which is operative to request poll signals from those nodes desiring resources of the controlling node; </claim-text>
<claim-text>sending from the controlling nodes requests of optimally transmitting data between the controlling node and the requesting nodes; </claim-text>
<claim-text>broadcasting a control packet with information from the congested node that directs the requesting nodes when to send and receive data; and thereafter </claim-text>
<claim-text>causing each individual requesting node to transmit local data in turn to the controlling node. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> farther including thereafter: 
<claim-text>scheduling each individual requesting node which receives data from the controlling node, if such data is available, as scheduled by the controlling node; thereafter </claim-text>
<claim-text>receiving at each individual requesting node acknowledgments of corresponding individually transmitted data packets from the controlling node; and thereafter </claim-text>
<claim-text>transmitting from each individual requesting node further acknowledgments to receipt of data if data has been previously transmitted to it by the controlling node. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference> further comprising: 
<claim-text>purging data packets from a transmitting node upon receipt of acknowledgment of successful reception of said data packets. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. An apparatus for requesting access to a congested communication node in a mesh communication packet network comprising: 
<claim-text>means for withholding, at a requesting node, requests for access to said congested communication node while awaiting receipt, at said requesting node, of a poll request packet containing a first datum of information indicating availability of a communication slot; </claim-text>
<claim-text>broadcasting means for broadcasting from said congested communication node said poll request packet when said congested node is ready to provide services; and thereafter </claim-text>
<claim-text>means at said requesting node for directing from said requesting node a poll packet to request access to the congested node. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the controlling node is a more congested node and wherein the controlling node is operative to broadcast a packet requesting poll signals from the nodes desiring resources of the controlling node and the controlling node is operative to have sent the requests of optimally transmitting data between the controlling node and the requesting nodes, further comprising: 
<claim-text>means operative to broadcast a control packet from the congested node that directs the requesting nodes when to send and receive data packets; and </claim-text>
<claim-text>means to cause thereafter each individual requesting node to transmit its data packets in turn to the controlling node. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference> further including: 
<claim-text>means at said controlling node for scheduling transmitting times for each individual requesting node which receives data from the controlling node, if such data is available; </claim-text>
<claim-text>means for receiving at each individual requesting node acknowledgments of corresponding individually transmitted data packets from the controlling node; and </claim-text>
<claim-text>means for transmitting from each individual requesting node further acknowledgments to receipt of data if data has been previously transmitted to it by the controlling node. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> further comprising: 
<claim-text>means for purging data packets from a transmitting node upon receipt of acknowledgment of successful reception of said data packets.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002442A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002442A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002442A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002442A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002442A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002442A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002442A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002442A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002442A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002442A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002442A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002442A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002442A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
