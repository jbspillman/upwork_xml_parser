<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002069A1-20030102-D00000.TIF SYSTEM "US20030002069A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002069A1-20030102-D00001.TIF SYSTEM "US20030002069A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002069A1-20030102-D00002.TIF SYSTEM "US20030002069A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002069A1-20030102-D00003.TIF SYSTEM "US20030002069A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002069A1-20030102-D00004.TIF SYSTEM "US20030002069A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002069A1-20030102-D00005.TIF SYSTEM "US20030002069A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002069A1-20030102-D00006.TIF SYSTEM "US20030002069A1-20030102-D00006.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002069</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09895093</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F003/12</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>358</class>
<subclass>001150</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>710</class>
<subclass>015000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Print manager having a user interface for specifying how documents are directed to print devices</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Kulvir</given-name>
<middle-name>Singh</middle-name>
<family-name>Bhogal</family-name>
</name>
<residence>
<residence-us>
<city>Fort Worth</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Nizam</given-name>
<family-name>Ishmael,</family-name>
<name-suffix>JR.</name-suffix>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Javid</given-name>
<family-name>Jameossanaie</family-name>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Mandeep</given-name>
<middle-name>Singh</middle-name>
<family-name>Sidhu</family-name>
</name>
<residence>
<residence-us>
<city>Plfugerville</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>INTERNATIONAL BUSINESS MACHINES CORPORATION</organization-name>
<address>
<city>ARMONK</city>
<state>NY</state>
<country>
<country-code>US</country-code>
</country>
</address>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>Jeffrey L. Streets</name-1>
<name-2>Suite 355</name-2>
<address>
<address-1>13831 Northwest Freeway</address-1>
<city>Houston</city>
<state>TX</state>
<postalcode>77040</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">An operating system provides an interface that allows the user to assign printers for use when a print job having one or more specific attributes has been submitted. The one or more specific attributes of a print job may include the identity of the application generating the print job, the file type being printed, one or more features of the print job, the presence or absence of color, the page size, the number of pages, the draft quality specified, the paper stock selected, and combinations thereof. The attributes of the print job are identified by the operating system after receiving the print job, and the print jobs are directed to the appropriate printer by looking up the identified attributes in the user-customized printer assignments. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This invention generally relates to improvements in operating system software for printing documents, namely the identification and handling of print jobs on the basis of color content in the print jobs. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of the Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> One of the most important aspects of a modern computer system is the ability to generate a &ldquo;hard&rdquo; copy of textual information or graphics that can be manipulated by the computer, visually displayed and stored. In order to accomplish this task, a computer system generally includes one or more printing devices that are electrically connected to the computer system and controlled by it in order to generate a permanent image on a selected medium. Examples of printing devices in common use are dot matrix, ink jet and laser printers that fix permanent images on paper under control of the computer. Although paper is the most common medium, other media are often used, such as photographic film. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Print characteristics, such as resolution, number of colors and page size, may vary greatly from one print job to the next as a result of limitations of the application generating the print job, objectives of the user initiating the print job, and the capabilities of the available printers. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> In order to print a document that is displayed on the monitor or stored within the memory, several actions must take place. First, since the print medium generally has a fixed size, the printable information must be divided into pieces that are small enough to fit on the selected medium, a process that is called pagination. In addition, the information may need to be reformatted from the format in that it is either displayed or stored into a format that is suitable for controlling the printing device to actually perform the printing on the medium. The reformatting in this latter step may include the insertion of control commands into the printable information in order to control the printing device. These added commands may, for example, include such commands as carriage returns, line feeds, form feeds, spaces and font information, that format the printable information. The reformatting may also include a conversion step in which a graphical display is converted into the form used by the printing device. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The pagination and reformatting necessary to convert the printable information into a form that can be printed on a given printing device is generally performed by software programs running within the computer system. Software programs operating on a computing system generally can be categorized as either operating systems or application programs. Operating systems are usually specific to a type of computer system and consist of a collection of utility programs that enable the computer system to perform basic operations, such as storing and retrieving information on a peripheral disk memory, displaying information on an associated video display, performing rudimentary file operations including the creation, naming and renaming of files and, in some cases, performing diagnostic operations in order to discover or recover from malfunctions. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> By itself, the operating system generally provides only very basic functions and must be accompanied by an application program. The application program interacts with the operating system to provide much higher-level functionality and a direct interface with the user. During the interaction between the application program and the operating system, the application program typically makes use of operating system functions by sending a series of task commands to the operating system that then performs the requested tasks. For example, the application program may request that the operating system store particular information on the computer disk memory or display information on the video display. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Regardless of whether the printer software is provided by the application program, the operating system, or some combination, the functionality of the printer software, and consequently the functionality of the printer, has been limited. In particular, printer software has been substantially limited to addressing the basic communications of formatting and pagination for a particular printer, or the notification of printer status or print job status to the user. While these basic functions are useful or necessary, they do not provide the user with some desired print management capabilities. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Furthermore, a modern computer network may have access to a plurality of different print resources, each print resource having its own print settings that establish the features and characteristics of the print resources. It can be difficult, if not impossible, for a user to determine which print resource is the optimal one to print a particular document without actually performing a print operation. In addition, when print data are to be distributed and printed, optimal distributed print processing of the print data cannot often be performed. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> U.S. Pat. No. 5,906,442 discloses a method for automatically setting an optimal print environment for print data in a print control apparatus without making the user recognize it. The method includes outputting data to a plurality of print control apparatuses via a network, analyzing test data on the basis of print setting information, obtaining analysis results of test data from a plurality of print control apparatuses, comparing each of the analysis results obtained, and selecting one of the plurality of print control apparatuses which is an optimal print control apparatus for printing the data to be outputted. This &ldquo;querying&rdquo; process consumes valuable network resources, since at least a portion of each print job is sent to each print control apparatus accessible over the network and analysis results must be returned and compared before a print control apparatus can be selected. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> A Xerox Disclosure Journal article to P. F. Morgan (vol. 16, No. 6, November/December 1991) entitled &ldquo;Integration of Black Only and Color Printers&rdquo; delivers portions of a job to a plurality of printers on the basis of page level information. In particular, a job is separated on the basis of color so that the black/white part of the job is delivered to a black/white printing system and the color part of the job is delivered to a full process color machine. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Therefore, there is a need for a method or system providing more print management capabilities. It would be desirable to have a method or system that identifies one or more attributes of a print job or a portion of a print job and directs the print job to an appropriate print device. More particularly, it would be desirable to have an operating system that accommodates user preferences for determining how print jobs are distributed to a plurality of printers. It would be most desirable if the operating system allowed for document type instructions, file type instructions, and identification of color content. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The present invention provides a method for selecting a printer for printing a print job. The method comprises identifying one or more attributes of the print job and directing, using user-defined instructions, the print job to a printer capable of handling the one or more attributes. Preferably, the print jobs are generated using one or more application programs running in a computer that is in communication with the printer. The one or more attributes are selected from file type, application identity, color content, print resolution, page size and combinations thereof. Optionally, the method further comprises entering the user-defined instructions through a graphical user interface. More particularly, the method may further comprise identifying the available printers and assigning one or more of the available printers for use with print jobs having the one or more attributes. The user-defined instructions are preferably then stored in memory, perhaps in the form of a table or database, for access by the printer handler. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The foregoing and other objects, features and advantages of the invention will be apparent from the following more particular description of a preferred embodiment of the invention, as illustrated in the accompanying drawings wherein like reference numbers represent like parts of the invention.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a computer system on which the present invention may be carried out. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of modified computer system in which the operating system controls operation of a print device. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram of the information paths by which a print job is channeled to a print device. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flowchart illustrating the steps of pausing a first print job or advancing a second print job in accordance with a preferred embodiment. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a table illustrating an exemplary database file structure that the printer handler would utilize for routing print jobs to the available printers. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flowchart illustrating the steps for associating the selected attribute bits in a print job with a printer identified as having the targeted capabilities in accordance with a preferred embodiment. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a personal computer, such as the IBM PS/<highlight><bold>2</bold></highlight> or Macintosh computer, having a typical hardware configuration that is suitable for carrying out the present invention. The computer <highlight><bold>100</bold></highlight> is controlled by a central processing unit <highlight><bold>102</bold></highlight>, which may be a conventional microprocessor; a number of other units, all interconnected via a system bus <highlight><bold>108</bold></highlight>, are provided to accomplish specific tasks. Although a particular computer may only have some of the units illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> or may have additional components not shown, most computers will include at least the units shown. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Specifically, computer <highlight><bold>100</bold></highlight> includes a random access memory (RAM) <highlight><bold>106</bold></highlight> for temporary storage of information, a read only memory (ROM) <highlight><bold>104</bold></highlight> for permanent storage of the computer&apos;s configuration and basic operating commands and an input/output (I/O) adapter <highlight><bold>110</bold></highlight> for connecting peripheral devices such as a disk unit <highlight><bold>113</bold></highlight> and printer <highlight><bold>114</bold></highlight> to the bus <highlight><bold>108</bold></highlight>, via cables <highlight><bold>112</bold></highlight> and <highlight><bold>115</bold></highlight>, respectively. A user interface adapter <highlight><bold>116</bold></highlight> is also provided for connecting input devices, such as a keyboard <highlight><bold>120</bold></highlight>, and other known interface devices including mice, speakers and microphones to the bus <highlight><bold>108</bold></highlight>. Visual output is provided by a display adapter <highlight><bold>118</bold></highlight> that connects the bus <highlight><bold>108</bold></highlight> to a display device <highlight><bold>122</bold></highlight> such as a video monitor. The workstation is controlled and coordinated by an operating system resident on the workstation. An example of this operating system is the Microsoft Windows&reg; operating system. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows a schematic overview of a computer system, shown generally as a dotted box <highlight><bold>200</bold></highlight>, having an application program <highlight><bold>202</bold></highlight> and an operating system <highlight><bold>206</bold></highlight> to control and coordinate the operations of the computer. Application program <highlight><bold>202</bold></highlight> communicates with operating system <highlight><bold>206</bold></highlight> as indicated by arrow <highlight><bold>204</bold></highlight> to print information. This dual program system is used on many types of computers systems ranging from mainframes to personal computers. While the exact manner in which an operating system handles print jobs may vary between operating systems, the operating system illustrated in <cross-reference target="DRAWINGS">FIGS. 2 and 3</cross-reference> is a suitable example and should not be taken as limiting the scope of the invention. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The printing interface <highlight><bold>224</bold></highlight> responds to a series of simple commands generated by application program <highlight><bold>202</bold></highlight> in order to perform various formatting and pagination functions. The formatted, printable information is then transmitted to a grafport <highlight><bold>210</bold></highlight> as indicated schematically by arrow <highlight><bold>226</bold></highlight>. While it is possible for application program <highlight><bold>202</bold></highlight> to communicate directly with grafport <highlight><bold>210</bold></highlight>, it is not contemplated that most applications will do this unless special procedures are needed. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> In any case, the information flows through grafport <highlight><bold>210</bold></highlight>, and as indicated by arrow <highlight><bold>212</bold></highlight>, is provided to a printer handler <highlight><bold>214</bold></highlight>. Printer handler <highlight><bold>214</bold></highlight> is similar to what is known in the art as a &ldquo;printer driver&rdquo;. However, the printer handler is &ldquo;intelligent&rdquo; and offers some additional capabilities that will be described herein. Essentially, printer handler <highlight><bold>214</bold></highlight> processes the incoming data stream indicated by arrow <highlight><bold>212</bold></highlight> and adds the necessary printer commands to control the associated printer schematically illustrated as printer <highlight><bold>222</bold></highlight>. The reformatted data is provided, as indicated by arrow <highlight><bold>216</bold></highlight>, to a printer port <highlight><bold>218</bold></highlight> that converts the data into electrical signals that are sent over cable <highlight><bold>220</bold></highlight> to printer <highlight><bold>222</bold></highlight>. Printer <highlight><bold>222</bold></highlight> usually contains an &ldquo;imaging engine&rdquo; which is a hardware device or a ROM-programmed computer which takes the incoming information stream and converts it into the electrical signals necessary to drive the actual printing elements. The result is a &ldquo;hard copy&rdquo; output on the selected medium. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The actual mechanism by which a document generated by the printing interface <highlight><bold>224</bold></highlight> is transmitted to printer <highlight><bold>222</bold></highlight> is shown in more detail in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. In particular, printing interface <highlight><bold>224</bold></highlight> (as will hereafter be described in detail) generates an entity called a document folio shown schematically as document folio <highlight><bold>300</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. The document folio may consist of text, graphics or a combination of the two, all formatted and arranged in a manner specified by the application program. The document folio information is provided, as indicated by arrow <highlight><bold>312</bold></highlight>, to a print channel <highlight><bold>302</bold></highlight>. Print channel <highlight><bold>302</bold></highlight> is an object that is created to transport the information to an appropriate printer. Print channel uses a print job description and a printer identification provided by the application program to transmit the printable information to the appropriate printer. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> More specifically, after the print channel <highlight><bold>302</bold></highlight> receives a printing job, it transmits the printable information to a spooler program <highlight><bold>318</bold></highlight> as indicated by arrow <highlight><bold>314</bold></highlight>. Spooler <highlight><bold>318</bold></highlight> receives the incoming information stream and stores it, in incoming order, in an intermediate storage location <highlight><bold>322</bold></highlight> as indicated by arrow <highlight><bold>320</bold></highlight>. Print channel <highlight><bold>302</bold></highlight> then sends a notification to a print server program <highlight><bold>306</bold></highlight> via a link <highlight><bold>304</bold></highlight>, which notification informs print server program <highlight><bold>306</bold></highlight> that a new print job exists. The print server program <highlight><bold>306</bold></highlight> is a standard program that monitors all print jobs that have been created and also checks the available printers to determine their status. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Once a print job has been completely spooled or stored in intermediate storage <highlight><bold>322</bold></highlight>, the print server <highlight><bold>306</bold></highlight> notifies a printer handler <highlight><bold>310</bold></highlight> by means of a link <highlight><bold>308</bold></highlight>. The printer handler <highlight><bold>310</bold></highlight> is a type of printer driver that controls and drives a specific printer. The printer handler&apos;s purpose is to convert text and graphic information into printer readable form for any particular printer type. Typically, a printer handler can only process one print job and any other jobs that are created and directed towards the associated printer are queued for later processing. The printer handler contains a despooler program <highlight><bold>316</bold></highlight> that retrieves the spooled data from intermediate storage <highlight><bold>322</bold></highlight> (as indicated by arrow <highlight><bold>324</bold></highlight>) and provides the information, as indicated by arrow <highlight><bold>326</bold></highlight>, to an imaging engine <highlight><bold>332</bold></highlight>. The imaging engine <highlight><bold>332</bold></highlight> converts the incoming data stream into the command signals that are necessary to drive the printing elements to produce the final printed document. The commands, indicated schematically by arrow <highlight><bold>330</bold></highlight>, are provided to the actual print device indicated by box <highlight><bold>328</bold></highlight> for printing. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Once a print job is completely printed, the printer handler <highlight><bold>310</bold></highlight> checks its queue for another print job and, if a job is present, begins processing it. Alternatively, if there are no new print jobs to process, the printer handler becomes inactive. After a particular print job is completed, the information stored in intermediate storage in <highlight><bold>322</bold></highlight> is deleted and the storage is reclaimed. As an option, the storage can be retained until a user explicitly deletes the storage. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The desktop printer is the only user visible part of the printer. All user actions (commands) related to the printer are handled by the operating system. When a document is to be printed, it is dragged to the printer icon (or the Print item is selected from the system wide menu). This starts the printing process by first spooling the document by packaging it as a print job. Spooling is a process of streaming the graphic description of a document to the disk so it can be imaged later (possibly in a different task) to the actual printing device represented by the desktop printer. The spooled print job is stored in the printer&apos;s persistent data that consists mainly of the print job queue and the printer&apos;s dynamic configuration. After the print job is spooled, the printer handler is sent a message that there is a print job for it to process. The printer handler picks up the print job, despools it, converts it to the printer&apos;s native imaging model and sends it to the printer. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> There is one printer handler task per physical printer. The printer handler consists of a dispatcher and an imaging task. The dispatcher is a task that handles requests to print jobs and sends them to the imaging task so that the server task is free to handle other requests (more print jobs, status queries, notification, etc.). The printer handler architecture allows for more than one task working on print jobs. Instead of having only one imaging task, the printer handler dispatcher can have a pool of tasks that access the job queue and pick up a job to process. This way, the printer handler can be processing multiple jobs at the same time. If the target printer can accept only one job at a time, only one imaging task will be talking to it at a given time. The multiple imaging tasks model works well when the destination is a spooler that can accept more than one job at a time. Each job in the queue knows the task that is processing it so that functions like &ldquo;abort&rdquo; and &ldquo;pause&rdquo; will operate properly. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> Referring still to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the imaging engine <highlight><bold>332</bold></highlight> of the printer handler <highlight><bold>310</bold></highlight> for a particular printer receives one job at a time. The printer handler uses the developer customizable imaging engine <highlight><bold>332</bold></highlight> to convert the source description of the document into a stream of data targeted for the particular print device <highlight><bold>328</bold></highlight> that the printer handler is associated with. The imaging engine <highlight><bold>332</bold></highlight> obtains a spool stream from the print job and passes it to the printer device object <highlight><bold>328</bold></highlight>. The printer device extracts individual pages out of the print run and converts the individual pages into the printer&apos;s imaging model. The imaging objects also perform the task of mapping the attributes requested by the print job (page size, media, color, fonts, etc.) to features actually available on the printer. This processing is achieved by consulting the printer&apos;s dynamic state maintained by the printer handler <highlight><bold>310</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The printer handler is typically responsible for keeping track of the printer&apos;s persistent data, in particular, its job queue and dynamic state. The dynamic state contains things like the current media/tray setting, current color mode (2, 3 or 4 colors), etc. The printer state, which is part of the printer model&apos;s store, is updated when the printer handler images a job to it and finds that the state has changed. This scheme works when the printer handler has two-way communication available with the printer. In cases when two-way communication is not available, the printer handler will rely on the printer&apos;s static configuration. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Networked printers are basically the same as a local printer except that the communications channel must use a specific network protocol. The present invention can be implemented on printers using protocols based on NPA (Network Printing Architecture), TCP/IP, PAP protocol, and Novell IPX based print servers. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> In accordance with the present invention, the operating system provides an interface, preferably a graphical user interface, which allows the user to custom assign printers for use when a print job having one or more specific attribute has been submitted. The one or more specific attributes of a print job may include, without limitation, the identity of the application generating the print job, the file type being printed, one or more features of the print job, the presence or absence of color, the page size, the number of pages, the draft quality specified, the paper stock selected, and combinations thereof. The attributes of the print job are identified by the operating system after receiving the print job, and the print jobs are directed to the appropriate printer by looking up the identified attributes in the user-customized printer assignments. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flowchart illustrating steps executed by the operating system to select print job attributes that shall be used to select an available printer and to assign an available printer to each of the selected print job attributes. In state <highlight><bold>400</bold></highlight>, the operating system determines whether the user or system administrator desires to setup printer assignments. If the user does not desire to setup printer assignments, then the process exits in state <highlight><bold>402</bold></highlight>. To setup printer assignments, state <highlight><bold>404</bold></highlight> identifies the printers that are available to the computing system, such as a network. In state <highlight><bold>406</bold></highlight>, the operating system identifies a list of potential print job attributes, which list may be a standard list. In state <highlight><bold>408</bold></highlight>, it is determined if the user or system administrator desires to customize printer assignments or proceed to state <highlight><bold>410</bold></highlight> where default attribute-printer assignments are made or installed. In state <highlight><bold>412</bold></highlight>, the customized printer assignments begin by allowing the user to select the print job attributes that are desired to be used as the basis for routing print jobs to the printers. In state <highlight><bold>414</bold></highlight>, the user assigns an available printer to each of the selected print job attributes or combinations of attributes. The process of states <highlight><bold>412</bold></highlight> and <highlight><bold>414</bold></highlight> continues until the user indicates in state <highlight><bold>416</bold></highlight> that the attribute selections are complete. In state <highlight><bold>418</bold></highlight>, the operating system then installs the custom attribute-printer assignments for use by the printer handler in routing print jobs to the available printers in a manner consistent with the user setup. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> In a further embodiment, a special attribute bit, such as a color bit, is generated, either by the application program or the printer handler, to indicate that the print job includes a particular print job attribute, such as color, that should determine a suitable printer or printer handler for assigning to the print job. By monitoring print jobs for this color bit, each printer can determine whether it is suitable to handle the print job without having to analyze large portions of the print job. While there may be more than one printer on a network that can print color pages and therefore will accept print jobs having the color bit, the invention assures that the print job is printed on a suitable printer rather than a printer that will only print black and white images. By way of example, the special attribute bit may be a color bit where the value (1) indicates that the print job contains color images and the value (0) indicates that the print job is merely black and white. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> In one embodiment of the invention, the print job is provided with a plurality of special attribute bits that each indicate the existence of a different print job attribute in the print job. For example, there were two special attribute bits associated with a print job, the first attribute bit could indicate color and the second attribute bit could indicate the resolution or dots per inch (dpi) required by the image. In this manner, drafts of spreadsheets using the color red to signify negative number values could be assigned to a low resolution, high-speed color printer, while digital photographs could be assigned to a high-resolution color printer loaded with special paper stock. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> In one embodiment, the identifiable print job attributes that the user has specified as providing the basis for assigning printers are collected in a look-up table or database. Each record in the database will include a print job attribute, or combinations of print job attributes, that are intended to cause the relevant print job to be sent to a specific printer. Each record in the database will also include a specific printer, or combination of printers, that may receive the relevant print job. The resulting database is installed as part of the printer handler that routes print jobs to appropriate printers. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a table illustrating a one embodiment of a database file structure that the printer handler would utilize for routing print jobs to the available printers. The database <highlight><bold>500</bold></highlight> includes four fields: field <highlight><bold>502</bold></highlight> for the attribute identification, optional field <highlight><bold>504</bold></highlight> for a secondary attribute identification, field <highlight><bold>506</bold></highlight> for the printer assigned to the attribute, and an optional field <highlight><bold>508</bold></highlight> for a secondary printer assignment. The database table <highlight><bold>500</bold></highlight> is illustrated containing 5 records that primarily look for a color/no color attribute, but secondarily identifies if the color print job is a photo (possibly indicated by a special attribute bit) or exceeds a page size limitation and if the non-color print jobs have a resolution of greater than or less than a given dots per inch setpoint. For example, a print job identified as containing a color photo would be sent to the inkjet printer &num;2, unless it was offline, in which case the print job could be forwarded to the color laserjet &num;3. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> It should be recognized that in a given business environment, a different combination of special attribute bits may be most desirable. Accordingly, the user interface of the present invention allows the user or system administrator to select the number of attribute bits to be used and the combination of attribute bits that will be utilized. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> Once generated, the attribute bits for a particular print job may be stored in the print queue in association with the print job. In turn, the print manager will direct the print job to an appropriate printer on the basis of the attribute bits. Consequently, in one embodiment of the invention, the attribute bits form a temporary file that is deleted as soon as the print job has been sent on to a printer or printer handler. Accordingly, this process can take place entirely resident within the operating system, where the assignment of available printers to print jobs having certain attributes is preferably customizable by the user through a graphical user interface. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flowchart illustrating the steps performed by the operating system. In state <highlight><bold>600</bold></highlight>, the printer handler portion of the operating system receives a print job. In state <highlight><bold>602</bold></highlight>, the print job is scanned or analyzed for selected print job attributes. In state <highlight><bold>604</bold></highlight>, all of the selected attributes that are in the print job are identified. In state <highlight><bold>606</bold></highlight>, attribute bits are generated for each of the identified attributes of the print job and these attribute bits are associated with the print job. In state <highlight><bold>608</bold></highlight>, the printer handler performs a look-up in the installed attribute-printer assignments, which may be default assignments of or customized assignments. In state <highlight><bold>610</bold></highlight>, the printer handler identifies the printer assigned to handle print jobs having the identified attributes. In state <highlight><bold>612</bold></highlight>, the printer handler routes the print job to the identified printer. Finally, in state <highlight><bold>614</bold></highlight> the attribute bits, having served their purpose, are deleted or discharged. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> A further optional feature of the invention is a notification sent to the computer from which the print job originated, notifying the user of that computer about what printer the printer handler has decided to send the print job to. The notification may also include an acknowledgement button requiring that the user acknowledge the destination of the print job or an optional instruction button to override the printer destination selected by the printer handler in favor of a manually selected printer. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> It will be understood from the foregoing description that various modifications and changes may be made in the preferred embodiment of the present invention without departing from its true spirit. It is intended that this description is for purposes of illustration only and should not be construed in a limiting sense. The scope of this invention should be limited only by the language of the following claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for selecting a printer for printing a print job, the method comprising: 
<claim-text>identifying one or more attributes of the print job; and </claim-text>
<claim-text>directing, using user-defined instructions, the print job to a printer capable of handling the one or more attributes. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>generating the plurality of print jobs using one or more application programs running in a computer that is in communication with one or more printers. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the one or more attributes are selected from file type, application identity, color content, print resolution, page size and combinations thereof. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>entering the user-defined instructions through a graphical user interface. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, further comprising: 
<claim-text>identifying the available printers; and </claim-text>
<claim-text>assigning one or more of the available printers for use with print jobs having the one or more attributes. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, further comprising: 
<claim-text>storing the user-defined instructions in memory for access by the printer handler. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the user-defined instructions comprise a table of the one or more attributes and the printers. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A computer program product including instructions embodied on a computer readable medium, the instructions comprising: 
<claim-text>identifying instructions for identifying one or more attributes of the print job; and </claim-text>
<claim-text>user-defined instructions for directing the print job to a printer capable of handling the one or more attributes. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, further comprising: 
<claim-text>generating instructions for generating the plurality of print jobs, wherein the generating instructions are capable of running one or more application programs in communication with one or more printers. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the one or more attributes are selected from file type, application identity, color content, print resolution, page size and combinations thereof. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, further comprising: 
<claim-text>entering instructions for entering the user-defined instructions. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, further comprising: 
<claim-text>identifying instructions for identifying available printers; and </claim-text>
<claim-text>assigning instructions for assigning one or more of the available printers for use with jobs having the one or more attributes. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, further comprising: 
<claim-text>data storage and retrieval instructions for enabling one or more printer handlers to access the user-defined instructions. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the user-defined instructions comprise a table of the one or more attributes and the printers.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>6</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002069A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002069A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002069A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002069A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002069A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002069A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002069A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
