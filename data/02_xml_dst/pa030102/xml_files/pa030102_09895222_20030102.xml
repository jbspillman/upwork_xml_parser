<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002070A1-20030102-D00000.TIF SYSTEM "US20030002070A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002070A1-20030102-D00001.TIF SYSTEM "US20030002070A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002070A1-20030102-D00002.TIF SYSTEM "US20030002070A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002070A1-20030102-D00003.TIF SYSTEM "US20030002070A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002070A1-20030102-D00004.TIF SYSTEM "US20030002070A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002070A1-20030102-D00005.TIF SYSTEM "US20030002070A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002070A1-20030102-D00006.TIF SYSTEM "US20030002070A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002070A1-20030102-D00007.TIF SYSTEM "US20030002070A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002070A1-20030102-D00008.TIF SYSTEM "US20030002070A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002070A1-20030102-D00009.TIF SYSTEM "US20030002070A1-20030102-D00009.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002070</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09895222</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>B41B001/00</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>G06F015/00</ipc>
</classification-ipc-secondary>
<classification-ipc-secondary>
<ipc>H04N001/00</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>358</class>
<subclass>001150</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>358</class>
<subclass>402000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Data processing system for converting content relative to a space used as an advertising medium into a printable object</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Michael</given-name>
<middle-name>Wayne</middle-name>
<family-name>Brown</family-name>
</name>
<residence>
<residence-us>
<city>Georgetown</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Michael</given-name>
<middle-name>Richard</middle-name>
<family-name>Cooper</family-name>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Mark</given-name>
<middle-name>Joseph</middle-name>
<family-name>Hamzy</family-name>
</name>
<residence>
<residence-us>
<city>Round Rock</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Mark</given-name>
<middle-name>Wayne</middle-name>
<family-name>VanderWiele</family-name>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>International Business Machines Corporation</organization-name>
<address>
<city>Armonk</city>
<state>NY</state>
<country>
<country-code>US</country-code>
</country>
</address>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>Duke W. Yee</name-1>
<name-2>Carstens, Yee &amp; Cahoon, LLP</name-2>
<address>
<address-1>P.O. Box 802334</address-1>
<city>Dallas</city>
<state>TX</state>
<postalcode>75380</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method, system and computer program product in a data processing system for printing a disjoint web object and content of a web page is provided. Responsive to presenting the web page by the browser, an embedded tag is presented as the disjoint web object. The disjoint web object is then printed based on the embedded tag, wherein content relative to the disjoint web object is printed along with content of the web page. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Technical Field </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates generally to an improved data processing system and in particular to a method and apparatus for printing a web object associated with a web page. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The Internet, also referred to as an &ldquo;internetwork&rdquo;, is a set of computer networks, possibly dissimilar, joined together by means of gateways that handle data transfer and the conversion of messages from the sending network to the protocols used by the receiving network (with packets if necessary). When capitalized, the term &ldquo;Internet&rdquo; refers to the collection of networks and gateways that use the TCP/IP suite of protocols. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The Internet has become a cultural fixture as a source of both information and entertainment. Many businesses are creating Internet sites as an integral part of their marketing efforts, informing consumers of the products or services offered by the business or providing other information seeking to engender brand loyalty. Many federal, state, and local government agencies are also employing Internet sites for informational purposes, particularly agencies which must interact with virtually all segments of society such as the Internal Revenue Service and secretaries of state. Providing informational guides and/or searchable databases of online public records may reduce operating costs. Further, the Internet is becoming increasingly popular as a medium for commercial transactions. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Currently, the most commonly employed method of transferring data over the Internet is to employ the World Wide Web environment, also called simply &ldquo;the Web&rdquo;. Other Internet resources exist for transferring information, such as File Transfer Protocol (FTP) and Gopher, but have not achieved the popularity of the Web. In the Web environment, servers and clients effect data transaction using the Hypertext Transfer Protocol (HTTP), a known protocol for handling the transfer of various data files (e.g., text, still graphic images, audio, motion video, etc.). The information in various data files is formatted for presentation to a user by a standard page description language, the Hypertext Markup Language (HTML). </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In addition to basic presentation formatting, HTML allows developers to specify &ldquo;links&rdquo; to other Web resources identified by a Uniform Resource Locator (URL). A URL is a special syntax identifier defining a communications path to specific information. Each logical block of information accessible to a client, called a &ldquo;page&rdquo; or a &ldquo;Web page&rdquo;, is identified by a URL. The URL provides a universal, consistent method for finding and accessing this information, not necessarily for the user, but mostly for the user&apos;s Web &ldquo;browser&rdquo;. A browser is a program capable of submitting a request for information identified by a URL at the client machine. Retrieval of information on the Web is generally accomplished with an HTML-compatible browser. The Internet also is widely used to transfer applications to users using browsers. With respect to commerce on the Web, individual consumers and business use the Web to purchase various goods and services. In offering goods and services, some businesses offer goods and services solely on the Web while others use the Web to extend their reach. Many of these businesses will advertise or display their logos or trademarks on Websites. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> However, once the Website is closed down, the logo or trademark disappears. Once the logo or trademark disappears, the effectiveness of the logo or trademark is lost and is reinforced only by the user accessing the same Website a second time. With the large quantity of Websites available to a user, the chances of the user seeing this specific logo or trademark a second time is minimal. If the user desires to go back to the same Website a second time, then there exists a probability that the user is already familiar with the business sponsoring the Website and the logo or trademark may not be effective in educating the user about the business associated with the logo or trademark. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Many users print a web page via a browser, however, advertising elements also associated with the web page are not printed. For example, a web page may contain advertising elements such as an advertising cursor or advertisements brought up in separate frames or windows. Therefore, it would be advantageous to have a mechanism to print these advertising elements when printing a web page which has spawned the advertising elements. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The present invention provides a method, system and computer program product in a data processing system for printing a disjoint web object and content of a web page. Responsive to presenting the web page by the browser, an embedded tag is presented as the disjoint web object. The disjoint web object is then printed based on the embedded tag, wherein content relative to the disjoint web object is printed along with content of the web page. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself, however, as well as a preferred mode of use, further objectives and advantages thereof, will best be understood by reference to the following detailed description of an illustrative embodiment when read in conjunction with the accompanying drawings, wherein: </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> depicts a pictorial representation of a network of data processing systems in which the present invention may be implemented; </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram depicting a data processing system that may be implemented as a server in which the present invention may be implemented; </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram illustrating a data processing system in which the present invention may be implemented; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> depicts a block diagram of a browser program in accordance with a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> depicts a diagram illustrating the mechanism used to change the disjoint web object in a data processing system in accordance with a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> FIGS. <highlight><bold>6</bold></highlight>A-<highlight><bold>6</bold></highlight>C depict diagrams illustrating the replacement of a disjoint web object in accordance with a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 7A and 7B</cross-reference> depict diagrams illustrating content in a Web page in accordance with a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a flowchart of a process for creating and displaying an advertising disjoint web object in accordance with a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a flowchart of a process for displaying an advertising disjoint web object in a web page in accordance with a preferred embodiment of the present invention; and </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a flowchart of a process for printing a display of an advertising disjoint web object in a web page in accordance with a preferred embodiment of the present invention. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT </heading>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> With reference now to the figures, <cross-reference target="DRAWINGS">FIG. 1</cross-reference> depicts a pictorial representation of a network of data processing systems in which the present invention may be implemented. Network data processing system <highlight><bold>100</bold></highlight> is a network of computers in which the present invention may be implemented. Network data processing system <highlight><bold>100</bold></highlight> contains a network <highlight><bold>102</bold></highlight>, which is the medium used to provide communications links between various devices and computers connected together within network data processing system <highlight><bold>100</bold></highlight>. Network <highlight><bold>102</bold></highlight> may include connections, such as wire, wireless communication links, or fiber optic cables. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> In the depicted example, servers <highlight><bold>104</bold></highlight>, <highlight><bold>106</bold></highlight>, and <highlight><bold>108</bold></highlight> are connected to network <highlight><bold>102</bold></highlight> along with storage unit <highlight><bold>116</bold></highlight>. In addition, clients <highlight><bold>110</bold></highlight>, <highlight><bold>112</bold></highlight> and <highlight><bold>114</bold></highlight> also are connected to network <highlight><bold>102</bold></highlight>. These clients <highlight><bold>110</bold></highlight>, <highlight><bold>112</bold></highlight>, and <highlight><bold>114</bold></highlight> may be, for example, personal computers or network computers. In the depicted example, servers <highlight><bold>104</bold></highlight>, <highlight><bold>106</bold></highlight>, and <highlight><bold>108</bold></highlight> provide data, such as boot files, operating system images, and applications to clients <highlight><bold>110</bold></highlight>, <highlight><bold>112</bold></highlight>, and <highlight><bold>114</bold></highlight>. Clients <highlight><bold>110</bold></highlight>, <highlight><bold>112</bold></highlight>, and <highlight><bold>114</bold></highlight> are clients to servers <highlight><bold>104</bold></highlight>, <highlight><bold>106</bold></highlight>, and <highlight><bold>108</bold></highlight>. Network data processing system <highlight><bold>100</bold></highlight> may include additional servers, clients, and other devices not shown. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> In the depicted example, network data processing system <highlight><bold>100</bold></highlight> is the Internet with network <highlight><bold>102</bold></highlight> representing a worldwide collection of networks and gateways that use the TCP/IP suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high-speed data communication lines between major nodes or host computers, consisting of thousands of commercial, government, educational and other computer systems that route data and messages. Of course, network data processing system <highlight><bold>100</bold></highlight> also may be implemented as a number of different types of networks, such as for example, an intranet, a local area network (LAN), or a wide area network (WAN). <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is intended as an example, and not as an architectural limitation for the present invention. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram depicting a data processing system that may be implemented as a server in which the present invention may be implemented. <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, may be implemented as a server, such as server <highlight><bold>104</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Data processing system <highlight><bold>200</bold></highlight> may be a symmetric multiprocessor (SMP) system including a plurality of processors <highlight><bold>202</bold></highlight> and <highlight><bold>204</bold></highlight> connected to system bus <highlight><bold>206</bold></highlight>. Alternatively, a single processor system may be employed. Also connected to system bus <highlight><bold>206</bold></highlight> is memory controller/cache <highlight><bold>208</bold></highlight>, which provides an interface to local memory <highlight><bold>209</bold></highlight>. I/O bus bridge <highlight><bold>210</bold></highlight> is connected to system bus <highlight><bold>206</bold></highlight> and provides an interface to I/O bus <highlight><bold>212</bold></highlight>. Memory controller/cache <highlight><bold>208</bold></highlight> and I/O bus bridge <highlight><bold>210</bold></highlight> may be integrated as depicted. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Peripheral component interconnect (PCI) bus bridge <highlight><bold>214</bold></highlight> connected to I/O bus <highlight><bold>212</bold></highlight> provides an interface to PCI local bus <highlight><bold>216</bold></highlight>. A number of modems may be connected to PCI bus <highlight><bold>216</bold></highlight>. Typical PCI bus implementations will support four PCI expansion slots or add-in connectors. Communications links to computers <highlight><bold>110</bold></highlight>, <highlight><bold>112</bold></highlight> and <highlight><bold>114</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> may be provided through modem <highlight><bold>218</bold></highlight> and network adapter <highlight><bold>220</bold></highlight> connected to PCI local bus <highlight><bold>216</bold></highlight> through add-in boards. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Additional PCI bus bridges <highlight><bold>222</bold></highlight> and <highlight><bold>224</bold></highlight> provide interfaces for additional PCI buses <highlight><bold>226</bold></highlight> and <highlight><bold>228</bold></highlight>, from which additional modems or network adapters may be supported. In this manner, server <highlight><bold>200</bold></highlight> allows connections to multiple network computers. A memory-mapped graphics adapter <highlight><bold>230</bold></highlight> and hard disk <highlight><bold>232</bold></highlight> may also be connected to I/O bus <highlight><bold>212</bold></highlight> as depicted, either directly or indirectly. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Those of ordinary skill in the art will appreciate that the hardware depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> may vary. For example, other peripheral devices, such as optical disk drives and the like, also may be used in addition to or in place of the hardware depicted. The depicted example is not meant to imply architectural limitations with respect to the present invention. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The data processing system depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> may be, for example, an IBM RISC/System <highlight><bold>6000</bold></highlight> system, a product of International Business Machines Corporation in Armonk, N.Y., running the Advanced Interactive Executive (AIX) operating system. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram illustrating a data processing system in which the present invention may be implemented. Data processing system <highlight><bold>300</bold></highlight> is an example of a client computer, such as, for example, client computers <highlight><bold>110</bold></highlight>, <highlight><bold>112</bold></highlight> and <highlight><bold>114</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Data processing system <highlight><bold>300</bold></highlight> employs a peripheral component interconnect (PCI) local bus architecture. Although the depicted example employs a PCI bus, other bus architectures such as Micro Channel and ISA may be used. Processor <highlight><bold>302</bold></highlight> and main memory <highlight><bold>304</bold></highlight> are connected to PCI local bus <highlight><bold>306</bold></highlight> through PCI bridge <highlight><bold>308</bold></highlight>. PCI bridge <highlight><bold>308</bold></highlight> also may include an integrated memory controller and cache memory for processor <highlight><bold>302</bold></highlight>. Additional connections to PCI local bus <highlight><bold>306</bold></highlight> may be made through direct component interconnection or through add-in boards. In the depicted example, local area network (LAN) adapter <highlight><bold>310</bold></highlight>, SCSI host bus adapter <highlight><bold>312</bold></highlight>, and expansion bus interface <highlight><bold>314</bold></highlight> are connected to PCI local bus <highlight><bold>306</bold></highlight> by direct component connection. In contrast, audio adapter <highlight><bold>316</bold></highlight>, graphics adapter <highlight><bold>318</bold></highlight>, and audio/video adapter <highlight><bold>319</bold></highlight> are connected to PCI local bus <highlight><bold>306</bold></highlight> by add-in boards inserted into expansion slots. Expansion bus interface <highlight><bold>314</bold></highlight> provides a connection for a keyboard and mouse adapter <highlight><bold>320</bold></highlight>, modem <highlight><bold>322</bold></highlight>, and additional memory <highlight><bold>324</bold></highlight>. SCSI host bus adapter <highlight><bold>312</bold></highlight> provides a connection for hard disk drive <highlight><bold>326</bold></highlight>, tape drive <highlight><bold>328</bold></highlight>, and CD-ROM drive <highlight><bold>330</bold></highlight>. Typical PCI local bus implementations will support three or four PCI expansion slots or add-in connectors. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> An operating system runs on processor <highlight><bold>302</bold></highlight> and is used to coordinate and provide control of various components within data processing system <highlight><bold>300</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. he operating system may be a commercially available operating system, such as Windows 2000, which is available from Microsoft Corporation. An object oriented programming system such as Java may run in conjunction with the operating system and provides calls to the operating system from Java programs or applications executing on data processing system <highlight><bold>300</bold></highlight>. &ldquo;Java&rdquo; is a trademark of Sun Microsystems, Inc. Instructions for the operating system, the object-oriented operating system, and applications or programs are located on storage devices, such as hard disk drive <highlight><bold>326</bold></highlight>, and may be loaded into main memory <highlight><bold>304</bold></highlight> for execution by processor <highlight><bold>302</bold></highlight>. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Those of ordinary skill in the art will appreciate that the hardware in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> may vary depending on the implementation. Other internal hardware or peripheral devices, such as flash ROM (or equivalent nonvolatile memory) or optical disk drives and the like, may be used in addition to or in place of the hardware depicted in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. Also, the processes of the present invention may be applied to a multiprocessor data processing system. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> For example, data processing system <highlight><bold>300</bold></highlight>, if optionally configured as a network computer, may not include SCSI host bus adapter <highlight><bold>312</bold></highlight>, hard disk drive <highlight><bold>326</bold></highlight>, tape drive <highlight><bold>328</bold></highlight>, and CD-ROM <highlight><bold>330</bold></highlight>, as noted by dotted line <highlight><bold>332</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> denoting optional inclusion. In that case, the computer, to be properly called a client computer, must include some type of network communication interface, such as LAN adapter <highlight><bold>310</bold></highlight>, modem <highlight><bold>322</bold></highlight>, or the like. As another example, data processing system <highlight><bold>300</bold></highlight> may be a stand-alone system configured to be bootable without relying on some type of network communication interface, whether or not data processing system <highlight><bold>300</bold></highlight> comprises some type of network communication interface. As a further example, data processing system <highlight><bold>300</bold></highlight> may be a Personal Digital Assistant (PDA) device which is configured with ROM and/or flash ROM in order to provide non-volatile memory for storing operating system files and/or user-generated data. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The depicted example in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> and above-described examples are not meant to imply architectural limitations. For example, data processing system <highlight><bold>300</bold></highlight> also may be a notebook computer or hand held computer in addition to taking the form of a PDA. Data processing system <highlight><bold>300</bold></highlight> also may be a kiosk or a Web appliance. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The present invention provides a method, apparatus, and computer program product for printing a display of a disjoint web object or cursor in a data processing system. An embedded tag may be presented as the disjoint web object. A disjoint web object may not be directly associated with content on a web page itself. The disjoint web object may be, for example, a pointer, content in a web frame, and content in a web window. The pointer, web frame and web window may not be included in the web page. A mechanism is used to print the disjoint web object or disjoint web objects when changed to a particular image associated with an organization for marketing purposes. For example, the typical disjoint web object may be changed to a disjoint web object for a company, such as International Business Machines. The logo of the company may be used in place of the normal disjoint web object. The disjoint web object may be displayed to a user through a document, such as a Web page in which instructions are imbedded in the document to change the disjoint web object from the standard disjoint web object to one specified by the mechanism. The disjoint web object may be changed to that for a specific graphical object. This graphical object may be a set of graphical images. Additionally, the graphical object may provide for a disjoint web object. When the Web page is printed, content of the Web page along with content of the disjoint web object is printed. In the depicted examples, the mechanism adds a &ldquo;format for print&rdquo; button to the Web page. Alternatively, a web browser may allow for notification of a print request to print the content of the disjoint web object. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> depicts a block diagram of a browser program in accordance with a preferred embodiment of the present invention. A browser may be any application that is used to search for and display content on a distributed data processing system. Browser <highlight><bold>400</bold></highlight> may be located on a client, such as, for example, client <highlight><bold>300</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. Browser <highlight><bold>400</bold></highlight> includes a user interface <highlight><bold>402</bold></highlight>, which is a graphical user interface (GUI) that allows the user to interface or communicate with browser <highlight><bold>400</bold></highlight>. This interface provides for selection of various functions through menus <highlight><bold>404</bold></highlight> and allows for navigation through navigation <highlight><bold>406</bold></highlight>. For example, menu <highlight><bold>404</bold></highlight> may allow a user to perform various functions, such as saving a file, opening a new window, displaying a history, and entering a URL. Navigation <highlight><bold>406</bold></highlight> allows for a user to navigate various pages and to select web sites for viewing. For example, navigation <highlight><bold>406</bold></highlight> may allow a user to see a previous page or a subsequent page relative to the present page. Preferences such as those illustrated in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> may be set through preferences <highlight><bold>408</bold></highlight>. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> Communications <highlight><bold>410</bold></highlight> is the mechanism with which browser <highlight><bold>400</bold></highlight> receives documents and other resources from a network such as the Internet. Further, communications <highlight><bold>410</bold></highlight> is used to send or upload documents and resources onto a network. In the depicted example, communication <highlight><bold>410</bold></highlight> uses HTTP. Documents that are received by browser <highlight><bold>400</bold></highlight> are processed by language interpretation <highlight><bold>412</bold></highlight>, which includes an HTML unit <highlight><bold>414</bold></highlight> and a JavaScript unit <highlight><bold>416</bold></highlight>. Language interpretation <highlight><bold>412</bold></highlight> will process a document for presentation on graphical display <highlight><bold>418</bold></highlight>. In particular, HTML statements are processed by HTML unit <highlight><bold>414</bold></highlight> for presentation while JavaScript statements are processed by JavaScript unit <highlight><bold>416</bold></highlight>. In the depicted examples, the graphical object used to display an image in place of the pointer is manipulated by JavaScript statements embedded in the web page. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> Graphical display <highlight><bold>418</bold></highlight> includes layout unit <highlight><bold>420</bold></highlight>, rendering unit <highlight><bold>422</bold></highlight>, and window management <highlight><bold>424</bold></highlight>. These units are involved in presenting web pages to a user based on results from language interpretation <highlight><bold>412</bold></highlight>. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Browser <highlight><bold>400</bold></highlight> is presented as an example of a browser program in which the present invention may be embodied. Browser <highlight><bold>400</bold></highlight> is not meant to imply architectural limitations to the present invention. Presently available browsers may include additional functions not shown or may omit functions shown in browser <highlight><bold>400</bold></highlight>. Browser <highlight><bold>400</bold></highlight> may be implemented using currently available browsers, such as Netscape Navigator or Microsoft Internet Explorer. Netscape Navigator is available from Netscape Communications Corporation while Microsoft Internet Explorer is available by Microsoft Corporation. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> depicts a diagram illustrating the mechanism used to change the disjoint web object in a data processing system in accordance with a preferred embodiment of the present invention. In the following examples, even though a pointer is described, any disjoint web object may be used, which may include, for example, content in a web frame and content in a web window. In this example, client <highlight><bold>500</bold></highlight> through browser <highlight><bold>502</bold></highlight> sends a request to web server <highlight><bold>508</bold></highlight> via uniform resource locator (URL) <highlight><bold>504</bold></highlight> for a HTML document in the form of a Web page. Browser <highlight><bold>502</bold></highlight> may be implemented with a browser, such as browser <highlight><bold>400</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. This request is processed by engine <highlight><bold>506</bold></highlight>. Specifically, engine <highlight><bold>506</bold></highlight> retrieves Web page <highlight><bold>510</bold></highlight> or data used to dynamically generate a Web page from database <highlight><bold>512</bold></highlight>, corresponding to the request received from client <highlight><bold>500</bold></highlight>. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> This Web page, such as Web page <highlight><bold>510</bold></highlight>, is returned to client <highlight><bold>500</bold></highlight>. Within Web page <highlight><bold>510</bold></highlight> is embedded the graphical object and instructions needed to change the appearance of the pointer on client <highlight><bold>500</bold></highlight>. In this example, the graphical object is embedded using URL <highlight><bold>504</bold></highlight>, which points to the location of the graphical object. Alternatively, the graphical object may be supplied as an image with Web page <highlight><bold>510</bold></highlight>. In the depicted examples, the graphical object provides cursor, also referred to as a pointer, which is controlled by a pointing device, such as a mouse. The instructions may take different forms depending on the implementation. For example, the instructions may be HTML statements or JavaScript. Web page <highlight><bold>510</bold></highlight> is received by browser <highlight><bold>502</bold></highlight> and is displayed within client <highlight><bold>500</bold></highlight>. In response to the display, the instructions are executed to selectively replace the pointer in client <highlight><bold>500</bold></highlight> with the pointer specified by a cascading style sheet (CSS) cursor statement. Cascading Style Sheets, level 2 (CSS2) is a style sheet language that allows authors and users to attach style (e.g., fonts, spacing, and aural cues) to structured documents (e.g., HTML documents and XML applications). By separating the presentation style of documents from the content of documents, CSS2 simplifies Web authoring and site maintenance. When the instructions are executed, the CSS2 cursor will be retrieved and displayed. Additionally, depending on the implementation, more than one user defined cursor may be retrieved for use in presenting the pointer. This new pointer is also referred to as an advertising pointer, which is an image associated with an organization. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The replacement of the pointer with the advertising pointer may occur, for example, when the pointer is located over the screen displayed by browser <highlight><bold>502</bold></highlight> in client <highlight><bold>500</bold></highlight>. Alternatively, the advertising pointer may be displayed at all times while the page is displayed. In addition, either several user defined pointers may be used or the graphical object may contain several images such that the graphical image used to present the pointer within client <highlight><bold>500</bold></highlight> changes in response to an event. This event may occur on a periodic basis or may be in the form of a selected user input. For example, the user input used to trigger the change in the presentation of the pointer may be the movement of the pointer over a selected portion of the displayed Web page. In this manner, the advertising pointer may be used as an advertising or brand awareness medium for an organization. The organization may use its logo or trademark in the pointer or in place of the pointer. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> In addition, web server <highlight><bold>508</bold></highlight> adds &ldquo;format for print&rdquo; (FFP) button <highlight><bold>514</bold></highlight> to web page <highlight><bold>510</bold></highlight>. In response to receiving a selection of FFP button <highlight><bold>514</bold></highlight>, a determination is made if a print format plugin (not shown) is on client <highlight><bold>500</bold></highlight>. If the print format plugin is not on client <highlight><bold>500</bold></highlight>, then the print format plugin is downloaded to client <highlight><bold>500</bold></highlight>. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> Once on client <highlight><bold>500</bold></highlight>, the print format plugin may query content of Web page <highlight><bold>510</bold></highlight> and advertising content of Web page <highlight><bold>510</bold></highlight> from one of several locations. This Web page content and advertising content of Web page <highlight><bold>510</bold></highlight> may have already been downloaded to client <highlight><bold>500</bold></highlight> from, for example, server <highlight><bold>508</bold></highlight> and/or queried as to its existence from, for example, server <highlight><bold>508</bold></highlight> or any other server connected to client <highlight><bold>500</bold></highlight>. The advertising content may be any advertising media downloaded to client <highlight><bold>500</bold></highlight>, such as, for example, a banner, a static advertisement, a advertising cursor, and the like. Furthermore, the advertising content may be a completely different advertisement relative to the print medium process, such as, for example, printing ink toner advertisements, printing ink cartridge advertisements, and the like. The print format plugin may be located on a server and may be a piece of code which the browser uses to format a page for printing and then sends the formatted page to a printer. The print format plugin now may render a printable image configuring both the Web page content and the advertising content. A printable image configuration may be, for example, a watermark, a banner placement, printing on separate pages, and the like. A banner placement may be located anywhere on a printable area. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> FIGS. <highlight><bold>6</bold></highlight>A-<highlight><bold>6</bold></highlight>C depict diagrams illustrating the replacement of a disjoint web object in accordance with a preferred embodiment of the present invention. In <cross-reference target="DRAWINGS">FIG. 6A, a</cross-reference> document <highlight><bold>600</bold></highlight> is displayed within browser <highlight><bold>602</bold></highlight>. Browser <highlight><bold>602</bold></highlight> may be implemented with a browser, such as browser <highlight><bold>400</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. In this example, a user manipulating pointer <highlight><bold>604</bold></highlight> using a pointing device may select a document or resource by selecting a link <highlight><bold>606</bold></highlight>. In response, a request to select a server and another document, such as web page <highlight><bold>608</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 6B</cross-reference> is returned. Web page <highlight><bold>608</bold></highlight> is displayed within browser <highlight><bold>602</bold></highlight>. Additionally, Web page <highlight><bold>608</bold></highlight> includes CSS2 cursor statement (not shown), which causes a replacement of pointer <highlight><bold>604</bold></highlight> with pointer <highlight><bold>610</bold></highlight>. In accordance with a preferred embodiment of the present invention, the replacement of the normal pointer with a new pointer is used to turn the pointer into an advertising medium for an organization. Organizations, such as, for example, computer companies, banks, and political groups may use the pointer as a medium to gain awareness with users on the Internet. In this example, pointer <highlight><bold>610</bold></highlight> is an IBM logo for International Business Machines Corporation. In this particular case, the logo is a registered trademark and is used to replace pointer <highlight><bold>604</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> When the web page is downloaded from the server, the browser adds &ldquo;format for print&rdquo; button <highlight><bold>614</bold></highlight>. In response to a selection of &ldquo;format for print&rdquo; button <highlight><bold>614</bold></highlight>, a print format plugin may be downloaded from a server to a client. In response to the arrival of the print format plugin, the print format plugin may query Web page content and advertising content associated with pointer <highlight><bold>610</bold></highlight>, for example. After querying the Web page content and the advertising content, the print format plugin may render a printable page, laying out both the Web page content and the advertising content. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 6</cross-reference>C, an example of another logo used for e-commerce is illustrated by pointer <highlight><bold>612</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 6C</cross-reference>. Pointer <highlight><bold>612</bold></highlight> replaces the normal pointer in this example. A pointer, for example, pointer <highlight><bold>612</bold></highlight> is a significant piece of real estate for marketing and advertising because the user may often shift focus away from different types of screen advertising or marketing mechanisms. On the other hand, with a pointer, the user is almost always, unless navigating by keyboard or speech, interacting using the pointer. Additional effectiveness in using pointer <highlight><bold>612</bold></highlight> is the ability to print a page so pointer <highlight><bold>612</bold></highlight> is displayed upon the printed page. With pointer <highlight><bold>612</bold></highlight> displayed upon the printed page, maximum impact of a trademark or logo is experienced. Not only is pointer <highlight><bold>612</bold></highlight> displayed in a temporary fashion upon a web page, pointer <highlight><bold>612</bold></highlight> is printed so as to provide a permanent record of the display of the trademark or logo. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 7A and 7B</cross-reference> depict diagrams illustrating content in a Web page in accordance with a preferred embodiment of the present invention. In <cross-reference target="DRAWINGS">FIG. 7</cross-reference>A, Web page <highlight><bold>700</bold></highlight> includes statement <highlight><bold>702</bold></highlight> and statement <highlight><bold>704</bold></highlight>. These statements are used to turn the pointer into an appropriate advertisement pointer as illustrated in FIGS. <highlight><bold>6</bold></highlight>A-<highlight><bold>6</bold></highlight>C. Statement <highlight><bold>702</bold></highlight> is a HTML body statement used to replace the current pointer with the pointer embedded or associated with Web page <highlight><bold>700</bold></highlight> when the pointer is over the body of the Web page. In this example, pointer <highlight><bold>610</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 6B</cross-reference> is displayed when the pointer is over Web page <highlight><bold>700</bold></highlight>. Statement <highlight><bold>704</bold></highlight> is a HTML paragraph statement, which turns the pointer back into a text I-Bar form when the pointer is over a text in the Web page. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 7</cross-reference>B, Web page <highlight><bold>706</bold></highlight> contains statements <highlight><bold>708</bold></highlight> and <highlight><bold>710</bold></highlight>, which perform the same function as statements <highlight><bold>702</bold></highlight> and <highlight><bold>704</bold></highlight> as above. In this example, statement <highlight><bold>708</bold></highlight> causes pointer <highlight><bold>612</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 6C</cross-reference> to be displayed when the pointer is over Web page <highlight><bold>706</bold></highlight>. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> In the depicted examples, the statements are in HTML. Of course, other statements may be used to manipulate the cursor, such as Javascript statements for notification of pointer movement and placing HTML images at or around the pointer&apos;s current position. The pointer file is supplied as a local image or URL. With the pointer being specified in the HTML document, the pointer will be supplied and rendered as any element in the document. This example is for a static Web page. Dynamic Web page support also may be provided by embedding random or predetermined combinations of pointers. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a flowchart of a process for creating and displaying an advertising pointer disjoint web object in accordance with a preferred embodiment of the present invention. In this example, the operation starts with a creation of a Web page including one or more advertiser pointers (step <highlight><bold>800</bold></highlight>). Thereafter, the Web page is uploaded along with the pointer resources needed to display an advertising pointer (step <highlight><bold>802</bold></highlight>). A client queries a Web server for the Web page using a browser (step <highlight><bold>804</bold></highlight>). The Web server downloads the Web page and pointer resources to the browser at the client (step <highlight><bold>806</bold></highlight>). Thereafter, the user moves the pointer over an HTML element (step <highlight><bold>808</bold></highlight>). In response to the movement of the pointer over an HTML element, the browser interprets the cursor information, loads, and displays the advertiser pointer or pointers (step <highlight><bold>810</bold></highlight>) over each defined HTML element and thereafter the operation terminates. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a flowchart of a process for displaying an advertising disjoint web object in a web page in accordance with a preferred embodiment of the present invention. These processes may be implemented using JavaScript or other instructions. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> In this example, the operation starts with a determination as to whether or not a movement of the pointer has occurred (step <highlight><bold>900</bold></highlight>). If a movement of the pointer has not occurred (step <highlight><bold>900</bold></highlight>:NO), the process repeats step <highlight><bold>900</bold></highlight> in which a determination is made as to whether or not a movement of the pointer has occurred. If a movement of the pointer has occurred (step <highlight><bold>900</bold></highlight>:YES), a determination is made as to whether or not the pointer is located over the Web page (step <highlight><bold>902</bold></highlight>). If the pointer is not located over the Web page (step <highlight><bold>902</bold></highlight>:NO), the pointer is displayed in a normal manner (step <highlight><bold>910</bold></highlight>), and thereafter the operation returns to step <highlight><bold>900</bold></highlight> in which a determination is made as to whether or not a movement of the pointer has occurred. If the pointer is located over the Web page (step <highlight><bold>902</bold></highlight>:YES), then the location of the pointer on the Web page is identified (step <highlight><bold>904</bold></highlight>). </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> An advertising pointer is then selected for display based on the location of the pointer (step <highlight><bold>906</bold></highlight>). Depending on the location of the pointer, the selection may be that an advertising pointer will not be used. Further, different advertising pointers may be selected depending on the location. For example, if the advertising pointer is located over text, an image, or a URL for a specific company, such as, for example, a computer company, a music company, and the like, the advertising pointer for the company may be selected for display. The selected advertising pointer is displayed (step <highlight><bold>908</bold></highlight>) with the process returning to step <highlight><bold>900</bold></highlight> in which a determination is made as to whether or not movement of the pointer has occurred. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a flowchart of a process for printing a display of an advertising pointer disjoint web object in a web page in accordance with a preferred embodiment of the present invention. In this example, the operation starts by a web browser requesting a HTML page (step <highlight><bold>1000</bold></highlight>). The web server then receives the request for the HTML page by the web browser (step <highlight><bold>1002</bold></highlight>). The web server then adds a &ldquo;format for print&rdquo; button to the requested HTML page (step <highlight><bold>1004</bold></highlight>). The web server then serves the HTML page to the web browser (step <highlight><bold>1006</bold></highlight>). A selection of the &ldquo;format for print&rdquo; button located on the HTML page is received (step <highlight><bold>1008</bold></highlight>). Then a determination is made as to whether or not a &ldquo;format for print&rdquo; plugin is loaded at a client (step <highlight><bold>1010</bold></highlight>). If the &ldquo;format for print&rdquo; plugin is not loaded at the client (step <highlight><bold>1010</bold></highlight>:NO), then the &ldquo;format for print&rdquo; plugin is loaded into the client (step <highlight><bold>1012</bold></highlight>). Whether the &ldquo;format for print&rdquo; is already loaded at the client (step <highlight><bold>1010</bold></highlight>:YES) or the &ldquo;format for print&rdquo; plugin is loaded at the client (step <highlight><bold>1012</bold></highlight>), Web page content and advertising content is the transmitted to the &ldquo;format for print&rdquo; plugin (step <highlight><bold>1014</bold></highlight>). </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> The &ldquo;format for print&rdquo; plugin retrieves the Web page content (step <highlight><bold>1016</bold></highlight>). The &ldquo;format for print&rdquo; plugin then retrieves the advertising content (step <highlight><bold>1018</bold></highlight>). The &ldquo;format for print&rdquo; plugin renders a print page (step <highlight><bold>1020</bold></highlight>). The &ldquo;format for print&rdquo; plugin then prints the rendered print page with the advertising disjoint web object and web page text (step <highlight><bold>1022</bold></highlight>), and thereafter the operation terminates. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> Thus, the present invention provides a method, system, and computer program product for printing additional advertising or brand awareness space from a Web page. The present invention provides an advantage by using an embedded tag as a disjoint web object as an additional advertising medium and prints this disjoint web object along with content of the Web page. A printed page containing both the disjoint web object content and the text of the web page is produced thereby providing a permanent display of both the content of the disjoint web object and the text of the web page so as to provide maximum effectiveness of the advertising. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> It is important to note that while the present invention has been described in the context of a fully functioning data processing system, those of ordinary skill in the art will appreciate that the processes of the present invention are capable of being distributed in the form of a computer readable medium of instructions in a variety of forms and that the present invention applies equally regardless of the particular type of signal bearing media actually used to carry out the distribution. Examples of computer readable media include recordable-type media such as a floppy disc, a hard disk drive, a RAM, and CD-ROMs and transmission-type media such as digital and analog communications links. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. For example, although the depicted examples illustrate the use of JavaScript embedded within the web page as the mechanism for altering the presentation of the pointer, other mechanisms may be used. A Java Applet is another mechanism which may be used to change the presentation of the pointer. The type of advertising may be for any product or message in addition to a company logo. In other words, the advertising space provided by the pointer may be used for any sort of awareness or recognition of an organization. In addition, even though the embodiment illustrated in the above description uses a button attached to a web page, for example, the &ldquo;format for print&rdquo; button, alternative methods of sending a print command may be used within the spirit and scope of the present invention. For example, a browser print button may be overridden and a print request using alternate means may be provided or by using a drag and drop procedure. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> In the depicted examples, no changes to a browser are needed to view the graphical object. Of course, other implementations may be used to provide a graphical object for replacing a pointer to advertise or provide awareness for a business. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Further, the use of the processes of the present invention may be applied to any medium using a pointing device. For example, the present invention may be implemented in a set top box for a television or in an ATM machine or any device capable of accessing data. The embodiment was chosen and described in order to best explain the principles of the invention, the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method in a data processing system for printing a content of a web page, comprising the steps of: 
<claim-text>responsive to presenting the web page by a browser, presenting an embedded tag as a disjoint web object; and </claim-text>
<claim-text>enabling a printing of the disjoint web object based on the embedded tag, wherein content relative to the disjoint web object is enabled to be printed along with content of the web page. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the web page is presented in a display and further comprising: 
<claim-text>presenting the embedded tag as the disjoint web object when the disjoint web object is located in areas of the display over the web page while the web page is being presented. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the embedded tag is a first embedded tag and further comprising: 
<claim-text>embedding a second tag as the disjoint web object in the web page; and </claim-text>
<claim-text>responsive to an event, presenting the second embedded tag as the disjoint web object. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the event is a periodic event. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the event is a selected user input. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the selected user input is a movement of the disjoint web object over a selected portion of the web page. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the selected user input is a movement of the disjoint web object off the web page. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of printing the disjoint web object based on the embedded tag, further comprises: 
<claim-text>inserting a print command in the web page; and </claim-text>
<claim-text>printing content relative to the disjoint web object along with content of the web page utilizing the print command in the web page. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the print command is a button located in the web page. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>responsive to a determination that a &ldquo;format for print&rdquo; plugin is not installed, downloading the &ldquo;format for print&rdquo; plugin; </claim-text>
<claim-text>transmitting the disjoint web object and the content of the web page; and </claim-text>
<claim-text>rendering a page based on the disjoint web object and the content of the web page. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, further comprising: 
<claim-text>printing the page based on the disjoint web object and the content of the web page. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein a &ldquo;format for print&rdquo; plugin can override printing the disjoint web object based on the embedded tag. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the disjoint web object is at least one of a pointer, content in a web frame, and content in a web window. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A method for printing a content of a document in a data processing system, comprising the steps of: 
<claim-text>receiving a document from a source on a data processing system, wherein the document includes a graphical object, wherein the graphical object is associated with an organization; </claim-text>
<claim-text>responsive to displaying the document in the data processing system, presenting the graphical object as a disjoint web object using the graphical object; and </claim-text>
<claim-text>printing the disjoint web object based on the graphical object, wherein the disjoint web object is printed along with content of the document. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the step of presenting comprises: 
<claim-text>presenting a disjoint web object using the graphical object when the disjoint web object is over the document. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the document is a web page. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the graphical object comprises a set of tags and wherein the step of presenting the disjoint web object using the graphical object comprises: 
<claim-text>presenting a tag from the set of tags as the disjoint web object in response to an event. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the event is a periodic event. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the event is a selected user input. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein the selected user input is a movement of the disjoint web object over a portion of the document. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the presenting step presents a tag from the set of tags in a selected order. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the presenting step presents a tag from the set of tags in a random order. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The method as recited in <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the graphical object is a logo for a company. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A web page for memory in a computer system, the web page comprising: 
<claim-text>a set of instructions; </claim-text>
<claim-text>an embedded tag; and </claim-text>
<claim-text>a command button, wherein the set of instructions include instructions for displaying the embedded tag as a disjoint web object when the web page is displayed within the computer; and include instructions for printing the disjoint web object associated with the embedded tag, wherein the disjoint web object is enabled to be printed along with content of the web page in response to a selection to the cammand button for printing. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The web page as recited in <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, wherein the set of instructions are markup language instructions. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The web page as recited in <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the markup language instructions are hypertext markup language instructions. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The web page as recited in <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the markup language instructions are extensible markup language instructions. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. A data processing system, comprising: 
<claim-text>a network; </claim-text>
<claim-text>a server functionally connected to the network, wherein the server stores a document including an embedded tag, wherein the server sends the document in response to a request for the document; and </claim-text>
<claim-text>a plurality of clients functionally connected to the network, wherein a client within the plurality of clients includes a graphical user interface and a disjoint web object, the client receives the document from the server in response to requesting the document, the client displays the document, the client displays the embedded tag in response to a display of the document, and the disjoint web object is printed based on the embedded tag, wherein content relative to the disjoint web object is enabled to be printed along with content of the web page. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The data processing system as recited in <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein the embedded tag is displayed as the disjoint web object. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The data processing system as recited in <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein the document is displayed within a browser. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. A data processing system, comprising: 
<claim-text>presenting means, responsive to presenting the web page by a browser, for presenting an embedded tag as a disjoint web object; and </claim-text>
<claim-text>printing means for printing the disjoint web object based on the embedded tag, wherein content relative to the disjoint web object is enabled to be printed along with content of the web page. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The data processing system as recited in <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein the web page is presented in a display and further comprising: 
<claim-text>presenting means for presenting the embedded tag as the disjoint web object when the disjoint web object is located in areas of the display over the web page while the web page is being presented. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The data processing system as recited in <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein the embedded tag is a first embedded tag and further comprising: 
<claim-text>embedding means for embedding a second tag as the disjoint web object in the web page; and </claim-text>
<claim-text>presenting means, responsive to an event, for presenting the second embedded tag as the disjoint web object. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The data processing system as recited in <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein the step of printing the disjoint web object based on the embedded tag, further comprises: 
<claim-text>inserting means for inserting a print command in the web page; and </claim-text>
<claim-text>printing means for printing content relative to the disjoint web object along with content of the web page. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The data processing system as recited in <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, further comprising: 
<claim-text>downloading means, responsive to a determination that a &ldquo;format for print&rdquo; plugin is not installed, for downloading the &ldquo;format for print&rdquo; plugin; </claim-text>
<claim-text>transmitting means for transmitting the disjoint web object and the content of the web page; and </claim-text>
<claim-text>rendering means for rendering a page based on the disjoint web object and the content of the web page. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. A data processing system for printing a web page in a data processing system, comprising the steps of: 
<claim-text>presenting means, responsive to displaying a document in the data processing system, for presenting the graphical object as the disjoint web object using the graphical object; and </claim-text>
<claim-text>printing means for printing the disjoint web object based on the graphical object, wherein the disjoint web object is enabled to be printed along with content of the document. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The data processing system as recited in <dependent-claim-reference depends_on="CLM-00033">claim 36</dependent-claim-reference>, wherein the presenting means comprises: 
<claim-text>presenting means for presenting a disjoint web object using the graphical object when the disjoint web object is over the document. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The data processing system as recited in <dependent-claim-reference depends_on="CLM-00033">claim 36</dependent-claim-reference>, wherein the graphical object comprises a set of tags and wherein the step of presenting the disjoint web object using the graphical object comprises: 
<claim-text>presenting means for presenting a tag from the set of tags as the disjoint web object in response to an event. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. A computer program product in a computer-readable medium for use in a data processing system for printing a disjoint web object and content of a web page, comprising the steps of: 
<claim-text>instructions, responsive to presenting the web page by the browser, for presenting an embedded tag as the disjoint web object; and </claim-text>
<claim-text>instructions for printing the disjoint web object based on the embedded tag, wherein content relative to the disjoint web object is enabled to be printed along with content of the web page </claim-text>
</claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. A computer program product in a computer-readable medium for use in a data processing system for printing a disjoint web object and content of a web page in a data processing system, comprising: 
<claim-text>instructions for receiving a document from a source on a data processing system, wherein the document includes a graphical object, wherein the graphical object is associated with an organization; </claim-text>
<claim-text>instructions, responsive to displaying the document in the data processing system, for presenting the graphical object as the disjoint web object using the graphical object; and </claim-text>
<claim-text>instructions for printing the disjoint web object based on the graphical object, wherein the disjoint web object is enabled to be printed along with content of the document.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>5</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002070A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002070A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002070A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002070A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002070A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002070A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002070A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002070A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002070A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002070A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
