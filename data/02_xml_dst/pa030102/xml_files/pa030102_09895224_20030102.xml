<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005211A1-20030102-D00000.TIF SYSTEM "US20030005211A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005211A1-20030102-D00001.TIF SYSTEM "US20030005211A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005211A1-20030102-D00002.TIF SYSTEM "US20030005211A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005211A1-20030102-D00003.TIF SYSTEM "US20030005211A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005211A1-20030102-D00004.TIF SYSTEM "US20030005211A1-20030102-D00004.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005211</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09895224</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F012/02</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>711</class>
<subclass>005000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>711</class>
<subclass>219000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Method and apparatus for accessing banked embedded dynamic random access momory devices</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Ravi</given-name>
<middle-name>Kumar</middle-name>
<family-name>Arimilli</family-name>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>James</given-name>
<middle-name>Stephen</middle-name>
<family-name>Fields</family-name>
<name-suffix>JR.</name-suffix>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Sanjeev</given-name>
<family-name>Ghai</family-name>
</name>
<residence>
<residence-us>
<city>Round Rock</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Praveen</given-name>
<middle-name>S.</middle-name>
<family-name>Reddy</family-name>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>William</given-name>
<middle-name>John</middle-name>
<family-name>Starke</family-name>
</name>
<residence>
<residence-us>
<city>Round Rock</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>International Business Machines Corp.</organization-name>
<address>
<city>Armonk</city>
<state>NY</state>
<country>
<country-code>US</country-code>
</country>
</address>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>BRACEWELL &amp; PATTERSON, L.L.P.</name-1>
<name-2>INTELLECTUAL PROPERTY LAW</name-2>
<address>
<address-1>P.O. BOX 969</address-1>
<city>AUSTIN</city>
<state>TX</state>
<postalcode>78767-0969</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">An apparatus for accessing a banked embedded dynamic random access memory device is disclosed. The apparatus for accessing a banked embedded dynamic random access memory (DRAM) device comprises a general functional control logic and a bank RAS controller. The general functional control logic is coupled to each bank of the banked embedded DRAM device. Coupled to the general functional control logic, the bank RAS controller includes a rotating shift register having multiple bits. Each bit within the rotating shift register corresponds to each bank of the banked embedded DRAM device. As such, a first value within a bit of the rotating shift register allows accesses to an associated bank of the banked embedded DRAM device, and a second value within a bit of the rotating shift register denies accesses to an associated bank of the banked embedded DRAM device. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">RELATED PATENT APPLICATION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This patent application is related to a copending application U.S. Ser. No. ______ filed on even date, entitled &ldquo;METHOD AND APPARATUS FOR ALLOCATING DATA USAGES WITHIN AN EMBEDDED DYNAMIC RANDOM ACCESS MEMORY DEVICE&rdquo; (IBM Docket No. AUS92000905US1).</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> 1. Technical Field </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The present invention relates to memory devices in general, and in particular to embedded dynamic random access memory devices. Still more particularly, the present invention relates to a method and apparatus for accessing a banked embedded dynamic random access memory device. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> 2. Description of the Prior Art </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Generally speaking, many different types of memory devices are employed within a digital computer system. One type of memory devices that is well-known in the art is dynamic random access memory (DRAM) devices. DRAM devices are commonly utilized for storing large increments of data, and the stored data can be accessed in any order. However, a DRAM device cannot be accessed when the DRAM device is being refreshed. Another type of memory devices that is well-known in the art is static random access memory (SRAM) devices. SRAM devices store information in logic circuits known as flip-flops that retain data without requiring any refresh. Thus, although SRAM devices do not have delay states associated to refresh cycles such as DRAM devices, SRAM devices are more complex than DRAM devices. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Yet another type of memory devices is called embedded DRAM devices. Embedded DRAM devices are a type of memory devices having both memory cells and their respective control circuits formed on a single semiconductor chip. Embedded DRAM devices are capable of transferring a large quantity of data at a very high speed. Because of their relatively high processing speed and storage capacity, embedded DRAM devices have been commonly employed in various high-end data processing systems, such as graphics processing systems. In addition, embedded DRAM devices can provide a processor a faster access to a relatively large capacity of on-chip memory at a lower cost than that currently available using conventional embedded SRAM devices and/or electrically erasable programmable read only memory (EEPROM) devices. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Both DRAM devices and embedded DRAM devices are formed in memory arrays having multiple memory locations. Each memory location of the memory arrays is identified by its memory address. When a memory location of the memory array is to be accessed, the address of the memory location can be provided to a decoder circuitry of the memory device, as is well-known in the art. The decoder circuitry decodes the address signal applied thereto in order to permit access to the memory location identified by the address signal. Typically, multiple banks of an embedded DRAM device may be placed together such that a single embedded DRAM controller can provide access control to each bank of the embedded DRAM device and routes addresses to a corresponding bank of memory within a banked cache memory. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The present disclosure provides an improved method for accessing a banked embedded DRAM device. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> In accordance with a preferred embodiment of the present invention, an apparatus for accessing a banked embedded dynamic random access memory (DRAM) device comprises a general functional control logic and a bank RAS controller. The general functional control logic is coupled to each bank of the banked embedded DRAM device. Coupled to the general functional control logic, the bank RAS controller includes a rotating shift register having multiple bits. Each bit within the rotating shift register corresponds to each bank of the banked embedded DRAM device. As such, a first value within a bit of the rotating shift register allows accesses to an associated bank of the banked embedded DRAM device, and a second value within a bit of the rotating shift register denies accesses to an associated bank of the banked embedded DRAM device. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> All objects, features, and advantages of the present invention will become apparent in the following detailed written description. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The invention itself, as well as a preferred mode of use, further objects, and advantages thereof, will best be understood by reference to the following detailed description of an illustrative embodiment when read in conjunction with the accompanying drawings, wherein: </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a data processing system having several banks of embedded DRAMs, in accordance with a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of an embedded DRAM controller within the data processing system from <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, in accordance with a preferred embodiment of the present invention; and </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram of a bank RAS controller within the embedded DRAM controller from <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, in accordance with a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram of a control command, in accordance with a preferred embodiment of the present invention; and </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram of a response, in accordance with a preferred embodiment of the present invention. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF A PREFERRED EMBODIMENT </heading>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Referring now to the drawings and in particular to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, there is depicted a block diagram of a data processing system having several banks of embedded dynamic random access memories (DRAMs), in accordance with a preferred embodiment of the present invention. As shown, a data processing system <highlight><bold>10</bold></highlight> includes a processor <highlight><bold>11</bold></highlight> with access to data stored in a level-one (L1) cache memory <highlight><bold>12</bold></highlight> and a level-two (L2) cache memory <highlight><bold>13</bold></highlight>. An access controller <highlight><bold>14</bold></highlight> directs address requests and data within data processing system <highlight><bold>10</bold></highlight>. A bus interface <highlight><bold>15</bold></highlight> interfaces with a system interconnect <highlight><bold>20</bold></highlight> to control the flow of data and addresses between access controller <highlight><bold>14</bold></highlight> and system interconnect <highlight><bold>20</bold></highlight>. System interconnect <highlight><bold>20</bold></highlight> provides multiple buses for transporting data and addresses between other components, such as a system memory <highlight><bold>19</bold></highlight>, within data processing system <highlight><bold>10</bold></highlight>. While not depicted, it is understood by those skilled in the art that multiple processors having associated levels of cache memories may be connected along system interconnect <highlight><bold>20</bold></highlight> within data processing system <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Access controller <highlight><bold>14</bold></highlight> also directs address requests and data to an embedded DRAM controller <highlight><bold>17</bold></highlight> within banks of embedded DRAM <highlight><bold>16</bold></highlight> via an interconnect <highlight><bold>21</bold></highlight>. As shown, banked embedded DRAM <highlight><bold>16</bold></highlight> is depicted as a banked cache, however, other applications for banked embedded DRAM <highlight><bold>16</bold></highlight> may also be applicable. Banked embedded DRAM <highlight><bold>16</bold></highlight> includes bank 0 through bank 7, and the total memory provided by banked embedded DRAM <highlight><bold>16</bold></highlight> is substantially larger than that provided by L2 cache memory <highlight><bold>13</bold></highlight>. For example, L2 cache memory <highlight><bold>13</bold></highlight> may include two Mbytes of static random access memories (SRAMs) while banked embedded DRAM <highlight><bold>16</bold></highlight> may include 16 Mbytes of embedded DRAMs. However, accesses to L2 cache memory <highlight><bold>13</bold></highlight> typically have lower latency than accesses to banked embedded DRAM <highlight><bold>16</bold></highlight> since L2 cache memory <highlight><bold>13</bold></highlight> is resided on-chip. Embedded DRAM controller <highlight><bold>17</bold></highlight> provides access controls to each bank of embedded DRAM <highlight><bold>16</bold></highlight>. Interconnect <highlight><bold>21</bold></highlight> preferably includes multiple buses by which address requests and data may be transmitted between access controller <highlight><bold>14</bold></highlight> and embedded DRAM controller <highlight><bold>17</bold></highlight>. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> A snoop path is provided from access controller <highlight><bold>14</bold></highlight> to each of the above-mentioned cache memories. For an address request received at access controller <highlight><bold>14</bold></highlight>, a snoop of each of the cache memories is performed to determine if there is a &ldquo;hit&rdquo; in any of the cache memories by the address request. For example, during cache memory snooping, access controller <highlight><bold>14</bold></highlight> snoops a directory <highlight><bold>18</bold></highlight>. If a &ldquo;hit&rdquo; is returned from snooping directory <highlight><bold>18</bold></highlight>, access controller <highlight><bold>14</bold></highlight> transmits the address request to banked embedded DRAM <highlight><bold>16</bold></highlight>, indicating which bank of banked embedded DRAM <highlight><bold>16</bold></highlight> contains the data to be accessed by the address request. Once the address request is received at a controller (not shown), the address request is passed to the bank of banked embedded DRAM <highlight><bold>16</bold></highlight> via interconnect <highlight><bold>21</bold></highlight>. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> If there is not a &ldquo;hit&rdquo; in the cache memories returned from the snoop, access controller <highlight><bold>14</bold></highlight> may send the address request to system memory <highlight><bold>19</bold></highlight>, and the address request is received by a system memory controller (not shown). Typically, accesses to system memory <highlight><bold>19</bold></highlight> are relatively slow because of the remoteness of system memory <highlight><bold>19</bold></highlight>. However, by utilizing an additional memory, implemented by banked embedded DRAM <highlight><bold>16</bold></highlight> in this <highlight><bold>20</bold></highlight> example, large amounts of data can be accessed at each processor cycle. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> With reference now to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, there is illustrated a block diagram of embedded DRAM controller <highlight><bold>17</bold></highlight> from <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, in accordance with a preferred embodiment of the present invention. As shown, embedded DRAM controller <highlight><bold>17</bold></highlight> includes a bank RAS controller <highlight><bold>22</bold></highlight> and a general function control logic <highlight><bold>23</bold></highlight>. Embedded DRAM controller <highlight><bold>17</bold></highlight> is coupled to access controller <highlight><bold>14</bold></highlight> (from <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) via interconnect <highlight><bold>21</bold></highlight>. Interconnect <highlight><bold>21</bold></highlight> preferably includes an address request control bus <highlight><bold>24</bold></highlight>, a response bus <highlight><bold>25</bold></highlight>, a data bus <highlight><bold>26</bold></highlight>. General function control logic <highlight><bold>23</bold></highlight> includes multiple sets of data buses, with each set of data buses connecting to a corresponding bank of banked embedded DRAM <highlight><bold>16</bold></highlight>, as is well-known to those skilled in the art. Bank RAS controller <highlight><bold>22</bold></highlight> controls general functional control logic <highlight><bold>23</bold></highlight> via a bank RAS enable line <highlight><bold>27</bold></highlight>. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, there is illustrated a block diagram of bank RAS controller <highlight><bold>22</bold></highlight> within embedded DRAM controller <highlight><bold>17</bold></highlight> from <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, in accordance with a preferred embodiment of the present invention. As shown, bank RAS controller <highlight><bold>22</bold></highlight> includes an update control logic <highlight><bold>31</bold></highlight>, a rotating shift register <highlight><bold>32</bold></highlight>, and a ground noise detector <highlight><bold>33</bold></highlight>. In response to a control signal from a control bus <highlight><bold>24</bold></highlight>, update control logic <highlight><bold>31</bold></highlight> provides an eight-bit address to rotating shift register <highlight><bold>32</bold></highlight>. Each of the eight-bit output from rotating shift register <highlight><bold>32</bold></highlight> signifies an access to one of the corresponding eight banks in embedded DRAM <highlight><bold>16</bold></highlight> (from <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). For example, bit <highlight><bold>0</bold></highlight> from rotating shift register <highlight><bold>32</bold></highlight> corresponds to bank 0 of embedded DRAM <highlight><bold>16</bold></highlight>, bit <highlight><bold>1</bold></highlight> from rotating shift register <highlight><bold>32</bold></highlight> corresponds to bank 1 of embedded DRAM <highlight><bold>16</bold></highlight>, bit <highlight><bold>2</bold></highlight> from rotating shift register <highlight><bold>32</bold></highlight> corresponds to bank 2 of embedded DRAM <highlight><bold>16</bold></highlight>, etc. Hence, when bit <highlight><bold>0</bold></highlight> of rotating shift register <highlight><bold>32</bold></highlight> contains a logical &ldquo;1&rdquo; means bank 0 of embedded DRAM <highlight><bold>16</bold></highlight> may be accessed, and when both bit <highlight><bold>0</bold></highlight> and bit <highlight><bold>2</bold></highlight> of rotating shift register <highlight><bold>32</bold></highlight> contain a logical &ldquo;1&rdquo; means both bank 0 and bank 2 of embedded DRAM <highlight><bold>16</bold></highlight> may be accessed. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Each transaction transmitted within control bus <highlight><bold>24</bold></highlight> is in form of a control command as depicted in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. As shown in <cross-reference target="DRAWINGS">FIG. 4, a</cross-reference> control command <highlight><bold>41</bold></highlight> preferably includes a tag field <highlight><bold>41</bold></highlight>, a command field <highlight><bold>42</bold></highlight>, a row address field <highlight><bold>43</bold></highlight>, and a column address field <highlight><bold>44</bold></highlight>. Tag field <highlight><bold>41</bold></highlight> further includes a transaction identification field <highlight><bold>45</bold></highlight> and a bank identification field <highlight><bold>46</bold></highlight>. Transaction identification field <highlight><bold>45</bold></highlight> contains an identification number that is unique to each transaction within a data processing system. Bank identification field <highlight><bold>46</bold></highlight> specifies a bank number of a banked embedded DRAM, such as any one of bank 0 through bank 7 in banked embedded DRAM <highlight><bold>16</bold></highlight>, at which the transaction should be accessed. Command field <highlight><bold>42</bold></highlight> contains a command, such as read or write, for the transaction. Row address field <highlight><bold>43</bold></highlight> and column address field <highlight><bold>44</bold></highlight> contain the row and the column of the bank at which the transaction should be accessed. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> After completing each transaction, general functional control logic <highlight><bold>23</bold></highlight> generates a response on response bus <highlight><bold>25</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the response from general functional control logic <highlight><bold>23</bold></highlight> is merged with the response from update control logic <highlight><bold>31</bold></highlight>. Each response transmitted within response bus <highlight><bold>25</bold></highlight> is in form of a response as depicted in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. As shown in <cross-reference target="DRAWINGS">FIG. 5, a</cross-reference> response <highlight><bold>51</bold></highlight> preferably includes a tag field <highlight><bold>51</bold></highlight> and a response field <highlight><bold>52</bold></highlight>. Tag field <highlight><bold>51</bold></highlight> also includes a transaction identification field <highlight><bold>53</bold></highlight> and a bank identification field <highlight><bold>54</bold></highlight>, which serve the same functions as transaction identification field <highlight><bold>45</bold></highlight> and bank identification field <highlight><bold>46</bold></highlight> from <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, respectively. Response field <highlight><bold>52</bold></highlight> includes the status of the corresponding transactions, such as &ldquo;write complete&rdquo; or &ldquo;read data valid.&rdquo;</paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Update control logic <highlight><bold>31</bold></highlight> (from <cross-reference target="DRAWINGS">FIG. 3</cross-reference>) may update rotating shift register <highlight><bold>32</bold></highlight> through either a software, hardware, or software/hardware intervention. During a software intervention, processor <highlight><bold>11</bold></highlight> (from <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) communicates to access controller <highlight><bold>14</bold></highlight> (from <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) to send a control command on control bus <highlight><bold>24</bold></highlight> to banked embedded DRAM <highlight><bold>16</bold></highlight> (from <cross-reference target="DRAWINGS">FIG. 1</cross-reference>). The control command, with the command type indicated in the command field, informs update control logic <highlight><bold>31</bold></highlight> that rotating shift register <highlight><bold>32</bold></highlight> needs a new value. Update control logic <highlight><bold>31</bold></highlight> then processes the request in the control command and updates all eight bits of rotating shift register <highlight><bold>32</bold></highlight> with a new value that is contained in the row address field of the control command. The format of a control command for updating rotating shift register <highlight><bold>32</bold></highlight> is very similar to the control command shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. Instead of having both transaction identification field <highlight><bold>45</bold></highlight> and bank identification field <highlight><bold>46</bold></highlight>, a control command for updating rotating shift register <highlight><bold>32</bold></highlight> preferably contains a longer bank identification field <highlight><bold>46</bold></highlight> (at least 8 bits in the present example) in order to specify more than one bank within banked embedded DRAM <highlight><bold>16</bold></highlight> to be activiated, if necessary. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> For a hardware intervention, ground noise detect control circuit <highlight><bold>33</bold></highlight> first detects a bounce in the ground plane of banked embedded DRAM <highlight><bold>16</bold></highlight>. When such noise is detected, ground noise detect control <highlight><bold>33</bold></highlight> then communicates a request for update control logic <highlight><bold>31</bold></highlight> to change the value of rotating shift register <highlight><bold>32</bold></highlight> as well as the value (i.e., the number of banks that should be simultaneously activated) for the update. Update control logic <highlight><bold>31</bold></highlight> subsequently processes the hardware request and updates all eight bits of rotating shift register <highlight><bold>32</bold></highlight> to a new value specified by ground noise detect control <highlight><bold>33</bold></highlight>. The value (or the number of banks that should be simultaneously activated is preferably dependant upon the level of bounce in the ground plane of banked embedded DRAM <highlight><bold>16</bold></highlight>. The higher the level of bounce in the ground plane of banked embedded DRAM <highlight><bold>16</bold></highlight>, the less number of banks within banked embedded DRAM <highlight><bold>16</bold></highlight> should be simultaneously activated. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> For a hardware/software intervention, ground noise detect control <highlight><bold>33</bold></highlight> first detects a bounce in the ground plane of banked embedded DRAM <highlight><bold>16</bold></highlight>. When such noise is detected, ground noise detect control <highlight><bold>33</bold></highlight> then communicates an alert to update control logic <highlight><bold>31</bold></highlight>. Such alert is passed back to processor <highlight><bold>11</bold></highlight> through response bus <highlight><bold>25</bold></highlight>. At this point, the software may choose to update rotating shift register <highlight><bold>32</bold></highlight> by sending a control command from access controller <highlight><bold>14</bold></highlight> via control bus <highlight><bold>24</bold></highlight> to banked embedded DRAM <highlight><bold>16</bold></highlight> in a similar fashion as the above-described software intervention update. Upon receiving such a control command, update control logic <highlight><bold>31</bold></highlight> then processes rotating shift register <highlight><bold>32</bold></highlight> update in the same fashion as the above-described software intervention update. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Rotating shift register <highlight><bold>32</bold></highlight> allows or denies general functional control logic <highlight><bold>23</bold></highlight> the ability to access a specific bank within banked embedded DRAM <highlight><bold>16</bold></highlight>. The register value stored with rotating shift register <highlight><bold>32</bold></highlight> determines at most how many banks within banked embedded DRAM <highlight><bold>16</bold></highlight> may be activated at any particular processor cycle. The limiting of bank activation within banked embedded DRAM <highlight><bold>16</bold></highlight> decreases the probability of a bounce in the ground plane of banked embedded DRAM <highlight><bold>16</bold></highlight>. With the register value within rotating shift register <highlight><bold>32</bold></highlight> being rolled every cycle, different banks of banked embedded DRAM <highlight><bold>16</bold></highlight> are enabled and disabled for accesses. Should a read or write command sent by processor <highlight><bold>11</bold></highlight> through access controller <highlight><bold>14</bold></highlight> across control bus <highlight><bold>24</bold></highlight> targets a specific bank within banked embedded DRAM <highlight><bold>16</bold></highlight> whose RAS enable bit from rotating shift register <highlight><bold>32</bold></highlight> indicates that such bank is disabled, general functional control logic <highlight><bold>23</bold></highlight> will hold and delay the execution of the read or write command. Once the RAS enable bit from rotating shift register <highlight><bold>32</bold></highlight> indicates that the targeted bank is enabled, then general functional control logic <highlight><bold>23</bold></highlight> may execute the pending read or write command. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> As has been described, the present invention provides an improved method and apparatus for accessing banked embedded DRAMs. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> While the invention has been particularly shown and described with reference to a preferred embodiment, it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. An apparatus for accessing a banked embedded dynamic random access memory (DRAM) device, said apparatus comprising: 
<claim-text>a general functional control logic coupled to each bank of said banked embedded DRAM device; and </claim-text>
<claim-text>a bank RAS controller, coupled to said general functional control logic, wherein said bank RAS controller includes a rotating shift register having multiple bits, wherein each bit within said rotating shift register corresponds to each bank of said banked embedded DRAM device, such that a first value within a bit of said rotating shift register allows accesses to an associated bank of said banked embedded DRAM device, and a second value within a bit of said rotating shift register denies accesses to an associated bank of said banked embedded DRAM device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said bank RAS controller further includes an update control logic coupled to said rotating shift register, wherein bit values within said rotating shift register is set by said update control logic via software. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein said banked embedded DRAM device is updated by said bank RAS controller via a control command. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said bank RAS controller further includes an update control logic and a ground noise detect control coupled to said rotating shift register, wherein bit values within said rotating shift register is set by said update control logic via said ground noise detect control. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein bit values within said rotating shift register is set according to a level of detected ground bounce. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein said banked embedded DRAM device is updated by said bank RAS controller via a control command. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A data processing system comprising: 
<claim-text>a processor; </claim-text>
<claim-text>a banked embedded DRAM device; and </claim-text>
<claim-text>an embedded DRAM controller, coupled said banked embedded DRAM device to said processor, for controlling said banked embedded DRAM device, wherein said embedded DRAM controller further includes: 
<claim-text>a general functional control logic coupled to each bank of said banked embedded DRAM device; and </claim-text>
<claim-text>a bank RAS controller, coupled to said general functional control logic, wherein said bank RAS controller includes a rotating shift register having multiple bits, wherein each bit within said rotating shift register corresponds to each bank of said banked embedded DRAM device, such that a first value within a bit of said rotating shift register allows accesses to an associated bank of said banked embedded DRAM device, and a second value within a bit of said rotating shift register denies accesses to an associated bank of said banked embedded DRAM device. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The data processing system according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein said bank RAS controller further includes an update control logic coupled to said rotating shift register, wherein bit values within said rotating shift register is set by said update control logic via software. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The data processing system according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein said banked embedded DRAM device is updated by said bank RAS controller via a control command. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The data processing system according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein said bank RAS controller further includes an update control logic and a ground noise detect control coupled to said rotating shift register, wherein bit values within said rotating shift register is set by said update control logic via said ground noise detect control. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The data processing system according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein bit values within said rotating shift register is set according to a level of detected ground bounce. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The data processing system according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said banked embedded DRAM device is updated by said bank RAS controller via a control command. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A method for accessing a banked embedded dynamic random access memory (DRAM) device, said method comprising: 
<claim-text>coupling each bank of said banked embedded DRAM device to a bank RAS controller with a rotating shift register having multiple bits; and </claim-text>
<claim-text>associating each bit within said rotating shift register to each bank of said banked embedded DRAM device, such that a first value within a bit of said rotating shift register allows accesses to an associated bank of said banked embedded DRAM device, and a second value within a bit of said rotating shift register denies accesses to an associated bank of said banked embedded DRAM device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein said method further includes a step of setting bit values within said rotating shift register by software. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein said method further includes a step of updating said banked embedded DRAM device via a control command. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein said method further includes a step of setting bit values within said rotating shift register by hardware. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein said method further includes a step of setting bit values within said rotating shift register according to a level of detected ground bounce. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein said method further includes a step of updating said banked embedded DRAM device via a control command.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005211A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005211A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005211A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005211A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005211A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
