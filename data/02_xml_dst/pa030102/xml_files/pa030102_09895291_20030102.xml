<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002478A1-20030102-D00000.TIF SYSTEM "US20030002478A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002478A1-20030102-D00001.TIF SYSTEM "US20030002478A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002478A1-20030102-D00002.TIF SYSTEM "US20030002478A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002478A1-20030102-D00003.TIF SYSTEM "US20030002478A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002478A1-20030102-D00004.TIF SYSTEM "US20030002478A1-20030102-D00004.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002478</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09895291</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04J003/16</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>370</class>
<subclass>352000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>370</class>
<subclass>465000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>370</class>
<subclass>401000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Lightweight internet protocol telephony client</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Hani</given-name>
<family-name>El-Gebaly</family-name>
</name>
<residence>
<residence-us>
<city>Beaverton</city>
<state>OR</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Stephen</given-name>
<family-name>Ing</family-name>
</name>
<residence>
<residence-us>
<city>Beaverton</city>
<state>OR</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Mitu</given-name>
<family-name>Aggarwal</family-name>
</name>
<residence>
<residence-us>
<city>Portland</city>
<state>OR</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>FISH &amp; RICHARDSON, PC</name-1>
<name-2></name-2>
<address>
<address-1>4350 LA JOLLA VILLAGE DRIVE</address-1>
<address-2>SUITE 500</address-2>
<city>SAN DIEGO</city>
<state>CA</state>
<postalcode>92122</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">An Internet Protocol (IP) telephony system includes a lightweight stimulus client configured to receive user input requesting an IP telephony service (e.g., an ITU-T H.450 supplementary service) and communicate the received input over a packet-based network using a standard call control protocol (e.g., Media Gateway Control Protocol or ITU-T H.248). A call agent, executing on a remote server connected to the packet-based network, is configured to perform the requested IP telephony service based on the received input. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present application describes systems and techniques relating to Internet Protocol (IP) telephony and more particularly to a lightweight client application for IP telephony. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> IP telephony enables allows callers to use a packet-switched network, such as the Internet, as the transmission medium for making telephone calls. As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, an IP telephony client application <highlight><bold>101</bold></highlight> (a software application program executing on a computer platform such as a PC) converts a user&apos;s voice signals into digital format, encapsulates the digitized voice data into IP packets, which are then transmitted via a communication link <highlight><bold>100</bold></highlight> to a network <highlight><bold>103</bold></highlight>, such as a LAN (local area network) or WAN (wide area network). Depending on the identity of the called party, the IP packets containing the digitized voice data can be delivered either to another client application <highlight><bold>102</bold></highlight> connected to the network <highlight><bold>103</bold></highlight>, or to a conventional telephone handset <highlight><bold>106</bold></highlight> connected to the Public Switched Telephone Network (PSTN) <highlight><bold>105</bold></highlight> via a gateway <highlight><bold>104</bold></highlight>.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">DRAWING DESCRIPTIONS </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a typical network configuration that supports IP telephony. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows an example of a typical user interface presented by an IP telephony client. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram of an IP telephony network configuration including a stimulus client and a feature server. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram showing details of a stimulus client and a call agent. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a flowchart of a procedure for launching and using an IP telephony stimulus client.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Details of one or more embodiments are set forth in the accompanying drawings and the description below. Other features, objects, and advantages will be apparent from the description and drawings, and from the claims. </paragraph>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows an example of a user interface for a typical IP telephony client. As shown, the user interface is presented to the user in a display window <highlight><bold>200</bold></highlight> and includes graphical controls <highlight><bold>202</bold></highlight> (e.g., buttons as shown) that enable the user to provide input to the client, for example, a telephone number to be dialed, or a command such as &ldquo;dial,&rdquo; &ldquo;clear,&rdquo; etc. Other graphical controls <highlight><bold>204</bold></highlight> (e.g., sliders as shown) enable the user to control functions such as microphone input and/or speaker output levels. The user interface typically also includes display areas <highlight><bold>206</bold></highlight> and <highlight><bold>208</bold></highlight> to provide textual and/or graphical feedback to the user regarding information such as the number being dialed, call status, and the like. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Prior to using an IP telephony client, a user typically first must visit a website associated with a client vendor or other software distributor, download the client application (usually about a megabyte or larger in size) to the user&apos;s computer, and then install the client application. This procedure typically results in a static copy of the client application residing on the user&apos;s computer system. Once installed, the user can make calls by executing and interacting with the IP telephony client, which in turn typically communicates with a IP telephony server residing elsewhere in the network using a proprietary (e.g., non-standard) protocol to provide IP telephony service. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram of an IP telephony network configuration <highlight><bold>300</bold></highlight> that implements a &ldquo;stimulus&rdquo;-based IP telephony client <highlight><bold>310</bold></highlight>, residing on a user&apos;s computer platform, in communication with a feature server <highlight><bold>304</bold></highlight> to provide enhanced IP telephony functionality. As used herein, a stimulus client may be one that provides very little, if any, functionality locally but rather passes through input from a user to a remote server, which in turn provides the requested functionality. The stimulus client may communicate with the server by means of &ldquo;stimulus signaling.&rdquo; Put another way, a stimulus client may be one that acts as a stimulus that causes the server to provide functionality requested by a user at the client. By moving the software infrastructure that provides the bulk of the functionality to the server side, a stimulus client can be made &ldquo;lightweight&rdquo;&mdash;that is, very small in size&mdash;while still providing the user with a rich and robust feature set. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the stimulus client <highlight><bold>310</bold></highlight> and the feature server <highlight><bold>304</bold></highlight> reside within a packet-based network <highlight><bold>302</bold></highlight>. The feature server <highlight><bold>304</bold></highlight> is a functional entity that uses stimulus signaling to provide an endpoint with additional features not available locally at the endpoint. An example of a feature server implementation is described in International Telecommunication Union (ITU-T) H.323 Annex L: Packet-Based Multimedia Communications Systems (March 2001). </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The feature server <highlight><bold>304</bold></highlight> can communicate not only with the stimulus client <highlight><bold>310</bold></highlight> but also with other IP telephony endpoints within the packet-based network (e.g., terminal <highlight><bold>308</bold></highlight> or terminal <highlight><bold>312</bold></highlight>) and/or via gateway <highlight><bold>306</bold></highlight> with endpoints such as telephone <highlight><bold>316</bold></highlight> in the PSTN <highlight><bold>314</bold></highlight>. The feature server <highlight><bold>304</bold></highlight> is able to communicate with endpoints using any of various standard call control protocols including the ITU-T H.323 protocol, the Session Initiation Protocol (SIP) as defined in Request For Comment (RFC) number 2543 (March 1999) of the Internet Engineering Task Force (IETF), the Media Gateway Control Protocol (MGCP) as defined in IETF RFC number 2705 (October 1999), and the ITU-T H.248 protocol (also known as the &ldquo;Megaco&rdquo; protocol). In the example shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the feature server <highlight><bold>304</bold></highlight> communicates with the stimulus client <highlight><bold>310</bold></highlight> using MGCP signaling and with terminals <highlight><bold>308</bold></highlight>, <highlight><bold>312</bold></highlight> using H.323 and SIP signaling, respectively. However, other configurations may use different or additional protocols for communicating between the feature server and endpoints depending on the objectives of the system designer, administrator and/or end-users. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> In a typical application, the stimulus client <highlight><bold>310</bold></highlight> would receive input from a user through a user interface such as depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. For example, if the user entered a telephone number to be dialed by clicking appropriate buttons in the dialpad portion of graphical controls <highlight><bold>202</bold></highlight>, the stimulus client <highlight><bold>310</bold></highlight> would collect the entered digits and transmit them as DTMF (dual tone multi-frequency) data to the feature server <highlight><bold>304</bold></highlight>, which in turn would establish a connection with the called endpoint. Alternatively, or in addition, a user at the client could request one or more supplementary services by entering appropriate numbers on the dialpad, which would be collected by the client <highlight><bold>310</bold></highlight> and passed on to the feature server <highlight><bold>304</bold></highlight>, which in turn would provide the requested functionality. A supplementary service is defined as any telephony service over and above basic &ldquo;plain old telephone service&rdquo; (POTS), which is limited to making and receiving calls. Examples of supplementary services include call transfer, call forwarding, hold, voice-mail, call-waiting, 3-way conferencing, and the like. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> As an example, a user who already had established a call could request that the call be transferred to a different endpoint by dialing a predetermined sequence (e.g., *9) followed by the number of the endpoint to which the call is to be transferred. The stimulus client <highlight><bold>310</bold></highlight> would collect the dialed sequence and transmit corresponding DTMF data to the feature server <highlight><bold>304</bold></highlight>, which in response would perform the requested call transfer by rerouting the IP packets containing voice data to the transfer destination endpoint. In general, the stimulus client <highlight><bold>310</bold></highlight> and the feature server <highlight><bold>304</bold></highlight> can cooperate in this manner to provide a user with any standard supplementary service (for example, as defined in ITU-T H.450) or with any non-standard supplementary service that a telephony service entity may wish to provide. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> The use of a lightweight stimulus client that communicates with a feature server using a standard protocol, such as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, may provide several advantages. For example, because the stimulus client provides little or no telephony services locally, but rather passes on telephony service requests to be fulfilled by the feature server remotely, the stimulus client can be made very small, for example, on the order of 30 kilobytes as opposed to the roughly 1 megabyte or larger used for conventional telephony clients. In particular, the size of the stimulus client&apos;s stack (the software code, typically implemented as dynamically linked libraries (DLLs), that are invoked to provide telephony services) can be kept to a bare minimum. A small client stack size may be desirable both to client vendors and to end-users&mdash;client vendors tend to like it because a small stack generally simplifies development, maintenance and distribution of client applications and end-users tend to like it because of dramatically reduced client download times. Indeed, as a result of its small size, downloading of the stimulus client can appear to end-users as being virtually instantaneous. In contrast, a download of a large-stack client&mdash;typically about 1 megabytes or larger&mdash;can take several minutes, especially when the user has a standard telephone-line connection that is limited to 56 Kbps or slower. Consequently, users are likely to be much less resistant to downloading the stimulus client because doing so entails little or no waiting time. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Moreover, the lightweight client may be advantageous from the perspective of client vendors because, in view of the minimal download time, users are much more likely to download and use the most current version of the client. In fact, use of a stimulus client coupled to a feature server can reduce the size of the client to an extent that it becomes practical for the client to be downloaded dynamically, and transparently from the user&apos;s perspective, with each new instantiation. In that case, each user is guaranteed to use the most recent version of the client. Consequently, software development and maintenance costs can be reduced dramatically because a lightweight client vendor would no longer have to worry about version control or compatibility with earlier versions. At the same time, because each use of the client may involve a dynamic download and instantiation of the client, client vendors can more easily and continuously (or frequently) improve or upgrade the client to provide users with cutting-edge functionality. Further, dynamically downloading the client with each use allows client vendors to more easily keep track of user and usage statistics. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Other advantages may arise as a result of the stimulus client&apos;s support and use of standard IP telephony protocols such as MGCP, H.248, SIP and H.323. For example, in contrast to a conventional IP telephony client, which typically communicates with the server using a proprietary protocol, the stimulus client can communicate with the feature server using MGCP or H.248. The feature server in turn can communicate with other endpoints and network entities using SIP and/or H.323. Consequently, the stimulus client and the feature server are able to interoperate with any IP telephony endpoint or service provider that uses standard protocols. For example, by collecting DTMF data from an end-user and passing it on to the feature server, the stimulus client can provide the end-user with a full-range of supplementary services such as defined in H.450. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram showing details of a stimulus client configuration <highlight><bold>400</bold></highlight> in which the stimulus client <highlight><bold>402</bold></highlight> communicates with a call agent <highlight><bold>404</bold></highlight> using a standard IP telephony protocol (e.g., MGCP or H.248) over communication link <highlight><bold>411</bold></highlight>. The stimulus client <highlight><bold>402</bold></highlight> has two basic components: an application layer <highlight><bold>406</bold></highlight>, which represents the software layer that interacts with the end-user to present a user interface, collect DTMF information and the like, and a MGCP stack <highlight><bold>410</bold></highlight>, which is the set of software routines that facilitates MGCP-based communications with the call agent <highlight><bold>404</bold></highlight>. The application layer <highlight><bold>406</bold></highlight> communicates with the MGCP stack <highlight><bold>410</bold></highlight> through a plugable call control (PCC) application program interface (API) <highlight><bold>408</bold></highlight>. The PCC API <highlight><bold>408</bold></highlight> allows a single client application to place calls through multiple protocols utilizing a single, common API. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> More particularly, the PCC API <highlight><bold>408</bold></highlight> exposes a common set of function calls, properties, and callbacks that can be used with any of several different call control protocols such as MGCP, H.248, SIP and H.323. It is preferable that the PCC API <highlight><bold>408</bold></highlight> exposes the fewest possible number of parameters for each function call so as to provide the simplest usage model for the default call model. Examples of common function calls, properties, and callbacks that may be exposed by PCC API <highlight><bold>408</bold></highlight> include (1) listening for incoming calls, (2) placing calls, (3) answering calls, (4) hanging up calls, (5) capability selection, negotiation and renegotiation, (6) security (authentication, integrity), (7) call hold, (8) mute, (9) establishing multi-point conferences, merging multiple conferences into one, (10) splitting a conference into two, (11) transferring with and without consultation, (12) overlapped sending and dialing, (13) sending DTMF signals, (14) multi-line/multi-call/multi-station appearance, (15) park/pickup calls, (16) redirect/forward calls, and (17) out-of-band service commands. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The call agent <highlight><bold>404</bold></highlight> is a server-side application that includes a feature server <highlight><bold>403</bold></highlight>, a signaling gateway <highlight><bold>405</bold></highlight>, one or more stacks <highlight><bold>412</bold></highlight>-<highlight><bold>414</bold></highlight> for communicating with endpoints such as stimulus client <highlight><bold>402</bold></highlight> and/or called endpoint <highlight><bold>416</bold></highlight>, and a PCC API <highlight><bold>408</bold></highlight> for each different stack instantiation <highlight><bold>412</bold></highlight>-<highlight><bold>414</bold></highlight>. The signaling gateway <highlight><bold>405</bold></highlight> serves as a signaling front-end to the feature server <highlight><bold>403</bold></highlight> to enable the feature server <highlight><bold>403</bold></highlight> to communicate with endpoints using different signaling protocols such as SIP, MGCP, H.248 and H.323. As shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the call agent <highlight><bold>404</bold></highlight> includes a separate MGCP stack <highlight><bold>412</bold></highlight> for communicating with MGCP-based endpoints such as the stimulus client <highlight><bold>402</bold></highlight>. Similarly, the call agent <highlight><bold>404</bold></highlight> would include a separate stack <highlight><bold>414</bold></highlight> (e.g., SIP, H.323, H.248 or MGCP) for each different protocol type that is to be used. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The feature server <highlight><bold>403</bold></highlight> can provide services, such as H.450 supplementary services or non-standard services, to the stimulus client <highlight><bold>402</bold></highlight>. The stimulus client <highlight><bold>402</bold></highlight> uses MGCP signaling to send DTMF digits to the feature server <highlight><bold>403</bold></highlight>, which translates the DTMF digits into specific supplementary services. Thus, the supplementary service functionality is moved into the feature server <highlight><bold>403</bold></highlight> and the stimulus client <highlight><bold>402</bold></highlight> can be implemented as a very lightweight client. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> For example, the feature server <highlight><bold>403</bold></highlight> can use the PCC API <highlight><bold>408</bold></highlight> to place or transfer a call between the MGCP-based stimulus client <highlight><bold>402</bold></highlight> and another endpoint <highlight><bold>416</bold></highlight> (e.g., either MGCP-, H.248-, H.323-, or SIP-based) on the other end. If the other endpoint <highlight><bold>416</bold></highlight> is, for example, an H.323 endpoint, the feature server <highlight><bold>403</bold></highlight> can provide inter-working between MGCP and H.450 supplementary services. In that case, the feature server <highlight><bold>403</bold></highlight> implements the desired supplementary service and behaves as the endpoint for all H.450 operations. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The feature server <highlight><bold>403</bold></highlight> also can use stimulus signaling to control various user interface elements at the stimulus client <highlight><bold>402</bold></highlight>. Examples of this include providing hardware-independent indications for message waiting or line lamps, writing to a text display, receiving user input such as digits, text, and so on. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a flowchart of a procedure <highlight><bold>500</bold></highlight> for launching and using an IP telephony stimulus client. First, a user accesses a web browser application and visits a URL (uniform resource locator) address associated with an IP telephony website (e.g., an IP telephony client vendor or service provider website) (<highlight><bold>502</bold></highlight>). Next, input received from a user, for example, by clicking a button or a link, initiates an instance of an IP telephony client (<highlight><bold>504</bold></highlight>). In other words, the user gives an indication by mouse click or otherwise that usage of the IP telephony client is desired. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Alternatively, the user could have previously downloaded and stored on the computer platform locally a small, dedicated application whose primary, or sole, purpose is to download the most recent version of the IP telephony client stored at a specified URL. In that case, the user would not need to access a web browser to use the client, but rather could, for example, simply double-click on a desktop icon corresponding to the dedicated download application. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> In response to the user&apos;s indication that usage of the IP telephony client is desired, the current version of the IP telephony client downloads from the website and launches (<highlight><bold>506</bold></highlight>), for example, presenting the user with a user interface similar to that shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. The client can be implemented as a Java applet that downloads and is executed locally by a virtual machine (VM) on the user&apos;s computer platform. Other implementations of the client can use interpreted or scripting languages such as PERL, TCL or the like, in which a client script (a set of commands to be interpreted and performed locally) is downloaded and executed locally on the user&apos;s computer platform. As discussed above, the size of the stimulus client to be downloaded can be made small enough that the download appears to be virtually instantaneous, or even completely transparent, to the user. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Next, the client collects DTMF digit input from the user indicating that the user desires access to a supplementary service such as voice-mail or the like (<highlight><bold>508</bold></highlight>). The client then transmits the collected DTMF input to the feature server, for example, using the MGCP or H.248 protocols (<highlight><bold>510</bold></highlight>). In response, the feature server provides the requested service, for example, by using standard protocols (SIP, MGCP, H.323, H.248) to communicate with another endpoint such an IP telephony voice-mail system and thereby acting as an intermediary between the stimulus client and the voice-mail system endpoint (<highlight><bold>512</bold></highlight>). Procedures <highlight><bold>508</bold></highlight>-<highlight><bold>512</bold></highlight> can be repeated as desired to provide the user with access to additional or different supplementary services. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Various implementations of the systems and techniques described here may be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits) or in computer hardware, firmware, software, or combinations thereof. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Other embodiments may be within the scope of the following claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A system comprising: 
<claim-text>a stimulus client configured to receive user input requesting an Internet Protocol (IP) telephony service and communicate the received input over a packet-based network using a standard call control protocol; </claim-text>
<claim-text>a call agent, executing on a remote server connected to the packet-based network, configured to perform the requested IP telephony service based on the received input. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> in which the stimulus client comprises an application layer configured to communicate with an end-user and a call control protocol stack configured to communicate with the call agent using the standard call control protocol. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> in which the stimulus client&apos;s call control protocol stack comprises a Media Gateway Control Protocol (MGCP) stack. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> in which the stimulus client&apos;s call control protocol stack comprises an ITU-T H.248 stack. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> in which the application layer comprises a user interface having a plurality of graphical controls. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> in which the received user input comprises Dual Tone Multi-Frequency (DTMF) input. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> in which the call agent comprises: 
<claim-text>a feature server configured to provide telephony services to telephony endpoints; </claim-text>
<claim-text>a signaling gateway configured to facilitate communication between the feature server and one or more endpoints; and </claim-text>
<claim-text>one or more call control protocol stacks configured to facilitate signaling between the call agent and the one or more endpoints. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> in which the feature server is capable of providing supplementary services to one or more endpoints. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> in which the supplementary services comprise ITU-T H.450 supplementary services. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> in which the feature server provides non-standard telephony services to one or more endpoints. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> in which one or more call control protocol stacks comprise one or more of a Media Gateway Control Protocol (MGCP) stack, an ITU-T H.248 stack, a Session Initiation Protocol (SIP) stack, and an ITU-T H.323 stack. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A client application comprising: 
<claim-text>an application layer configured to receive Dual Tone Multi-Frequency (DTMF) input corresponding to a requested Internet Protocol (IP) telephony service; and </claim-text>
<claim-text>a call control protocol stack configured to communicate the received DTMF input to a feature server over a packet-based network using a standard call control protocol. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The application of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> in which the application layer comprises a user interface having a plurality of graphic controls for receiving user input. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The application of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> in which the call control protocol comprises a Media Gateway Control Protocol (MGCP). </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The application of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> in which the call control protocol comprises an ITU-T H.248 protocol. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The application of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> in which the application includes substantially no software infrastructure for performing IP telephony services locally. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The application of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> in which the application comprises a set of interpreted commands. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The application of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> in which the application comprises an applet performed by a virtual machine. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A method comprising: 
<claim-text>in response to receiving user input requesting initiation of Internet Protocol (IP) telephony service, downloading and launching an IP telephony client application; </claim-text>
<claim-text>receiving at the IP telephony client input from a user identifying a telephony service; </claim-text>
<claim-text>communicating the received input to a feature server; and </claim-text>
<claim-text>based on the communicated input, performing the identified telephony service at the feature server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> in which the received user input comprises Dual Tone Multi-Frequency (DTMF) input. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> in which downloading and launching an IP telephony client application comprises transparently downloading, from a user&apos;s perspective, a set of commands to be interpreted and performed by a process executing on a computer platform associated with the user. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> in which the set of commands comprises an applet to be performed by a virtual machine executing on the computer platform associated with the user. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> in which the IP telephony client communicates with the feature server using a standard call control protocol. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. Computer software, embodied in a computer-readable medium and/or a propagated carrier signal, comprising instructions for a computer system to perform the following: 
<claim-text>present a telephony user interface that includes graphical controls for receiving input from a user; </claim-text>
<claim-text>receive from a user Dual Tone Multi-Frequency (DTMF) input corresponding to a requested IP telephony service; and </claim-text>
<claim-text>communicate the received DTMF input to a feature server over a packet-switched network using a standard call control protocol. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The software of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> further comprising instructions to receive information from the feature server and use the received information to control elements of the telephony user interface. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The software of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> in which the standard call control protocol comprises a stimulus protocol. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The software of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> in which the standard call control protocol comprises a Media Gateway Control Protocol (MGCP). </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The software of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> in which the standard call control protocol comprises an ITU-T H.248 protocol. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The software of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> in the instructions to communicate the received DTMF input to the feature server comprise a call control protocol stack. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The software of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> further comprising instructions to receive user input requesting initiation of Internet Protocol (IP) telephony service and, in response to the received user input, download and launch an IP telephony client application.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>3</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002478A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002478A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002478A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002478A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002478A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
