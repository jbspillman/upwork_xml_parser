<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005325A1-20030102-D00000.TIF SYSTEM "US20030005325A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005325A1-20030102-D00001.TIF SYSTEM "US20030005325A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005325A1-20030102-D00002.TIF SYSTEM "US20030005325A1-20030102-D00002.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005325</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09895703</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F011/30</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>713</class>
<subclass>200000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Key pad decoder</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Jeff</given-name>
<family-name>Zentner</family-name>
</name>
<residence>
<residence-us>
<city>Rocklin</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Frederic</given-name>
<family-name>Charlier</family-name>
</name>
<residence>
<residence-us>
<city>Rocklin</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>HEWLETT-PACKARD COMPANY</name-1>
<name-2>Intellectual Property Administration</name-2>
<address>
<address-1>P.O. Box 272400</address-1>
<city>Fort Collins</city>
<state>CO</state>
<postalcode>80527-2400</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A system for determining which key of a key-pad device is activated that prevents an unauthorized person from determining secret information therefrom. The key-pad device determines which key is activated by an algorithm that employs the same number of steps to make the determination regardless of which key is pressed. In one embodiment, the algorithm first determines if more than one key is pressed in more than one column. The algorithm then determines which key has been pressed by adding key values associated with each key on a row-by-row basis. Once the algorithm calculates the added value, it then determines whether the added key value exceeds a predetermined value to determine if more than one key has been pressed in the rows. If the added value does not exceed the predetermine value, then the added value is subtracted from another predetermined value to give the key value that is transferred from the device. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This invention relates generally to a key pad decoder for determining which key on a key-pad has been activated and, more particularly, to a key-pad decoder for determining which key on a key-pad has been activated, where the number of steps used to determine which key has been activated is the same regardless of the key pressed, so as to prevent secret information from being decoded by a potential thief. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Discussion of the Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Personal information is sometimes used to identify an individual for various reasons, such as to complete a commercial transaction. For example, personal identification number (PIN) pads are sometimes provided at grocery store checkout lanes to allow a customer to easily pay for goods using a credit card, debit card or check. An example of such a PIN pad is the PIN pad 1000 available from Hewlett-Packard. The PIN pad allows the customer to input information relating to the particular debit or credit card being used and information about the user, such as date of birth, driver&apos;s license number and personal identification number (PIN). This information is then transmitted to a financial database, where the user&apos;s credit and financial information is accessed and verified. The PIN pad includes a key-pad through which the user can input the information, and a display for displaying the entered information and for requesting additional information by a local network computer. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a financial transaction system <highlight><bold>10</bold></highlight> employing a PIN pad <highlight><bold>12</bold></highlight> of the type discussed above. The PIN pad <highlight><bold>12</bold></highlight> includes a key-pad <highlight><bold>14</bold></highlight> having a plurality of keys <highlight><bold>16</bold></highlight> that are pressed to access and activate the PIN pad <highlight><bold>12</bold></highlight>. Further, the PIN pad <highlight><bold>12</bold></highlight> includes a display <highlight><bold>18</bold></highlight> that displays the keys <highlight><bold>16</bold></highlight> activated by the user, and also displays requests for additional information to be entered by the user. Further, the PIN pad <highlight><bold>12</bold></highlight> includes a magnetic strip reader <highlight><bold>20</bold></highlight> that reads a magnetic strip on a credit card or a debit card to be entered into the PIN pad <highlight><bold>12</bold></highlight>, as is well understood in the art. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> When the user presses a key <highlight><bold>16</bold></highlight> on the key-pad <highlight><bold>14</bold></highlight>, the PIN pad <highlight><bold>12</bold></highlight> deciphers the keystroke, and generates a signal indicative of that particular key. In known systems, the PIN pad <highlight><bold>12</bold></highlight> determined which key <highlight><bold>16</bold></highlight> had been pressed by sequentially looking at the values in a look-up table, where each value represents a particular key <highlight><bold>16</bold></highlight>, until a match was found for that key, so that the PIN pad <highlight><bold>12</bold></highlight> would then know which key <highlight><bold>16</bold></highlight> was activated. For example, key A has a binary value associated with it, key B has another binary value associated with it, key C has another binary value associated with it, etc. If the user presses key D, the PIN pad <highlight><bold>12</bold></highlight> would compare the digital representation of the first number in the look-up table to the signal received to determine which key <highlight><bold>16</bold></highlight> was pressed. Since no match would be found, the PIN pad <highlight><bold>12</bold></highlight> would sequentially look at the next value in the table, and so forth, until the PIN pad <highlight><bold>12</bold></highlight> reached the value for key D, where a match would be found. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Once the PIN pad <highlight><bold>12</bold></highlight> determined which key <highlight><bold>16</bold></highlight>, or series of keys, were pressed, it would send this information over a serial bus to a local terminal <highlight><bold>22</bold></highlight>. The local terminal <highlight><bold>22</bold></highlight> would then decipher the information entered into the PIN pad <highlight><bold>12</bold></highlight> by the user, and possibly generate a request returned to the PIN pad <highlight><bold>12</bold></highlight> that would be displayed on the display <highlight><bold>18</bold></highlight>. The user would then respond to the request through the key-pad <highlight><bold>14</bold></highlight> to complete the transaction. The system <highlight><bold>10</bold></highlight> can verify the user or the user&apos;s financial information by transferring the received information from the PIN pad <highlight><bold>12</bold></highlight>, such as the user&apos;s PIN, to a local computer <highlight><bold>24</bold></highlight>, which would then transmit the information to a financial institution <highlight><bold>26</bold></highlight>, such as a bank, over the telephone lines or other connection. Therefore, the user&apos;s financial information and the like can be verified to complete the transaction. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Because the PIN pad <highlight><bold>12</bold></highlight> determined which key <highlight><bold>16</bold></highlight> was depressed by using a look-up table through a sequential matching process, unauthorized persons could gain access to a user&apos;s PIN or other private information by monitoring the time it took the PIN pad <highlight><bold>12</bold></highlight> to determine which key <highlight><bold>16</bold></highlight> was pressed by the user. For example, a potential thief could electrically couple a recording device or the like in the connection between the PIN pad <highlight><bold>12</bold></highlight> and the terminal <highlight><bold>22</bold></highlight>, where the device recorded the time it took the PIN pad <highlight><bold>12</bold></highlight> to determine which key <highlight><bold>16</bold></highlight> was activated. Therefore, based on this time frame, the potential thief could then determine the PIN of the user, and could then use the acquired PIN to access the user&apos;s accounts for nefarious reasons. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> In accordance with the teachings of the present invention, a system is disclosed for determining which key of a key-pad device is activated that prevents an unauthorized person from determining secret information therefrom. The key-pad device determines which key is activated by an algorithm that employs the same number of steps to make the determination regardless of which key is pressed. In one embodiment, the algorithm first determines if more than one key is pressed in more than one column. If more than one key is pressed in more than one column, the algorithm returns an error, and initiates a sub-routine that decodes multiple key presses. If the algorithm determines that only one key has been pressed in one column, the algorithm then determines which key has been pressed by adding the key values for each key pressed on a row-by-row basis. Once the algorithm calculates the added value, it then determines whether the added key value exceeds a predetermined value to determine if more than one key has been pressed in the rows. If the added value does exceed the predetermined value, then the algorithm initiates the multiple key press sub-routine. If the added value does not exceed the predetermined value, then the added value is subtracted from another predetermined value to give the key value that it is transferred from the device. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Additional objects, advantages, and features of the present invention will become apparent from the following description and appended claims, taken in conjunction with the accompanying drawings.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a financial transaction system including a key-pad device; </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a flow chart diagram of a process for determining which key of the key-pad device is activated, according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a decode table for decoding the keys in the key-pad device; and </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is an exchange table corresponding to the decode table. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE EMBODIMENTS </heading>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The following discussion of the embodiments of the invention directed to a technique for determining which key of a key-pad device is activated is merely exemplary in nature, and is in no way intended to limit the invention or its applications or uses. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a flow chart diagram <highlight><bold>30</bold></highlight> depicting the operation of a controller that employs an algorithm that allows a key press of the PIN pad <highlight><bold>12</bold></highlight> to be transferred to the terminal <highlight><bold>22</bold></highlight> as a &ldquo;key value&rdquo; that is read and deciphered by the terminal <highlight><bold>22</bold></highlight>. The algorithm starts at oval <highlight><bold>32</bold></highlight> after certain preliminary signal conditioning steps have occurred, such as a debounce operation. As is known in the art, a debounce operation determines whether a key has been activated for a long enough period of time to register a &ldquo;key press value&rdquo; signal. Further, the algorithm shown in the flow diagram <highlight><bold>30</bold></highlight> is used for determining a single key press, and is generally not applicable as described herein for those functions that require simultaneous key presses for certain operations. Those simultaneous key press operations probably would not benefit from the present invention, but could be included in the overall system algorithm. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The algorithm first determines whether more than one key <highlight><bold>16</bold></highlight> is pressed in more than one column of keys, as shown by decision diamond <highlight><bold>34</bold></highlight>. For example, each time a key is pressed, a bit for that column is set. In one example, the right most bit in a four bit word is set if a key press value is registered for the first column. If the first column registers a set bit, then a &ldquo;counter&rdquo; is set to one, otherwise the counter remains at zero. The next column is then read to determine if it has a set bit or not. In the example above, the bit is set in the second position in the four bit word if a key press value is received for that column. The counter is advanced one if the bit is set, otherwise the counter remains at the previous value. The same process is performed in the next two columns of keys, where the set bit moves over to the left one position in the digital word each time. The counter is then read to determine if it is greater than one. If the counter is greater than one, then more than one key <highlight><bold>16</bold></highlight> has been pressed in more than one column, and an error is returned as shown by box <highlight><bold>36</bold></highlight>. The algorithm then moves to a sub-routine that decodes dual key presses. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> In one non-limiting example, each key is assigned a key press value that is a hexa-decimal representation. If key &num;1 and key &num;2 are pressed at the same time, then the key press value is 0xffee. The NOT of 0xffee is ANDed with 0x000f, which is 1, so the counter is set to 1. The NOT of the 0xffee is shifted to the left one, and again ANDed with 0x000f, which is 1, so 1 is again added to the counter. The NOT of 0xffee is shifted to the left two and ANDed with 0x000f, which is 0, so 0 is added to the counter. The NOT of 0xffee is shifted to the left three bits and ANDed with 0x000f, which is 0, so 0 is added to the counter. Since this is the last column of keys, the counter is set at two, which is larger than 1, so the algorithm determines that more than key was pressed in more than one column. If only one of the two key &num;1 or key &num;2 had been pressed, then the counter would have a 1 at the end of the routine, indicating that only one key had been pressed in one column. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> If the counter determines that only one key has been pressed in all of the columns, the algorithm advances to box <highlight><bold>40</bold></highlight> to add the key press values for all the keys <highlight><bold>16</bold></highlight> that are pressed. The algorithm reads each value assigned to a particular key <highlight><bold>16</bold></highlight> on a row-by-row basis. For example, if no key <highlight><bold>16</bold></highlight> is pressed in the first row of keys, then the accumulated value is zero. The algorithm then adds the key press value of any key <highlight><bold>16</bold></highlight> that is pressed in the next row of keys. The algorithm continues in this manner through the third and fourth row of keys, and adds all of the values of any pressed key. Therefore, the algorithm accumulates all of the values of all of the pressed keys. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a decode table <highlight><bold>50</bold></highlight> including a plurality cells <highlight><bold>52</bold></highlight> arranged in rows <highlight><bold>54</bold></highlight> labeled A-D and columns <highlight><bold>56</bold></highlight> labeled 0-3, as shown. The cells <highlight><bold>52</bold></highlight> in rows A-D and columns 0-3 provide a one to one correspondence for each of the keys <highlight><bold>16</bold></highlight>, where each cell <highlight><bold>52</bold></highlight> includes a particular number represented in hexadecimal. A hexa-decimal representation is merely an example, and is not intended to limit the invention. <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is an exchange table <highlight><bold>60</bold></highlight> corresponding to the decode table <highlight><bold>50</bold></highlight>. In one embodiment, the decode table <highlight><bold>50</bold></highlight> and the exchange table <highlight><bold>60</bold></highlight> are used to add the key press values on a row-by-row basis to determine a valid key value that will be transmitted to the terminal <highlight><bold>22</bold></highlight>. It is stressed, however, that this is by way of a non-limiting example in that other techniques and digital representations of the key <highlight><bold>16</bold></highlight> can be employed within the teachings of the present invention. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The algorithm then determines, at decision diamond <highlight><bold>40</bold></highlight>, if the accumulated key press value equals a predetermined value, such as 1020, representing the added value for all of the keys pressed in all of the rows, including the added key press value for those keys that aren&apos;t pressed (which will be zero). If the answer is yes, the algorithm goes to box <highlight><bold>36</bold></highlight> to begin the dual key press sub-routine. If the answer is no, then the algorithm subtracts a predetermined value, such as 749, from the accumulated value, at box <highlight><bold>42</bold></highlight>, which is the key value that is transmitted to the terminal <highlight><bold>22</bold></highlight>. Thus, the algorithm goes through the same number of steps regardless if the first key is pressed or the last key is pressed to determine the key value. Therefore, a potential thief would not be able to determine the personal information of the user of the PIN pad <highlight><bold>12</bold></highlight> by recording the time it takes to the PIN pad <highlight><bold>12</bold></highlight> to determine which key <highlight><bold>16</bold></highlight> is pressed. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> A non-limiting example of the process conducted by the algorithm at box <highlight><bold>40</bold></highlight> is given below for a valid key press of key &num;6. At the start of the process for box <highlight><bold>40</bold></highlight>, the key press value is 0xfbff. The algorithm takes the NOT of 0xfbff, which is 0x0400, and bit wise ANDs it with 0x000f, which is 0x0. Then, the algorithm looks up the value in the exchange table <highlight><bold>60</bold></highlight> that corresponds to location <highlight><bold>0</bold></highlight> (0x0), which is 4, and adds the value from the decode table <highlight><bold>50</bold></highlight> associated with location A<highlight><bold>4</bold></highlight> to the &ldquo;key value&rdquo;, which is 0xff. The notation A represents the first row and the notation <highlight><bold>4</bold></highlight> represents the value for that row. Then, the algorithm shifts 0xfbff to the right one location, which is 0xfbf, and NOTs and bit wise ANDs it with 0x000f, which is 0x0. Then, the algorithm looks up the value in the exchange table <highlight><bold>60</bold></highlight> that corresponds to location <highlight><bold>0</bold></highlight>, which is 4, and adds the value from the decode table <highlight><bold>50</bold></highlight> associated with location B<highlight><bold>4</bold></highlight> to the &ldquo;key value&rdquo;, which is 0xff, so that the key value is now 0x1fe. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Next, the algorithm shifts 0xfbff to the right two locations, which is 0xfb, then NOTs and bit wise ANDs it with 0x000f, which is 0x4. Then, the algorithm looks up the value in the exchange table <highlight><bold>60</bold></highlight> that corresponds to location <highlight><bold>4</bold></highlight>, which is a 2, and adds the value from the decode table <highlight><bold>50</bold></highlight> associated with location C<highlight><bold>2</bold></highlight> to the key value, which is 0x36, so the key value is now 0x234. Then, the algorithm shifts 0xfbff to the right three locations, which is 0xf, and bit wise ANDs it with 0x000f, which is 0x0. Then, the algorithm looks up the value in the exchange table <highlight><bold>60</bold></highlight> that corresponds to location <highlight><bold>0</bold></highlight>, which is 4, and adds the value from the decode table <highlight><bold>50</bold></highlight> associated with location D<highlight><bold>4</bold></highlight> to the key value, which is 0xff, so that the key value is now 0x333. 0x2fd is then subtracted from 0x333 which gives 0x36, which is the key value transmitted to the terminal <highlight><bold>22</bold></highlight>. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> If both key &num;1 and key &num;4 are pressed at the same time, representing an invalid operation, then the key press value at the start of the operation of box <highlight><bold>40</bold></highlight> is 0xfff9. The algorithm takes the NOT of 0xfff9, which is 0x0006, and bit wise ANDs it with 0x000f, which is 0x6. Then, the algorithm looks up the value in the exchange table <highlight><bold>60</bold></highlight> that corresponds to location <highlight><bold>6</bold></highlight>, which is 4, and adds the value from the decode table <highlight><bold>50</bold></highlight> associated with location A<highlight><bold>4</bold></highlight> to the key value, which is 0xff. Then, the algorithm shifts 0xfff9 to the right one location which is 0xfff, and NOTs and bit wise ANDs it with 0x000f, which is 0x0. Then, the algorithm looks up the value in the exchange table <highlight><bold>60</bold></highlight> that corresponds to location <highlight><bold>0</bold></highlight>, which is 4, and adds the value from the decode table <highlight><bold>50</bold></highlight> associated with the location B<highlight><bold>4</bold></highlight> to the key value, which is 0xff, so the key value is now 0x1fe. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The algorithm then shifts 0xfff9 to the right two locations which is 0xff, then NOTs and bit wise ANDs it with 0x000f, which is 0x<highlight><bold>4</bold></highlight>. Then, the algorithm looks up the value in exchange table <highlight><bold>60</bold></highlight> that corresponds to location <highlight><bold>0</bold></highlight>, which is 4, and adds the value from the decode table <highlight><bold>50</bold></highlight> associated with location C<highlight><bold>2</bold></highlight> to the key value, which is 0xff, so the key value is now 0x2fd. Next, the algorithm shifts 0xfff9 to the right three locations, which is 0xf, and bit wise ANDs it with 0x000f, which is 0x0. Then, the algorithm looks up the value in exchange table <highlight><bold>60</bold></highlight> that corresponds to location <highlight><bold>0</bold></highlight>, which is 4, and adds the value from the decode table <highlight><bold>50</bold></highlight> associated with location D<highlight><bold>4</bold></highlight> to the key value, which is 0xff, so that the key value is now 0x3fc. This key value represents multiple key presses, and is not returned as a key value. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The foregoing discussion discloses and describes merely exemplary embodiments of the present invention. One skilled in the art will readily recognize from such discussion, and from the accompanying drawings and claims, that various changes, modifications or variations can be made therein without departing from the spirit and scope of the invention as defined in the following claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A key-pad device comprising: 
<claim-text>a key-pad including a plurality of keys; and </claim-text>
<claim-text>a key-pad controller providing a key value signal when one of the keys is activated, said controller determining which key is activated by a process including a predetermined number of steps, wherein the process has the same number of steps regardless of which key is activated. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The device according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising a display and a magnetic strip reader. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The device according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the plurality of keys are arranged in a plurality of rows and a plurality of columns. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The device according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference> wherein the controller determines if more than one key has been activated in more than one column. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The device according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference> wherein the controller adds a counter value to a counter if a key is activated in a column, and wherein the controller determines which column is being monitored for a key activation by a set bit in a digital word. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The device according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference> wherein the controller determines which key has been activated on a row-by-row basis. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The device according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference> wherein each key is assigned a predetermined key press value, said controller adding the key press values of activated keys. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The device according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein the controller compares the added key values to a predetermined value to determine if multiple keys have been activated. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The device according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein the controller subtracts the added key value from a predetermined value to calculate a key value to be transmitted. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A key-pad device for transferring a key value representative of a key press to a terminal, said device comprising: 
<claim-text>a key-pad including a plurality of keys arranged in a plurality of rows and a plurality of columns; and </claim-text>
<claim-text>a key-pad controller outputting the key value to the terminal when one of the keys is pressed, said controller determining the key that is pressed by a process including a predetermined number of steps, where the number of steps is the same regardless of which key is pressed, said controller determining if more than one key has been pressed in more than one column, and then if only one key has been pressed, determining which key has been pressed on a row-by-row basis by adding key press values for each key that is pressed. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The device according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein the controller adds a counter value to a counter if a key is pressed in a column, and wherein the controller determines that more than one key has been pressed in more than one column if the counter value in the counter is greater than a predetermined value. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The device according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein the controller adds the key press value for each key pressed in a particular row before moving on to a next row. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The device according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein the controller compares the added key value to a predetermined value to determine if multiple keys have been pressed. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The device according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein the controller subtracts the added key value from a predetermined value to determine the key value to be transmitted to the terminal. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A method of determining which key of a key-pad device having a plurality of keys arranged in a plurality of rows and a plurality of columns has been pressed, comprising: 
<claim-text>assigning each key a key press value; </claim-text>
<claim-text>determining if a key has been pressed in one of the columns; </claim-text>
<claim-text>advancing a counter by a counter value if a key has been pressed; </claim-text>
<claim-text>determining if a key has been pressed in a next column and adding the counter value to the counter if a key has been pressed, otherwise keeping the counter value the same; </claim-text>
<claim-text>adding the key press value of all of the keys that have been pressed in a first row to generate a first row added key value; </claim-text>
<claim-text>adding the key press value of all of the keys that have been pressed in a second row and adding the added key press values of the second row to the added key value; </claim-text>
<claim-text>determining whether the added key value exceeds a predetermined value; and </claim-text>
<claim-text>transferring the key value from the key-pad device if the added key value does not exceed the predetermined value. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein the key-pad includes four rows and four columns, and wherein advancing the counter for each pressed key in each column is performed for all four columns, and wherein adding the key press values for all of the keys is performed for all four of the rows. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> further comprising subtracting the added key value from a predetermined value to calculate the key value that is transmitted. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein determining if a key has been pressed in one of the columns includes setting a set bit for a particular column if a key has been pressed in that column.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005325A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005325A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005325A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
