<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030001862A1-20030102-D00000.TIF SYSTEM "US20030001862A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030001862A1-20030102-D00001.TIF SYSTEM "US20030001862A1-20030102-D00001.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030001862</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09895768</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G09G005/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>345</class>
<subclass>611000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method for the minimization of artifacts in full frame animations transferred to NTSC interlaced video</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Michael</given-name>
<middle-name>H.</middle-name>
<family-name>Chu</family-name>
</name>
<residence>
<residence-us>
<city>Santa Clara</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Jean-Yves</given-name>
<family-name>Bouguet</family-name>
</name>
<residence>
<residence-us>
<city>Milpitas</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Radek</given-name>
<family-name>Grzeszczuk</family-name>
</name>
<residence>
<residence-us>
<city>Mountain View</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>KENYON &amp; KENYON</name-1>
<name-2></name-2>
<address>
<address-1>333 W. San Carlos, Street, Suite 600</address-1>
<city>San Jose</city>
<state>CA</state>
<postalcode>95110-2711</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The present invention describes a procedure designed to reduce artifacts full-frame animations are taken and converted for use on an interlaced display (such as NTSC televisions). Each frame of animation is rendered at four times video resolution (1440&times;960 for video at 720&times;480) and twice temporal resolution (120 frames per second). Each frame is then resized with bicubic interpolation to 720&times;480 to produce smooth antialiased frames. Every pair of frames is then frame blended together to form one frame with motion blur. A gaussian blur of 0.2 pixel radius is applied to each frame and, finally, odd fields from each odd frame are interlaced with even fields from each even frame. The resulting video is smooth with minimal aliasing artifacts. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The field of the present invention is that of image processing, and more specifically, the field of conversion of fill frame animation into video with interlaced fields. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> In conventional video/image processing software, procedures designed to reduce artifacts when taking full-frame animations and converting them so that they may be used on an interlaced display (such as NTSC televisions). Because NTSC video is interlaced, many computer generated animations appear to flicker when they are displayed on television. Also, motion shown in interlaced video that has been converted from full frame animation tends to be discrete and unrealistic due to aliasing effects. There are many ways to reduce this flickering effect and present smooth, presentable television graphics. The method described in the present invention herein was invented as one way to minimize the artifacts introduced when converting full-frame animation to interlaced video such as NTSC video.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates a flowchart of the method embodied by the present invention. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a flow chart of the process by which high-quality animation for interlaced video is produced from full frame animation which typically is displayed on a computer screen. Each frame of animation is &ldquo;rendered&rdquo; (or produced) at four times video resolution. The frames may be rendered at other whole number multiples of a digital video resolution value. The rendering step <highlight><bold>10</bold></highlight> is shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Four times video resolution at 720&times;480 DV is 1440&times;960. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The animated full frames are also rendered at twice the temporal resolution. Twice a typical temporal resolution for animation (60 frames per second), is 120 frames per second. Each full frame is then resized with bicubic interpolation to 720&times;480 pixel per frame in order to produce smooth, anti-aliased frames. The step of performing bicubic interpolation is shown in step <highlight><bold>20</bold></highlight>. Bicubic interpolation is a method of translating the colors and characteristics of a pixel from an original image to a target image by using weighted values of pixels in the original image lying along a Bezier curve. Bezier curves possess properties that allow smoothly-joined target pixels to be drawn when the curves are used to locate pixels that will be used to calculate the position of the target pixel. Many drawing programs use Bezier cubic curves, which may be defined by the following parametric equations: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>X</italic></highlight>(<highlight><italic>t</italic></highlight>)&equals;<highlight><italic>e</italic></highlight><highlight><subscript>x</subscript></highlight><highlight><italic>t</italic></highlight><highlight><superscript>3</superscript></highlight><highlight><italic>&plus;f</italic></highlight><highlight><subscript>x</subscript></highlight><highlight><italic>t</italic></highlight><highlight><superscript>2</superscript></highlight><highlight><italic>&plus;g</italic></highlight><highlight><subscript>x</subscript></highlight><highlight><italic>t&plus;h</italic></highlight><highlight><subscript>1 </subscript></highlight></in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>Y</italic></highlight>(<highlight><italic>t</italic></highlight>)&equals;<highlight><italic>e</italic></highlight><highlight><subscript>y</subscript></highlight><highlight><italic>t</italic></highlight><highlight><superscript>3</superscript></highlight><highlight><italic>&plus;f</italic></highlight><highlight><subscript>y</subscript></highlight><highlight><italic>t</italic></highlight><highlight><superscript>2</superscript></highlight><highlight><italic>&plus;g</italic></highlight><highlight><subscript>y</subscript></highlight><highlight><italic>t&plus;i</italic></highlight><highlight><subscript>1 </subscript></highlight></in-line-formula></paragraph>
<paragraph id="P-0006" lvl="7"><number>&lsqb;0006&rsqb;</number> first endpoint is given by P<highlight><subscript>1</subscript></highlight>&equals;(h<highlight><subscript>1</subscript></highlight>, i<highlight><subscript>1</subscript></highlight>). The second endpoint is given by P<highlight><subscript>4</subscript></highlight>&equals;(h<highlight><subscript>4</subscript></highlight>,i<highlight><subscript>4</subscript></highlight>)&equals;(h<highlight><subscript>1</subscript></highlight>&plus;g<highlight><subscript>x</subscript></highlight>&plus;f<highlight><subscript>x</subscript></highlight>&plus;e<highlight><subscript>x</subscript></highlight>i<highlight><subscript>1</subscript></highlight>&plus;g<highlight><subscript>y</subscript></highlight>&plus;f<highlight><subscript>y</subscript></highlight>&plus;e<highlight><subscript>y</subscript></highlight>). The two remaining points which define the Bezier curve may be defined as follows: P<highlight><subscript>2</subscript></highlight>&equals;(h<highlight><subscript>2</subscript></highlight>, i<highlight><subscript>2</subscript></highlight>)&equals;(h<highlight><subscript>1</subscript></highlight>&plus;g<highlight><subscript>x</subscript></highlight>/3, i<highlight><subscript>1</subscript></highlight>&plus;gx/3), P<highlight><subscript>3</subscript></highlight>&equals;(h<highlight><subscript>3</subscript></highlight>, i<highlight><subscript>3</subscript></highlight>)&equals;(h<highlight><subscript>2</subscript></highlight>&plus;(g<highlight><subscript>x</subscript></highlight>&plus;f<highlight><subscript>x</subscript></highlight>)/3, i<highlight><subscript>2</subscript></highlight>&plus;(g<highlight><subscript>y </subscript></highlight>&plus;f<highlight><subscript>y</subscript></highlight>)/3). The Bezier curves are defined by the intersections of three lines at the four points P<highlight><subscript>1</subscript></highlight>-P<highlight><subscript>4</subscript></highlight>. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Bicubic interpolation involves &ldquo;averaging&rdquo; the position of each pixel lying along the Bezier curve. For example, when AfterEffects is used to perform bicubic interpolation, a Bezier pen allows control points to be added to a graph. This graph shows how various characteristics of an object may be changed (such as the angle, size or location). Every pair of frames is then frame blended together to form one frame, producing a &ldquo;motion blur&rdquo; effect. This step is depicted in the block labeled <highlight><bold>30</bold></highlight>. Because images that are close temporally are combined, any motion between frames is combined and blurred together when add the frames together. Many graphics applications including frame blending capability may be used to implement motion blurring. The principle is to simply take the average value of each pixel of two frames to form one frame. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> A gaussian blur of 0.2 pixel radius is then applied to each frame. Gaussian blurring typically is performed after motion blurring. Gaussian blurring is a method of blurring adjacent pixels that involves weighing the color of each pixel based upon weighting factors located along a gaussian distribution. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Gaussian blurring involves blurring the colors and images depicted in pixels that are within a gaussian blur radius value of a designated center pixel. The number of pixels included in the gaussian blur process is proportional to a gaussian blur radius measured the center of a designated center pixel. Typically, a gaussian blur radius between 0.2 and 1.0 effectively removes the effects of aliasing. A larger gaussian blur radius will produce a more pronounced effect. The weights that are multiplied by each pixel are contained in a so-called &ldquo;convolution mask.&rdquo; In a &ldquo;discrete&rdquo; convolution mask, each pixel may be weighted by an identical amount so that each pixel to which the mask is applied is weighted evenly. However, in a gaussian convolution mask, weights decline gradually in a way that mimics the elevations of a gaussian distribution at various points. The &ldquo;center&rdquo; pixel of the group of pixels that form the mask is given the highest weight which corresponds to the middle of a gaussian distribution. Samples are taken from the gaussian distribution in order to fill the finite number of spaces in the mask. Pixels on the periphery of the group of pixels to which the mask is applied are given weights that correspond to the edges of the mask. This step is shown in block <highlight><bold>40</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Afterwards, odd fields from each odd frame are interlaced with even fields from each even frame, forming the final interlaced video frames (such as NTSC video) which are displayed at 30 frames per second (60 fields per second). The resulting video is smooth with minimal aliasing artifacts. The field interlacing step is shown as step <highlight><bold>50</bold></highlight> and the step involving the display of video is shown as step <highlight><bold>60</bold></highlight>. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> This method is advantageous because it is straightforward to implement with commercial software currently available and produces high quality video. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> This technique has already been used in the production of Siggraph Paper Video entitled &ldquo;Light Field Mapping: Efficient Compression and Interactive Rendering of Surface Light Fields,&rdquo; but the present invention was by no means described therein. By using this method, Intel was able to produce smooth video from a rendering program designed by Intel. Full frame video animation produced by a rendering program used in the present invention would not be smooth without this technique. This method will continue to be used in future Intel video productions relating to computer animation. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The present invention has many applications beyond the primary embodiment discussed above. The invention may be used in the context of the creation of stop motion animation or &ldquo;claymation&rdquo; images. Stop motion animation is a method of animation that involves taking a picture of a scene, moving a camera, taking a second picture, moving the camera a second time, and so forth. The process described in the previous sentence is repeated until a particular scene is completed. At the moment each photograph or image is captured, no movement occurs&mdash;both the camera and the objects are stationary. Between frames, both can be moved, but when a photograph is taken, everything is static again. Thus no motion occurs during a photograph. If played back fast enough, an individual&apos;s concludes that objects in photographs are moving but the motion individuals&apos; detect is not smooth because the object are in fact stationary and an individual&apos;s eyes typically detect physical clues of a lack of continuous motion. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The present invention may also be able to be used with a motion blur process that that blends previously blended frames with a subsequent frame that was not blended. For instance, if frames A, B, C, and D were to be blended, frames A and B would be blended together, then frames B and C would be blended together, and then frames C and D would be blended together to create three blended frames from four. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> However, the number of frames displayed per second in a stop motion animation film may be reduced from 120 frames per second to 60 frames per second. If the frame rate of a stop motion animation film is reduced in this manner, an effect may be created that simulates motion blur when applied to full frame video. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> While certain embodiments of the present invention have been described herein, the present invention should not be construed as being restricted to those embodiments. All embodiments and implementations covered by the claims as amended will be embraced by the present invention. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> While certain embodiments of the present invention have been described herein, the present invention should not be construed as being restricted to those embodiments. All embodiments and implementations covered by the claims as amended will be embraced by the present invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of converting animation into video with interlaced fields, the method comprising: 
<claim-text>Rendering of full frames at a whole number multiple of a digital video resolution value defining the number of pixels contained in each frame and at a whole number multiple of a temporal resolution value defining the rate of display of full frames on a computer screen; </claim-text>
<claim-text>Resizing each full frame to produce a plurality of frames that are antialiased; </claim-text>
<claim-text>Blending each consecutive frame. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A method of converting animation into video with interlaced fields, the method comprising: 
<claim-text>Rendering of full frames at a whole number multiple of a digital video resolution value defining the number of pixels contained in each frame and at a whole number multiple of a temporal resolution value defining the rate of display of full frames on a computer screen; </claim-text>
<claim-text>Resizing each full frame to produce a plurality of frames that are antialiased; </claim-text>
<claim-text>Blending each consecutive frame; </claim-text>
<claim-text>Blending the colors and images depicted in pixels that are within a gaussian blur radius value of a center pixel, wherein the number of pixels blended is proportional to a gaussian blur radius; </claim-text>
<claim-text>Separating each frame into a first and second field, wherein the first field contains the even lines of a frame and the second field contains the odd lines of a frame; </claim-text>
<claim-text>Alternately displaying the first and second fields of each frame, the first field of each frame with the second field of each frame. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein blending the colors and images depicted in pixels that are within a gaussian blur radius value of a center pixel is performed, wherein the number of pixels blended is proportional to a gaussian blur radius. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein separating each frame into a first and second field, the first field contains the even lines of a frame and the second field contains the odd lines of a frame. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein alternately displaying the first and second fields of each frame, the first field of each frame with the second field of each frame. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein resizing each full frame to produce antialiased frames is performed with bicubic interpolation. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein each pair of consecutive frames is blended by averaging corresponding pixel values of each frame. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein gaussian blurring of a non-zero pixel radius is performed that blends the colors and images depicted in pixels that are within a gaussian blur radius value of a center pixel. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein resizing each full frame to produce antialiased frames is performed with bicubic interpolation. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein each pair of consecutive frames is blended by averaging corresponding pixel values of each frame. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein gaussian blurring of a non-zero pixel radius is performed that blends the colors and images depicted in pixels that are within a gaussian blur radius value of a center pixel. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the gaussian blur pixel radius is 0.2. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the gaussian blur pixel radius is greater than 0.2. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the gaussian blur pixel radius is less than 0.2. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said rendering step is implemented using &ldquo;Photoshop&rdquo; software. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said separating step is implemented using &ldquo;After Effects&rdquo; software. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said animation consists of film displayed at the rate of at least 24 frames per second. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said rendering step is performed with &ldquo;Renderman&rdquo; software. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A video conversion system, the system comprising: 
<claim-text>A computer terminal defining the number of pixels contained in each frame of full frames that are rendered at a whole number multiple of a digital video resolution value and that are rendered at a whole number multiple of a temporal resolution value defining the rate of display of full frames; </claim-text>
<claim-text>A computer screen attached to said terminal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein each full frame is resized to produce antialiased frames. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the colors and images depicted in pixels located at identically numbered pixel points in each frame are blended together. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein each frame is separated into a first and second field. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein the first field contains the even lines of a frame and the second field contains the odd lines of a frame. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein the first and second fields of each frame are interlaced and displayed alternately. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, wherein each full frame is resized to produce antialiased frames using bicubic interpolation. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein each pair of consecutive frames is blended by averaging corresponding pixel values of each frame. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, wherein gaussian blurring is performed that blends the colors and images depicted in pixels that are in proximity to one another in each frame. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, wherein the gaussian blur pixel radius is 0.2. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein the gaussian blur pixel radius is greater than 0.2.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030001862A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030001862A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
