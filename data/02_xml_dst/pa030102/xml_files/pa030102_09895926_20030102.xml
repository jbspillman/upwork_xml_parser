<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002609A1-20030102-D00000.TIF SYSTEM "US20030002609A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002609A1-20030102-D00001.TIF SYSTEM "US20030002609A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002609A1-20030102-D00002.TIF SYSTEM "US20030002609A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002609A1-20030102-D00003.TIF SYSTEM "US20030002609A1-20030102-D00003.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002609</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09895926</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L007/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>375</class>
<subclass>372000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method and apparatus for frame-based buffer control in a communication system</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Christof</given-name>
<family-name>Faller</family-name>
</name>
<residence>
<residence-us>
<city>Murray Hill</city>
<state>NJ</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Raziel</given-name>
<family-name>Haimi-Cohen</family-name>
</name>
<residence>
<residence-us>
<city>Springfield</city>
<state>NJ</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>Ryan, Mason &amp; Lewis, LLP</name-1>
<name-2></name-2>
<address>
<address-1>Suite 205</address-1>
<address-2>1300 Post Road</address-2>
<city>Fairfield</city>
<state>CT</state>
<postalcode>06430</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method and apparatus are disclosed for controlling a buffer in a digital audio broadcasting (DAB) communication system. The decoder buffer level limits are specified in terms of a maximum number of encoded frames (or duration). The transmitter can predict the number of encoded frames, F<highlight><subscript>pred</subscript></highlight>, in the decoder buffer and transmit the value, F<highlight><subscript>pred</subscript></highlight>, to the receiver with the audio data. If the transmitter determines that the decoder buffer level is becoming too high, the frames being generated by the encoder are too small and additional bits are allocated to each frame for each of the N programs. Likewise, if the transmitter determines that the decoder buffer level is becoming too low, the frames being generated by the encoder are too big and fewer bits are allocated to each frame for each of the N programs. The transmitted predicted buffer level, F<highlight><subscript>pred</subscript></highlight>, can also be employed to (i) determine when the decoder should commence decoding frames; and (ii) synchronize the transmitter and the receiver. The receiver fills the decoder buffer until F<highlight><subscript>pred </subscript></highlight>frames are received before commencing decoding frames when the decoder first starts up or possibly when a new audio program is selected. The transmitter and receiver clocks may be synchronized by adjusting the clock at the receiver by using a feedback loop that compares the actual level of the decoder buffer to the predicted value, F<highlight><subscript>pred</subscript></highlight>, received from the transmitter (a higher number of encoded frames in the buffer indicates that the clock of the receiver is too slow and should be increased, and a lower number of encoded frames in the buffer indicates that the clock of the receiver is too fast and needs to be slowed down). </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates generally to digital audio broadcasting (DAB) and other types of digital communication systems, and more particularly, to buffer control techniques for such digital audio broadcasting (DAB) and other types of digital communication systems. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Proposed systems for providing digital audio broadcasting (DAB) are expected to provide near compact disk (CD)-quality audio, data services and more robust coverage than existing analog FM transmissions. Digital audio broadcasting systems compress an audio signal using a digital audio encoder, such as a perceptual audio coder (PAC). Perceptual audio coders reduce the amount of information needed to represent an audio signal by exploiting human perception and minimizing the perceived distortion for a given bit rate. Perceptual audio coders are described, for example, in D. Sinha et al., &ldquo;The Perceptual Audio Coder,&rdquo; Digital Audio, Section 42, 42-1 to 42-18, (CRC Press, 1998), incorporated by reference herein. Generally, the amount of information needed to represent an audio signal is reduced using two well-known techniques, namely, irrelevancy reduction and redundancy removal. Irrelevancy reduction techniques attempt to remove those portions of the audio signal that would be, when decoded, perceptually irrelevant to a listener. This general concept is described, for example, in U.S. Pat. No. 5,341,457, entitled &ldquo;Perceptual Coding of Audio Signals,&rdquo; by J. L. Hall and J. D. Johnston, issued on Aug. 23, 1994, incorporated by reference herein. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Digital radio will be offered in a single channel and multiple channel form. The single channel form will use the existing infrastructure of FM broadcasting. Each digital audio channel is broadcast in the bandwidth allocated to one FM channel. Until such time as a transition to an all-digital DAB system can be achieved, many broadcasters require an intermediate solution in which the analog and digital signals can be transmitted simultaneously within the same licensed band. Such systems are typically referred to as hybrid in-band on-channel (HIBOC) DAB systems, and are being developed for both the FM and AM radio bands. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates a conventional DAB communication system <highlight><bold>100</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the DAB communication system <highlight><bold>100</bold></highlight> employs a radio transmission link <highlight><bold>130</bold></highlight> that is typically of a fixed bit rate. The bit rate of the audio encoder <highlight><bold>110</bold></highlight>, on the other hand, is typically variable, depending on the complexity of the current audio signal and the audio quality requirements. On average, the bit rate of the audio encoder <highlight><bold>110</bold></highlight> is equal to or less than the capacity of the transmission link <highlight><bold>130</bold></highlight>, but at any given instance the bit rate of the audio coder <highlight><bold>110</bold></highlight> may be higher. If data from the audio encoder <highlight><bold>110</bold></highlight> was applied directly to the transmission link <highlight><bold>130</bold></highlight>, data would be lost each time the instantaneous bit rate of the encoder <highlight><bold>110</bold></highlight> exceeded the capacity of the transmission link <highlight><bold>130</bold></highlight>. In order to prevent such a loss of data, the output of the encoder <highlight><bold>110</bold></highlight> is buffered into a first-in-first-out (FIFO) buffer <highlight><bold>120</bold></highlight> before being applied to the transmission link <highlight><bold>130</bold></highlight>. If the instantaneous bit rate of the encoder <highlight><bold>110</bold></highlight> is higher than the bit rate of the transmission link, the amount of data in the FIFO buffer <highlight><bold>120</bold></highlight> increases. Similarly, if the instantaneous bit rate of the encoder <highlight><bold>110</bold></highlight> is lower than the bit rate of the transmission link <highlight><bold>130</bold></highlight>, the amount of data in the FIFO buffer <highlight><bold>120</bold></highlight> decreases. The encoder <highlight><bold>110</bold></highlight> typically contains a control loop that modifies the bit rate of the encoder <highlight><bold>110</bold></highlight> and prevents the encoder <highlight><bold>110</bold></highlight> from overflowing or underflowing the FIFO buffer <highlight><bold>120</bold></highlight>. Overflow causes a loss of bits, while an underflow wastes some of the capacity the transmission link <highlight><bold>130</bold></highlight>. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> As a result of this scheme, the transmission delay is also variable. The delay between the time when an audio packet is first written into the FIFO buffer <highlight><bold>120</bold></highlight> and the time when the packet is actually received by the receiver <highlight><bold>150</bold></highlight> depends, among other factors, on the amount of data that is currently stored in the FIFO buffer <highlight><bold>120</bold></highlight>. However, the audio decoder <highlight><bold>170</bold></highlight> at the receiver <highlight><bold>150</bold></highlight> needs to get audio packets at a fixed rate (of packets per second) in order to play continuously. Therefore, it is necessary to buffer the audio data at the decoder <highlight><bold>170</bold></highlight> by using a buffer <highlight><bold>160</bold></highlight>. When the receiver <highlight><bold>150</bold></highlight> is first powered up or is tuned to a new channel, the decoder <highlight><bold>170</bold></highlight> begins to play only after a certain initialization period, during which time packets are received and stored in the decoder-input buffer <highlight><bold>160</bold></highlight>. After the decoder <highlight><bold>170</bold></highlight> begins playing, the decoder <highlight><bold>170</bold></highlight> consumes packets from the input buffer <highlight><bold>160</bold></highlight> at a fixed rate, while at the same time new packets arrive and are stored in the same buffer <highlight><bold>160</bold></highlight>. The decoder input-buffer <highlight><bold>160</bold></highlight> has to have enough capacity so that even in the worst case of minimal delay and largest packet size, the buffer <highlight><bold>160</bold></highlight> will not overflow. In addition, the initialization period has to be sufficiently long to accumulate enough packets in the buffer <highlight><bold>160</bold></highlight> so that the buffer does not become empty due to transmission delays. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates a conventional multiple channel DAB communication system <highlight><bold>200</bold></highlight> that multiplexes N audio programs into one bitstream. A commercial example of such a multiple channel DAB communication system <highlight><bold>200</bold></highlight> is the Sirius Satellite Radio network. In such a multiple channel DAB communication system <highlight><bold>200</bold></highlight>, N audio channels (e.g., N can be on the order of 100) are sampled and each sampled signal is applied to a corresponding audio encoder <highlight><bold>210</bold></highlight>-<highlight><bold>1</bold></highlight> through <highlight><bold>210</bold></highlight>-N (hereinafter, collectively referred to as audio encoders <highlight><bold>210</bold></highlight>). The bit streams generated by each audio encoder <highlight><bold>210</bold></highlight> are multiplexed at a joint bitstream stage <highlight><bold>220</bold></highlight> and buffered by a FIFO buffer <highlight><bold>230</bold></highlight> to form a composite bit stream of a very high bit rate. This composite bit stream is modulated and transmitted as a wide band radio signal. At the receiver <highlight><bold>250</bold></highlight>, the composite bit stream is recovered from the incoming signal and demultiplexed by a bitstream parser <highlight><bold>260</bold></highlight>. All channels are discarded except for the channel that is currently selected for listening. The bit stream of the selected channel is buffered by a FIFO buffer <highlight><bold>270</bold></highlight>, decoded by an audio decoder <highlight><bold>280</bold></highlight> and converted to an analog audio signal. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Typically, the level of the buffers in a DAB communication system, such as the DAB communication systems <highlight><bold>100</bold></highlight>, <highlight><bold>200</bold></highlight> illustrated in <cross-reference target="DRAWINGS">FIGS. 1 and 2</cross-reference>, respectively, is specified and monitored in terms of a maximum number of bits. Normally, the centralized transmitter can have a high cost and thus the encoder buffer <highlight><bold>120</bold></highlight>, <highlight><bold>230</bold></highlight> can be virtually any size. For the receivers, however, the buffer-size is a cost critical factor. In a multiple channel DAB system, such as the communication system <highlight><bold>200</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the decoder <highlight><bold>280</bold></highlight> decodes different radio programs based on the selected channel. Thus, the buffer-level measured in terms of the number of bits is different for each program that is decoded, since each of the N multiplexed encoded audio programs can have a different momentary bit rate. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Another issue in the design of DAB communication systems is the synchronization between the encoder <highlight><bold>110</bold></highlight> and the decoder <highlight><bold>160</bold></highlight>. After the decoder <highlight><bold>170</bold></highlight> at the receiver <highlight><bold>150</bold></highlight> decodes a packet, the receiver <highlight><bold>150</bold></highlight> converts the resulting audio samples into an analog signal by applying the samples to a digital to analog converter (D/A) at a rate that should be identical to the sampling rate at the encoder <highlight><bold>110</bold></highlight>. If the sampling rates at the encoder <highlight><bold>110</bold></highlight> and decoder <highlight><bold>170</bold></highlight> are even slightly different (a few parts per million), the packet buffer <highlight><bold>160</bold></highlight> at the decoder <highlight><bold>170</bold></highlight> will eventually overflow or underflow. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> A need therefore exists for an improved buffer control technique that utilizes a buffer-level limit that may be applied regardless of the program selected by the receiver. In addition, a need exists for an improved buffer control technique that helps to synchronize the encoder and the decoder in a DAB communication system. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Generally, a method and apparatus are disclosed for controlling a buffer in a digital audio broadcasting (DAB) communication system. According to one aspect of the invention, the same number of encoded frames are transmitted for each of the N audio programs in a multiplexed bit stream and the decoder buffer level limits are specified in terms of a maximum number of encoded frames (or duration). Thus, a buffer limit specified in terms of the number of encoded frames in the decoder buffer will be the same regardless of the selected program. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> Thus, the present invention controls the level of the decoder buffer for each of the N audio programs at once, by ensuring that the level of the decoder buffer stays within a given range of frames. The transmitter can compute a predicted number of encoded frames in the decoder buffer, F<highlight><subscript>pred</subscript></highlight>, and transmit this value, F<highlight><subscript>pred</subscript></highlight>, to the receiver with the audio data. Generally, the transmitter can compute the number of encoded frames in the decoder buffer using the respective data rates of the transmitter and receiver and the channel bit rate. In addition, if the transmitter determines that the decoder buffer level is becoming too high, which means that the encoded frames generated by the encoder are too small on average, then additional bits are allocated to each frame in some or all of the N programs. Likewise, if the transmitter determines that the decoder buffer level is becoming too low, which means that the encoded frames generated by the encoder are too big on average, then fewer bits are allocated to each frame in some or all of the N programs. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> According to another aspect of the invention, the transmitted predicted buffer level, F<highlight><subscript>pred</subscript></highlight>, can be employed to (i) determine when the receiver should commence decoding frames; and (ii) synchronize the transmitter and the receiver. The receiver receives the predicted value, F<highlight><subscript>pred</subscript></highlight>, from the transmitter and compares the actual buffer level with the predicted level, F<highlight><subscript>pred</subscript></highlight>. The receiver fills the decoder buffer until F<highlight><subscript>pred </subscript></highlight>frames are received before commencing decoding of frames, when the decoder first starts up or possibly when a new audio program is selected, in order to be synchronized with the computation of the predicted decoder buffer level, F<highlight><subscript>pred</subscript></highlight>. In addition, the receiver uses the received predicted value, F<highlight><subscript>pred</subscript></highlight>, to adjust the local receiver clock such that the clock is synchronized with the transmitter. In this manner, the transmitter and receiver may be synchronized by adjusting the clock at the receiver by using a feedback loop that compares the actual level of the decoder buffer to the predicted value, F<highlight><subscript>pred</subscript></highlight>, received from the transmitter. A higher number of encoded frames in the decoder buffer indicates that the clock of the receiver is too slow and should be increased, and conversely, a lower number of encoded frames in the buffer indicates that the clock of the receiver is too fast and needs to be slowed down. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> A more complete understanding of the present invention, as well as further features and advantages of the present invention, will be obtained by reference to the following detailed description and drawings.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates a conventional DAB communication system; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates a conventional multiple channel DAB communication system that multiplexes N audio programs into a single bitstream; and </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates a multiple channel DAB communication system in accordance with the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates a multiple channel DAB communication system <highlight><bold>300</bold></highlight> in accordance with the present invention. According to one aspect of the present invention, the buffer level limit is specified in terms of a maximum number of encoded frames, or duration. As discussed further below, the present invention ensures that the number of encoded frames that are transmitted (as opposed to the number of bits that are transmitted) is the same for each of the N audio programs in a multiple channel communication system. It is noted that an encoded frame for one program may arrive before an encoded frame of another program in the interleaved stream. Thus, the instantaneous number of frames transmitted can differ by up to a few frames, which can be regarded as jitter. In any event, the number of encoded frames in the decoder buffer provides a good measure for the buffer-level, because the number of encoded frames in the decoder buffer will be the same for all decoders playing back any of the N audio programs. As used herein, all references to the term &ldquo;buffer level&rdquo; indicate the number of encoded frames in the buffer. It should be clear that two buffers with the same buffer level may nonetheless contain a different number of bits, depending on the instantaneous bit rate. Nevertheless, for typical audio coding algorithms it is possible to set, for any buffer level, a corresponding upper bound on the number of bits in the buffer. </paragraph>
</section>
<section>
<heading lvl="1">DAB Transmitter </heading>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the DAB communication system <highlight><bold>300</bold></highlight> includes a transmitter <highlight><bold>305</bold></highlight> and a receiver <highlight><bold>360</bold></highlight>. The communication system <highlight><bold>300</bold></highlight> converts N audio channels to digital signals using D/A converters <highlight><bold>310</bold></highlight>-<highlight><bold>1</bold></highlight> through <highlight><bold>310</bold></highlight>-N (hereinafter, collectively referred to as D/A converters <highlight><bold>310</bold></highlight>). The digital signals are then applied to a corresponding PAC encoder <highlight><bold>320</bold></highlight>-<highlight><bold>1</bold></highlight> through <highlight><bold>320</bold></highlight>-N (hereinafter, collectively referred to as PAC encoders <highlight><bold>320</bold></highlight>). The bit streams generated by each PAC encoder <highlight><bold>320</bold></highlight> are multiplexed by a multiplexer <highlight><bold>340</bold></highlight> and buffered by a FIFO buffer <highlight><bold>345</bold></highlight> to form a composite bit stream. A channel encoder <highlight><bold>350</bold></highlight> performs a number of operations on the composite bit stream, such as error correction coding and interleaving. The channel encoder <highlight><bold>350</bold></highlight> is an additional source of variable delay at the PAC decoder. A radio transmitter <highlight><bold>355</bold></highlight> modulates and transmits the composite bit stream as a wide band radio signal via an RF link <highlight><bold>358</bold></highlight>. A rate controller <highlight><bold>330</bold></highlight> modifies the bit rate of the PAC encoders <highlight><bold>320</bold></highlight> to prevent the PAC encoders <highlight><bold>320</bold></highlight> from overflowing or underflowing the decoder buffer <highlight><bold>380</bold></highlight>, in a manner discussed further below. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> According to one feature of the invention, the multiplexer <highlight><bold>340</bold></highlight> maintains an equal frame rate for all N programs. Generally, the multiplexer <highlight><bold>340</bold></highlight> has an output frame rate, i.e., the number of encoded frames written into the buffer <highlight><bold>345</bold></highlight> in a time unit, that is approximately equal for all N programs. In one exemplary implementation, the frame rate is kept equal for all N channels by using a round robin scheme. The multiplexer <highlight><bold>340</bold></highlight> keeps feeding bits from a particular PAC encoder <highlight><bold>320</bold></highlight>-<highlight><italic>i </italic></highlight>to the buffer <highlight><bold>345</bold></highlight> until it reaches the end of a packet. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The PAC encoders <highlight><bold>320</bold></highlight> segment the input audio signal in a known manner and each segment is referred to as a frame. The term frame indicates both the duration of the segment and the audio samples it contains. In a typical perceptual audio coder (PAC) implementation, for example, 1024 samples are processed as a frame. The processing of each frame may yield a variable number of bits. A packet is an encoded frame, i.e., the output of a single encoder for a single frame. Each of the N programs are encoded into packets at the same pace, and the encoded frames of the N programs are interleaved for transmission to the receiver <highlight><bold>360</bold></highlight>. Once the end of a packet is reached, the multiplexer <highlight><bold>340</bold></highlight> moves to the next PAC encoder <highlight><bold>320</bold></highlight>-i and begins feeding bits into the buffer <highlight><bold>345</bold></highlight> until it reaches the end of a packet, and so on. When an end of a packet is reached for PAC encoder <highlight><bold>320</bold></highlight>-N, the multiplexer <highlight><bold>340</bold></highlight> again begins feeding bits from the first PAC encoder <highlight><bold>320</bold></highlight>-<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Assuming that the encoder clock <highlight><bold>325</bold></highlight> and decoder clock <highlight><bold>394</bold></highlight> run at the same clock speed and the rate controller <highlight><bold>330</bold></highlight> knows the transmission channel bit rate, the encoder can compute the decoder buffer level for each time instance. For a single channel system, the number of bits and the number of frames in the encoder and decoder buffers <highlight><bold>345</bold></highlight> and <highlight><bold>380</bold></highlight>, respectively, have anti-symmetrical behavior in the sense that their sum is approximately constant. For a multiple channel system having a joint bit stream, however, only the number of joint frames in the encoder buffer, F<highlight><subscript>enc</subscript></highlight>, has anti-symmetrical behavior to the number of frames in the decoder buffer, F<highlight><subscript>dec </subscript></highlight>(regardless of which of the N channel is selected). Thus, the rate controller <highlight><bold>330</bold></highlight> can compute a predicted number of encoded frames in the decoder buffer <highlight><bold>380</bold></highlight> (discussed below) using the following relation: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>F</italic></highlight><highlight><subscript>pred</subscript></highlight><highlight><italic>&equals;F</italic></highlight><highlight><subscript>dec</subscript></highlight><highlight><subscript><highlight><subscript>0</subscript></highlight></subscript></highlight>&minus;(<highlight><italic>F</italic></highlight><highlight><subscript>enc</subscript></highlight><highlight><italic>&minus;F</italic></highlight><highlight><subscript>enc</subscript></highlight><highlight><subscript><highlight><subscript>0</subscript></highlight></subscript></highlight>)&emsp;&emsp;(1) </in-line-formula></paragraph>
<paragraph id="P-0022" lvl="7"><number>&lsqb;0022&rsqb;</number> where Fenc<highlight><subscript>0 </subscript></highlight>is the initial and desired encoder buffer level and Fdec<highlight><subscript>0 </subscript></highlight>is the initial and desired decoder buffer level. Note, however, that F<highlight><subscript>pred </subscript></highlight>is only an approximation to the actual decoder buffer level, F<highlight><subscript>dec</subscript></highlight>, since in practice, the receiver and transmitter may not be perfectly synchronized, the actual decoder buffer level, F<highlight><subscript>dec</subscript></highlight>, may not be exactly the value computed according to equation (1). </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> To control the level of the decoder buffer <highlight><bold>380</bold></highlight> for each of the N audio programs at once, the rate controller <highlight><bold>330</bold></highlight> must only make sure that the predicted level of the decoder buffer <highlight><bold>380</bold></highlight> stays within a given range of frames (e.g., between F<highlight><subscript>min </subscript></highlight>and F<highlight><subscript>max</subscript></highlight>). The lower limit, F<highlight><subscript>min</subscript></highlight>, is chosen to be at least one and generally large enough to prevent an underflow caused by fluctuations of the arriving bits due to variable delays at the channel encoding and at the bit stream parser <highlight><bold>375</bold></highlight> (discussed below). It is noted that the latter are receiver specific, hence F<highlight><subscript>min </subscript></highlight>may vary from receiver to receiver. A decoder buffer <highlight><bold>380</bold></highlight> is selected with a capacity of at least F<highlight><subscript>max </subscript></highlight>frames plus the variable delays due to channel-encoding and bit stream parsing. Therefore, the minimum required capacity of the decoder buffer is also model specific. However, the difference F<highlight><subscript>max</subscript></highlight>&minus;F<highlight><subscript>min </subscript></highlight>is identical for all receivers. Thus, the rate controller <highlight><bold>330</bold></highlight> keeps track of the predicted number of encoded frames, F<highlight><subscript>pred</subscript></highlight>, in the decoder buffer <highlight><bold>380</bold></highlight> and transmits the value F<highlight><subscript>pred </subscript></highlight>to the receivers <highlight><bold>360</bold></highlight> with the audio data. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The initial and desired decoder buffer level, F<highlight><subscript>dec</subscript></highlight><highlight><subscript><highlight><subscript>0</subscript></highlight></subscript></highlight>, should be selected to provide enough buffering to compensate for the variable delay effect caused by the PAC encoder, the variable delay effect caused by the channel coder and decoder (e.g., interleaving and block error correction coding) and the variable delay effects caused by the receiver itself (e.g., in the bit stream parser). There may be several commercially available models of receivers and each of them may have different variable delay effects caused by the receiver itself. Thus, the initial and desired decoder buffer level, F<highlight><subscript>dec</subscript></highlight><highlight><subscript><highlight><subscript>0 </subscript></highlight></subscript></highlight>is receiver specific and cannot be used in the rate controller <highlight><bold>330</bold></highlight>. Therefore, in another embodiment of the invention, the rate controller <highlight><bold>330</bold></highlight> assumes one reference receiver, and the value transmitted by the rate controller <highlight><bold>330</bold></highlight> is (F<highlight><subscript>enc</subscript></highlight>&minus;F<highlight><subscript>enc</subscript></highlight><highlight><subscript><highlight><subscript>0</subscript></highlight></subscript></highlight>) which depends only on encoder specific values. Each receiver subtracts this value from its own specific F<highlight><subscript>dec</subscript></highlight><highlight><subscript><highlight><subscript>0 </subscript></highlight></subscript></highlight>value in order to obtain its own specific F<highlight><subscript>pred </subscript></highlight>value. In the following, any reference to transmitting the value F<highlight><subscript>pred </subscript></highlight>should be construed as also implying transmitting of (F<highlight><subscript>enc</subscript></highlight>&minus;F<highlight><subscript>enc</subscript></highlight><highlight><subscript><highlight><subscript>0</subscript></highlight></subscript></highlight>) by the transmission system and computation of F<highlight><subscript>pred</subscript></highlight>&equals;F<highlight><subscript>dec</subscript></highlight><highlight><subscript><highlight><subscript>0</subscript></highlight></subscript></highlight>&minus;(F<highlight><subscript>enc</subscript></highlight>&minus;F<highlight><subscript>enc</subscript></highlight><highlight><subscript><highlight><subscript>0</subscript></highlight></subscript></highlight>) by the receiver. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> If the rate controller <highlight><bold>330</bold></highlight> determines that the decoder buffer level is becoming too high, the frames being generated by the PAC encoders <highlight><bold>320</bold></highlight> are too small. Thus, the PAC encoders <highlight><bold>320</bold></highlight> are tuned by rate controller <highlight><bold>330</bold></highlight> to allocate additional bits to each frame for each of the N programs. Likewise, if the rate controller <highlight><bold>330</bold></highlight> determines that the decoder buffer level is becoming too low, the frames being generated by the PAC encoders <highlight><bold>320</bold></highlight> are too big. Thus, the PAC encoders <highlight><bold>320</bold></highlight> are tuned by rate controller <highlight><bold>330</bold></highlight> to allocate fewer bits to each frame for each of the N programs. For example, in a PAC implementation, the PAC encoders <highlight><bold>320</bold></highlight> can control the bit rate by adding additional quantization noise to the encoded audio signal. For a more detailed discussion of how additional quantization noise is added to the encoded audio signal in a PAC implementation, see the PAC references incorporated by reference above. A possible implementation may add an offset, Q, to the masked threshold, resulting in a choice of quantizers with coarser step size for larger Qs. In one implementation, the buffer control may be implemented in accordance with the following expression: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>Q</italic></highlight>&equals;&minus;(<highlight><italic>Fdec&minus;Fdec</italic></highlight><highlight><subscript>0</subscript></highlight>)*<highlight><italic>w</italic></highlight>&emsp;&emsp;(2) </in-line-formula></paragraph>
<paragraph id="P-0026" lvl="7"><number>&lsqb;0026&rsqb;</number> where the weight, w, indicates the strength of the buffer feedback control and is a value greater than zero (&gt;0). </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> In general, the control of the bit rate is done by tuning some parameters of the PAC encoders <highlight><bold>320</bold></highlight> that determine the quality of the encoding, where better quality results in a higher bit rate and vice versa, but there are two notable exceptions: First, if the audio input to some of the encoders <highlight><bold>320</bold></highlight>-<highlight><italic>i </italic></highlight>is very simple (e.g. silence), the bit rate of those encoders <highlight><bold>320</bold></highlight>-<highlight><italic>i </italic></highlight>may remain low even if the PAC encoder <highlight><bold>320</bold></highlight>-<highlight><italic>i </italic></highlight>is tuned to maximum quality. This may result in having more than F<highlight><subscript>max </subscript></highlight>packets in the decoder buffer <highlight><bold>380</bold></highlight>. In the multiple channel case, if a receiver <highlight><bold>360</bold></highlight> is tuned to a program in which the bit rate is high, more than F<highlight><subscript>max </subscript></highlight>packets in the receiver buffer <highlight><bold>380</bold></highlight> may cause an overflow. In order to prevent such an overflow, the rate controller <highlight><bold>330</bold></highlight> feeds, in this case, &ldquo;waste bits&rdquo; into the multiplexer <highlight><bold>340</bold></highlight>. These &ldquo;waste bits&rdquo; are designated as belonging to a non-existent program (say N&plus;1). The multiplexer <highlight><bold>340</bold></highlight> feeds those bits into the buffer <highlight><bold>345</bold></highlight>, thus throttling the frame rate to the desired level. Second, under certain conditions, decreasing the quality of the encoding does not lead to a sufficiently low bit rate, or the quality needed to get the required low bit rate is too poor to be useable. In this case, the PAC encoder <highlight><bold>320</bold></highlight> outputs, instead of the actual packet, a special short packet that contains only a code indicating a packet erasure. Such a special packet is referred to as an &ldquo;empty packet.&rdquo; The PAC decoder <highlight><bold>384</bold></highlight> treats an empty packet in the same way that it treats a packet that has been corrupted during the radio transmission&mdash;it generates the audio for this packet by interpolation from the preceding and following good packets. </paragraph>
</section>
<section>
<heading lvl="1">DAB Receivers </heading>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> As previously indicated, the DAB communication system <highlight><bold>300</bold></highlight> includes one or more receivers <highlight><bold>360</bold></highlight>. According to another aspect of the present invention, the transmitted predicted buffer level, F<highlight><subscript>pred</subscript></highlight>, can be employed by the receivers <highlight><bold>360</bold></highlight> to (i) determine when the receivers <highlight><bold>360</bold></highlight> should commence decoding frames; and (ii) synchronize the transmitter <highlight><bold>305</bold></highlight> and the receiver <highlight><bold>360</bold></highlight>. More specifically, the receiver <highlight><bold>360</bold></highlight> receives the predicted value, F<highlight><subscript>pred</subscript></highlight>, from the transmitter <highlight><bold>305</bold></highlight> with the audio data and compares the actual buffer level with the predicted level, F<highlight><subscript>pred</subscript></highlight>. When the receiver <highlight><bold>360</bold></highlight> first starts up or possibly when a new audio program is selected, the receiver <highlight><bold>360</bold></highlight> fills the decoder buffer <highlight><bold>380</bold></highlight> until approximately F<highlight><subscript>pred </subscript></highlight>frames are received before commencing decoding frames in order to be synchronized with the computation of the predicted decoder buffer level, F<highlight><subscript>pred</subscript></highlight>, as determined by the transmitter <highlight><bold>305</bold></highlight>. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> In addition, the receiver <highlight><bold>360</bold></highlight> uses the received predicted value, F<highlight><subscript>pred</subscript></highlight>, to adjust the local clock <highlight><bold>394</bold></highlight> such that the receiver clock <highlight><bold>394</bold></highlight> is synchronized with the transmitter <highlight><bold>305</bold></highlight>. In this manner, the transmitter <highlight><bold>305</bold></highlight> can correct a time drift that might occur due, for example, to clock jitter. Thus, the transmitter <highlight><bold>305</bold></highlight> and receiver <highlight><bold>360</bold></highlight> may be synchronized by adjusting the receiver clock <highlight><bold>394</bold></highlight> at the D/A <highlight><bold>390</bold></highlight> by using a feedback loop that compares the actual level of the decoder buffer <highlight><bold>380</bold></highlight> to the predicted value, F<highlight><subscript>pred</subscript></highlight>, received from the transmitter <highlight><bold>305</bold></highlight>. A higher number of encoded frames in the buffer <highlight><bold>380</bold></highlight> indicates that the receiver clock <highlight><bold>394</bold></highlight> of the D/A <highlight><bold>390</bold></highlight> is too slow and should be increased, and conversely, a lower number of encoded frames in the buffer <highlight><bold>380</bold></highlight> indicates that the receiver clock <highlight><bold>394</bold></highlight> of the D/A <highlight><bold>390</bold></highlight> is too fast and needs to be slowed down. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The clock frequency correction may be performed each time a new F<highlight><subscript>pred </subscript></highlight>is received according to the formula: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>C</italic></highlight><highlight><subscript>new</subscript></highlight><highlight><italic>&equals;C</italic></highlight><highlight><subscript>old</subscript></highlight><highlight><italic>&minus;v</italic></highlight>*(<highlight><italic>F</italic></highlight><highlight><subscript>pred</subscript></highlight><highlight><italic>&minus;F</italic></highlight><highlight><subscript>dec</subscript></highlight>),&emsp;&emsp;(3) </in-line-formula></paragraph>
<paragraph id="P-0031" lvl="7"><number>&lsqb;0031&rsqb;</number> where C<highlight><subscript>new </subscript></highlight>and C<highlight><subscript>old </subscript></highlight>are the clock frequency before and after the correction, and the value, v, is an integration factor greater than zero (v&gt;0). </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Thus, as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the receiver <highlight><bold>360</bold></highlight> includes a radio receiver <highlight><bold>365</bold></highlight> that receives the composite bit stream from the RF link <highlight><bold>358</bold></highlight>. A channel decoder <highlight><bold>370</bold></highlight> performs the inverse operations that were performed by the channel encoder <highlight><bold>350</bold></highlight>. A bit stream parser <highlight><bold>375</bold></highlight> parses the decoded signal into packets, which are applied to the decoder buffer <highlight><bold>380</bold></highlight>. In addition, the bit stream parser <highlight><bold>375</bold></highlight> obtains the transmitted predicted buffer level, F<highlight><subscript>pred</subscript></highlight>, from the decoded signal, which is applied to an adder <highlight><bold>382</bold></highlight>. The adder <highlight><bold>382</bold></highlight> compares the actual buffer level, F<highlight><subscript>dec</subscript></highlight>, with the received predicted level, F<highlight><subscript>pred</subscript></highlight>, and generates an error signal, BUFFER LEVEL ERROR, indicating the difference between the two values. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The error signal, BUFFER LEVEL ERROR, is applied to a controller <highlight><bold>386</bold></highlight>. The controller <highlight><bold>386</bold></highlight> processes the error signal to determine when the PAC decoder <highlight><bold>384</bold></highlight> should begin decoding frames that have been placed in the decoder buffer <highlight><bold>380</bold></highlight> (when there are F<highlight><subscript>pred </subscript></highlight>frames in the decoder buffer <highlight><bold>380</bold></highlight> in the exemplary embodiment). In addition, the controller <highlight><bold>386</bold></highlight> processes the error signal to control the rate of the receiver clock <highlight><bold>394</bold></highlight> such that the clock <highlight><bold>394</bold></highlight> is synchronized with the transmitter <highlight><bold>305</bold></highlight>. The decoded packets are then converted to an analog signal by a D/A converter <highlight><bold>390</bold></highlight> and the audio signal is reproduced by a speaker <highlight><bold>398</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> When the predicted decoder buffer level, F<highlight><subscript>pred </subscript></highlight>is transmitted from the DAB transmission system <highlight><bold>305</bold></highlight> to the receiver <highlight><bold>360</bold></highlight>, its value should be represented by a reasonably small number of bits. To minimize the number of bits, the buffer level can be quantized and possibly encoded before it is transmitted. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> It is to be understood that the embodiments and variations shown and described herein are merely illustrative of the principles of this invention and that various modifications may be implemented by those skilled in the art without departing from the scope and spirit of the invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">We claim: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for controlling a buffer level in a communication system, said method comprising the steps of: 
<claim-text>computing a predicted number of encoded frames in said buffer; and </claim-text>
<claim-text>ensuring said predicted number of encoded frames does not exceed a maximum number of encoded frames. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said communication system is a digital audio broadcasting (DAB) system. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said communication system employs perceptual audio coding. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said communication system is a multiple channel communication system and wherein said method further comprises the step of maintaining an approximately equal frame rate for each of said channels. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein step of computing said predicted number of encoded frames predicts said number of encoded frames in an encoder buffer. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein step of computing said predicted number of encoded frames predicts said number of encoded frames in a decoder buffer. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said step of computing said predicted number of encoded frames considers a respective data rate of an encoder and a decoder and a channel bit rate of said communication system. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said step of computing said predicted number of encoded frames is performed by a rate controller and wherein said buffer is a decoder buffer. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said predicted number of frames is computed as follows: </claim-text>
<claim-text><in-line-formula><highlight><italic>F</italic></highlight><highlight><subscript>pred</subscript></highlight><highlight><italic>&equals;F</italic></highlight><highlight><subscript>dec</subscript></highlight><highlight><subscript><highlight><subscript>0</subscript></highlight></subscript></highlight>&minus;(<highlight><italic>F</italic></highlight><highlight><subscript>enc</subscript></highlight><highlight><italic>&minus;F</italic></highlight><highlight><subscript>enc</subscript></highlight><highlight><subscript><highlight><subscript>0</subscript></highlight></subscript></highlight>) </in-line-formula></claim-text>
<claim-text>where F<highlight><subscript>dec</subscript></highlight><highlight><subscript><highlight><subscript>0 </subscript></highlight></subscript></highlight>is a desired decoder buffer level, F<highlight><subscript>enc </subscript></highlight>is a number of frames in an encoder buffer and F<highlight><subscript>enc</subscript></highlight><highlight><subscript><highlight><subscript>0 </subscript></highlight></subscript></highlight>is a desired encoder buffer level. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of receiving an indication of a number of frames in an encoder buffer and wherein step of computing said predicted number of encoded frames predicts said number of encoded frames in a decoder buffer based on said number of frames in an encoder buffer. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said ensuring step further comprises the step of allocating an additional number of bits to each frame if said buffer level becomes too high. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said ensuring step further comprises the step of transmitting waste bits if said buffer level becomes too high. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said ensuring step further comprises the step of allocating a fewer number of bits to each frame if said buffer level becomes too low. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said ensuring step further comprises the step of transmitting empty packets if said buffer level becomes too low. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A method for controlling a buffer in a communication system, said method comprising the steps of: 
<claim-text>computing a predicted number of encoded frames in said buffer; and </claim-text>
<claim-text>transmitting said predicted number of encoded frames to a receiver. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein said communication system is a digital audio broadcasting (DAB) system. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein step of computing said predicted number of encoded frames predicts said number of encoded frames in a decoder buffer. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein said step of computing said predicted number of encoded frames considers a respective data rate of an encoder and a decoder and a channel bit rate of said communication system. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein said step of computing said predicted number of encoded frames is performed by a rate controller and wherein said buffer is a decoder buffer. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein said transmitting step further comprises the step of quantizing said predicted number of encoded frames before transmission to a receiver. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. A method for controlling a buffer in a communication system, said method comprising the steps of: 
<claim-text>receiving a predicted number of encoded frames in said buffer; and </claim-text>
<claim-text>using said predicted number of encoded frames to determine when to commence a decoding of said frames. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, further comprising the step of determining when to decode said frames after a decoder is first started using said predicted number of encoded frames. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, further comprising the step of determining when to decode said frames after a new program is selected using said predicted number of encoded frames. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein said communication system is a digital audio broadcasting (DAB) system. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein said predicted number of encoded frames indicates a number of encoded frames in a decoder buffer. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein said predicted number of encoded frames considers a respective data rate of an encoder and a decoder and a channel bit rate of said communication system. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein said predicted number of encoded frames is determined by an encoder and wherein said buffer is a decoder buffer. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. A method for synchronizing a receiver and a transmitter in a communication system, said method comprising the steps of: 
<claim-text>receiving a predicted number of encoded frames in a buffer; </claim-text>
<claim-text>comparing said predicted number of encoded frames to an actual number of encoded frames in said buffer; and </claim-text>
<claim-text>adjusting a clock frequency based on said comparison. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein said communication system is a digital audio broadcasting (DAB) system. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein predicted number of encoded frames indicates number of encoded frames in a decoder buffer. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein said predicted number of encoded frames considers a respective data rate of an encoder and a decoder and a channel bit rate of said communication system. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein said predicted number of encoded frames is determined by an encoder and wherein said buffer is a decoder buffer. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein said adjusting step increases said clock frequency if said predicted number of encoded frames is lower than said actual number of encoded frames in said buffer. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein said adjusting step decreases said clock frequency if said predicted number of encoded frames is higher than said actual number of encoded frames in said buffer. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. A system for controlling a buffer level in a communication system, comprising: 
<claim-text>a memory that stores computer-readable code; and </claim-text>
<claim-text>a processor operatively coupled to said memory, said processor configured to implement said computer-readable code, said computer-readable code configured to: 
<claim-text>compute a predicted number of encoded frames in said buffer; and </claim-text>
<claim-text>ensure said predicted number of encoded frames does not exceed a maximum number of encoded frames. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 35</dependent-claim-reference>, wherein said processor is further configured to transmit said predicted number of encoded frames to a receiver. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. A system for controlling a buffer level in a communication system, comprising: 
<claim-text>a memory that stores computer-readable code; and </claim-text>
<claim-text>a processor operatively coupled to said memory, said processor configured to implement said computer-readable code, said computer-readable code configured to: 
<claim-text>receive a predicted number of encoded frames in a buffer; and </claim-text>
<claim-text>compare said predicted number of encoded frames to an actual number of encoded frames in said buffer. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference>, wherein said processor is further configured to adjust a clock frequency based on said comparison. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein said processor is further configured to increase said clock frequency if said predicted number of encoded frames is lower than said actual number of encoded frames in said buffer. </claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein said processor is further configured to decrease said clock frequency if said predicted number of encoded frames is higher than said actual number of encoded frames in said buffer. </claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference>, wherein said processor is further configured to determine when to commence a decoding of said frames using said predicted number of encoded frames. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference>, wherein said processor waits approximately said predicted number of encoded frames before decoding said frames after a decoder is first started. </claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference>, wherein said processor waits approximately said predicted number of encoded frames before decoding said frames after a new program is selected. </claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference>, wherein said communication system is a digital audio broadcasting (DAB) system. </claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. A system for controlling a buffer level in a communication system, comprising: 
<claim-text>a buffer for storing frames of encoded data; and </claim-text>
<claim-text>means for computing a predicted number of encoded frames in said buffer; and </claim-text>
<claim-text>means for ensuring said predicted number of encoded frames does not exceed a maximum number of encoded frames. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. A system for controlling a buffer level in a communication system, comprising: 
<claim-text>a buffer for storing frames of encoded data; and </claim-text>
<claim-text>an input port for receiving a predicted number of encoded frames in a buffer; and </claim-text>
<claim-text>means for comparing said predicted number of encoded frames to an actual number of encoded frames in said buffer. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference>, further comprising means for adjusting a clock frequency based on said comparison. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference>, further comprising means for waiting until said buffer contains approximately said predicted number of encoded frames before decoding said frames.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>3</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002609A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002609A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002609A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002609A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
