<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005323A1-20030102-D00000.TIF SYSTEM "US20030005323A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005323A1-20030102-D00001.TIF SYSTEM "US20030005323A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005323A1-20030102-D00002.TIF SYSTEM "US20030005323A1-20030102-D00002.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005323</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09895934</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L009/32</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>713</class>
<subclass>194000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Management of sensitive data</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>David</given-name>
<middle-name>C.</middle-name>
<family-name>Hanley</family-name>
</name>
<residence>
<residence-us>
<city>Granite Bay</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Dominique</given-name>
<family-name>Gougeon</family-name>
</name>
<residence>
<residence-us>
<city>Rocklin</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Frederic</given-name>
<family-name>Charlier</family-name>
</name>
<residence>
<residence-us>
<city>Rocklin</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>HEWLETT-PACKARD COMPNAY</name-1>
<name-2>Intellectual Property Administration</name-2>
<address>
<address-1>P. O. Box 272400</address-1>
<city>Fort Collins</city>
<state>CO</state>
<postalcode>80527-2400</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Method and apparatus for managing sensitive data. In one embodiment, sensitive data are managed in a circuit arrangement that includes a processor, a RAM, a register, a security circuit, and a power supply. The power supply is arranged to provide power from a first power source when power is available from the first source and from a second power source when power is unavailable from the first source. The processor initially stores the sensitive data in the RAM while operating with power from the first source. Upon loss of power from the first source, the power supply provides power from the second source, and the processor copies the sensitive data from the slow discharging RAM to the register and erases the sensitive data from the RAM. If the second power source is removed, the processor clears the sensitive data from the register. When the security circuit detects an attack on the circuit arrangement, the processor erases the sensitive data from the RAM and from the register. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates generally to storage of sensitive data in electronic circuitry, and more specifically, to protecting sensitive data from undesired access. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Point of sale (POS) terminals allow customers to make payments using a variety of payment instruments such as credit cards, debit cards, smart cards, ATM cards, etc. To ensure that the payment information transmitted from the POS terminals to a payment center is not intercepted, this information is typically encrypted and secured through other means (e.g., digital authentication) during transmissions. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> However, confidential payment information entered by the user into the POS terminal could still be intercepted by tampering with the POS terminal. To curb such interception and any tampering of the keypad and processor, processors and other circuitry in the POS terminal are sometimes embedded in material such as epoxy resin which is potted to the keypad, thereby integrating the keypad and the circuits into a single module. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> While these security measures are sufficient to deter some tampering, the measures could still be circumvented (e.g. by opening the POS terminals and using appropriate chemical substances to remove the potting material. In addition, epoxy potting is expensive and prevents both authorized and unauthorized access to the circuitry within the POS terminal. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Another approach to security is storage of the secret data in an SRAM where the SRAM is erased upon removal or attack. A problem associated with SRAM storage is that the memory is not immediately erased upon removal of power because the memory is erased by discharge of the memory cells, which may take several hours due to internal resistance in the chip. As a result, there is a need for a less expensive, more secure technique for preventing unauthorized access to sensitive data in POS terminals in particular and generally in other electronic circuitry. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> A system and method that address the aforementioned problems, as well as other related problems, are therefore desirable. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In various embodiments, the invention provides a method and apparatus for managing sensitive data. In one embodiment, sensitive data are managed in a circuit arrangement that includes a processor, a RAM, a register, a security circuit, and a power supply. The power supply is arranged to provide power from a first power source when power is available from the first source and from a second power source when power is unavailable from the first source. The processor initially stores the sensitive data in the RAM while operating with power from the first source. Upon loss of power from the first source, the power supply provides power from the second source, and the processor copies the sensitive data from the slow discharging RAM to the register and erases the sensitive data from the RAM. If the second power source is removed, the circuitry within the processor clears the sensitive data from the register. When the security circuit detects an attack on the circuit arrangement, the processor erases the sensitive data from the RAM and from the register. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Various example embodiments are set forth in the Detailed Description and claims which follow. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Various aspects and advantages of the invention will become apparent upon review of the following detailed description and upon reference to the drawings in which: </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a functional block diagram of a point-of-sale (POS) terminal in accordance with one embodiment of the invention; and </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a state diagram that illustrates operation of terminal in securing sensitive data in response to different power modes and security threats.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Various embodiments of the present invention are described in terms of a point-of-sale (POS) terminal. Those skilled in the art will appreciate that the invention could be implemented in any application where sensitive data are stored in a RAM and needs to be quickly erased in the event of an attack on the circuitry. In various embodiments of the invention, the sensitive data is protected when the main power is removed from the circuitry and also protected when the circuitry is attacked during normal operations. When operating with the main power, the processor writes the sensitive data to a RAM. If the main power is removed, the circuit arrangement switches to backup power and the processor moves the sensitive data from the slow discharge RAM to a register and then erases the RAM. If the backup power is then removed, the sensitive data in the register is quickly lost. A security circuit is arranged to detect attacks on the circuit arrangement both when the main power source provides power and the backup power source provides power. If an attack is detected, the processor erases both the RAM and the register. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a functional block diagram of a point-of-sale (POS) terminal <highlight><bold>100</bold></highlight> in accordance with one embodiment of the invention. POS terminal <highlight><bold>100</bold></highlight> includes a keypad <highlight><bold>102</bold></highlight>, a card reader <highlight><bold>104</bold></highlight> and a display <highlight><bold>106</bold></highlight>. To perform a payment transaction, a user of POS terminal <highlight><bold>100</bold></highlight> slides a card through card reader <highlight><bold>104</bold></highlight>. The transaction details are then displayed to the user on display <highlight><bold>106</bold></highlight>. In one embodiment, the user then enters via keypad <highlight><bold>102</bold></highlight> additional information regarding the transaction, such as a security verification code or a PIN number. The information entered by the user is encrypted and transmitted through a secure communication channel to a bank or other transaction clearinghouse. Once the transaction is approved, the user is notified via display <highlight><bold>106</bold></highlight>. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The payment application executes on processor <highlight><bold>108</bold></highlight>, which is coupled to each of the keypad, card reader and display. In one embodiment, the payment application uses DES encryption for encrypting the user&apos;s data. The triple DES methodology uses a general encryption key (GEK) for encrypting and decrypting data. During normal operating conditions (e.g., line power and no tampering), the GEK is stored in internal memory <highlight><bold>110</bold></highlight> of the processor, and encrypted data are stored in external memory <highlight><bold>112</bold></highlight>. Memory <highlight><bold>110</bold></highlight> is internal to processor <highlight><bold>108</bold></highlight> in that the processor circuitry and memory circuitry are integrated in the same chip. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Security circuit <highlight><bold>114</bold></highlight> detects attacks on terminal <highlight><bold>100</bold></highlight>. For example, the security circuit detects acts of tampering with the housing (not shown) of terminal <highlight><bold>100</bold></highlight>. The various types of attacks detected by security circuit <highlight><bold>114</bold></highlight> include, for example, power supply tampering and drilling or cutting into the terminal housing. In one embodiment, security circuit <highlight><bold>114</bold></highlight> is implemented using a Maxim MAX969EEE comparator, which monitors a security grid and power supplies. Upon detecting an attack on terminal <highlight><bold>100</bold></highlight>, the security circuit activates a RESET signal to processor <highlight><bold>108</bold></highlight>. If the RESET signal is activated while terminal <highlight><bold>100</bold></highlight> is supplied with normal line power, the internal that has the GEK is erased. The RESET signal to the CPU (NEC V850E/MS1) is generated by a 74VHC14 Schmidt trigger inverter. Another scenario of tampering with the terminal involves removing line power from the terminal. Line power refers to the main power source of the terminal, for example, a 110 volt AC power source. The objective of the intruder in this scenario is to obtain the GEK from the internal memory <highlight><bold>110</bold></highlight> before the memory is erased by discharge. The present invention addresses this scenario with additional precautionary steps that are enabled with power supply <highlight><bold>116</bold></highlight> that includes a battery backup power source. Power supply <highlight><bold>116</bold></highlight> powers processor <highlight><bold>108</bold></highlight>, security circuit <highlight><bold>114</bold></highlight>, and external memory <highlight><bold>112</bold></highlight> via memory power supply <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Power supply <highlight><bold>116</bold></highlight> switches from line power to battery power when line power is lost. Power supply supervisor <highlight><bold>122</bold></highlight> generates a non-maskable interrupt (NMI) pulse to the processor <highlight><bold>108</bold></highlight> each time there is a change in line power (on to off or off to on). The power supply supervisor also inputs a LINEPWR signal to the processor to indicate whether power is supplied from line power or from battery backup. Upon detecting a loss of line power, the processor copies the GEK from internal memory <highlight><bold>110</bold></highlight> to one or more registers <highlight><bold>124</bold></highlight> that are internal to the processor and then erases the internal memory <highlight><bold>110</bold></highlight>. If the battery backup power is removed, the GEK will be quickly discharged from the registers. If the security circuit <highlight><bold>114</bold></highlight> detects tampering with the terminal, the RESET signal is applied to the processor, and the processor erases the GEK from the registers <highlight><bold>124</bold></highlight>, and the security circuit erases the external memory by momentarily reversing the power supply to the external memory <highlight><bold>112</bold></highlight>. Storing the GEK in one or more registers allows the processor to erase the register(s) when the RESET signal is applied. Thus, there is no reliance on the processor being powered and able to run to erase the internal memory, or reliance on the memory being erased by removing the power supply. The GEK is not permanently stored in the internal register(s) since the register(s) is used for other purposes while the processor is running, for example, I/O port configuration and internal timers. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The various components of terminal <highlight><bold>100</bold></highlight> can be implemented using commercially available parts or proprietary parts, depending on implementation requirements. For example, in one embodiment, processor <highlight><bold>108</bold></highlight> is an NEC V850/MS1 processor, battery backup power supply includes AAA rechargeable batteries, power supply supervisor is a Micrel MIC841 low power comparator, and external memory <highlight><bold>112</bold></highlight> is a Cypress CY62126BV 128 KByte by 16 bit low power Static RAM. The power to external memory <highlight><bold>112</bold></highlight> is provided by either the battery backup or from a switching power supply based on a step down switching regulator (e.g., Linear Technologies LT1576). Power steering between the two supplies is done by Schottky diodes (e.g., Toshiba CRS03).<cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a state diagram that illustrates operation of terminal <highlight><bold>100</bold></highlight> in securing sensitive data in response to different power modes and security threats. State <highlight><bold>0</bold></highlight> is the initial state from which power is initially applied. For example, when the terminal is assembled and power is first applied, the terminal moves from First Power-up state <highlight><bold>0</bold></highlight> to Attack state <highlight><bold>1</bold></highlight>. When power is first applied, security circuit <highlight><bold>114</bold></highlight> activates the RESET signal and power supply supervisor <highlight><bold>122</bold></highlight> pulses the NMI signal. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> State <highlight><bold>1</bold></highlight> is the Attack state. The processor erases the external memory <highlight><bold>112</bold></highlight> along with the internal register(s) <highlight><bold>124</bold></highlight>. It can be seen that the Attack state can also be entered from other states in the diagram. The Attack state <highlight><bold>1</bold></highlight> exits to Limited Running State <highlight><bold>2</bold></highlight> by application of or continued application of line power. Note that Attack state <highlight><bold>1</bold></highlight> can be entered via Stop state <highlight><bold>4</bold></highlight> where line power has been removed. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> In Limited Running State <highlight><bold>2</bold></highlight>, various diagnostic and initialization processes are performed. The terminal exits State <highlight><bold>2</bold></highlight> to one of States <highlight><bold>1</bold></highlight>, <highlight><bold>3</bold></highlight>, <highlight><bold>4</bold></highlight>, or <highlight><bold>5</bold></highlight>, depending on the current operating conditions. If the security circuit <highlight><bold>114</bold></highlight> reactivate the RESET signal in response to an attack, the terminal returns to Attack State <highlight><bold>1</bold></highlight> where the external memory and internal register(s) <highlight><bold>124</bold></highlight> are cleared. If the LINEPWR signal is inactive, the terminal transitions to Failure State <highlight><bold>5</bold></highlight>. If the LINEPWR signal is inactive and the NMI is pulsed, the terminal transitions to Stop State <highlight><bold>4</bold></highlight> to operate under battery power. During initialization, power is applied to the external memory via memory power supply <highlight><bold>118</bold></highlight>, a new GEK is generated and stored in the internal memory <highlight><bold>110</bold></highlight>, and a new SWMARKER is generated. In one embodiment, the GEK is a randomly generated triple DES key that is used to encrypt the keys in the external memory and to generate the SWMARKER. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The SWMARKER is a software marker value that is used to detect the corruption in the external memory <highlight><bold>112</bold></highlight>. The value of the SWMARKER is generated from a random value that is encrypted (triple DES) using the GEK. The random value is stored in the internal memory <highlight><bold>110</bold></highlight>, and the SWMARKER value is stored in the external memory <highlight><bold>112</bold></highlight>. At each power-up event the processor checks whether the SWMAR ER value in the external memory is correct (relative to encrypting the random value with the GEK). If the SWMARKER value is incorrect, either the GEK, the random value, or the SWMARKER value is corrupt, and signals that an attack has occurred. The SWMARKEROK is the flag in the state diagram that indicates whether the SWMARKER value is correct. Firmware is loaded into the external memory <highlight><bold>112</bold></highlight> once power is applied, and the terminal then transitions to Normal Running State <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> As long as line power is normal and there are no attacks detected by the security circuit <highlight><bold>114</bold></highlight>, the terminal remains in the Normal Running State <highlight><bold>3</bold></highlight>. If the security circuit detects an attack while in State <highlight><bold>3</bold></highlight>, the external memory <highlight><bold>112</bold></highlight> is erased along with the internal register(s) <highlight><bold>124</bold></highlight> and the terminal transitions to Attack State <highlight><bold>1</bold></highlight>. The ATTACK signal is activated in response to the active RESET signal. The ATTACK signal is cleared when the firmware is reloaded in the external memory in the Limited Running State <highlight><bold>2</bold></highlight>. If the ATTACK signal is active without an active RESET, the terminal transitions to Failure State <highlight><bold>5</bold></highlight>. Upon loss of line power (NMI &amp; &excl;LINEPWR), the terminal transitions to Stop State <highlight><bold>4</bold></highlight> to operate under battery power. Upon transition to State <highlight><bold>4</bold></highlight>, the GEK is copied from the internal memory <highlight><bold>110</bold></highlight> to the internal register(s) <highlight><bold>124</bold></highlight>, and the internal memory is erased. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Stop State <highlight><bold>4</bold></highlight> is an idle state where the processor <highlight><bold>108</bold></highlight> is placed into a low power mode, and the processor and internal memory are powered by the battery backup of power supply <highlight><bold>116</bold></highlight>. If the security circuit <highlight><bold>114</bold></highlight> detects an attack and activates the RESET signal, the terminal <highlight><bold>100</bold></highlight> transitions to Attack state <highlight><bold>1</bold></highlight>, and the external memory is erased and internal register(s) <highlight><bold>124</bold></highlight> are cleared. If line power is reapplied and either the ATTACK signal is active or the external memory is corrupt (NMI &amp; LINEPWR &amp; (ATTACK&verbar;&excl;SWMARKEROK)), then the terminal transitions back to Limited Running State <highlight><bold>2</bold></highlight>. If line power is reapplied and the ATTACK signal is inactive and the external memory <highlight><bold>112</bold></highlight> is not corrupt (NMI &amp; LINEPWR &amp; &excl;ATTACK &amp; SWMARKEROK), the terminal transitions back to Normal Running State <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The present invention is believed to be applicable to a variety of electronic systems and has been found to be particularly applicable and beneficial in POS terminals. Other aspects and embodiments of the present invention will be apparent to those skilled in the art from consideration of the specification and practice of the invention disclosed herein. It is intended that the specification and illustrated embodiments be considered as examples only, with a true scope and spirit of the invention being indicated by the following claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A computer-implemented method for managing sensitive data in a point-of-sale terminal having a first memory element, a processor having a register, a security circuit, and a power supply circuit arranged to provide power from a first power source when power is available from the first source and from a second power source when power is unavailable from the first source, comprising: 
<claim-text>storing sensitive data in the first memory element; </claim-text>
<claim-text>upon loss of power from the first source, switching to power from the second source, copying the sensitive data from the first memory element to the register, and erasing the sensitive data from the first memory element; and </claim-text>
<claim-text>upon detecting an attack on the terminal, erasing the sensitive data from the first memory element and from the register. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising upon reapplication of power from the first source, copying the sensitive data from the register to the RAM. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein the sensitive data includes a general encryption key. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the first memory element is RAM internal to the processor, and the terminal further includes a second memory element that is a RAM external to the processor, the method further comprising: 
<claim-text>generating encrypted data using the general encryption key; and </claim-text>
<claim-text>storing the encrypted data in the second memory element. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, further comprising: 
<claim-text>generating a random value; </claim-text>
<claim-text>storing the random value in the first memory element; </claim-text>
<claim-text>encrypting the random value as a marker value using the general encryption key; </claim-text>
<claim-text>storing the marker value in the second memory element; and </claim-text>
<claim-text>upon application of power from the first source, generating a temporary marker value from the random value stored in the first memory element and the general encryption key, wherein an attack is detected if the temporary marker value is not equal to the marker value in the second memory element. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the sensitive data includes a general encryption key. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein the first memory element is RAM internal to the processor, and the terminal further includes a second memory element that is a RAM external to the processor, the method further comprising: 
<claim-text>generating encrypted data using the general encryption key; and </claim-text>
<claim-text>storing the encrypted data in the second memory element. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, further comprising: 
<claim-text>generating a random value; </claim-text>
<claim-text>storing the random value in the first memory element; </claim-text>
<claim-text>encrypting the random value as a marker value using the general encryption key; </claim-text>
<claim-text>storing the marker value in the second memory element; and </claim-text>
<claim-text>upon application of power from the first source, generating a temporary marker value from the random value stored in the first memory element and the general encryption key, wherein an attack is detected if the temporary marker value is not equal to the marker value in the second memory element. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. An apparatus for managing sensitive data in a point-of-sale terminal having a first memory element, a processor having a register, a security circuit, and a power supply circuit arranged to provide power from a first power source when power is available from the first source and from a second power source when power is unavailable from the first source, comprising: 
<claim-text>means for storing sensitive data in the first memory element; </claim-text>
<claim-text>means, responsive to a loss of power from the first source, for switching to power from the second source, copying the sensitive data from the first memory element to the register, and erasing the sensitive data from the first memory element; and </claim-text>
<claim-text>means for detecting an attack on the terminal; and </claim-text>
<claim-text>means for erasing the sensitive data from the first memory element and from the register in response to an attack on the terminal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A circuit arrangement providing for erasure of sensitive data, comprising: 
<claim-text>a first memory element; </claim-text>
<claim-text>a register; </claim-text>
<claim-text>a security circuit configured to detect a security threat to the circuit arrangement and generate a first signal upon detection of a security threat; </claim-text>
<claim-text>a power supply coupled to the first memory element, the register, and the security circuit, the power supply arranged to provide power from a first power source when power is available from the first source and from a second power source when power is unavailable from the first source; and </claim-text>
<claim-text>a processor coupled to the RAM, the register, the security circuit and the power supply, the processor configured to store sensitive data in the RAM when power is available from the first source, and upon application of power from the second power source copy the sensitive data from the RAM to the register and erase the sensitive data from the RAM. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight> The circuit arrangement of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the processor is further configured to copy the sensitive data from the register to the RAM upon reapplication of power from the first source. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The circuit arrangement of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the sensitive data includes a general encryption key. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The circuit arrangement of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the first memory element is RAM internal to the processor, and further comprising: 
<claim-text>a second memory element that is a RAM external and coupled to the processor; and </claim-text>
<claim-text>wherein the processor is further configured to generate encrypted data using the general encryption key and store the encrypted data in the second memory element. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The circuit arrangement of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the processor is further configured to generate a random value and store the random value in the first memory element, encrypt the random value as a marker value using the general encryption key and store the marker value in the second memory element, and upon application of power from the first source, generate a temporary marker value from the random value stored in the first memory element and the general encryption key, detect an attack if the temporary marker value is not equal to the marker value in the second memory element.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005323A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005323A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005323A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
