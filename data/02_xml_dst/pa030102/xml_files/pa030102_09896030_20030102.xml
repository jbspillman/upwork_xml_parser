<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005250A1-20030102-D00000.TIF SYSTEM "US20030005250A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005250A1-20030102-D00001.TIF SYSTEM "US20030005250A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005250A1-20030102-D00002.TIF SYSTEM "US20030005250A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005250A1-20030102-D00003.TIF SYSTEM "US20030005250A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005250A1-20030102-D00004.TIF SYSTEM "US20030005250A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005250A1-20030102-D00005.TIF SYSTEM "US20030005250A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005250A1-20030102-D00006.TIF SYSTEM "US20030005250A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005250A1-20030102-D00007.TIF SYSTEM "US20030005250A1-20030102-D00007.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005250</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896030</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010628</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F012/00</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>G06F013/00</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>711</class>
<subclass>167000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>711</class>
<subclass>118000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>711</class>
<subclass>104000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Method and system for adjusting the timing offset between a clock signal and respective digital signals transmitted along with that clock signal, and memory device and computer system using same</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Brian</given-name>
<family-name>Johnson</family-name>
</name>
<residence>
<residence-us>
<city>Boise</city>
<state>ID</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Ronnie</given-name>
<middle-name>M.</middle-name>
<family-name>Harrison</family-name>
</name>
<residence>
<residence-us>
<city>Boise</city>
<state>ID</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>DORSEY &amp; WHITNEY LLP</name-1>
<name-2>INTELLECTUAL PROPERTY DEPARTMENT</name-2>
<address>
<address-1>SUITE 3400</address-1>
<address-2>1420 FIFTH AVENUE</address-2>
<city>SEATTLE</city>
<state>WA</state>
<postalcode>98101</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method and circuit adaptively adjust respective timing offsets of digital signals relative to a clock output along with the digital signals to enable a latch receiving the digital signals to store the signals responsive to the clock. A phase command for each digital signal is stored in an associated storage circuit and defines a timing offset between the corresponding digital signal and the clock. The clock is output along with each digital signal having the timing offset defined by the corresponding phase command and the digital signals are captured responsive to the clock and evaluated to determine if each digital signal was successfully captured. A phase adjustment command adjusts the value of each phase command. These operations are repeated for a plurality of phase adjustment commands until respective final phase commands allowing all digital signals to be successfully captured is determined and stored in the storage circuits. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">TECHNICAL FIELD </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates generally to semiconductor memories and other integrated circuit devices, and is directed, more particularly, to synchronizing digital signals being transferred over buses interconnecting such devices. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Conventional computer systems include a processor (not shown) coupled to a variety of memory devices, including read-only memories (&ldquo;ROMs&rdquo;) which traditionally store instructions for the processor, and a system memory to which the processor may write data and from which the processor may read data. The processor may also communicate with an external cache memory, which is generally a static random access memory (&ldquo;SRAM&rdquo;). The processor also communicates with input devices, output devices, and data storage devices. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Processors generally operate at a relatively high speed. Processors such as the Pentium III&reg; and Pentium 4&reg; microprocessors are currently available that operate at clock speeds of at least 400 MHz. However, the remaining components of existing computer systems, with the exception of SRAM cache, are not capable of operating at the speed of the processor. For this reason, the system memory devices, as well as the input devices, output devices, and data storage devices, are not coupled directly to the processor bus. Instead, the system memory devices are generally coupled to the processor bus through a memory controller, bus bridge or similar device, and the input devices, output devices, and data storage devices are coupled to the processor bus through a bus bridge. The memory controller allows the system memory devices to operate at a lower clock frequency that is substantially lower than the clock frequency of the processor. Similarly, the bus bridge allows the input devices, output devices, and data storage devices to operate at a substantially lower frequency. Currently, for example, a processor having a 1 GHz clock frequency may be mounted on a mother board having a 133 MHz clock frequency for controlling the system memory devices and other components. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Access to system memory is a frequent operation for the processor. The time required for the processor, operating, for example, at 1 GHz, to read data from or write data to a system memory device operating at, for example, 133 MHz, greatly slows the rate at which the processor is able to accomplish its operations. Thus, much effort has been devoted to increasing the operating speed of system memory devices. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> System memory devices are generally dynamic random access memories (&ldquo;DRAMs&rdquo;). Initially, DRAMs were asynchronous and thus did not operate at even the clock speed of the motherboard. In fact, access to asynchronous DRAMs often required that wait states be generated to halt the processor until the DRAM had completed a memory transfer. However, the operating speed of asynchronous DRAMs was successfully increased through such innovations as burst and page mode DRAMs which did not require that an address be provided to the DRAM for each memory access. More recently, synchronous dynamic random access memories (&ldquo;SDRAMs&rdquo;) have been developed to allow the pipelined transfer of data at the clock speed of the motherboard. However, even SDRAMs are incapable of operating at the clock speed of currently available processors. Thus, SDRAMs cannot be connected directly to the processor bus, but instead must interface with the processor bus through a memory controller, bus bridge, or similar device. The disparity between the operating speed of the processor and the operating speed of SDRAMs continues to limit the speed at which processors may complete operations requiring access to system memory. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> A solution to this operating speed disparity has been proposed in the form of a computer architecture known as a synchronous link architecture. In the synchronous link architecture, the system memory may be coupled to the processor either directly through the processor bus or through a memory controller. Rather than requiring that separate address and control signals be provided to the system memory, synchronous link memory devices receive command packets that include both control and address information. The synchronous link memory device then outputs or receives data on a data bus that may be coupled directly to the data bus portion of the processor bus. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> An example of a computer system <highlight><bold>10</bold></highlight> using the synchronous link architecture is shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The computer system <highlight><bold>10</bold></highlight> includes a processor <highlight><bold>12</bold></highlight> having a processor bus <highlight><bold>14</bold></highlight> coupled through a memory controller <highlight><bold>18</bold></highlight> and system memory bus <highlight><bold>23</bold></highlight> to three packetized or synchronous link dynamic random access memory (&ldquo;SLDRAM&rdquo;) devices <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c</italic></highlight>. The computer system <highlight><bold>10</bold></highlight> also includes one or more input devices <highlight><bold>20</bold></highlight>, such as a keypad or a mouse, coupled to the processor <highlight><bold>12</bold></highlight> through a bus bridge <highlight><bold>22</bold></highlight> and an expansion bus <highlight><bold>24</bold></highlight>, such as an industry standard architecture (&ldquo;ISA&rdquo;) bus or a peripheral component interconnect (&ldquo;PCI&rdquo;) bus. The input devices <highlight><bold>20</bold></highlight> allow an operator or an electronic device to input data to the computer system <highlight><bold>10</bold></highlight>. One or more output devices <highlight><bold>30</bold></highlight> are coupled to the processor <highlight><bold>12</bold></highlight> to display or otherwise output data generated by the processor <highlight><bold>12</bold></highlight>. The output devices <highlight><bold>30</bold></highlight> are coupled to the processor <highlight><bold>12</bold></highlight> through the expansion bus <highlight><bold>24</bold></highlight>, bus bridge <highlight><bold>22</bold></highlight> and processor bus <highlight><bold>14</bold></highlight>. Examples of output devices <highlight><bold>24</bold></highlight> include printers and a video display units. One or more data storage devices <highlight><bold>38</bold></highlight> are coupled to the processor <highlight><bold>12</bold></highlight> through the processor bus <highlight><bold>14</bold></highlight>, bus bridge <highlight><bold>22</bold></highlight>, and expansion bus <highlight><bold>24</bold></highlight> to store data in or retrieve data from storage media (not shown). Examples of storage devices <highlight><bold>38</bold></highlight> and storage media include fixed disk drives floppy disk drives, tape cassettes and compact-disk read-only memory drives. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> In operation, the processor <highlight><bold>12</bold></highlight> sends a data transfer command via the processor bus <highlight><bold>14</bold></highlight> to the memory controller <highlight><bold>18</bold></highlight>, which, in turn, communicates with the memory devices <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>via the system memory bus <highlight><bold>23</bold></highlight> by sending the memory devices <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>command packets that contain both control and address information. Data is coupled between the memory controller <highlight><bold>18</bold></highlight> and the memory devices <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>through a data bus portion of the system memory bus <highlight><bold>23</bold></highlight>. During a read operation, data is transferred from the SLDRAMs <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>over the memory bus <highlight><bold>23</bold></highlight> to the memory controller <highlight><bold>18</bold></highlight> which, in turn, transfers the data over the processor <highlight><bold>14</bold></highlight> to the processor <highlight><bold>12</bold></highlight>. The processor <highlight><bold>12</bold></highlight> transfers write data over the processor bus <highlight><bold>14</bold></highlight> to the memory controller <highlight><bold>18</bold></highlight> which, in turn, transfers the write data over the system memory bus <highlight><bold>23</bold></highlight> to the SLDRAMs <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c</italic></highlight>. Although all the memory devices <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>are coupled to the same conductors of the system memory bus <highlight><bold>23</bold></highlight>, only one memory device <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>at a time reads or writes data, thus avoiding bus contention on the memory bus <highlight><bold>23</bold></highlight>. Bus contention is avoided by each of the memory devices <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>on the system memory <highlight><bold>22</bold></highlight> having a unique identifier, and the command packet contains an identifying code that selects only one of these components. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The computer system <highlight><bold>10</bold></highlight> also includes a number of other components and signal lines that have been omitted from <cross-reference target="DRAWINGS">FIG. 1</cross-reference> in the interests of brevity. For example, as explained below, the memory devices <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>also receive a master clock signal to provide internal timing signals, a data clock signal clocking data into and out of the memory device <highlight><bold>16</bold></highlight>, and a FLAG signal signifying the start of a command packet. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> A typical command packet CA&lt;0:39&gt; for an SLDRAM is shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> and is formed by 4 packet words CA&lt;0:9&gt;, each of which contains 10 bits of data. As will be explained in more detail below, each packet word CA&lt;0:9&gt; is applied on a command-address bus CA including 10 lines CA0-CA9. In <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the four packet words CA&lt;0:9&gt; comprising a command packet CA&lt;0:39&gt; are designated PW<highlight><bold>1</bold></highlight>-PW<highlight><bold>4</bold></highlight>. The first packet word PW<highlight><subscript>1 </subscript></highlight>contains 7 bits of data identifying the packetized DRAM <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>that is the intended recipient of the command packet. As explained below, each of the packetized DRAMs is provided with a unique ID code that is compared to the 7 ID bits in the first packet word PW<highlight><subscript>1</subscript></highlight>. Thus, although all of the packetized DRAMs <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>will receive the command packet, only the packetized DRAM <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>having an ID code that matches the 7 ID bits of the first packet word PW<highlight><subscript>1 </subscript></highlight>will respond to the command packet. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The remaining 3 bits of the first packet word PW<highlight><subscript>1 </subscript></highlight>as well as 3 bits of the second packet word PW<highlight><subscript>2 </subscript></highlight>comprise a 6 bit command. Typical commands are read and write in a variety of modes, such as accesses to pages or banks of memory cells. The remaining 7 bits of the second packet word PW<highlight><subscript>2 </subscript></highlight>and portions of the third and fourth packet words PW<highlight><subscript>3 </subscript></highlight>and PW<highlight><subscript>4 </subscript></highlight>comprise a 20 bit address specifying a bank, row and column address for a memory transfer or the start of a multiple bit memory transfer. In one embodiment, the 20 bit address is divided into 3 bits of bank address, 10 bits of row address, and 7 bits of column address. Although the command packet shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is composed of 4 packet words PW<highlight><bold>1</bold></highlight>-PW<highlight><bold>4</bold></highlight> each containing up to 10 bits, it will be understood that a command packet may contain a lesser or greater number of packet words, and each packet word may contain a lesser or greater number of bits. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>is shown in block diagram form in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. Each of the memory devices <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>includes a clock generator circuit <highlight><bold>40</bold></highlight> that receives a command clock signal CCLK and generates a large number of other clock and timing signals to control the timing of various operations in the memory device <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>. The memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>also includes a command buffer <highlight><bold>46</bold></highlight> and an address capture circuit <highlight><bold>48</bold></highlight> which receive an internal clock signal ICLK, a command packet CA&lt;0:9&gt; on a 10 bit command-address bus CA, and a terminal <highlight><bold>52</bold></highlight> receiving a FLAG signal. A memory controller (not shown) or other device normally transmits the command packet CA&lt;0:9&gt; to the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>in synchronism with the command clock signal CCLK. As explained above, the command packet CA&lt;0:39&gt;, which generally includes four 10-bit packet words PW<highlight><bold>1</bold></highlight>-PW<highlight><bold>4</bold></highlight>, contains control and address information for each memory transfer. The FLAG signal identifies the start of a command packet, and also signals the start of an initialization sequence. The command buffer <highlight><bold>46</bold></highlight> receives the command packet from the command-address bus CA, and compares at least a portion of the command packet to identifying data from an ID register <highlight><bold>56</bold></highlight> to determine if the command packet is directed to the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>or some other memory device <highlight><bold>16</bold></highlight><highlight><italic>b</italic></highlight>, c. If the command buffer <highlight><bold>46</bold></highlight> determines that the command is directed to the memory device <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>, it then provides the command to a command decoder and sequencer <highlight><bold>60</bold></highlight>. The command decoder and sequencer <highlight><bold>60</bold></highlight> generates a large number of internal control signals to control the operation of the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>during a memory transfer. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The address capture circuit <highlight><bold>48</bold></highlight> also receives the command packet from the command-address bus CA and outputs a 20-bit address corresponding to the address information in the command packet. The address is provided to an address sequencer <highlight><bold>64</bold></highlight>, which generates a corresponding 3-bit bank address on bus <highlight><bold>66</bold></highlight>, a 10-bit row address on bus <highlight><bold>68</bold></highlight>, and a 7-bit column address on bus <highlight><bold>70</bold></highlight>. The row and column addresses are processed by row and column address paths, as will be described in more detail below. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> One of the problems of conventional DRAMs is their relatively low speed resulting from the time required to precharge and equilibrate circuitry in the DRAM array. The SLDRAM <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> largely avoids this problem by using a plurality of memory banks <highlight><bold>80</bold></highlight>, in this case eight memory banks <highlight><bold>80</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>h</italic></highlight>. After a read from one bank <highlight><bold>80</bold></highlight><highlight><italic>a</italic></highlight>, the bank <highlight><bold>80</bold></highlight><highlight><italic>a </italic></highlight>can be precharged while the remaining banks <highlight><bold>80</bold></highlight><highlight><italic>b</italic></highlight>-<highlight><italic>h </italic></highlight>are being accessed. Each of the memory banks <highlight><bold>80</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>h </italic></highlight>receives a row address from a respective row latch/decoder/driver <highlight><bold>82</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>h</italic></highlight>. All of the row latch/decoder/drivers <highlight><bold>82</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>h </italic></highlight>receive the same row address from a predecoder <highlight><bold>84</bold></highlight> which, in turn, receives a row address from either a row address register <highlight><bold>86</bold></highlight> or a refresh counter <highlight><bold>88</bold></highlight> as determined by a multiplexer <highlight><bold>90</bold></highlight>. However, only one of the row latch/decoder/drivers <highlight><bold>82</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>h </italic></highlight>is active at any one time as determined by bank control logic <highlight><bold>94</bold></highlight> as a function of a bank address from a bank address register <highlight><bold>96</bold></highlight>. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The column address on bus <highlight><bold>70</bold></highlight> is applied to a column latch/decoder <highlight><bold>100</bold></highlight>, which supplies I/O gating signals to an I/O gating circuit <highlight><bold>102</bold></highlight>. The I/O gating circuit <highlight><bold>102</bold></highlight> interfaces with columns of the memory banks <highlight><bold>80</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>h </italic></highlight>through sense amplifiers <highlight><bold>104</bold></highlight>. Data is coupled to or from the memory banks <highlight><bold>80</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>h </italic></highlight>through the sense amps <highlight><bold>104</bold></highlight> and I/O gating circuit <highlight><bold>102</bold></highlight> to a data path subsystem <highlight><bold>108</bold></highlight> which includes a read data path <highlight><bold>110</bold></highlight> and a write data path <highlight><bold>112</bold></highlight>. The read data path <highlight><bold>110</bold></highlight> includes a read latch <highlight><bold>120</bold></highlight> that stores data from the I/O gating circuit <highlight><bold>102</bold></highlight>. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> In the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>shown in <cross-reference target="DRAWINGS">FIG. 3, 64</cross-reference> bits of data are stored in the read latch <highlight><bold>120</bold></highlight>. The read latch then provides four 16-bit data words to an output multiplexer <highlight><bold>122</bold></highlight> that sequentially supplies each of the 16-bit data words to a read FIFO buffer <highlight><bold>124</bold></highlight>. Successive 16-bit data words are clocked through the read FIFO buffer <highlight><bold>124</bold></highlight> in response to a clock signal RCLK generated by the clock generator <highlight><bold>40</bold></highlight>. The FIFO buffer <highlight><bold>124</bold></highlight> sequentially applies the 16-bit data words to a driver circuit <highlight><bold>128</bold></highlight> which, in turn, applies the 16-bit data words to a data bus DQ forming part of the processor bus <highlight><bold>14</bold></highlight> (see <cross-reference target="DRAWINGS">FIG. 1</cross-reference>). The FIFO buffer <highlight><bold>124</bold></highlight> also applies two data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> to the driver circuit <highlight><bold>128</bold></highlight> which, in turn, applies the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> on respective data clock lines <highlight><bold>132</bold></highlight> and <highlight><bold>133</bold></highlight>. The data clocks DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> enable a device, such as the memory controller <highlight><bold>18</bold></highlight>, reading data on the data bus DQ to be synchronized with the data. Particular bits in the command portion of the command packet CA0-CA9 determine which of the two data clocks DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> is applied by the driver circuit <highlight><bold>128</bold></highlight>. It should be noted that the data clocks DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> are differential clock signals, each including true and complementary signals, but for ease of explanation, only one signal for each clock is illustrated and described. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The write data path <highlight><bold>112</bold></highlight> includes a receiver buffer <highlight><bold>140</bold></highlight> coupled to the data bus <highlight><bold>130</bold></highlight>. The receiver buffer <highlight><bold>140</bold></highlight> sequentially applies 16-bit data words from the data bus DQ to four input registers <highlight><bold>142</bold></highlight>, each of which is selectively enabled by a signal from a clock generator circuit <highlight><bold>144</bold></highlight>. The clock generator circuit <highlight><bold>144</bold></highlight> generates these enable signals responsive to the selected one of the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight>. The memory controller or processor determines which data clock DCLK<highlight><bold>0</bold></highlight> or DCLK<highlight><bold>1</bold></highlight> will be utilized during a write operation using the command portion of a command packet applied to the memory device <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>. As with the command clock signal CCLK and command packet, the memory controller or other device (not shown) normally transmits the data to the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>in synchronism with the selected one of the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight>. The clock generator <highlight><bold>144</bold></highlight> is programmed during initialization to adjust the timing of the clock signal applied to the input registers <highlight><bold>142</bold></highlight> relative to the selected one of the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> so that the input registers <highlight><bold>142</bold></highlight> can capture the write data at the proper times. In response to the selected data clock DCLK<highlight><bold>0</bold></highlight> or DCLK<highlight><bold>1</bold></highlight>, the input registers <highlight><bold>142</bold></highlight> sequentially store four 16-bit data words and combine them into one 64-bit data word applied to a write FIFO buffer <highlight><bold>148</bold></highlight>. The write FIFO buffer <highlight><bold>148</bold></highlight> is clocked by a signal from the clock generator <highlight><bold>144</bold></highlight> and an internal write clock WCLK to sequentially apply 64-bit write data to a write latch and driver <highlight><bold>150</bold></highlight>. The write latch and driver <highlight><bold>150</bold></highlight> applies the 64-bit write data to one of the memory banks <highlight><bold>80</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>h </italic></highlight>through the I/O gating circuit <highlight><bold>102</bold></highlight> and the sense amplifiers <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> As mentioned above, an important goal of the synchronous link architecture is to allow data transfer between a processor or memory controller and a memory device to occur at a significantly faster rate. However, as the rate of data transfer increases, it becomes more difficult to maintain synchronization of signals transmitted between the memory controller <highlight><bold>18</bold></highlight> and the memory device <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>. For example, as mentioned above, the command packet CA&lt;0:39&gt; is normally transmitted from the memory controller <highlight><bold>18</bold></highlight> to the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>in synchronism with the command clock signal CCLK, and the read and write data are normally transferred between the memory controller <highlight><bold>18</bold></highlight> and the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>in synchronism with the selected one of the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight>. However, because of unequal signal delays and other factors, the command packet CA&lt;0:39&gt; may not arrive at the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>in synchronism with the command clock signal CCLK, and write and read data may not arrive at the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>and memory controller <highlight><bold>18</bold></highlight>, respectively, in synchronism with the selected one of the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight>. Moreover, even if these signals are actually coupled to the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>and memory controller <highlight><bold>18</bold></highlight> in synchronism with each other, they may loose synchronism once they are coupled to circuits within these respective devices. For example, internal signals require time to propagate to various circuitry in the memory device <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>, differences in the lengths of signal routes can cause differences in the times at which signals reach the circuitry, and differences in capacitive loading of signal lines can also cause differences in the times at which signals reach the circuitry. These differences in arrival times can become significant at high speeds of operation and eventually limit the operating speed of the memory devices <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>and memory controller <highlight><bold>18</bold></highlight>. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The problems associated with varying arrival times are exacerbated as timing tolerances become more restricted with higher data transfer rates. For example, if the internal clock ICLK derived from the command clock CCLK does not latch each of the packet words CA&lt;0:9&gt; comprising a command packet CA&lt;0:39&gt; at the proper time, errors in the operation of the memory device may result. Similarly, data errors may result during write operations if internal signals developed responsive to the data clocks DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> do not latch data applied on the data bus DQ at the proper time. During read operations, data errors may likewise result if internal signals in the memory controller <highlight><bold>18</bold></highlight> developed responsive to the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> from the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>do not latch read data applied on the data bus DQ at the proper time. Moreover, even if these respective clocks are initially synchronized, this synchronism may be lost over time during normal operation of the memory device <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>. Loss in synchronism may result from a variety of factors, including temperature variations in the environment in which the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>is operating, variations in the supply voltage applied to the memory device, and drift in operating parameters of components within the memory device. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> One skilled in the art will understand that synchronization of the clock signals CCLK, DCLK<highlight><bold>0</bold></highlight>, and DCLK<highlight><bold>1</bold></highlight> is being used to mean the adjusting of the timing of respective internal clock signals derived from these respective external clock signals so the internal clock signals can be used to latch corresponding digital signals at the proper times. For example, the command clock signal CCLK is synchronized when the timing of the internal clock signal ICLK relative to the command clock signal CCLK causes packet words CA&lt;0:9&gt; to be latched at the proper times. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> To synchronize the command clock signals CCLK and the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> during write data operations, the memory controller <highlight><bold>18</bold></highlight> applies a test bit pattern and (<cross-reference target="DRAWINGS">FIG. 1</cross-reference>) places the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>in a command and write data synchronization mode. During the synchronization mode, synchronization circuitry within the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>(not shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>) detects the applied bit pattern, places the device in the synchronization mode, and thereafter generates the necessary control signals to control components within the memory device to synchronize the clock signals CCLK, DCLK<highlight><bold>0</bold></highlight>, and DCLK<highlight><bold>1</bold></highlight> from the controller <highlight><bold>18</bold></highlight>. The data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> must similarly be synchronized for read operations between the memory controller <highlight><bold>18</bold></highlight> and memory device <highlight><bold>16</bold></highlight><highlight><italic>a. </italic></highlight></paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> As mentioned above, an important goal of the synchronous link architecture is to allow data transfer between a processor and a memory device to occur at a significantly faster rate. It should be noted that the phrase &ldquo;data transfer&rdquo; as used herein includes all digital signals transferred to and from the memory device <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>, and thus includes signals on the CA and DQ busses as well as the FLAG signal. As the data transfer rate increases, it becomes more difficult to maintain the required timing between signals transmitted between the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>and the memory controller <highlight><bold>18</bold></highlight>. For example, as mentioned above, the command packet CA&lt;0:39&gt; is normally transmitted to the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>in synchronization with the command clock signal CCLK, and the data is normally transmitted to the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>in synchronization with the selected one of the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight>. However, because of unequal signal delays and other factors, the command packet words CA&lt;0:9&gt; may not arrive at the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>in synchronization with the command clock signal CCLK, and the data packet words may not arrive at the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>in synchronization with the selected data clock signal DCLK<highlight><bold>0</bold></highlight> or DCLK<highlight><bold>1</bold></highlight>. Moreover, even if these signals are actually coupled to the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>in synchronization with each other, this timing may be lost once they are coupled to circuits within the memory device. For example, internal signals require time to propagate to various circuitry in the memory device <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>, differences in the lengths of signal routes can cause differences in the times at which signals reach the circuitry, and differences in capacitive loading of signal lines can also cause differences in the times at which signals reach the circuitry. These differences in arrival times can become significant at high data transfer rates and eventually limit the operating speed of the packetized memory devices. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The problems associated with varying arrival times are exacerbated as timing tolerances become more restricted at higher data transfer rates. For example, if the internal clock ICLK derived from the command clock CCLK does not cause each of the packet words CA&lt;0:9&gt; comprising a command packet CA&lt;0:39&gt; to latch at the proper time, errors in the operation of the memory device may result. Thus, the timing or phase shift of the internal clock signal ICLK relative to the command clock signal CCLK must be adjusted such that the ICLK signal may be utilized to successfully latch each of the respective command signals CA&lt;0&gt;-CA&lt;9&gt; comprising a packet word CA&lt;0:9&gt;. This is true notwithstanding the varying arrival times of the respective command signals CA&lt;0&gt;-CA&lt;9&gt; within each packet word CA&lt;0:9&gt; relative to the ICLK signal. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Thus, for each of the clock signals CCLK, DCLK<highlight><bold>0</bold></highlight>, and DCLK<highlight><bold>1</bold></highlight> the phase shift of respective internal clock signals derived from these respective external clock signals must be adjusted so the internal clock signals can be used to latch corresponding packet words at optimum times. For example, the phase shift of the internal clock signal ICLK relative to the command clock signal CCLK must be adjusted so that all command signals CA&lt;0&gt;-CA&lt;9&gt; in each packet word CA&lt;0:9&gt; are latched at the optimum time. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> As the data transfer rate increases, the duration for which each signal CA&lt;0&gt;-CA&lt;9&gt; in a packet word CA&lt;0:9&gt; is valid decreases by a corresponding amount, as will be understood by one skilled in the art. More specifically, the data window or &ldquo;eye&rdquo; DE for each of the DQ&lt;0&gt;-DQ&lt;15&gt; signals decreases at higher data transfer rates. As understood by one skilled in the art, the data eye DE for each of the DQ&lt;0&gt;-DQ&lt;9&gt; signals defines the actual duration that each signal is valid after timing skew of the signal is considered. The timing skew of the DQ&lt;0&gt;-DQ&lt;9&gt; signals arises from a variety of timing errors such as loading on the lines of the DQ bus and the physical lengths of such lines. <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a timing diagram illustrating the data eyes DE for a number of the DQ&lt;0&gt;-DQ&lt;9&gt; signals. The solid lines indicate the ideal DQ&lt;0&gt;, DQ&lt;1&gt;, and DQ&lt;9&gt; signals, and the dashed lines indicate the worst case potential time skew for each of these signals. The data eyes DE of the DQ&lt;0&gt;, DQ&lt;1&gt;, and DQ&lt;9&gt; signals are defined by time intervals t<highlight><subscript>0</subscript></highlight>-t<highlight><subscript>3</subscript></highlight>, t<highlight><subscript>1</subscript></highlight>-t<highlight><subscript>4</subscript></highlight>, and t<highlight><subscript>5</subscript></highlight>-t<highlight><subscript>7</subscript></highlight>, respectively. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> As data eyes DE of the applied signals DQ&lt;0&gt;-DQ&lt;9&gt; decrease at high data transfer rates, it is possible that one or more of these signals in each data packet word DQ&lt;0:15&gt; will have arrival times such that not all signals in a packet word are simultaneously valid at the memory device <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>, and thus cannot be successfully captured by the internal clock signal ICLK. For example, in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the data eye DE of the DQ&lt;0&gt; signal from times t<highlight><subscript>0</subscript></highlight>-t<highlight><subscript>3 </subscript></highlight>does not overlap the data eye of the DQ&lt;15&gt; signal from times t<highlight><subscript>5</subscript></highlight>-t<highlight><subscript>7</subscript></highlight>. In this situation, the signals DQ&lt;0&gt; and DQ&lt;15&gt; are not both valid at the memory device <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>at the same time so the packet word DQ&lt;0:15&gt; cannot be successfully captured responsive to the RCLK signal. The transition of the RCLK signal at time t<highlight><subscript>2 </subscript></highlight>could successfully capture the DQ&lt;0&gt; and DQ&lt;1&gt; signals, but not the DQ&lt;15&gt; signal, and, conversely, the transition of the RCLK signal at time t<highlight><subscript>6 </subscript></highlight>could successfully capture the DQ&lt;15&gt; signal but not the DQ&lt;0&gt; and DQ&lt;1&gt; signals, both of which have already gone invalid at time t<highlight><subscript>6</subscript></highlight>. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> There is a need for synchronizing respective data clock signals and corresponding data packet signals during the transfer of read data between packetized memory devices and a memory controller. Although the foregoing discussion is directed to synchronizing clock signals in packetized memory devices like SLDRAMs, similar problems exist in other types of integrated circuits as well, including other types of memory devices. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> According to one aspect of the present invention, a method adaptively adjusts respective timing offsets of a plurality of digital signals relative to a clock signal being output along with the digital signals to enable a circuit receiving the digital signals successfully to each of the digital signals responsive to the clock signal. The method includes storing in a respective storage circuit associated with each digital signal a corresponding phase command. The phase command defines a particular timing offset between the corresponding digital signal and the clock signal. The clock signal is output along with each digital signal having the timing offset defined by the corresponding phase command. The digital signals are captured responsive to the clock signal and evaluated to determine if each digital signal was successfully captured. A phase adjustment command is generated to adjust the value of each phase command. The operations of outputting the clock signal through generating a phase adjustment command are repeated for a plurality of phase adjustment commands for each digital signal. A phase command that causes the digital signal to be successfully captured is then selected, and the selected phase command is stored in the storage circuit associated with the digital signal. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> According to another aspect of the present invention, a read synchronization circuit adaptively adjusts respective timing offsets of a plurality of digital signals applied on respective signal terminals and an external data clock signal to enable an external device to latch the digital signals responsive to the external data clock signal. The read synchronization circuit includes a plurality of latch circuits, each latch circuit including an input, an output coupled to a respective signal terminal, and a clock terminal. Each latch circuit stores a signal applied on the input and providing the stored signal on the signal terminal responsive to a clock signal applied on the clock terminal. A plurality of phase command registers store phase commands with each register being associated with at least one of the latch circuits. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> A clock generation circuit is coupled to latch circuits and the phase command registers and generates a plurality of internal clock signals and the external data clock signal responsive to a read clock signal. Each internal clock signal and the external clock signal has a respective phase shift relative to the read clock signal. The clock generation circuit selects one of the internal clock signals for each latch circuit in response to the associated phase command and applies the selected internal clock signal to the clock terminal of the latch circuit to place digital signals on the corresponding signal terminal with a timing offset determined by the phase shift of the selected internal clock signal. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> A control circuit is coupled to the clock generation circuit and the phase command registers and operates in response to a synchronization command to apply synchronization digital signals on the inputs of the latch circuits and to adjust the respective timing offsets between the external data clock signal and the synchronization digital signals output by each latch circuit by adjusting the respective values of the phase commands. The circuit stores final phase commands in each phase command register that allow the synchronization digital signals to be successfully captured responsive to the external data clock signal. The read synchronization circuit may be utilized in a variety of different types of integrated circuits, including packetized memory devices such as SLDRAMs, nonpacketized devices such as double-data-rate synchronous dynamic random access memories (DDR SDRAMs), and alternative memory architectures having alternative clocking topologies.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a conventional computer system including a plurality of packetized memory devices. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is diagram showing a typical command packet received by the packetized memory devices of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram of a conventional packetized memory device in the computer system of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a timing diagram illustrating the effect of timing skews on capturing respective data signals on the data bus at high data transfer rates. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is block diagram of a read synchronization system for a packetized memory device according to one embodiment of the present invention. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a timing diagram illustrating the operation of the system of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> in adjusting the respective timing offsets of several data bits relative to a data clock signal to allow the memory controller (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) to successfully capture all data bits in response to the data clock signal. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a functional block diagram illustrating a memory system including components of the read synchronization system of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> according to another embodiment of the present invention. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a functional block diagram of a read synchronization system <highlight><bold>400</bold></highlight> including a memory controller <highlight><bold>402</bold></highlight> and packetized memory device <highlight><bold>404</bold></highlight> according to one embodiment of the present invention. The memory controller <highlight><bold>402</bold></highlight> applies command packets CA&lt;0:39&gt; and FLAG bits to the memory device <highlight><bold>404</bold></highlight> over the command-address bus CA and FLAG line, respectively, and transfers data packet words D&lt;0:15&gt; on the data bus DQ. During read operations, the memory controller <highlight><bold>402</bold></highlight> clocks the received data packet words D&lt;0:15&gt; into the controller responsive to one of the data clocks DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight>. Prior to performing read operations, the memory controller <highlight><bold>402</bold></highlight> places the memory device <highlight><bold>404</bold></highlight> in a read synchronization mode of operation and adjusts the timing offset of respective bits DQ&lt;0&gt;-DQ&lt;15&gt; in the data packet words D&lt;0:15&gt; relative to the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> to synchronize the data clock signals for use during normal read operations, as will be explained in more detail below. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> One skilled in the art will understand that synchronization of the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> as described herein means the adjustment of the timing offset of respective bits D&lt;0&gt;-D&lt;15&gt; in the data packet words D&lt;0:15&gt; relative to the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> such that the memory controller <highlight><bold>402</bold></highlight> can successfully capture the data packet words D&lt;0:15&gt; responsive to the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight>, as will be discussed in more detail below. In the following description, certain details are set forth to provide a sufficient understanding of the present invention. However, it will be clear to one skilled in the art that the invention may be practiced without these particular details. In other instances, well-known circuits, control signals, timing protocols, and software operations have not been shown in detail in order to avoid unnecessarily obscuring the invention. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> In the memory device <highlight><bold>404</bold></highlight>, the command buffer and address capture circuit <highlight><bold>46</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 3</cross-reference>) latches packet words CA&lt;0:9&gt; and FLAG bits applied on the respective command-address bus CA and FLAG line as previously described with reference to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. A command decoder and sequencer <highlight><bold>408</bold></highlight> receives the latched command packet CA&lt;0:39&gt; and FLAG bits from the command buffer and address capture circuit <highlight><bold>46</bold></highlight> and generates a plurality of control signals <highlight><bold>410</bold></highlight> to control the operation of various components within the memory device <highlight><bold>404</bold></highlight> in response to the latched command packet CA&lt;0:39&gt; and FLAG signals. During the read synchronization mode of operation, the command decoder and sequencer <highlight><bold>408</bold></highlight> generates a phase adjust command word PHADJCMD&lt;0:Y&gt; in response to a phase adjustment command that is applied on the command-address bus CA and latched by the command buffer and address capture circuit <highlight><bold>46</bold></highlight>, as will be described in more detail below. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> An up/down phase counter-controller <highlight><bold>416</bold></highlight> latches the phase adjust command word PHADJCMD from the command decoder and sequencer <highlight><bold>408</bold></highlight> and operates in response to the latched phase adjust command word to develop a phase command word CMDPH&lt;0:3&gt; and to store the developed phase command word in one of a plurality of phase command registers <highlight><bold>434</bold></highlight>A-P, as will be explained in more detail below. The latched CMDPH&lt;0:3&gt; word stored in the registers <highlight><bold>434</bold></highlight>A-P are designated as phase command words CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt;, respectively. A plurality of multiplexers <highlight><bold>436</bold></highlight>A-P receive the CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt; words, respectively, stored in the registers <highlight><bold>434</bold></highlight>A-P, and further receive a plurality of clock signals <highlight><bold>438</bold></highlight>A-N from a delay-locked loop circuit <highlight><bold>418</bold></highlight> on respective inputs. The delay-locked loop circuit <highlight><bold>418</bold></highlight> develops the plurality of clock signals <highlight><bold>438</bold></highlight>A-N in response to the RCLK signal, with the clock signals <highlight><bold>438</bold></highlight>A-N having phase shifts, designated &phgr;<highlight><subscript>1</subscript></highlight>-&phgr;<highlight><subscript>N</subscript></highlight>, respectively, relative to the RCLK signal. In the embodiment of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, the delay-locked loop circuit <highlight><bold>418</bold></highlight> develops sixteen clock signals <highlight><bold>434</bold></highlight>A-N and maintains a phase shift of 180&deg; between the clock signals <highlight><bold>438</bold></highlight>A and <highlight><bold>438</bold></highlight>N. A more detailed description of one embodiment of a programmable-delay clock generation circuit that may be used as the delay locked loop circuit <highlight><bold>418</bold></highlight> is described in U.S. patent application Ser. No. 08/811,918 to Manning, which is incorporated herein by reference. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> Each multiplexer <highlight><bold>436</bold></highlight>A-P provides one of the applied clock signals <highlight><bold>438</bold></highlight>A-N on an output in response to the phase command word CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt; applied from the corresponding register <highlight><bold>434</bold></highlight>A-P. The clock signals output by the multiplexers <highlight><bold>436</bold></highlight>A-P are designated data read clocks DRCLK<highlight><bold>0</bold></highlight>-DRCLK<highlight><bold>15</bold></highlight>, respectively, and are applied to clock respective read synchronization data bits RSDW&lt;0&gt;-RSDW&lt;15&gt; into a plurality of data latches <highlight><bold>440</bold></highlight>A-P. A read data pattern generator <highlight><bold>424</bold></highlight> generates the RSDW&lt;0&gt;-RSDW&lt;15&gt; bits, as will be discussed in more detail below. In response to the applied DRCLK<highlight><bold>0</bold></highlight>-DRCLK<highlight><bold>15</bold></highlight> signals, the latches <highlight><bold>440</bold></highlight>A-P store the applied RSDW&lt;0&gt;-RSDW&lt;15&gt; bits, respectively, and apply the stored bits through corresponding buffers <highlight><bold>442</bold></highlight>A-P as the data bits D&lt;0&gt;-D&lt;15&gt; on the data bus DQ. The DRCLK<highlight><bold>0</bold></highlight>-DRCLK<highlight><bold>15</bold></highlight> signals thus determine when each latch <highlight><bold>440</bold></highlight>A-P places the corresponding RSDW&lt;0&gt;-RSDW&lt;15&gt; bit onto the corresponding line of the data bus DQ relative to transitions of the RCLK signal. This is true because each DRCLK<highlight><bold>0</bold></highlight>-DRCLK<highlight><bold>15</bold></highlight> signal corresponds to one of the clock signals <highlight><bold>438</bold></highlight>A-N selected by the corresponding multiplexer <highlight><bold>436</bold></highlight>A-P responsive to the applied CMPDH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt; word, and each clock signal <highlight><bold>438</bold></highlight>A-N has a defined phase shift relative to the RCLK signal as previously described. The memory device <highlight><bold>404</bold></highlight> further includes a data clock driver circuit <highlight><bold>446</bold></highlight> that generates the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> in response to the read clock signal RCLK. Although the two data clocks DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> are discussed in the described embodiments, only one data clock may be used in an alternative embodiment as will be understood by those skilled in the art. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> During the read synchronization mode of operation, the read data pattern generator <highlight><bold>424</bold></highlight> generates successive 16-bit read synchronization data packet words RSDW&lt;0:15&gt;, with respective bits RSDW&lt;0&gt;-RSDW&lt;15&gt; in each word being clocked into respective data latches <highlight><bold>440</bold></highlight>A-P in response the DCLK<highlight><bold>0</bold></highlight>-DCLK<highlight><bold>15</bold></highlight> signals. During normal read operations, the 16-bit data packet words D&lt;0:15&gt; corresponding to the data being accessed are successively output from the multiplexer <highlight><bold>122</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 3</cross-reference>) and are clocked into the data latches <highlight><bold>440</bold></highlight>A-P responsive to the DCLK<highlight><bold>0</bold></highlight>-DCLK<highlight><bold>15</bold></highlight> signals and thereafter applied through the buffers <highlight><bold>442</bold></highlight>A-P and onto the data bus DQ. For ease of explanation and clarity of description, <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates only the read data pattern generator <highlight><bold>424</bold></highlight> and corresponding RSDW&lt;0:15&gt; words being applied to the latches <highlight><bold>440</bold></highlight>A-P. The driver circuit <highlight><bold>446</bold></highlight> outputs the DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signals along with the RSDW&lt;0:15&gt; words being successively placed on the data bus DQ during the read synchronization mode and outputs the selected one of the DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signals along with the 16-bit data packet words being successively placed on the data bus DQ during the normal read mode. The read data pattern generator <highlight><bold>424</bold></highlight> may generate a variety of data patterns, and in one embodiment the read data pattern generator <highlight><bold>424</bold></highlight> generates a 15-bit repeating pseudo-random bit sequence as described in U.S. patent application Ser. No. 09/143,033 entitled METHOD AND APPARATUS FOR RESYNCHRONIZING A PLURALITY OF CLOCK SIGNALS USED TO LATCH RESPECTIVE DIGITAL SIGNALS, AND MEMORY DEVICE USING SAME, to Manning, which is incorporated herein by reference. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> During the read synchronization mode of operation, the memory controller <highlight><bold>402</bold></highlight> sequentially latches data words D&lt;0:15&gt; applied on the data bus DQ by the memory device <highlight><bold>404</bold></highlight> in response to the selected DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signal. For each bit in the latched D&lt;0:15&gt; words, the memory controller <highlight><bold>402</bold></highlight> executes a synchronization process to determine whether the latched bit D&lt;0&gt;-D&lt;15&gt; was successfully captured in response to the selected one of the DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signals. For example, the controller can generate an expected value for the bit D&lt;0&gt;-D&lt;15&gt; and compare the latched bit to the expected value. When the two bits are equal, the controller <highlight><bold>402</bold></highlight> determines the bit was successfully captured, and otherwise determines the capture was unsuccessful. The controller <highlight><bold>402</bold></highlight> then sends a phase adjustment command to the memory device <highlight><bold>404</bold></highlight> over the CA bus. In response to the phase adjustment command, the device <highlight><bold>404</bold></highlight> adjusts the timing offset between the selected DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signal and the bit D&lt;0:15&gt; being synchronized, and thereafter once again determines whether the bit is successfully captured. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The overall operation of the read synchronization system <highlight><bold>400</bold></highlight> in synchronizing the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> during the read synchronization mode of operation will now be described in more detail. The memory controller <highlight><bold>402</bold></highlight> operates in the read synchronization mode in response to a predetermined condition. For example, the memory controller <highlight><bold>402</bold></highlight> may operate in the read synchronization mode of operation as part of an initialization and synchronization procedure during which the memory controller <highlight><bold>402</bold></highlight> also synchronizes the command clock signal CCLK and the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> during write operations, and further performs other functions in initializing the memory device <highlight><bold>404</bold></highlight>. Alternatively, the memory controller <highlight><bold>402</bold></highlight> may operate in the read synchronization mode of operation after a predetermined time during normal operation of the memory controller and memory device <highlight><bold>404</bold></highlight> in order to periodically resynchronize the data clock signals DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> After commencing operation in the read synchronization mode of operation, the memory controller <highlight><bold>402</bold></highlight> applies phase adjustment commands to the memory device <highlight><bold>404</bold></highlight>. Each phase adjustment command includes information identifying a particular memory device <highlight><bold>404</bold></highlight> and a particular bit D&lt;0&gt;-D&lt;15&gt; that is to be synchronized. contains information that is utilized by the memory device <highlight><bold>404</bold></highlight> to adjust the value of the phase command word CMDPH&lt;0:3&gt; stored in a corresponding phase command register <highlight><bold>434</bold></highlight>A-P, as will be explained in more detail below. The phase adjustment command also selects one of the DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signals with which each D&lt;0&gt;-D&lt;15&gt; bit is to be synchronized. As previously mentioned, the value of the CMDPH&lt;0:3&gt; word adjusts the timing offset between the corresponding bit D&lt;0&gt;-D&lt;15&gt; and transitions of the selected data clock signal DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight>, and in this way the memory controller <highlight><bold>402</bold></highlight> utilizes the phase adjustment commands to adjust this offset for each bit D&lt;0&gt;-D&lt;15&gt;. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> The command buffer and address capture circuit <highlight><bold>46</bold></highlight> latches the applied phase adjustment commands read in response to the ICLK signal as previously described with reference to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, and outputs the latched command to the command decoder and sequencer <highlight><bold>408</bold></highlight>. The command decoder and sequencer <highlight><bold>408</bold></highlight> decodes the command portion of the applied phase adjustment command and thereafter generates the control signals <highlight><bold>410</bold></highlight> to place the memory device <highlight><bold>404</bold></highlight> in the read synchronization mode of operation. As part of placing the memory device <highlight><bold>404</bold></highlight> in the read synchronization mode, the up/down phase counter-controller <highlight><bold>416</bold></highlight> stores initial values for the CMDPH<highlight><bold>0</bold></highlight>-CMDPH<highlight><bold>15</bold></highlight>&lt;0:15&gt; words in the phase command registers <highlight><bold>434</bold></highlight>A-P, and the read data pattern generator <highlight><bold>424</bold></highlight> begins sequentially applying the read synchronization data words RSDW&lt;0:15&gt; to the data latches <highlight><bold>440</bold></highlight>A-P. The command decoder and sequencer <highlight><bold>408</bold></highlight> also generates the phase adjustment command word PHADJCMD&lt;0:Y&gt; in response to the applied phase adjustment command from the controller <highlight><bold>402</bold></highlight>. The value of the generated phase adjustment command word PHADJCMD&lt;0:Y&gt; is determined by the value of the phase adjustment command, and in this way the memory controller <highlight><bold>402</bold></highlight> controls the value of the phase adjustment command word PHADJCMD&lt;0:Y&gt;. As previously mentioned, the PHADJ&lt;0:N&gt; word contains information identifying a &ldquo;selected&rdquo; bit, which corresponds to the bit D&lt;0&gt;-D&lt;15&gt; on the data bus DQ that is being synchronized, and the PHADJCMD&lt;0:Y&gt; word similarly contains information identifying the selected bit. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The developed PHADJCMD&lt;0:Y&gt; word is applied to the counter-controller <highlight><bold>416</bold></highlight>, which first examines the latched PHADJCMD&lt;0:Y&gt; word to determine the selected bit and thereafter reads the current value of the phase command word CMDPH&lt;0:3&gt; stored in the phase command register <highlight><bold>434</bold></highlight>A-P associated with the selected bit. For example, if the PHADJCMD&lt;0:Y&gt; word identifies the bit D&lt;0&gt;, the counter-controller <highlight><bold>416</bold></highlight> reads the value of the CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt; word stored in the phase command register <highlight><bold>434</bold></highlight>A. After reading the value of CMDPH&lt;0:3&gt; word stored in the selected phase command register <highlight><bold>434</bold></highlight>A-P, the counter-controller <highlight><bold>416</bold></highlight> generates a new value for the CMDPH&lt;0:3&gt; word responsive to the PHADJCMD&lt;0:Y&gt;. For example, the PHADJCMD&lt;0:Y&gt; word may contain information instructing the counter-controller <highlight><bold>416</bold></highlight> to increment or decrement the value of the read CMDPH&lt;0:3&gt; word. Once the counter-controller <highlight><bold>416</bold></highlight> has generated the new CMDPH&lt;0:3&gt; word, the counter-controller <highlight><bold>416</bold></highlight> stores the new word in the appropriate phase command register <highlight><bold>434</bold></highlight>A-P. For example, if bit D&lt;0&gt; is being synchronized, the counter-controller <highlight><bold>416</bold></highlight> stores the newly generated value for the CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt; word in the register <highlight><bold>434</bold></highlight>A. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> The counter-controller <highlight><bold>416</bold></highlight> can, alternatively, simply store an updated phase command word CMDPH&lt;0:3&gt; in the appropriate register <highlight><bold>434</bold></highlight>A-P responsive to the PHADJCMD&lt;0:Y&gt; word. In this way, the counter-controller <highlight><bold>416</bold></highlight> need not first read the CMDPH&lt;0:3&gt; word stored in the register <highlight><bold>413</bold></highlight>A-P being updated. In another embodiment of the system <highlight><bold>400</bold></highlight>, the counter-controller <highlight><bold>416</bold></highlight> can simultaneously adjust the values of the CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt; words stored in the registers <highlight><bold>434</bold></highlight>A-P, respectively. In this embodiment, the PHADJCMD&lt;0:Y&gt; word includes information the counter-controller <highlight><bold>416</bold></highlight> uses in independently adjusting each of the CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt; words. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> At this point, the read synchronization data words RSDW&lt;0:15&gt; generated by the pattern generator <highlight><bold>424</bold></highlight> are clocked into the data latches <highlight><bold>440</bold></highlight>A-P responsive to the clock signals DRCLK<highlight><bold>0</bold></highlight>-DRCLK<highlight><bold>15</bold></highlight>, respectively, with each of these clock signals having an offset relative to the RCLK signal. As previously described, each multiplexer <highlight><bold>436</bold></highlight>A-P outputs a selected one of the clock signals <highlight><bold>438</bold></highlight>A-N as the corresponding DRCLK<highlight><bold>0</bold></highlight>-DRCLK<highlight><bold>15</bold></highlight> signal, with the selected clock signal being determined by the value of the CMDPH<highlight><bold>0</bold></highlight>-CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt; word applied to the multiplexer from the corresponding phase command register <highlight><bold>434</bold></highlight>A-P. Thus, the data bits RSDW&lt;0&gt;-RSDW&lt;15&gt; are clocked out of the data latches <highlight><bold>440</bold></highlight>A-P having respective timing offsets relative to the RCLK signal and thus relative to the DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signals, with each timing offset being determined by the value of the CMDPH<highlight><bold>0</bold></highlight>-CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt; word store in the corresponding phase command register <highlight><bold>434</bold></highlight>A-P. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> At this point, in the memory controller <highlight><bold>402</bold></highlight> latches applied D&lt;0:15&gt; words responsive to the selected DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signal, and then determines whether the bit D&lt;0&gt;-D&lt;15&gt; being synchronized in the latched word was successfully captured. The memory controller <highlight><bold>402</bold></highlight> compares the latched value of the bit D&lt;0&gt;-D&lt;15&gt; being synchronized applied data word D&lt;0:63&gt; to the expected value for the bit and stores the result of the comparison. The Memory controller <highlight><bold>402</bold></highlight> thereafter generates a second phase adjustment command including an incremented phase value, and applies this new command to the memory device <highlight><bold>404</bold></highlight>. The command buffer and address capture circuit <highlight><bold>46</bold></highlight> once again latches the applied phase adjustment command and outputs the latched command to the command decoder and sequencer <highlight><bold>408</bold></highlight>. In response to the incremented phase value in this new phase adjustment command, the command decoder and sequencer <highlight><bold>408</bold></highlight> applies a new PHADJCMD&lt;0:Y&gt; word to the counter-controller <highlight><bold>416</bold></highlight> which, in turn, reads the current value of the selected CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt; word and increments or decrements the current value to develop a new CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH&lt;15&gt; word. The counter-controller <highlight><bold>416</bold></highlight> then stores the new value of the CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH&lt;15&gt; word in the corresponding register <highlight><bold>434</bold></highlight>A-P. At this point, the RSDW&lt;0&gt;-RSDW&lt;15&gt; bits from the pattern generator <highlight><bold>424</bold></highlight> are clocked into the data latches <highlight><bold>440</bold></highlight>A-P responsive to the clock signals DRCLK<highlight><bold>0</bold></highlight>-DRCLK<highlight><bold>15</bold></highlight>, respectively, with each of these clock signals having an offset relative to the DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signals as determined the current values of the CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt; words. The RSDW&lt;0:15&gt; words are thus clocked out of the data latches <highlight><bold>440</bold></highlight>A-P as the data initialization packet words D&lt;0:15&gt; on the data bus DQ, each bit D&lt;0&gt;-D&lt;15&gt; having a timing offset relative to the selected DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signal with the selected bit D&lt;0&gt;-D&lt;15&gt; currently being synchronized having a new timing offset as determined by the new value of the corresponding CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH&lt;0:3&gt; word. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> The memory controller <highlight><bold>402</bold></highlight> once again captures from the data bus DQ the data initialization packet words D&lt;0:15&gt; having the new timing offset applied to the bit D&lt;0&gt;-D&lt;15&gt; being synchronized, compares the latched value to an expected value, and stores the result of this comparison. The memory controller <highlight><bold>402</bold></highlight> continues adjusting the value of the phase adjustment command and applying the adjusted commands to the memory device <highlight><bold>404</bold></highlight> in order to adjust the timing offset between the selected D&lt;0&gt;-D&lt;15&gt; bit and the selected data clock signal DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight>. As the memory controller <highlight><bold>402</bold></highlight> adjusts the values of the phase adjustment commands, the memory controller stores a number of comparison results, each comparison result value corresponding to a particular value of the phase adjustment command (i.e., a particular timing offset of the selected bit D&lt;0&gt;-D&lt;15&gt; relative to the selected DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight> signal). After a predetermined number of comparison results have been stored, the memory controller <highlight><bold>402</bold></highlight> executes a phase selection procedure to select a final phase adjustment command from among the phase adjustment commands that resulted in the successful capture of the selected bit D&lt;0&gt;-D&lt;15&gt; as indicated by the corresponding comparison result. In one embodiment, the memory controller <highlight><bold>402</bold></highlight> stores sixteen comparison results, each corresponding to one of sixteen values for the phase adjustment command, and selects the final phase adjustment command from among the ones of the sixteen values that resulted in the successful capture of the selected D&lt;0&gt;-D&lt;15&gt; bit. One procedure that may be executed by the control circuit <highlight><bold>406</bold></highlight> in determining the final phase adjustment word PHADJ&lt;0:4&gt; is described in more detail in U.S. Pat. No. 5,953,284 to Baker et al., entitled METHOD AND APPARATUS FOR ADAPTIVELY ADJUSTING THE TIMING OF A CLOCK SIGNAL USED TO LATCH DIGITAL SIGNALS, AND MEMORY DEVICE USING SAME, which issued Sep. 14, 1999 and which is incorporated herein by reference. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> After selecting the desired one of the phase adjustment commands, the memory controller <highlight><bold>402</bold></highlight> applies the selected phase adjustment command to the memory device <highlight><bold>404</bold></highlight>. The command buffer and address capture circuit <highlight><bold>46</bold></highlight> and command decoder and sequencer <highlight><bold>408</bold></highlight> in the memory device <highlight><bold>404</bold></highlight> then operate as previously described develop the selected PHADJCMD&lt;0:Y&gt; word corresponding to the selected phase adjustment command. The counter-controller <highlight><bold>416</bold></highlight> receives the selected PHADJCMD&lt;0:Y&gt; word, which includes information indicating that the word corresponds to the final selected value for the corresponding bit D&lt;0&gt;-D&lt;15&gt;. In response to the selected PHADJCMD&lt;0:Y&gt; word, the counter-controller <highlight><bold>416</bold></highlight> operates as previously described to update the value of the CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH&lt;0:3&gt; word stored in the register <highlight><bold>434</bold></highlight>A-P corresponding to the bit being synchronized to a final value as determined by the selected PHADJCMD&lt;0:Y&gt; word. For example, if the D&lt;0&gt; bit is being synchronized, the counter-controller <highlight><bold>416</bold></highlight> sets the value of the CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt; word stored in the register <highlight><bold>434</bold></highlight>A to a final value as determined by the selected PHADJCMD&lt;0:Y&gt; word. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Upon the final phase command word CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt; being stored in the corresponding register <highlight><bold>434</bold></highlight>A-P, the corresponding clock signal DRCLK<highlight><bold>0</bold></highlight>-DRCLK<highlight><bold>15</bold></highlight> signal has a phase relative to the read clock signal RCLK that is determined by the final phase command word, and this phase is utilized during normal read operations of the memory device <highlight><bold>404</bold></highlight>. This final phase command word CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt; defines the timing offset between the selected DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signal and the corresponding bit D&lt;0&gt;-D&lt;15&gt;. This timing offset is then used during normal read operations of the memory device <highlight><bold>404</bold></highlight> so that the memory controller <highlight><bold>402</bold></highlight> may successfully capture this bit in the data packet words D&lt;0:15&gt; being transferred to the memory controller in response to read commands from the controller. The memory controller <highlight><bold>402</bold></highlight> control circuit <highlight><bold>406</bold></highlight> thereafter develops a data clock offset to edge align the second DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signal with the selected data clock signal. That enables the controller <highlight><bold>402</bold></highlight> to successfully capture data bits D&lt;0&gt;-D&lt;15&gt; responsive to either DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signal. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> After synchronizing both DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signals for the selected bit D&lt;0&gt;-D&lt;15&gt;, the memory controller <highlight><bold>402</bold></highlight> develops a new phase adjustment command identifying the next bit D&lt;0&gt;-D&lt;15&gt; to be synchronized, and the memory controller <highlight><bold>402</bold></highlight> and memory device <highlight><bold>404</bold></highlight> thereafter operate in the same way as just described to synchronize the newly selected bit. The controller <highlight><bold>402</bold></highlight> and memory device <highlight><bold>404</bold></highlight> repeat this process for each of the bits D&lt;0&gt;-D&lt;15&gt; to independently synchronize each bit with the DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signals. When each bit D&lt;0&gt;-D&lt;15&gt; has been synchronized, the phase command registers <highlight><bold>434</bold></highlight>A-P store final phase command values CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt; to define the respective timing offsets between the each bit D&lt;0&gt;-D&lt;15&gt; and the DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> signals. As will be understood by those skilled in the art, the exact process executed in synchronizing each D&lt;0&gt;-D&lt;15&gt; bit may be varied. For example each bit D&lt;0&gt;-D&lt;15&gt; may first be synchronized with the DCLK<highlight><bold>0</bold></highlight> signal, and then each synchronized with the DCLK<highlight><bold>1</bold></highlight> signal. Alternatively, a selected D&lt;0&gt;-D&lt;15&gt; bit may be synchronized with the DCLK<highlight><bold>0</bold></highlight> signal, then the next selected bit synchronized with the DCLK<highlight><bold>0</bold></highlight>, signal, and so on sequentially for all bits. In another process, respective D&lt;0&gt;-D&lt;15&gt; bits may be independently synchronized with the DCLK<highlight><bold>0</bold></highlight>, signal in parallel. Other processes and combinations of the described processes may be utilized and will be well understood by those skilled in the art. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> In another embodiment of the synchronization system <highlight><bold>400</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the memory device <highlight><bold>404</bold></highlight> includes a shadow register <highlight><bold>450</bold></highlight>, which is indicated with dotted lines, coupled between the counter-controller <highlight><bold>416</bold></highlight> and the phase command registers <highlight><bold>434</bold></highlight>A-P. The shadow register <highlight><bold>450</bold></highlight> stores all the current CMDPH<highlight><bold>0</bold></highlight>-<highlight><bold>15</bold></highlight>&lt;0:3&gt; words, and functions as a storage &ldquo;pipeline&rdquo; between the counter-controller <highlight><bold>416</bold></highlight> and the registers <highlight><bold>434</bold></highlight>A-P. In the system <highlight><bold>400</bold></highlight>, the phase command registers <highlight><bold>434</bold></highlight>A-P will typically be located near the data latches <highlight><bold>440</bold></highlight>A-P and buffers <highlight><bold>442</bold></highlight>A-P, which will all be physically proximate the external data bus DQ terminals of the memory device <highlight><bold>404</bold></highlight>. In contrast, the counter-controller <highlight><bold>416</bold></highlight> may not be located physically near the registers <highlight><bold>434</bold></highlight>A-P, thus causing the transfer of CMDPH<highlight><bold>0</bold></highlight>-<highlight><bold>15</bold></highlight>&lt;0:3&gt; words between the registers and the counter-controller to be slowed down due to the physical lengths of the data lines interconnecting these two components, as will be appreciated by those skilled in the art. If the counter-controller <highlight><bold>416</bold></highlight> must wait until an updated CMDPH<highlight><bold>0</bold></highlight>-<highlight><bold>15</bold></highlight>&lt;0:3&gt; word has been stored in the corresponding register <highlight><bold>434</bold></highlight>A-P, the operation of the system <highlight><bold>400</bold></highlight> may be slowed down due to the delay in transferring the words between the counter-controller and the registers. With the shadow register <highlight><bold>450</bold></highlight>, the counter-controller <highlight><bold>416</bold></highlight> can quickly update the value of one of the CMDPH<highlight><bold>0</bold></highlight>-<highlight><bold>15</bold></highlight>&lt;0:3&gt; words responsive to a corresponding phase adjustment command word PHADJCMD&lt;0:Y&gt; and thereafter begin processing a subsequent PHADJCMD&lt;0:Y&gt; word. The shadow register <highlight><bold>450</bold></highlight> thereafter transfers the updated CMDPH<highlight><bold>0</bold></highlight>-<highlight><bold>15</bold></highlight>&lt;0:3&gt; word to the proper register <highlight><bold>434</bold></highlight>A-P while the counter-controller <highlight><bold>416</bold></highlight> is processing the subsequent command word PHADJCMD&lt;0:Y&gt;. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a signal timing diagram that will be utilized to illustrate the relationship between the phase shift of the DRCLK<highlight><bold>0</bold></highlight>-DRCLK<highlight><bold>15</bold></highlight> signals relative to the RCLK signal as defined by the respective CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH&lt;15&gt; words, and also illustrates the corresponding timing offset between the DCLK<highlight><bold>0</bold></highlight> signal and respective bits D&lt;0&gt;-D&lt;15&gt; applied on the data bus DQ. In the example of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the DCLK<highlight><bold>0</bold></highlight> signal, which is generated by the drivers <highlight><bold>446</bold></highlight> in response to the RCLK signal, has the same phase as the RCLK signal. <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates the three different delayed read clock signals DRCLK<highlight><bold>0</bold></highlight>, DRCLK<highlight><bold>1</bold></highlight>, and DRCLK<highlight><bold>15</bold></highlight> corresponding to values CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;, CMDPH<highlight><bold>1</bold></highlight>&lt;0:3&gt;, and CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt; of the phase command word stored in the registers <highlight><bold>434</bold></highlight>A, <highlight><bold>434</bold></highlight>B, and <highlight><bold>434</bold></highlight>P, respectively. As shown, the DRCLK<highlight><bold>0</bold></highlight> signal has a phase shift &phgr;<highlight><subscript>1 </subscript></highlight>relative to the DCLK<highlight><bold>0</bold></highlight> signal. When the DRCLK<highlight><bold>0</bold></highlight> signal goes high at a time t<highlight><subscript>1</subscript></highlight>, the corresponding data bit D&lt;0&gt; is placed on the data bus DQ have a timing offset t<highlight><subscript>off1 </subscript></highlight>relative to the rising edge of DCLK<highlight><bold>0</bold></highlight> signal at a time t<highlight><subscript>0</subscript></highlight>. As previously discussed, the data bit D&lt;0&gt; is offset by the time t<highlight><subscript>off1 </subscript></highlight>to enable the memory controller <highlight><bold>402</bold></highlight> to successfully latch the data bit in response to the DCLK<highlight><bold>0</bold></highlight> signal. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> In the second example of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the DRCLK<highlight><bold>1</bold></highlight> signal corresponding to the CMDPH<highlight><bold>1</bold></highlight>&lt;0:3&gt; word has a phase shift &phgr;<highlight><subscript>2 </subscript></highlight>relative to the DCLK<highlight><bold>0</bold></highlight> signal, and the corresponding data bit D&lt;1&gt; has a timing offset t<highlight><subscript>off2 </subscript></highlight>relative to the rising edge of the DCLK<highlight><bold>0</bold></highlight> signal at the time to. Thus, in this example the data bit D&lt;1&gt;is applied on the data bus DQ at a time t<highlight><subscript>2 </subscript></highlight>before the rising edge of the DCLK<highlight><bold>0</bold></highlight> signal at the time to. The third example illustrates the DRCLK<highlight><bold>15</bold></highlight> signal having a phase shift &phgr;<highlight><subscript>3 </subscript></highlight>relative to the DCLK<highlight><bold>0</bold></highlight> signal, and the corresponding data D&lt;15&gt; has a timing offset t<highlight><subscript>off3 </subscript></highlight>relative to the rising edge of the DCLK<highlight><bold>0</bold></highlight> signal at the time to. In this example, the data D&lt;15&gt; is applied on the data bus DQ at a time t<highlight><subscript>3 </subscript></highlight>before the rising edge of the DCLK<highlight><bold>0</bold></highlight> signal at the time to. As illustrated by these examples, the phase command words CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;, CMDPH<highlight><bold>1</bold></highlight>&lt;0:3&gt;, and CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt; are independently adjusted to thereby vary the phase shift of the DRCLK<highlight><bold>0</bold></highlight>-DRCLK<highlight><bold>15</bold></highlight> signals relative to the DCLK<highlight><bold>0</bold></highlight> signal. As the respective phase shifts of the DRCLK<highlight><bold>0</bold></highlight>-DRCLK<highlight><bold>15</bold></highlight> signals are adjusted relative to the DCLK<highlight><bold>0</bold></highlight> signal, the timing offsets of the respective data bits D&lt;0&gt;-D&lt;15&gt; in each data packet D&lt;0:15&gt; applied on the data bus DQ are adjusted relative to transitions of the DCLK<highlight><bold>0</bold></highlight> signal by an amount corresponding to the adjusted phase shifts. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> One skilled in the art will realize that the procedure executed by the control circuit <highlight><bold>406</bold></highlight> in synchronizing the data clock signals DCLK<highlight><bold>0</bold></highlight>, DCLK<highlight><bold>1</bold></highlight> may vary. For example, in the above-described procedure the control circuit <highlight><bold>406</bold></highlight> captures only one data packet D&lt;0:63&gt; at each phase of the DRCLK<highlight><bold>0</bold></highlight>-DRCLK<highlight><bold>15</bold></highlight> signal corresponding to the bit D&lt;0&gt;-D&lt;15&gt; being synchronized. In another embodiment, the control circuit <highlight><bold>406</bold></highlight> may perform a predetermined number of comparisons at each given phase of the DRCLK<highlight><bold>0</bold></highlight>-DRCLK<highlight><bold>15</bold></highlight> signal and timing offset of the corresponding D&lt;0&gt;-D&lt;15&gt; bit relative to the data clocks DCLK<highlight><bold>0</bold></highlight> and DCLK<highlight><bold>1</bold></highlight>. In this embodiment, the control circuit <highlight><bold>406</bold></highlight> may, for example, control components of the memory controller <highlight><bold>402</bold></highlight> so that eight data packets D&lt;0:63&gt; are captured and compared at each phase of the DRCLK<highlight><bold>0</bold></highlight>-DRCLK<highlight><bold>15</bold></highlight> signals. When all eight of these comparisons indicate successful captures, the control circuit <highlight><bold>406</bold></highlight> stores a &ldquo;1&rdquo; indicating successful data capture at this phase. However, if any of the comparisons at a given phase indicates an unsuccessful capture, the control circuit <highlight><bold>406</bold></highlight> stores a &ldquo;0&rdquo; indicating failure at this phase. Once again, after sixteen, for example, results signals have been stored, the control circuit <highlight><bold>406</bold></highlight> determines the final phase adjustment word PHADJ&lt;0:4&gt; and transfers this word to the memory device <highlight><bold>404</bold></highlight>. The memory device <highlight><bold>404</bold></highlight> then operates as previously described, applying the corresponding PHADJCMD&lt;0:Y&gt; word to the counter-controller <highlight><bold>416</bold></highlight> which, in turn, stores the final phase command word CMDPH<highlight><bold>0</bold></highlight>&lt;0:3&gt;-CMDPH<highlight><bold>15</bold></highlight>&lt;0:3&gt; in the appropriate phase command register <highlight><bold>434</bold></highlight>A-P to thereby set the final phase of the corresponding DRCLK<highlight><bold>0</bold></highlight>-DRCLK<highlight><bold>15</bold></highlight> signal being adjusted. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> The overall operation of the read synchronization system <highlight><bold>400</bold></highlight> and general operation of several components within that circuit have now been described with reference to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. More detailed circuitry for implementing the components of the read synchronization system <highlight><bold>400</bold></highlight> contained within the memory controller <highlight><bold>402</bold></highlight> and memory device <highlight><bold>404</bold></highlight> will be understood by those skilled in the art, and are not provided in more detail to avoid unnecessarily obscuring the present invention. Several of these components are described in more detail in U.S. Pat. No. 6,029,250 to Keeth entitled METHOD AND APPARATUS FOR ADAPTIVELY ADJUSTING THE TIMING OFFSET BETWEEN A CLOCK SIGNAL AND DIGITAL SIGNALS TRANSMITTED COINCIDENT WITH THAT CLOCK SIGNAL, AND MEMORY DEVICE AND SYSTEM USING SAME, which is incorporated herein by reference. In addition, in addition to being used with a programmable delay circuit, such as the delay-locked loop <highlight><bold>418</bold></highlight>, the present invention may be used with other circuits for adjusting the timing offset between electrical signals, such as the command delay rings <highlight><bold>506</bold></highlight><highlight><italic>a </italic></highlight>described in U.S. patent application. Ser. No. 09/201,519 to Keeth, entitled METHOD AND APPARATUS FOR HIGH SPEED DATA CAPTURE UTILIZING BIT-TO-BIT TIMING CORRECTION, AND MEMORY DEVICE USING SAME, which was filed on Nov. 30, 1998 and which is incorporated herein by reference. Furthermore, as previously mentioned, the synchronization system <highlight><bold>400</bold></highlight> may be used in a variety of different types of memory devices in addition to the SLDRAM devices described herein, such as in RAMBUS type memory devices and in double-data-rate synchronous dynamic random access memory devices (&ldquo;DDR SDRAMs&rdquo;). In DDR SDRAMs, the timing offsets of respective bits on the data bus DQ are adjusted with respect to a data strobe signal DQS, as will be appreciated by those skilled in the art. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a functional block diagram illustrating a memory system <highlight><bold>700</bold></highlight> including memory devices <highlight><bold>702</bold></highlight>, <highlight><bold>704</bold></highlight> that include read synchronization circuits <highlight><bold>703</bold></highlight>, <highlight><bold>705</bold></highlight> according to another embodiment of the present invention. Each of the read synchronization circuits <highlight><bold>703</bold></highlight>, <highlight><bold>705</bold></highlight> includes components (not shown) of the read synchronization system <highlight><bold>400</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, as will be discussed in more detail below. In the memory system <highlight><bold>700</bold></highlight>, a clock generator <highlight><bold>706</bold></highlight> generates a system read clock signal RCLK that is applied to the memory devices <highlight><bold>702</bold></highlight>, <highlight><bold>704</bold></highlight> and is applied to a memory controller <highlight><bold>708</bold></highlight>. During a read operations, the memory device <highlight><bold>702</bold></highlight>, <highlight><bold>704</bold></highlight> being accessed supplies read data on a data bus DQ and the memory controller <highlight><bold>708</bold></highlight> latches the read data in response to the RCLK signal. During write operations, the memory controller <highlight><bold>708</bold></highlight> supplies write data on the data bus DQ and applies a write clock signal WCLK to the memory devices <highlight><bold>702</bold></highlight>, <highlight><bold>704</bold></highlight> which, in turn, latch the write data in response to the write clock signal. The memory controller <highlight><bold>708</bold></highlight> applies command and address information to the memory devices <highlight><bold>702</bold></highlight>, <highlight><bold>704</bold></highlight> over a command bus CMD and also applies a command clock signal CCLK that the memory devices utilize to latch the applied command and address information. One skilled in the art will appreciate that the command bus CMD may be a multiplexed bus including both command and address information when the memory devices <highlight><bold>702</bold></highlight>, <highlight><bold>704</bold></highlight> are packetized type memory devices such as SLDRAMs. Alternatively, the command bus CMD may include separate command and address busses when the memory devices <highlight><bold>702</bold></highlight>, <highlight><bold>704</bold></highlight> are non packetized type memory devices such as a DDR SDRAM. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> During normal write operations, the memory controller <highlight><bold>708</bold></highlight> applies a write command on the CMD bus to the memory devices <highlight><bold>702</bold></highlight>, <highlight><bold>704</bold></highlight> which, in turn, latch the write command in response to the CCLK signal also applied by the memory controller. Each of the memory devices <highlight><bold>702</bold></highlight>, <highlight><bold>704</bold></highlight> decodes the latched command and determines whether it is the device being accessed. The memory controller <highlight><bold>708</bold></highlight> supplies write data on the DQ bus and the memory device <highlight><bold>702</bold></highlight>, <highlight><bold>704</bold></highlight> being accessed latches the supplied write data in response to the CCLK signal from the memory controller. During normal read operations, the memory controller <highlight><bold>708</bold></highlight> applies the read command on the CMD bus to the memory devices <highlight><bold>702</bold></highlight>, <highlight><bold>704</bold></highlight> which, once again, latch and decode the read command. The memory device <highlight><bold>702</bold></highlight>, <highlight><bold>704</bold></highlight> being accessed thereafter supplies read data on the DQ bus and the memory controller <highlight><bold>708</bold></highlight> latches the read data in response to the RCLK the signal from the clock generator <highlight><bold>706</bold></highlight>. Each of the data bits on the DQ bus has a respective timing offset relative to the RCLK signal, with the timing offsets being determined during a read synchronization mode of operation. The respective timing offsets allow the memory controller <highlight><bold>708</bold></highlight> to successfully capture all read data bits supplied on the DQ bus during normal read operations. During the read synchronization mode of operation, the circuits <highlight><bold>703</bold></highlight>, <highlight><bold>705</bold></highlight> operate in an analogous manner to components of the read synchronization system <highlight><bold>400</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. Such operation will be well understood by those skilled in the art in view of the previous detailed description of the read synchronization system <highlight><bold>400</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, and thus, for the sake of brevity, will not be described in more detail. Briefly, for each data bit on the data bus DQ a phase command CMDPH is stored in corresponding phase command register <highlight><bold>434</bold></highlight>A-<highlight><bold>434</bold></highlight>P (see <cross-reference target="DRAWINGS">FIG. 5</cross-reference>) to define the timing offset between the data bit and the RCLK signal. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> It is to be understood that even though various embodiments and advantages of the present invention have been set forth in the foregoing description, the above disclosure is illustrative only, and changes may be made in detail, and yet remain within the broad principles of the invention. For example, many of the components described above may be implemented using either digital or analog circuitry, or a combination of both, and also, where appropriate, may be realized through software executing on suitable processing circuitry. Therefore, the present invention is to be limited only by the appended claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of transferring digital signal packets out of a packetized memory device on a data bus, each digital signal packet including at least one packet word including a plurality of digital signals that are applied to respective latches in the packetized memory device, the method comprising: 
<claim-text>placing the packetized memory device in a synchronization mode of operation; </claim-text>
<claim-text>generating a data clock signal responsive to a read clock signal and applying the data clock signal on a corresponding line of the data bus; </claim-text>
<claim-text>generating a plurality of internal clock signals read clock signal, each internal clock signal having a phase shift relative to the data clock signal; </claim-text>
<claim-text>storing for each digital signal a phase command in a corresponding storage circuit associated with the digital signal, the phase command having a value corresponding to one of the internal clock signals; </claim-text>
<claim-text>placing each digital signal on a corresponding data bus line responsive to the internal clock signal corresponding to the phase command stored in the associated storage circuit; </claim-text>
<claim-text>receiving a phase adjustment command corresponding to a particular digital signal that is being synchronized, the phase adjustment command containing adjustment information for the phase command associated with the digital signal; </claim-text>
<claim-text>adjusting the value of the phase command stored in the storage circuit associated with the digital signal being synchronized responsive to the phase adjustment command until the value of the phase command defines a timing offset between the digital signal and the data clock that allows and external device to successfully capture the digital signal responsive to the data clock signal; and </claim-text>
<claim-text>repeating the operations of placing each digital signal on a corresponding bus line to adjusting the value of the phase command signal for each digital signal in the packet word. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the values of the phase commands for all the digital signals are adjusted in parallel. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein adjusting the value of the phase command stored in the storage circuit comprises reading an initial value of the phase command from the storage circuit, incrementing or decrementing the values of the initial phase command response to the phase or adjustment command, to generate a new phase command, and storing the new phase command in the storage circuit. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein each storage circuit comprises a register. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein placing the packetized memory device in the synchronization mode comprises capturing a FLAG signal and generating a calibration signal when the FLAG signal has a predetermined binary value for two consecutive captures. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein adjusting the value of the phase command stored in the storage circuit associated with the digital signal being synchronized comprises: 
<claim-text>repetitively placing digital signals having expected values onto the corresponding data bus line; </claim-text>
<claim-text>evaluating the digital signal captured responsive to the data clock signal to determine if captured digital signal has the expected value; </claim-text>
<claim-text>identifying each phase command that caused the associated digital signal having the expected value to be captured; </claim-text>
<claim-text>selecting a phase command for each digital signal from one of the phases that caused the associated digital signal having the expected value to be captured; and </claim-text>
<claim-text>storing the selected phase command in the corresponding register. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference> wherein the operations of evaluating the captured digital signal to determine if the stored digital signal has the expected value through storing the selected phase command in the corresponding register are performed sequentially on each of the digital signals to sequentially select a phase command associated with each digital signal. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference> wherein evaluating the captured digital signal to determine if the digital signal has the expected value comprises: 
<claim-text>capturing the digital signal responsive to the data clock signal; </claim-text>
<claim-text>generating expected values for the digital signal responsive to the digital the values of the captured digital signal; </claim-text>
<claim-text>capturing the digital signal responsive to the data clock signal; and </claim-text>
<claim-text>determining that the digital signal was successfully captured when the values of the captured digital signal corresponds to the generated expected values for the digital signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A method of adaptively adjusting respective timing offsets of a plurality of digital signals relative to a clock signal being output along with the digital signals to enable a circuit receiving the digital signals successfully to each of the digital signals responsive to the clock signal, the method comprising: 
<claim-text>storing in a respective storage circuit associated with each digital signal a corresponding phase command, the phase command defining a particular timing offset between the corresponding digital signal and the clock signal; </claim-text>
<claim-text>outputting the clock signal; </claim-text>
<claim-text>outputting each digital signal having the timing offset defined by the corresponding phase command; </claim-text>
<claim-text>capturing the digital signals responsive to the clock signal; </claim-text>
<claim-text>evaluating the captured digital signals to determine if each digital signal was successfully captured; </claim-text>
<claim-text>generating a phase adjustment command to adjust the value of each phase command; </claim-text>
<claim-text>repeating the operations of outputting the clock signal through generating a phase adjustment command for a plurality of phase adjustment commands for each digital signal; </claim-text>
<claim-text>selecting for each digital signal a phase command that causes the digital signal to be successfully captured; and </claim-text>
<claim-text>storing in the storage circuit associated with each digital signal the corresponding selected phase command. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein the operations of outputting a clock signal through generating a phase adjustment command are performed in parallel on all the digital signals. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein generating a phase adjustment command to adjust the value of each phase command comprises reading an initial value of the phase command from the storage circuit, incrementing or decrementing the values of the initial phase command response to the phase adjustment command, to generate a new phase command, and storing the new phase command in the storage circuit. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein each storage circuit comprises a register. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein the clock signal corresponds to a data clock signal output from a packetized memory device and each digital signal corresponds to a data signal applied on a data bus of the packetized memory device. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> wherein outputting each digital signal having the timing offset defined by the corresponding phase command comprises outputting a repeating 15 bit pseudo-random bit sequence of &ldquo;111101011001000&rdquo; for each digital signal, with the timing offset of this sequence being defined by the phase command. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> wherein capturing the digital signals responsive to the clock signal comprises capturing the digital signals responsive to the rising and falling edges of the clock signal. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A read synchronization circuit that adaptively adjusts respective timing offsets of a plurality of digital signals applied on respective signal terminals and an external data clock signal to enable an external device to latch the digital signals responsive to the external data clock signal, the read synchronization circuit comprising: 
<claim-text>a plurality of latch circuits, each latch circuit including an input, an output coupled to a respective signal terminal, and a clock terminal, and each latch circuit storing a signal applied on the input and providing the stored signal on the signal terminal responsive to a clock signal applied on the clock terminal; </claim-text>
<claim-text>a plurality of phase command registers, each phase command register storing a phase command and each register being associated with at least one of the latch circuits; </claim-text>
<claim-text>a clock generation circuit coupled to latch circuits and the phase command registers, the clock generation circuit generating a plurality of internal clock signals and the external data clock signal responsive to a read clock signal, each internal clock signal and the external clock signal having a respective phase shift relative to the read clock signal, and the clock generation circuit selecting one of the internal clock signals for each latch circuit in response to the associated phase command and applying the selected internal clock signal to the clock terminal of the latch circuit to place digital signals on the corresponding signal terminal with a timing offset determined by the phase shift of the selected internal clock signal; and </claim-text>
<claim-text>a control circuit coupled to the clock generation circuit and the phase command registers, the control circuit operable in response to a synchronization command to apply synchronization digital signals on the inputs of the latch circuits and to adjust the respective timing offsets between the external data clock signal and the synchronization digital signals output by each latch circuit by adjusting the respective values of the phase commands, and storing final phase commands in each phase command register that allow the synchronization digital signals to be successfully captured responsive to the external data clock signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The read synchronization circuit of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> wherein the control circuit comprises: 
<claim-text>a read data pattern generator that generates the synchronization digital signals, each signal being a repeating pseudo-random bit sequence; </claim-text>
<claim-text>a command buffer and address capture circuit adapted to latch and output command-address signals applied on a command address bus; </claim-text>
<claim-text>a command decoder and sequencer coupled to the output of the command buffer and address capture circuit that generates a plurality of control signals responsive to the latched command-address signals, and generates a phase adjustment command word responsive to adjustment signals included in the latched command-address signals, the phase adjustment command word including information identifying a particular digital signal; and </claim-text>
<claim-text>an up/down phase counter-controller coupled to the command decoder and sequencer to receive the phase adjustment command word, and coupled to the phase command registers, the counter-controller adjusting the value of the phase command stored in the register associated with the identified digital signal responsive to the phase adjustment command word. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The read synchronization circuit of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> wherein the counter-controller adjusts the value of the phase command stored in each register by first reading a present value of the stored phase command, incrementing or decrementing the present value of the phase command responsive to the phase adjustment command to develop a new phase command word, and thereafter storing the new phase command in the register. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The read synchronization circuit of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> wherein the clock generation circuit comprises: 
<claim-text>a programmable delay clock generator that generates N internal clock signals responsive to the read clock signal; and </claim-text>
<claim-text>a plurality of multiplexers, each multiplexer having an output coupled to a respective clock terminal of a corresponding latch circuit, a plurality of selection inputs coupled to the associated phase command register to receive the stored phase command, and having N inputs coupled the programmable delay clock generator to receive the N internal clock signals, each multiplexer applying a selected one of the N internal clock signals to the clock terminal of the corresponding latch responsive to the phase command. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The read synchronization circuit of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein the programmable delay clock generator comprises a delay-locked loop circuit. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The read synchronization circuit of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> wherein each latch circuit comprises a data latch and a buffer. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. A memory device, comprising: 
<claim-text>at least one array of memory cells adapted to store data at a location determined by a row address and a column address; </claim-text>
<claim-text>a control circuit adapted to receive external control signals and operable in response to the external control signals to generate a plurality of internal control signals; </claim-text>
<claim-text>a row address circuit adapted to receive and decode the row address, and select a row of memory cells corresponding to the row address responsive to the internal control signals; </claim-text>
<claim-text>a column address circuit adapted to receive or apply data to at least one of the memory cells in the selected row corresponding to the column address responsive to the internal control signals; </claim-text>
<claim-text>a write data path circuit adapted to couple data between a data bus and the column address circuit responsive to the internal control signals; and </claim-text>
<claim-text>a read data path circuit adapted to couple data between the data bus and the column address circuit responsive to the internal control signals, the read data path circuit comprising a read synchronization circuit that adaptively adjusts respective timing offsets of a plurality of digital signals applied on respective signal terminals and an external data clock signal to enable an external device to latch the digital signals responsive to the external data clock signal, the read synchronization circuit comprising: </claim-text>
<claim-text>a plurality of latch circuits, each latch circuit including an input, an output coupled to a respective signal terminal, and a clock terminal, and each latch circuit storing a signal applied on the input and providing the stored signal on the signal terminal responsive to a clock signal applied on the clock terminal; </claim-text>
<claim-text>a plurality of phase command registers, each phase command register storing a phase command responsive to a control signal and each register being associated with at least one of the latch circuits; </claim-text>
<claim-text>a clock generation circuit coupled to latch circuits and the phase command registers, the clock generation circuit generating a plurality of internal clock signals and the external data clock signal responsive to a read clock signal, each internal clock signal and the external clock signal having a respective phase shift relative to the read clock signal, and the clock generation circuit selecting one of the internal clock signals for each latch circuit in response to the associated phase command and applying the selected internal clock signal to the clock terminal of the latch circuit to place digital signals on the corresponding signal terminal with a timing offset determined by the phase shift of the selected internal clock signal; and </claim-text>
<claim-text>a synchronization control circuit coupled to the clock generation circuit and the phase command registers, the control circuit operable in response to the initialization signals to apply synchronization digital signals on the inputs of the latch circuits and to adjust the respective timing offsets between the external data clock signal and the synchronization digital signals output by each latch circuit by adjusting the respective values of the phase commands, and storing final phase commands in each phase command register that allow the synchronization digital signals to be successfully captured responsive to the external data clock signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference> wherein the control circuit comprises: 
<claim-text>a read data pattern generator that generates the synchronization digital signals, each bit having a repeating 15 bit pseudo-random bit sequence for the synchronization signals; </claim-text>
<claim-text>a command buffer and address capture circuit adapted to latch and output command-address signals applied on a command address bus; </claim-text>
<claim-text>a command decoder and sequencer coupled to the output of the command buffer and address capture circuit that generates a plurality of control signals responsive to the latched command-address signals, and generates a phase adjustment command word responsive to adjustment signals included in the latched command-address signals, the phase adjustment command word including information identifying a particular digital signal; and </claim-text>
<claim-text>an up/down phase counter-controller coupled to the command decoder and sequencer to receive the phase adjustment command word, and coupled to the phase command registers, the counter-controller adjusting the value of the phase command stored in the register associated with the identified digital signal responsive to the phase adjustment command word. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference> wherein the counter-controller adjusts the value of the phase command stored in each register by first reading a present value of the stored phase command, incrementing or decrementing the present value of the phase command responsive to the phase adjustment command to develop a new phase command word, and thereafter storing the new phase command in the register. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference> wherein the clock generation circuit comprises: 
<claim-text>a programmable delay clock generator that generates N internal clock signals responsive to the read clock signal; and </claim-text>
<claim-text>a plurality of multiplexers, each multiplexer having an output coupled to a respective clock terminal of a corresponding latch circuit, a plurality of selection inputs coupled to the associated phase command register to receive the stored phase command, and having N inputs coupled the programmable delay clock generator to receive the N internal clock signals, each multiplexer applying a selected one of the N internal clock signals to the clock terminal of the corresponding latch responsive to the phase command. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference> wherein the programmable delay clock generator comprises a delay-locked loop circuit. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference> wherein each latch circuit comprises a data latch and a buffer. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference> wherein the memory device comprises a packetized dynamic random access memory device. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The memory device of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference> wherein the packetized dynamic random access memory device comprises an SLDRAM. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A memory system, comprising: 
<claim-text>a memory device, comprising, 
<claim-text>at least one array of memory cells adapted to store data at a location determined by a row address and a column address; </claim-text>
<claim-text>a control circuit adapted to receive external control signals and operable in response to the external control signals to generate a plurality of internal control signals; </claim-text>
<claim-text>a row address circuit adapted to receive and decode the row address, and select a row of memory cells corresponding to the row address responsive to the internal control signals; </claim-text>
<claim-text>a column address circuit adapted to receive or apply data to at least one of the memory cells in the selected row corresponding to the column address responsive to the internal control signals; </claim-text>
<claim-text>a write data path circuit adapted to couple data between a data bus and the column address circuit responsive to the internal control signals; and </claim-text>
<claim-text>a read data path circuit adapted to couple data between the data bus and the column address circuit responsive to the internal control signals, the read data path circuit comprising a read synchronization circuit that adaptively adjusts respective timing offsets of a plurality of digital signals applied on respective signal terminals and an external data clock signal to enable an external device to latch the digital signals responsive to the external data clock signal, the read synchronization circuit comprising: 
<claim-text>a plurality of latch circuits, each latch circuit including an input, an output coupled to a respective signal terminal, and a clock terminal, and each latch circuit storing a signal applied on the input and providing the stored signal on the signal terminal responsive to a clock signal applied on the clock terminal; </claim-text>
<claim-text>a plurality of phase command registers, each phase command register storing a phase command responsive to a control signal and each register being associated with at least one of the latch circuits; </claim-text>
<claim-text>a clock generation circuit coupled to latch circuits and the phase command registers, the clock generation circuit generating a plurality of internal clock signals and the external data clock signal responsive to a read clock signal, each internal clock signal and the external clock signal having a respective phase shift relative to the read clock signal, and the clock generation circuit selecting one of the internal clock signals for each latch circuit in response to the associated phase command and applying the selected internal clock signal to the clock terminal of the latch circuit to place digital signals on the corresponding signal terminal with a timing offset determined by the phase shift of the selected internal clock signal; and </claim-text>
<claim-text>a synchronization control circuit coupled to the clock generation circuit and the phase command registers, the control circuit operable in response to the internal control signals to apply synchronization digital signals on the inputs of the latch circuits and to adjust the respective timing offsets between the external data clock signal and the synchronization digital signals output by each latch circuit by adjusting the respective values of the phase commands, and storing final phase commands in each phase command register that allow the synchronization digital signals to be successfully captured responsive to the external data clock signal; and </claim-text>
</claim-text>
</claim-text>
<claim-text>a memory controller coupled to the memory device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The memory system of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference> wherein the clock generation circuit comprises: 
<claim-text>a programmable delay clock generator that generates N internal clock signals responsive to the read clock signal; and </claim-text>
<claim-text>a plurality of multiplexers, each multiplexer having an output coupled to a respective clock terminal of a corresponding latch circuit, a plurality of selection inputs coupled to the associated phase command register to receive the stored phase command, and having N inputs coupled the programmable delay clock generator to receive the N internal clock signals, each multiplexer applying a selected one of the N internal clock signals to the clock terminal of the corresponding latch responsive to the phase command. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The memory system of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the programmable delay clock generator comprises a delay-locked loop circuit. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The memory system of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference> wherein each latch circuit comprises a data latch and a buffer. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The memory system of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference> wherein the memory device comprises a packetized dynamic random access memory device. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The memory system of <dependent-claim-reference depends_on="CLM-00033">claim 34</dependent-claim-reference> wherein the packetized dynamic random access memory device comprises an SLDRAM. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The memory system of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference> wherein the memory device comprises a double-data rate memory device and the external data clock signal comprises a data strobe signal DQS. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. An integrated circuit adapted to receive a plurality of input signals and generate a plurality of output signals on respective, externally accessible terminals, comprising: 
<claim-text>a circuit adapted to receive a plurality of input signals applied to respective other of the terminals and to generate a plurality of output signals on respective other of the terminals; </claim-text>
<claim-text>a read synchronization circuit that adaptively adjusts respective timing offsets of a plurality of digital signals applied on respective signal terminals and an external data clock signal to enable an external device to latch the digital signals responsive to the external data clock signal, the read synchronization circuit comprising: </claim-text>
<claim-text>a plurality of latch circuits, each latch circuit including an input, an output coupled to a respective signal terminal, and a clock terminal, and each latch circuit storing a signal applied on the input and providing the stored signal on the signal terminal responsive to a clock signal applied on the clock terminal; </claim-text>
<claim-text>a plurality of phase command registers, each phase command register storing a phase command responsive to a control signal and each register being associated with at least one of the latch circuits; </claim-text>
<claim-text>a clock generation circuit coupled to latch circuits and the phase command registers, the clock generation circuit generating a plurality of internal clock signals and the external data clock signal responsive to a read clock signal, each internal clock signal and the external clock signal having a respective phase shift relative to the read clock signal, and the clock generation circuit selecting one of the internal clock signals for each latch circuit in response to the associated phase command and applying the selected internal clock signal to the clock terminal of the latch circuit to place digital signals on the corresponding signal terminal with a timing offset determined by the phase shift of the selected internal clock signal; and </claim-text>
<claim-text>a control circuit coupled to the clock generation circuit and the phase command registers, the control circuit operable in response to a synchronization command to apply synchronization digital signals on the inputs of the latch circuits and to adjust the respective timing offsets between the external data clock signal and the synchronization digital signals output by each latch circuit by adjusting the respective values of the phase commands, and storing final phase commands in each phase command register that allow the synchronization digital signals to be successfully captured responsive to the external data clock signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The integrated circuit of <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference> wherein the control circuit comprises: 
<claim-text>a read data pattern generator that generates the synchronization digital signals, each bit having a repeating 15 bit pseudo-random bit sequence for the synchronization digital signals; </claim-text>
<claim-text>a command buffer and address capture circuit adapted to latch and output command-address signals applied on a command address bus; </claim-text>
<claim-text>a command decoder and sequencer coupled to the output of the command buffer and address capture circuit that generates a plurality of control signals responsive to the latched command-address signals, and generates a phase adjustment command word responsive to adjustment signals included in the latched command-address signals, the phase adjustment command word including information identifying a particular digital signal; and </claim-text>
<claim-text>an up/down phase counter-controller coupled to the command decoder and sequencer to receive the phase adjustment command word, and coupled to the phase command registers, the counter-controller adjusting the value of the phase command stored in the register associated with the identified digital signal responsive to the phase adjustment command word. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The integrated circuit of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference> wherein the counter-controller adjusts the value of the phase command stored in each register by first reading a present value of the stored phase command, incrementing or decrementing the present value of the phase command responsive to the phase adjustment command to develop a new phase command word, and thereafter storing the new phase command in the register. </claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The integrated circuit of <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference> wherein the clock generation circuit comprises: 
<claim-text>a programmable delay clock generator that generates N internal clock signals responsive to the read clock signal; and </claim-text>
<claim-text>a plurality of multiplexers, each multiplexer having an output coupled to a respective clock terminal of a corresponding latch circuit, a plurality of selection inputs coupled to the associated phase command register to receive the stored phase command, and having N inputs coupled the programmable delay clock generator to receive the N internal clock signals, each multiplexer applying a selected one of the N internal clock signals to the clock terminal of the corresponding latch responsive to the phase command. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The integrated circuit of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference> wherein the programmable delay clock generator comprises a delay-locked loop circuit. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The integrated circuit of <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference> wherein each latch circuit comprises a data latch and a buffer. </claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. A computer system, comprising: 
<claim-text>a processor having a processor bus; </claim-text>
<claim-text>an input device coupled to the processor through the processor bus adapted to allow data to be entered into the computer system; </claim-text>
<claim-text>an output device coupled to the processor through the processor bus adapted to allow data to be output from the computer system; and </claim-text>
<claim-text>a memory device coupled to the processor, comprising, 
<claim-text>at least one array of memory cells adapted to store data at a location determined by a row address and a column address; </claim-text>
<claim-text>a control circuit adapted to receive external control signals and operable in response to the external control signals to generate a plurality of internal control signals; </claim-text>
<claim-text>a row address circuit adapted to receive and decode the row address, and select a row of memory cells corresponding to the row address responsive to the internal control signals; </claim-text>
<claim-text>a column address circuit adapted to receive or apply data to at least one of the memory cells in the selected row corresponding to the column address responsive to the internal control signals; </claim-text>
<claim-text>a write data path circuit adapted to couple data between a data bus and the column address circuit responsive to the internal control signals; and </claim-text>
<claim-text>a read data path circuit adapted to couple data between the data bus and the column address circuit responsive to the internal control signals, the read data path circuit comprising a read synchronization circuit that adaptively adjusts respective timing offsets of a plurality of digital signals applied on respective signal terminals and an external data clock signal to enable an external device to latch the digital signals responsive to the external data clock signal, the read synchronization circuit comprising: 
<claim-text>a plurality of latch circuits, each latch circuit including an input, an output coupled to a respective signal terminal, and a clock terminal, and each latch circuit storing a signal applied on the input and providing the stored signal on the signal terminal responsive to a clock signal applied on the clock terminal; </claim-text>
<claim-text>a plurality of phase command registers, each phase command register storing a phase command responsive to a control signal and each register being associated with at least one of the latch circuits; </claim-text>
<claim-text>a clock generation circuit coupled to latch circuits and the phase command registers, the clock generation circuit generating a plurality of internal clock signals and the external data clock signal responsive to a read clock signal, each internal clock signal and the external clock signal having a respective phase shift relative to the read clock signal, and the clock generation circuit selecting one of the internal clock signals for each latch circuit in response to the associated phase command and applying the selected internal clock signal to the clock terminal of the latch circuit to place digital signals on the corresponding signal terminal with a timing offset determined by the phase shift of the selected internal clock signal; and </claim-text>
<claim-text>a synchronization control circuit coupled to the clock generation circuit and the phase command registers, the control circuit operable in response to the internal control signals to apply synchronization digital signals on the inputs of the latch circuits and to adjust the respective timing offsets between the external data clock signal and the synchronization digital signals output by each latch circuit by adjusting the respective values of the phase commands, and storing final phase commands in each phase command register that allow the synchronization digital signals to be successfully captured responsive to the external data clock signal. </claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00044">claim 43</dependent-claim-reference> wherein the clock generation circuit comprises: 
<claim-text>a programmable delay clock generator that generates N internal clock signals responsive to the read clock signal; and </claim-text>
<claim-text>a plurality of multiplexers, each multiplexer having an output coupled to a respective clock terminal of a corresponding latch circuit, a plurality of selection inputs coupled to the associated phase command register to receive the stored phase command, and having N inputs coupled the programmable delay clock generator to receive the N internal clock signals, each multiplexer applying a selected one of the N internal clock signals to the clock terminal of the corresponding latch responsive to the phase command. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00044">claim 44</dependent-claim-reference> wherein the programmable delay clock generator comprises a delay-locked loop circuit. </claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00044">claim 43</dependent-claim-reference> wherein each latch circuit comprises a data latch and a buffer. </claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00044">claim 43</dependent-claim-reference> wherein the memory device comprises a packetized dynamic random access memory device. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00044">claim 47</dependent-claim-reference> wherein the packetized dynamic random access memory device comprises an SLDRAM. </claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00044">claim 43</dependent-claim-reference> wherein the memory device comprises a double-data rate memory device and the external data clock signal comprises a data strobe signal DQS. </claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. A read synchronization circuit that adaptively adjusts respective timing offsets of a plurality of digital signals applied on respective signal terminals and an external data clock signal to enable an external device to latch the digital signals responsive to the external data clock signal, the read synchronization circuit comprising: 
<claim-text>a plurality of latch circuits, each latch circuit including an input, an output coupled to a respective signal terminal, and a clock terminal, and each latch circuit storing a signal applied on the input and providing the stored signal on the signal terminal responsive to a clock signal applied on the clock terminal; </claim-text>
<claim-text>a plurality of phase command registers, each phase command register storing a phase command and each register being associated with one of the latch circuits; </claim-text>
<claim-text>a programmable delay clock generator that develops N internal clock signals responsive to the read clock signal; </claim-text>
<claim-text>a plurality of multiplexers, each multiplexer having an output coupled to a respective clock terminal of a corresponding latch circuit, a plurality of selection inputs coupled to an associated phase command register to receive the stored phase command, and N inputs coupled to the generator to receive the N internal clocks signals, respectively, the multiplexer applying a selected internal clock signal on the output to clock the corresponding latch circuit in response to the phase command; </claim-text>
<claim-text>a read data pattern generator coupled to the inputs of the latch circuits, the generator applying a synchronization signal to each input; and </claim-text>
<claim-text>an up/down phase counter-controller coupled to the read data pattern generator and the phase command registers, the counter-controller operable to adjust the values of the phase commands stored in the registers in response to received phase adjustment command words to thereby adjust the respective timing offsets between the external data clock signal and the synchronization signal being output by the latch circuits, and the counter-controller storing final phase commands in each phase command register that allow the synchronization digital signals to be successfully captured responsive to the external data clock signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. The read synchronization circuit of <dependent-claim-reference depends_on="CLM-00055">claim 50</dependent-claim-reference> wherein the counter-controller adjusts the value of the phase command stored in each register by first reading a present value of the stored phase command, incrementing or decrementing the present value of the phase command responsive to the phase adjustment command to develop a new phase command word, and thereafter storing the new phase command in the register. </claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. The read synchronization circuit of <dependent-claim-reference depends_on="CLM-00055">claim 50</dependent-claim-reference> wherein the programmable delay clock generator comprises a delay-locked loop circuit. </claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. The read synchronization circuit of <dependent-claim-reference depends_on="CLM-00055">claim 50</dependent-claim-reference> wherein each latch circuit comprises a data latch and a buffer. </claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. A read synchronization circuit that adaptively adjusts respective timing offsets of a plurality of digital signals applied on respective signal terminals and an external data clock signal to enable an external device to latch the digital signals responsive to the external data clock signal, the read synchronization circuit comprising: 
<claim-text>a plurality of data storage means for storing respective signals and providing the stored signals on respective signal terminals, each data storage means storing the signal applied on an input and providing the stored signal on the corresponding signal terminal responsive to a clock signal; </claim-text>
<claim-text>a plurality of phase storage means for storing respective phase commands, each phase storage means being associated with one of the data storage means; </claim-text>
<claim-text>a clock generation means coupled to the data storage means and the phase storage means for generating a plurality of internal clock signals and the external data clock signal responsive to a read clock signal, each internal clock signal and the external clock signal having a respective phase shift relative to the read clock signal, and the clock generation means including selection means for selecting one of the internal clock signals for each data storage means in response to the associated phase command and applying the selected internal clock signal as the clock signal to the data storage means to place digital signals on the corresponding signal terminal with a timing offset determined by the phase shift of the selected internal clock signal; and </claim-text>
<claim-text>a control means coupled to the clock generation means and the phase storage means for receiving a synchronization command and, in response to the synchronization command, applying a respective synchronization digital signals to each storage means and adjusting the respective timing offsets between the external data clock signal and each of the synchronization digital signals being provided on the signal terminals by each storage means by adjusting the respective values of the phase commands stored in the phase storage means, and storing final phase commands in each phase storage means that allow the synchronization digital signals to be successfully captured responsive to the external data clock signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00055">
<claim-text><highlight><bold>55</bold></highlight>. The read synchronization circuit of <dependent-claim-reference depends_on="CLM-00055">claim 54</dependent-claim-reference> wherein the control means comprises: 
<claim-text>a data pattern generation means for generating the synchronization digital signals, each signal being a repeating pseudo-random bit sequence; </claim-text>
<claim-text>a command buffering and address capturing means for latching command-address signals applied on a command address bus; </claim-text>
<claim-text>a command decoding and sequencing means coupled to the command buffering and address capturing means for generating a plurality of control signals responsive to the latched command-address signals, and generating a phase adjustment command word responsive to adjustment signals included in the latched command-address signals, the phase adjustment command word including information identifying a particular digital signal; and </claim-text>
<claim-text>a phase counter-controller means coupled to the command decoding and sequencing means to receive the phase adjustment command word and coupled to the phase storage means, the counter-controller means adjusting the value of the phase command stored in the phase storage means associated with the identified digital signal responsive to the phase adjustment command word. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. The read synchronization circuit of <dependent-claim-reference depends_on="CLM-00055">claim 55</dependent-claim-reference> wherein the counter-controller means adjusts the value of the phase command stored in each phase storage means by first reading a present value of the stored phase command, incrementing or decrementing the present value of the phase command responsive to the phase adjustment command to develop a new phase command word, and thereafter storing the new phase command in the phase storage means. </claim-text>
</claim>
<claim id="CLM-00057">
<claim-text><highlight><bold>57</bold></highlight>. The read synchronization circuit of <dependent-claim-reference depends_on="CLM-00055">claim 54</dependent-claim-reference> wherein the clock generation means comprises: 
<claim-text>a programmable delay clock generation means for generating N internal clock signals responsive to the read clock signal; and </claim-text>
<claim-text>a plurality of multiplexing means, each multiplexing means having an output coupled to a corresponding data storage means to apply the clock signal to the storage means and including a plurality of selection inputs coupled to the associated phase storage means to receive the stored phase command, and having N inputs coupled the programmable delay clock generation means to receive the N internal clock signals, each multiplexing means applying a selected one of the N internal clock signals to the clock terminal of the corresponding data storage means responsive to the phase command. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00058">
<claim-text><highlight><bold>58</bold></highlight>. The read synchronization circuit of <dependent-claim-reference depends_on="CLM-00055">claim 57</dependent-claim-reference> wherein the programmable delay clock generation means comprises a delay-locked loop means. </claim-text>
</claim>
<claim id="CLM-00059">
<claim-text><highlight><bold>59</bold></highlight>. The read synchronization circuit of <dependent-claim-reference depends_on="CLM-00055">claim 54</dependent-claim-reference> wherein each data storage means comprises a latching means for storing data and a buffer means coupled to the latching means for providing the stored data on the corresponding signal terminal. </claim-text>
</claim>
<claim id="CLM-00060">
<claim-text><highlight><bold>60</bold></highlight>. A memory system, comprising: 
<claim-text>a system clock generator that develops a system read data clock signal; </claim-text>
<claim-text>a memory device coupled to the clock generator to receive the system read data clock signal, comprising, 
<claim-text>at least one array of memory cells adapted to store data at a location determined by a row address and a column address; </claim-text>
<claim-text>a control circuit adapted to receive external control signals and operable in response to the external control signals to generate a plurality of internal control signals; </claim-text>
<claim-text>a row address circuit adapted to receive and decode the row address, and select a row of memory cells corresponding to the row address responsive to the internal control signals; </claim-text>
<claim-text>a column address circuit adapted to receive or apply data to at least one of the memory cells in the selected row corresponding to the column address responsive to the internal control signals; </claim-text>
<claim-text>a write data path circuit adapted to couple data between a data bus and the column address circuit responsive to the internal control signals; and </claim-text>
<claim-text>a read data path circuit adapted to couple data between the data bus and the column address circuit responsive to the internal control signals, the read data path circuit comprising a read synchronization circuit that adaptively adjusts respective timing offsets of a plurality of digital signals applied on respective signal terminals and the system read data clock signal to enable an external device to latch the digital signals responsive to the system read data clock signal, the read synchronization circuit comprising: 
<claim-text>a plurality of latch circuits, each latch circuit including an input, an output coupled to a respective signal terminal, and a clock terminal, and each latch circuit storing a signal applied on the input and providing the stored signal on the signal terminal responsive to a clock signal applied on the clock terminal; </claim-text>
<claim-text>a plurality of phase command registers, each phase command register storing a phase command responsive to a control signal and each register being associated with at least one of the latch circuits; </claim-text>
<claim-text>an internal clock generation circuit coupled to latch circuits and the phase command registers, the internal clock generation circuit generating a plurality of internal clock signals responsive to the system read data clock signal, each internal clock signal and the system read data clock signal having a respective phase shift relative to the system read data clock signal, and the internal clock generation circuit selecting one of the internal clock signals for each latch circuit in response to the associated phase command and applying the selected internal clock signal to the clock terminal of the latch circuit to place digital signals on the corresponding signal terminal with a timing offset determined by the phase shift of the selected internal clock signal; and </claim-text>
<claim-text>a synchronization control circuit coupled to the internal clock generation circuit and the phase command registers, the control circuit operable in response to the internal control signals to apply synchronization digital signals on the inputs of the latch circuits and to adjust the respective timing offsets between the system read data clock signal and the synchronization digital signals output by each latch circuit by adjusting the respective values of the phase commands, and storing final phase commands in each phase command register that allow the synchronization digital signals to be successfully captured responsive to the system read data clock signal; and </claim-text>
</claim-text>
</claim-text>
<claim-text>a memory controller coupled to the memory device and coupled to the system read clock generator to receive the system read data clock signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00061">
<claim-text><highlight><bold>61</bold></highlight>. The memory system of <dependent-claim-reference depends_on="CLM-00066">claim 60</dependent-claim-reference> wherein the clock generation circuit comprises: 
<claim-text>a programmable delay clock generator that generates N internal clock signals responsive to the read clock signal; and </claim-text>
<claim-text>a plurality of multiplexers, each multiplexer having an output coupled to a respective clock terminal of a corresponding latch circuit, a plurality of selection inputs coupled to the associated phase command register to receive the stored phase command, and having N inputs coupled the programmable delay clock generator to receive the N internal clock signals, each multiplexer applying a selected one of the N internal clock signals to the clock terminal of the corresponding latch responsive to the phase command. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00062">
<claim-text><highlight><bold>62</bold></highlight>. The memory system of <dependent-claim-reference depends_on="CLM-00066">claim 61</dependent-claim-reference> wherein the programmable delay clock generator comprises a delay-locked loop circuit. </claim-text>
</claim>
<claim id="CLM-00063">
<claim-text><highlight><bold>63</bold></highlight>. The memory system of <dependent-claim-reference depends_on="CLM-00066">claim 60</dependent-claim-reference> wherein each latch circuit comprises a data latch and a buffer. </claim-text>
</claim>
<claim id="CLM-00064">
<claim-text><highlight><bold>64</bold></highlight>. The memory system of <dependent-claim-reference depends_on="CLM-00066">claim 60</dependent-claim-reference> wherein the memory device comprises a packetized dynamic random access memory device. </claim-text>
</claim>
<claim id="CLM-00065">
<claim-text><highlight><bold>65</bold></highlight>. The memory system of <dependent-claim-reference depends_on="CLM-00066">claim 64</dependent-claim-reference> wherein the packetized dynamic random access memory device comprises an SLDRAM. </claim-text>
</claim>
<claim id="CLM-00066">
<claim-text><highlight><bold>66</bold></highlight>. The memory system of <dependent-claim-reference depends_on="CLM-00066">claim 60</dependent-claim-reference> wherein the memory device comprises a double-data rate memory device and the external data clock signal comprises a data strobe signal DQS.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>5</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005250A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005250A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005250A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005250A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005250A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005250A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005250A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005250A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
