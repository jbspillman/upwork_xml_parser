<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030001906A1-20030102-D00000.TIF SYSTEM "US20030001906A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030001906A1-20030102-D00001.TIF SYSTEM "US20030001906A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030001906A1-20030102-D00002.TIF SYSTEM "US20030001906A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030001906A1-20030102-D00003.TIF SYSTEM "US20030001906A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030001906A1-20030102-D00004.TIF SYSTEM "US20030001906A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030001906A1-20030102-D00005.TIF SYSTEM "US20030001906A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030001906A1-20030102-D00006.TIF SYSTEM "US20030001906A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030001906A1-20030102-D00007.TIF SYSTEM "US20030001906A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030001906A1-20030102-D00008.TIF SYSTEM "US20030001906A1-20030102-D00008.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030001906</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896072</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010628</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F003/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>345</class>
<subclass>849000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>345</class>
<subclass>848000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Moving an object on a drag plane in a virtual three-dimensional space</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>John</given-name>
<middle-name>J.</middle-name>
<family-name>Light</family-name>
</name>
<residence>
<residence-us>
<city>Beaverton</city>
<state>OR</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>John</given-name>
<middle-name>D.</middle-name>
<family-name>Miller</family-name>
</name>
<residence>
<residence-us>
<city>Portland</city>
<state>OR</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Michael</given-name>
<middle-name>D.</middle-name>
<family-name>Smith</family-name>
</name>
<residence>
<residence-us>
<city>Hillsboro</city>
<state>OR</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Sunil</given-name>
<family-name>Kasturi</family-name>
</name>
<residence>
<residence-us>
<city>Hillsboro</city>
<state>OR</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>FISH &amp; RICHARDSON, PC</name-1>
<name-2></name-2>
<address>
<address-1>4350 LA JOLLA VILLAGE DRIVE</address-1>
<address-2>SUITE 500</address-2>
<city>SAN DIEGO</city>
<state>CA</state>
<postalcode>92122</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method of moving an object on a drag plane in a virtual three-dimensional (3D) space, includes selecting the object using a cursor, moving the cursor to a location, creating a reference plane, projecting movement of the cursor to the location to an interim point on the reference plane, projecting the interim point onto the drag plane, and displaying the object at the location on the drag plane. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">TECHNICAL FIELD </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This invention relates to moving an object on a drag plane in a virtual three-dimensional (3D) space. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> In a two-dimensional (2D) space, an object is moved by selecting the object using an input/output (I/O) interface such as a mouse. A mouse button is depressed with the cursor on the object and the object is &ldquo;grabbed.&rdquo; By moving the mouse, the object is &ldquo;dragged&rdquo; to a desired location in 2D space while the cursor moves with the object. After releasing the mouse button, the object is positioned at the desired location.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a screenshot of a three-dimensional (3D) scene. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a side view of a virtual 3D scene. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a side view of a virtual 3D scene depicting a drag angle. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flowchart of a process for moving an object. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a side view of a virtual 3D scene depicting a drag plane and a reference plane. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a side view of a virtual 3D scene showing interim movement of an object on a reference plane. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a side view of a virtual 3D scene showing a projection of a cursor onto a drag plane. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a block diagram of a computer system on which the process of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> may be implemented.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a screenshot of a 3D space. A 3D object <highlight><bold>2</bold></highlight> can be moved anywhere in the 3D space along drag plane <highlight><bold>2</bold></highlight><highlight><italic>a</italic></highlight>. <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows a graphical representation of the virtual 3D space with object <highlight><bold>2</bold></highlight>. A virtual camera <highlight><bold>20</bold></highlight> represents the perspective of a user viewing the scene. A top portion <highlight><bold>21</bold></highlight> of camera <highlight><bold>20</bold></highlight> indicates the orientation of the scene. Object <highlight><bold>2</bold></highlight> may be moved by the user to any location on a drag plane <highlight><bold>35</bold></highlight>, which is parallel to a floor <highlight><bold>50</bold></highlight>. Though this description focuses on moving object <highlight><bold>2</bold></highlight> in a plane parallel to floor <highlight><bold>50</bold></highlight>, drag plane <highlight><bold>35</bold></highlight> can be positioned anywhere the user desires to move object <highlight><bold>2</bold></highlight>. A line of sight <highlight><bold>30</bold></highlight> is a line from camera <highlight><bold>20</bold></highlight> to object <highlight><bold>2</bold></highlight> that forms a first angle <highlight><bold>5</bold></highlight> with drag plane <highlight><bold>35</bold></highlight>. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The user selects object <highlight><bold>2</bold></highlight> by pressing a mouse button while the cursor is on object <highlight><bold>2</bold></highlight>. With the mouse button depressed, the user drags the cursor and object <highlight><bold>2</bold></highlight> towards a desired location. The user releases the mouse button at the final location. The movements of object <highlight><bold>2</bold></highlight> correspond to movements of the mouse. Therefore, from the perspective of camera <highlight><bold>20</bold></highlight>, moving the mouse forward moves object <highlight><bold>2</bold></highlight> to the reader&apos;s right in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, moving the mouse down moves object <highlight><bold>2</bold></highlight> to the reader&apos;s left, moving the mouse to the right moves object <highlight><bold>2</bold></highlight> out of the page towards the reader, and moving the mouse to the left moves object <highlight><bold>2</bold></highlight> into the page away from the reader. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> When first angle <highlight><bold>5</bold></highlight> is orthogonal, mouse-to-object movements are proportional from the user&apos;s perspective. That is, moving the mouse left, right, up or down has the same perceived change on a user&apos;s display. However, as first angle <highlight><bold>5</bold></highlight> decreases, mouse-to-object movements are no longer proportional. In <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, first angle <highlight><bold>5</bold></highlight> is reduced to an acute angle relative to drag plane <highlight><bold>35</bold></highlight>. Therefore, moving object <highlight><bold>2</bold></highlight> using 2D techniques is not effective. For example, moving object <highlight><bold>2</bold></highlight> while object <highlight><bold>2</bold></highlight> is far from virtual camera <highlight><bold>20</bold></highlight> will result in large changes in Cartesian X-Y-Z distances for small changes in mouse movements. In other words, an object that is far into the distance in the 3D scene will move the same distance in 2D space as a closer object, but since the object is really further away in 3D space it moves a greater distance. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> When first angle <highlight><bold>5</bold></highlight> is equal to zero degrees (camera <highlight><bold>20</bold></highlight> is on drag plane <highlight><bold>35</bold></highlight>), moving a mouse forward or backward does not move object <highlight><bold>2</bold></highlight> at all because the cursor remains at the same position whereas left to right mouse movements move object <highlight><bold>2</bold></highlight>. Stated another way, moving the mouse forward and backward to move the cursor into the screen and out of screen, respectively, does not change the position of the cursor in the 2D space. If camera <highlight><bold>20</bold></highlight> is below object <highlight><bold>35</bold></highlight>, first angle <highlight><bold>5</bold></highlight> is negative. Moving the mouse forward moves object <highlight><bold>2</bold></highlight> backwards from the user&apos;s perspective and moving the mouse backwards moves object <highlight><bold>2</bold></highlight> forwards from the user&apos;s perspective. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 4, a</cross-reference> process <highlight><bold>60</bold></highlight> is shown for moving object <highlight><bold>2</bold></highlight> in a virtual 3D space using a 2D I/O interface. Briefly, process <highlight><bold>60</bold></highlight> starts with selecting object <highlight><bold>2</bold></highlight> and moving a cursor to a desired location. Referring to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, process <highlight><bold>60</bold></highlight>, moves object <highlight><bold>2</bold></highlight> to the desired location through the use of a reference plane <highlight><bold>40</bold></highlight> by projecting cursor movements onto reference plane <highlight><bold>40</bold></highlight> prior to projecting object <highlight><bold>2</bold></highlight> onto drag plane <highlight><bold>35</bold></highlight>. In other words, object <highlight><bold>2</bold></highlight> is moved to the desired location by projecting the cursor onto reference plane <highlight><bold>40</bold></highlight> and then folding reference plane <highlight><bold>40</bold></highlight> onto drag plane <highlight><bold>35</bold></highlight> and projecting object <highlight><bold>2</bold></highlight> at a point where the cursor is on drag plane <highlight><bold>35</bold></highlight>. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> In more detail, process <highlight><bold>60</bold></highlight> selects (<highlight><bold>61</bold></highlight>) object <highlight><bold>2</bold></highlight>. To do this, the user moves the cursor on top of object <highlight><bold>2</bold></highlight> and depresses a mouse button. In this embodiment, the cursor is hidden from the user&apos;s view after object <highlight><bold>2</bold></highlight> is selected for movement. Once movement begins, object <highlight><bold>2</bold></highlight> becomes a 3D cursor. In other words, without the regular cursor in view, movement of object <highlight><bold>2</bold></highlight> gives the user the visual cue to place object <highlight><bold>2</bold></highlight> where the user desires. If the cursor were visible, it would zigzag across the user&apos;s screen causing confusion because it would not have a logical relationship to the mouse movements. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Process <highlight><bold>60</bold></highlight> moves (<highlight><bold>62</bold></highlight>) the cursor to the desired location. Movement of the cursor, though invisible to the user, is shown on display <highlight><bold>9</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 6</cross-reference>). The original position of the cursor is at a point <highlight><bold>7</bold></highlight>. The new position is at a point <highlight><bold>8</bold></highlight>. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Process <highlight><bold>60</bold></highlight> creates (<highlight><bold>63</bold></highlight>) reference plane <highlight><bold>40</bold></highlight> by determining a drag angle <highlight><bold>10</bold></highlight>. Drag angle <highlight><bold>10</bold></highlight> is equal to the larger of first angle <highlight><bold>5</bold></highlight> and a predetermined minimum angle. In this embodiment, the predetermined minimum angle is 30 degrees; however, other angles may be used. Once drag angle <highlight><bold>10</bold></highlight> is determined, reference plane <highlight><bold>40</bold></highlight> is created such that it extends through object <highlight><bold>2</bold></highlight>. Therefore, the creation of reference plane <highlight><bold>40</bold></highlight> is dependent on the position of camera <highlight><bold>20</bold></highlight>, object <highlight><bold>2</bold></highlight>, and drag angle <highlight><bold>35</bold></highlight>. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, process <highlight><bold>60</bold></highlight> projects (<highlight><bold>64</bold></highlight>) movement of the cursor at point <highlight><bold>8</bold></highlight> by extending a line <highlight><bold>31</bold></highlight> from camera <highlight><bold>20</bold></highlight> through point <highlight><bold>8</bold></highlight> to an interim point <highlight><bold>11</bold></highlight>. Point <highlight><bold>11</bold></highlight> is located at the intersection of reference plane <highlight><bold>40</bold></highlight> and line <highlight><bold>31</bold></highlight>. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, process <highlight><bold>60</bold></highlight> projects (<highlight><bold>65</bold></highlight>) the cursor from interim point <highlight><bold>11</bold></highlight> onto drag plane <highlight><bold>35</bold></highlight>. This may be accomplished in several ways. One way is to calculate the magnitude of a vector from an original object position <highlight><bold>12</bold></highlight> to interim point <highlight><bold>11</bold></highlight> and applying that magnitude along drag plane <highlight><bold>35</bold></highlight> in a direction that includes a plane that has original object position <highlight><bold>12</bold></highlight>, interim point <highlight><bold>11</bold></highlight> and camera <highlight><bold>20</bold></highlight>. In <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the plane that includes all three points would be the plane of the paper. Therefore, the vector extends on the page to a projected cursor point <highlight><bold>13</bold></highlight>. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> A second way is to rotate the modified drag plane until a fold angle <highlight><bold>25</bold></highlight> is zero and projected cursor point <highlight><bold>13</bold></highlight> rests on drag plane <highlight><bold>35</bold></highlight>. Fold angle <highlight><bold>25</bold></highlight> is the angle between reference plane <highlight><bold>40</bold></highlight> and drag plane <highlight><bold>35</bold></highlight>. Process <highlight><bold>60</bold></highlight> displays (<highlight><bold>66</bold></highlight>) object <highlight><bold>2</bold></highlight> at the point <highlight><bold>13</bold></highlight> where the cursor is projected onto drag plane <highlight><bold>35</bold></highlight>. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Before the user release the mouse button and as object <highlight><bold>2</bold></highlight> is moved from one location on display <highlight><bold>9</bold></highlight> to another location on display <highlight><bold>9</bold></highlight>, process <highlight><bold>60</bold></highlight> may be reiterated numerous times before object <highlight><bold>2</bold></highlight> reaches its final location. A reference plane may be recalculated for changing camera <highlight><bold>20</bold></highlight>, object <highlight><bold>2</bold></highlight>, and drag plane <highlight><bold>35</bold></highlight> positions. After each translation, object <highlight><bold>2</bold></highlight> is projected onto drag plane <highlight><bold>35</bold></highlight>. Therefore, to the user moving the 3D object across a screen, the movement seems like a fluid and uninterrupted process. When the user releases the mouse button, the cursor is displayed at the final location of object <highlight><bold>2</bold></highlight> and object <highlight><bold>2</bold></highlight> no longer functions as a 3d cursor. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows a computer <highlight><bold>30</bold></highlight> for moving objects using process <highlight><bold>60</bold></highlight>. Computer <highlight><bold>30</bold></highlight> includes a processor <highlight><bold>33</bold></highlight>, a memory <highlight><bold>39</bold></highlight>, a storage medium <highlight><bold>41</bold></highlight> (e.g., hard disk), and a 3D graphics processor <highlight><bold>41</bold></highlight> for processing data in the virtual 3D space of FIGS. <highlight><bold>1</bold></highlight> to <highlight><bold>3</bold></highlight> and <highlight><bold>5</bold></highlight> to <highlight><bold>7</bold></highlight>. Storage medium <highlight><bold>41</bold></highlight> stores operating system <highlight><bold>43</bold></highlight>, 3D data <highlight><bold>44</bold></highlight> which defines the 3D space, and computer instructions <highlight><bold>42</bold></highlight> which are executed by processor <highlight><bold>33</bold></highlight> out of memory <highlight><bold>39</bold></highlight> to perform process <highlight><bold>60</bold></highlight>. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Process <highlight><bold>60</bold></highlight> is not limited to use with the hardware and software of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>; it may find applicability in any computing or processing environment and with any type of machine that is capable of running a computer program. Process <highlight><bold>60</bold></highlight> may be implemented in hardware, software, or a combination of the two. Process <highlight><bold>60</bold></highlight> may be implemented in computer programs executed on programmable computers/machines that each include a processor, a storage medium/article readable by the processor (including volatile and non-volatile memory and/or storage elements), at least one input device, and one or more output devices. Program code maybe applied to data entered using an input device to perform process <highlight><bold>60</bold></highlight> and to generate output information. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Each such program may be implemented in a high level procedural or objected-oriented programming language to communicate with a computer system. However, the programs can be implemented in assembly or machine language. The language may be a compiled or an interpreted language. Each computer program may be stored on a storage medium (article) or device (e.g., CD-ROM, hard disk, or magnetic diskette) that is readable by a general or special purpose programmable computer for configuring and operating the computer when the storage medium or device is read by the computer to perform process <highlight><bold>60</bold></highlight>. Process <highlight><bold>60</bold></highlight> may also be implemented as a machine-readable storage medium, configured with a computer program, where upon execution, instructions in the computer program cause the computer to operate in accordance with process <highlight><bold>60</bold></highlight>. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The invention is not limited to the specific embodiments described herein. For example, the invention can be used to move an object anywhere in a 3D space. Also, camera <highlight><bold>20</bold></highlight> may be moved to keep object <highlight><bold>2</bold></highlight> constantly in the user&apos;s view no matter where object <highlight><bold>2</bold></highlight> moves on the screen. Other I/O interfaces can be used instead of the mouse (e.g., a keyboard, trackball, input tablet, joystick). The invention is also not limited to use in 3D space, but rather can be used in N-dimensional space (N&gE;3). The invention is not limited to the specific processing order of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. Rather, the blocks of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> may be re-ordered, as necessary, to achieve the results set forth above. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Other embodiments not described herein are also within the scope of the following claims.</paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of moving an object on a drag plane in a virtual three-dimensional (3D) space, comprising: 
<claim-text>selecting the object using a cursor; </claim-text>
<claim-text>moving the cursor to a location; </claim-text>
<claim-text>creating a reference plane; </claim-text>
<claim-text>projecting movement of the cursor from the location to an interim point on the reference plane; </claim-text>
<claim-text>projecting the interim point onto the drag plane; and </claim-text>
<claim-text>displaying the object on the drag plane. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein projecting the interim point comprises rotating the reference plane onto the drag plane. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>calculating a first angle between a line of sight and the drag plane, wherein the line of site is a line from a virtual camera to the object; and </claim-text>
<claim-text>determining a drag angle by using a larger angle of the first angle and a predetermined minimum angle. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the reference plane is created using the drag angle. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the drag angle is measured from the line of sight to the reference plane. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the predetermined minimum angle is 30 degrees. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>hiding the cursor from a user&apos;s view; </claim-text>
<claim-text>wherein the object is displayed while the cursor is hidden. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, further comprising: 
<claim-text>deselecting the object; and </claim-text>
<claim-text>displaying the cursor following deselecting. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, further comprising: 
<claim-text>moving the cursor to the location of the object, wherein the cursor is displayed at the location of the object. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein a virtual camera moves to keep the object in a user&apos;s view. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. An apparatus for moving an object on a drag plane in a virtual three-dimensional (3D) space, comprising: 
<claim-text>a memory that stores executable instructions; and </claim-text>
<claim-text>a processor that executes the instructions to: 
<claim-text>select the object using a cursor; </claim-text>
<claim-text>move the cursor to a location; </claim-text>
<claim-text>create a reference plane; </claim-text>
<claim-text>project movement of the cursor from the location to an interim point on the reference plane; </claim-text>
<claim-text>project the interim point onto the drag plane; and </claim-text>
<claim-text>display the object on the drag plane. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the processor executes instructions to rotate the reference plane onto the drag plane. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the processor executes instructions to: 
<claim-text>calculate a first angle between a line of sight and the drag plane, wherein the line of site is a line from a virtual camera to the object; and </claim-text>
<claim-text>determine a drag angle by using a larger angle of the first angle and a predetermined minimum angle. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the reference plane is created using the drag angle. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the drag angle is measured from the line of sight to the modified drag plane. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the predetermined minimum angle is 30 degrees. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the processor executes instructions to: 
<claim-text>hide the cursor from a user&apos;s view; </claim-text>
<claim-text>wherein the object is displayed while the cursor is hidden. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the processor executes instructions to: 
<claim-text>deselect the object; and </claim-text>
<claim-text>display the cursor following deselecting. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein the processor executes instructions to: 
<claim-text>move the cursor to the location of the object, wherein the cursor is displayed at the location of the object. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein a virtual camera moves to keep the object in a user&apos;s view. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. An article comprising a machine-readable medium that stores executable instructions for moving an object on a drag plane in a virtual three-dimensional (3D) space, the instructions causing a machine to: 
<claim-text>select the object using a cursor; </claim-text>
<claim-text>move the cursor to a location; </claim-text>
<claim-text>create a reference plane; </claim-text>
<claim-text>project movement of the cursor from the location to an interim point on the reference plane; </claim-text>
<claim-text>project the interim point onto the drag plane; and </claim-text>
<claim-text>display the object on the drag plane. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The article of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein projecting the interim point comprises rotating the reference plane onto the drag plane. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The article of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, further comprising instructions that cause the machine to: 
<claim-text>calculate a first angle between a line of sight and the drag plane, wherein the line of site is a line from a virtual camera to the object; and </claim-text>
<claim-text>determine a drag angle by using a larger angle of the first angle and a predetermined minimum angle. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The article of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein the reference plane is created using the drag angle. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The article of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein the drag angle is measured from the line of sight to the modified drag plane. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The article of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein the predetermined minimum angle is 30 degrees. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The article of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, further comprising instructions that cause the machine to: 
<claim-text>hide the cursor from a user&apos;s view; </claim-text>
<claim-text>wherein the object is displayed while the cursor is hidden. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The article of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, further comprising instructions that cause the machine to: 
<claim-text>deselect the object; and </claim-text>
<claim-text>display the cursor following deselecting. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The article of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, further comprising instructions that cause the machine to move the cursor to the location of the object, wherein the cursor is displayed at the location of the object. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The article of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein a virtual camera moves to keep the object in a user&apos;s view.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030001906A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030001906A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030001906A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030001906A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030001906A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030001906A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030001906A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030001906A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030001906A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
