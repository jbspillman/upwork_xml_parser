<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002538A1-20030102-D00000.TIF SYSTEM "US20030002538A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002538A1-20030102-D00001.TIF SYSTEM "US20030002538A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002538A1-20030102-D00002.TIF SYSTEM "US20030002538A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002538A1-20030102-D00003.TIF SYSTEM "US20030002538A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002538A1-20030102-D00004.TIF SYSTEM "US20030002538A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002538A1-20030102-D00005.TIF SYSTEM "US20030002538A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002538A1-20030102-D00006.TIF SYSTEM "US20030002538A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002538A1-20030102-D00007.TIF SYSTEM "US20030002538A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002538A1-20030102-D00008.TIF SYSTEM "US20030002538A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002538A1-20030102-D00009.TIF SYSTEM "US20030002538A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002538A1-20030102-D00010.TIF SYSTEM "US20030002538A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002538A1-20030102-D00011.TIF SYSTEM "US20030002538A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002538A1-20030102-D00012.TIF SYSTEM "US20030002538A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030002538A1-20030102-D00013.TIF SYSTEM "US20030002538A1-20030102-D00013.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002538</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896091</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010628</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04J003/06</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>370</class>
<subclass>503000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>370</class>
<subclass>389000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Transporting variable length ATM AAL CPS packets over a non-ATM-specific bus</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Allen</given-name>
<middle-name>Peilen</middle-name>
<family-name>Chen</family-name>
</name>
<residence>
<residence-us>
<city>Cupertino</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>FISH &amp; RICHARDSON, PC</name-1>
<name-2></name-2>
<address>
<address-1>4350 LA JOLLA VILLAGE DRIVE</address-1>
<address-2>SUITE 500</address-2>
<city>SAN DIEGO</city>
<state>CA</state>
<postalcode>92122</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Transporting a variable length AAL CPS packet over a non-ATM-specific bus includes determining a variable length AAL CPS packet and transmitting the variable length AAL CPS packet over a non-ATM-specific bus. A first part of the variable length AAL CPS packet is received and a length of the variable length AAL CPS packet is determined and then used to determine synchronization information. Reception of the variable length AAL CPS packet continues, and the synchronization information is used to determine that reception of the variable length AAL CPS packet is complete. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">TECHNICAL FIELD </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This invention relates to transporting variable length ATM AAL CPS packets. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Asynchronous transfer mode (ATM) is an asynchronous, high bandwidth, low latency, cell-based switching and multiplexing technology. ATM is designed to provide a general-purpose, connection-oriented transfer mode for a wide range of services. To provide connection-oriented service, ATM employs the concept of a hierarchical logical connection. The logical connection includes a virtual path (VP) that may contain one or more virtual channels (VCs). In addition, multiple streams of packetized data may be multiplexed onto a single VC through the use of a channel identifier (CID) associated with each stream. As illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, ATM also includes multiple layers, such as the physical layer, the ATM layer, and various ATM adaptation layers (AALs) (e.g., ATM adaptation layer 2 (AAL2)) that may interface with other higher layers. Each of the layers may support different services and each may include various sublayers. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The AAL2 layer supports ATM transport of connection-oriented variable bit rate (VBR) packetized data, such as voice data and video data. The AAL2 layer typically communicates with a higher layer to transmit and receive the VBR data, generally in a time division multiplexed (TDM) format. The AAL2 layer also includes a common part sublayer (CPS) that interfaces to the ATM layer. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Data received by the AAL2 layer are encapsulated in CPS packets that are similar to, for example, the packet of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>A, and that include a 3-octet header and a variable length payload of from 1 to 64 octets. Next, CPS protocol data units (CPS-PDUs) (illustrated with respect to <cross-reference target="DRAWINGS">FIG. 2B</cross-reference>) are formed from 48-octets of CPS packets. Because of the variable CPS packet size, a CPS-PDU may contain multiple CPS packets, or a single CPS packet may span multiple CPS-PDUs. Once packed, the 48-octet CPS-PDU is communicated to the ATM layer to form a complete payload of an ATM cell, as illustrated by <cross-reference target="DRAWINGS">FIG. 2C</cross-reference>. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The AAL2 also may receive CPS-PDUs from the ATM layer, from which CPS packets may be extracted and passed up to the AAL2 for processing. The process of packing CPS packets into CPS-PDUs and of extracting packets from CPS-PDUs may be referred to collectively as segmentation and reassembly (SAR). </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The ATM layer receives CPS-PDUs from the AAL2 and constructs 53-octet ATM cells from them by adding a 5-octet header and by using the 48-octet CPS-PDU as the ATM cell payload (see, e.g., <cross-reference target="DRAWINGS">FIG. 2C</cross-reference>). The ATM layer also accepts 53-octet ATM cells from the physical layer and unpacks the CPS-PDUs from them to pass up to the AAL2. Based upon information stored in the cell headers, the ATM cells are multiplexed, switched and controlled by the ATM layer. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Finally, the physical layer accepts cells from the ATM layer and frames them for transmission over an electrical or optical transmission medium. The physical layer also accepts frames from the transmission medium and unpacks the ATM cells from the frames.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">DESCRIPTION OF DRAWINGS </heading>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a schematic diagram illustrating a layered structure of the ATM technology. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> FIGS. <highlight><bold>2</bold></highlight>A-<highlight><bold>2</bold></highlight>C are schematic diagrams illustrating typical formats for an AAL2 CPS packet, an AAL2 CPS-PDU, and an ATM cell, respectively. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a schematic diagram of a system in which a variable length AAL CPS packet may be used to transport VBR data between a higher layer channel and a physical layer channel over a non-ATM-specific bus. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 4A and 4B</cross-reference> are schematic flow diagrams illustrating methods implementable by the ATM system of <cross-reference target="DRAWINGS">FIG. 3</cross-reference> with respect to egress data (<cross-reference target="DRAWINGS">FIG. 4A</cross-reference>) and ingress data (<cross-reference target="DRAWINGS">FIG. 4B</cross-reference>). </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a schematic flow diagram illustrating a method that may be used in implementing the method of <cross-reference target="DRAWINGS">FIG. 4A</cross-reference> to convert the data from the higher layer multiplexed channels into ATM AAL2 CPS format packets. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a schematic flow diagram illustrating a method that may be used in implementing the method of <cross-reference target="DRAWINGS">FIG. 4A</cross-reference> to communicate the AAL2 CPS packets to the ATM/SAR chip over a non-ATM-specific bus. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 7, 8</cross-reference>, <highlight><bold>9</bold></highlight>A and <highlight><bold>9</bold></highlight>B, <highlight><bold>11</bold></highlight>A and <highlight><bold>11</bold></highlight>B, and <highlight><bold>12</bold></highlight>A and <highlight><bold>12</bold></highlight>B are schematic flow diagrams illustrating methods that may be used in implementing the method of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a schematic diagram illustrating an example of the use of the method of <cross-reference target="DRAWINGS">FIGS. 9A and 9B</cross-reference>.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Like reference symbols in the various drawings indicate like elements. </paragraph>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> A method of transporting variable length AAL CPS packets over a non-ATM-specific bus is described along with systems and software for implementing the method. For example, a variable length AAL CPS packet, such as, for example, an AAL2 CPS packet, may be used to transport VBR data between a higher layer channel (e.g., a higher layer multiplexed channel) and a physical layer channel over a non-ATM-specific bus. The method allows communication of data both between the physical channel and the higher layer channel (upstream) and between the higher layer channel and the physical channel (downstream). Upstream communications and downstream communications generally are similar, with the first being essentially the reverse of the second. Hence, aspects of the downstream communication are described in detail and a description of corresponding aspects of the upstream communication is omitted for brevity. For clarity of exposition, the description proceeds from an account of a generalized system to a detailed recitation of illustrative roles, configurations, and components of the system. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 3, a</cross-reference> generalized system <highlight><bold>300</bold></highlight> uses variable length AAL CPS packets (e.g., AAL2 CPS packets) to transport data (e.g., VBR data) between a higher layer channel <highlight><bold>310</bold></highlight> and a physical channel <highlight><bold>360</bold></highlight>. The higher layer channel <highlight><bold>310</bold></highlight> may include a higher layer multiplexed channel, such as, for example, a Time Division Multiplexed (TDM) channel, a Code Division Multiplexed (CDM) channel, and/or a Frequency Division Multiplexed (FDM) channel, whether wired or wireless, while the physical layer channel may include, for example, a Synchronous Optical Network (SONET), a Fiber Distributed Data Interface (FDDI), a Token Ring, or a Fiber channel, whether wired or wireless. Exemplary components of the system <highlight><bold>300</bold></highlight> are described. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The system <highlight><bold>300</bold></highlight> may include a motherboard (not shown) and one or more modular circuit boards (not shown), such as, for example, backplanes and/or daughter-cards that may connect to the motherboard and/or each other, for example, through connectors (e.g., connectors <highlight><bold>301</bold></highlight>, <highlight><bold>303</bold></highlight>, <highlight><bold>305</bold></highlight>). Moreover, the backplanes and daughter-cards themselves may connect to other systems. The system <highlight><bold>300</bold></highlight> also may include one or more non-ATM-specific buses, such as, for example, a Peripheral Component Interface (PCI) bus, an Industry Standard Architecture (ISA) bus, an Extended Industry Standard Architecture (EISA) bus, an IEEE (Institute for Electrical and Electronics Engineers) 1394 bus, a local bus, or any other non-ATM-specific bus for transporting data. Various devices (e.g., an interchange chip <highlight><bold>312</bold></highlight>, a microprocessor <highlight><bold>314</bold></highlight>, an interworking chip <highlight><bold>316</bold></highlight>, a bridge chip <highlight><bold>352</bold></highlight>, a framer <highlight><bold>362</bold></highlight>, and/or an ATM/SAR chip <highlight><bold>364</bold></highlight>) may reside on the non-ATM-specific buses, and the buses and/or devices may be configured to reside on any of the motherboard and/or the modular circuit boards, or any combination of these circuit boards. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The interchange chip <highlight><bold>312</bold></highlight> included in the system may connect to a first non-ATM-specific bus (e.g., PCI bus <highlight><bold>350</bold></highlight>), And the microprocessor <highlight><bold>314</bold></highlight> may reside on a second non-ATM-specific bus (e.g., local bus <highlight><bold>318</bold></highlight>). Bridge chip <highlight><bold>352</bold></highlight> may reside on both the local bus <highlight><bold>318</bold></highlight> and the PCI bus <highlight><bold>350</bold></highlight> to allow communication between the microprocessor <highlight><bold>314</bold></highlight> on the local bus <highlight><bold>318</bold></highlight> and the interchange chip <highlight><bold>312</bold></highlight> on the PCI bus <highlight><bold>350</bold></highlight>. Rather than using the bridge chip <highlight><bold>352</bold></highlight> to communicate over the PCI bus <highlight><bold>350</bold></highlight>, the microprocessor <highlight><bold>314</bold></highlight> may be configured to interface directly to the PCI bus <highlight><bold>350</bold></highlight> (not shown). The interchange chip <highlight><bold>312</bold></highlight> may be configured to interface with the higher layer channel <highlight><bold>310</bold></highlight>. For example, the interchange chip <highlight><bold>312</bold></highlight> may receive and demultiplex VBR data packets from the higher layer channel <highlight><bold>310</bold></highlight>, and may communicate the demultiplexed VBR data packets to the microprocessor <highlight><bold>314</bold></highlight>. The microprocessor <highlight><bold>314</bold></highlight> may be configured to map VBR data packets received from the interchange chip <highlight><bold>312</bold></highlight> into appropriate ATM virtual paths and virtual channels and to generate AAL2 CPS packets to encapsulate the VBR data packets. In addition, or in the alternative, the system <highlight><bold>300</bold></highlight> may include an interworking chip <highlight><bold>316</bold></highlight> that may combine the functionality that is provided jointly by the interchange chip <highlight><bold>312</bold></highlight> and the microprocessor <highlight><bold>314</bold></highlight> and that is described above. The interworking chip <highlight><bold>316</bold></highlight> may reside, for example, on the PCI bus <highlight><bold>350</bold></highlight> and/or the local bus <highlight><bold>318</bold></highlight>. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The system also may include an ATM/segmentation and reassembly (ATM/SAR) chip <highlight><bold>364</bold></highlight> that may reside, for example, on the PCI bus <highlight><bold>350</bold></highlight> and may receive AAL2 CPS packets. The AAL2 CPS packets may be received, for example, through peer-to-peer communication over the PCI bus <highlight><bold>350</bold></highlight>, as between the interworking chip <highlight><bold>316</bold></highlight> and the ATM/SAR chip <highlight><bold>364</bold></highlight>. The AAL2 CPS packets also may be received through communication between the ATM/SAR chip <highlight><bold>364</bold></highlight>, located on the PCI bus <highlight><bold>350</bold></highlight>, and the microprocessor host <highlight><bold>314</bold></highlight>, located on the local bus <highlight><bold>318</bold></highlight>, where the bridge chip <highlight><bold>352</bold></highlight> may act as a conduit for the communication. The ATM/SAR chip <highlight><bold>364</bold></highlight> may be configured to save the AAL2 CPS packets in a buffer for subsequent processing when they are received. For example, the ATM/SAR chip <highlight><bold>364</bold></highlight> may include internal and/or external memory that may include reserved PCI memory space (not shown). A FIFO (first in first out) buffer may reside in the reserved PCI memory space and may include a memory ring of programmable size (not shown). The ATM/SAR chip <highlight><bold>364</bold></highlight> may produce CPS-PDUs from the buffered AAL2 CPS packets, and may convert the CPS-PDUs into ATM cells. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The system <highlight><bold>300</bold></highlight> also may include a framer chip <highlight><bold>362</bold></highlight> that may be configured to frame the ATM cells and transmit them over a physical layer channel <highlight><bold>360</bold></highlight>. The framer chip may be configured to communicate with the ATM/SAR chip <highlight><bold>364</bold></highlight> over, for example, a UTOPIA (Universal Test and Operations Interface for ATM) bus <highlight><bold>366</bold></highlight>. The framer chip <highlight><bold>362</bold></highlight> may receive ATM cells from the ATM/SAR chip <highlight><bold>364</bold></highlight> over the UTOPIA bus <highlight><bold>366</bold></highlight> and may frame and transmit the ATM cells on the physical layer channel <highlight><bold>360</bold></highlight>. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The ATM interface chips (e.g., the interchange chip <highlight><bold>312</bold></highlight>, the microprocessor <highlight><bold>314</bold></highlight>, the interworking chip <highlight><bold>316</bold></highlight>, the bridge chip <highlight><bold>352</bold></highlight>, the framer chip <highlight><bold>362</bold></highlight>, and/or the ATM/SAR chip <highlight><bold>364</bold></highlight>) all may include one or more general-purpose or special-purpose hardware components or software components, such as, for example, a circuit, a code segment, a bus interface module, a core logic unit, a control module, a processing module, a transceiver, a communications card, an antenna, a modem, a digital signal processing (DSP) core, or a combination of any or all of these systems. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 4A and 4B</cross-reference> illustrate methods for using variable length AAL CPS packets (e.g., AAL2 CPS packets) to transport data (e.g., VBR data) between a higher layer channel <highlight><bold>310</bold></highlight> and a physical channel <highlight><bold>360</bold></highlight> that may, for example, be implemented in the system of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. <cross-reference target="DRAWINGS">FIG. 4A</cross-reference> illustrates a method for passing VBR data downstream while <cross-reference target="DRAWINGS">FIG. 4B</cross-reference> illustrates a process for passing VBR data upstream. The methods generally are similar and symmetrical. For ease of description, aspects of the method of <cross-reference target="DRAWINGS">FIG. 4A</cross-reference> are described in detail and a description of corresponding aspects of the method of <cross-reference target="DRAWINGS">FIG. 4B</cross-reference> is omitted for brevity. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 4A, a</cross-reference> downstream VBR data packet is received from a higher layer channel (e.g., a higher layer multiplexed channel) <highlight><bold>310</bold></highlight>, for example, by the interchange chip <highlight><bold>312</bold></highlight> or the interworking chip <highlight><bold>316</bold></highlight> (step <highlight><bold>405</bold></highlight>A). The downstream VBR data packet is demultiplexed and encapsulated in a variable length AAL CPS packet (e.g., an AAL2 CPS packet) (step <highlight><bold>410</bold></highlight>A). The demultiplexing and encapsulation may be performed by one device, such as, for example, the interworking chip <highlight><bold>316</bold></highlight>. Alternatively, the demultiplexing may be performed by the interchange chip <highlight><bold>312</bold></highlight> to create demultiplexed data that the microprocessor <highlight><bold>314</bold></highlight> then may encapsulate in the AAL2 CPS packet. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Following the demultiplexing and encapsulation of the downstream data (step <highlight><bold>410</bold></highlight>A), the AAL2 CPS packet may be transported to the ATM/SAR chip <highlight><bold>364</bold></highlight> over a non-ATM-specific bus, such as, for example, the PCI bus <highlight><bold>350</bold></highlight> and/or the local bus <highlight><bold>318</bold></highlight> (step <highlight><bold>415</bold></highlight>A). The ATM/SAR chip <highlight><bold>364</bold></highlight> then may encapsulate the AAL2 CPS packet into an AAL2-PDU that may be used to produce an ATM cell (step <highlight><bold>420</bold></highlight>A). </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Following the generation of the ATM cell, the ATM/SAR chip may communicate the ATM cell to the framer chip <highlight><bold>362</bold></highlight> over, for example, the UTOPIA bus <highlight><bold>366</bold></highlight> (step <highlight><bold>425</bold></highlight>A). The framer chip <highlight><bold>362</bold></highlight> may frame the ATM cell, for example, using a SONET frame, and then may transmit the framed ATM cell over the physical layer channel (e.g., an optical channel, or an electrical channel) <highlight><bold>360</bold></highlight> (step <highlight><bold>430</bold></highlight>A). </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4B</cross-reference> illustrates a process for passing VBR data upstream from a physical channel <highlight><bold>360</bold></highlight> to a higher layer channel <highlight><bold>310</bold></highlight>. The process generally is similar to the process of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>A and includes steps that, although performed in reverse order, correspond generally to the steps of the process of <cross-reference target="DRAWINGS">FIG. 4A</cross-reference>. For example, step <highlight><bold>405</bold></highlight>B, in which data are transmitted on a higher layer multiplexed channel, corresponds generally to step <highlight><bold>405</bold></highlight>A of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>A, in which data are received from a higher layer multiplexed channel. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates a method <highlight><bold>410</bold></highlight>A of using VBR data packets received from a higher layer channel <highlight><bold>310</bold></highlight>, such as, for example, a TDM channel, to generate an AAL2 CPS packet. The VBR data packets are captured (step <highlight><bold>505</bold></highlight>) and demultiplexed (step <highlight><bold>510</bold></highlight>), and mapping information then is determined for mapping the demultiplexed data packets to appropriate virtual channels (step <highlight><bold>515</bold></highlight>). The mapping information may be determined, for example, from a stored look-up table or may be determined dynamically based on feedback information indicating, for example, unused channel capacity and/or a channel quality of service. For example, a mapping function may use the feedback information to determine a virtual channel that is minimally congested and/or that provides a maximum channel quality of service. The downstream data then may be encapsulated in an AAL2 CPS packet associated with an appropriate virtual channel, as indicated by the determined mapping information (step <highlight><bold>520</bold></highlight>). The mapping information may or may not be appended to a beginning or an end of an AAL2 CPS packet (not shown). </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> illustrates a method <highlight><bold>415</bold></highlight>A that may be used to transport the variable length AAL CPS packet (e.g., the AAL2 CPS packet) to the ATM/SAR chip <highlight><bold>364</bold></highlight> over a non-ATM-specific bus. The downstream AAL2 CPS packet may be written over one or more non-ATM-specific buses (e.g., the local bus <highlight><bold>318</bold></highlight> and/or the PCI bus <highlight><bold>350</bold></highlight>) to an address associated with an area of memory reserved for AAL2 CPS packets (step <highlight><bold>605</bold></highlight>). The ATM/SAR chip <highlight><bold>364</bold></highlight> may execute a read cycle to access data written onto the non-ATM-specific bus and may determine based, for example, on the address associated with the data, that the data correspond to an AAL2 CPS packet (step <highlight><bold>610</bold></highlight>). The ATM/SAR chip may determine synchronization information based on the AAL2 CPS packet (step <highlight><bold>615</bold></highlight>) (discussed in detail below), and also may determine whether the AAL2 CPS packet should be saved for SAR processing (step <highlight><bold>620</bold></highlight>). If the ATM/SAR chip <highlight><bold>364</bold></highlight> determines that the AAL2 CPS packet should not be saved for SAR processing (step <highlight><bold>620</bold></highlight>), then the ATM/SAR chip may discard the packet (step <highlight><bold>625</bold></highlight>). Otherwise, the packet may be saved and processed (step <highlight><bold>630</bold></highlight>). </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> Determining synchronization information (step <highlight><bold>615</bold></highlight>) may include determining a synchronization counter and/or a synchronization threshold. The synchronization counter and/or the synchronization threshold may be based, for example, on a length of the packet. A total length of the packet may be determined, for example, based on the contents of the &ldquo;LI&rdquo; field of the packet header that indicates the length of the packet payload in octets, minus one. Thus, for a packet with an LI&equals;15, the total packet length would be equal to 19-octets, determined as the length of the packet header plus the LI value plus one. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The synchronization information may be used by the ATM/SAR chip <highlight><bold>364</bold></highlight> to recognize an end of the current AAL2 CPS packet and/or a beginning of a next AAL2 CPS packet. In addition, a resynchronization procedure may be executed to perform a soft-resynchronization of the ATM/SAR chip <highlight><bold>364</bold></highlight> (step <highlight><bold>640</bold></highlight>) if a determination is made that synchronization has been lost or that resynchronization would otherwise be beneficial (step <highlight><bold>635</bold></highlight>). The soft-resynchronization may be performed without the use of ATM-specific signal lines or a hard-reset (e.g., a powerdown of a device). For example, it may be determined that synchronization has been lost when feedback data indicates that data transmitted downstream arrives garbled at the data&apos;s destination. Also, the resynchronization procedure (step <highlight><bold>640</bold></highlight>) may be executed automatically after passage of a certain interval of time, and/or during a period in which the ATM/SAR chip <highlight><bold>364</bold></highlight> generally is less active. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> In implementing method <highlight><bold>415</bold></highlight>A of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, it may aid synchronization (discussed in greater detail with respect to <cross-reference target="DRAWINGS">FIGS. 7 and 8</cross-reference>) to impose additional structure, such as, for example, data alignment through use of certain structural features of the bus (i.e., logical and/or physical features) or use of bus protocol flexibility. For example, PCI bus <highlight><bold>350</bold></highlight> is a parallel bus with a data path that generally is 4-octets (32 bits) wide, such that communicating any but a minimum-sized AAL2 CPS packet over the PCI bus <highlight><bold>350</bold></highlight> uses multiple read-write cycles of the PCI bus <highlight><bold>350</bold></highlight>. In other words, because the width of the bus <highlight><bold>350</bold></highlight> typically is less than the length of the packet, the packet usually must be delivered in pieces. It may be desirable (e.g., with respect to the method of <cross-reference target="DRAWINGS">FIG. 7</cross-reference>) in writing an AAL2 CPS packet over the bus <highlight><bold>350</bold></highlight>, that the first octet of the packet always align with the lowest order octet of the bus <highlight><bold>350</bold></highlight> (e.g., D&lsqb;7-0&rsqb;). This may ensure that multiple AAL2 CPS packets will not share a bus read-write cycle. It also may be desirable (e.g., with respect to the method of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>) to cause the first octet of an AAL2 CPS packet to align with the first bus octet that follows the last octet occupied by a preceding AAL2 CPS packet. For example, if the last octet of the preceding packet occupies the octet D&lsqb;15-8&rsqb;, then the first octet of the next packet may align with the octet D&lsqb;23-16&rsqb; of the bus <highlight><bold>350</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> illustrates a method <highlight><bold>620</bold></highlight> to determine if a variable length AAL CPS packet (e.g., an AAL2 CPS packet) should be saved for processing. Upon determining that the ATM/SAR chip <highlight><bold>364</bold></highlight> has begun to receive a variable length AAL CPS packet (step <highlight><bold>705</bold></highlight>), the ATM/SAR chip <highlight><bold>364</bold></highlight> may parse from a header of the packet a value representing a length of the packet (step <highlight><bold>710</bold></highlight>). For example, if the variable length AAL CPS packet is an AAL2 CPS packet, then the packet header contains a value in an LI field of the header indicative of a length of a payload of the packet (i.e., the payload length in octets minus one) that may be used to determine a total packet length (e.g., the payload length in octets plus the header length in octets). A value that may or may not be based on the packet length then may be stored as the synchronization counter (e.g., the packet length, zero) (step <highlight><bold>715</bold></highlight>). In like manner, another value that also may or may not be based on the packet length may be stored as the synchronization threshold (e.g., zero, the packet length) (step <highlight><bold>715</bold></highlight>). </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The ATM/SAR chip <highlight><bold>364</bold></highlight> may determine available space in the FIFO buffer (e.g., a number of octets of available buffer space) (step <highlight><bold>720</bold></highlight>) and may compare the available buffer space to the packet length (step <highlight><bold>725</bold></highlight>). If the packet length indicates that currently there is insufficient buffer space to save the entire packet (step <highlight><bold>730</bold></highlight>), then a determination may be made that the packet should not be saved, but, rather, should be discarded (step <highlight><bold>740</bold></highlight>). Otherwise, if it is determined that the packet should be saved (step <highlight><bold>730</bold></highlight>), then the entire packet may be accepted and saved into the FIFO buffer (step <highlight><bold>750</bold></highlight>). In either case, upon determining to save or to discard the packet (step <highlight><bold>730</bold></highlight>), the synchronization information may be used to maintain synchronization automatically. The originally received octets of the packet are either saved (step <highlight><bold>751</bold></highlight>) or discarded (<highlight><bold>741</bold></highlight>) and the synchronization counter is adjusted accordingly (e.g., incremented, decremented) (steps <highlight><bold>741</bold></highlight> and <highlight><bold>751</bold></highlight>). </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> A determination then is made as to whether the adjusted synchronization counter satisfies the synchronization threshold (steps <highlight><bold>743</bold></highlight> and <highlight><bold>753</bold></highlight>), thus indicating, for example, the end of one packet and/or the beginning of a next packet. For example, when the synchronization counter is set initially to the packet length and then is decremented for each octet received, arrival of the synchronization counter at a synchronization threshold of zero may indicate the end of the packet. In like manner, if the synchronization counter is set initially at zero and then is incremented for each octet received, arrival of the synchronization counter at a synchronization threshold equal to the packet length also may indicate that the end of the packet has been achieved. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> If the synchronization threshold remains unsatisfied (steps <highlight><bold>743</bold></highlight> and <highlight><bold>753</bold></highlight>), thus indicating that there are outstanding packet octets, then the outstanding packet octets are awaited and read as they arrive (steps <highlight><bold>745</bold></highlight> and <highlight><bold>755</bold></highlight>). Once read (steps <highlight><bold>745</bold></highlight> and <highlight><bold>755</bold></highlight>), the packet octets are either saved (step <highlight><bold>751</bold></highlight>) or discarded (step (<highlight><bold>741</bold></highlight>) depending on whether the determination was made to save or discard the packet (step <highlight><bold>730</bold></highlight>). Saving (step <highlight><bold>750</bold></highlight>) or discarding (step <highlight><bold>740</bold></highlight>) the AAL2 CPS packet continues until the synchronization threshold is satisfied (steps <highlight><bold>743</bold></highlight> and <highlight><bold>745</bold></highlight>). Once the synchronization threshold is satisfied, the ATM/SAR chip looks for a beginning of a next AAL2 CPS packet (step <highlight><bold>705</bold></highlight>) that may be used to refresh the synchronization information (steps <highlight><bold>710</bold></highlight> and <highlight><bold>715</bold></highlight>). </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> illustrates another method <highlight><bold>620</bold></highlight> to determine if a variable length AAL CPS packet should be saved for processing. Initially, upon determining that the ATM/SAR chip <highlight><bold>364</bold></highlight> has begun to receive an AAL2 CPS packet (step <highlight><bold>805</bold></highlight>), the ATM/SAR chip <highlight><bold>364</bold></highlight> may parse from the &ldquo;LI&rdquo; field of the packet header a value representing a length of the packet payload (i.e., the payload length in octets minus one) that then may be used to determine a total packet length (e.g., the payload length in octets plus the header length in octets) (step <highlight><bold>810</bold></highlight>). A value that may be based on the packet length then may be stored as the synchronization counter (e.g., the packet length, zero) (step <highlight><bold>815</bold></highlight>). In like manner, another value that also may or may not be based on the packet length may be stored as the synchronization threshold (e.g., zero, the packet length) (step <highlight><bold>815</bold></highlight>). </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The ATM/SAR chip <highlight><bold>364</bold></highlight> may determine the available space in the FIFO buffer (e.g., a number of octets of available buffer space) (step <highlight><bold>820</bold></highlight>) and a number of octets of the AAL2 CPS packet determined as received thus far (step <highlight><bold>825</bold></highlight>), and may compare these values (step <highlight><bold>830</bold></highlight>). If the buffer has space sufficient to hold the packet data received thus far (step <highlight><bold>830</bold></highlight>), then the packet data are saved and the synchronization counter is adjusted accordingly (e.g., incremented, decremented) (step <highlight><bold>835</bold></highlight>). If, after adjustment, the synchronization counter satisfies the synchronization threshold (e.g., zero, the packet length) (step <highlight><bold>840</bold></highlight>), then the ATM/SAR chip <highlight><bold>364</bold></highlight> waits to receive additional packet data (step <highlight><bold>845</bold></highlight>). </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> When the packet data is received, and if buffer space is available to hold the received octets of packet data (step <highlight><bold>850</bold></highlight>), the ATM/SAR chip <highlight><bold>364</bold></highlight> adjusts the synchronization counter and saves the packet data (step <highlight><bold>835</bold></highlight>). The receiving and saving of the packet data may continue until the synchronization counter satisfies the synchronization threshold (step <highlight><bold>840</bold></highlight>), thus indicating that the end of the packet has been reached. The ATM/SAR chip <highlight><bold>364</bold></highlight> then returns to its initial state and watches for the arrival of the next AAL2 CPS packet (step <highlight><bold>805</bold></highlight>). </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The receiving (step <highlight><bold>845</bold></highlight>) and saving of the packet data (step <highlight><bold>835</bold></highlight>) may be interrupted when the ATM/SAR chip <highlight><bold>364</bold></highlight> determines that the buffer does not have space sufficient to save the received octets of packet data (step <highlight><bold>850</bold></highlight>). When buffer space is insufficient (step <highlight><bold>850</bold></highlight>), the newly received data is discarded rather than saved and the synchronization counter is adjusted (step <highlight><bold>860</bold></highlight>). Buffer space occupied by prior received octets of the AAL2 CPS packet also is freed (step <highlight><bold>855</bold></highlight>). The receiving of data (step <highlight><bold>845</bold></highlight>), discarding of data, and adjusting of the synchronization counter (step <highlight><bold>860</bold></highlight>) continues until the synchronization counter satisfies the synchronization threshold (step <highlight><bold>840</bold></highlight>). The ATM/SAR chip then returns to its initial state and watches for the arrival of the next AAL2 CPS packet (step <highlight><bold>805</bold></highlight>). </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 9A and 9B</cross-reference> illustrate a method <highlight><bold>640</bold></highlight> to perform a soft-resynchronization of the ATM/SAR chip <highlight><bold>364</bold></highlight> by providing to the ATM/SAR chip <highlight><bold>364</bold></highlight> a series of null AAL CPS packets. A null AAL CPS packet is a minimum-sized AAL CPS packet, such as, for example, an AAL2 CPS packet with all-zero contents (i.e., both the header and the payload). <cross-reference target="DRAWINGS">FIG. 9A</cross-reference> illustrates operation of a CPS packet provider (e.g., the microprocessor <highlight><bold>314</bold></highlight> or the interworking chip <highlight><bold>316</bold></highlight>) used to provide the null AAL CPS packets, while <cross-reference target="DRAWINGS">FIG. 9B</cross-reference> illustrates operation of the ATM/SAR chip <highlight><bold>364</bold></highlight>. In the method <highlight><bold>640</bold></highlight>, all AAL2 CPS packets (i.e., both null and valid) that are provided may share a common bus alignment that will allow for transmission of a null AAL CPS packet in a single read-write operation. For example, in a 4-octet bus, all packets may be aligned with the octet D&lsqb;7-0&rsqb;, such that the LI field for every AAL2 CPS packet may occupy the data bits D&lsqb;13-8&rsqb; of the bus so as to provide four contiguous octets of the bus to transmit a four-octet null AAL CPS packet. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> As illustrated in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>A, the CPS packet provider makes a determination that resynchronization should be performed (described in greater detail with respect to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>) (step <highlight><bold>905</bold></highlight>). The CPS packet provider then halts transmission of additional AAL2 CPS packets (step <highlight><bold>910</bold></highlight>). Next, null AAL2 CPS packets are generated and transported to the ATM/SAR chip (step <highlight><bold>915</bold></highlight>). The number of null AAL2 CPS packets to be sent may be pre-determined as equal to a number of bus writes used to write an AAL2 CPS packet of maximum size. For example, for an AAL2 CPS packet of a maximum allowed length of 67 octets, the number of writes used to communicate the entire packet on a 32 bit PCI bus may equal 17. Following transmission of the null AAL2 CPS packets (step <highlight><bold>915</bold></highlight>), the controller reinitiates transmission of incoming AAL2 CPS packets to the ATM/SAR chip <highlight><bold>364</bold></highlight> for SAR processing (step <highlight><bold>920</bold></highlight>). </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> As illustrated in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>B, once the ATM/SAR chip <highlight><bold>364</bold></highlight> begins receiving the null packets from the CPS packet provider, the ATM/SAR chip <highlight><bold>364</bold></highlight> is lead by the synchronization information to refresh the synchronization information based on the &ldquo;LI&rdquo; field of one of the null AAL2 CPS packets (described in greater detail with respect to <cross-reference target="DRAWINGS">FIG. 10</cross-reference>) (step <highlight><bold>955</bold></highlight>). The use of the refreshed synchronization information synchronizes the ATM/SAR chip <highlight><bold>364</bold></highlight> with the beginning of the next packet that is received, whether it be another null AAL2 CPS packet (step <highlight><bold>960</bold></highlight>) or a valid AAL2 CPS packet (step <highlight><bold>965</bold></highlight>). </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> describes a series of 22 read-write cycles that illustrate in greater detail the use of the null AAL2 CPS packets to resynchronize the ATM/SAR chip <highlight><bold>364</bold></highlight> as described in <cross-reference target="DRAWINGS">FIGS. 9A and 9B</cross-reference>. Initially, three read-write cycles <highlight><bold>1005</bold></highlight> are used to transport an AAL2 CPS packet that begins with its header in the first read-write cycle, but whose transmission is cut off after the third read write cycle. Seventeen null packets then are transmitted, one per each of the next seventeen read-write cycles <highlight><bold>1010</bold></highlight>. Finally, in the twenty-first read-write cycle <highlight><bold>1015</bold></highlight>, transmission of another valid AAL2 CPS packet begins. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> In the example of <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the ATM/SAR chip <highlight><bold>364</bold></highlight> is out of synchronization at the end of the third read-write cycle <highlight><bold>1020</bold></highlight>, if not before. At the end of the third write cycle <highlight><bold>1020</bold></highlight>, the decremented value of the synchronization counter is shown as <highlight><bold>63</bold></highlight>. Although not synchronized, the ATM/SAR chip <highlight><bold>364</bold></highlight> continues to take in packet octets while decrementing the synchronization counter accordingly. The synchronization counter eventually decrements to zero and satisfies the synchronization threshold after the third octet of null packet sixteen is read in <highlight><bold>1025</bold></highlight>. Satisfaction of the synchronization threshold, equal to zero in this example, signals the ATM/SAR chip <highlight><bold>364</bold></highlight> to expect a fresh AAL2 CPS packet in the next read-write cycle that conveys AAL2 CPS packet information. The ATM/SAR chip <highlight><bold>364</bold></highlight> resynchronizes, therefore, on null packet seventeen <highlight><bold>1030</bold></highlight>, using the LI value <highlight><bold>1035</bold></highlight> of null packet seventeen <highlight><bold>1030</bold></highlight> to refresh the synchronization information. The refreshed resynchronization information, in turn, leads the ATM/SAR chip <highlight><bold>364</bold></highlight> successfully to synchronize with the valid AAL2 CPS packet of the twenty-first read-write cycle <highlight><bold>1015</bold></highlight>, and, synchronization being restored, with any other subsequently received incoming AAL2 CPS packets. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 11A and 11B</cross-reference> illustrate another method <highlight><bold>640</bold></highlight> to perform a soft-resynchronization of the ATM/SAR chip <highlight><bold>364</bold></highlight> by transmitting to the ATM/SAR chip <highlight><bold>364</bold></highlight> a series of null AAL CPS packets (e.g., null AAL2 CPS packets). <cross-reference target="DRAWINGS">FIG. 11A</cross-reference> illustrates operation of the CPS packet provider used to provide the null AAL2 CPS packets, while <cross-reference target="DRAWINGS">FIG. 11B</cross-reference> illustrates operation of the ATM/SAR chip <highlight><bold>364</bold></highlight>. In the method <highlight><bold>640</bold></highlight>, a channel identifier equal to zero (CID&equals;0) may be reserved for use during resynchronization (described in further detail below). Also, all transmitted AAL2 CPS packets may be octet aligned with the bus. For example, in the case of a 4-octet bus, the first octet of an AAL2 CPS packet, whether valid or null, may align with one of either D0, D8, D16, or D24 of the bus. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> As illustrated in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>A, the CPS packet provider may determine that resynchronization should be performed (step <highlight><bold>1105</bold></highlight>), and may halt the transmission of additional AAL2 CPS packets (step <highlight><bold>1110</bold></highlight>). Next a number of null AAL2 CPS packets are generated and communicated to the ATM/SAR chip (step <highlight><bold>1115</bold></highlight>). The required number of null AAL2 CPS packets may be determined as equal to a number of null AAL2 CPS packets whose octet aggregate equals or just exceeds the maximum allowable octet size of an AAL2 CPS packet (e.g., 67 octets). For example, in a system in which the packet header is three octets long and the maximum allowed packet length is 67 octets, a null AAL2 CPS packet may be four octets long. Hence, at least 17 null AAL CPS packets should be written to ensure that the ATM/SAR chip does not count over all of them before the synchronization counter satisfies the synchronization threshold. Following transmission of the appropriate number of null AAL2 CPS packets (step <highlight><bold>1115</bold></highlight>), the CPS packet provider may reinitiate transmission of valid incoming AAL2 CPS packets to the ATM/SAR chip <highlight><bold>364</bold></highlight> for SAR processing (step <highlight><bold>1120</bold></highlight>). </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> As illustrated in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>B, the ATM/SAR chip <highlight><bold>364</bold></highlight>, once it begins receiving the null AAL2 CPS packets from the controller, will be lead by the synchronization counter to select a portion of one of the null AAL2 CPS packets as an LI to refresh the synchronization information (step <highlight><bold>1155</bold></highlight>). The portion of the null AAL2 CPS packet selected may or may not align with the LI field of that null AAL2 CPS packet, but, nevertheless, will contain a value of zero. Upon determining a value of zero for the LI (step <highlight><bold>1155</bold></highlight>), the ATM/SAR chip <highlight><bold>364</bold></highlight> also may parse the octet immediately preceding the six bits from which the zero LI value was extracted to determine a CID value (refer to the AAL2 CPS packet header format shown in <cross-reference target="DRAWINGS">FIG. 2A</cross-reference>) (step <highlight><bold>1160</bold></highlight>). Where both the LI value and the CID value are zero, the ATM/SAR chip may enter a search mode (step <highlight><bold>1165</bold></highlight>). </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> The additional check of the value of the CID helps prevent the ATM/SAR from erroneously entering the search mode. For example, without the CID check, a valid AAL2 CPS packet of minimum length (LI&equals;0) but with a non-zero CID may send the ATM/SAR into search mode erroneously. The CID check counters this fault, as the valid minimum length packet may have a nonzero CID, with a zero CID being reserved for null AAL CPS packets. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> Having entered the search mode (step <highlight><bold>1165</bold></highlight>), the ATM/SAR chip may search octet-by-octet through the received data (all zero data with respect to the null AAL CPS packets) until a non-zero octet is encountered (step <highlight><bold>1170</bold></highlight>). Because a zero CID is reserved for null AAL CPS packets, the non-zero octet signals to the ATM/SAR chip the beginning of a valid AAL2 CPS packet. The ATM/SAR may use the LI value of the AAL2 CPS packet to refresh the synchronization information (step <highlight><bold>1175</bold></highlight>). The search mode then is exited, with synchronization having been reestablished (step <highlight><bold>1175</bold></highlight>). </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 12A and 12B</cross-reference> illustrate a method <highlight><bold>640</bold></highlight> to perform a soft-resynchronization of the ATM/SAR chip <highlight><bold>364</bold></highlight> by transmitting to the ATM/SAR chip <highlight><bold>364</bold></highlight> a resynchronize instruction. <cross-reference target="DRAWINGS">FIG. 12A</cross-reference> illustrates operation of the CPS packet provider used to provide the resynchronize instruction, while <cross-reference target="DRAWINGS">FIG. 12B</cross-reference> illustrates operation of the ATM/SAR chip <highlight><bold>364</bold></highlight>. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> As illustrated in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>A, the CPS packet provider may determine that resynchronization should be performed (step <highlight><bold>1205</bold></highlight>), and may halt transmission of additional AAL2 CPS packets (step <highlight><bold>1210</bold></highlight>). The CPS packet provider next may generate and transmit a resynchronization instruction to a predesignated control address of the ATM/SAR chip (step <highlight><bold>1215</bold></highlight>). The CPS packet provider may wait for an acknowledgement from the SAR chip before sending another AAL2 CPS packet (step <highlight><bold>1220</bold></highlight>). For example, rather than rely on an acknowledgement from the ATM/SAR chip, the CPS packet provider may simply wait a period of time adequate to allow the ATM/SAR chip to receive the resynchronization instruction and to operate as instructed by the resynchronization instruction (step <highlight><bold>1220</bold></highlight>). </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> As illustrated in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>B, the ATM/SAR chip <highlight><bold>364</bold></highlight>, upon receiving the resynchronization instruction, may halt processing of the current AAL2 CPS packet (step <highlight><bold>1255</bold></highlight>). The ATM/SAR chip <highlight><bold>364</bold></highlight> may provide an acknowledgement to the controller that the synchronization instruction was received (step <highlight><bold>1260</bold></highlight>). The ATM/SAR chip then may await receipt of the next data indicated by its address, for example, to be part of an AAL2 CPS packet (step <highlight><bold>1265</bold></highlight>). The ATM/SAR chip may be configured to recognize that the first octets of this data include header information, and the ATM/SAR chip may use this header information to refresh the synchronization information, thus restoring the SAR to a state of synchronization. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> These general and specific aspects may be implemented using a method, a system, or a computer program, or any combination of systems, methods, and computer programs. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Other implementations are within the scope of the following claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method comprising: 
<claim-text>transmitting a variable length AAL CPS packet over a non-ATM-specific bus; </claim-text>
<claim-text>receiving a first part of the variable length AAL CPS packet; </claim-text>
<claim-text>determining a length of the variable length AAL CPS packet; </claim-text>
<claim-text>determining synchronization information based on the length of the variable length AAL CPS packet; </claim-text>
<claim-text>continuing to receive the variable length AAL CPS packet; and </claim-text>
<claim-text>using the synchronization information to determine that reception of the variable length AAL CPS packet is complete. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> in which the variable length AAL CPS packet comprises an AAL2 CPS packet and the non-ATM-specific bus comprises a PCI bus. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> in which transmitting the variable length AAL CPS packet over a non-ATM-specific bus further comprises transmitting the variable length AAL CPS packet to a predetermined address associated with receipt of variable length AAL CPS packets. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> in which receiving a first part of the variable length AAL CPS packet comprises receiving header information of the variable length AAL CPS packet and in which determining a length of the variable length AAL CPS packet comprises reading a value indicative of the length of the variable length AAL CPS packet from the header information of the variable length AAL CPS packet. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising determining whether to save or discard the variable length AAL CPS packet. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference> in which determining whether to save or discard the variable length AAL CPS packet comprises determining whether there is currently sufficient buffer space to save the complete AAL CPS packet. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference> in which determining whether to save or discard the variable length AAL CPS packet comprises determining whether there is currently sufficient buffer space to save a received but unsaved portion of the AAL CPS packet. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising determining whether resynchronization should occur and performing a soft-resynchronization if it is determined that resynchronization should occur. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> in which determining whether resynchronization should occur includes receiving an indication that synchronization has been lost. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> in which determining whether resynchronization should occur includes receiving an indication that a predetermined interval has passed since a prior resynchronization. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> in which performing a soft-resynchronization comprises: 
<claim-text>generating a number of null AAL CPS packets; </claim-text>
<claim-text>transmitting the null AAL CPS packets; </claim-text>
<claim-text>receiving the null AAL CPS packets; and </claim-text>
<claim-text>resynchronizing based on the received null AAL CPS packets. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference> in which a length of a maximally long AAL CPS packet is indicative of a number of octets comprising the maximally long AAL CPS packet, and in which an aggregated length of the null AAL CPS packets is at least equal to the length of the maximally long AAL CPS packet. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> further comprising: 
<claim-text>generating a second AAL2 CPS packet; </claim-text>
<claim-text>transmitting the second AAL2 CPS packet; and </claim-text>
<claim-text>receiving the second AAL2 CPS packet; </claim-text>
<claim-text>in which resynchronizing because of the received null AAL CPS packets includes entering a search mode because of the received null AAL CPS packets and searching received packets octet-by-octet for a first non-zero octet while in the search mode. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference> in which a length of a maximally long AAL CPS packet is indicative of a number of read-write cycles used to transmit the maximally long AAL CPS packet, and in which an aggregated length of the null AAL CPS packets is at least equal to the length of the maximally long AAL CPS packet. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> in which resynchronizing because of the received null AAL CPS packets includes determining synchronization information from a received null AAL CPS packet. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> in which performing a soft-resynchronization comprises: 
<claim-text>generating a resynchronization instruction; </claim-text>
<claim-text>transmitting the resynchronization instruction over the non-ATM-specific bus; </claim-text>
<claim-text>receiving the resynchronization instruction; and </claim-text>
<claim-text>resynchronizing based on the resynchronization instruction. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A system comprising: 
<claim-text>a transmitting circuit that transmits a variable length AAL CPS packet over a non-ATM-specific bus; </claim-text>
<claim-text>a first receiving circuit that receivesa first part of the variable length AAL CPS packet; </claim-text>
<claim-text>a length determining circuit that determines a length of the variable length AAL CPS packet; </claim-text>
<claim-text>a sync determination circuit that determines synchronization information based on the length of the variable length AAL CPS packet; </claim-text>
<claim-text>a second receiving circuit that continues to receive the variable length AAL CPS packet; and </claim-text>
<claim-text>a synchronization circuit that uses the synchronization information to determine that reception of the variable length AAL CPS packet is complete. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> in which the first receiving circuit comprises a header reception circuit that receives header information of the variable length AAL CPS packet and in which the length determining circuit comprises a reading circuit that reads a value indicative of the length of the variable length AAL CPS packet from the header information of the variable length AAL CPS packet. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> further comprising a discard circuit that determines whether to save or discard the variable length AAL CPS packet, and in which the discard circuit includes a buffer query circuit that determines whether there is currently sufficient buffer space to save a received but unsaved portion of the AAL CPS packet. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> further comprising a sync control circuit that determines whether resynchronization should occur and that includes a resynchronization circuit that performs a soft-resynchronization if it is determined that resynchronization should occur. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference> in which the soft-resynchronization circuit comprises: 
<claim-text>a null generation circuit that generates a number of null AAL CPS packets; </claim-text>
<claim-text>a null transmission circuit that transmits the null AAL CPS packets; </claim-text>
<claim-text>a null reception circuit that receives the null AAL CPS packets; and </claim-text>
<claim-text>a null resynchronization circuit that resynchronizes because of the received null AAL CPS packets. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> in which a length of a maximally long AAL CPS packet is indicative of a number of octets comprising the maximally long AAL CPS packet, and in which an aggregated length of the null AAL CPS packets is at least equal to the length of the maximally long AAL CPS packet. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference> further comprising: 
<claim-text>a packet generator circuit that generates a second AAL2 CPS packet; </claim-text>
<claim-text>a packet transmission circuit that transmits the second AAL2 CPS packet; and </claim-text>
<claim-text>a packet reception circuit that receives the second AAL2 CPS packet; </claim-text>
<claim-text>in which the null resynchronization circuit includes a searching circuit that enters a search mode because of the received null AAL CPS packets and searches received packets octet-by-octet for a first non-zero octet while in the search mode. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A computer program stored on a computer readable medium or a propagated signal, the computer program comprising: 
<claim-text>a transmitting code segment that causes the computer to transmit a variable length AAL CPS packet over a non-ATM-specific bus; </claim-text>
<claim-text>a first receiving code segment that causes the computer to receive a first part of the variable length AAL CPS packet; </claim-text>
<claim-text>a length code segment that causes the computer to determine a length of the variable length AAL CPS packet; </claim-text>
<claim-text>a sync determination code segment that causes the computer to determine synchronization information based on the length of the variable length AAL CPS packet; </claim-text>
<claim-text>a second receiving code segment that causes the computer to continue to receive the variable length AAL CPS packet; and </claim-text>
<claim-text>a synchronization code segment that causes the computer to use the synchronization information to determine that reception of the variable length AAL CPS packet is complete. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The computer program of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> in which the first receiving code segment comprises a header reception code segment that causes the computer to receive header information of the variable length AAL CPS packet and in which the length code segment comprises a reading code segment that causes the computer to read a value indicative of the length of the variable length AAL CPS packet from the header information of the variable length AAL CPS packet. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The computer program of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> further comprising a discard code segment that causes the computer to determine whether to save or discard the variable length AAL CPS packet, and in which the discard code segment includes a buffer query code segment that causes the computer to determine whether there is currently sufficient buffer space to save a received but unsaved portion of the AAL CPS packet. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The computer program of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> further comprising a sync control code segment that causes the computer to determine whether resynchronization should occur, and that includes a resynchronization code segment that causes the computer to perform a soft-resynchronization if it is determined that resynchronization should occur. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The computer program of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference> in which the soft-resynchronization code segment comprises: 
<claim-text>a null generation code segment that causes the computer to generate a number of null AAL CPS packets; </claim-text>
<claim-text>a null transmission code segment that causes the computer to transmit the null AAL CPS packets; </claim-text>
<claim-text>a null reception code segment that causes the computer to receive the null AAL CPS packets; and </claim-text>
<claim-text>a null resynchronization code segment that causes the computer to resynchronize because of the received null AAL CPS packets. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The computer program of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference> in which a length of a maximally long AAL CPS packet is indicative of a number of octets comprising the maximally long AAL CPS packet, and in which an aggregated length of the null AAL CPS packets is at least equal to the length of the maximally long AAL CPS packet. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The computer program of <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference> further comprising: 
<claim-text>a packet generator code segment that causes the computer to generate a second AAL2 CPS packet; </claim-text>
<claim-text>a packet transmission code segment that causes the computer to transmit the second AAL2 CPS packet; and </claim-text>
<claim-text>a packet reception code segment that causes the computer to receive the second AAL2 CPS packet; </claim-text>
<claim-text>in which the null resynchronization code segment includes a searching code segment that causes the computer to enter a search mode because of the received null AAL CPS packets and while in the search mode to search received packets octet-by-octet for a first non-zero octet.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>3</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002538A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002538A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002538A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002538A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002538A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002538A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002538A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002538A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002538A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002538A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002538A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002538A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002538A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030002538A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
