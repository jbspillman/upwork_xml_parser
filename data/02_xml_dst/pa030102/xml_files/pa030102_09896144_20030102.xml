<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004840A1-20030102-P00001.TIF SYSTEM "US20030004840A1-20030102-P00001.TIF" NDATA TIF>
<!ENTITY US20030004840A1-20030102-P00002.TIF SYSTEM "US20030004840A1-20030102-P00002.TIF" NDATA TIF>
<!ENTITY US20030004840A1-20030102-D00000.TIF SYSTEM "US20030004840A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004840A1-20030102-D00001.TIF SYSTEM "US20030004840A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004840A1-20030102-D00002.TIF SYSTEM "US20030004840A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004840A1-20030102-D00003.TIF SYSTEM "US20030004840A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004840A1-20030102-D00004.TIF SYSTEM "US20030004840A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004840A1-20030102-D00005.TIF SYSTEM "US20030004840A1-20030102-D00005.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004840</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896144</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F017/60</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>705</class>
<subclass>030000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>705</class>
<subclass>008000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Method and apparatus for performing collective validation of credential information</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Shari</given-name>
<family-name>Gharavy</family-name>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>KENT B CHAMBERS</name-1>
<name-2>HAMILTON &amp; TERRILE LLP</name-2>
<address>
<address-1>P. O. BOX 203518</address-1>
<city>AUSTIN</city>
<state>TX</state>
<postalcode>78720</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">An embodiment of the invention comprises a method and apparatus for performing collective validation of credential information. The invention has applicability in industries that require sales agents or those related to the distribution of a certain product to be credentialed (e.g., licensed and/or appointed) when selling certain products (e.g., life insurance, etc . . . ). For example, in order to sell some financial instruments sales representatives must meet state and/or federal licensing requirements. Embodiments of the invention provide a way to ensure that sales representatives operate within any regulatory constraints put in place by government or any other organization. Companies may, for instance, utilize embodiments of the invention to ensure that sales representatives operate within a set of defined constraints. One aspect of the invention provides a method for validating sales agents&apos; credentials while processing the sales transaction data to determine commission amounts. The system is configured to perform such transaction processing in an efficient manner that minimizes the amount of computational resources required to determine whether a sales agent has valid credential at the time of a particular sale and is therefore entitled to compensation (e.g., a commission) for the sale. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This invention relates to the field of computer technology. More specifically, the invention relates to a method and system for performing collective validation of credential information (e.g., license and/or appointment data). </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Portions of the disclosure of this patent document contain material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office file or records, but otherwise reserves all copyrights whatsoever. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> There are many complexities to the financial services business. At any given time large amounts of sales transaction data must be organized and processed. Such data may relate to many types of sales transactions and much of it is necessary to keep the business running smoothly. Some of the more significant classifications of sales transaction data stem from the fact that in the financial services business there are multiple distribution channels each with multiple distributors and many different incentive plans for employees. In most instances, these incentive plans are constantly modified and changed. This is particularly true in the financial services sector where distributors and sales representatives may require certain licenses and appointments in order to legally sell certain financial instruments. The status of the license or appointment data changes continuously and must therefore be updated on a regular basis. Furthermore, the volume of sales transactions is large, and for each transaction a number of tests must carried out to validate the sales agents&apos; credentials and compute the compensation amounts associated with the sales transactions. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Updating such a large amount of records is a cumbersome process that can require significant system resources. Thus, systems must be configured to efficiently validate sales transactions in view of the licenses and/or appointments necessary to legally complete the transaction. Existing systems do not currently have a mechanism for processing such data in a way that minimizes the time required to process license and appointment data and validate a sales agent&apos;s credentials before distributing compensation to the sales agent for the transaction. Therefore there is a need for an improved mechanism for processing sales transaction data. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> An embodiment of the invention comprises a method and apparatus for performing collective validation of credential information. The invention has applicability in industries that require sales agents or those related to the distribution of a certain product to be credentialed (e.g., licensed and/or appointed) when selling certain products (e.g., life insurance, etc . . . ). For example, in order to sell some financial instruments sales representatives must meet state and/or federal licensing requirements. Embodiments of the invention provide a way to ensure that sales representatives operate within any regulatory constraints put in place by government or any other organization. Companies may, for instance, utilize embodiments of the invention to ensure that sales representatives operate within a set of defined constraints. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> One aspect of the invention provides a method for validating sales agents&apos; credentials while processing the sales transaction data to determine commission amounts. The system is configured to perform such transaction processing in an efficient manner that minimizes the amount of computational resources required to determine whether a sales agent has valid credential at the time of a particular sale and is therefore entitled to compensation (e.g., a commission) for the sale. The system may process one or more transactions at a time and may perform transaction processing collectively if such processing is desirable. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In an embodiment of the invention, the compensation engine or some other software component determines the grouping of input such that validation can be performed collectively (e.g., in batch). For instance, the compensation engine may perform an initialization process where it obtains credential information that relates to the sales agents and assembles the credential information into a denormalized table. The system may obtain credential information (e.g., licensing and/or appointment data) from several tables of a database and put the credential information into a single denormalized table. The system may also load rule information that can be utilized to process the credential information. This rule information may be provided to the system in any structured form (e.g., text, XML, etc . . . ) and the rule data may comprise a set of tests for determining if a particular transaction was valid. In one embodiment of the invention, the system instantiates an instance of an object oriented class referred to as the RuleSet class. The RuleSet class and a set of associated object reachable from that class (e.g., preconditions, test, etc . . . ) provide the functionality referred to as the rule engine. Thus, the rule engine may comprise a collection of objects working together. However, the invention also contemplates other software or hardware mechanisms configured to provide rule engine functionality. The objected oriented examples provided herein are for illustrative purposes and the reader should note that other non-objected oriented programs may be configured to provide the functionality described herein. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Once the rule information is loaded, an embodiment of the invention utilizes the rule information to determine if the distributor (e.g., sales agent) specified in the transaction was properly credited. Thus, the system obtains a set of transactions (e.g., a batch) associated with one or more sales agents and utilizes the transaction data to determine if a commission amount associated with each transaction may be credited to one or more of the sales agent&apos;s accounts. Compensation is distributed when the constraints placed on the sales transaction are satisfied. For example, a sales representative that made a sale under an invalid credential (e.g., a license or appointment) will not be compensated for the sales. Thus, part of the compensation process involves determining the validity of the sales agent&apos;s credentials (e.g., license and/or appointment data). </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> In one embodiment of the invention, the process associated with determining whether the credential data is valid involves converting each transaction to input usable by the rule engine. A collective set of rule engine input may then be provided to the system to perform validation. The process of determining whether the transaction input is valid may involve determining the set of rules that apply to the input by filtering the rules using a set of preconditions. The set of tests may then be partitioned by test type and each test type is associated with the transaction input. Once the association occurs a candidate for each test type is selected and a collective group of the tests of a particular type is formulated. The group of tests is then input to the system for processing. The reader should note, however, that the invention does not require that such test data be input collectively (e.g., in batch). The test data (e.g., tests of a particular type) may also be input individually or in any other categorical methodology that provides the test data to the system. The results can be stored in cache for later use by the system. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> For each rule associated with each input, the system determines if the test conditions are met. If the test conditions are met, the transaction data with respect to that test type is considered valid. The system may use the cached results to determine if the test conditions are met. The results indicate which of the transactions are valid and can therefore be utilized to determine which sales agents to compensation for a particular transaction. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> In an embodiment of the invention, the functionality is accomplished through the use of a set of software and/or hardware components configured to determine whether a sales transaction should result in a credit to the sales agent associated with the transaction. The system may perform this by utilizing a compensation engine configured to communicate with the rule engine. In one embodiment of the invention, the rule engine comprises a collection of software interrelated components. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a flowchart of the steps in an example that illustrates the validity checks of credentials according to an embodiment of the invention. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows a class diagram and relationships representing object models for licenses (e.g., credentials) in an embodiment of the invention. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows a block diagram illustrating data communication during credential validation process in an embodiment of the invention. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows a flowchart illustrating the steps involved in validating distributors credentials in an embodiment of the invention. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows a flowchart illustrating the steps involved in validating credential using an alternative approach to credential validation in an embodiment of the invention. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The invention provides a method and apparatus for performing collective validation of credential information. In the following description, numerous specific details are set forth in order to provide a more thorough understanding of the invention. It will be apparent, however, to one skilled in the art, that the invention may be practiced without these specific details. In other instances, well-known features have not been described in detail in order to avoid unnecessarily obscuring the invention. </paragraph>
<paragraph id="P-0018" lvl="7"><number>&lsqb;0018&rsqb;</number> System Overview: </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> An embodiment of the invention comprises a method and apparatus for performing collective validation of credential information (e.g., license and/or appointment data or any other set of constraints upon a sales transaction). More specifically, the invention provides a method for validating sales agents&apos; credentials while processing sales transaction data to determine commissions to be paid. The system is configured to perform such transaction processing in a manner that decreases the amount of time and resources required to determine whether a sales agent has a valid credential at the time of a particular sale and is therefore entitled to compensation (e.g., a commission) for the sale. The system may process one or more transactions at a time and may perform transaction processing collectively if such processing is desirable. The specifics of the improved system for processing such transaction data will be described in further detail below. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The invention may be integrated into an extensible system for managing relationships between institutions (e.g., suppliers/manufacturers) of a product or service and the distributors (e.g., sales representatives) of their product. Systems embodying the invention have applicability in industries that require sales agents or those related to the distribution of a certain product or service to be credentialed (e.g., licensed or appointed) in order to sell the product. For example, in order to sell a certain financial instrument a sales representative might be required to have a state and/or federal license to sell that type of financial instrument. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Companies or organizations may utilize the invention to enforce agreements the company has with distributors who sell their products. Thus, the system may enforce an agreement stating that all sales transactions are to be performed by sales representatives or distributors who have valid credentials. This provides organizations such as life insurances companies a way to manage the sale and distribution of life insurance plans in a way that coincides with the regulatory constraints of government organizations. Whether a particular distributor or sales representative is appropriately credentialed can be viewed as a regulatory constraint. The system ensures that such regulatory constraints are not violated when a transaction is executed. Although, licenses and/or appointments are utilized as examples of the types of credentials that may be validated by embodiments of the invention, the term credentials as it utilized encompasses any set of constraints or requirements associated with a sales transaction. For instance, company policies or individual constraints that vary on a product by product basis, or any other set of definable constraints can also be enforced by the system by implementing such items as &ldquo;credentials&rdquo; that may be required for a sales representative to be compensated. Transactions that do not conform to the government regulations are not typically executed and may not therefore result in any compensation to the sales representative(s) or distributor(s) associated with the transaction. In accordance with one embodiment of the invention, credential checks are collectively submitted to the system for processing. This decreases the time and resources required to process the credential information. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The invention may use multiple techniques for processing the sales transaction data in order to determine whether a sales agent has valid credential at the time of a particular sale and is therefore entitled to compensation (e.g., a commission) for the sale. In an embodiment of the invention, a compensation engine or some other software component determines an arrangement of input such that validation can be performed collectively (e.g., in batch). For example, the compensation engine may perform an initialization process where it obtains credential information that relates to the sales agents and assemble the credential information into a denormalized table. For instance, the system may obtain credential information (e.g., licensing and/or appointment information) from several database tables and put the credential information into a single denormalized table. The initialization engine may also load rule information that can be utilized to process the credential information. This rule information may be provided to the system in any structured form (e.g., text, XML, etc . . . ) and the rule data may comprise a set of tests for determining if a particular transaction was valid. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> In one embodiment of the invention, the system instantiates an instance of an object oriented class referred to as the RuleSet class. The RuleSet class and a set of associated object reachable from that class (e.g., preconditions, test, etc . . . ) provide the functionality referred to as the rule engine. Thus, the rule engine may comprise a collection of objects working together. For instance, the system may interact with a RuleSet instance through a rule container class or some other type of interface (e.g., a license and appointment class). Upon initialization, a RuleSetImporter may be utilized to obtain the rule information (e.g., XML files that define the rules) and create an in memory representation of the imported rules. That representation may comprise a chain of RuleSet objects and their associated preconditions and tests. The reader should note that the specific classes and objects referred to herein are for illustrative purposes. Other non-objected oriented programs may be configured to provide the same functionality. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Once the rule information is loaded (e.g., via the RuleSetImporter or some other mechanism), an embodiment of the invention utilizes the rule information to determine if the distributor (e.g., sales agent) specified in the transaction was properly credited. Thus, the system obtains a set of transactions (e.g., a batch) associated with one or more sales parties and utilizes the transaction data to determine if a commission amount associated with each transaction should be credited. Compensation is distributed when the constraints placed on the sales transaction are satisfied. For example, a sales representative that made a sale under an invalid credential (e.g., license or policy) will not be compensated for the sales. Thus, part of the compensation process involves determining the validity of the sales agent&apos;s credentials (e.g., license and/or appointment data). </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> In one embodiment of the invention, the process associated with determining whether the credential data is valid involves converting each transaction to input usable by the rule engine. A collective set of rule engine input may then be provided to the system to perform validation. In one embodiment of the invention, the process of determining whether the transaction input is valid involves determining the set of rules that apply to the input by filtering the rules using a set of preconditions. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The set of tests may then be partitioned by test type and each test type is associated with the transaction input. Once the association occurs a candidate for each test type is selected and a collective group of all tests of a particular type is formulated for input. The tests are then provided to the system for processing. The results can be stored in cache for later use by the system. For each rule associated with each input, the system determines if the test conditions are met. If the test conditions are met, the transaction data with respect to that test type is considered valid. The system may use the cached results to determine if the test conditions are met. The results indicate which of the transactions are valid and can therefore be utilized to determine which sales agents to compensation for a particular transaction. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The methodology for collectively submitting credential checks to the system for processing in accordance with one embodiment of the invention is described in further detail below (see e.g., Section entitled License and Appointments Validation). </paragraph>
<paragraph id="P-0028" lvl="7"><number>&lsqb;0028&rsqb;</number> Introduction to Licenses and Appointments </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> So that the reader gains an understanding of the type of credential information that may be validated by embodiments of the invention, a brief description of credentials such as licenses and/or appointments follows. Licenses within an embodiment of the invention may equate to physical licenses issued by jurisdictions (e.g., federal, state/province). To receive compensation for a sale, the system ensures that distributors are appropriately licensed and that each individual who receives compensation is appointed to make such sales (e.g., an agent). </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The system may also determine whether parties associated with the transaction (e.g., distributors and/or sales representatives) have an up to date and valid credential (e.g., license). For example, the system may keep track of continuing education credits to determine how many courses a distributor has taken. The system may use the continuing education credits to determine if a distributor meets credential (e.g., appointment and/or license) requirements. An institution is typically required when defining appointment types. Like individuals, institutions may be represented in the system as parties, agents, sales representatives or distributors. The system may also require a regulatory jurisdiction when defining certain credential types. An embodiment of the invention comprises a mechanism for specifying credential information and defining the rules that govern credentials (e.g., licenses) held by parties. <cross-reference target="DRAWINGS">FIG. 1</cross-reference> provides an example of some of the decisions that may be made when checking the validity of credentials such as licenses or appointments. For example, the user may specify rules that define one or more of the following types of credential (e.g., license) information: </paragraph>
<paragraph id="P-0031" lvl="2"><number>&lsqb;0031&rsqb;</number> 1. The educational credits required in order to hold a specific type of credential (e.g., step <highlight><bold>102</bold></highlight>). For example, License L requires X units of education credit C. </paragraph>
<paragraph id="P-0032" lvl="2"><number>&lsqb;0032&rsqb;</number> 2. The renewal requirements for a specific type of credential (e.g., step <highlight><bold>104</bold></highlight>). For example, License L must be renewed every T units of time. </paragraph>
<paragraph id="P-0033" lvl="2"><number>&lsqb;0033&rsqb;</number> 3. The residency rules associated with a specific type of credential (e.g., step <highlight><bold>106</bold></highlight>). For example, License L is required in jurisdiction J. The user may associate credential types with product types and a jurisdiction through credential entries in a distributor&apos;s credential record. The record may include &lt;credential type, product, and jurisdiction&gt;. Access to the credential rules through the distributor credential record enables the user to define information relating to the following questions, while factoring in such elements as the type of product to be sold or the state in which it will be sold: </paragraph>
<paragraph id="P-0034" lvl="3"><number>&lsqb;0034&rsqb;</number> a. Is a distributor qualified to hold a credential (for instance, does the distributor have sufficient educational credits)&quest;</paragraph>
<paragraph id="P-0035" lvl="3"><number>&lsqb;0035&rsqb;</number> b. Does the distributor have the right credential to sell (e.g., step <highlight><bold>100</bold></highlight>), Credentials, Jurisdiction, Education Credits, Products service, or illustrate a product&quest;</paragraph>
<paragraph id="P-0036" lvl="7"><number>&lsqb;0036&rsqb;</number> Does the distributor have a credential that will expire (e.g., step <highlight><bold>108</bold></highlight>) within a specified period of time&quest; If any of the above conditions indicates the transaction is not valid, the system executes step <highlight><bold>110</bold></highlight> where it may stop execution of the transaction relating to the invalid credential. Thus, the sales representative may not receive any compensation for invalid transactions. The system&apos;s credentialing mechanism may be utilized to define credential parameters relating to any party in the system (e.g., institutions, distributors, sales representatives, agents, etc . . . ). </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> An embodiment of the invention also provides a mechanism for identifying and defining the rules that govern appointments held by parties. For example, the user may specify rules that define one or more of the following types of information: </paragraph>
<paragraph id="P-0038" lvl="2"><number>&lsqb;0038&rsqb;</number> 1. Does a specific appointment require a certain license (e.g., step <highlight><bold>112</bold></highlight>)&quest; For example, Appointment A requires license L. </paragraph>
<paragraph id="P-0039" lvl="2"><number>&lsqb;0039&rsqb;</number> 2. Does an appointment require errors and omissions (E &amp; O) coverage (e.g., step <highlight><bold>114</bold></highlight>)&quest; For example, Appointment A requires E&amp;O coverage by Distributor D. </paragraph>
<paragraph id="P-0040" lvl="2"><number>&lsqb;0040&rsqb;</number> 3. What are the renewal requirements for a specific type of appointment (e.g., step <highlight><bold>116</bold></highlight>)&quest; For example, Appointment A must be renewed every T units of time. </paragraph>
<paragraph id="P-0041" lvl="2"><number>&lsqb;0041&rsqb;</number> 4. What are the residency rules associated with a specific type of appointment (e.g., step <highlight><bold>118</bold></highlight>)&quest; For example, Appointment A is required in jurisdiction J. The association of an appointment type with a product type, a jurisdiction, and an institution is made in the appointment record associated with a distributor. The record specifies &lt;appointment type, product, jurisdiction, and institution&gt;. The user can access the appointment rules through the distributor license record. These rules enable the user to determine outcomes associated with the following questions, while factoring in such elements as the type of product to be sold or the state in which the product will be sold: </paragraph>
<paragraph id="P-0042" lvl="3"><number>&lsqb;0042&rsqb;</number> a. Is a distributor qualified to hold an appointment&quest; For example, do does the distributor have sufficient E&amp;O coverage&quest;</paragraph>
<paragraph id="P-0043" lvl="3"><number>&lsqb;0043&rsqb;</number> b. Does the distributor have the right appointment to sell a product&quest;</paragraph>
<paragraph id="P-0044" lvl="3"><number>&lsqb;0044&rsqb;</number> c. Does the distributor have an appointment that will expire within a specified period (e.g., step <highlight><bold>120</bold></highlight>)&quest;</paragraph>
<paragraph id="P-0045" lvl="3"><number>&lsqb;0045&rsqb;</number> d. What are the cancellation rules associated with an appointment&quest; The set of appointment rules of the system software can be Appointments, Licenses, Products, Jurisdiction </paragraph>
<paragraph id="P-0046" lvl="7"><number>&lsqb;0046&rsqb;</number> If any of the above conditions indicate the appointment if not valid, the system may execute step <highlight><bold>126</bold></highlight> where it stops execution of the transaction relating to the invalid appointment. If the conditions are met, the system executes step <highlight><bold>122</bold></highlight>, where it flags the transaction being processed as valid and passes the transaction data to commission engine for processing. </paragraph>
<paragraph id="P-0047" lvl="7"><number>&lsqb;0047&rsqb;</number> Transaction Processing Overview </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> Once the credential information (e.g., licensing and appointment data) is defined. The system may be configured to process transaction data associated with the sale of different products. The system may be configured to ensure that the terms of a selling agreement (e.g., an agreement between the parties involved) are followed and that the credential (e.g., licensing and/or appointment or other agreed upon constraints) requirements are not violated with respect to each transaction executed by the system. Sales transaction data comprises the information associated with the sale of one or more products. The system is configured to process one or more transactions at a time and may perform transaction processing collectively (e.g., in batch) if such processing is desirable. However, the invention also contemplates other forms of transaction processing and may, for example, process each transaction entered into the system when it is entered. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> In an embodiment of the invention, the system converts the transaction data into a form that can be processed by the system. For example, the transaction data may be loaded into an object model configured to interface with the system embodying one or more aspects of the invention. The transaction data may indicate which party sold what to whom and identify the appropriate agreements associated with the sale. For example in accordance with one embodiment of the invention, the transaction data identifies which distributor was responsible for the sale and what agreement that distributor is operating under. The system resolves the associations contained in the transaction data and thereby determines the scope of analysis to be performed. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> In an embodiment of the invention, the system also checks on credentials (e.g., licenses and/or appointments) for the distributor&apos;s supervisors. The system may require a license validation when appointments are processed. The logic associated with such processing in accordance with one embodiment of the invention performs the following steps: </paragraph>
<paragraph id="P-0051" lvl="2"><number>&lsqb;0051&rsqb;</number> 1. Determines the credential (e.g., license and/or appointment) requirements for the distributor based on the values of the product, jurisdiction, and institution parameters passed to the function. </paragraph>
<paragraph id="P-0052" lvl="2"><number>&lsqb;0052&rsqb;</number> 2. Determines whether the distributor possesses the required credential (e.g., license and/or appointment) types, or a blanket assignment. For example, some states do not permit a corporation to be licensed, but instead require them to have a blanket assignment. The rules evaluation used to determine the required license and/or appointments can also include other factors such as the compensation type (for example, the first year commission or renewal), the residency of the distributor, or the role of the distributor. </paragraph>
<paragraph id="P-0053" lvl="7"><number>&lsqb;0053&rsqb;</number> If the credential requirements are met, the system may perform commission processing. Otherwise an error results and the transaction associated with the error is not processed by the system. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> In an embodiment of the invention, the system also identifies any other agreement objects affected by the input transaction. If the system locates an affected agreement object, it creates additional transactions that process compensation according to the newly identified agreement commission models. Once all input transactions have been associated with agreements, the system may invoke the commission engine and performs commission processing. However, the system may also enforce credentials and/or constraints independent of any agreement. For instance, companies may use the system to enforce an internal set of credential requirements, policies and/or constraints. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Commission processing involves determining the amounts to be paid to parties involved in the sales transaction. In one embodiment of the invention this occurs by processing the transaction based on rules defined by the selling agreement. However, the rules utilized by the system are not required to be defined in selling agreements. For example, the system may use rules defined in a manner independent of any selling agreement. </paragraph>
<paragraph id="P-0056" lvl="7"><number>&lsqb;0056&rsqb;</number> Distributor Data Object Model </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows a class diagram and relationships representing object models for credentials (e.g., licenses) in an embodiment of the invention. The specific objects described herein are provided for illustrative purposes only and the reader should note that the invention also contemplates other software or hardware configurations that provide the functionality described herein. A distributor data object model <highlight><bold>230</bold></highlight> defines the data that is associated with a distributor and that is utilized to manage the Licensing and Appointments package. The distributor data object model has several properties comprising a SelfInsured property that may indicate if the distributor is self-insured. If not, then there may be associated FSEOPolicy objects. For example, the system may include a set of components (e.g., methods) configured to implement the following general functionality: </paragraph>
<paragraph id="P-0058" lvl="2"><number>&lsqb;0058&rsqb;</number> RecontractStatus may indicate whether or not an inactive distributor may enter into another contract (Valid only if IsActive( ) returns false); </paragraph>
<paragraph id="P-0059" lvl="2"><number>&lsqb;0059&rsqb;</number> RecontractReason may indicate why the distributor may not be recontracted (if applicable, Valid recontract reason codes can be defined in XML or any other structured data format); </paragraph>
<paragraph id="P-0060" lvl="2"><number>&lsqb;0060&rsqb;</number> IsActive( ) which may indicate if the distributor is active, that it, has appointments still in effect; </paragraph>
<paragraph id="P-0061" lvl="2"><number>&lsqb;0061&rsqb;</number> IsAppointed( ) which may indicate if the distributor is properly credentialed (e.g., licensed and/or appointed) to receive credit for a transaction (Ensures that there is a valid credential such as an appointment and/or associated license for the date of the transaction). In one embodiment of the invention, the IsAppointed method evaluates whether a given party in a specific jurisdiction is legally capable of selling a specific product; </paragraph>
<paragraph id="P-0062" lvl="2"><number>&lsqb;0062&rsqb;</number> IsLicensed( ) which may indicate if the distributor is properly licensed (ensures that there is a valid credential (e.g., license) for the date of the transaction. The IsLicensed method evaluates whether a given party in a specific jurisdiction is legally permitted to sell a specific product; </paragraph>
<paragraph id="P-0063" lvl="2"><number>&lsqb;0063&rsqb;</number> IsBonded( ) which may indicate if the distributor is bonded (i.e., has an EOPolicy of type Bond Info); </paragraph>
<paragraph id="P-0064" lvl="2"><number>&lsqb;0064&rsqb;</number> HasGeneralLiability( ) which may indicates if the distributor has general liability insurance (i.e., has an EOPolicy of type General Liability Insurance); </paragraph>
<paragraph id="P-0065" lvl="2"><number>&lsqb;0065&rsqb;</number> getLicenses( ) which may return a collection of all FSLicense objects associated with the distributor; </paragraph>
<paragraph id="P-0066" lvl="2"><number>&lsqb;0066&rsqb;</number> getAppointments( ) which may return a collection of FSAppointment objects associated with the distributor; </paragraph>
<paragraph id="P-0067" lvl="2"><number>&lsqb;0067&rsqb;</number> getAllEOCoverages( ) which may return a collection of FSEOPolicy objects associated with the distributor; </paragraph>
<paragraph id="P-0068" lvl="2"><number>&lsqb;0068&rsqb;</number> getBackgroundChecks( ) which may denote a collection of FSBackgroundCheck objects associated with the distributor; </paragraph>
<paragraph id="P-0069" lvl="2"><number>&lsqb;0069&rsqb;</number> getCECredits( ) which may denote a collection of FSContinuingEducationCredit objects associated with the distributor; </paragraph>
<paragraph id="P-0070" lvl="2"><number>&lsqb;0070&rsqb;</number> getEOPolicies( ) which may return a collection of all FSEOPolicy objects of type Errors and Omissions Policy associated with the distributor; </paragraph>
<paragraph id="P-0071" lvl="2"><number>&lsqb;0071&rsqb;</number> getBondInfo( ) which may return a collection of all FSEOPolicy objects of type Bond Info associated with the distributor; </paragraph>
<paragraph id="P-0072" lvl="2"><number>&lsqb;0072&rsqb;</number> getGeneralLiability( ) which may return a collection of all FSEOPolicy objects of type General Liability Insurance associated with the distributor. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> The names utilized to describe components, objects, and/or methods referred to above and throughout this description are for example only. The invention contemplates any component or set of components that implements the functionality described therein. </paragraph>
<paragraph id="P-0074" lvl="7"><number>&lsqb;0074&rsqb;</number> Licensing Object Models </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> In an embodiment of the invention, the system comprises a License class which represents a physical license issued to a distributor. The license class has several properties comprising a LicenseType denoting the type of license (for example, agent, broker, and so on). The license types may be defined in a structured file such as an XML file. The system may include the following components: </paragraph>
<paragraph id="P-0076" lvl="2"><number>&lsqb;0076&rsqb;</number> a LicenseClass denoting the class of license (for example, individual, corporate, partnership and may define the license classes in a structured file; </paragraph>
<paragraph id="P-0077" lvl="2"><number>&lsqb;0077&rsqb;</number> a LicenseNumber denoting the license number. This can be any alphanumeric string; </paragraph>
<paragraph id="P-0078" lvl="2"><number>&lsqb;0078&rsqb;</number> Jurisdiction denotes the jurisdiction (state/province) associated with the license. Jurisdiction codes are defined in a structured file such as XML; </paragraph>
<paragraph id="P-0079" lvl="2"><number>&lsqb;0079&rsqb;</number> The ResidentStatus may indicate whether the party associated with the appointment is a resident of the jurisdiction for which it is valid. The class may also include a LegalName denoting the legal name of the distributor as it appears on the license; </paragraph>
<paragraph id="P-0080" lvl="2"><number>&lsqb;0080&rsqb;</number> a DBAName denoting the &ldquo;Doing Business As&rdquo; name as it appears on the license; </paragraph>
<paragraph id="P-0081" lvl="2"><number>&lsqb;0081&rsqb;</number> a DistributorData denoting a backpointer to the FSDistributor Data; </paragraph>
<paragraph id="P-0082" lvl="2"><number>&lsqb;0082&rsqb;</number> a Terminate( ) to mark the license as being terminated; </paragraph>
<paragraph id="P-0083" lvl="2"><number>&lsqb;0083&rsqb;</number> a Renew( ) to renew the license for the specified period; </paragraph>
<paragraph id="P-0084" lvl="2"><number>&lsqb;0084&rsqb;</number> a getLicenseLines( ) providing a helper function that returns a collection of FSRequests associated with this FSLicense; </paragraph>
<paragraph id="P-0085" lvl="2"><number>&lsqb;0085&rsqb;</number> a getRequests( ) providing a helper function that returns a collection of FSRequests associated with this FSLicense; LicenseLine <highlight><bold>210</bold></highlight> class may represent the line of insurance covered by particular license. Licenseline <highlight><bold>210</bold></highlight> class has several properties comprising a LicenseLine denoting the line of authority for the license; </paragraph>
<paragraph id="P-0086" lvl="2"><number>&lsqb;0086&rsqb;</number> a License denoting the associated FSLicenseDocumentation; </paragraph>
<paragraph id="P-0087" lvl="2"><number>&lsqb;0087&rsqb;</number> a Terminate to mark the license line as being terminated; </paragraph>
<paragraph id="P-0088" lvl="2"><number>&lsqb;0088&rsqb;</number> a Renew to renew the license line for the specified period; </paragraph>
<paragraph id="P-0089" lvl="2"><number>&lsqb;0089&rsqb;</number> one or more LicenseLine classes may be instantiated by a License class <highlight><bold>220</bold></highlight>. </paragraph>
<paragraph id="P-0090" lvl="2"><number>&lsqb;0090&rsqb;</number> a License <highlight><bold>220</bold></highlight> class may represent a physical license issued to a distributor. The license class <highlight><bold>220</bold></highlight> can have several methods and properties comprising: </paragraph>
<paragraph id="P-0091" lvl="2"><number>&lsqb;0091&rsqb;</number> a LicenseType, a LicenseClass, a LicenseNumber, a Jurisdiction, ResidentStatus and a LegalName. LicenseType may designate the type of license (for example, agent, broker, and so on). </paragraph>
<paragraph id="P-0092" lvl="2"><number>&lsqb;0092&rsqb;</number> LicenseClass designates the class of license (for example, individual, corporate, partnership). </paragraph>
<paragraph id="P-0093" lvl="2"><number>&lsqb;0093&rsqb;</number> LicenseNumber designates the license number. Jurisdiction designates the jurisdiction (state/province) associated with the license (Jurisdiction codes may be defined in an XML format). </paragraph>
<paragraph id="P-0094" lvl="2"><number>&lsqb;0094&rsqb;</number> ResidentStatus indicates whether the party associated with the appointment is a resident of the jurisdiction for which it is valid. </paragraph>
<paragraph id="P-0095" lvl="2"><number>&lsqb;0095&rsqb;</number> LegalName designates the legal name of the distributor as it appears on the license. A helper function that returns a collection of requests associated with this License <highlight><bold>220</bold></highlight>. In an embodiment of the invention, one or more instances of the License <highlight><bold>220</bold></highlight> class may be associated with a status class <highlight><bold>1050</bold></highlight> and an appointment class <highlight><bold>240</bold></highlight>. </paragraph>
<paragraph id="P-0096" lvl="7"><number>&lsqb;0096&rsqb;</number> Appointment Object Model </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> In an embodiment of the invention, an appointment class <highlight><bold>240</bold></highlight> encapsulates the data associated with an appointment (e.g., a type of credential). The appointment object model may comprises the following: </paragraph>
<paragraph id="P-0098" lvl="2"><number>&lsqb;0098&rsqb;</number> a License denoting the License associated with this appointment; </paragraph>
<paragraph id="P-0099" lvl="2"><number>&lsqb;0099&rsqb;</number> a Jurisdiction denoting the jurisdiction (state/province) associated with the appointment (The jurisdiction is determined by the licenses associated with the appointment. It is provided on the appointment for convenience. Jurisdiction codes can be defined in XML format or some other format.); </paragraph>
<paragraph id="P-0100" lvl="2"><number>&lsqb;0100&rsqb;</number> a SubJurisdiction denoting the sub-jurisdiction (county) associated with the appointment (This field is only applicable for certain jurisdictions. Sub-jurisdiction codes are defined in an XML format); </paragraph>
<paragraph id="P-0101" lvl="2"><number>&lsqb;0101&rsqb;</number> a Company denoting the financial services company for which the appointment is being issued; </paragraph>
<paragraph id="P-0102" lvl="2"><number>&lsqb;0102&rsqb;</number> a ResidentStatus indicating whether the party associated with the appointment is a resident of the jurisdiction for which it is valid; a Parent indicating the distributor firm from which the blanket appointment comes; </paragraph>
<paragraph id="P-0103" lvl="2"><number>&lsqb;0103&rsqb;</number> a Distributor Data denoting a backpointer to the FSDistributorData. </paragraph>
<paragraph id="P-0104" lvl="7"><number>&lsqb;0104&rsqb;</number> License and Appointments Validation </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows a block diagram illustrating data communication during the credential (e.g., license) validation process in accordance with an embodiment of the invention. When one or more transaction inputs <highlight><bold>340</bold></highlight> are received, the rule engine <highlight><bold>320</bold></highlight> queries the database to retrieve data related to the sales party involved in the transaction. The rule engine may load test rule <highlight><bold>330</bold></highlight> files. Test rule files are designed by users to specify tests to be carried out on the transaction data. Test rules can be stored in files using a standardized format (e.g. XML files, text, or any other type of structured data file). The rule engine also loads the distributors&apos; credential information such as the license and/or appointment data <highlight><bold>350</bold></highlight>. Once the rule engine validates the credential information associated with the transaction against the test rules, it may store the results in one or more validation results files <highlight><bold>360</bold></highlight>. The transaction data may then be updated with the validated credential information and returned to update the database. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> In an embodiment of the invention, the system is configured to process one or more transactions at a time and may perform transaction processing collectively if such processing is desirable. The system configured in accordance with an embodiment of the invention may be composed of several entities allowing for performing one or more steps of the transaction data processing. An entity such as the commission engine may determine the arrangement of input such that validation can be performed more efficiently (e.g., collectively). The commission engine or some other component may ready the data for processing during an initialization process. The system may implement a rule engine, capable of determining the set of tests that need be validated. For example, the RuleSet class and a set of associated objects reachable from that class (e.g., preconditions, test, etc . . . ) may provide the functionality referred to as the rule engine. Thus, the rule engine may comprise a collection of objects working together. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> The rule engine is capable of arranging the input to be passed along to an associated test part (e.g., iTestPart) and the compensation engine (e.g., part of the DMS system) runs an initialization step where data can be denormalized. The system can then pass off the data to a representative instance of an object containing the set of tests (e.g., iTtestPart). The tests may comprise an interface that supports the ability to perform batch validation for all other instances of tests given that they contain input data. In one embodiment of the invention, the ruleset comprises a list of rules for testing input to determine if data satisfies the requirements. The rules evaluate distributor&apos;s data (information about distributors, products, and so on) determining if it meets requirements (or preconditions) for the system rules. For example, the APPOINTMENT_TEST in the Appointment Rule may evaluate whether a particular distributor has the appointments necessary to sell a product in a particular jurisdiction. The rule engine can determine whether compensation should be paid and whether or not a particular distributor is eligible to sell a particular product. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> The system may contain a set of defined rule sets. If the data satisfies the requirements, the rule is set considered. Each rule is made of one or more elements including: </paragraph>
<paragraph id="P-0109" lvl="2"><number>&lsqb;0109&rsqb;</number> A precondition&mdash;Defines circumstances under which the rule applies. If the precondition is not satisfied, the rule does not apply. </paragraph>
<paragraph id="P-0110" lvl="2"><number>&lsqb;0110&rsqb;</number> A test&mdash;A Boolean expression that determines if the rule is satisfied. </paragraph>
<paragraph id="P-0111" lvl="2"><number>&lsqb;0111&rsqb;</number> An explanation&mdash;An optional message that explains the rule failure. </paragraph>
<paragraph id="P-0112" lvl="7"><number>&lsqb;0112&rsqb;</number> In an embodiment of the invention, preconditions to a rule comprise a list of either generic preconditions or specialized preconditions (for example, a rule may apply to a particular product or jurisdiction) designed to cover common cases. A product precondition may be satisfied if the input refers to a given product specified in the precondition. This precondition can map to an object (SCCMProduct.Name). </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> A product class precondition may be satisfied if the input refers to a product that has the class specified in the precondition. This precondition maps to SCCMProduct.ProductClass. In an embodiment of the invention, a jurisdiction set precondition is satisfied if the input refers to one of a set of jurisdictions specified in the precondition. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> A jurisdiction precondition may be satisfied if the input refers to a jurisdiction specified in the precondition. A start date precondition may be satisfied if the date of the input is later than or equal to the date specified. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> An end date precondition is satisfied if the date of the input is earlier than the date specified. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> A generic precondition is useful when more specific preconditions are inadequate. It is satisfied if the specified property on the specified input object has the specified value. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> In an embodiment of the invention, all transactions are required to pass however other requirements may be set. Tests can be further combined using standard Boolean operators AND, OR, and NOT. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> The license line test may be satisfied if the distributor referred to by the input has the specified license line in the specified jurisdiction. For example: does John Smith have a Series 66 license for California&quest;</paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> The appointment test may be satisfied if the distributor referred to by the input has the specified appointment in the specified jurisdiction. For example: is John appointed for Variable Life in New York&quest;</paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> The background check test may be satisfied if the distributor referred to by the input has passed the specified background check with the specified decision. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> The errors and omissions test may be satisfied if the distributor referred to by the input has the specified level of errors and omissions coverage. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> The liability test may be satisfied if the distributor referred to by the input has the specified level of liability coverage. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> The continuing education test may be satisfied if the distributor referred to by the input has the specified number of continuing education credit hours. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> A generic test is useful when more specific tests are inadequate. It is satisfied if the specified property on the specified input object has the specified value. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows a flowchart illustrating the steps involved in validating credential data in accordance with an embodiment of the invention. Transaction data is received by the system in <highlight><bold>410</bold></highlight>. Step <highlight><bold>410</bold></highlight> involves access to the system automatically or manually by users through one or more means for interfacing the system with users (e.g. Web interface, API) described above. The system can determine in <highlight><bold>420</bold></highlight> the set of distributors associated with the transaction. The system then determines a set of tests to be performed for each transaction or allocation in <highlight><bold>430</bold></highlight>. The system executes the set of tests in batch in <highlight><bold>435</bold></highlight>. The system tests whether each distributor is properly licensed for of the transactions processed in <highlight><bold>440</bold></highlight>. If the distributor&apos;s credentials satisfy the tests, the distributor&apos;s data is appointed for the transaction in <highlight><bold>460</bold></highlight> (e.g., the distributor is compensated). If a distributor&apos;s license does not satisfy the test rules in <highlight><bold>440</bold></highlight> then the distributor is dismissed from the current transaction in <highlight><bold>450</bold></highlight> (e.g., no compensation is credited), and the next distributor on the list of distributors involved in the transaction is selected for further license and appointments testing. Upon completion of the evaluation, the process may iterate back to step <highlight><bold>410</bold></highlight> or <highlight><bold>440</bold></highlight>. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> In an embodiment of the invention, a distributor may be considered as appropriately credentialed for a transaction if for example, on a given date, the distributor has a credentials (e.g., a license) that is valid for the jurisdiction in which the transaction occurred. The code below (in Object Query Language, OQL) performs an example of a license check against the data as stored in the database, according to the object model described above: 
<image file="US20030004840A1-20030102-P00001.TIF" id="EMI-00001"></image>
<image file="US20030004840A1-20030102-P00002.TIF" id="EMI-00002"></image>
</paragraph>
<paragraph id="P-0127" lvl="7"><number>&lsqb;0127&rsqb;</number> A non-empty result set indicates that the distributor is properly licensed. As the above OQL indicates, a join is required across four (4) logical tables. This method however is costly in terms of processing time. Since the query performs joins on several tables, utilizing database table indexing functionality may increase the speed. With this method the cost of determining if a distributor is licensed can be significant, especially given the number of rows that will be in the tables, and especially the table associated with FSStatus. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> Distributor credential validation may be performed in steps wherein each step yields only a subset of data to be processed resulting in a faster search and thus faster processing. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> comprises a flowchart illustrating the steps involved in validating credentials such as licenses using an alternative approach to credential validation in an embodiment of the invention. Data processing starts with the denormalization of the data from several tables to be input into a denormalized table in <highlight><bold>510</bold></highlight>. The system obtains a distributor&apos;s credential information in <highlight><bold>520</bold></highlight>. The system obtains the transaction information in <highlight><bold>530</bold></highlight>. The system obtains test rules information in <highlight><bold>540</bold></highlight> and then checks for credential (e.g., license) validity based on distributor&apos;s information, transaction information and credential information in <highlight><bold>550</bold></highlight>. The system then joins the results of the validation of distributor&apos;s licenses with the denormalized data. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> A sample Object Query Language (OQL) code performing this check against the data as stored according to the object model described above is as follows: </paragraph>
<paragraph id="P-0131" lvl="1"><number>&lsqb;0131&rsqb;</number> SELECT app.Parent </paragraph>
<paragraph id="P-0132" lvl="1"><number>&lsqb;0132&rsqb;</number> FROM FSLicenseLine ll, </paragraph>
<paragraph id="P-0133" lvl="2"><number>&lsqb;0133&rsqb;</number> FSLicense lic, </paragraph>
<paragraph id="P-0134" lvl="2"><number>&lsqb;0134&rsqb;</number> FSAppointment app, </paragraph>
<paragraph id="P-0135" lvl="2"><number>&lsqb;0135&rsqb;</number> FSStatus appStatus, </paragraph>
<paragraph id="P-0136" lvl="2"><number>&lsqb;0136&rsqb;</number> FSStatus licStatus, </paragraph>
<paragraph id="P-0137" lvl="2"><number>&lsqb;0137&rsqb;</number> FSStatus llStatus </paragraph>
<paragraph id="P-0138" lvl="1"><number>&lsqb;0138&rsqb;</number> WHERE ll.LicenseLine&equals;&lsqb;License Line&rsqb;</paragraph>
<paragraph id="P-0139" lvl="1"><number>&lsqb;0139&rsqb;</number> AND ll.License&equals;lic </paragraph>
<paragraph id="P-0140" lvl="1"><number>&lsqb;0140&rsqb;</number> AND app.License&equals;lic </paragraph>
<paragraph id="P-0141" lvl="1"><number>&lsqb;0141&rsqb;</number> AND app.LicenseLines&equals;ll </paragraph>
<paragraph id="P-0142" lvl="1"><number>&lsqb;0142&rsqb;</number> AND app.DistributorData&equals;&lsqb;Distributor GID&rsqb;</paragraph>
<paragraph id="P-0143" lvl="1"><number>&lsqb;0143&rsqb;</number> AND app.Jurisdiction&equals;&lsqb;Jurisdiction&rsqb;</paragraph>
<paragraph id="P-0144" lvl="1"><number>&lsqb;0144&rsqb;</number> AND (app.Subjurisdiction&equals;&lsqb;Sub-jurisdiction&rsqb;OR app.Subjurisdiction&equals;&minus;1) </paragraph>
<paragraph id="P-0145" lvl="1"><number>&lsqb;0145&rsqb;</number> AND appStatus.Object&equals;app </paragraph>
<paragraph id="P-0146" lvl="1"><number>&lsqb;0146&rsqb;</number> AND licStatus.Object&equals;lic </paragraph>
<paragraph id="P-0147" lvl="1"><number>&lsqb;0147&rsqb;</number> AND llStatus.Object&equals;ll </paragraph>
<paragraph id="P-0148" lvl="1"><number>&lsqb;0148&rsqb;</number> AND (appStatus.StartDate&lt;&equals;&lsqb;Transaction Date&rsqb;</paragraph>
<paragraph id="P-0149" lvl="1"><number>&lsqb;0149&rsqb;</number> AND appStatus.EndDate&gt;&lsqb;Transaction Date&rsqb;</paragraph>
<paragraph id="P-0150" lvl="1"><number>&lsqb;0150&rsqb;</number> AND (licStatus.StartDate&lt;&equals;&lsqb;Transaction Date&rsqb;</paragraph>
<paragraph id="P-0151" lvl="1"><number>&lsqb;0151&rsqb;</number> AND licStatus.EndDate&gt;&lsqb;Transaction Date&rsqb;</paragraph>
<paragraph id="P-0152" lvl="1"><number>&lsqb;0152&rsqb;</number> AND (llStatus.StartDate&lt;&equals;&lsqb;Transaction Date&rsqb;</paragraph>
<paragraph id="P-0153" lvl="1"><number>&lsqb;0153&rsqb;</number> AND llStatus.EndDate&gt;&lsqb;Transaction Date&rsqb;</paragraph>
<paragraph id="P-0154" lvl="1"><number>&lsqb;0154&rsqb;</number> AND app.StatusCode NOT IN (&lt;List of Invalid Statuses&gt;) </paragraph>
<paragraph id="P-0155" lvl="1"><number>&lsqb;0155&rsqb;</number> AND lic.StatusCode NOT IN (&lt;List of Invalid Statuses&gt;) </paragraph>
<paragraph id="P-0156" lvl="1"><number>&lsqb;0156&rsqb;</number> AND ll.StatusCode NOT IN (&lt;List of Invalid Statuses&gt;) </paragraph>
<paragraph id="P-0157" lvl="7"><number>&lsqb;0157&rsqb;</number> A non-empty result set indicates that the distributor is appointed. </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> The system may perform credential checks when running a compensation engine. The reader should note, however, that such credential checks may be performed at other times and by other engines or components. The process of validating distributors&apos; credentials can be referred to in an embodiment of the invention as the the license check phase. The compensation engine may be run on a periodic basis to calculate compensation for new sales transactions since the most recent run of the engine. A transaction will result in multiple allocations. If any of these allocations are associated with the sale of any products that require the distributor be credential (e.g., licensed or appointed) then the allocation passes through the license check phase. The number of transactions and allocations that are processed in any given run varies per deployment, ranging from tens of thousands to several million. Thus the performance of the credential check phase may affect performance of the entire system. </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> An embodiment of the invention ensures that credential validation can be efficiently performed. First, the system denormalizes the credential information (e.g., license and appointment data) into separate tables. To determine if a distributor is appropriately credentialed, the system may perform a query against a single table. In one embodiment of the invention, a single SELECT statement (with the exception of blanket appointments, which result in as many queries as the depth of the blanket appointment) can be utilized to query the database. The invention also contemplates other queries. To further ensure the performance of the credential check phase, the system is enabled to collectively perform license and appointment checks (also referred to herein as credential checks). In an embodiment of the invention, the size of the collection of data to be submitted (e.g., a batch) is determined by the commission engine&apos;s batch size. In an embodiment of the invention, the collection size is in the range of five thousand to ten thousand items. However, the size of the batch submitted may vary depending upon the capacity of the system. To perform the query collectively, the system inputs the selection criteria in an input table as a single INSERT statement. Then, the system performs a single join from the input table against the denormalized data table. In the case of blanket appointments, subsequent queries of inherited appointments can be collectively batched as well. </paragraph>
<paragraph id="P-0160" lvl="0"><number>&lsqb;0160&rsqb;</number> For example, to validate 100,000 allocations while verifying only licenses, the original query would have resulted in 100,000 queries, each requiring a four-table join. Not only is this extremely costly in terms of database performance, but it also results in 100,000 network round trips to communicate with the database. In the same example, using the method proposed in the invention, there is an initial cost to denormalize the license table. However, this operation needs to be performed only once at the beginning of the engine run. Once the data is denormalized, the system may use the collective processing technique described herein. Thus, for each collection of data (e.g., a batch of 5,000), the system requires only two network round-trips: one to insert the criteria into the input table, and one to perform a join of the input table against the denormalized data table. Considering the batched INSERT as a single statement, to validate the 100,000 allocations, the system incurs only the cost of 40 network round-trips, and 40 queries, plus the cost of the initial denormalization. </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> An embodiment of the invention is configured to interface with a Distributor Management System (DMS). An example of such a DMS system can be found in the co-pending application (U.S. Ser. No. 09/810,514) entitled &ldquo;Method and System for Managing Distributor Information&rdquo;, the specification of which is incorporated herein by reference. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> Thus, a method and apparatus for collectively processing credential information is described. Particular embodiments described herein are illustrative only and should not limit the present invention thereby. The claims and their full scope of equivalents define the invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. In a computer system, a method for collectively performing validation of credential information comprising: 
<claim-text>obtaining a set of credential information; </claim-text>
<claim-text>loading a set of rule data associated with said credential information from at least one data source; </claim-text>
<claim-text>obtaining at least one sales transaction associated with at least one distributor; </claim-text>
<claim-text>computing a commission for said at least one distributor; </claim-text>
<claim-text>converting said at least one sales transaction into a collective data set for submission to a rule engine; </claim-text>
<claim-text>validating said collective group to produce a validation result, said validation result indicating whether to credit said commission to said at least one distributor; and </claim-text>
<claim-text>executing a predetermined action depending on said validation result. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said obtaining said set of credential information further comprises denormalizing data from a plurality of database tables. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said loading said set of rule data further comprises loading said set of rule data from a standard format data file. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference> wherein said standard format data file further comprises parsing data from a file having an Extensible Markup Language (XML) format. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said validating said collective group further comprises: 
<claim-text>determining said set of rules associated with said collective group by using a set of preconditions to filter among a plurality of rules, said rule data comprising at least one test having an associated type; </claim-text>
<claim-text>partitioning said set of rules based on said type of said at least one test associated with said set of rules; </claim-text>
<claim-text>selecting a processor for each of said type of said at least one test, said processor preparing said collective group wherein said collective group comprises tests associated with said test type; </claim-text>
<claim-text>determining for said set of rule data whether said at least one test associated with said set of rules are valid. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said step of executing a predetermined action further comprises computing commission allocations to said sales party. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A method for determining whether to compensate a distributor for at least one sales transaction comprising: 
<claim-text>initiating a sale of at least one product; </claim-text>
<claim-text>obtaining information associated with said sale of said at least one product; </claim-text>
<claim-text>recording said information into a computer system in the form of transaction data; </claim-text>
<claim-text>obtaining a rule set to process said transaction data, said rule set comprising credential information identifying regulatory constraints placed on at least one sales representative associated with said initiating said sale of said at least one product; </claim-text>
<claim-text>processing said transaction data using said rule set, wherein said processing comprises collectively determining if said credential information of said at least one sales representative conforms to said regulatory constraints; </claim-text>
<claim-text>crediting said at least one sales representative for said sale of said at least one product. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A method for collectively managing the payment of commissions to at least one sales representative comprising: 
<claim-text>determining a commission structure associated with selling at least one product; </claim-text>
<claim-text>defining a rule set identifying when said commission is to be paid, said rule set comprising credential information identifying regulatory constraints placed on at least one distributor associated with said selling of said at least one product; </claim-text>
<claim-text>obtaining at least one sales transaction associated with at least one distributor; </claim-text>
<claim-text>converting said at least one sales transaction into a collective data set; </claim-text>
<claim-text>validating said collective data set to produce a validation result, said validation result indicating whether to credit said commission to said at least one distributor; and </claim-text>
<claim-text>executing a predetermined action depending on said validation result, said predetermined action comprising payment of said commission when said validation result verifies said credential information.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004840A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004840A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004840A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004840A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004840A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004840A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
