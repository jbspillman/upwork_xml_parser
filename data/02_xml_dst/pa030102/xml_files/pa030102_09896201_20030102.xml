<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002526A1-20030102-D00000.TIF SYSTEM "US20030002526A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002526A1-20030102-D00001.TIF SYSTEM "US20030002526A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002526A1-20030102-D00002.TIF SYSTEM "US20030002526A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002526A1-20030102-D00003.TIF SYSTEM "US20030002526A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002526A1-20030102-D00004.TIF SYSTEM "US20030002526A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002526A1-20030102-D00005.TIF SYSTEM "US20030002526A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002526A1-20030102-D00006.TIF SYSTEM "US20030002526A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002526A1-20030102-D00007.TIF SYSTEM "US20030002526A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002526A1-20030102-D00008.TIF SYSTEM "US20030002526A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002526A1-20030102-D00009.TIF SYSTEM "US20030002526A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002526A1-20030102-D00010.TIF SYSTEM "US20030002526A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002526A1-20030102-D00011.TIF SYSTEM "US20030002526A1-20030102-D00011.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002526</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896201</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04J003/16</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>370</class>
<subclass>466000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>370</class>
<subclass>401000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Stateful business-to-business protocol exchange</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Daniel</given-name>
<middle-name>M.</middle-name>
<family-name>Dias</family-name>
</name>
<residence>
<residence-us>
<city>Mohegan Lake</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Stewart</given-name>
<middle-name>L.</middle-name>
<family-name>Palmer</family-name>
</name>
<residence>
<residence-us>
<city>New York</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Hidayatullah</given-name>
<family-name>Shaikh</family-name>
</name>
<residence>
<residence-us>
<city>Mohegan Lake</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>James</given-name>
<middle-name>Thomas</middle-name>
<family-name>Rayfield</family-name>
</name>
<residence>
<residence-us>
<city>Ridgefield</city>
<state>CT</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>International Business Machines Corporation</organization-name>
<address>
<city>Armonk</city>
<state>NY</state>
</address>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>Ryan, Mason &amp; Lewis, LLP</name-1>
<name-2></name-2>
<address>
<address-1>90 Forest Avenue</address-1>
<city>Locust Valley</city>
<state>NY</state>
<postalcode>11562</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method of communicating between two business entities, each of the business entities utilizing a different communication protocol, wherein a business conversation is established between the entities, comprises the steps of: providing a business-to-business (B2B) protocol exchange for facilitating communications between the business entities, the B2B protocol exchange being operatively connected to the business entities. The method further includes the step of receiving, at the B2B protocol exchange, a message from one of the business entities in a first communication protocol, translating the received message in the first communication protocol into a translated message in a second protocol used by another of the business entities and sending the translated message to the other business entity. In this manner, the present invention provides a framework for facilitating communication between two business entities implemented using different communication protocols. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates generally to electronic commerce systems, and more particularly relates to a business-to-business protocol exchange for connecting multiple electronic marketplaces, buyers and/or suppliers to each other using different communications protocols. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> With the increasing popularity of the Internet (e.g., World Wide Web), businesses, including commercial enterprises, government and academia, can communicate with one another, for example, through electronic procurement (e-procurement) systems or electronic marketplaces (e-marketplaces). Many such marketplaces and/or trading networks have emerged and are commercially available, for example, WebSphere Commerce Suite Marketplace Edition (trademark of IBM Corporation), Ariba Buyer and Ariba Marketplace (trademarks of Ariba, Inc.), Market Set (trademark of SAPMarkets Inc.), and ConnectTrade (trademark of Metiom, Inc.). </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Since there is no standard communication protocol which is used for all procurement systems, each of the conventional procurement systems and marketplaces may use different interaction protocols to communicate between buyers, the procurement system or marketplace, and suppliers for browsing catalogs, creating quotes or shopping carts, sending orders, etc. For example, Ariba has defined a punch-out process with messages defined in a Commerce XML (cXML) protocol, Metiom uses an Open Buying on the Internet (OBI) protocol, mySAP utilizes a protocol known as Open Catalog Interface (OCI), and other vendors have defined additional protocols. These protocols are stateful, meaning that data sent in one of the messages between the entities is used in a subsequent interchange between the entities. More specifically, the communications between the entities typically occurs in a long running conversation comprised of a sequence of messages, with the information contained in one message in the conversation being used in the content of later messages. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Presently, in a conventional e-commerce architecture buyers using a given procurement system or marketplace are limited to transacting with suppliers which implement the same protocol as that specified by the given procurement system or marketplace. Therefore, there is a need for a framework which enables buyers utilizing a procurement system or marketplace employing one (stateful) protocol to transact with a supplier or marketplace using another (stateful) protocol. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The present invention provides techniques for enabling buyers utilizing a procurement system or marketplace employing one stateful protocol to communicate with suppliers using another stateful protocol. The invention includes a business-to-business (B2B) protocol exchange, operatively connected to one or more buyers and suppliers, for translating a message received in one communication protocol into a translated message using one or more different communication protocols, as required by a predetermined recipient of the translated message. The translation of subsequent messages between a buyer and seller may depend on state information provided by previous messages of a conversation between the buyer and the seller. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> In one illustrative aspect of the invention, a method of communicating between two business entities, each of the business entities utilizing a different communication protocol, wherein a business conversation is established between the entities, includes providing a B2B protocol exchange for facilitating communications between the business entities, the protocol exchange being operatively connected to the business entities. The method further includes receiving, at the B2B protocol exchange, a message from one of the business entities in a first communication protocol, translating the received message in the first communication protocol into a translated message in a second protocol used by another of the business entities, and sending the translated message to the other business entity. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In another illustrative aspect of the invention, a B2B system is provided which includes a B2B protocol exchange connected to one or more suppliers and at least one of a buyer and a procurement system. The protocol exchange of the present invention enables the buyer and/or procurement system which is communicating in a first protocol to operatively transact with the suppliers which are communicating in a different protocol by translating messages from one another into the protocol used by the particular system. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> These and other objects, features and advantages of the present invention will become apparent from the following detailed description of illustrative embodiments thereof, which is to be read in connection with the accompanying drawings.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram illustrating a conventional framework in which buyers and sellers transact through different procurement systems and marketplaces. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram illustrating a business-to-business (B2B) framework in which buyer systems and supplier systems transact with each other using different protocols via a stateful B2B protocol exchange, in accordance with one aspect of the present invention. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram illustrating information flow for a transaction between a buyer and a supplier using a conventional procurement system or marketplace. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram illustrating information flow between a buyer and a supplier which employ different protocols and transact through a stateful B2B protocol exchange, in accordance with the present invention. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a logical flow diagram illustrating a network catalog identification request performed by the B2B protocol exchange of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, in accordance with one aspect of the invention. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 6A and 6B</cross-reference> are logical flow diagrams illustrating a network catalog logon performed by the B2B protocol exchange of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, in accordance with another aspect of the invention. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a logical flow diagram illustrating a shopping cart translation performed by the B2B protocol exchange of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, in accordance with the present invention. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a logical flow diagram illustrating an exemplary transaction between a mySAP buyer system and an Ariba supplier system using the B2B protocol exchange, in accordance with the present invention. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a logical flow diagram illustrating an exemplary shopping cart translation between an Ariba protocol and a mySAP HyperText Markup Language (HTML) protocol using the B2B protocol exchange, in accordance with the present invention. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a block diagram illustrating a generalized data processing system architecture for implementing the methodologies of the present invention</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT </heading>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates a conventional framework <highlight><bold>100</bold></highlight> for business-to-business (B2B) transactions. In the conventional framework <highlight><bold>100</bold></highlight>, buyer systems <highlight><bold>110</bold></highlight>, <highlight><bold>112</bold></highlight> such as procurement systems (e.g., Ariba Buyer/Operating Resource Management System (ORMS)) and marketplaces, execute B2B operations with supplier systems <highlight><bold>122</bold></highlight>, <highlight><bold>124</bold></highlight>, <highlight><bold>126</bold></highlight>, such as Web Commerce Servers (e.g., IBM WebSphere Commerce Suite) and other marketplaces. These operations are typically executed over one or more networks <highlight><bold>114</bold></highlight>, <highlight><bold>116</bold></highlight>, <highlight><bold>118</bold></highlight>, <highlight><bold>120</bold></highlight> and include transactions including, for example, order placement, catalog shopping, and requests-for-quote (RFQ). The buyer systems <highlight><bold>110</bold></highlight>, <highlight><bold>112</bold></highlight> typically communicate with users via respective web browsers <highlight><bold>102</bold></highlight>, <highlight><bold>104</bold></highlight> over a corresponding network <highlight><bold>106</bold></highlight>, <highlight><bold>108</bold></highlight>, respectively. Some operations such as network catalog access may flow directly from browsers to suppliers if a network catalog access path <highlight><bold>128</bold></highlight> is available (e.g., a firewall from a private intranet to the public internet). </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> As previously stated, one difficulty with a conventional B2B framework is that there are a number of different buyer-to-supplier protocols presently being used (e.g., Ariba punch-out, Metiom OBI, etc.) or contemplated. Many buyer systems and supplier systems support only a single protocol. Consequently, a buyer system and supplier system that do not support the same protocol cannot communicate with one another using the conventional B2B framework. Although some buyer systems and/or supplier systems may support multiple protocols (e.g., Supplier 2 in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>), a system which supports multiple protocols adds significantly to the cost and overhead of the overall system. Moreover, it would be difficult to configure the conventional framework to support new protocols as they are brought online due, at least in part, to the fact adding a new protocol to a conventional system already employing a set protocol is difficult. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The present invention will be described herein in the context of a data processing system embodying an illustrative B2B framework for communicating between buyer systems and supplier systems that may be incompatible (i.e., those systems that do not support a common B2B interaction protocol or multiple protocols). It is to be appreciated, however, that the techniques described herein may be applied generally to a wide variety of system configurations for facilitating transactions between buyers and suppliers using disparate procurement systems and marketplaces. The term &ldquo;network&rdquo; as used herein is intended to refer generally to any type of communication medium or channel for conveying transmitted information, including a wireless communication link, such as, but not limited to, radio frequency, satellite, microwave, etc., and a dedicated communication connection, such as, but not limited to, telephone, cable, fiber optic, etc. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates a B2B framework <highlight><bold>200</bold></highlight>, formed in accordance with one aspect of the invention. The B2B framework <highlight><bold>200</bold></highlight> includes one or more browsers <highlight><bold>202</bold></highlight>, <highlight><bold>204</bold></highlight> connected to one or more buyer systems <highlight><bold>210</bold></highlight>, <highlight><bold>212</bold></highlight>, respectively, via one or more networks <highlight><bold>206</bold></highlight>, <highlight><bold>208</bold></highlight>, respectively. It is to be appreciated that more than one browser may be connected to a single buyer system over the same or different networks. Moreover, buyer system 1 (<highlight><bold>210</bold></highlight>) is depicted as communicating with a first protocol (e.g., protocol A) while buyer system N (<highlight><bold>212</bold></highlight>) communicates using a second protocol (e.g., protocol B), although the invention similarly contemplates that the buyer systems may communicate using the same protocol. Additional buyer systems may communicate using different protocols. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The B2B framework <highlight><bold>200</bold></highlight> also includes one or more supplier systems <highlight><bold>228</bold></highlight>, <highlight><bold>230</bold></highlight>, <highlight><bold>232</bold></highlight>. Some of the supplier systems in the B2B framework may support multiple protocols (e.g., supplier system <highlight><bold>230</bold></highlight>), in which case such supplier system can be connected directly to a buyer system communicating using the particular protocol(s) that are supported, for example, via network <highlight><bold>220</bold></highlight>, <highlight><bold>222</bold></highlight>. Other supplier systems (e.g., supplier systems <highlight><bold>228</bold></highlight>, <highlight><bold>232</bold></highlight>), however, which do not support the same protocol as a particular buyer system (e.g., buyer system <highlight><bold>212</bold></highlight>, <highlight><bold>210</bold></highlight>, respectively), cannot be directly connected. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Rather than the buyer systems being directly connected to supplier systems, as in the conventional framework, the B2B framework <highlight><bold>200</bold></highlight> of the present invention includes a B2B protocol exchange <highlight><bold>214</bold></highlight>. A primary function of the protocol exchange <highlight><bold>214</bold></highlight> is to operatively translate messages from one protocol (e.g., protocol A) to another protocol (e.g., protocol B). The existence of the protocol exchange <highlight><bold>214</bold></highlight> is preferably transparent to either the buyer system(s) or the supplier system(s). On the inbound side, which may be defined as data flow from a buyer system (e.g., <highlight><bold>210</bold></highlight>) to the protocol exchange <highlight><bold>214</bold></highlight>, for example, via network <highlight><bold>216</bold></highlight>, <highlight><bold>218</bold></highlight>, the protocol exchange <highlight><bold>214</bold></highlight> preferably functions as a supplier system which communicates using the same protocol as the buyer system (e.g., protocol A). Likewise, on the outbound side, which may be defined as data flow from the protocol exchange <highlight><bold>214</bold></highlight> to a supplier system (e.g., <highlight><bold>232</bold></highlight>), for example, via network <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight>, the protocol exchange <highlight><bold>214</bold></highlight> functions as a buyer system which communicates using the same protocol as the supplier system (e.g., protocol B). Thus, no modifications to either the buyer system or supplier system protocol are required to use the B2B protocol exchange <highlight><bold>214</bold></highlight>. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The protocol exchange <highlight><bold>214</bold></highlight> preferably maintains conversational state at least in part to perform the protocol translation function. Some message flows contain references to data contained in previous message flows. For example, a purchase order message may contain a &ldquo;cookie&rdquo; which refers to a previous exchange of authentication information (e.g., a user id and password). Without maintaining conversation state, the protocol exchange may not have sufficient context to translate subsequent messages. In addition, as will be described herein below, some protocols require replacement or introduction of information sent in an earlier message of a conversation to be used in translating and in the content of a subsequent message. Furthermore, the protocol exchange <highlight><bold>214</bold></highlight> may receive asynchronous messages relating to a conversation. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The B2B protocol exchange <highlight><bold>214</bold></highlight> will be described herein in further detail in the context of conversational B2B interactions for punchout processes used, for example, in B2B network catalog operations. Those skilled in the art will readily appreciate that the methods described for the B2B exchange can be used for other B2B transactions as well as for general stateful conversational processes. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 3, a</cross-reference> flow diagram is shown for a communication between a buyer and a supplier using the conventional B2B procurement system or marketplace of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> for network catalog operations. In the conventional framework <highlight><bold>300</bold></highlight>, a buyer <highlight><bold>302</bold></highlight> is a client to a procurement system <highlight><bold>304</bold></highlight>, which may be a Web browser. This is typically used, for example, by the employees of a buying organization to do their B2B shopping. The procurement system <highlight><bold>304</bold></highlight> keeps track of the employees of the buying organization, the approval work flow, orders placed by buyers, etc. This information is generally stored in a repository <highlight><bold>310</bold></highlight>, which can be a file system or a database. Messages between the procurement system <highlight><bold>304</bold></highlight> and a supplier <highlight><bold>308</bold></highlight> typically flow over a network <highlight><bold>306</bold></highlight>, such as the Ariba Network, which keeps track of its buyers and suppliers and handles reliable message delivery. The supplier <highlight><bold>308</bold></highlight> is often a selling organization&apos;s website or a marketplace enabled to handle B2B messages from the procurement system <highlight><bold>304</bold></highlight>. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> In the conventional B2B architecture <highlight><bold>300</bold></highlight>, message flow starts with the buyer <highlight><bold>302</bold></highlight> logging on to the procurement system <highlight><bold>304</bold></highlight> during step <highlight><bold>312</bold></highlight>. During this step, the buyer <highlight><bold>302</bold></highlight> selects a desired network supplier <highlight><bold>308</bold></highlight> at whose website he wants to do his shopping. The procurement system <highlight><bold>304</bold></highlight> then looks up the catalog Universal Resource Locator (URL) address of the supplier <highlight><bold>308</bold></highlight> from its repository <highlight><bold>310</bold></highlight> along with the necessary security credentials. Procurement systems, like Ariba Buyer, obtain the catalog URL address by sending out a catalog operations request to the supplier <highlight><bold>308</bold></highlight> during step <highlight><bold>316</bold></highlight>, along with the necessary security credentials and cookies. The supplier <highlight><bold>308</bold></highlight> then responds with a message containing the catalog URL address during step <highlight><bold>318</bold></highlight>. During step <highlight><bold>320</bold></highlight>, the buyer <highlight><bold>302</bold></highlight> is logged on to the supplier <highlight><bold>308</bold></highlight> and can do his shopping. The buyer is generally able to store desired items for purchase in a shopping cart or basket. When the buyer is ready to check out, the contents of his shopping cart are transferred to the procurement system <highlight><bold>304</bold></highlight> during step <highlight><bold>322</bold></highlight>, where a purchase order can be generated and sent back to the supplier <highlight><bold>308</bold></highlight>. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> With reference now to <cross-reference target="DRAWINGS">FIG. 4, a</cross-reference> flow diagram is shown for a communication between a buyer <highlight><bold>402</bold></highlight> and a supplier <highlight><bold>408</bold></highlight> using the B2B framework of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> for network catalog operations, in accordance with the present invention. In the illustrative B2B framework <highlight><bold>400</bold></highlight>, the buyer <highlight><bold>402</bold></highlight>, which may be, for example, a Web browser, is preferably a client to a procurement system <highlight><bold>404</bold></highlight>. The procurement system <highlight><bold>404</bold></highlight> preferably keeps track of conversational information which may be used, for example, in translating subsequent messages, and other information, such as the employees of a buying organization, the approval work flow, orders placed by buyers, etc. This information may be stored in memory <highlight><bold>410</bold></highlight>, which can be a file system or a database, or an alternative repository. The term &ldquo;memory&rdquo; as used herein is intended to include any fixed or removable storage media, such as, for example, random access memory (RAM), flash memory, hard disk, etc. Procurement system <highlight><bold>404</bold></highlight> in the illustrative B2B framework <highlight><bold>400</bold></highlight> uses a different communication protocol from that used by the supplier <highlight><bold>408</bold></highlight>. By way of example only, the procurement system <highlight><bold>404</bold></highlight> may use a mySAP (trademark of SAPMarkets Inc.) procurement system, while the supplier <highlight><bold>408</bold></highlight> may be an Ariba (trademark of Ariba, Inc.) supplier which uses an Ariba punchout protocol. Supplier <highlight><bold>408</bold></highlight> is often a selling organization&apos;s website or a marketplace enabled to handle B2B messages from the procurement system <highlight><bold>404</bold></highlight>. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> As stated above with regard to <cross-reference target="DRAWINGS">FIG. 2, a</cross-reference> B2B protocol exchange or gateway <highlight><bold>406</bold></highlight> is operatively connected between the buyer <highlight><bold>402</bold></highlight> and/or procurement system <highlight><bold>404</bold></highlight> and the supplier <highlight><bold>408</bold></highlight>, primarily to translate between the stateful protocols of the buyer and supplier, respectively. Preferably, the protocol exchange <highlight><bold>406</bold></highlight> maintains information about clients (e.g., buyers) and suppliers, maintains state about client sessions, performs appropriate transformations based on session information and state, etc., and thus performs stateful protocol transformation between buyers and suppliers. For providing secure transactions, one or more firewalls (not specifically shown) may be utilized, preferably included in a path between the buyer <highlight><bold>402</bold></highlight> and the supplier <highlight><bold>408</bold></highlight>, as will be understood by those skilled in the art. It is to be appreciated that a procurement system employing the same protocol as the supplier may also be used by the invention, in which case no protocol translation need be performed by the protocol exchange <highlight><bold>406</bold></highlight>. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> With continued reference to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. messages between the buyer <highlight><bold>402</bold></highlight> and/or procurement system <highlight><bold>404</bold></highlight> and the protocol exchange <highlight><bold>406</bold></highlight>, or likewise between the protocol exchange <highlight><bold>406</bold></highlight> and the supplier <highlight><bold>408</bold></highlight> are preferably transmitted over one or more networks. In the illustrative B2B architecture <highlight><bold>400</bold></highlight>, message flow preferably starts with the buyer <highlight><bold>402</bold></highlight> logging on to the procurement system <highlight><bold>404</bold></highlight> during step <highlight><bold>412</bold></highlight>. During this step, the buyer <highlight><bold>402</bold></highlight> selects a desired network supplier <highlight><bold>408</bold></highlight> at whose website he wants to do his shopping. The procurement system <highlight><bold>404</bold></highlight> then preferably looks up the catalog Universal Resource Locator (URL) address of the supplier <highlight><bold>408</bold></highlight> from its repository <highlight><bold>410</bold></highlight> along with the necessary security credentials. The procurement system <highlight><bold>404</bold></highlight> redirects the buyer <highlight><bold>402</bold></highlight> to a supplier catalog page by sending a catalog operations request, in a first protocol utilized by the procurement system <highlight><bold>404</bold></highlight>, through the B2B protocol exchange <highlight><bold>406</bold></highlight> during step <highlight><bold>414</bold></highlight>. A translated catalog operations request is then sent to the supplier <highlight><bold>408</bold></highlight> during step <highlight><bold>416</bold></highlight> in a second protocol utilized by supplier <highlight><bold>408</bold></highlight>. Some procurement systems, like Ariba Buyer, obtain the catalog URL address by sending out a catalog operations request to the supplier <highlight><bold>408</bold></highlight>, along with the necessary security credentials and cookies, rather than storing such information in a repository <highlight><bold>410</bold></highlight>. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The supplier <highlight><bold>408</bold></highlight> responds to the catalog operations request by sending a catalog operations response containing, for example, the catalog URL address using the second protocol to the protocol exchange <highlight><bold>406</bold></highlight> during step <highlight><bold>420</bold></highlight>. A translated catalog operations response is then sent to the buyer <highlight><bold>402</bold></highlight> during step <highlight><bold>418</bold></highlight>. In this response, the supplier <highlight><bold>408</bold></highlight> preferably provides enough information for the buyer <highlight><bold>402</bold></highlight> (e.g., via a browser) to be able to log directly into the supplier <highlight><bold>408</bold></highlight>. During step <highlight><bold>422</bold></highlight>, the buyer <highlight><bold>402</bold></highlight> is logged into the supplier <highlight><bold>408</bold></highlight> and can do his shopping. The buyer is generally able to store desired items for purchase in a shopping cart or basket. The shopping basket employed by the present invention may be consistent with a conventional shopping cart. It is to be appreciated that the shopping session preferably occurs directly from the buyer&apos;s browser to the supplier, and only the shopping basket is returned to the protocol exchange <highlight><bold>406</bold></highlight> for translation. When the buyer is ready to check out, the contents of the shopping basket are transferred to the protocol exchange <highlight><bold>406</bold></highlight>, in the second protocol, during step <highlight><bold>426</bold></highlight>. The shopping basket contents are then translated into the first protocol and sent to the procurement system <highlight><bold>404</bold></highlight> during step <highlight><bold>424</bold></highlight>, where a purchase order may be generated and sent back to the supplier. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> By way of example only, <cross-reference target="DRAWINGS">FIG. 5</cross-reference> depicts a logical flow diagram illustrating a method or procedure <highlight><bold>500</bold></highlight> of handling a network catalog operations request (e.g., network catalog identification request), register a postback URL (which can be used by the supplier to send the shopping basket back to the procurement system), identify a conversation identifier, etc.) performed by the B2B protocol exchange in accordance with one aspect of the invention. The procedure <highlight><bold>500</bold></highlight> is depicted herein as a number of functional blocks, each block comprising one or more sub-procedures for implementing a predetermined task(s), or a portion thereof. Preferably, the protocol exchange receives a network catalog identification message or request (e.g., from a buyer or procurement system) in block <highlight><bold>502</bold></highlight> to determine the location of a desired supplier system catalog. The received request may or may not include information identifying the entity (e.g., buyer or procurement system) making the request and/or the postback URL. It is contemplated that some procurement systems may use multiple requests, or no requests if the location of the supplier catalog is already known. The request may include a conversation identifier generated by the buyer system or it may cause the protocol exchange to generate a conversation identifier. The conversation identifier may be used to identify a specific session between the buyer and supplier systems. This is part of the session state. For example, the conversation identifier may be used to correlate the shopping basket with a network catalog operations request. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> After receiving the request, the protocol exchange preferably determines, at block <highlight><bold>504</bold></highlight>, whether or not a conversation identifier needs to be generated. If either the postback URL or the buyer identity have been supplied with the request and the buyer has not supplied a conversation identifier, the protocol exchange preferably generates and records a conversation identifier at block <highlight><bold>506</bold></highlight> to be returned with the message. The procedures of block <highlight><bold>506</bold></highlight> may be omitted if the conversation identifier is supplied by the buyer or procurement system, or if a conversation identifier is not used. It is to be appreciated that depending upon the particular protocol employed, the conversation identifier can be generated by either the buyer side or the supplier side. For protocols that do not use conversation identifiers at all, the protocol exchange preferably creates and records the conversation identifier (block <highlight><bold>506</bold></highlight>) and transparently inserts it into the postback URL. The conversation identifier, if present, will be used by the protocol exchange in a subsequent method, as will be described below. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> In accordance with the present invention, the protocol exchange uses the information included in the request to determine the location of the desired supplier catalog in block <highlight><bold>508</bold></highlight>. In order to locate the supplier catalog, the protocol exchange may be configured with mapping information which maps between buyers in different protocol domains and suppliers in different protocol domains. In this specific case, the buyer may provide a target supplier in an incoming protocol domain and the protocol exchange converts this to a target supplier identification in an outgoing protocol domain. Once the location of the desired supplier catalog is found, the protocol exchange returns the catalog location and the conversation identifier, if used, by way of a network catalog operations response to the buyer in block <highlight><bold>510</bold></highlight>. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 6A and 6B</cross-reference> depict, by way of example only, a logical flow diagram illustrating a procedure <highlight><bold>600</bold></highlight> for handling a network catalog logon request performed by the B2B protocol exchange, in accordance with the present invention. With specific reference now to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>A, from a start state <highlight><bold>602</bold></highlight>, the protocol exchange preferably receives a network catalog operations request from a buyer system in block <highlight><bold>604</bold></highlight>. The request identifies, among other things, the identity of the buying system and the postback URL to which the shopping cart contents should be sent after the buyer has completed its shopping session. This information may be included within the request or the request may include a conversation identifier, as described above, which refers to identification information supplied by a previous request, such as, for example, the request initiated in block <highlight><bold>502</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> In block <highlight><bold>606</bold></highlight>, the protocol exchange preferably determines whether the conversation identifier is present. If the conversation identifier is present, the protocol exchange can look up identification information in block <highlight><bold>608</bold></highlight> that was previously supplied (e.g., in block <highlight><bold>502</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>). In block <highlight><bold>610</bold></highlight>, the protocol exchange preferably determines whether or not the identification information is present, for example in a local database or repository in which such information may be saved (e.g., block <highlight><bold>506</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>). If no identification information is found in block <highlight><bold>610</bold></highlight>, an error response is returned to the buyer system in block <highlight><bold>612</bold></highlight> and the procedure <highlight><bold>600</bold></highlight> is then terminated <highlight><bold>614</bold></highlight>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> If the identification information is found in block <highlight><bold>610</bold></highlight>, the protocol exchange preferably attempts to identify the buyer system in block <highlight><bold>616</bold></highlight>. It is to be appreciated that blocks <highlight><bold>610</bold></highlight> and <highlight><bold>616</bold></highlight> attempt to identify the buyer system. Either the buyer identification is provided in the request or the request includes a conversation identifier which refers to buyer identification provided in the same conversation (e.g., with the same conversation identifier). The buyer identification is preferably a user id or other identifier (e.g., data universal numbering system (DUNS) number), together with a password or other authentication information. If the buyer system cannot be identified, an error response is returned to the buyer system in block <highlight><bold>618</bold></highlight> and the procedure <highlight><bold>600</bold></highlight> is terminated. If the buyer system has been identified, the protocol exchange saves the postback URL (e.g., in memory included in the protocol exchange) in block <highlight><bold>622</bold></highlight>. The postback URL is preferably used by the protocol exchange in one or more subsequent operations (e.g., block <highlight><bold>704</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>). </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> With continued reference to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>A, in block <highlight><bold>624</bold></highlight>, the protocol exchange preferably determines a target information, including, for example, a target protocol, target credentials, etc. This target information may be stored in the protocol exchange itself, it may be sent as additional information in the network catalog operations request, or the target information may be determined by some combination of the two. In the preferred embodiment of the present invention, the target information is stored in a database maintained by the protocol exchange. Those skilled in the art will appreciate that this target information can also be sent in the request from the buying system by configuring it as additional information sent by the procurement system with the request. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> After determining the target information, the protocol exchange preferably determines, in block <highlight><bold>626</bold></highlight>, whether or not a conversation identifier is already present, or whether the protocol exchange must generate the conversation identifier. If no conversation identifier is present, the protocol exchange generates the conversation identifier in block <highlight><bold>628</bold></highlight>. As previously stated, the conversation identifier is preferably used to identify a particular conversation when the shopping cart is returned (e.g., in block <highlight><bold>702</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>). For some protocols, the conversation identifier is embedded in the message containing the shopping cart. For those protocols that do not embed the conversation identifier in the message, the conversation identifier can be embedded in the postback URL. If the conversation identifier is present, block <highlight><bold>628</bold></highlight> may be omitted and the procedure <highlight><bold>600</bold></highlight> continues at block <highlight><bold>630</bold></highlight>. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> With reference now to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>B, once the conversation identifier is either found or generated, the protocol exchange determines, in block <highlight><bold>630</bold></highlight>, whether the target protocol requires that a separate request be sent to the supplier system, for example, to determine the catalog location, identify the buyer system, identify the postback URL, accept a conversation identifier, etc. If the protocol exchange determines that the target protocol requires that a separate request must be made, such request is generated and sent to the supplier system in block <highlight><bold>632</bold></highlight>. A response to this request from the supplier system is then preferably received by the protocol exchange in block <highlight><bold>634</bold></highlight>. In block <highlight><bold>636</bold></highlight>, the received response from the supplier system is checked to determine whether or not it is an error response. If the received response is an error response, an error message or response is then returned to the buyer system in block <highlight><bold>638</bold></highlight>, and the procedure <highlight><bold>600</bold></highlight> then terminates at <highlight><bold>640</bold></highlight>. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> In block <highlight><bold>630</bold></highlight>, if the target protocol does not require that a separate request be made to the supplier system, the protocol exchange looks up the catalog location in block <highlight><bold>642</bold></highlight>. The catalog location information preferably resides in a database which is internal to the protocol exchange, although the present invention similarly contemplates that the catalog location information may be obtained from an external information source as well. If the protocol exchange cannot obtain the catalog location, as determined in block <highlight><bold>644</bold></highlight>, either because the information is not available or is otherwise invalid, an error response is returned to the buyer system in block <highlight><bold>650</bold></highlight> and the procedure <highlight><bold>600</bold></highlight> then terminates at <highlight><bold>652</bold></highlight>. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> If the protocol exchange obtains the catalog location in block <highlight><bold>644</bold></highlight> or if no error response is received from the supplier system in block <highlight><bold>636</bold></highlight>, a complete catalog URL, including the identification of the postback URL, is preferably created in block <highlight><bold>646</bold></highlight>. The postback URL identifies a receiving point within the protocol exchange. In block <highlight><bold>648</bold></highlight>, the protocol exchange then sends a redirect back to the buyer system browser to direct it to the supplier system catalog. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> depicts, by way of example only, a logical flow diagram illustrating a procedure <highlight><bold>700</bold></highlight> in which the B2B protocol exchange receives a shopping cart encoded in one protocol from the supplier system and translates the shopping cart into a different protocol used by the buyer system, in accordance with the present invention. In block <highlight><bold>702</bold></highlight>, the buyer system preferably checks out any desired items for purchase in a shopping cart and the shopping cart is then sent to the postback URL, which is a location within the protocol exchange. The shopping cart in the illustrative procedure of <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is encoded according to the supplier system protocol. Instead of immediately returning the shopping cart to the buyer system, some protocols may return a conversation identifier that will identify future asynchronous responses or is to be used in future requests relating to this conversation. The message received in block <highlight><bold>702</bold></highlight> preferably includes the conversation identifier that was either generated in block <highlight><bold>506</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> or in block <highlight><bold>628</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>A, or received from the supplier system in block <highlight><bold>634</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 6B</cross-reference>. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> After receiving the shopping cart from the supplier system, the protocol exchange preferably looks up the conversation identifier in the protocol exchange database in block <highlight><bold>704</bold></highlight>. Associated with the conversation identifier is information relating to the conversation, including, for example, the protocol into which the shopping cart is to be translated as well as the original postback URL (e.g., saved in block <highlight><bold>622</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 6A</cross-reference>). After looking up the conversation identifier in block <highlight><bold>704</bold></highlight>, the protocol exchange determines, in block <highlight><bold>706</bold></highlight>, whether or not the conversation identifier exists in the protocol exchange database. If it does not exist, an error response is returned to the supplier system in block <highlight><bold>708</bold></highlight> and the procedure <highlight><bold>700</bold></highlight> then terminates at <highlight><bold>710</bold></highlight>. If the conversation identifier is found, the protocol exchange translates the shopping cart in block <highlight><bold>712</bold></highlight> into the buyer system protocol and subsequently sends the translated shopping cart to the buyer system in block <highlight><bold>714</bold></highlight> at the postback URL retrieved in block <highlight><bold>704</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> It is to be appreciated that some messages in a conversation may require interaction with third parties, such as, for example, authentication servers, in order to perform a required transformation. Message responses from the supplier to the buyer in protocol B may be synchronous or asynchronous with respect to the corresponding message request(s) from the buyer to supplier. These message responses in protocol B may be transformed using data provided in a prior message of the conversation, into one or more messages of protocol A, which are sent either directly to the buyer, or to the buyer via the procurement system. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 8, a</cross-reference> logical flow diagram is shown illustrating an example procedure <highlight><bold>800</bold></highlight> in which a mySAP buyer system communicates with an Ariba supplier system for catalog shopping via the B2B protocol exchange, in accordance with the present invention. In block <highlight><bold>802</bold></highlight>, a mySAP logon request is received by the protocol exchange. This request may be analogous to the network catalog operations request received in block <highlight><bold>604</bold></highlight> of the illustrative procedure depicted in <cross-reference target="DRAWINGS">FIG. 6A</cross-reference>. In block <highlight><bold>804</bold></highlight>, the protocol exchange attempts to locate the buyer system identifier in its local database in a manner consistent with, for example, block <highlight><bold>616</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 6A</cross-reference>. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> A determination as to whether or not the buyer system identifier is found is made in block <highlight><bold>806</bold></highlight>. Block <highlight><bold>806</bold></highlight> checks to see if the buyer system is configured in a local database in the protocol exchange. The configuration information for the buyer, which is preferably stored in the local database in the protocol exchange, specifies, for example, that the target protocol is Ariba and supplies the URL of the Ariba purchasing system. If the buyer system identifier is not found, an error response is sent to the mySAP buyer system in block <highlight><bold>808</bold></highlight> (which is consistent with block <highlight><bold>618</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 6A</cross-reference>) and the procedure <highlight><bold>800</bold></highlight> then terminates at <highlight><bold>810</bold></highlight>. If the buyer system identifier is found, the protocol exchange creates a conversation identifier in block <highlight><bold>812</bold></highlight> in a manner consistent with that of block <highlight><bold>628</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 6A</cross-reference>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> In block <highlight><bold>814</bold></highlight>, the protocol exchange sends a Commerce XML (cXML) protocol punchout setup request to the Ariba supplier system. The punchout setup request includes, for example, the identity of the buyer system, the postback URL, and the conversation identifier, which in an Ariba cXML protocol is referred to as a buyer cookie. The protocol exchange receives a punchout setup response from the Ariba supplier system in block <highlight><bold>816</bold></highlight>. The punchout setup response preferably includes the location of the supplier catalog, in a manner consistent with block <highlight><bold>634</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 6B</cross-reference>. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> With continued reference to <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, after receiving the punchout setup response from the Ariba supplier, the protocol exchange checks the status in the punchout setup response in block <highlight><bold>818</bold></highlight> to determine whether it is normal or whether it is an error response. If the status of the punchout setup response is not normal, an error response is generated and sent to the mySAP buyer system in block <highlight><bold>820</bold></highlight> and the procedure <highlight><bold>800</bold></highlight> then terminates at <highlight><bold>822</bold></highlight>. If the punchout setup response is determined to be normal (e.g., no error found), the protocol exchange procedure <highlight><bold>800</bold></highlight> continues to a subsequent processing block <highlight><bold>824</bold></highlight>. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> In block <highlight><bold>824</bold></highlight>, the conversation identifier (e.g., generated in block <highlight><bold>812</bold></highlight>) is preferably recorded in a local database in the protocol exchange for use in a subsequent operation. This record includes the conversation identifier, the identity of the buyer system, and the original postback URL from the initial mySAP logon request. The protocol exchange then creates, in block <highlight><bold>826</bold></highlight>, a complete catalog URL, including the location of the supplier catalog, the conversation identifier and a postback URL that points to a location in the protocol exchange that is configured to receive a shopping cart in Ariba cXML format, in a manner consistent with that of block <highlight><bold>646</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 6B</cross-reference>. After creating the complete catalog URL, the protocol exchange sends a redirect message to the mySAP buyer&apos;s browser to connect it directly to the Ariba supplier system catalog. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> illustrates a logical flow diagram depicting an example procedure <highlight><bold>900</bold></highlight> in which a shopping cart generated by the illustrative shopping session of <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is sent as an Ariba cXML message by the supplier system to the B2B protocol exchange, which translates the shopping cart into a mySAP HyperText Markup Language (HTML) protocol and transmits it to the mySAP buyer system, in accordance with another aspect of the invention. In the illustrative procedure <highlight><bold>900</bold></highlight>, a mySAP buyer checks out one or more desired items for purchase and an Ariba cXML shopping cart is sent to the postback URL, which is a destination within the protocol exchange that is configured to accept shopping carts in Ariba cXML protocol. The shopping cart is received by the protocol exchange in block <highlight><bold>902</bold></highlight>. This shopping cart preferably includes the conversation identifier (e.g., Ariba cXML buyer cookie) that was generated in block <highlight><bold>812</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> After receiving the shopping cart, the conversation identifier is looked up in a database or similar storage medium in the protocol exchange. As previously stated, associated with the conversation identifier is information about the conversation, including the target protocol into which the shopping cart is to be translated as well as the original postback URL (e.g., saved in block <highlight><bold>824</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>). In block <highlight><bold>906</bold></highlight>, the protocol exchange determines whether or not the conversation identifier exists in the protocol exchange database. If it does not exist, an error response is generated and sent to the Ariba supplier system in block <highlight><bold>908</bold></highlight> and the procedure <highlight><bold>900</bold></highlight> then terminates at <highlight><bold>910</bold></highlight>. If the conversation identifier is found, the shopping cart is translated from the Ariba cXML protocol to a mySAP HTML protocol by the protocol exchange in block <highlight><bold>912</bold></highlight>. The shopping cart is then sent, in block <highlight><bold>914</bold></highlight>, to the buyer system at the postback URL saved in block <highlight><bold>824</bold></highlight> and retrieved in block <highlight><bold>904</bold></highlight> in mySAP HTML protocol. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> While a B2B framework employing the protocol exchange in accordance with the present invention is described herein with reference to a specific example of buyer and supplier protocols, those skilled in the art will readily appreciate that the B2B protocol exchange described herein can be used to map general stateful conversational processes as well. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 10, a</cross-reference> block diagram is shown illustrating a generalized hardware architecture of a computer or data processing system <highlight><bold>1000</bold></highlight> which is suitable for implementing the methodologies of the present invention, as depicted in the figures and described in detail herein. It is to be understood that these methodologies may be implemented on one or more such data processing systems. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> With continued reference to <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the B2B protocol exchange may be implemented in accordance with a processor <highlight><bold>1002</bold></highlight>, a memory <highlight><bold>1004</bold></highlight> and at least one input/output (I/O) device <highlight><bold>1006</bold></highlight>. It is to be appreciated that the term &ldquo;processor&rdquo; as used herein is intended to include any processing device (e.g., digital signal processor, microcontroller, etc.), for example, one that includes a central processing unit (CPU) and/or processing circuitry. The term &ldquo;memory&rdquo; as used herein is intended to include memory associated with a processor or CPU, such as, for example, random access memory (RAM), read only memory (ROM), a fixed memory device (e.g., hard drive), a removable memory device (e.g., diskette), flash memory, etc. In addition, the term &ldquo;I/O devices&rdquo; as used herein is intended to include, for instance, one or more input devices (e.g., mouse, keyboard, etc.) for entering data to the processing unit, and/or one or more output devices (e.g., CRT display, printer, etc.) for presenting results associated with the processing unit. It is also to be understood that the term &ldquo;processor&rdquo; may refer to more than one processing device and that various elements associated with a processing device may be shared by other processing devices. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> Accordingly, an application program, or software components thereof, including instructions or code for performing the methodologies of the invention, as described herein, may be stored in one or more of the associated memory devices (e.g., ROM, fixed or removable memory) and/or computer readable media and, when ready to be utilized, loaded in whole or in part (e.g., into RAM) and executed by a processor. In any case, it is to be appreciated that the B2B protocol exchange may be implemented in various forms of hardware, software, or combinations thereof. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> It is to be appreciated that while the present invention has been described herein in the context of a data processing system, the methodologies of the present invention are capable of being distributed in the form of computer readable media, and that the present invention applies equally regardless of the particular type of signal-bearing media actually used to carry out the distribution. The term &ldquo;computer readable media&rdquo; as used herein is intended to include recordable-type media, such as, for example, a floppy disk, a hard disk drive, RAM, compact disk (CD) ROM, digital video disk (DVD) ROM, etc., and transmission-type media, such as digital and analog communication links, wired or wireless communication links using transmission forms, such as, for example, radio frequency and optical transmissions, etc. The computer readable media may take the form of coded formats that are decoded for use in a particular data processing system. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> Although illustrative embodiments of the present invention have been described herein with reference to the accompanying drawings, it is to be understood that the invention is not limited to those precise embodiments, and that various other changes and modifications may be effected therein by one skilled in the art without departing from the scope or spirit of the invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of communicating between two business entities, each of the business entities utilizing a different communication protocol, wherein a business conversation is established between the entities, the method comprising the steps of: 
<claim-text>providing a business-to-business (B2B) protocol exchange for facilitating communications between the business entities, the B2B protocol exchange being operatively connected to the business entities; </claim-text>
<claim-text>receiving, at the B2B protocol exchange, a message from one of the business entities in a first communication protocol; </claim-text>
<claim-text>translating the received message in the first communication protocol into a translated message in a second protocol used by another of the business entities; and </claim-text>
<claim-text>sending the translated message to the other business entity. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of translating the received message is based on information included in one or more prior messages received by the B2B protocol exchange during the business conversation. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of: 
<claim-text>storing information relating to the business conversation, the information being used for translating a subsequent message. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the steps of: 
<claim-text>generating a conversation identifier associated with the business conversation; and </claim-text>
<claim-text>inserting the conversation identifier into the translated message. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of translating the received message further comprises the steps of: 
<claim-text>determining a protocol of a target business entity; and </claim-text>
<claim-text>translating the received message into the target business entity protocol. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of sending the translated message to the other business entity further comprises the steps of: 
<claim-text>identifying a postback universal resource locator (URL) associated with a target business entity; and </claim-text>
<claim-text>sending the translated message to the postback URL. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, further comprising the step of: 
<claim-text>storing the postback URL associated with the target business entity. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. In a business-to-business (B2B) framework including a plurality of business entities, a protocol exchange operatively connected to the business entities, the protocol exchange comprising: 
<claim-text>at least one processor operative to: (i) receive a message from one of the business entities in a first communication protocol; (ii) translate the received message in the first communication protocol into a translated message in a second protocol used by another of the business entities; and (iii) send the translated message to the other business entity; and </claim-text>
<claim-text>memory coupled to the at least one processor, which stores information relating to at least one of the business entities and a business conversation established between two or more business entities in the B2B framework. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The protocol exchange of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the operation of translating the received message is based on information included in one or more prior messages received by the protocol exchange during the business conversation. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The protocol exchange of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the at least one processor is further operative to: (iv) store information relating to the business conversation, the information being used for translating a subsequent message. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The protocol exchange of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the at least one processor is further operative to: (iv) generate a conversation identifier associated with the business conversation; and (v) insert the conversation identifier into the translated message. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The protocol exchange of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the at least one processor is further operative to: (iv) determine a protocol of a target business entity; and (v) translate the received message into the target business entity protocol. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The protocol exchange of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the at least one processor is further operative to: (iv) identify a postback universal resource locator (URL) associated with a target business entity; and (v) send the translated message to the postback URL. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The protocol exchange of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the at least one processor is further operative to: (vi) store the postback URL associated with the target business entity. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A business-to-business (B2B) system comprising: 
<claim-text>a plurality of business entities; and </claim-text>
<claim-text>at least one protocol exchange operatively connected to the business entities, the at least one protocol exchange receiving one or more messages from a first business entity communicating in a first protocol and translating the received messages into at least a second protocol corresponding to one or more other business entities. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the business entities are operatively connected to the protocol exchange via one or more networks. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the protocol exchange translates the received messages using information included in one or more prior messages received by the protocol exchange during a business conversation between two or more of the business entities. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. An article of manufacture for communicating between two business entities, each of the business entities utilizing a different communication protocol, wherein a business conversation is established between the entities, the article of manufacture comprising a machine readable medium containing one or more programs which when executed implement the steps of: 
<claim-text>receiving a message from at least one of the business entities in a first communication protocol; </claim-text>
<claim-text>translating the received message in the first communication protocol into a translated message in a second protocol used by another of the business entities; and </claim-text>
<claim-text>sending the translated message to the other business entity. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The article of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein the step of translating the received message is based on information included in one or more prior messages received during the business conversation. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The article of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, further comprising the step of: 
<claim-text>storing information relating to the business conversation, the information being used for translating a subsequent message. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The article of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, further comprising the steps of: 
<claim-text>generating a conversation identifier associated with the business conversation; and </claim-text>
<claim-text>inserting the conversation identifier into the translated message. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The article of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein the step of translating the received message further comprises the steps of: 
<claim-text>determining a protocol of a target business entity; and </claim-text>
<claim-text>translating the received message into the target business entity protocol. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The article of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein the step of sending the translated message to the other business entity further comprises the steps of: 
<claim-text>identifying a postback universal resource locator (URL) associated with a target business entity; and </claim-text>
<claim-text>sending the translated message to the postback URL. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The article of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, further comprising the step of: 
<claim-text>storing the postback URL associated with the target business entity.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002526A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002526A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002526A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002526A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002526A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002526A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002526A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002526A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002526A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002526A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002526A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002526A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
