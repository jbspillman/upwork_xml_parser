<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004718A1-20030102-D00000.TIF SYSTEM "US20030004718A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004718A1-20030102-D00001.TIF SYSTEM "US20030004718A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004718A1-20030102-D00002.TIF SYSTEM "US20030004718A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004718A1-20030102-D00003.TIF SYSTEM "US20030004718A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004718A1-20030102-D00004.TIF SYSTEM "US20030004718A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004718A1-20030102-D00005.TIF SYSTEM "US20030004718A1-20030102-D00005.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004718</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896272</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G10L015/12</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>G10L015/08</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>704</class>
<subclass>241000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Signal modification based on continous time warping for low bit-rate celp coding</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Ajit</given-name>
<middle-name>V.</middle-name>
<family-name>Rao</family-name>
</name>
<residence>
<residence-us>
<city>Redmond</city>
<state>WA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>Microsoft Corporation</organization-name>
<address>
<city>Redmond</city>
<state>WA</state>
<country>
<country-code>US</country-code>
</country>
</address>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>LEYDIG VOIT &amp; MAYER, LTD</name-1>
<name-2></name-2>
<address>
<address-1>TWO PRUDENTIAL PLAZA, SUITE 4900</address-1>
<address-2>180 NORTH STETSON AVENUE</address-2>
<city>CHICAGO</city>
<state>IL</state>
<postalcode>60601-6780</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A signal modification technique facilitates compact voice coding by employing a continuous, rather than piece-wise continuous, time warp contour to modify an original residual signal to match an idealized contour, avoiding edge effects caused by prior art techniques. Warping is executed using a continuous warp contour lacking spatial discontinuities which does not invert or overly distend the positions of adjacent end points in adjacent frames. The linear shift implemented by the warp contour is derived via quadratic approximation or other method, to reduce the complexity of coding to allow for practical and economical implementation. In particular, the algorithm for determining the warp contour uses only a subset of possible contours contained within a sub-range of the range of possible contours. The relative correlation strengths from these contours are modeled as points on a polynomial trace and the optimum warp contour is calculated by maximizing the modeling function. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">TECHNICAL FIELD </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This invention relates generally to speech coding techniques and, more particularly, relates to techniques for modifying a signal to aid in coding the signal via a low bit-rate coding technique such as codebook excited linear prediction (CELP) coding. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> In today&apos;s highly verbal and highly interactive technical climate, it is often necessary or desirable to transmit human voice electronically from one point to another, sometimes over great distance, and often over channels of limited bandwidth. For example, conversations via cell phone links or via the Internet or other digital electronic networks are now common place. Likewise, it is often useful to digitally store human voice, such as on the hard drive of a computer, or in the volatile or nonvolatile memory of a digital recording device. For example, digitally stored human voice may be replayed as part of a telephone answering protocol or an audio presentation. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Channels and media usable for the transmission and/or storage of digital voice are often of limited capacity, and grow more so every day. For example, the advent of quality video for use in conjunction with real time or recorded voice has created a demand for audio/video conferencing over digital networks in real time as well as for non-real time high quality audio/video presentations, such as those receivable in streaming format and those downloadable for storage in their entirety. As video content displaces bandwidth and storage capacity in various transmission channels and storage media, the need to efficiently and properly compress both voice and video becomes imperative. Other scenarios also create a need for extreme and effective compression of voice. For example, increasingly congested cell phone links must be able to accommodate a greater number of users often over channels whose capacity has not changed in keeping with the number of users. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Whatever the motivation, the compression of voice has been and remains an important area of communication technology. Available digital voice coding techniques span a spectrum from inefficient techniques that employ no compression to efficient techniques that achieve compression ratios of four or greater. Generally, existing coders may be classified as either waveform coders or voice coders. Waveform coders actually attempt to describe the sound wave itself and typically do not achieve high rates of compression. Voice coders, or vocoders, take into account the source and peculiarities of human speech rather than simply attempting to map the resultant sound wave, and accordingly may achieve much higher compression rates, albeit at the expense of increased computational complexity. Waveform coders are generally more robust to peculiar human voices, non-speech sounds and high levels of background noise. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Most prevalent voice coders employ techniques based on linear predictive coding. The linear predictive coding technique assumes that for each portion of the speech signal there exists a digital filter that when excited by a certain signal will produce a signal much like the original speech signal portion. In particular, a coder implementing a linear predictive technique will typically first derive a set of coefficients that describe the spectral envelope, or formants, of the speech signal. A filter corresponding to these coefficients is established and used to reduce the input speech signal to a predictive residual. In general terms, the above described filter is an inverse synthesis filter, such that inputting the residual signal into a corresponding synthesis filter will produce a signal that closely approximates the original speech signal. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Typically, the filter coefficients and the residual are transmitted or stored for later and/or distant re-synthesis of the speech signal. While the filter coefficients require little space for storage or little bandwidth, e.g. 1.5 kbps, for transmittal, the predictive residual is a high-bandwidth signal similar to the original speech signal in complexity. Thus, in order to effectively compress the speech signal, the predictive residual must be compressed. The technique of Codebook Excited Linear Prediction (CELP) is used to achieve this compression. CELP utilizes one or more codebook indexes which are usable to select particular vectors, one each from a set of &ldquo;codebooks&rdquo;. Each codebook is a collection of vectors. The selected vectors are chosen such that when scaled and summed, they produce a response from the synthesis filter that best approximates the response of the filter to the residual itself. The CELP decoder has access to the same codebooks as the CELP encoder did, and thus the simple indexes are usable to identify the same vectors from the encoder and decoder codebooks. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> When the available capacity or bandwidth is ample, it is not difficult to have codebooks that are rich enough to allow for a close approximation to the original residual, however complex. However, as the available capacity or bandwidth decreases, the richness of the CELP codebooks necessarily decreases. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> One way to decrease the number of bits needed to mimic the residual signal is to increase its periodicity. That is, redundancies in the original signal are more compactly representable than are non-redundant features. One technique that takes advantage of this principle is Relaxation Codebook Excited Linear Predictive coding (RCELP). An example of this technique is discussed in the article &ldquo;The RCELP Speech coding Algorithm,&rdquo; <highlight><italic>Eur. Trans. On Communications, </italic></highlight>vol. 4, no. 5, pp. 573-82 (1994), authored by W. B. Kleijn et al, which is incorporated herein by reference in its entirety for all that it discloses. In particular, this article describes a method of uniformly advancing or delaying whole segments of a residual signal such that its modified pitch-period contour matches a synthetic pitch-period contour. Problems with this approach include the fact that as an artifact of the particular warping methodology, certain portions of the original signal may be omitted or repeated. In particular, if two adjacent segments of the signal experience a cumulative compressive shift, portions of the original signal near the overlap may be omitted in the modified signal. Likewise, if two adjacent segments experience a cumulative expansive shift, portions of the original signal near the overlap may be repeated in the modified signal. These artifacts produce an audible distortion in the final reproduced speech. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Other art has suggested a similar approach. See for example the article &ldquo;Interpolation of the Pitch-Predictor parameters in Analysis-by-Synthesis Speech Coders,&rdquo; <highlight><italic>IEEE Transactions of Speech and Audio Processing, </italic></highlight>vol. 2, no. 1, part I (January, 1994), authored by W. B. Kleijn et al, which is incorporated herein by reference in its entirety for all that it discloses. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> All pitch warping approaches suggested in the past have suffered similar shortcomings, including a reduction in quality due to the shifting of segment edges, causing omissions and repeats of the original signal. It is desired to provide a frame warping method to reduce the transmission bit rate for a speech signal, while not introducing signal repeats and omissions, and without increasing the complexity or delay of the coding calculations to the point where real-time communications are not possible. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THF INVENTION </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The invention employs a continuous, rather than simply piece-wise continuous, time warp contour to modify the original residual signal to match a synthetic contour, thus avoiding edge shifting effects prevalent in the prior art. In particular, the warp contour employed within the invention is continuous, i.e. lacking spatial jumps or discontinuities, and does not invert or overly distend the positions of adjacent end points in adjacent frames. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> In order to reduce the complexity of the coding algorithm to allow for practical and economical implementation, the optimum linear shift is derived via a quadratic or other approximation. In particular, the algorithm utilized within the invention to determine the ideal warp contour does not require that every possible warp contour be calculated and utilized to correlate the modified signal to the synthetic signal. In one embodiment, a subset of possible contours from across a subrange of possible contours are calculated. The relative correlation strengths from these contours are then modeled as points on a quadratic curve or other parametric function curve. The optimum warp contour, possibly represented by a point lying someplace between calculated sample points, is then calculated by maximizing the appropriate parametric function. Other simplification techniques such as bisection or piece-wise polynomial modeling may also be used within the invention. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Additional features and advantages of the invention will be made apparent from the following detailed description of illustrative embodiments which proceeds with reference to the accompanying figures.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THF DRAWINGS </heading>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> While the appended claims set forth the features of the present invention with particularity, the invention, together with its objects and advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings of which: </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is an architectural diagram of an exemplary coder within which an embodiment of the invention may be implemented; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a simplified waveform diagram illustrating signal segmentation, time warping, and reconstruction within an embodiment of the invention; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 3</cross-reference><highlight><italic>a </italic></highlight>and <highlight><bold>3</bold></highlight><highlight><italic>b </italic></highlight>are flowcharts illustrating steps taken to effect signal modification within an embodiment of the invention; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flowchart illustrating the steps for calculating an optimal lag contour within an embodiment of the invention; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a simplified graph illustrating the plotting of correlation strength as a function of last sample lag values used within an embodiment of the invention to identify an optimal last sample lag; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a graphical depiction of warp contours according to the prior art and according to an embodiment of the invention; and </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a simplified schematic diagram of a computing device upon which an embodiment of the invention may be implemented.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> In the description that follows, the invention will be described with reference to acts and symbolic representations of operations that are performed by one or more computers, unless otherwise indicated. As such, it will be understood that such acts and operations, which are at times referred to as being computer-executed, include the manipulation by the processing unit of the computer of electrical signals representing data in a structured form. This manipulation transforms the data or maintains it at locations in the memory system of the computer, which reconfigures or otherwise alters the operation of the computer in a manner well understood by those skilled in the art. The data structures where data is maintained are physical locations of the memory that have particular properties defined by the format of the data. However, while the invention is being described in the foregoing context, it is not meant to be limiting as those of skill in the art will appreciate that various of the acts and operations described hereinafter may also be implemented in hardware. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> A speech encoder is a software module operable to compress a high bit rate input digital audio signal into a lower bit rate signal which is then transmitted across a digital channel, for example the Internet, or stored in a digital memory module, for example a hard disk or CD-R. The transmitted or stored bits are converted by a speech decoder into a decoded digital audio signal. The speech encoder and decoder are often jointly referred to as a speech codec. Speech codecs are designed to produce at the decoder the closest possible reconstruction of the input audio signal, particularly when the input signal is human speech. The most common paradigm used in speech coding is codebook excited linear prediction (CELP). CELP speech coders are based on the principle of short-term prediction and codebook search. The concepts and function of CELP coding are discussed herein to aid the reader. This discussion is not intended to define CELP coding in a manner different from that known in the art. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The task of any speech coder becomes more difficult and complex at low bit-rates due to the few bits available to capture the complex and time-varying nature of human speech. This invention provides a novel methodology for modifying the input digital speech signal prior to encoding it by a speech coder such that fewer bits are required for storage or transmission. The objective of the signal modification is to simplify the structure of the input speech signal&apos;s waveform without adversely affecting the perceptual quality of the reconstructed signal. Following signal modification, the modified input speech signal is presented to the speech coder for encoding. Due to the simplified structure of the modified waveform, the speech coder can more proficiently and efficiently perform the task of encoding the signal. As mentioned previously, signal modification is especially advantageous at low bit-rates. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The signal modification technique described herein is based on a model of continuous time warping. Unlike the signal modification technique of RCELP referred to above, continuous time warping modifies the input signal using a continuous warping contour rather than simply a piece-wise continuous contour. The result is a modified speech signal whose waveform has a simple structure, and whose quality is virtually identical to that of the original input signal. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> In order to fully understand the invention, it is important to understand the basic facets of the CELP family of codec techniques. Although the various CELP techniques will be well known to those of skill in the art, they will nonetheless be briefly described herein for the reader&apos;s convenience. In CELP coding, the decoded speech signal is generated by filtering an excitation signal through a time varying synthesis filter. The encoder sends information about the excitation signal and the synthesis filter to the decoder. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> CELP is a waveform matching method; i.e., the choice of excitation signal is optimized via correlation of a proposed synthetic signal with the signal to be modeled, e.g. the residual. Thus, the encoder evaluates short segments of the input speech signal and attempts to generate the closest replica for each segment. In particular, the encoder first generates a set of excitation signals by combining certain allowed signals called &ldquo;code-vectors&rdquo;. Each excitation signal in the set thus generated is passed through the synthesis filter, and the filtered excitation signal that generates the closest likeness to the original speech signal, or other signal to be replicated is selected. Following this search procedure, the encoder transmits to the decoder, information about the code-vectors that were combined to generate the selected excitation signal and information about the synthesis filter. Typically, most of the bits are required to transmit information about the code-vectors for formation of the synthesis filter excitation signal, while the synthesis filter parameters themselves typically require less than 1.5 kb/s. Thus, CELP works well at relatively high bit rates, e.g. greater than 4 kbps, where there are sufficient code-vectors to represent the complex nature of the input speech signal. At low bit-rates, due to the small number of code-vectors allowable, the quality of the reproduced signal drops considerably. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The dominant characteristic of the residual signal for the perceptually important voiced segments of speech is a sequence of roughly periodic spikes. Although these spikes are generally spaced somewhat uniformly, separated by a pitch period, there are often small jitters in the regularity of the locations of these spikes. These jitters, although not perceptually important, consume a majority of the bit budget in low bit-rate waveform coders. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> As discussed, RCELP attempted to eliminate this variation by non-continuously warping the residual signal to readjust the locations of the spikes so that they occur in a regular fashion. Modifying the signal in this manner eases the task of a low bit-rate coder since very few bits are needed to send information about the locations of the spikes in the modified signal. Following residual modification, the modified residual signal is transformed back into the speech domain by passing it through an inverse of the prediction filter. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> However, RCELP-based signal modification does result in a perceptible degradation of the voice quality due to the sub-optimal properties of the warping function employed. Specifically, in RCELP, potentially overlapping sections of the original residual signal, each containing a single spike, are cut and strung together to generate the modified residual signal. The cut sections may, and often do, overlap resulting in some parts of the residual signal appearing twice in the modified residual while other parts never appear at all. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The invention overcomes the undesirable properties in RCELP&apos;s residual modification procedure as discussed by utilizing a continuous time warping algorithm coupled in an embodiment of the invention with an improved warp contour optimization methodology. In summary, the inventive algorithm first identifies pieces of the original residual signal which contain a single spike, as in RCELP. However, unlike RCELP, these pieces are non-overlapping and cover the entire frame. That is, if the cut sections were concatenated, the original residual signal would be obtained&mdash;no portion of the residual signal would appear twice, and no portion would be omitted. Essentially, instead of simply cutting and moving pieces as in RCELP, the algorithm either linearly accelerates or linearly decelerates each piece in a continuous and adaptive time warping operation. The objective in warping each piece is to ensure that the spikes in the modified residual signal are separated by regular intervals thereby reducing the bit rate needed to encode the spike positions, achieving the same goal as RCELP, without its shortfalls. As will be discussed, the degree of acceleration or delay is limited to prevent degradation in the quality of the reproduced speech. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Having described the invention in generality above, the details of the preferred embodiments will be hereinafter described more fully. Referring to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, an exemplary architecture for implementing an improved low bit rate coder according to an embodiment of the invention is illustrated. The system is comprised of a digitizer <highlight><bold>121</bold></highlight>, a prediction filter or inverse synthesis filter <highlight><bold>101</bold></highlight>, a linear continuous residual modification module <highlight><bold>103</bold></highlight>, a synthesis filter <highlight><bold>105</bold></highlight>, and a coder such as CELP coder <highlight><bold>107</bold></highlight>, cascaded together. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The prediction filter <highlight><bold>101</bold></highlight> receives as input a digitized speech signal <highlight><bold>109</bold></highlight> from the digitizer module <highlight><bold>121</bold></highlight>. There exist various methods known to those of skill in the art by which speech may be converted to a digital electrical signal, and accordingly such techniques will not be discussed in great detail herein. Prediction filter <highlight><bold>101</bold></highlight>, also sometimes referred to as an inverse synthesis filter, is operable to produce a residual signal <highlight><bold>111</bold></highlight> based on LPC coefficients and an input signal. Those of skill in the art will be familiar with linear predictive coding concepts such as the inverse filter and residual. The residual <highlight><bold>111</bold></highlight> is input to the residual modification module <highlight><bold>103</bold></highlight>, which converts the signal into a modified residual <highlight><bold>113</bold></highlight> in a manner to be discussed more fully hereinafter. The modified residual <highlight><bold>113</bold></highlight> is subsequently input to a synthesis filter <highlight><bold>105</bold></highlight> to generate a reproduced speech signal <highlight><bold>115</bold></highlight>. The residual modification technique implemented by the residual modification module <highlight><bold>103</bold></highlight> will allow the modified speech signal <highlight><bold>115</bold></highlight> to sound very much like the original speech <highlight><bold>109</bold></highlight> even though the excitation or modified residual <highlight><bold>113</bold></highlight> is altered from the residual <highlight><bold>111</bold></highlight>. Subsequently, the CELP coder module <highlight><bold>107</bold></highlight> codes the modified speech signal in a manner well understood by those skilled in the art, and outputs a stream of encoded bits <highlight><bold>117</bold></highlight> for transmission or storage. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The operation of the modules illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> will now be described in greater detail with reference to <cross-reference target="DRAWINGS">FIG. 2</cross-reference> in conjunction with <cross-reference target="DRAWINGS">FIGS. 3</cross-reference><highlight><italic>a </italic></highlight>and <highlight><bold>3</bold></highlight><highlight><italic>b</italic></highlight>. In particular, <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows simplified waveforms <highlight><bold>203</bold></highlight>, <highlight><bold>205</bold></highlight>, <highlight><bold>207</bold></highlight>, <highlight><bold>209</bold></highlight>, <highlight><bold>211</bold></highlight> having prominent pitch peaks <highlight><bold>201</bold></highlight>. Note that the peak shifts illustrated in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> are exaggerated for clarity. Actual shift amounts should be limited as will be discussed hereinafter. <cross-reference target="DRAWINGS">FIGS. 3</cross-reference><highlight><italic>a </italic></highlight>and <highlight><bold>3</bold></highlight><highlight><italic>b </italic></highlight>are flowcharts illustrating the steps executed in an embodiment of the invention to code a speech signal. At step <highlight><bold>301</bold></highlight>, an analog speech signal <highlight><bold>119</bold></highlight> is received by digitizer <highlight><bold>121</bold></highlight>. In step <highlight><bold>303</bold></highlight>, digitizer <highlight><bold>121</bold></highlight> samples the signal at 8 khz to obtain a digital sampled audio signal s(n). Subsequently, in step <highlight><bold>305</bold></highlight>, signal s(n) is grouped into non-overlapping frames of 160 samples (20 ms) long by the digitizer, each of which is further subdivided into 2 non-overlapping subframes of 80 samples (10 ms) long. Thus, the signal in the k<highlight><superscript>th </superscript></highlight>frame is given by s(160k) . . . s(160k&plus;159). The framed sampled signal <highlight><bold>109</bold></highlight> is passed from the digitizer <highlight><bold>121</bold></highlight> to the LPC extractor <highlight><bold>123</bold></highlight> in step <highlight><bold>307</bold></highlight>. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The LPC extractor <highlight><bold>123</bold></highlight> acts in a manner well known to those of skill in the art to calculate linear predictive coefficients corresponding to the input signal. In particular, in step <highlight><bold>309</bold></highlight>, the LPC extractor <highlight><bold>123</bold></highlight> extracts a set of tenth order linear predictive coefficients for each frame by performing correlation analysis and executing the Levinson-Durbin algorithm. The optimal linear prediction coefficients in the k<highlight><superscript>th </superscript></highlight>frame a<highlight><subscript>k</subscript></highlight>(j), j&equals;1, . . . , 10, are interpolated in step <highlight><bold>311</bold></highlight> to generate a set of LP coefficients a<highlight><subscript>k</subscript></highlight>(j), j&equals;1, . . . , 10, in each subframe, wherein s&equals;0, 1 corresponds to the first and second subframes respectively. The interpolation may be performed by transforming the LP coefficients into the Line Spectral Frequency (LSF) domain, interpolating linearly in the LSF domain, and transforming the interpolated subframe LSF coefficients back to LP coefficients. In step <highlight><bold>313</bold></highlight>, the subframe LP coefficients a<highlight><subscript>ks </subscript></highlight>are used by the prediction filter <highlight><bold>101</bold></highlight> to produce the residual signal <highlight><bold>111</bold></highlight> in a manner well known to those of skill in the art. The residual <highlight><bold>111</bold></highlight> in the k<highlight><superscript>th </superscript></highlight>frame is represented by r(n), n&equals;160k . . . 160k&plus;159. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> The dominant characteristic of the residual signal <highlight><bold>111</bold></highlight> may be seen in the waveform <highlight><bold>203</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. In particular, for voiced segments, the residual <highlight><bold>203</bold></highlight> is dominated by a sequence of roughly periodic but irregularly spaced peaks or spikes <highlight><bold>201</bold></highlight>. These spikes typically represent glottal pulses that excite the vocal tract during the process of generating voiced speech. The time interval between adjacent spikes is equal to the pitch period. Human speech typically has a pitch period of between about 2.5 ms and 18.5 ms. The interval between spikes is usually not constant, but instead exhibits minor irregularities or jitter. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> Steps <highlight><bold>315</bold></highlight> through <highlight><bold>333</bold></highlight> will describe the operation of residual modification module <highlight><bold>103</bold></highlight>. In step <highlight><bold>315</bold></highlight>, the residual modification module <highlight><bold>103</bold></highlight> receives the residual signal <highlight><bold>111</bold></highlight> and determines an integer pitch period for the current frame, the k<highlight><superscript>th </superscript></highlight>frame. The pitch period may be determined by any one of a number of techniques known in the art. One technique usable within this embodiment is to employ co-relation analysis in the open loop. Whatever method is used, adequate care should be exercised to avoid undesirable artifacts such as pitch doubling. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> At step <highlight><bold>317</bold></highlight>, a sample by sample linear interpolation of the frame pitch period is performed as follows: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>c</italic></highlight>&prime;(<highlight><italic>n</italic></highlight>)&equals;<highlight><italic>p</italic></highlight>(<highlight><italic>k</italic></highlight>)*((<highlight><italic>n</italic></highlight>&minus;160<highlight><italic>k</italic></highlight>)/160)&plus;<highlight><italic>p</italic></highlight>(<highlight><italic>k</italic></highlight>&minus;1)*(1&minus;(<highlight><italic>n</italic></highlight>&minus;160<highlight><italic>k</italic></highlight>)/160), n&equals;160<highlight><italic>k . . . </italic></highlight>160<highlight><italic>k</italic></highlight>&plus;159. </in-line-formula></paragraph>
<paragraph id="P-0039" lvl="7"><number>&lsqb;0039&rsqb;</number> The function c&prime;(n) can be represented as a straight line from p(k&minus;1) at the beginning of the frame to p(k) at the end of the frame. It represents a smoothly varying pitch period (floating point) for every sample in the current frame. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> In step <highlight><bold>319</bold></highlight>, a function c(n) is formed by rounding each value of c&prime;(n) to the closest multiple of 0.125. Effectively, c(n) is a multiple of &frac18;, and therefore 8*c(n) is an integer pitch period in an 8x over-sampled signal domain. Herein, c(n) is referred to as the desired pitch contour. The efficiencies engendered by modifying the residual to match this idealized contour are significant. For example, the pitch period of a frame having such a contour can be transmitted using very few bits, and the decoder can use the pitch to derive the pitch contour, and then use the pitch contour in conjunction with the spike locations from the previous frame to estimate the location of pitch spikes for the current frame. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The next process is to mimic the decoder and attempt to reconstruct the locations of the spikes in the current frame residual based on the pitch contour and the modified residual of the previous frame. Although the actual decoder will typically not have access to information about the previous frame&apos;s modified residual, it will have access to the excitation signal used to reconstruct the previous frame. Therefore, since the spikes in the excitation signal of a particular frame will align with the spikes in the modified residual of that frame, the decoder&apos;s use of the previous excitation signal does not conflict with the coder&apos;s use of the previous modified residual. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> To predict the spike positions in the current frame, the residual modification module <highlight><bold>103</bold></highlight> uses the pitch contour to delay the previous frame&apos;s modified residual in step <highlight><bold>321</bold></highlight> to produce a target signal for modification, r<highlight><subscript>t</subscript></highlight>(n). An exemplary waveform for r<highlight><subscript>t</subscript></highlight>(n) is shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> at element <highlight><bold>211</bold></highlight>. This time warping function operates in the 8X over-sampled domain, using a standard interpolation filter with truncated sinc(x) impulse response and 90% pass-band, since the pitch contour c(n) is a multiple of 0.125. In particular, the 8X over-sampling is employed to obtain interpolated samples of the modified residual r&prime;(n) in the previous frame, to arrive at the over-sampled signal as follows: </paragraph>
<paragraph lvl="0"><in-line-formula>r&Prime;(n*0.125), <highlight><italic>n&equals;</italic></highlight>160*8*(<highlight><italic>k&minus;</italic></highlight>1) . . . 160*8*(<highlight><italic>k&minus;</italic></highlight>1)&plus;1279. </in-line-formula></paragraph>
<paragraph id="P-0043" lvl="7"><number>&lsqb;0043&rsqb;</number> The sample index of r&Prime; is a multiple of 0.125, representing the over-sampled condition. Subsequently, a delay line operation is performed to obtain the target signal r<highlight><subscript>t</subscript></highlight>(n), as follows: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>r</italic></highlight><highlight><subscript>d</subscript></highlight>(<highlight><italic>n*</italic></highlight>0.125)&equals;<highlight><italic>r</italic></highlight><highlight><subscript>d</subscript></highlight>(<highlight><italic>n*</italic></highlight>0.125)<highlight><italic>n&equals;</italic></highlight>160*8*(<highlight><italic>k&minus;</italic></highlight>1) . . . 160*8*(<highlight><italic>k&minus;</italic></highlight>1)&plus;1279 </in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>r</italic></highlight><highlight><subscript>d</subscript></highlight>(<highlight><italic>n*</italic></highlight>0.125)&equals;<highlight><italic>r</italic></highlight><highlight><subscript>d</subscript></highlight>(<highlight><italic>n*</italic></highlight>0.125<highlight><italic>&minus;C</italic></highlight>(<highlight><italic>INT</italic></highlight>(<highlight><italic>n*</italic></highlight>0.125))), <highlight><italic>n&equals;</italic></highlight>160*8*<highlight><italic>k . . . </italic></highlight>0.160*8*<highlight><italic>k&plus;</italic></highlight>1279 </in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>r</italic></highlight><highlight><subscript>t</subscript></highlight>(<highlight><italic>n</italic></highlight>)&equals;<highlight><italic>r</italic></highlight><highlight><subscript>d</subscript></highlight>(<highlight><italic>n</italic></highlight>), <highlight><italic>n&equals;</italic></highlight>160*<highlight><italic>k . . . </italic></highlight>160*<highlight><italic>k&plus;</italic></highlight>159, </in-line-formula></paragraph>
<paragraph id="P-0044" lvl="7"><number>&lsqb;0044&rsqb;</number> where INT(x) represents the integer closest to x, a floating point number and r<highlight><subscript>d</subscript></highlight>( ) is an intermediate signal. Note that the decoder performs an identical delay line operation on the previous frame&apos;s excitation signal. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> Having calculated the ideal pitch spike locations represented in the target signal <highlight><bold>211</bold></highlight>, the coder can now relocate the spikes in the actual residual to match those in r<highlight><subscript>t</subscript></highlight>(n). Initially at step <highlight><bold>323</bold></highlight>, the residual modification module <highlight><bold>103</bold></highlight> analyzes the unmodified residual signal <highlight><bold>203</bold></highlight> to identify distinct segments of the signal having a single predominant peak surrounded by a low energy region. An exemplary resultant waveform is represented in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> at element <highlight><bold>205</bold></highlight>. There are preferably no gaps between pieces of the signal as segmented. In other words, if the pieces of element <highlight><bold>205</bold></highlight> were to be strung back together at this stage, the result would be the unmodified residual <highlight><bold>203</bold></highlight>. Preferably, the residual <highlight><bold>203</bold></highlight> is cut only at perceptually insignificant low energy points. Subsequently at step <highlight><bold>325</bold></highlight> the coder associates a section of the target signal with an appropriate piece of the unmodified residual. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> At step <highlight><bold>327</bold></highlight>, the residual modification module <highlight><bold>103</bold></highlight> calculates an optimal warping function for the identified section of the unmodified residual such that modification via the optimal warping function will align a predominant spike or peak in a segment of the residual <highlight><bold>203</bold></highlight> with that in the associated section of the target signal <highlight><bold>211</bold></highlight>. The steps taken to calculate an optimal warping function for each section of the residual are illustrated with reference to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. In particular, <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates the derivation of a lag contour l(n) representing the sample-by-sample delay between the residual signal <highlight><bold>203</bold></highlight> and the modified residual <highlight><bold>209</bold></highlight>. The quantity l(n) is a multiple of 0.125 such that the modified residual sample r&prime;(m) equals the residual signal sample delayed by l(m) in the oversampled domain. That is: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>r</italic></highlight>&prime;(<highlight><italic>m</italic></highlight>)&equals;<highlight><italic>r</italic></highlight>&Prime;(<highlight><italic>m&minus;l</italic></highlight>(<highlight><italic>m</italic></highlight>)). </in-line-formula></paragraph>
<paragraph id="P-0047" lvl="7"><number>&lsqb;0047&rsqb;</number> The problem of finding the optimal warp contour is reduced to the problem of finding the optimal lag contour l(n). </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> At step <highlight><bold>401</bold></highlight>, the lag l<highlight><subscript>f </subscript></highlight>for the very first sample of the current section of interest is set equal to the lag for the very last sample of the previous section, and a set of candidates for the lag l<highlight><subscript>1 </subscript></highlight>of the last sample of the current section is identified. In particular, a set of 2K&plus;1 candidates for the lag l<highlight><subscript>1 </subscript></highlight>of the last sample are identified within a candidate range, such as &lcub;l<highlight><subscript>f</subscript></highlight>&minus;K, l<highlight><subscript>f</subscript></highlight>&minus;K&plus;1, . . . l<highlight><subscript>f</subscript></highlight>&plus;K&rcub;. The value of K is selected based on parameters such as the computation power available, the periodicity of the speech sample, and the value of If. Typical values of K are 0, 1, 2, 3, or 4. Although the range of candidates illustrated by the above equation fall symmetrically about l<highlight><subscript>f</subscript></highlight>, this need not be the case. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> Although shifting sections of the residual by small amounts does not have a negative effect on the perceived quality of the reproduced signal, large shifts may have a perceivable negative effect. Thus, it is desirable to limit the amount by which a sample may be shifted to some small number, such as three original (not oversampled) sample increments including any accumulated shifting as a result of the shifting of the previous section or piece. Thus, if the last sample in the previous piece was delayed by the equivalent of two sample positions, then the last sample of the current piece should not be additionally delayed more than the equivalent of one sample position, or it will experience a total shift of more than three sample positions from its original location. The solution for this problem is to limit the value of K such that it does not allow a shift beyond the desired range, or to use an asymmetrical range of candidates. Thus, in the above example, although a delay by more than one sample is prohibited, an acceleration by five sample positions may be permitted if an asymmetrical distribution of candidate lag values is utilized. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> Note that fewer than all possible lag candidates are in the candidate set, because the computational power needed to evaluate all possible lag candidates would be prohibitive. Rather, only a subset of possible lag values for the last sample in the current section are used as candidates. Lag values outside of the candidate range are not included in the set, nor are values lying between candidate lag values. Thus, the optimal lag value for the last sample (and resultant lag contour) may not even be included in the candidate set itself, but it is preferably situated within the candidate range. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> Next, in step <highlight><bold>403</bold></highlight>, the coder performs a linear interpolation between the first and last samples of the current section for each candidate lag value identified in step <highlight><bold>401</bold></highlight> to create a set of 2K&plus;1 candidate lag contours. A candidate lag contour represents a linear function such that the first and last values are l<highlight><subscript>f </subscript></highlight>and l<highlight><subscript>1 </subscript></highlight>respectively, where l<highlight><subscript>1 </subscript></highlight>is a candidate value. In step <highlight><bold>405</bold></highlight>, each candidate lag contour is applied to the residual signal to obtain a set of 2K&plus;1 candidate modified residuals, and the correlation between the target signal r<highlight><subscript>t</subscript></highlight>(n) <highlight><bold>211</bold></highlight> and each candidate modified residual is calculated in step <highlight><bold>407</bold></highlight>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> In step <highlight><bold>409</bold></highlight>, the strength of the correlation is modeled quadratically as a function of the last sample lag value, and the optimal lag value for the last sample is obtained. In particular, the strength of the correlation for each candidate modified residual is plotted as a function of the associated last sample lag value candidate as illustrated by the plot points in the graph of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. Next the plot points are divided into sets, each set consisting of three points. There is an overlap of one point between adjacent sets. The 2K&plus;1 plot points would be thus divided into K overlapping sets of 3 points each. For seven points, for example, there would be three sets. Each set of three consecutive plot points is modeled according to a quadratic function. In <cross-reference target="DRAWINGS">FIG. 5</cross-reference> for example, the three quadratic modeling functions are illustrated as <highlight><bold>501</bold></highlight>, <highlight><bold>503</bold></highlight> and <highlight><bold>505</bold></highlight>. The maximum of each quadratic function in the range from the first to the last of the associated three points is obtained, and the maximum for the entire section is then calculated. Thus, for positive quadratic functions, i.e. those concave upward, as well as for monotonic configurations of points, the maximum correlation value will lie at one of the endpoints. Note that, in general, the maximum for a given set of three points will not always lie at any of the three points, but will often lie somewhere between. Thus, the optimal lag value for the entire section could be a value that was not in the set of candidates for the lag l<highlight><subscript>1</subscript></highlight>. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> Although the plot of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is used herein to graphically depict steps according to an embodiment of invention, the terms &ldquo;plot&rdquo; or &ldquo;plotting&rdquo; as used herein do not require the creation of a tangible or visible graph. Rather, these terms simply imply the creation of an association between quantities, be it implicit, such as where the axes used are different parameters related to the quantities shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, or explicit, and be it actual, as in a graphical program data structure, or virtual as in a set of numbers in memory from which can be derived the appropriate relationship. Therefore, these terms simply denote the creation of a relationship between the indicated quantities, however such relationship is manifested. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> The maximum of all quadratics for the current correlation plot is associated with a lag value for the last sample via the appropriate quadratic, and this value is the optimal last sample lag value. It is not necessary that a quadratic function be used to model the sets of points, or that three points be used. For example, the sets could contain more than three points, and the modeling function may be a polynomial of any order, depending upon the acceptable level of complexity. Note also that for monotonic sequences of points, it is not necessary to model the sequence as a polynomial or otherwise since the highest endpoint is easily determined and represents the maximum of the sequence. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Having determined the optimal lag value for the last sample of the current dominant peak-containing section or segment of interest, the residual modification module <highlight><bold>103</bold></highlight> derives in step <highlight><bold>411</bold></highlight> a corresponding lag contour by interpolating linearly over the section from If to the optimal l<highlight><subscript>1 </subscript></highlight>calculated in step <highlight><bold>409</bold></highlight>. At step <highlight><bold>329</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference><highlight><italic>b</italic></highlight>, the lag contour calculated in step <highlight><bold>411</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is applied to the residual as described above, that is: r&prime;(n)&equals;r&Prime;(n&minus;l(n)). </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Finally, at step <highlight><bold>331</bold></highlight>, it is determined whether there are any more pieces in the current frame to be analyzed and shifted. If there are, the flow of operations returns to step <highlight><bold>325</bold></highlight>. Otherwise, the process ends for the current frame at step <highlight><bold>333</bold></highlight>. Element <highlight><bold>207</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates the warped sections of the modified residual <highlight><bold>209</bold></highlight> separately for clarity. The modified residual <highlight><bold>113</bold></highlight> illustrated as waveform <highlight><bold>209</bold></highlight> is finally provided as input to the synthesis filter <highlight><bold>105</bold></highlight>, to yield a reproduction of the original speech signal, the reproduction having regular rather than jittered pitch peaks. From this point, the signal is processed using a technique such as ordinary CELP. However, the bit rate now required to code the signal will be greatly reduced over that required to code the unmodified signal due to the increased periodicity of the pitch structure. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> After a frame is processed, processing begins on the subsequent frame. In the case of an unvoiced segment, there are typically no pitch peaks, and so the methodology described herein need not be applied. During the unvoiced interval, all quantities in the algorithm are reset. For example, the indication of accumulated shift is reset to zero. When voiced speech resumes, the first voiced frame k is treated as a special case since the pitch value of the previous frame, p(k&minus;1) is unknown in this frame. The pitch contour in this special frame k is set to a constant function equal to the pitch value of the frame, p(k). The rest of the procedure is identical to that of regular frames. </paragraph>
<paragraph id="P-0058" lvl="7"><number>&lsqb;0058&rsqb;</number> Note that techniques other than polynomial modeling may be used within the invention to calculate an optimal lag value If and associated lag contour for a given section or piece of a speech signal within a current frame. It is only of consequence for the invention that a substantial subset of possible lag values, for example half of all possible lag values, be used to create correlation values, for this greatly reduces the computational expense of finding the optimal lag contour. Thus, alternative techniques such as bisection may be used to find the optimal lag value without trying all, or even most, possible lag values. The bisection technique entails identifying two lag candidate values, and their associated correlation strengths. The lag candidate with the higher correlation and a new lag candidate that lies in between the two lag values are used as endpoints to repeat the bisection process. The process may be terminated after a predetermined number of iterations, or when a lag value yielding a correlation strength above a predetermined threshold is found. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> A continuous linear warp contour resulting from the methodology described herein is illustrated in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. In particular the continuous linear warp contour <highlight><bold>601</bold></highlight> is shown as a solid black line, while the discontinuous contour <highlight><bold>603</bold></highlight> used in the prior art RCELP technique is shown as a dashed line. Both contours represent lines drawn through the set of points for signal samples plotted as a function of original time (pre-warp) versus modified time (post-warp). Thus, each straight segment in contour <highlight><bold>601</bold></highlight> and each separate piece of contour <highlight><bold>603</bold></highlight> represents a section of the original residual that has been warped according to the respective technique. It can be seen that the RCELP technique often results in missing or overlapped sections, while the continuous linear warp contour of the present invention does not permit overlap or omission. Rather, although the continuous linear warp contour <highlight><bold>601</bold></highlight> may contain discontinuities in slope, it is continuous rather than simply piece-wise continuous in position. In particular, region <highlight><bold>605</bold></highlight> is occupied by two pieces of the warp contour <highlight><bold>603</bold></highlight> while section <highlight><bold>607</bold></highlight> is devoid of data pursuant to the same contour. On the other hand, the entire signal space is occupied without overlap or omission by contour <highlight><bold>601</bold></highlight> according to the present invention. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> Note that the warp contour <highlight><bold>601</bold></highlight> for adjacent segments may have the same slope or different slopes, depending upon the acceleration or deceleration needed for each segment. In contrast, the slope of each section of RCELP contour <highlight><bold>603</bold></highlight> is unitary. This is because RCELP shifts sections of the signal but does not change the time scale within each section. Thus it can be seen that the method according to the invention warps the time scale within each section in a linear continuous manner such that the peak of each section shifts to the desired location without creating undesirable time scale discontinuities at section edges. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Although it is not required, the present invention may be implemented using instructions, such as program &ldquo;modules,&rdquo; that are executed by a computer. Generally, program modules include routines, objects, components, data structures and the like that perform particular tasks or implement particular abstract data types. A program may include one or more program modules. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> The invention may be implemented on a variety of types of machines, including cell phones, personal computers (PCs), hand-held devices, multi-processor systems, microprocessor-based programmable consumer electronics, network PCs, minicomputers, mainframe computers and the like, or on any other machine usable to code or decode audio signals as described herein and to store, retrieve, transmit or receive signals. The invention may be employed in a distributed computing system, where tasks are performed by remote components that are linked through a communications network. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, one exemplary system for implementing embodiments of the invention includes a computing device, such as computing device <highlight><bold>700</bold></highlight>. In its most basic configuration, computing device <highlight><bold>700</bold></highlight> typically includes at least one processing unit <highlight><bold>702</bold></highlight> and memory <highlight><bold>704</bold></highlight>. Depending on the exact configuration and type of computing device, memory <highlight><bold>704</bold></highlight> may be volatile (such as RAM), nonvolatile (such as ROM, flash memory, etc.) or some combination of the two. This most basic configuration is illustrated in <cross-reference target="DRAWINGS">FIG. 7</cross-reference> within line <highlight><bold>706</bold></highlight>. Additionally, device <highlight><bold>700</bold></highlight> may also have additional features/functionality. For example, device <highlight><bold>700</bold></highlight> may also include additional storage (removable and/or non-removable) including, but not limited to, magnetic or optical disks or tape. Such additional storage is illustrated in <cross-reference target="DRAWINGS">FIG. 7</cross-reference> by removable storage <highlight><bold>708</bold></highlight> and non-removable storage <highlight><bold>710</bold></highlight>. Computer storage media include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Memory <highlight><bold>704</bold></highlight>, removable storage <highlight><bold>708</bold></highlight> and non-removable storage <highlight><bold>710</bold></highlight> are all examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CDROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by device <highlight><bold>700</bold></highlight>. Any such computer storage media may be part of device <highlight><bold>700</bold></highlight>. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Device <highlight><bold>700</bold></highlight> may also contain one or more communications connections <highlight><bold>712</bold></highlight> that allow the device to communicate with other devices. Communications connections <highlight><bold>712</bold></highlight> are an example of communication media. Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term &ldquo;modulated data signal&rdquo; means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. As discussed above, the term computer readable media as used herein includes both storage media and communication media. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> Device <highlight><bold>700</bold></highlight> may also have one or more input devices <highlight><bold>714</bold></highlight> such as keyboard, mouse, pen, voice input device, touch-input device, etc. One or more output devices <highlight><bold>716</bold></highlight> such as a display, speakers, printer, etc. may also be included. All these devices are well known in the art and need not be discussed at greater length here. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> In view of the many possible embodiments to which the principles of this invention may be applied, it should be recognized that the embodiments described herein with respect to the drawing figures are meant to be illustrative only and should not be taken as limiting the scope of invention. For example, those of skill in the art will recognize that the elements of the illustrated embodiments shown in software may be implemented in hardware and vice versa or that the illustrated embodiments can be modified in arrangement and detail without departing from the spirit of the invention. Therefore, the invention as described herein contemplates all such embodiments as may come within the scope of the following claims and equivalents thereof. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">We claim: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of preparing a frame of a digital speech signal for compression comprising the steps of: 
<claim-text>producing a linear prediction residual for the frame, the linear prediction residual having irregularly spaced dominant peaks; </claim-text>
<claim-text>dividing the residual into a series of contiguous, non-overlapping sections, each section containing not more than one dominant peak; </claim-text>
<claim-text>deriving an idealized signal having a series of regularly-spaced dominant peaks located in a series of sequential sections; </claim-text>
<claim-text>associating each section of the residual with a corresponding section of the idealized signal; </claim-text>
<claim-text>calculating a linear continuous warp contour for each residual section based on a subset of possible last sample lag values for each residual section within a subrange of possible last sample lag values for each residual section; and </claim-text>
<claim-text>modifying the residual by applying the calculated warp contour to the sections of the residual so that any dominant peak in each section of the residual aligns with the dominant peak in the corresponding section of the idealized signal, whereby dominant pitch peaks of the modified residual are regularly spaced, and no portion of any section of the residual is omitted or repeated in the modified residual. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the step of producing a linear prediction residual for the frame further comprises the steps of: 
<claim-text>extracting linear prediction coefficients for the frame; </claim-text>
<claim-text>interpolating the linear prediction coefficients for the frame to create linear prediction coefficients for a plurality of sub-frames of the frame; and </claim-text>
<claim-text>producing a prediction residual for each sub-frame, whereby the prediction residual for the frame comprises a set of sub-frame prediction residuals. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of dividing the residual into a series of contiguous, non-overlapping sections further comprises the steps of analyzing the frame to identify an integer pitch period. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference> wherein the step of analyzing the frame to identify an integer pitch period further comprises the step of employing co-relation analysis in the open loop. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of calculating a linear continuous warp contour for each residual section further comprises the steps of: 
<claim-text>establishing a first sample lag for the first sample of the residual section; </claim-text>
<claim-text>identifying a set of candidates for the last sample lag for the last sample of the residual section, the set of candidates consisting of a subset of all possible last sample lag values within a sub-range of all possible last sample lag values; </claim-text>
<claim-text>performing a linear interpolation between the first and last samples of the residual section for each candidate last sample lag to create a set of candidate lag contours; </claim-text>
<claim-text>applying each candidate lag contour to the residual section to obtain a set of candidate modified residuals; </claim-text>
<claim-text>calculating a correlation strength between each candidate modified residual and the corresponding section of the idealized signal to create a set of correlation strengths; </claim-text>
<claim-text>deriving an optimal last sample lag for the residual section based on the set of correlation strengths; and </claim-text>
<claim-text>deriving a linear continuous warp contour by interpolating linearly over the section from the first sample lag to the derived optimal last sample lag for the residual section. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the step of deriving an optimal last sample lag for the residual section based on the set of correlation strengths further comprises the steps of: 
<claim-text>segregating the set of correlation strengths into overlapping subsections as a function of the last sample lags used to derive the strengths; </claim-text>
<claim-text>representing each subsection as a curve; </claim-text>
<claim-text>calculating the maximum value of each curve, wherein the maximum value is selectable from the group consisting of all possible lag values within a range of possible lag values that includes the last sample lags used to derive the strengths in the subsection; and </claim-text>
<claim-text>calculating the maximum correlation strength for the section based on the maximum values for the curves of the subsections. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference> wherein the curve is a polynomial. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein the polynomial is a quadratic function. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the subrange of possible last sample lag values for each residual section is selected such that the greatest cumulative shift for any sample in the section upon application of the calculated warp contour will be less than four sample positions. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. An apparatus for modifying a speech signal prior to coding the speech signal, the apparatus comprising: 
<claim-text>a linear prediction coefficient extraction module for receiving a digital speech signal and for producing a set of linear prediction coefficients; </claim-text>
<claim-text>an inverse synthesis filter for receiving the digital speech signal and the linear prediction coefficients and for producing a residual signal; </claim-text>
<claim-text>a residual modification module for time warping the residual signal based on a continuous linear warp contour selected from the set of all possible warp contours by calculating only a subset of all possible warp contours, whereby a modified residual signal having a regular rather than irregular array of dominant peaks is produced; and </claim-text>
<claim-text>a synthesis filter for receiving the modified residual signal and the linear prediction coefficients for producing a modified digital speech signal suitable for low bit rate coding. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, further comprising a codebook excited linear prediction coder module for receiving the modified digital speech signal and for producing a compressed speech signal. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A computer readable medium having computer readable instructions for performing a method of preparing a frame of a digital speech signal for compression comprising the steps of: 
<claim-text>producing a linear prediction residual for the frame, the linear prediction residual having irregularly spaced dominant peaks; </claim-text>
<claim-text>dividing the residual into a series of contiguous, non-overlapping sections, each section containing not more than one dominant peak; </claim-text>
<claim-text>deriving an idealized signal having a series of regularly-spaced dominant peaks located in a series of sequential sections; </claim-text>
<claim-text>associating each section of the residual with a corresponding section of the idealized signal; </claim-text>
<claim-text>calculating a linear continuous warp contour for each residual section based on a subset of possible last sample lag values for each residual section within a subrange of possible last sample lag values for each residual section; and </claim-text>
<claim-text>modifying the residual by applying the calculated warp contour to the sections of the residual so that any dominant peak in each section of the residual aligns with the dominant peak in the corresponding section of the idealized signal, whereby dominant pitch peaks of the modified residual are regularly spaced, and no portion of any section of the residual is omitted or repeated in the modified residual. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The computer readable medium according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> wherein the step of producing a linear prediction residual for the frame further comprises the steps of: 
<claim-text>extracting linear prediction coefficients for the frame; </claim-text>
<claim-text>interpolating the linear prediction coefficients for the frame to create linear prediction coefficients for a plurality of subframes of the frame; and </claim-text>
<claim-text>producing a prediction residual for each sub-frame, whereby the prediction residual for the frame comprises a set of sub-frame prediction residuals. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The computer readable medium according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the step of dividing the residual into a series of contiguous, non-overlapping sections further comprises the steps of analyzing the frame to identify an integer pitch period. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The computer readable medium according to <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> wherein the step of analyzing the frame to identify an integer pitch period further comprises the step of employing co-relation analysis in the open loop. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The computer readable medium according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the step of calculating a linear continuous warp contour for each residual section further comprises the steps of: 
<claim-text>establishing a first sample lag for the first sample of the residual section; </claim-text>
<claim-text>identifying a set of candidates for the last sample lag for the last sample of the residual section, the set of candidates consisting of a subset of all possible last sample lag values within a sub-range of all possible last sample lag values; </claim-text>
<claim-text>performing a linear interpolation between the first and last samples of the residual section for each candidate last sample lag to create a set of candidate lag contours; </claim-text>
<claim-text>applying each candidate lag contour to the residual section to obtain a set of candidate modified residuals; </claim-text>
<claim-text>calculating a correlation strength between each candidate modified residual and the corresponding section of the idealized signal to create a set of correlation strengths; </claim-text>
<claim-text>deriving an optimal last sample lag for the residual section based on the set of correlation strengths; and </claim-text>
<claim-text>deriving a linear continuous warp contour by interpolating linearly over the section from the first sample lag to the derived optimal last sample lag for the residual section. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The computer readable medium according to <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the step of deriving an optimal last sample lag for the residual section based on the set of correlation strengths further comprises the steps of: 
<claim-text>segregating the set of correlation strengths into overlapping subsections as a function of the last sample lags used to derive the strengths; </claim-text>
<claim-text>representing each subsection as a curve; </claim-text>
<claim-text>calculating the maximum value of each curve, wherein the maximum value is selectable from the group consisting of all possible lag values within a range of possible lag values that includes the last sample lags used to derive the strengths in the subsection; and </claim-text>
<claim-text>calculating the maximum correlation strength for the section based on the maximum values for the curves of the subsections. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The computer readable medium according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> wherein the curve is a polynomial. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The computer readable medium according to <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference> wherein the polynomial is a quadratic function. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The computer readable medium according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the subrange of possible last sample lag values for each residual section is selected such that the greatest cumulative shift for any sample in the section upon application of the calculated warp contour will be less than four sample positions. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The computer readable medium according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the computer readable medium comprises a magnetically readable disc medium. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The computer readable medium according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the computer readable medium comprises an optically readable disc medium. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The computer readable medium according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the computer readable medium comprises a modulated data signal. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The computer readable medium according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the computer readable medium comprises volatile computer readable storage.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004718A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004718A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004718A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004718A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004718A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004718A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
