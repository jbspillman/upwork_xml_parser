<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002577A1-20030102-D00000.TIF SYSTEM "US20030002577A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002577A1-20030102-D00001.TIF SYSTEM "US20030002577A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002577A1-20030102-D00002.TIF SYSTEM "US20030002577A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002577A1-20030102-D00003.TIF SYSTEM "US20030002577A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002577A1-20030102-D00004.TIF SYSTEM "US20030002577A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002577A1-20030102-D00005.TIF SYSTEM "US20030002577A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002577A1-20030102-D00006.TIF SYSTEM "US20030002577A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002577A1-20030102-D00007.TIF SYSTEM "US20030002577A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002577A1-20030102-D00008.TIF SYSTEM "US20030002577A1-20030102-D00008.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002577</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896335</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04K001/04</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>H04K001/06</ipc>
</classification-ipc-secondary>
<classification-ipc-secondary>
<ipc>H04B001/66</ipc>
</classification-ipc-secondary>
<classification-ipc-secondary>
<ipc>H04N007/12</ipc>
</classification-ipc-secondary>
<classification-ipc-secondary>
<ipc>H04N011/02</ipc>
</classification-ipc-secondary>
<classification-ipc-secondary>
<ipc>H04N011/04</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>375</class>
<subclass>240010</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>375</class>
<subclass>240180</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>348</class>
<subclass>423100</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>348</class>
<subclass>385100</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>In a subscriber network receiving digital packets and transmitting digital packets below a predetermined maximum bit rate</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Howard</given-name>
<middle-name>G.</middle-name>
<family-name>Pinder</family-name>
</name>
<residence>
<residence-us>
<city>Norcross</city>
<state>GA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>SCIENTIFIC-ATLANTA, INC.</name-1>
<name-2>INTELLECTUAL PROPERTY DEPARTMENT</name-2>
<address>
<address-1>5030 SUGARLOAF PARKWAY</address-1>
<city>LAWRENCEVILLE</city>
<state>GA</state>
<postalcode>30044</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">An apparatus in a digital network receives at least one input transport stream having a plurality of PID streams and outputs at least one transport streams. The apparatus demultiplexes the at least one input transport streams and determines whether to: decrypt packets included in the at least one input transport stream; statistically multiplex a group of PID streams included in the at least one input transport stream; and encrypt packets included in the at least one input transport stream. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This invention relates generally to broadband communications systems, such as subscriber television systems and the equipment of the digital headend and hubs within such systems, and more specifically to receiving and transmitting digital packets within the broadband communication system. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Frequently, broadband systems transmit television signals to subscribers of a conditional access system. Broadband systems, such as cable and satellite television systems, typically include a headend for receiving programming, or sessions, and/or data from various sources and redistributing the programming and other data through a distribution system to subscribers. The headend receives programming signals from a variety of sources, combines the programming signals from the various sources, and transmits the combined signals through the distribution system to subscriber equipment. The distribution system can include a variety of media, such as coaxial cable, fiber optic cable, and satellite links. In a subscriber television system, the subscriber equipment, which receives the signals from the headend, can include a cable-ready television, a cable-ready video cassette recorder (VCR), or a digital home communications terminal (DHCT) that is connected to a television, computer, or other display device. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The headend uses modulators to control the streams of data into the distribution system. In today&apos;s competitive market, the modulators must be able to accept data/programming from equipment manufactured by many different suppliers. Increasingly, the headend is receiving and transmitting programming in a digital format, for example, Moving Pictures Expert Group (MPEG) format, instead of an analog format. Transmitting programs in MPEG format is advantageous because multiple digitized programs can be combined and transmitted in, for example, 6 MHz of bandwidth, which is the same amount of bandwidth that is required to transmit a single analog channel or program. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> MPEG transport streams include overhead information such as MPEG tables that indicate the types and location of the programming within the transport stream. In a local television system, the MPEG tables include information that is specific to that local distribution system and its particular channel line-up. MPEG as referenced in this application is described in the MPEG-1 and MPEG-2 standards. The MPEG-1 standards (ISO/IEC 11172) and the MPEG-2 standards (ISO/IEC 13818) are described in detail in the International Organization for Standardization document ISO/IEC JTCI/SC29/WG11N (June 1996 for MPEG-1 and July 1996 for MPEG-2), which is hereby incorporated by reference. Therefore, the headend system, and the modulators in particular, must insure that the required MPEG table data is contained in the outgoing bit stream. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Content and data providers provide streams of data, data streams, that include video, audio and data, to system operators via video sources, such as video encoders and video servers. The data streams are initially prepared for transmission through the broadband system by programming, or mapping, the video, audio and data with control software within a digital network control system (DNCS), which is an element manager for processing data within the headend. The DNCS causes the data streams associated with several programs to be combined into bundled groups of sessions. More specifically, the system operator defines and maps the specifications of the individual data streams from one or several content and data providers and, for example, multiplexes them into grouped sessions in order to maximize the use of the bandwidth available within the subscriber television system. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> In any broadband system there is a limited amount of bandwidth available. For example, a typical subscriber television system has a forward bandwidth of 50 Megahertz (MHz) to 870 MHz, which is divided into channels. Therefore, a limited number of modulated channels can be delivered to a particular DHCT. An example of a modulator is a quadrature amplitude modulation (QAM) modulator that receives a digital bit stream and modulates it for transmission over the subscriber television network. Typically, a channel occupies 6 MHz of bandwidth, and a QAM modulator can generally modulate and transmit data through the bandwidth at a rate of approximately 27 or 38 Mega bits per second depending upon the mode of QAM modulation used. The modulator modulates the bundled group of sessions with a particular radio frequency (RF) and the modulated signal is provided to the output port of the modulator. A combiner then combines the modulated sessions with other outputs from modulators. The combined modulated outputs are then provided downstream via a distribution network to a plurality of DHCTs. There are numerous bundled groups of sessions that can be programmed by the DNCS and provided to numerous modulators; however, each bundled group is modulated with a different frequency across all the modulators. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In a typical broadband subscriber television system, the efficiency of the system is optimized by choosing a bundled group of sessions such that the bit rate of the bundled group of session is close to, but does not exceed, the bandwidth limitation of the modulator. Typically, a bundled group of sessions includes a program or data information that has a variable bit rate, and consequently the bit rate of the bundled group of sessions cannot be precisely predetermined. Care must be taken by the operator of the system to make ensure that the bit rate for the bundled group of sessions does not exceed the bandwidth limitation of the modulator. Otherwise, a condition, which is known to those skilled in the art as macro-blocking, occurs when information from the bundled group of sessions is not transmitted from the modulator because the bit rate of the bundled group of sessions exceeds the bandwidth limitation of the modulator. One method for eliminating macro-blocking is to reduce the bit rate of the bundled group of sessions by reducing the number of sessions in the bundled group of session. Another method is to statistically multiplex the group of sessions. However, some or all of the programs or data information provided by the content providers to the subscriber television system is encrypted, and encrypted content cannot be statistically multiplexed. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Briefly described, in architecture, one embodiment of the system, among others, can be implemented as follows. An apparatus in a digital network receives a transport stream, which includes encrypted content. The apparatus includes a decryptor for decrypting the encrypted content and a statistical multiplexer. The decrypted content is statistically multiplexed into an output transport stream such that the bit rate of the output transport stream is beneath a predetermined threshold. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> An embodiment of the present invention can also be viewed as providing a method for receiving a transport stream and transmitting a transport stream that has a predetermined maximum bit rate. In this regard, one embodiment of such a method, among others, can be broadly summarized by the following steps: receiving a transport stream that includes a plurality of PID streams; decrypting at least one of the received PID streams; statistically multiplexing at least one of the received PID streams; and encrypting at least one of the PID streams. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Other systems, methods, features, and advantages of the present invention will be or become apparent to one with skill in the art upon examination of the following drawings and detailed description. It is intended that all such additional systems, methods, features, and advantages be included within this description, be within the scope of the present invention, and be protected by the accompanying claims.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a broadband communications system, such as a cable television system, in which the embodiments of the present invention may be employed. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a headend in the broadband communication system in which embodiments of the present invention may be employed. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a hub in the broadband communication system in which embodiments of the present invention may be employed. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram representation of an MPEG transport packet. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, consisting of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>A and <cross-reference target="DRAWINGS">FIG. 5</cross-reference>B, illustrates the relationship between MPEG tables and an MPEG transport stream. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6A</cross-reference> is a block diagram of the multi-transport stream receiver-transmitter&apos;s functional components. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6B</cross-reference> is a diagram of the memory of the multi-transport stream receiver-transmitter. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a block diagram of a Data Header. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a flowchart for handling packets of a received PID stream. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF A PREFERRED EMBODIMENT </heading>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Embodiments of the present invention will be described more fully hereinafter with reference to the accompanying drawings in which like numerals represent like elements throughout the several figures, and in which an exemplary embodiment of the invention is shown. The present invention may, however, be embodied in many different forms and should not be construed as limited to the embodiments set forth herein; rather, the embodiments are provided so that this disclosure will be thorough and complete, and will fully convey the scope of the invention to those skilled in the art. The examples set forth herein are non-limiting examples and are merely exemplary examples among other possible examples. </paragraph>
<paragraph id="P-0021" lvl="7"><number>&lsqb;0021&rsqb;</number> Television System Overview </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The preferred embodiment of the invention is best understood within the context of a two-way, interactive digital subscriber television system, as an example. In this discussion, the two-way interactive digital subscriber television system is also referred to as a Digital Broadband Delivery System (DBDS). An overview of an exemplary DBDS is provided in U.S. Pat. No. 6,157,719, entitled &ldquo;Conditional Access System&rdquo;, which is hereby incorporated by reference herein in its entirety. A function of the DBDS is to provide interfaces to content providers, entitlement agents, and services, control access to and the use of the content and services, and to distribute the content and services to subscribers. The DBDS uses Motion Picture Experts Group (MPEG) transport streams for delivery of 2% video, audio, and digitized data entertainment services. These can include programming and services such as local television channels, premium movie channels, video-on-demand (VOD), telephone services, and Internet access. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> digital broadband distribution system (DBDS) <highlight><bold>100</bold></highlight> includes a headend <highlight><bold>102</bold></highlight>, a plurality of hubs <highlight><bold>104</bold></highlight>, multiple nodes <highlight><bold>106</bold></highlight>, a plurality of subscriber locations <highlight><bold>108</bold></highlight>, and a plurality of digital home communication terminals (DHCTs) <highlight><bold>110</bold></highlight>. The headend <highlight><bold>102</bold></highlight> provides the interface between the DBDS <highlight><bold>100</bold></highlight> and service and content providers <highlight><bold>114</bold></highlight>, such as broadcasters, internet service providers, and the like. The transmission medium between the headend <highlight><bold>102</bold></highlight> and the service and content providers <highlight><bold>114</bold></highlight> can be two-way. This allows for two-way interactive services such as Internet access via DBDS <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Unlike prior distribution systems, which have a main trunk and branches, the DBDS <highlight><bold>100</bold></highlight> includes a plurality of hubs <highlight><bold>104</bold></highlight> and nodes <highlight><bold>106</bold></highlight> that are in communication with the headend <highlight><bold>102</bold></highlight> via transmission medium <highlight><bold>150</bold></highlight>. The headend <highlight><bold>102</bold></highlight> is in direct communication with the hubs <highlight><bold>104</bold></highlight>. However, in alternative embodiments, the headend <highlight><bold>102</bold></highlight> can be in direct communication with some or all of the nodes <highlight><bold>106</bold></highlight> or in direct communication with some or all of the subscriber locations <highlight><bold>108</bold></highlight>. Whether the headend <highlight><bold>102</bold></highlight> communicates directly with nodes <highlight><bold>106</bold></highlight> and/or subscriber locations <highlight><bold>108</bold></highlight> is a matter of implementation. The hub <highlight><bold>104</bold></highlight> receives programming and other information from headend <highlight><bold>102</bold></highlight> via transmission medium <highlight><bold>150</bold></highlight> and transmits information and programming via transmission medium <highlight><bold>152</bold></highlight> to nodes <highlight><bold>106</bold></highlight>, which then transmit the information to subscriber locations <highlight><bold>108</bold></highlight> through transmission medium <highlight><bold>154</bold></highlight>. Again, whether the hub <highlight><bold>104</bold></highlight> communicates directly to subscriber locations <highlight><bold>108</bold></highlight> or to nodes <highlight><bold>106</bold></highlight> is matter of implementation, and in the preferred embodiment, the hub <highlight><bold>104</bold></highlight> is adapted to transmit information and programming directly to subscriber locations <highlight><bold>108</bold></highlight> via transmission medium <highlight><bold>154</bold></highlight>. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> In the preferred embodiment, the transmission medium <highlight><bold>150</bold></highlight> and <highlight><bold>152</bold></highlight> are optical fibers that allow the distribution of high quality and high-speed signals, and the transmission medium <highlight><bold>154</bold></highlight> is either broadband coaxial cable or optical fiber. In alternative embodiments, the transmission media <highlight><bold>150</bold></highlight>, <highlight><bold>152</bold></highlight> and <highlight><bold>154</bold></highlight> can incorporate one or more of a variety of media, such as optical fiber, coaxial cable, and hybrid fiber-coax (HFC), satellite, direct broadcast, or other transmission media known to those skilled in the art. Typically, the transmission media <highlight><bold>150</bold></highlight>, <highlight><bold>152</bold></highlight> and <highlight><bold>154</bold></highlight> are two-way communication media through which both in-band and out-of-band information are transmitted. Through the transmission media <highlight><bold>150</bold></highlight>, <highlight><bold>152</bold></highlight> and <highlight><bold>154</bold></highlight> subscriber locations <highlight><bold>108</bold></highlight> are in direct or indirect two-way communication with the headend <highlight><bold>102</bold></highlight> and/or the hub <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The hub <highlight><bold>104</bold></highlight> functions as a mini-headend for the introduction of programming and services to sub-distribution network <highlight><bold>160</bold></highlight>. The sub-distribution network <highlight><bold>160</bold></highlight> includes hub <highlight><bold>104</bold></highlight> and the plurality of nodes <highlight><bold>106</bold></highlight> connected to hub <highlight><bold>104</bold></highlight>. Having a plurality of hubs <highlight><bold>104</bold></highlight> that function as mini-headends facilitate the introduction of different programming, data and services to different sub-distribution networks of DBDS <highlight><bold>100</bold></highlight>. For example, the subscriber location <highlight><bold>108</bold></highlight>(<highlight><italic>b</italic></highlight>), which is connected to node <highlight><bold>106</bold></highlight>(<highlight><italic>b</italic></highlight>), can have different services, data and programming available than the services, data and programming available to subscriber location <highlight><bold>108</bold></highlight>(<highlight><italic>c</italic></highlight>), which is connected directly to headend <highlight><bold>102</bold></highlight>, even though the subscriber locations <highlight><bold>108</bold></highlight>(<highlight><italic>b</italic></highlight>) and <highlight><bold>108</bold></highlight>(<highlight><italic>c</italic></highlight>) may be in close physical proximity to each other. Services, data and programming for subscriber location <highlight><bold>108</bold></highlight>(<highlight><italic>b</italic></highlight>) are routed through hub <highlight><bold>104</bold></highlight> and node <highlight><bold>106</bold></highlight>(<highlight><italic>b</italic></highlight>); and hub <highlight><bold>104</bold></highlight> can introduce services, data and programming into the DBDS <highlight><bold>100</bold></highlight> that are not available through the headend <highlight><bold>102</bold></highlight>. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> At the subscriber locations <highlight><bold>108</bold></highlight> a decoder or a DHCT <highlight><bold>110</bold></highlight> provides the two-way interface between the DBDS <highlight><bold>100</bold></highlight> and the subscriber. The DHCT decodes the signals for display on a display device, such as a television set (TV) <highlight><bold>112</bold></highlight> or a computer monitor. Those skilled in the art will appreciate that in alternative embodiments the equipment for decoding the signal can be located in a variety of equipment, including, but not limited to, a DHCT, a computer, a TV, a monitor, or an MPEG decoder. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is an overview of a headend <highlight><bold>102</bold></highlight>, which provides the interface between the DBDS <highlight><bold>100</bold></highlight> and the service and content providers <highlight><bold>114</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>). The headend <highlight><bold>102</bold></highlight> receives content from a variety of service and content providers <highlight><bold>114</bold></highlight>, which can provide input in a variety of ways. The headend <highlight><bold>102</bold></highlight> combines the content from the various sources and distributes the content to subscribers via transmission medium <highlight><bold>150</bold></highlight>. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> In a typical system, the headend <highlight><bold>102</bold></highlight> receives content from a variety of input sources <highlight><bold>202</bold></highlight> and <highlight><bold>210</bold></highlight>. The input signals may be transmitted from sources to the headend <highlight><bold>102</bold></highlight> via a variety of transmission paths, including satellites <highlight><bold>204</bold></highlight>, and terrestrial broadcast transmitter and antenna, <highlight><bold>206</bold></highlight> and <highlight><bold>208</bold></highlight>, respectively. The headend <highlight><bold>102</bold></highlight> can also receive content from a direct feed source <highlight><bold>210</bold></highlight> via a direct line <highlight><bold>212</bold></highlight>. Other input sources include, but are not limited to, a video camera <highlight><bold>214</bold></highlight> or an application server <highlight><bold>216</bold></highlight>. The signals provided by the content or programming input sources can include a single program or a multiplex that includes several programs, and typically, a portion of the content from the input sources is encyrpted. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The headend <highlight><bold>102</bold></highlight> generally includes a plurality of receivers <highlight><bold>218</bold></highlight> that are each associated with a content source. Generally, the content is transmitted from the receivers <highlight><bold>218</bold></highlight> in the form of transport stream <highlight><bold>240</bold></highlight>. MPEG encoders, such as encoder <highlight><bold>220</bold></highlight>, are included for digitally encoding things such as local programming or a feed from video camera <highlight><bold>214</bold></highlight>. Typically, the encoder <highlight><bold>220</bold></highlight> produces a variable bit rate transport port stream. Some of the signals may require additional processing, such as signal multiplexing prior to being modulated. Such multiplexing is done by multiplexer <highlight><bold>222</bold></highlight>. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> A switch, such as asynchronous transfer mode (ATM) switch <highlight><bold>224</bold></highlight>, provides an interface to an application server <highlight><bold>216</bold></highlight>. There can be multiple application servers <highlight><bold>216</bold></highlight> providing a variety of services such as a data service, an Internet service, a network system, or a telephone system. Service and content providers <highlight><bold>114</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) may download content to an application server <highlight><bold>216</bold></highlight> located within the DBDS <highlight><bold>100</bold></highlight> or in communication with DBDS <highlight><bold>100</bold></highlight>. The application server <highlight><bold>216</bold></highlight> may be located within headend <highlight><bold>102</bold></highlight> or elsewhere within DBDS <highlight><bold>100</bold></highlight>, such as in a hub <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Typically, the headend <highlight><bold>102</bold></highlight> includes a server such as a video-on-demand (VOD) pump <highlight><bold>226</bold></highlight>. VOD pump <highlight><bold>226</bold></highlight> provides video and audio programming such as pay-per-view programming to subscribers of the DBDS <highlight><bold>100</bold></highlight>. Usually, the content from VOD pump <highlight><bold>226</bold></highlight> is provided in the form of transport stream <highlight><bold>240</bold></highlight>. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The various inputs into the headend <highlight><bold>102</bold></highlight> are then combined with the other information, which is specific to the DBDS <highlight><bold>100</bold></highlight>, such as local programming and control information. The headend <highlight><bold>102</bold></highlight> includes a multi-transport stream receiver-transmitter <highlight><bold>228</bold></highlight> that receives a plurality of transport streams <highlight><bold>240</bold></highlight> and transmits a plurality of transport streams <highlight><bold>242</bold></highlight>. In the preferred embodiment, the multi-transport stream receiver-transmitter <highlight><bold>228</bold></highlight> includes a plurality of modulators, such as, but not limited to, Quadrature Amplitude Modulation (QAM) modulators, that convert the received transport streams <highlight><bold>240</bold></highlight> into modulated output signals suitable for transmission over transmission medium <highlight><bold>280</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The output signals <highlight><bold>242</bold></highlight> from the multi-transport stream receiver-transmitters <highlight><bold>228</bold></highlight> are combined, using equipment such as a combiner <highlight><bold>230</bold></highlight>, for input into the transmission medium <highlight><bold>150</bold></highlight>, and the combined signals are sent via the in-band delivery path <highlight><bold>254</bold></highlight> to subscriber locations <highlight><bold>108</bold></highlight>. It is to be understood that modulating the output signals <highlight><bold>242</bold></highlight> is a matter of implementation based at least in part on the transmission medium <highlight><bold>280</bold></highlight> that carries output signals <highlight><bold>242</bold></highlight>. In the preferred embodiment, the multi-transport stream receiver-transmitter <highlight><bold>228</bold></highlight> receives a plurality of input transport streams <highlight><bold>240</bold></highlight>, which include programs, or sessions, and outputs a plurality of radio frequency modulated transport streams <highlight><bold>242</bold></highlight>. Details regarding the multi-transport stream receiver-transmitter <highlight><bold>228</bold></highlight> are provided hereinbelow. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> In the DBDS <highlight><bold>100</bold></highlight>, video, audio, and control information are encoded as program streams, which are then multiplexed to form transport streams <highlight><bold>240</bold></highlight>. Each output transport stream from multi-transport stream receiver-transmitter <highlight><bold>228</bold></highlight> is modulated to a set frequency. For the DHCT <highlight><bold>110</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) to receive a television program, the DHCT <highlight><bold>110</bold></highlight> must tune to the frequency associated with the modulated transport stream that contains the desired information, de-multiplex the transport stream, and decode the appropriate program streams. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> A system controller, such as control system <highlight><bold>232</bold></highlight>, which preferably includes computer hardware and software providing the functions discussed herein below, allows the television system operator to control and monitor the functions and performance of the DBDS <highlight><bold>100</bold></highlight>. The control system <highlight><bold>232</bold></highlight> interfaces with various components, via communication link <highlight><bold>270</bold></highlight>, in order to monitor and/or control a variety of functions, including the channel lineup of the programming for the DBDS <highlight><bold>100</bold></highlight>, billing for each subscriber, and conditional access for the content distributed to subscribers. Control system <highlight><bold>232</bold></highlight> provides input to the multi-transport stream receiver-transmitters <highlight><bold>228</bold></highlight> for setting their operating parameters, such as system specific MPEG table packet organization or conditional access information. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> Control information and other data can be communicated to DHCTs <highlight><bold>110</bold></highlight> via an in-band delivery path <highlight><bold>254</bold></highlight> or to DHCTs <highlight><bold>110</bold></highlight> connected to the headend <highlight><bold>102</bold></highlight> via an out-of-band delivery path <highlight><bold>256</bold></highlight>. The out-of-band data is transmitted via the out-of-band downstream path <highlight><bold>258</bold></highlight> of transmission medium <highlight><bold>150</bold></highlight> by means such as, but not limited to, a Quadrature Phase-Shift Keying (QPSK) modem array <highlight><bold>260</bold></highlight>, an array of data-over-cable service interface specification (DOCSIS) modems, or other means know to those skilled in the art. Two-way communication utilizes the upstream portion <highlight><bold>262</bold></highlight> of the out-of-band delivery system. DHCTs <highlight><bold>110</bold></highlight> transmit out of band data through the transmission medium <highlight><bold>150</bold></highlight>, and the out of band data is received in headend <highlight><bold>102</bold></highlight> via out-of-band upstream paths <highlight><bold>262</bold></highlight>. The out-of-band data is routed through router <highlight><bold>264</bold></highlight> to an application server <highlight><bold>216</bold></highlight> or to control system <highlight><bold>232</bold></highlight>. The out-of-band control information includes such information as a pay-per-view purchase instruction and a pause viewing command from the subscriber location <highlight><bold>108</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) to a video-on-demand type application server <highlight><bold>216</bold></highlight>, and other commands for establishing and controlling sessions such as a Personal Television session. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The router <highlight><bold>264</bold></highlight> is also used for communicating with the hub <highlight><bold>104</bold></highlight> through transmission medium <highlight><bold>150</bold></highlight>. Typically, command and control information among other information between the headend <highlight><bold>102</bold></highlight> and the hub <highlight><bold>104</bold></highlight> are communicated through transmission medium <highlight><bold>150</bold></highlight> using a protocol such as Internet Protocol. The IP traffic between the headend <highlight><bold>102</bold></highlight> and hub <highlight><bold>104</bold></highlight> can include information to and from DHCTs <highlight><bold>110</bold></highlight> connected to hub <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The control system <highlight><bold>232</bold></highlight>, such as Scientific-Atlanta&apos;s Digital Network Control System (DNCS), also monitors, controls, and coordinates all communications in the subscriber television system, including video, audio, and data. The control system <highlight><bold>232</bold></highlight> can be located at headend <highlight><bold>102</bold></highlight> or remotely. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> In an alternative embodiment, the headend <highlight><bold>102</bold></highlight> can include multiple sub-controllers (not shown) that are under the control of the control system <highlight><bold>232</bold></highlight>. The sub-controllers can alleviate or reduce the processing load placed upon control system <highlight><bold>232</bold></highlight>. Sub-controllers can, among other things, perform the functions for controlling application server <highlight><bold>216</bold></highlight> and VOD pump <highlight><bold>226</bold></highlight>, managing encryption and decryption of content. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the hub <highlight><bold>104</bold></highlight>, which is remotely located from the headend <highlight><bold>102</bold></highlight>, provides services and programming to the DHCTs <highlight><bold>110</bold></highlight> in a sub-region of the subscriber television system. In the preferred embodiment, the hub <highlight><bold>104</bold></highlight> functions as a mini-headend, and consequently, the hub <highlight><bold>104</bold></highlight> includes many of the same components necessary for performing the functions of the headend <highlight><bold>102</bold></highlight>. However, it is to be understood that in alternative embodiments, the hub <highlight><bold>104</bold></highlight> can include less or more components than headend <highlight><bold>102</bold></highlight> and that the functionality of hub <highlight><bold>104</bold></highlight> can be different than the headend <highlight><bold>102</bold></highlight>. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> In the preferred embodiment, the hub <highlight><bold>104</bold></highlight> receives programming, services, and data from the headend <highlight><bold>102</bold></highlight> via the in-band delivery path <highlight><bold>254</bold></highlight> and the IP traffic through transmission medium <highlight><bold>150</bold></highlight>. In addition, the hub <highlight><bold>104</bold></highlight> can receive or provide services and programming from a variety of additional sources, such as, but not limited to, an input source <highlight><bold>302</bold></highlight>, a video camera <highlight><bold>314</bold></highlight>, a VOD pump <highlight><bold>326</bold></highlight>, or a sub-region application server <highlight><bold>316</bold></highlight>. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> The hub <highlight><bold>104</bold></highlight> includes a controller <highlight><bold>332</bold></highlight> that controls elements, such as multi-transport stream receiver-transmitter <highlight><bold>328</bold></highlight>, of hub <highlight><bold>104</bold></highlight>. The controller <highlight><bold>332</bold></highlight> provides instructions to the elements of hub <highlight><bold>104</bold></highlight> through communication link <highlight><bold>370</bold></highlight>. The hub <highlight><bold>104</bold></highlight> also includes a receiver <highlight><bold>318</bold></highlight> that is associated with input source <highlight><bold>302</bold></highlight>. MPEG encoders, such as encoder <highlight><bold>320</bold></highlight>, are included for encoding such things as local programming or a video camera <highlight><bold>314</bold></highlight> feed. Some of the signals may require additional processing, such as signal multiplexing prior to being modulated. Such multiplexing is done by multiplexer <highlight><bold>322</bold></highlight>. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> A switch, such as ATM switch <highlight><bold>324</bold></highlight>, provides access to the sub-region application server <highlight><bold>316</bold></highlight>. There can be multiple sub-region application servers <highlight><bold>316</bold></highlight> providing a variety of services such as a data service, an Internet service, a network system, or a telephone system. Service and content providers <highlight><bold>114</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) may download content to a sub-distribution network <highlight><bold>160</bold></highlight> application server <highlight><bold>316</bold></highlight> via transmission medium <highlight><bold>150</bold></highlight>. The services and programming of the sub-distribution network <highlight><bold>160</bold></highlight>, which includes hub <highlight><bold>104</bold></highlight>, may be orientated to the demographics of the subscribers connected to the sub-distribution network <highlight><bold>160</bold></highlight>. This sub-region segmentation of the subscriber television system allows for very localized services and programming such as a neighborhood channel or direct advertising to a specific market segment. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The services and programming for the sub-distribution network <highlight><bold>160</bold></highlight>, which includes hub <highlight><bold>104</bold></highlight>, are then combined with the other information specific to the DBDS <highlight><bold>100</bold></highlight>, such as services and programming from headend <highlight><bold>102</bold></highlight>. The hub <highlight><bold>104</bold></highlight> includes multi-transport stream receiver-transmitter <highlight><bold>328</bold></highlight> to convert the programming information of transport streams <highlight><bold>340</bold></highlight> into a plurality of modulated output signals <highlight><bold>342</bold></highlight>. The multi-transport stream receiver-transmitter <highlight><bold>328</bold></highlight> includes a plurality of radio frequency modulators, such as, but not limited to, Quadrature Amplitude Modulation (QAM) modulators, that prepare the formatted information for delivery via the in-band delivery path <highlight><bold>354</bold></highlight> of the transmission medium <highlight><bold>152</bold></highlight> to the subscriber locations <highlight><bold>108</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>). The output signals <highlight><bold>342</bold></highlight> from the multi-transport stream receiver-transmitter <highlight><bold>328</bold></highlight> are combined, using equipment such as a combiners <highlight><bold>346</bold></highlight>, for input into the transmission medium <highlight><bold>152</bold></highlight> via the in-band delivery path <highlight><bold>354</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> Out-of-band data is transmitted through the transmission medium <highlight><bold>152</bold></highlight> by means such as, but not limited to, Quadrature Phase-Shift Keying (QPSK) modem array <highlight><bold>360</bold></highlight>, a DOCSIS modem array (not shown) via out-of-band downstream path <highlight><bold>362</bold></highlight>. The out-of-band data is transmitted via the out-of-band downstream path <highlight><bold>358</bold></highlight> of transmission medium <highlight><bold>152</bold></highlight> by the Quadrature Phase-Shift Keying (QPSK) modem array <highlight><bold>360</bold></highlight>. Two-way communication utilizes the out-of band up stream path <highlight><bold>362</bold></highlight> of the out-of-band delivery path <highlight><bold>356</bold></highlight>. The received out-of-band information is routed through router <highlight><bold>364</bold></highlight> to headend <highlight><bold>102</bold></highlight> and application servers <highlight><bold>316</bold></highlight>. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Router <highlight><bold>364</bold></highlight> provides the interface between hub <highlight><bold>104</bold></highlight> and headend <highlight><bold>102</bold></highlight> for out-of-band control information. The router <highlight><bold>364</bold></highlight> receives information from the headend as IP traffic through transmission medium <highlight><bold>150</bold></highlight> and receives out-of-band data from the DHCTs <highlight><bold>110</bold></highlight> through the QPSK modem array <highlight><bold>360</bold></highlight>. In another embodiment, the hub <highlight><bold>104</bold></highlight> includes a control system that controls the devices in the hub <highlight><bold>104</bold></highlight> and interfaces with the headend <highlight><bold>102</bold></highlight> and with the DHCTs <highlight><bold>110</bold></highlight> connected to the hub <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> Through the transmission medium <highlight><bold>152</bold></highlight> the signals from the hub <highlight><bold>104</bold></highlight> are distributed to the nodes <highlight><bold>106</bold></highlight> and to subscriber locations <highlight><bold>108</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) via transmission medium <highlight><bold>154</bold></highlight>. The transmission medium <highlight><bold>152</bold></highlight> can incorporate one or more of a variety of media, such as optical fiber, coaxial cable, hybrid fiber-coax, satellite, direct broadcast, or other transmission media. An example of a DBDS <highlight><bold>100</bold></highlight> incorporating multiple varieties of media would be the transmission media referred to as hybrid fiber-coax that includes a transmission medium <highlight><bold>150</bold></highlight> incorporating fiber-optical cabling and a transmission medium <highlight><bold>152</bold></highlight> incorporating coaxial cabling. An alternative example of a DBDS <highlight><bold>100</bold></highlight> incorporating multiple varieties of media includes a transmission medium <highlight><bold>150</bold></highlight> incorporating fiber-optical cabling from the head end <highlight><bold>102</bold></highlight> to the node <highlight><bold>106</bold></highlight> and incorporating coaxial cabling from the node <highlight><bold>106</bold></highlight> to the subscriber location <highlight><bold>108</bold></highlight>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> With multiple places to introduce services and programming, the control system <highlight><bold>232</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) for the subscriber television system must coordinate and control the services and programming available to each DHCT. A service group defines a group of DHCTs that receive services and programming from the same modulators. Therefore, the same services and programming are available to all the DHCTs in a service group, even if some subscribers do not subscribe to the same services and programming. </paragraph>
<paragraph id="P-0050" lvl="7"><number>&lsqb;0050&rsqb;</number> Moving Pictures Experts Group (MPEG) Overview </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The Moving Pictures Experts Group (MPEG) was established by the International Standards Organization (ISO) for the purpose of creating standards for digital audio/video compression. The MPEG experts created the MPEG-1 and MPEG-2 standards, with the MPEG-1 standard being a subset of the MPEG-2 standard. The combined MPEG-1 and MPEG-2 standards are hereinafter referred to as MPEG. In an MPEG encoded transmission, programming and other data are transmitted in packets, which collectively make up a transport stream. An MPEG transport stream includes video packets, audio packets, data packets and table packets, which provide information about the organization of the transport stream and about any conditional access scheme that is used. Additional information regarding transport stream packets, the composition of the transport stream, types of MPEG tables and other aspects of the MPEG standards are described below. In addition, <cross-reference target="DRAWINGS">FIG. 4</cross-reference> and <cross-reference target="DRAWINGS">FIGS. 5A and 5B</cross-reference> provide a graphical representation of MPEG information. In an exemplary embodiment, the present invention employs MPEG table packets. However, the present invention is not so limited, and can be implemented using other types of data. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> As mentioned above, an MPEG transport stream is made of packets, where each packet is identified by a packet identifier (PID). Generally, a single program includes a plurality of elementary streams or PID streams; each packet of a PID stream has common PID value. The elementary streams of a single program or session includes video packets, audio packets and associated data packets. All of the video packets associated with a given program or session included in a transport stream will have the same PID. It is possible that a given program will include a plurality of audio options. For example, a given program might be provided to the user in English, Spanish and German, in which case the program will include three sets of audio packets and each set of audio packets will have a unique PID value in the transport stream. In general, table packets are used to indicate which packets are associated with each program in the transport stream. Additional information regarding the makeup of an MPEG transport stream and its various components is provided below. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> Packetized Elementary Stream (PES) </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> The output of a single MPEG audio or video encoder <highlight><bold>220</bold></highlight> (of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) is an Elementary Stream, which is an endless, near-real-time signal. The Elementary Stream is broken into packets in what is referred to as a Packetized Elementary Stream (PES). These packets include header information to identify the start of the packets and must include time stamps because packetizing disrupts the time axis. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Program Stream (PS) </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> One video PES and a number of audio PESs can be combined to form a Program Stream (PS), provided that all of the encoders are locked to a common clock. Time stamps in each PES ensure correct correlation or lip-sync between the video and audio. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> Transport Stream Packet </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> A Transport Stream is a multiplex that includes several Program Streams, which are transported in fixed size, 188 byte, transport stream packets <highlight><bold>400</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 4</cross-reference>). <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates a transport stream packet <highlight><bold>400</bold></highlight>, including a minimum 4 Byte header <highlight><bold>402</bold></highlight> and a payload <highlight><bold>404</bold></highlight>. The header <highlight><bold>402</bold></highlight> is further expanded to illustrate the parts thereof. The numbers at the bottom of the cells, such as the 8 in Sync Byte field <highlight><bold>408</bold></highlight>, indicate the fixed bit size of the cell. Cells with no number, such as payload <highlight><bold>404</bold></highlight>, do not have a fixed size. In header <highlight><bold>402</bold></highlight>, the most important information is: </paragraph>
<paragraph id="P-0059" lvl="2"><number>&lsqb;0059&rsqb;</number> Sync byte cell <highlight><bold>408</bold></highlight>, which is recognized by a de-multiplexer or decoder so that alignment to the start of a packet can be determined. </paragraph>
<paragraph id="P-0060" lvl="2"><number>&lsqb;0060&rsqb;</number> Transport error indicator cell <highlight><bold>410</bold></highlight>, which is set if the error correction layer above the transport layer is experiencing a raw bit error rate (BER) that is too high to be correctable. It indicates that the packet may contain errors. </paragraph>
<paragraph id="P-0061" lvl="2"><number>&lsqb;0061&rsqb;</number> Packet Identifier (PID) cell <highlight><bold>406</bold></highlight>, which is a thirteen-bit code used by a de-multiplexer or decoder to distinguish between different types of packets. </paragraph>
<paragraph id="P-0062" lvl="2"><number>&lsqb;0062&rsqb;</number> Continuity counter cell <highlight><bold>412</bold></highlight>, which is a four-bit value that is incremented by the encoder as each new packet having the same PID, is sent. It is used to determine if any packets are lost, repeated, or out of sequence. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> Header <highlight><bold>402</bold></highlight> also includes a start indicator cell, a transport priority cell, a scrambling control cell, an adaptation field control cell <highlight><bold>414</bold></highlight>, and an adaptation field cell <highlight><bold>418</bold></highlight>. Included within the adaptation field cell <highlight><bold>418</bold></highlight> is an adaptation field length cell <highlight><bold>420</bold></highlight>, a discontinuity indicator cell, a random access indicator cell, an elementary stream priority indicator cell, a 4 flags cell, an optional fields cell, and a Stuffing Bytes cell <highlight><bold>416</bold></highlight>. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> In some cases more information is needed in header <highlight><bold>402</bold></highlight>. The header can be expanded using adaptation field cell <highlight><bold>418</bold></highlight>. If header <highlight><bold>402</bold></highlight> is expanded, payload <highlight><bold>404</bold></highlight> becomes smaller to maintain the fixed packet size of 188 bytes. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> Stuffing Packets </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> When the required bit rate or packet size is less than the fixed bit rate or fixed packet size, the excess capacity is filled by inserting stuffing. Stuffing can be used in two ways, as stuffing bytes or as a stuffing packet. Stuffing bytes can be used with a partial payload to fill up the remainder of transport stream packet <highlight><bold>400</bold></highlight> to maintain the fixed packet size. Stuffing bytes can be in the payload <highlight><bold>404</bold></highlight> or in the Stuffing Bytes cell <highlight><bold>416</bold></highlight> of an expanded header <highlight><bold>402</bold></highlight>. A stuffing packet, a transport streams packet <highlight><bold>400</bold></highlight> with only a header and stuffing, can be used in a fixed rate bit stream to maintain the fixed bit rate. The stuffing packet is used to fill unused or excess capacity. PID value of 8191 or thirteen 1&apos;s always identifies stuffing packets. Demultiplexers and decoders ignore packets thus identified as stuffing packets. The content of a stuffing packet can be all ones (1), all zeros (0), or pseudo-random 1s and 0s. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> Transport Stream (TS) </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIGS. 5A and 5B</cross-reference>, several programs and their associated PESs are multiplexed to form a single Transport Stream (TS) <highlight><bold>502</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5B</cross-reference>). A Transport Stream <highlight><bold>502</bold></highlight> differs from a Program Stream in that the PES packets are further subdivided into short fixed-size (i.e., 188 byte) transport stream packets <highlight><bold>400</bold></highlight> and in that multiple programs encoded with different clocks can be carried in the transport stream. This is possible because a transport stream <highlight><bold>502</bold></highlight> has a session clock reference (PCR) mechanism that allows transmission of multiple clocks. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> The fixed-size transport stream packets <highlight><bold>400</bold></highlight> of Transport Stream <highlight><bold>502</bold></highlight> each contain 188 bytes. Many different programs streams are multiplexed in the transport stream <highlight><bold>502</bold></highlight>. Program streams are made up of a plurality of video, audio, data and other streams, or PID streams. Each PID stream is made up of a stream of packets having a common PID value. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> In advanced applications, each program may use a different compression factor and a bit rates that can change dynamically even though the overall bit rate for Transport Stream <highlight><bold>502</bold></highlight> stays constant. Statistical multiplexing allows a program temporarily requiring a larger bandwidth to borrow bandwidth from a program that is not using all of its allocated bandwidth. In addition, each video PES could have a different number of audio and data PESs associated with it. With this flexibility in the make-up of Transport Stream <highlight><bold>502</bold></highlight>, a decoder or demultiplexer must be able to change from one program to the next and correctly select the appropriate audio and data channels. MPEG tables described herein below facilitate this changing and selecting. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> A Transport Stream <highlight><bold>502</bold></highlight> is more than just a multiplex of audio and video packets. In addition to the compressed audio, video, and data, Transport Stream <highlight><bold>502</bold></highlight> includes a great deal of information that describes the bit stream. This information is found in MPEG tables such as Program Specific Information tables or System Information tables, which describe the relationships of the MPEG packets and identify their corresponding packet identifier (PID) value. Each packet carries a PID <highlight><bold>406</bold></highlight> (see <cross-reference target="DRAWINGS">FIG. 4</cross-reference>) located in the packet header <highlight><bold>402</bold></highlight>. The MPEG tables list the PIDs for all packets associated with a particular program. The decoder or demultiplexer uses the PIDs to change from one program to the next and correctly select the appropriate audio and data channels. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference>A and <cross-reference target="DRAWINGS">FIG. 5</cross-reference>B, illustrates the relationship between the transport stream <highlight><bold>502</bold></highlight>, the MPEG packets and tables therein, and the function of PIDs. Illustrative of the function of PIDs, they can be used to locate the associated tables in <cross-reference target="DRAWINGS">FIG. 5A</cross-reference> or the corresponding packets in <cross-reference target="DRAWINGS">FIG. 5B</cross-reference>. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference>A, represents the different MPEG tables in the MPEG transport stream <highlight><bold>502</bold></highlight>. For example, Program Association Table <highlight><bold>504</bold></highlight>, which is a packet in transport stream <highlight><bold>502</bold></highlight> that is identified by a PID having a value of 0, indicates that all packets with a PID value of 22 are Program Map Tables (PMT) associated with program <highlight><bold>1</bold></highlight>. The PMT <highlight><bold>522</bold></highlight>, which has a PID value of 22, indicates the PIDs of the MPEG packets <highlight><bold>400</bold></highlight> that make up the various components of the program stream associated with program <highlight><bold>1</bold></highlight>. For the purposes of this disclosure a program stream is made up of the packets identified in a PMT packet. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference>B, represents the MPEG packets <highlight><bold>400</bold></highlight> found in a typical MPEG transport stream <highlight><bold>502</bold></highlight>. The MPEG packets <highlight><bold>400</bold></highlight> are labeled and display their corresponding PID values. The PIDs can identify an associated table of <cross-reference target="DRAWINGS">FIG. 5A</cross-reference>. For example, in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>B, the packet <highlight><bold>522</bold></highlight>, which has a PID value of 22, corresponds to the PMT <highlight><bold>522</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5A</cross-reference>. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> Program Specific Information (PSI) </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> A demultiplexer or decoder can correctly select packets only if it can correctly associate them with the transport stream <highlight><bold>502</bold></highlight> to which they belong. A demultiplexer or decoder can do this task only if it knows what the right PIDs are. This is the function of the Program Specific Information (PSI) tables. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> The PSI includes the Program Association Table (PAT) <highlight><bold>504</bold></highlight>, the Conditional Access Table (CAT) <highlight><bold>508</bold></highlight>, and the Program Map Table (PMT). In <cross-reference target="DRAWINGS">FIG. 5A</cross-reference> two PMTs are shown, Program <highlight><bold>1</bold></highlight> PMT <highlight><bold>522</bold></highlight> and Program <highlight><bold>3</bold></highlight> PMT <highlight><bold>530</bold></highlight>. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> The PSI tables are carried in packets having unique PIDs; some of which are standardized and some of which are specified by the PAT <highlight><bold>504</bold></highlight> and the CAT <highlight><bold>508</bold></highlight>. These table packets must be repeated periodically in every transport stream. The PAT <highlight><bold>504</bold></highlight> always has a PID of 0, the CAT <highlight><bold>508</bold></highlight> always has a PID of 1, and stuffing packets always have a PID of 8191. These are the only fixed PIDs in the MPEG system. The demultiplexer or decoder must determine all of the remaining PIDs by accessing the appropriate table(s). </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> The Program Association Table (PAT) <highlight><bold>504</bold></highlight> lists every program in transport stream <highlight><bold>502</bold></highlight>. The PAT <highlight><bold>504</bold></highlight> identifies the PID values for the packets containing the associated Program Map Tables (PMT) <highlight><bold>506</bold></highlight> for the programs included in transport stream <highlight><bold>502</bold></highlight>. For example, PAT <highlight><bold>504</bold></highlight> identifies all packets with PID 22 as being a PMT <highlight><bold>522</bold></highlight> associated with program <highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> The video, audio and data elementary streams that belong in the same program stream are listed in a PMT <highlight><bold>506</bold></highlight> with their associated PIDs. For example, PMT <highlight><bold>522</bold></highlight> lists a video stream, two audio streams, a data stream, and other elementary streams belonging to program <highlight><bold>1</bold></highlight>. PMT <highlight><bold>522</bold></highlight> also identifies the associated PID values for each PID stream of program <highlight><bold>1</bold></highlight>, such as the PID value of 54 for all program <highlight><bold>1</bold></highlight> video streams. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 5</cross-reference>A, the PAT <highlight><bold>504</bold></highlight> associates the PID value of 33 with all program <highlight><bold>3</bold></highlight> PMT <highlight><bold>530</bold></highlight> packets. In the corresponding PMT <highlight><bold>530</bold></highlight>, elementary stream <highlight><bold>1</bold></highlight> identifies as a video stream all packets with a PID value of 19. All program <highlight><bold>3</bold></highlight> video <highlight><bold>1</bold></highlight> packets, in transport stream <highlight><bold>502</bold></highlight>, have PID value of 19 as indicated by arrows <highlight><bold>520</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5B</cross-reference>. PMT <highlight><bold>522</bold></highlight> indicates that all video packets associated with program <highlight><bold>1</bold></highlight> have a PID value of 54. Arrows <highlight><bold>554</bold></highlight> in transport stream <highlight><bold>502</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5B</cross-reference> indicate these packets. The decoder (or a demultiplexer) can select all data for a given elementary stream by accepting only packets with the right PID value, such as a PID value of 19 for elementary stream <highlight><bold>1</bold></highlight> video, and rejecting the remainder. Data for an entire program can be selected using the PID values in a PMT. For example, for the entire program <highlight><bold>3</bold></highlight>, using PMT <highlight><bold>530</bold></highlight>, select all video packets with a PID value of 19, audio packets with a PID value of 82 and data packets with a PID value of 88. Packet-continuity counts ensure that any loss of a packet that is needed to decode a stream is detected. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> Some or all of the programs are protected or tiered so that those who have paid a subscription or fee can only view them. The transport stream <highlight><bold>502</bold></highlight> contains conditional access information, Conditional Access Table (CAT) <highlight><bold>508</bold></highlight>, to administer this protection, located at PID 1 and labeled EMM in transport stream <highlight><bold>502</bold></highlight>. The PIDs for Entitlement Management Messages (EMM) are listed in the CAT <highlight><bold>508</bold></highlight> packets (PID&equals;1). </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> Consequently, if the decoding of a particular program is required, reference to the PAT <highlight><bold>504</bold></highlight> and then a PMT <highlight><bold>506</bold></highlight> is all that is needed to find the PIDs of all of the elementary streams in the program. If the program is encrypted, then access to the CAT <highlight><bold>508</bold></highlight> may also be necessary. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> The first entry in the PAT <highlight><bold>504</bold></highlight>, session <highlight><bold>0</bold></highlight>, indicates the PID of the System Information Table <highlight><bold>510</bold></highlight>. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> System Information Table </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> A given System Information Table <highlight><bold>510</bold></highlight> contains details of more than just the transport stream <highlight><bold>502</bold></highlight> carrying it or the PSI of the transport stream. The System Information Table <highlight><bold>510</bold></highlight> may also include details of other transport streams that may be available to the same decoder, for example, by tuning to a different RF channel or steering a dish to a different satellite. The System Information Table <highlight><bold>510</bold></highlight> may list a number of other transport streams and each one may have a descriptor that specifies the radio frequency, orbital position, and so on. System Information Table <highlight><bold>510</bold></highlight> provides information describing the overall system signal(s) of a specific television system <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> Types of a System Information Table <highlight><bold>510</bold></highlight> include a Digital Video Broadcast (DVB) standard Network Information Table (NIT) and an Advanced Television Systems Committee (ATSC) standard System Information (SI) table. DVB and ATSC transport streams may also contain additional service information. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> Those skilled in the art will appreciate that FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>6</bold></highlight> are intended to provide a brief, general description of a typical television system and MPEG encoded data, and that additional information is readily available from a variety of sources. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> Multi-Transport Stream Receiver-Transmitter </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> The logic of the present invention can be implemented in hardware, software, firmware, or a combination thereof. In the preferred embodiment, the logic is implemented in hardware, which can be implemented with any or a combination of the following technologies, which are all well known in the art: a discrete logic circuit(s) having logic gates for implementing logic functions upon data signals, an application specific integrated circuit (ASIC) having appropriate combinational logic gates, a programmable gate array(s) (PGA), a field programmable gate array (FPGA), etc. In an alternative embodiment, the logic is implemented in software or firmware that is stored in a memory and that is executed by a suitable instruction execution system. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> Any process descriptions or blocks in flow charts should be understood as representing modules, segments, or portions of code which include one or more executable instructions for implementing specific logical functions or steps in the process, and alternate implementations are included within the scope of the preferred embodiment of the present invention in which functions may be executed out of order from that shown or discussed, including substantially concurrently or in reverse order, depending on the functionality involved, as would be understood by those reasonably skilled in the art of the present invention. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> As previously shown hereinabove, the multi-transport stream receiver-transmitter can be located in various locations within the DBDS <highlight><bold>100</bold></highlight>, such as the headend <highlight><bold>102</bold></highlight> and hubs <highlight><bold>104</bold></highlight>. Although the multi-transport stream receiver-transmitter is described hereinbelow as located in the headend <highlight><bold>102</bold></highlight>, it is to be understood that this is merely for exemplary purposes and that alternative embodiments, which have the multi-transport stream receiver-transmitter located at different locations, are intended to be within the scope of the present invention. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>A, in the preferred embodiment the multi-transport stream receiver-transmitter <highlight><bold>228</bold></highlight> includes a central processor <highlight><bold>602</bold></highlight>, an input processor <highlight><bold>604</bold></highlight>, a memory <highlight><bold>606</bold></highlight>, and a transport stream controller <highlight><bold>608</bold></highlight>. The control processor <highlight><bold>602</bold></highlight> receives messages from the DNCS <highlight><bold>232</bold></highlight> through communication link <highlight><bold>270</bold></highlight>. The DNCS <highlight><bold>232</bold></highlight> provides the control processor <highlight><bold>602</bold></highlight> with decrypt keys that are used to decrypt programs included in the input transport streams <highlight><bold>240</bold></highlight> and with encrypt keys that are used to encrypt programs included in output transport streams <highlight><bold>242</bold></highlight>. In an alternative embodiment, the DNCS <highlight><bold>232</bold></highlight> controls an apparatus (not shown), which includes the functionality necessary for providing the multi-transport stream receiver-transmitter <highlight><bold>228</bold></highlight> with encryption keys, and a device (not shown), which includes the functionality necessary for providing the multi-transport stream receiver-transmitter <highlight><bold>228</bold></highlight> with decryption keys. The DNCS <highlight><bold>232</bold></highlight> also sends information to the control processor <highlight><bold>602</bold></highlight> about the input transport streams <highlight><bold>240</bold></highlight>, for example, the DNCS <highlight><bold>232</bold></highlight> tells the control processor <highlight><bold>602</bold></highlight> to dejitter transport stream <highlight><bold>240</bold></highlight>(A), which came from multiplexer <highlight><bold>222</bold></highlight>. The DNCS <highlight><bold>232</bold></highlight> orders the dejittering of transport stream <highlight><bold>240</bold></highlight>(A), because transport stream <highlight><bold>240</bold></highlight>(A) includes PID streams from switch <highlight><bold>224</bold></highlight>, and switches and routers frequently send packets in groups or batches, thereby introducing jitter in their output PID streams. Typically, the operator of the DBDS <highlight><bold>100</bold></highlight> determines which transport streams <highlight><bold>240</bold></highlight> are to be dejittered based at least in part on the devices that have produced and processed the transport streams, and then the operator instructs the DNCS <highlight><bold>232</bold></highlight> to order the dejittering of the appropriate transport streams. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> The DNCS <highlight><bold>232</bold></highlight> also sends program messages to the control processor <highlight><bold>602</bold></highlight>. Generally, the program messages indicate that a given program included in a particular transport stream is to be included in a specific output transport stream <highlight><bold>242</bold></highlight>, for example, a program message might indicate that program <highlight><bold>1</bold></highlight>, which includes video PID stream <highlight><bold>54</bold></highlight> and audio PID streams <highlight><bold>48</bold></highlight> and <highlight><bold>49</bold></highlight> (see <cross-reference target="DRAWINGS">FIG. 4B</cross-reference>), of transport stream <highlight><bold>240</bold></highlight>(A) is to be included in output transport stream <highlight><bold>242</bold></highlight>(F). Typically, the program messages from the DNCS <highlight><bold>232</bold></highlight> also include decryption and encryption information, such as identifying the particular keys that are used for decrypting and encrypting the program. Alternatively, the DNCS <highlight><bold>232</bold></highlight> can tell the control processor <highlight><bold>602</bold></highlight> to decrypt a program, such as program <highlight><bold>1</bold></highlight> of transport stream <highlight><bold>240</bold></highlight>(A), and to transmit the program in the clear, i.e., without encryption. Alternatively, the DNCS <highlight><bold>232</bold></highlight> can tell the control processor <highlight><bold>602</bold></highlight> to encrypt a program that was received in the clear. In an embodiment, the various PID streams of a program stream are encrypted with different keys, for example, the video PID stream <highlight><bold>10</bold></highlight> of program <highlight><bold>1</bold></highlight> is encrypted with a key that is different from the key used to encrypt the audio PID stream <highlight><bold>48</bold></highlight> of program <highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> In addition, the DNCS <highlight><bold>232</bold></highlight> can send a program message that tells the control processor <highlight><bold>602</bold></highlight> to add, or drop, a particular program to, or from, a given output transport stream <highlight><bold>242</bold></highlight>; for example, a program message might indicate that program <highlight><bold>1</bold></highlight> of transport stream <highlight><bold>240</bold></highlight>(A) is added to output transport stream <highlight><bold>242</bold></highlight>(B), and another program message might indicate that program <highlight><bold>5</bold></highlight> of <highlight><bold>240</bold></highlight>(B) is dropped from output transport streams <highlight><bold>242</bold></highlight>(B) and <highlight><bold>242</bold></highlight>(N). The number of programs that can be included in a given output transport stream depends in part on the bandwidth limitation of the transmitter that transmits the given output transport stream and upon bit rate of each of the programs in the given transport stream. Generally, the number of programs in a transport stream is chosen such that the bit rate of the transport stream is close to a predetermined maximum such as the bandwidth limitation of a transmitter. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> In the preferred embodiment, the DNCS <highlight><bold>232</bold></highlight> associates PID streams that are included in input transport streams <highlight><bold>240</bold></highlight> into groups of PID streams, which are included in output transport streams <highlight><bold>242</bold></highlight>. The DNCS <highlight><bold>232</bold></highlight> sends the control processor <highlight><bold>602</bold></highlight> program messages that associate a program included in an input transport stream with at least one output transport stream <highlight><bold>242</bold></highlight>. The DNCS <highlight><bold>232</bold></highlight> also sends program messages to the control processor <highlight><bold>602</bold></highlight> that indicate a PID stream, which is included in a group of PID streams, is to be statistically multiplexed. Generally, a plurality of PID streams, which are included in the same group of PID streams, are statistically multiplexed together, and usually, the statistically multiplexed PID streams are variable bit rate PID streams. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> The program messages from the DNCS <highlight><bold>232</bold></highlight> to the multi-transport stream receiver-transmitter <highlight><bold>228</bold></highlight> are intended to, among other things, enable the multi-transport stream receiver-transmitter <highlight><bold>228</bold></highlight> to efficiently transmit transport streams <highlight><bold>242</bold></highlight>. Frequently, the input transport streams <highlight><bold>240</bold></highlight> include data information or programs that are encrypted and variable bit rate programs, which may or may not be encrypted. To efficiently utilize the bandwidth of DBDS <highlight><bold>100</bold></highlight>, the content of the output transport streams <highlight><bold>242</bold></highlight> is statistically multiplexed. However, encrypted content cannot be statistically multiplexed, and therefore, some or all of the content of input transport streams <highlight><bold>240</bold></highlight> is decrypted, statistically multiplexed and transmitted from multi-transport stream receiver-transmitter <highlight><bold>228</bold></highlight> in output transport streams <highlight><bold>242</bold></highlight>. Generally, some or all of the content included in the output transport stream(s) <highlight><bold>242</bold></highlight> is encrypted before the content is transmitted. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>B, the memory <highlight><bold>606</bold></highlight> has a plurality of encryption keys <highlight><bold>612</bold></highlight>, a plurality of decryption keys <highlight><bold>614</bold></highlight>, a plurality of tables <highlight><bold>616</bold></highlight> stored therein and packet partition <highlight><bold>618</bold></highlight>. The plurality of encryption keys <highlight><bold>612</bold></highlight> and decryption keys are received from the control processor <highlight><bold>602</bold></highlight> through communication link <highlight><bold>610</bold></highlight>, and the decryption and encryption keys are used for decrypting and encrypting packets of the input transport streams <highlight><bold>240</bold></highlight> and the output transport streams <highlight><bold>242</bold></highlight>, respectively. Generally, the decryption keys <highlight><bold>614</bold></highlight> and the encryption keys <highlight><bold>612</bold></highlight> are symmetric keys, such as 3DES keys. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> The memory <highlight><bold>606</bold></highlight> also includes packet partition <highlight><bold>618</bold></highlight> for storing packets that were received from input processor <highlight><bold>604</bold></highlight> through communication link <highlight><bold>620</bold></highlight>. The packets are sent to the transport stream controller <highlight><bold>608</bold></highlight> through communication link <highlight><bold>622</bold></highlight> where they are included in at least one output transport stream <highlight><bold>242</bold></highlight>. In the preferred embodiment, packets of an input transport stream <highlight><bold>240</bold></highlight> are included in a plurality of output transport streams <highlight><bold>242</bold></highlight>. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> The memory <highlight><bold>606</bold></highlight> also includes a plurality of tables <highlight><bold>616</bold></highlight> that the input processor <highlight><bold>604</bold></highlight> uses for determining how to process and handle packets <highlight><bold>400</bold></highlight> received in input transport streams <highlight><bold>240</bold></highlight>. In the preferred embodiment, the control processor <highlight><bold>602</bold></highlight> maintains the tables <highlight><bold>616</bold></highlight>, which include PID look-up tables <highlight><bold>624</bold></highlight>, program tables <highlight><bold>626</bold></highlight>, STAT MUX tables <highlight><bold>628</bold></highlight>, encrypt/decrypt tables <highlight><bold>630</bold></highlight>, dejitter tables <highlight><bold>632</bold></highlight> and free PID tables <highlight><bold>634</bold></highlight> among other tables. However, in an alternative embodiment, the control processor <highlight><bold>602</bold></highlight> maintains fewer or more tables that are used by the input processor <highlight><bold>604</bold></highlight> for determining how to process and handle received packets. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> In the preferred embodiment, the control processor <highlight><bold>602</bold></highlight> maintains a PID look-up table <highlight><bold>624</bold></highlight> for each input transport stream. The PID look-up table <highlight><bold>624</bold></highlight>(I), which is associated with input transport stream <highlight><bold>240</bold></highlight>(I), associates PID streams of input transport stream <highlight><bold>240</bold></highlight>(I) with PID streams of the output transport streams <highlight><bold>242</bold></highlight>, where &ldquo;1&rdquo; is a variable used to denote A, B, C or D; for example, PID look-up table <highlight><bold>624</bold></highlight>(A), which is associated with input transport stream <highlight><bold>240</bold></highlight>(A), associates input PID stream <highlight><bold>10</bold></highlight> with transmitters <highlight><bold>644</bold></highlight>(A), <highlight><bold>644</bold></highlight>(B) and <highlight><bold>644</bold></highlight>(F). The PID look-up table <highlight><bold>624</bold></highlight>(A) also shows that the PID value of the input transport stream is remapped to a PID value of 15 when the PID stream is transmitted from the transmitters <highlight><bold>634</bold></highlight>. In another embodiment, each transmitter <highlight><bold>634</bold></highlight> identified in the PID look-up table <highlight><bold>624</bold></highlight>(A) has an output PID value associated therewith. In that case, the output PID values for a given transport stream can be the same or different for each output PID stream. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> In yet another embodiment, a portion of memory <highlight><bold>606</bold></highlight> is a content addressable memory (CAM), which is maintained by processor <highlight><bold>602</bold></highlight>. The CAM associates a memory pointer for an active input PID stream with the PID value of the active input PID stream and with the input transport stream having the active input PID stream. For the purposes of this disclosure, an active input PID stream is an input PID stream having packets that are transmitted from one or more transmitters <highlight><bold>634</bold></highlight>. When the input processor <highlight><bold>604</bold></highlight> receives a packet in a given input transport stream, which has a transport stream identifier associated therewith, the input processor <highlight><bold>604</bold></highlight> uses the PID value of the packet and the transport stream identifier to find a memory pointer in the CAM for the packet. If there is no pointer, then the packet is not transmitted from the multi-transport stream transmitter <highlight><bold>228</bold></highlight>, and the packet is discarded. On the other hand, when the packet is transmitted from the multi-transport stream receiver-transmitter <highlight><bold>228</bold></highlight>, the CAM includes a memory pointer for the packet. The memory pointer is associated with a location of the memory <highlight><bold>602</bold></highlight>, which is associated with processing information for the packet. The processing information includes information such as, but not limited to, the output PID value, dejitter information, decryption information, encryption information and statistical multiplexing information. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> In the preferred embodiment, the control processor <highlight><bold>602</bold></highlight> also maintains a program table <highlight><bold>626</bold></highlight> for each input transport stream <highlight><bold>240</bold></highlight>. The program table <highlight><bold>626</bold></highlight> for a given input transport stream <highlight><bold>240</bold></highlight> identifies the programs of that transport stream that are currently being transmitted downstream from the multi-transport stream transmitter. The program table <highlight><bold>626</bold></highlight> also includes a transport stream counter, which indicates the number of output transport streams <highlight><bold>242</bold></highlight> having the program included therein; for example, program table <highlight><bold>626</bold></highlight>(A) (not shown), which is associated with input transport stream <highlight><bold>240</bold></highlight>(A), indicates that program <highlight><bold>1</bold></highlight>, which includes input PID stream <highlight><bold>10</bold></highlight>, is currently being transmitted from three transmitters. Programs in program table <highlight><bold>626</bold></highlight>(A) are added or dropped from the program table in response to program messages from the DNCS <highlight><bold>232</bold></highlight>. In an alternative embodiment, the control processor maintains a program table <highlight><bold>626</bold></highlight> for all of the input transport streams <highlight><bold>240</bold></highlight>. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> In the preferred embodiment, the control processor <highlight><bold>602</bold></highlight> also maintains a STAT MUX table <highlight><bold>628</bold></highlight>, a encrypt/decrypt table <highlight><bold>630</bold></highlight>, and a dejitter table <highlight><bold>632</bold></highlight> for each input transport stream <highlight><bold>240</bold></highlight>. The STAT MUX table <highlight><bold>628</bold></highlight>(A) (not shown), which is associated with transport stream <highlight><bold>240</bold></highlight>(A), indicates which PID streams of transport stream <highlight><bold>240</bold></highlight>(A) are to be statistically multiplexed. The encrypt/decrypt table <highlight><bold>630</bold></highlight>(D) (not shown), which is associated with the transport stream <highlight><bold>240</bold></highlight>(D), indicates which PID streams of transport stream <highlight><bold>240</bold></highlight>(D) are to be decrypted and/or encrypted and includes pointers to the appropriate decrypt keys <highlight><bold>614</bold></highlight> and encrypt keys <highlight><bold>612</bold></highlight>. The dejitter table <highlight><bold>632</bold></highlight>(C) (not shown), which is associated with transport stream <highlight><bold>240</bold></highlight>(C), indicates which of the PID streams of transport stream <highlight><bold>240</bold></highlight>(C) are to be dejittered. In an alternative embodiment, the control processor <highlight><bold>602</bold></highlight> maintains a STAT MUX table <highlight><bold>628</bold></highlight>, a encrypt/decrypt table <highlight><bold>630</bold></highlight>, and a dejitter table <highlight><bold>632</bold></highlight> for all of the input transport streams <highlight><bold>240</bold></highlight>. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> In the preferred embodiment, the control processor <highlight><bold>602</bold></highlight> maintains the PID look-up table <highlight><bold>624</bold></highlight>, the program table <highlight><bold>626</bold></highlight>, the STAT MUX table <highlight><bold>628</bold></highlight>, the encrypt/decrypt table <highlight><bold>630</bold></highlight> and the dejitter table <highlight><bold>632</bold></highlight> using program message or messages from the DNCS <highlight><bold>232</bold></highlight>. When the DNCS <highlight><bold>232</bold></highlight> sends a program message that starts a session, the control processor adds the program identified in the program message to the program table <highlight><bold>626</bold></highlight> and increments the transport stream counter that is associated with the program. When the transport stream counter is set to 1, the PAT of the transport stream identified by the program message is extracted and used for determining the PMT for the program identified by the program message; from the PMT of the program the PID streams of the program are determined; and the PID look-up table <highlight><bold>624</bold></highlight> is updated to include the PID values of the PID streams of the program. When the DNCS <highlight><bold>232</bold></highlight> sends a program message to the control processor <highlight><bold>602</bold></highlight> ending a session, the control processor <highlight><bold>602</bold></highlight> decrements the transport stream counter associated with the program identified in the program message. If the transport stream counter is zero, then the associated program is removed from the program table <highlight><bold>630</bold></highlight> by the control processor <highlight><bold>602</bold></highlight>. When a program session is started, or ended, the control processor <highlight><bold>602</bold></highlight> updates the PID look-up table to associate, or disassociate, a transmitter, which was identified in the program message with the PID streams of the program identified in the program message. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> In addition to program messages that start, or end, a session, the control processor <highlight><bold>602</bold></highlight> receives from the DNCS <highlight><bold>232</bold></highlight> program messages that identify a program or PID stream and instructions for processing the program or PID stream, such as decryption/encryption instructions, dejittering instructions and/or statistical multiplexing instructions. The control processor <highlight><bold>602</bold></highlight> reads the program messages and updates and maintains the table <highlight><bold>616</bold></highlight> according to the received instructions. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> The control processor <highlight><bold>602</bold></highlight> also maintains free PID table <highlight><bold>634</bold></highlight>, which includes all PID values that are not currently assigned to output PID streams included in output transport streams <highlight><bold>242</bold></highlight>. In one embodiment, when the DNCS <highlight><bold>232</bold></highlight> tells the control processor <highlight><bold>602</bold></highlight> to start a session for a given program, the control processor <highlight><bold>602</bold></highlight> automatically remaps the PID values for the PID streams associated with the given program, for example, the DNCS <highlight><bold>232</bold></highlight> sends the control processor <highlight><bold>602</bold></highlight> a message saying that program <highlight><bold>50</bold></highlight> of transport stream <highlight><bold>240</bold></highlight>(A) is to be included in output transport stream <highlight><bold>242</bold></highlight>(D). The control processor <highlight><bold>602</bold></highlight> consults the program table <highlight><bold>626</bold></highlight>(A), which is associated with the transport stream <highlight><bold>240</bold></highlight>(A), and determines therefrom whether program <highlight><bold>50</bold></highlight> is currently included in any output transport stream <highlight><bold>242</bold></highlight>. If program <highlight><bold>50</bold></highlight> is currently included in any of the output transport streams <highlight><bold>242</bold></highlight>, then the control processor <highlight><bold>602</bold></highlight> increments the transport stream counter for program <highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> On the other hand, if program <highlight><bold>50</bold></highlight> is not included in program table <highlight><bold>626</bold></highlight>(A), the control processor <highlight><bold>602</bold></highlight> adds program <highlight><bold>50</bold></highlight> to program table <highlight><bold>626</bold></highlight>(A) and sets the transport stream counter associated with program <highlight><bold>50</bold></highlight> to <highlight><bold>1</bold></highlight>. The control processor <highlight><bold>602</bold></highlight> then uses the PAT of transport stream <highlight><bold>240</bold></highlight>(A) to determine the PMT of program <highlight><bold>50</bold></highlight>. From the PMT of program <highlight><bold>50</bold></highlight>, the control processor <highlight><bold>602</bold></highlight> identifies each PID stream of program <highlight><bold>50</bold></highlight> and includes the PID values of the PID streams of program <highlight><bold>50</bold></highlight> into the PID look-up table <highlight><bold>624</bold></highlight>(A), which is associated with input transport stream <highlight><bold>240</bold></highlight>(A). The control processor <highlight><bold>602</bold></highlight> also uses the free PID table <highlight><bold>634</bold></highlight> to assign a set of PID values to the PID streams of program <highlight><bold>50</bold></highlight>. In the preferred embodiment, the PID values that are assigned to the PID streams of program <highlight><bold>50</bold></highlight> are unique; if the PID streams of program <highlight><bold>50</bold></highlight> are included in a plurality of output transport streams <highlight><bold>242</bold></highlight>, then the output PID streams of program <highlight><bold>50</bold></highlight> shall have the same set of PID values in each output transport stream, for example, the video PID stream and the audio PID stream of program <highlight><bold>50</bold></highlight> could be assigned the PID values 25 and 26, respectively, for all output PID streams <highlight><bold>242</bold></highlight> that include program <highlight><bold>50</bold></highlight>. An advantage to remapping the PID values of the input PID streams of a program to a unique set of PID values is that it prevents PID collisions between two or more programs. A PID collision occurs in a transport stream, when one or more PID streams of a program have the same PID values as one or more PID streams of a different program. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> Referring again to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>A, in the preferred embodiment, the input processor <highlight><bold>604</bold></highlight> receives a plurality of input transport streams <highlight><bold>240</bold></highlight>, each of which usually includes a plurality of PID streams. Although, the input processor <highlight><bold>604</bold></highlight> is shown receiving four input transport streams <highlight><bold>240</bold></highlight>(A)-<highlight><bold>240</bold></highlight>(D), it is to be understood that the number of input transport streams is a matter of implementation and that more or fewer input transport streams are intended to be within the scope of the invention. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> Furthermore, in the preferred embodiment, the input processor <highlight><bold>604</bold></highlight> is adapted to interface with various communication protocols such as, but not limited to, a synchronous serial interface (ASI) and ethernet protocols. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> As will be described in greater detail hereinbelow, the input processor <highlight><bold>604</bold></highlight> receives standard MPEG packets <highlight><bold>400</bold></highlight>, which are included in input transport streams <highlight><bold>240</bold></highlight>, and uses table <highlight><bold>616</bold></highlight> to determine how to process, or drop, the received packets. The receive packets that the input processor determines to process are sent to memory <highlight><bold>606</bold></highlight> through communication link <highlight><bold>620</bold></highlight>. The transport stream controller <highlight><bold>608</bold></highlight> includes a decryptor <highlight><bold>636</bold></highlight>, a dejitterer <highlight><bold>638</bold></highlight>, a statistical multiplexer <highlight><bold>640</bold></highlight>, an encryptor <highlight><bold>642</bold></highlight> and a plurality of transmitters <highlight><bold>644</bold></highlight>, which are coupled to communication link <highlight><bold>622</bold></highlight>. The transport stream controller <highlight><bold>608</bold></highlight> receives data control packets <highlight><bold>700</bold></highlight>, shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, from memory <highlight><bold>606</bold></highlight> through communication link <highlight><bold>622</bold></highlight>. The data control packet <highlight><bold>700</bold></highlight>, which includes a standard packet <highlight><bold>400</bold></highlight>, are processed by various elements of the transport stream controller <highlight><bold>608</bold></highlight> and transmitted therefrom. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> Details by which the various elements of transport stream controller <highlight><bold>608</bold></highlight> process data control packet <highlight><bold>700</bold></highlight> are provided hereinbelow. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> The decryptor <highlight><bold>636</bold></highlight> receives data control packet <highlight><bold>700</bold></highlight> through communication link <highlight><bold>622</bold></highlight> and decrypts at least the payload portion <highlight><bold>400</bold></highlight> of the standard packet <highlight><bold>400</bold></highlight>. The decryptor <highlight><bold>636</bold></highlight> uses a decryption key <highlight><bold>614</bold></highlight> that is associated with the control packet to decrypt the payload portion. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> The dejitterer <highlight><bold>638</bold></highlight> receives data control packet <highlight><bold>700</bold></highlight> that have a dejitter indicator associated therein. Generally, the packets of a jittered PID stream are received in bunches, and the dejitterer <highlight><bold>638</bold></highlight> buffers the packets and retransmits the packets in a predetermined fashion so that the packets are no longer temporarily bunched together. Thereby eliminating the jitter in the PID stream. The statistical multiplexer <highlight><bold>640</bold></highlight> receives data control packet <highlight><bold>700</bold></highlight> that have a STAT-MUX indicator associated therewith. The statistical multiplexer <highlight><bold>640</bold></highlight> statistically multiplexes data control packet <highlight><bold>700</bold></highlight> of groups of PID streams together, wherein each PID stream of a group of PID streams is transmitted from the same transmitter <highlight><bold>644</bold></highlight>. The statistically multiplex group of PID streams is statistically multiplexed such that the bit rate of the group of PID streams does not exceed a predetermined level. Generally, at least one PID stream in the group of PID streams is a variable bit rate PID stream. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> Conventional statistical multiplexing of standard MPEG packets <highlight><bold>400</bold></highlight> requires that the payload portion <highlight><bold>404</bold></highlight> be in the clear, and therefore, only those PID streams that have been decrypted or were received in the clear can be statistically multiplexed. Statistical multiplexing introduces delays in a PID stream, and generally, only the video PID stream of a program is statistically multiplexed. In order to resynchronize the PID streams of a program, in which a video PID stream has been statistically multiplexed, the PID streams of the program need to be in the clear so that clock information contained in the payload portion of the packets can be synchronized. Details of a statistical multiplexer are provided in U.S. Pat. No. 6,057,384, which is hereby incorporated by reference in its entirety. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> The encryptor <highlight><bold>642</bold></highlight> receives data control packet <highlight><bold>700</bold></highlight> that have an encryption indicator associated therewith. The encryptor <highlight><bold>642</bold></highlight> uses an encryption key <highlight><bold>612</bold></highlight>, which is associated with the data control packet <highlight><bold>700</bold></highlight>, to encrypt the data control packet <highlight><bold>700</bold></highlight>. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> The plurality of transmitter <highlight><bold>644</bold></highlight> receive data control packet <highlight><bold>700</bold></highlight> and transmit therefrom standard MPEG packets <highlight><bold>400</bold></highlight>. The data control packet <highlight><bold>700</bold></highlight> received at the plurality of transmitter <highlight><bold>644</bold></highlight> have a transmitter identifier <highlight><bold>704</bold></highlight> associated therewith, which identifies the transmitter <highlight><bold>644</bold></highlight> from which the packet is transmitted. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> In the preferred embodiment, the transmitter <highlight><bold>644</bold></highlight> are QAM modulators. However, it is understood that the type and the number of transmitters is a matter of implementation, and all appropriate transmitters known to those skilled in the art are intended to be within the scope of the present invention. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> It should be noted that the transport stream controller <highlight><bold>608</bold></highlight> has been broken down into various elements based upon their functionality. However, those skilled in the art will recognize that the various elements of transport stream controller <highlight><bold>608</bold></highlight> can be implemented in common hardware devices or firmware modules. For example, a single hardware device could provide the decryption functionality of element <highlight><bold>636</bold></highlight> and encryption functionality of element <highlight><bold>642</bold></highlight>. Generally, integrating the functionality such that each of the various elements described hereinabove does not require a separate processor to control its functions increases the efficiency and decreases the cost of the transport stream controller <highlight><bold>608</bold></highlight>. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 7, a</cross-reference> data control packet <highlight><bold>700</bold></highlight> includes a standard transport stream packet <highlight><bold>400</bold></highlight> with a data header <highlight><bold>702</bold></highlight> prepended thereon. The data header <highlight><bold>702</bold></highlight> includes a transmitter identifier field <highlight><bold>704</bold></highlight> and a data information field <highlight><bold>706</bold></highlight>. The transmitter identifier field <highlight><bold>706</bold></highlight> identifies transmitters <highlight><bold>644</bold></highlight> from which the standard packet <highlight><bold>400</bold></highlight> is transmitted. The data information field <highlight><bold>706</bold></highlight> includes information used by the transport stream controller <highlight><bold>608</bold></highlight> for processing the standard packet <highlight><bold>400</bold></highlight>. The processing information included in data information field <highlight><bold>706</bold></highlight> includes a counter that is used for indicating the number of transmitters <highlight><bold>644</bold></highlight> that are to receive a copy of the standard packet <highlight><bold>400</bold></highlight>. The data information field <highlight><bold>706</bold></highlight> also includes clock information that is used to synchronize the various PID streams for each program stream included in output transport stream <highlight><bold>242</bold></highlight>. The data information field <highlight><bold>706</bold></highlight> also includes information used by transport stream controller <highlight><bold>608</bold></highlight> for determining things such as, but not limited to, whether to decrypt, dejitter, statistical multiplex and encrypt standard packet <highlight><bold>400</bold></highlight>. The data information field <highlight><bold>706</bold></highlight> is evaluated by the transport stream controller <highlight><bold>608</bold></highlight> for processing the standard packet <highlight><bold>400</bold></highlight> of data control packet <highlight><bold>700</bold></highlight>. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, the multi-transport stream transmitter <highlight><bold>228</bold></highlight> performs the steps <highlight><bold>800</bold></highlight>. In steps <highlight><bold>800</bold></highlight>, &ldquo;I&rdquo; is a variable used to denote A, B, C or D. In step <highlight><bold>802</bold></highlight>, the input processor <highlight><bold>604</bold></highlight> receives a standard packet <highlight><bold>400</bold></highlight>, which is included in an input transport stream <highlight><bold>240</bold></highlight>(I). The input processor identifies the PID look-up table <highlight><bold>634</bold></highlight>(I) associated with the transport stream <highlight><bold>240</bold></highlight>(I). </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> Next, in step <highlight><bold>804</bold></highlight>, the input processor <highlight><bold>604</bold></highlight> uses the PID value of the received standard packet <highlight><bold>400</bold></highlight> and the PID look-up table <highlight><bold>634</bold></highlight>(I), which is associated with the input transport stream <highlight><bold>240</bold></highlight>(I), to determine the output PID value of the standard packet <highlight><bold>400</bold></highlight> and the transmitter(s) <highlight><bold>644</bold></highlight> from which the standard packet is transmitted. On the other hand, if the PID value of the standard packet <highlight><bold>400</bold></highlight> is not included in the PID look-up table <highlight><bold>634</bold></highlight>(I), then the standard packet <highlight><bold>400</bold></highlight> is not included in any of the output transport streams <highlight><bold>242</bold></highlight> and the standard packet <highlight><bold>400</bold></highlight> is dropped. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> In the preferred embodiment, the input processor <highlight><bold>604</bold></highlight> maintains a packet list for each transmitter <highlight><bold>644</bold></highlight> of the transport stream controller <highlight><bold>608</bold></highlight>. When the input processor <highlight><bold>604</bold></highlight> stores a given data control packet <highlight><bold>700</bold></highlight> in memory <highlight><bold>606</bold></highlight>, the input processor <highlight><bold>604</bold></highlight> sets a pointer to the memory location of data control packet <highlight><bold>700</bold></highlight> for each packet list associated with the transmitters <highlight><bold>644</bold></highlight> identified in the PID look-up table <highlight><bold>624</bold></highlight>(I). </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> In step <highlight><bold>806</bold></highlight>, the input processor <highlight><bold>604</bold></highlight> uses the input PID value of the standard packet <highlight><bold>400</bold></highlight> with decrypt/encrypt table <highlight><bold>630</bold></highlight>(I), which is associated with the transport stream <highlight><bold>240</bold></highlight>(I), to determine whether to decrypt the received standard packet <highlight><bold>400</bold></highlight>. When the input processor <highlight><bold>604</bold></highlight> determines that the packet <highlight><bold>400</bold></highlight> is to be decrypted, the input processor associates the decryption key <highlight><bold>612</bold></highlight>, which is used for decrypting the standard packet <highlight><bold>400</bold></highlight>, with the data information <highlight><bold>706</bold></highlight>. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> Then, in step <highlight><bold>808</bold></highlight>, the input processor <highlight><bold>604</bold></highlight> determines whether the received packet <highlight><bold>400</bold></highlight> should be encrypted by the transport stream controller <highlight><bold>608</bold></highlight> before inclusion into one or more output transport streams <highlight><bold>242</bold></highlight>. The input processor <highlight><bold>604</bold></highlight> uses the input PID value of the received packet <highlight><bold>400</bold></highlight> and the decryption/encryption table <highlight><bold>630</bold></highlight>(I) to determine whether the received packet <highlight><bold>400</bold></highlight> should be encrypted. When the packet <highlight><bold>400</bold></highlight> is encrypted by the transport stream controller <highlight><bold>608</bold></highlight>, the input processor <highlight><bold>604</bold></highlight> associates the encryption key <highlight><bold>612</bold></highlight> for the standard packet <highlight><bold>400</bold></highlight> with the data information field <highlight><bold>706</bold></highlight> of the data header <highlight><bold>702</bold></highlight>. Generally, the decryption key <highlight><bold>612</bold></highlight> and the encryption key <highlight><bold>612</bold></highlight> are associated with the data information <highlight><bold>706</bold></highlight> by including copies of the keys in the data information <highlight><bold>706</bold></highlight>. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> In step <highlight><bold>810</bold></highlight>, the input processor <highlight><bold>604</bold></highlight> uses the input PID value of the received packet <highlight><bold>400</bold></highlight> and the STAT MUX table <highlight><bold>628</bold></highlight>(I), which is associated with the input transport stream <highlight><bold>240</bold></highlight>(I), to determine whether the received packet should be statistically multiplexed by the transport stream controller <highlight><bold>608</bold></highlight>. When the received packet <highlight><bold>400</bold></highlight> should be statistically multiplexed a portion of the data information field <highlight><bold>706</bold></highlight> of data header <highlight><bold>702</bold></highlight> is flagged to indicate the statistical multiplexing of the received packet <highlight><bold>400</bold></highlight>. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> In step <highlight><bold>812</bold></highlight>, the input processor <highlight><bold>604</bold></highlight> uses the input PID value of the received packet <highlight><bold>400</bold></highlight> and the dejitter table <highlight><bold>632</bold></highlight>(I), which is associated with transport stream <highlight><bold>240</bold></highlight>(I), to determine whether to dejitter the PID stream having the received packet <highlight><bold>400</bold></highlight> included therein. When the PID stream having the received packet <highlight><bold>400</bold></highlight> included therein is dejittered, a flag is set in data information field <highlight><bold>706</bold></highlight> of data header <highlight><bold>702</bold></highlight>. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> In step <highlight><bold>814</bold></highlight>, the input processor <highlight><bold>604</bold></highlight> includes in the data information field <highlight><bold>706</bold></highlight> further processing information used by the transport stream controller <highlight><bold>608</bold></highlight>. This processing information includes, among other information, the output PID value of the received packet, clock information, which is used for synchronizing the PID stream of packet <highlight><bold>400</bold></highlight> with the various PID streams of the program stream that includes packet <highlight><bold>400</bold></highlight> and sets the transport stream counter to the number of transmitters identified by the PID look-up table <highlight><bold>624</bold></highlight>(I). </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> In step <highlight><bold>816</bold></highlight>, the input processor <highlight><bold>604</bold></highlight> appends the data header <highlight><bold>702</bold></highlight> to the received packet <highlight><bold>400</bold></highlight>, thereby making data control packet <highlight><bold>700</bold></highlight> and stores the data control packet <highlight><bold>700</bold></highlight> in memory <highlight><bold>606</bold></highlight>. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> In the preferred embodiment, the packet lists, each of which are associated with a transmitter <highlight><bold>644</bold></highlight> and maintained by the input processor <highlight><bold>604</bold></highlight> are linked lists. The top element of a given list, which is associated with a given transmitter, points to the memory location of the next data control packet <highlight><bold>700</bold></highlight> to be sent to the transport stream controller <highlight><bold>608</bold></highlight> for the given transmitter <highlight><bold>644</bold></highlight>. In one embodiment, the input controller <highlight><bold>604</bold></highlight> reads the top element of each packet list sequentially. In another embodiment, the input controller <highlight><bold>604</bold></highlight> reads the top element of each packet lists according to the length of the packet lists, reading the longest packet list first. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> In step <highlight><bold>818</bold></highlight>, the input controller <highlight><bold>604</bold></highlight> reads a given packet list, which is associated with a given transmitter <highlight><bold>644</bold></highlight>(J), where &ldquo;J&rdquo; is a variable denoting A, B, C, D, E or F, and copies the data control packet <highlight><bold>700</bold></highlight> stored in the memory location pointed to by the top element of the given packet list. The input controller <highlight><bold>604</bold></highlight> addresses the transmitter identifier field <highlight><bold>704</bold></highlight> of the copy of the data control packet <highlight><bold>700</bold></highlight> to the given transmitter <highlight><bold>644</bold></highlight> associated with the given packet list and sends the copy of the data control packet <highlight><bold>700</bold></highlight> to the transport stream controller <highlight><bold>608</bold></highlight>. The input controller <highlight><bold>604</bold></highlight> then decrements the transport stream counter included in the data information field <highlight><bold>706</bold></highlight> of the data control packet <highlight><bold>700</bold></highlight> stored in the memory location pointed to by the current top element of the given packet list. The transmitter counter is decremented each time a copy of the data control packet is made. When the transmitter counter is zero, the input controller <highlight><bold>604</bold></highlight> knows that all of the transmitters <highlight><bold>644</bold></highlight> that are associated with the data control packet <highlight><bold>700</bold></highlight> have had a copy of the data control packet <highlight><bold>700</bold></highlight> sent to them. The input controller <highlight><bold>604</bold></highlight> then knows that the data control packet <highlight><bold>700</bold></highlight> having a transmitter counter value of zero can be overwritten in memory <highlight><bold>606</bold></highlight>. The controller <highlight><bold>604</bold></highlight> also removes the current top element of the given packet list, so that the next time the given packet list is read the new top element points to a memory location having a different data control packet <highlight><bold>700</bold></highlight> stored therein. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> In the preferred embodiment, the transport stream controller <highlight><bold>608</bold></highlight> processes data control packets as fast or faster than the input processor sends them. In which case, the transport stream controller <highlight><bold>608</bold></highlight> is always ready to receive data control packets <highlight><bold>700</bold></highlight> from memory <highlight><bold>608</bold></highlight>. However, the transport stream controller <highlight><bold>608</bold></highlight> can introduce some delays in the PID streams by dejittering, or other processing, and therefore, the various elements of the transport stream controller <highlight><bold>608</bold></highlight>, such as the statistical multiplexer <highlight><bold>640</bold></highlight>, have throttles included therein for controlling the flow of the PID streams passing therethrough. The transport stream controller <highlight><bold>608</bold></highlight> can send a message via communication link <highlight><bold>610</bold></highlight> to the input processor <highlight><bold>604</bold></highlight> that causes the input processor <highlight><bold>604</bold></highlight> to suspend sending data control packets <highlight><bold>700</bold></highlight> to the transport stream controller <highlight><bold>608</bold></highlight>. When the transport stream controller <highlight><bold>608</bold></highlight> is ready to process further data control packets <highlight><bold>700</bold></highlight>, the transport stream controller <highlight><bold>608</bold></highlight> sends a subsequent message to the input processor <highlight><bold>604</bold></highlight>, which causes the input processor <highlight><bold>604</bold></highlight> to resume sending data control packets <highlight><bold>700</bold></highlight> to the transport stream controller <highlight><bold>608</bold></highlight>. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> In step <highlight><bold>820</bold></highlight>, the transport stream controller <highlight><bold>608</bold></highlight> receives a data control packet <highlight><bold>700</bold></highlight>, which is addressed to a particular transmitter <highlight><bold>644</bold></highlight>. The data header <highlight><bold>702</bold></highlight> of the data control packet <highlight><bold>700</bold></highlight> includes processing information that is used by the decryptor <highlight><bold>636</bold></highlight>, the dejitterer <highlight><bold>638</bold></highlight>, the statistical multiplexer <highlight><bold>640</bold></highlight> and the encryptor <highlight><bold>642</bold></highlight> for determining how the packet is processed. In some situations, the processing information of data control packet <highlight><bold>700</bold></highlight> indicates that the data control packet is sent directly to the transmitter <highlight><bold>644</bold></highlight> identified by the transmitter identifier <highlight><bold>704</bold></highlight>. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> Next, in step <highlight><bold>822</bold></highlight>, the transmitter <highlight><bold>644</bold></highlight>, which is identified by the transmitter identifier <highlight><bold>704</bold></highlight>, receives a data control packet <highlight><bold>700</bold></highlight>. The transmitter removes the data header <highlight><bold>700</bold></highlight> from the standard packet <highlight><bold>400</bold></highlight> and transmits the standard packet <highlight><bold>400</bold></highlight> therefrom. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> It is to be understood that the steps <highlight><bold>800</bold></highlight> may be performed in alternative order. In another embodiment, the input processor <highlight><bold>604</bold></highlight> stores the data control packet <highlight><bold>700</bold></highlight> in memory <highlight><bold>606</bold></highlight>, and when the data control packet is retrieved from the memory <highlight><bold>606</bold></highlight> for a given transmitter <highlight><bold>644</bold></highlight>, the input processor uses tables <highlight><bold>616</bold></highlight> to determine how the data control packet is to be processed by the transport stream controller <highlight><bold>608</bold></highlight>. In this embodiment, the processing information included in the data <highlight><bold>702</bold></highlight> can be specific to the given transmitter; for example, for one transmitter the data control packet <highlight><bold>700</bold></highlight> can be encrypted with a first encryption key, and the PID value of the standard packet <highlight><bold>400</bold></highlight> can be remapped to a first PID value; and for another transmitter a second encryption key can be used to encrypt the data control packet <highlight><bold>700</bold></highlight>, and the PID value of the standard packet <highlight><bold>400</bold></highlight> can be remapped to a second PID value. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> It should be emphasized that the above-described embodiments of the present invention, particularly, any &ldquo;preferred&rdquo; embodiments, are merely possible examples of implementations, merely set forth for a clear understanding of the principles of the invention. Many variations and modifications may be made to the above-described embodiment(s) of the invention without departing substantially from the spirit and principles of the invention. All such modifications and variations are intended to be included herein within the scope of this disclosure and the present invention and protected by the following claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of providing a transport stream, which includes a group of PID streams, wherein a PID stream is a stream of packets having a common packet identifier (PID) associated therewith, with a predetermined maximum bit rate, the method is implemented in a transport stream apparatus adapted to receive and transmit transport streams, the method comprising: 
<claim-text>receiving an input transport stream having a plurality of PID streams included therein; </claim-text>
<claim-text>decrypting a first at least one PID stream of the plurality of received PID streams; </claim-text>
<claim-text>statistically multiplexing a second at least one PID stream of the plurality of received PID streams into a group of PID streams, wherein the bit rate of the group of PID streams does not exceed the predetermined maximum; </claim-text>
<claim-text>encrypting a third at least one PID stream of the plurality of received PID streams; and </claim-text>
<claim-text>transmitting a fourth at least one PID stream of the plurality of received PID streams from at least one transmitter. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the first at least one PID stream is a given PID stream, the second at least one PID stream is a plurality of PID streams having the given PID stream included therein and the fourth at least one PID stream is a plurality of PID streams having the given PID stream included therein. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the first at least one PID stream is a plurality of PID streams having a given PID stream included therein, the second at least one PID stream is a plurality of PID streams having the given PID stream included therein, the third at least one PID stream is a plurality of PID streams having the given PID stream included therein and the fourth at least one PID stream is a plurality of PID streams having the given PID stream included therein. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the fourth at least one PID stream is a plurality of PID streams having at least one variable bit rate PID stream included therein. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further including the step of: 
<claim-text>receiving at least one decryption key used for decrypting the first at least one PID stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further including the step of: 
<claim-text>receiving at least one encryption key used for encrypting the third at least one PID stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein the encrypted third at least one PID stream is a plurality of encrypted PID streams, and a plurality of encryption keys are used to encrypt the plurality of PID streams. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein the plurality of encryption keys include a symmetric key. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein the symmetric key is a 3DES key. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, and further including the steps of: 
<claim-text>determining whether to decrypt the first at least one PID stream; </claim-text>
<claim-text>determining whether to statistically multiplex the second at least one PID stream; and </claim-text>
<claim-text>determining whether to encrypt the third at least one PID stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, and further including the step of: 
<claim-text>appending a data header to each packet of a PID stream, the data header used for processing the packet. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the data header includes a decryptor indicator, and the step of determining whether to decrypt the first at least one PID stream includes evaluating the decryptor indicator. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the data header of each packet of the first at least one PID stream includes a decryption key that is used to decrypt each packet of the first at least one PID stream. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the data header includes a stat-mux indicator, and the step of determining whether to statistically multiplex the second at least one PID stream includes using the stat-mux indicator. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the data header includes an encryptor indicator, and the step of determining whether to encrypt the third at least one PID stream includes evaluating the encryptor indicator. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the data header of each packet of the third at least one PID stream includes an encryption key, and the encryption key is used to encrypt at least a portion of the packet having the encryption key. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, further including the step of: 
<claim-text>prior to the step of transmitting, removing the data header from each packet. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the transmitted packets conform to MPEG protocols. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further including the step of: 
<claim-text>determining whether to dejitter a fifth at least one PID stream of the plurality of received PID streams, and responsive thereto, dejittering the fifth at least one PID stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein the fifth at least one PID stream comprises a plurality of packets, each packet having a data header, and the data header is used in determining whether to dejitter the fifth at least one PID stream. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of transmitting includes radio frequency modulation of the fourth at least one PID stream. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the radio frequency modulation is quadrature amplitude modulation. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further including the step of: 
<claim-text>receiving a plurality of transport streams, each transport stream having a plurality of PID streams included therein, and each PID stream is associated with a PID value; and </claim-text>
<claim-text>remapping the PID value of a fifth at least one PID stream to a new PID value whereupon each PID stream of the fourth at least one PID stream has a unique PID value associated therewith. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein the step of transmitting includes radio frequency modulation of the group of PID streams. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein the at least one transmitter is a plurality of transmitters, and further including the step of: 
<claim-text>associating a plurality of received PID streams into a plurality of groups, and each group of PID streams is transmitted from a unique transmitter. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein a given PID stream of the plurality of received PID streams is transmitted from a plurality of transmitters. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the PID value of a given PID stream is remapped from a first PID value to a second PID value, and the given PID stream having the second PID value associated therewith is transmitted from a plurality of transmitters. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the input transport stream is received in a port conforming to ASI protocol. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the input transport stream includes a first PID stream and a second PID stream, wherein the received first PID stream is an encrypted PID stream, wherein the first PID stream is decrypted, wherein the second at least one PID stream is a plurality of PID streams having the decrypted first PID stream and the second PID stream included therein, and wherein after being statistically multiplexed the decrypted first PID stream is encrypted by a first encryption key and the second PID stream is encrypted by a second encryption key. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A apparatus for making a transport stream with a predetermined maximum bit rate, the apparatus comprising: 
<claim-text>a port adapted to receive an input transport stream having a plurality of PID streams included therein, wherein each PID stream comprise a plurality of packets having a common PID value; </claim-text>
<claim-text>a storage device in communication with the port, the storage device adapted to store packets and a plurality of keys; </claim-text>
<claim-text>means for determining whether to decrypt a first at least one PID stream of the plurality of received PID streams; </claim-text>
<claim-text>means for decrypting the first at least one PID stream; </claim-text>
<claim-text>means for determining whether to statistically multiplex a second at least one PID stream of the plurality of received PID streams; </claim-text>
<claim-text>means for statistically multiplexing the second at least one PID stream, wherein the bit rate of the second at least one PID stream does not exceed the predetermined maximum; </claim-text>
<claim-text>means for determining whether to encrypt a third at least one PID stream of the plurality of received PID streams; </claim-text>
<claim-text>means for encrypting the third at least one PID stream; and </claim-text>
<claim-text>means for transmitting a fourth at least one PID stream of the plurality of received PID streams downstream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein the first at least one PID stream is a given PID stream, the second at least one PID stream is a plurality of PID streams having the given PID stream included therein and the fourth at least one PID stream is a plurality of PID streams having the given PID stream included therein. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein the first at least one PID stream is a plurality of PID streams having a given PID stream included therein, the second at least one PID stream is a plurality of PID streams having the given PID stream included therein, the third at least one PID stream is a plurality of PID streams having the given PID stream included therein and the fourth at least one PID stream is a plurality of PID streams having the given PID stream included therein. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein the fourth at least one PID stream is a plurality of PID streams having at least one variable bit rate PID stream included therein. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein the encrypted third at least one PID stream is a plurality of encrypted PID streams, and a plurality of encryption keys are used to encrypt the plurality of PID streams. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 34</dependent-claim-reference>, wherein at least one of the encryption keys is a symmetric key. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 34</dependent-claim-reference>, wherein the symmetric key is a 3DES key. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, further including: 
<claim-text>means for appending a data header to each packet of the PID streams. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference>, wherein the data header includes a decryptor indicator that is used for determining whether to decrypt the first at least one PID stream. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein the data header of each packet of the first at least one PID stream includes a decryption key that is used to decrypt each packet of the first at least one PID stream. </claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference>, wherein the data header includes a stat-mux indicator that is used for determining whether to statistically multiplex the second at least one PID stream. </claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference>, wherein the data header includes a encryptor indicator that is used for determining whether to encrypt the third at least one PID stream. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference>, wherein the data header of each packet of the third at least one PID stream includes an encryption key that is used to encrypt each packet of the third at least one PID stream. </claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference>, further including: 
<claim-text>means for removing the data header from each packet. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 43</dependent-claim-reference>, wherein the transmitted packets conform to MPEG protocols. </claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, further including: 
<claim-text>means for determining whether to dejitter a fifth at least one PID stream of the plurality of received PID streams; and </claim-text>
<claim-text>means for dejittering the fifth at least one PID stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 45</dependent-claim-reference>, wherein the fifth at least one PID stream comprises a plurality of packets, each packet having a data header, and the data header is used in determining whether to dejitter the fifth at least one PID stream. </claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein the transmitting means is a radio frequency modulator. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 47</dependent-claim-reference>, wherein the radio frequency modulator is quadrature amplitude modulator. </claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein the fourth at least one PID stream is a plurality of PID streams; and further including: 
<claim-text>a plurality of input ports, each port adapted to receive a transport stream having a plurality of PID streams included therein, and wherein each of the PID streams is associated with a PID value; and </claim-text>
<claim-text>means for remapping the PID value associated with a PID stream of the received plurality of received PID streams, whereupon each PID stream included in the plurality of PID streams transmitted from the transmitting means has a unique PID value associated therewith. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the means for transmitting is a radio frequency modulator. </claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the transmitting means is a plurality of transmitters. </claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00055">claim 51</dependent-claim-reference>, wherein a given PID stream of the plurality of received PID streams is transmitted from more than one transmitter. </claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00055">claim 51</dependent-claim-reference>, wherein when a given PID stream is received the given PID stream has a first PID value associated therewith and the PID value of the given PID stream is remapped from the first PID value to a second PID value, and the given PID stream having the second PID value associated therewith is transmitted from more than one transmitter. </claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein the port is adapted to receive the input transport stream according to ASI protocol. </claim-text>
</claim>
<claim id="CLM-00055">
<claim-text><highlight><bold>55</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein the input transport stream includes a first PID stream and a second PID stream, wherein the received first PID stream is an encrypted PID stream, wherein the first PID stream is decrypted, wherein the decrypted first PID stream and the second PID stream are statistically multiplexed, and wherein after being statistically multiplex the decrypted first PID stream is encrypted by a first encryption key and the second PID stream is encrypted by a second encryption key. </claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. An apparatus in a digital network that receives at least one digital transport stream and provides at least one digital transport stream, which has a predetermined maximum bit rate level, to at least one downstream receiver, the apparatus comprising: 
<claim-text>a port adapted to receive an input transport stream that includes a plurality of PID streams, each PID stream includes a plurality of packets having a common PID value associated therewith; </claim-text>
<claim-text>a storage device in communication with the port, the storage device adapted to store the received packets and a plurality of keys; and </claim-text>
<claim-text>a processor in communication with the storage device and the port, the processor adapted to determine whether to decrypt a first at least one PID stream of the plurality of received PID streams, the processor adapted to determine whether to statistically multiplex a second at least one PID stream of the plurality of received PID streams, the processor adapted to determine whether to encrypt a third at least one PID stream of the plurality of received PID streams. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00057">
<claim-text><highlight><bold>57</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00055">claim 56</dependent-claim-reference>, further including: 
<claim-text>a plurality of input ports, each input port adapted to receive a transport stream having a plurality of PID streams included therein; </claim-text>
<claim-text>a plurality of transmitters, each transmitter adapted to transmit a transport stream therefrom. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00058">
<claim-text><highlight><bold>58</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00055">claim 57</dependent-claim-reference>, wherein at least one of the plurality of transmitters includes a radio frequency modulator. </claim-text>
</claim>
<claim id="CLM-00059">
<claim-text><highlight><bold>59</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00055">claim 57</dependent-claim-reference>, wherein when a given PID stream of the plurality of received PID streams is received, the given PID stream includes a plurality of packets having a common first PID value associated therewith, and when the given PID stream is transmitted from at least one transmitter of the plurality of transmitters, the packets of the given PID stream have a second common PID value associated therewith. </claim-text>
</claim>
<claim id="CLM-00060">
<claim-text><highlight><bold>60</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00055">claim 59</dependent-claim-reference>, wherein the processor is adapted to associate the second common PID value with the given PID stream. </claim-text>
</claim>
<claim id="CLM-00061">
<claim-text><highlight><bold>61</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00055">claim 56</dependent-claim-reference>, further including: 
<claim-text>a decryptor in communication with the storage device, the decryptor receives packets of the first at least one PID stream; </claim-text>
<claim-text>a statistical multiplexer in communication with the storage device and the decryptor, the statistical multiplexer receives packets of the second at least one PID stream; </claim-text>
<claim-text>an encryptor in communication with the storage device, the decryptor and the statistical multiplexer, the encryptor receives packets of the third at least one PID stream; </claim-text>
<claim-text>a transmitter in communication with the storage device, the decryptor, the statistical multiplexer and the encryptor, the transmitter adapted to transmit a fourth at least one PID stream of the plurality of received PID streams. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00062">
<claim-text><highlight><bold>62</bold></highlight>. The apparatus of claim <highlight><bold>61</bold></highlight>, wherein the processor is adapted to associate a data header with each packet included in the first at least one PID stream, the second at least one PID stream and the third at least one PID stream, and wherein the decryptor, the statistical multiplexer and the encryptor process each packet having a data header associated therewith based at least in part on the associated data header. </claim-text>
</claim>
<claim id="CLM-00063">
<claim-text><highlight><bold>63</bold></highlight>. The apparatus of claim <highlight><bold>62</bold></highlight>, wherein each packet of the first at least one PID stream has a decryption key associated therewith, which is used by the decryptor to decrypt the packet, and each packet of the third at least one PID stream has an encryption key associated therewith, which is used by the encryptor to encrypt the packet. </claim-text>
</claim>
<claim id="CLM-00064">
<claim-text><highlight><bold>64</bold></highlight>. The apparatus of claim <highlight><bold>61</bold></highlight>, further including: 
<claim-text>a dejitterer in communication with the processor, the memory, the decryptor, the encryptor and the plurality of transmitters, the dejitterer adapted to receive packets of a fifth at least one PID stream of the plurality of received PID streams and dejitterer the packets. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00065">
<claim-text><highlight><bold>65</bold></highlight>. The apparatus of claim <highlight><bold>63</bold></highlight>, wherein the packets of the fifth at least one PID stream have a data header associated therewith and the dejitterer processes each packet of the fifth at least one PID stream based at least in part on the data header associated with the packet.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>5A</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002577A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002577A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002577A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002577A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002577A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002577A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002577A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002577A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002577A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
