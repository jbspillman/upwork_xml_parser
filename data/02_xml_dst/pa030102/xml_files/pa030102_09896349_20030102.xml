<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002379A1-20030102-D00000.TIF SYSTEM "US20030002379A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002379A1-20030102-D00001.TIF SYSTEM "US20030002379A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002379A1-20030102-D00002.TIF SYSTEM "US20030002379A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002379A1-20030102-D00003.TIF SYSTEM "US20030002379A1-20030102-D00003.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002379</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896349</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010628</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G11C008/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>365</class>
<subclass>230060</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Low power architecture for register files</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Ram</given-name>
<family-name>Krishnamurthy</family-name>
</name>
<residence>
<residence-us>
<city>Portland</city>
<state>OR</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Ganesh</given-name>
<family-name>Balamurugan</family-name>
</name>
<residence>
<residence-us>
<city>Hillsboro</city>
<state>OR</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>Archana B. Vittal</name-1>
<name-2>BLAKELY, SOKOLOFF, TAYLOR &amp; ZAFMAN LLP</name-2>
<address>
<address-1>12400 Wilshire Boulevard, Seventh Floor</address-1>
<city>Los Angeles</city>
<state>CA</state>
<postalcode>90025-1026</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A low power architecture for register files is provided. A decoder receives a specified bit address divided into a first input and a second input. The decoder is split into a first stage and a second stage. A pre-decoder in the first stage receives the first input, identifies a local bitline that is accessed, and outputs a first signal to a register file array. A post decoder in the second stage receives the second input and the first signal, processes the identification of the local bitline, and generates a second signal to be sent to the register file array. A delay synchronizes the first signal and the second signal so that both signals reach the register file array simultaneously. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates generally to register files, and more particularly, to a low power architecture for register files. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> A small, high-speed computer circuit that holds values of internal operations, such as the address of the instruction being executed and the data being processed is termed as a register. For example, when a program is debugged, register contents may be analyzed to determine the computer&apos;s status at the time of failure. In microcomputer assembly language programming, programmers reference registers routinely. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Large register files are an important component of today&apos;s high-speed microprocessors. For performance reasons, the register file uses dynamic logic and hence significant power dissipation occurs due to the required clocking. What is needed is an architecture that eliminates the need for high-activity clock signals, thereby resulting in lower power dissipation.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The present invention is illustrated by way of example, and not limitation, in the figures of the accompanying drawings in which: </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates one embodiment of conventional register file architecture; </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates one embodiment of a low power architecture for register files; </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates a circuit implementation of the decoder shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>; </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates the an implementation for the OR gate shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> at a transistor level; and </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates one embodiment of a process of lowering power dissipation for register files.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> A low power architecture for register files is described. In the following detailed description of the present invention, numerous specific details are set forth in order to provide a thorough understanding of the present invention. However, it will be apparent to one skilled in the art that the present invention may be practiced without these specific details. In some instances, well-known structures and devices are shown in block diagram form, rather than in detail, in order to avoid obscuring the present invention. There are several different ways to implement an independent positioning system. Several embodiments are described herein. However, there are other ways that would be apparent to one skilled in the art that may be practiced without specific details. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates one embodiment of conventional register file architecture. The embodiment shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> assumes a 256 word register file. The read operation is divided into two phases. During the first phase, an 8-bit address is decoded while a local bitline <highlight><bold>160</bold></highlight> is precharged. In one embodiment, as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, an 8-to-25 bit decoder is used. The 8-to-256 decoder receives the 8 bit address input and outputs 256 bits of address. The 256 bits of address move through a D1k domino driver <highlight><bold>120</bold></highlight> which receives the 256 bits, amplifies the signal, and drives the bits out as a read_select signal. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> In one embodiment, as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, there are 16 register file arrays <highlight><bold>140</bold></highlight> so that each register file array <highlight><bold>140</bold></highlight> takes a 16 bit address. Each 16 bit address goes to a register file cell <highlight><bold>150</bold></highlight> in a register file array <highlight><bold>140</bold></highlight>. The register file cell <highlight><bold>150</bold></highlight> is a memory cell, and each register file cell <highlight><bold>150</bold></highlight> for each register file array <highlight><bold>140</bold></highlight> is coupled to the local bitline <highlight><bold>160</bold></highlight>. The local bitline <highlight><bold>160</bold></highlight> connects all of the register file cells <highlight><bold>150</bold></highlight> to transmit data. In one embodiment, the local bitline <highlight><bold>160</bold></highlight> connects the 16 register file cells <highlight><bold>150</bold></highlight>, communicating data from the register file cells <highlight><bold>150</bold></highlight> to remote locations. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Referring back to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, in the next phase, the local bitline <highlight><bold>160</bold></highlight> is discharged depending on the stored data and the decoder output. This architecture results in high transition activity due to the extensive use of high-activity clock signals (phi2) <highlight><bold>130</bold></highlight>. Specifically, clock signals <highlight><bold>130</bold></highlight> are required inputs to 256 D1k word-line drivers and 16 local bitline precharge transistors. Accordingly, it would be beneficial to reduce the power in register files. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates one embodiment of a low power architecture for register files. In one embodiment, the decoder is split into a pre-decoder <highlight><bold>210</bold></highlight> and a post-decoder <highlight><bold>220</bold></highlight>. In one embodiment, an 8 bit address is the input. In <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, an 8 bit address input is split into a first input and a second input. The first input includes the 4 most significant bits of the 8 bit address, and the second input includes the 4 least significant bits. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> In a first stage, the 4-to-16 pre-decoder takes in the 4 most significant bits. The output from the 4-to-16 pre-decoder <highlight><bold>210</bold></highlight> is 16 bits. This output includes a local bitline select signal that identifies a local bitline <highlight><bold>260</bold></highlight> that is accessed. The local bitline select signal directly drives local bitline precharge transistors. Accordingly, the local bitline is held statically. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> In a second stage, the post decoder <highlight><bold>220</bold></highlight> takes the 4 least significant bits and the 16 bits from the pre-decoder <highlight><bold>210</bold></highlight>, and generates a complete 256 bits. The post-decoder <highlight><bold>220</bold></highlight> uses the output information from the pre-decoder <highlight><bold>210</bold></highlight> along with the remaining bits of the word address to generate a read select signal. The read select signal is sent to a register file cell <highlight><bold>250</bold></highlight> in the register file array <highlight><bold>240</bold></highlight>. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> A delay <highlight><bold>230</bold></highlight> is shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. The delay <highlight><bold>230</bold></highlight> synchronizes the local bitline select signal and read select signal. Accordingly, the local bitline select signal arrives at the register file array <highlight><bold>240</bold></highlight> at the same time as the read select signal. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> In one embodiment, there are 16 register file arrays. Each register file array receives one local bitline select signal and one read select signal. In one embodiment, as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, each register file array <highlight><bold>240</bold></highlight> takes a 16 bit address. Each 16 bit address goes to a register file cell <highlight><bold>250</bold></highlight> in a register file array <highlight><bold>240</bold></highlight>. The register file cell <highlight><bold>250</bold></highlight> is a memory cell, and each register file cell <highlight><bold>250</bold></highlight> for each register file array <highlight><bold>240</bold></highlight> is coupled to the local bitline <highlight><bold>260</bold></highlight>. The local bitline connects all of the register file cells <highlight><bold>250</bold></highlight> to transmit data. In one embodiment, the local bitline <highlight><bold>260</bold></highlight> connects the 16 register file cells <highlight><bold>250</bold></highlight>, communicating data from the register file cells <highlight><bold>250</bold></highlight> to remote locations. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates a circuit implementation of the decoder shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. <cross-reference target="DRAWINGS">FIG. 2</cross-reference> represents one circuit implementation of the decoder. However, there may be other circuit implementations of the decoder shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. An 8 bit address is divided into a first input including the most significant bits of the address and a second input including the least significant bits of the address. The most significant bits are input to a four input OR gate <highlight><bold>310</bold></highlight> and two inverters <highlight><bold>320</bold></highlight> and <highlight><bold>330</bold></highlight> to generate a local bitline select signal. The least significant bits are input to a four input OR gate <highlight><bold>340</bold></highlight>. The output of the OR gate <highlight><bold>340</bold></highlight> combine with the output of the OR gate <highlight><bold>310</bold></highlight> and are input to a NAND gate <highlight><bold>350</bold></highlight> and an inverter <highlight><bold>360</bold></highlight> to generate a read select signal. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The present invention reduces the circuit transition activity by using the existing decoder to generate the required timing control signals normally provided by a clock. The local bitline select signals directly drive the local bitline precharge transistors and hence hold the local bitline statically. Instead of an explicit clock, an example of which is shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, driving the pre-charge transistors, a static signal, in one embodiment called local bitline select signal, drives the pre-charge transistors. Accordingly, a significant amount of clock power is saved thereby reducing dynamic power consumption. Here, clock signals are only required in D1k gates as seen in the circuitry of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates an implementation for the OR gates shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> at a transistor level. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates one embodiment of a process <highlight><bold>500</bold></highlight> of lowering power dissipation for register files. At processing block <highlight><bold>505</bold></highlight>, it is determined whether an address signal is received. If an address signal is not received, the process keeps moving back to processing block <highlight><bold>505</bold></highlight> until an address signal is received. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> If it is determined that an address signal is received, the process moves to processing block <highlight><bold>510</bold></highlight> and the address signal is divided into a first input and a second input. At processing block <highlight><bold>520</bold></highlight>, the decoder is split into a pre-decoder and a post decoder. The first input is inputted into the pre-decoder at processing block <highlight><bold>530</bold></highlight>. At processing block <highlight><bold>540</bold></highlight>, an accessed local bitline is identified by the pre-decoder. At processing block <highlight><bold>550</bold></highlight>, a first signal is output from the pre-decoder to a register file array. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> At processing block <highlight><bold>560</bold></highlight>, the first signal from the pre-decoder and the second input are inputted into the post decoder. At processing blocks <highlight><bold>570</bold></highlight> and <highlight><bold>580</bold></highlight>, a second signal is generated by the post decoder and sent to the register file array. At processing block <highlight><bold>590</bold></highlight>, the first signal is delayed so that the first and second signals arrive at the register file array at the same time. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> A low power architecture for register files has been described. Although the present invention has been described with reference to specific exemplary embodiments, it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the invention. Accordingly, the specification and drawings are to be regarded in an illustrative rather than a restrictive sense. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. An apparatus comprising: 
<claim-text>a decoder split into a first stage and a second stage; </claim-text>
<claim-text>a pre-decoder in the first stage to identify a local bitline that is accessed and output a first signal to a register file array; and </claim-text>
<claim-text>a post-decoder in the second stage to process the identification of the local bitline and generate a second signal, the first signal and second signal arriving at the register file array at the same time. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising a delay to delay the first signal so that the first and second signals arrive at the register file at the same time. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> further comprising 16 register file arrays, each register file array receiving one first signal and one second signal. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein the first signal is 4 bits. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference> wherein the second signal is 256 bits. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the first signal drives local bitline precharge transistors. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. An apparatus comprising: 
<claim-text>a decoder to receive a specified bit address, the decoder split into a first stage and a second stage, the specified bit address divided into a first input having a number of bits and a second input having a number of bits; </claim-text>
<claim-text>a pre-decoder in the first stage to receive the first input, the pre-decoder identifying a local bitline that is accessed and outputting a first signal to a register file array; </claim-text>
<claim-text>a post-decoder in the second stage to process the identification of the local bitline and generate a second signal, the post-decoder receiving the second input in addition to the first signal from the pre-decoder and combining both to generate the second signal; and </claim-text>
<claim-text>a delay to synchronize the first signal and the second signals so that both signals arrive at the register file array simultaneously. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein the pre-decoder is a 4 to 16 bit decoder. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein a the specified bit address is 8 bits. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein a the first input is four bits. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein the 4 bits are 4 most significant bits. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein the second input is 4 bits. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> wherein the 4 bits are 4 least significant bits. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein the first signal is 16 bits. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein the number of bits in the second signal is 256 bits. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> further comprising 16 register file arrays, each register file array receiving one first signal and one second signal. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein the second signal arrives at a register file cell. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein the first signal drives local bitline precharge transistors. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A circuit comprising: 
<claim-text>a decoder to receive a specified bit address, the decoder split into a first stage and a second stage, the specified bit address divided into a first input having a number of bits and a second input having a number of bits; </claim-text>
<claim-text>a pre-decoder in the first stage to receive the first input, the pre-decoder identifying a local bitline that is accessed and outputting a first signal to a register file array; </claim-text>
<claim-text>a post-decoder in the second stage to process the identification of the local bitline and generate a second signal, the post-decoder receiving the second input in addition to the first signal from the pre-decoder and combining both to generate the second signal; and </claim-text>
<claim-text>a delay to synchronize the first signal and the second signals so that both signals arrive at the register file array simultaneously. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The circuit of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein the pre-decoder is a 4 to 16 bit decoder. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The circuit of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein the specified bit address is 8 bits. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The circuit of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein the first input is four bits. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The circuit of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference> wherein the 4 bits are 4 most significant bits. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The circuit of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein the second input is 4 bits. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The circuit of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> wherein the 4 bits are 4 least significant bits. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The circuit of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein the first signal is 16 bits. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The circuit of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein the number of bits in the second signal is 256 bits. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The circuit of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> further comprising 16 register file arrays, each register file array receiving one first signal and one second signal. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The circuit of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein the second signal arrives at a register file cell. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The circuit of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein the first signal drives local bitline precharge transistors. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. A method comprising: 
<claim-text>receiving an address signal, the address signal divided into a first input and a second input; </claim-text>
<claim-text>splitting a decoder into a pre-decoder and a post decoder, the first input going into the pre-decoder; </claim-text>
<claim-text>inputting the first input into the pre-decoder; </claim-text>
<claim-text>identifying a local bitline that is accessed using the pre-decoder; </claim-text>
<claim-text>outputting a first signal from the pre-decoder to a register file array; </claim-text>
<claim-text>inputting the first signal from the pre-decoder and the second input into the post decoder; </claim-text>
<claim-text>generating a second signal from the post decoder; </claim-text>
<claim-text>sending the second signal to the register file array; and </claim-text>
<claim-text>delaying the first signal so that the first and second signals arrive at the register file array at the same time. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the decoder is an 8 to 256 bit decoder. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the pre-decoder is a 4 to 16 bit decoder. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the address signal is 8 bits. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the first input is 4 most significant bits of the address signal. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the second input is 4 least significant bits of the address signal. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the first signal is 16 bits. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the second signal is 256 bits.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002379A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002379A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002379A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002379A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
