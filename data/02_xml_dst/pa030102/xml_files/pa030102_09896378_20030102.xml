<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002516A1-20030102-D00000.TIF SYSTEM "US20030002516A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002516A1-20030102-D00001.TIF SYSTEM "US20030002516A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002516A1-20030102-D00002.TIF SYSTEM "US20030002516A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002516A1-20030102-D00003.TIF SYSTEM "US20030002516A1-20030102-D00003.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002516</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896378</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L012/28</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>H04L012/56</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>370</class>
<subclass>412000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>370</class>
<subclass>428000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Method and apparatus for adapting to a clock rate transition in a communications network using idles</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Michael</given-name>
<family-name>Boock</family-name>
</name>
<residence>
<residence-non-us>
<city>Hamburg</city>
<country-code>DE</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Michael</given-name>
<family-name>Riepen</family-name>
</name>
<residence>
<residence-non-us>
<city>Hamburg</city>
<country-code>DE</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>Gordon R. Lindeen III</name-1>
<name-2>BLAKELY, SOKOLOFF, TAYLOR &amp; ZAFMAN LLP</name-2>
<address>
<address-1>12400 Wilshire Boulevard, Seventh Floor</address-1>
<city>Los Angeles</city>
<state>CA</state>
<postalcode>90025-1026</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The present invention allows data transmissions to cross from one clock domain to another, in one embodiment, the invention includes an idle removing block operating at a first clock speed to remove idle bits from received data packets, a buffer coupled to the idle removing block to receive the data packets from the idle removing block, the buffer generating an idle insertion control signal to the idle removing block to enable the removal of idle bits by the idle removing block, and an idle insertion block coupled to the buffer to receive data packets from the buffer and insert idle bits into the data packets, the idle insertion block receiving an idle insertion control signal from the buffer to enable the insertion of idle bits. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to the field of adapting a received input data stream at one clock rate to another clock rate. In particular, the present invention is related to using a buffer to write data in at one clock rate and read data out at another clock rate, while compensating for the rate variations using idles. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Background </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> In high-speed data communications, transitions can occur between clocks as data is conveyed across different channels. These transitions can cause clocking errors or data errors if the transitions are not compensated for. One such transition occurs in 10 Gb (Gigabit) Ethernet in the transition from the domain of the XGXS clock to that of the PMA clock. The required clock rates are the same, 156.25 MHz. However, the clocks are required to be accurate only to within &plus;/&minus;100 ppm. As a result, the clocks may differ in total by as much as &plus;/&minus;200 ppm. At the high data rates of 10 Gb Ethernet this difference can be very significant. The Ethernet standards set forth the clock rates, clock accuracy standards, bit rates, and data packet formats. The Ethernet standards also set forth that idles can be used to compensate for clock rate and other discrepancies and the permissible locations and structures for any idles that are used in a packet. However, there is no standard on how to insert and delete idles in order to accommodate such transitions between disparate clock domains. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS </heading>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The appended claims set forth the features of the invention with particularity. The present invention is illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings in which like reference numerals refer to similar elements and in which: </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a multiple port switch suitable for one application of the present invention; </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of an example of a PCS module in a transmit configuration suitable for implementing the present invention; </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram of an example of a clock adaptation module of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>; and </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram of an example of the PCS module of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> in a receive configuration suitable for implementing the present invention. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The present invention can be used to manage the idles handling in a PCS (Physical Coding Sublayer) module of a 10 GBASE-R Ethernet device, although it can also be used for other types of communicating systems. Ethernet refers to an IEEE (Institute of Electrical and Electronics Engineers) standard 802.3 that uses CSMA/DC (Carrier Sense Multiple Access with Collision Detection) access. 10 Gb Ethernet refers to a draft extension IEEE standard 802.3ae for higher speed communications. In the present invention, an idle handling unit removes or inserts idles in accordance with the IEEE standard in order to compensate different clock speeds on the transmission and receive side of a communications interface device. In one embodiment, the clock skew between transmit and receive can be up to &plus;/&minus;200 ppm. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The idle handling devices can be split into an idle removing (RI) block, a FIFO which can handle separate clock domains and an idle insertion (II) block. The RI block removes idles on the data source side if requested. It is followed by a FIFO buffer device, which handles the clock domain transition and the clock skew. After clock adaptation the II block inserts idles if necessary. In the example discussed below idles refers to idle words, i.e. a string of idle bits located between data and control words as prescribed by the 10 Gb Ethernet standards proposals. However, in other applications, the idles can be idle packets, idle bits or idle portions of words. The specific choice of how and where to remove or insert idles will depend on the particular use of the present invention. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The FIFO buffer can handle the complete control of the RI and the II block including all control logic. With this arrangement, there is only one FIFO device needed to adapt to both clocks. The present invention benefits in that idles insertion and deletion is done on separate sides of the FIFO buffer device. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> switch <highlight><bold>11</bold></highlight> has a plurality of ports <highlight><bold>13</bold></highlight>, <highlight><bold>15</bold></highlight>, <highlight><bold>17</bold></highlight>, each coupled to a MAC (Media Access Control) sublayer <highlight><bold>19</bold></highlight>, <highlight><bold>21</bold></highlight>, <highlight><bold>23</bold></highlight> as is well known in the art. In order to accommodate a 10 Gb Ethernet connection to another card or another chip, each port can also be coupled to an XGXS (10 Gigabit Extension Sublayer) adapter. For shorter distances (e.g. within the same chip) the XGXS adapters can be excluded, as is also well known in the art. The ports are each coupled through a high capacity communications channel <highlight><bold>25</bold></highlight>, <highlight><bold>27</bold></highlight>, <highlight><bold>29</bold></highlight> such as XGXS interconnect lines on a printed circuit board to remote devices <highlight><bold>31</bold></highlight>, <highlight><bold>33</bold></highlight>, <highlight><bold>35</bold></highlight> that, in turn, can be coupled to a number of other devices, nodes, switches, terminals or routers. Each remote device includes a corresponding XGXS adapter <highlight><bold>37</bold></highlight>, <highlight><bold>39</bold></highlight>, <highlight><bold>41</bold></highlight> to interface to the switch. Each XGXS adapter is coupled to a PCS module <highlight><bold>43</bold></highlight>, <highlight><bold>45</bold></highlight>, <highlight><bold>47</bold></highlight>. Each PCS module is, in turn coupled to a corresponding PMA (Physical Media Access) sublayer module <highlight><bold>49</bold></highlight>, <highlight><bold>51</bold></highlight>, <highlight><bold>53</bold></highlight>, which provides multiplexing, de-multiplexing and driver functions. The PMAs are then coupled each to its own PMD (Physical Media Dependent) sublayer module <highlight><bold>55</bold></highlight>, <highlight><bold>57</bold></highlight>, <highlight><bold>59</bold></highlight> that provides an interface and modulation to a long distance communication medium such as optic fiber, broadband radio, high capacity coaxial cable or any other suitable transmission medium. The illustrated architecture is particularly appropriate for 10 Gb Ethernet applications and is well-known in the art in such applications. The invention should not be considered as limited to such an architecture but can be used in a wide variety of other systems and architectures. The components listed as separate components can also be integrated into single integrated circuits such as VLSI (very large scale integrated circuit) and hybrid integrated circuits. For example, while each remote device <highlight><bold>31</bold></highlight>, <highlight><bold>33</bold></highlight>, <highlight><bold>35</bold></highlight> is shown as four modules on a separate PCB (printed circuit board), it is contemplated that they can also each be provided as a single integrated circuit chip. Similarly, the switch <highlight><bold>11</bold></highlight> can be provided with large scale integration and the remote devices can be integrated with all or a portion of the chip. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> Between the XGXS and the PMA module there is a transition from the 156.25 Hz clock domain of the XGXS module and the 156.25 MHz clock domain of the PMA module. As mentioned above the separate clocks of the two domains can differ by over &plus;/&minus;200 ppm in total. The present invention can be applied to make the clock rate transition as well as to compensate for any data rate discrepancies that are caused by the clock rate transition. The compensation of data rate discrepancies is, of course, limited by the amount of idles and inter-packet gaps provided for in any particular protocol. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The PCS data path can be considered as having a tx (transmit) path from the XGXS to the PMA and a rx (receive) path from the PMA to the XGXS. As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, in a tx-path, the PCS interface receives a data stream <highlight><bold>69</bold></highlight> in XGMII (10 Gigabit Media Independent Interface) format. This format has four eight-bit lanes with each bit double clocked to achieve a 312 Mbit/s data rate on 156.25 MHz lines. The data lanes can be consolidated and then can be divided into pairs of single data rate lines, as shown. The single data rate lines can also be divided up into several slower clock rate lines, as is well-known in the art. The idles removal block <highlight><bold>73</bold></highlight> analyses the data stream and removes idles, if it is requested to do so by the clock adaptation block <highlight><bold>75</bold></highlight>. It then writes the data with or without idles into a FIFO buffer <highlight><bold>77</bold></highlight>. While removing idles, all input into the FIFO buffer in the clock adaptation block is disabled. An idles insertion block <highlight><bold>79</bold></highlight> analyses the data stream that it reads from the FIFO buffer <highlight><bold>77</bold></highlight> and inserts idles, if requested to do so by the clock adaptation block. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> In a 10 Gb Ethernet application, the PCS module <highlight><bold>71</bold></highlight> also includes other modules <highlight><bold>81</bold></highlight> to perform additional functions as required by the standards prior to providing the data to the PMA. These functions include encoding, scrambling, data rate conversion and packet reconfiguring. The particular form and function of these modules is not essential to the clock adaptation of the present invention and so will not be discussed in detail. In other applications, different modules can be used and the order of the modules can be changed. For example, while the other modules are shown as operating on the data after clock adaptation, any one or more of the modules can be configured or positioned to operate before clock adaptation. This output is then transmitted to the PMD as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. As will be described later, the modules can be used for both the transmit and receive path. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> In the idles removal module <highlight><bold>73</bold></highlight>, data words can be analyzed in blocks and, if necessary, idles can be removed from each data block. The idles removal module then rebuilds the data blocks under the conditions described for 10 Gb Ethernet in the proposed draft IEEE standard 802.3ae. The removal of idles starts upon receiving an overflow warning control signal from the FIFO buffer. In transmit mode, the module runs with a frequency of 156.25 MHz, provided over a clock bus <highlight><bold>74</bold></highlight> by the external XGXS clock circuit (not shown). This clock is typically accurate to &plus;/&minus;100 ppm. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> In the idles insertion module <highlight><bold>79</bold></highlight>, data words can be analyzed in blocks and, if necessary, idles can be inserted into each block. The module then rebuilds the blocks under the conditions described for 10 Gb Ethernet in the proposed draft IEEE standard 802.3ae. The insertion of idles starts upon receiving an underflow warning control signal from the FIFO buffer. In transmit mode, the idles insertion module <highlight><bold>79</bold></highlight> and the other modules <highlight><bold>81</bold></highlight> run with a frequency of 156.25 MHz, provided over a clock bus <highlight><bold>80</bold></highlight> by the external PMA clock circuit (not shown). This clock is also typically accurate to &plus;/&minus;100 ppm but any PMA clock skew will be unrelated to any skew of the XGXS clock. The two clock domains are on opposite sides of a dotted line <highlight><bold>76</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> As mentioned above, the clock adaptation block contains a FIFO buffer device <highlight><bold>77</bold></highlight> in which the input and output work independently of each other. This allows the input and output to work at different clock speeds. As described more completely below, control signals allow the input and output to work independently without conflict. If the FIFO buffer nearly overflows or underflows, a control signal can be set. Lock signals can also be used to deactivate any operation of a function. For example, a lock signal can be used by the II or RI block to disable any input or output operation of the FIFO buffer data. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the FIFO <highlight><bold>75</bold></highlight> contains a two-sided or dual-ported buffer such as a DPRAM (dual port random access memory) <highlight><bold>101</bold></highlight> and two RAM access control blocks, a write control block <highlight><bold>103</bold></highlight>, and a read control block <highlight><bold>105</bold></highlight>. The FIFO receives data on a data input line <highlight><bold>102</bold></highlight>. Data is read from the FIFO on an output line <highlight><bold>108</bold></highlight> to a 2:1 multiplexer <highlight><bold>104</bold></highlight>. Each RAM access control block includes a counter for RAM addressing and control logic for generating warning, and error status signals for underflow and overflow. For the write control block, the control signals include the overflow warning signal <highlight><bold>107</bold></highlight>, to trigger the removal of idles, and an incoming write lock signal <highlight><bold>109</bold></highlight> to prevent any write operations to the DPRAM. Similarly, the read control block includes the underflow warning signal <highlight><bold>111</bold></highlight> to trigger the insertion of idles and an incoming read lock signal <highlight><bold>113</bold></highlight> to prevent any read operations from the DPRAM. The write control block <highlight><bold>103</bold></highlight> and the read control block <highlight><bold>105</bold></highlight> are used to ensure that reads and writes are not performed at the same address at the same time. As mentioned above, the write control block and the read control block operate in different clock domains as shown by the dotted line <highlight><bold>76</bold></highlight>. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The write control block <highlight><bold>103</bold></highlight> receives the external XGXS clock signal <highlight><bold>74</bold></highlight> and the read control block <highlight><bold>105</bold></highlight> receives the different external PMA clock signal <highlight><bold>80</bold></highlight> both set to the clock rate of 156.25 MHz &plus;/&minus;200 ppm. The DPRAM, accordingly, can be read at a slightly different speed than it is written. The read/write controls discussed below prevent any collisions between the two clock domains. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The address range of the DPRAM in this example is divided into eight sections or banks <highlight><bold>109</bold></highlight>. However, any number of banks can be used depending on the application. The number of banks can be selected to be sufficient to compensate for clock rate discrepancies. A set of read/write control signals, two for each of the eight sections, is accessed by the write control block and read control block to determine access to each of the eight sections, respectively. In the present example shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the signals are connected across the clock domain <highlight><bold>76</bold></highlight> by a set of eight banks <highlight><bold>107</bold></highlight>, this provides sixteen synchronization units, two for each bank. When a write cycle has filled the first bank completely, the first read/write control signal is set. The write block continues by filling the following banks. The read block has access to bank <highlight><bold>1</bold></highlight> after the bank is written, and the signal is set as full. The signal is set as empty when all data of this bank has been read. Both control processes have to set the status signals early enough to allow for signal synchronization between the two different clock domains. If a read bank and a write bank-access occur at the same bank at substantially the same time, then an error <highlight><bold>110</bold></highlight> can occur. This can be indicated to a 2:1 multiplexer <highlight><bold>104</bold></highlight> on an error line <highlight><bold>110</bold></highlight> from the read control block. When an error is indicated /LF/ (local fault words) are inserted from an /LF/ source <highlight><bold>106</bold></highlight>. The local fault words are defined in the 10 Gb Ethernet standard. For other applications, other types of error signaling can be used. The generation of overflow and underflow warning signals are described below. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The write control block <highlight><bold>103</bold></highlight> generates an overflow warning signal or overflow signal when too many banks have been filled. The selection of how many constitutes too many will depend on the application. The overflow signal is released when enough banks are emptied. The overflow signal acts as an idle removal control signal to the idles removal block to remove idles from the stream. This reduces the rate of data input to the DPRAM. However, many other mechanisms can be employed to trigger the idle removal. The read block <highlight><bold>105</bold></highlight> similarly generates an underflow warning signal or underflow signal if too many banks are empty. The underflow signal is released as the banks are filled to a sufficient level. The selection of how much constitutes a sufficient level will depend on the application. The underflow signal acts as an idle insertion control signal to the idle insertion block to insert idles into the stream from the DPRAM. This reduces the rate at which data must be read from the DPRAM to provide downstream blocks. In addition, the read block includes the error line <highlight><bold>110</bold></highlight> to trigger the insertion of /LF/ data by the 2:1 multiplexer <highlight><bold>104</bold></highlight>. The error line is set whenever an actual overflow is detected. This happens when, despite the overflow warning signal <highlight><bold>107</bold></highlight>, data is written faster than it can be read so that a bank gets written and read at the same time. The /LF/ data will eventually cause the erroneous data packet to be resent from its original source. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The overflow and underflow signals are generated by a combinatorial logic, used to control state machines. The logic relies on the read/write control register states in order to anticipate the need for idle insertion and idle removal. However, many other mechanisms can be employed to trigger the overflow and underflow signals. The signals allow the clock adaptation block to accommodate different clock rates and different data rates simply and efficiently. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The underflow and overflow signals are based on the rules for inserting and removing idles, the size of the data packets, the capacity for inserting and removing idles and the speed and latency of the circuitry. With a possible maximum clock speed difference of &plus;/&minus;200 ppm, the 156.25 MHz clocks may differ by as much as 31.25 KHz. Typically, idles cannot be inserted into a data packet but only before or after a packet. In a typical 10 Gb Ethernet application as described in the proposed draft IEEE standard 802.3ae, data packets are from 64 to 1518 octets wide. 16 octets are transmitted for each clock cycle. With a maximum clock skew, the system must store at least two packets or from 8 to 190 clocks of data on the write side to avoid errors before idles can be removed. The overflow warning threshold is set so that idles can be removed in time to compensate the discrepancy. Similarly the underflow warning threshold is set so that idles can be inserted in time to compensate the discrepancy. The error signal is set at a higher threshold than the warning signals. This allows an overflow or underflow to be corrected before an error occurs. For other applications, the sizes of the various buffers can be adapted to accommodate the rules for idles in the particular application. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> For a rx path, the PCS module operates in the same way as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, but in the opposite direction. The PCS module is accordingly reconfigured as shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. The PCS module receives data <highlight><bold>87</bold></highlight> from the PMA sublayer of the physical layer. This is shown, as above, as two blocks at a 156.25 MHz single data rate, however other configurations are also possible. These are processed by the other modules <highlight><bold>115</bold></highlight> as desired for the particular application. In 10 Gb Ethernet, the other modules include descrambling, decoding, data rate conversion, and packet reconfiguration. For other applications other modules may be provided. The data blocks are received by an idle removal block <highlight><bold>117</bold></highlight>. Idles are removed or inserted from the data in the idle removal <highlight><bold>117</bold></highlight> and insertion <highlight><bold>119</bold></highlight> blocks, as requested by the clock adaptation block <highlight><bold>121</bold></highlight>. The idle insertion and removal blocks are coupled to each other through the clock adaptation block and its FIFO buffer <highlight><bold>77</bold></highlight>. The adapted packets are transmitted then through output data bocks <highlight><bold>69</bold></highlight>. As will be understood from the description above, the functional blocks in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> can be built around the corresponding <cross-reference target="DRAWINGS">FIG. 2</cross-reference> blocks to accomplish the same functions in reverse. As with the transmit path, there is a clock domain transition <highlight><bold>76</bold></highlight> and the FIFO buffer within the clock adaptation block is used to make the transition. In other applications, the positions and functions of the other modules <highlight><bold>115</bold></highlight> can be modified or distributed as appropriate. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> It should be noted that, while the steps described herein may be performed under the control of a programmed processor, in alternative embodiments, the steps may be fully or partially implemented by any programmable or hard coded logic, such as Field Programmable Gate Arrays (FPGAs), TTL logic, or Application Specific Integrated Circuits (ASICs), for example. Additionally, the method of the present invention may be performed by any combination of programmed general purpose computer components or custom hardware components. Therefore, nothing disclosed herein should be construed as limiting the present invention to a particular embodiment wherein the recited steps are performed by a specific combination of hardware components. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> In the present description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent, however, to one skilled in the art that the present invention may be practiced without some of these specific details. In other instances, well-known structures and devices are shown in block diagram form. The specific detail may be supplied by one of average skill in the art as appropriate for any particular implementation. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The present invention includes various steps, which may be performed by hardware components or may be embodied in machine-executable instructions, such as software or firmware instructions. The machine-executable instructions may be used to cause a general-purpose or special-purpose processor programmed with the instructions to perform the steps. Alternatively, the steps may be performed by a combination of hardware and software. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The present invention may be provided as a computer program product that may include a machine-readable medium having stored instructions thereon, which may be used to program a computer (or other machine) to perform a process according to the present invention. The machine-readable medium may include, but is not limited to, floppy diskettes, optical disks, CD-ROMs, and magneto-optical disks, ROMs, RAMs, EPROMs, EEPROMs, magnet or optical cards, flash memory, or any other type of medium suitable for storing electronic instructions. Moreover, the present invention may also be downloaded as a computer program product, wherein the program may be transferred from a remote computer to a requesting computer by way of data signals embodied in a carrier wave or other machine-readable propagation medium via a communication link (e.g., a modem or network connection). </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> Importantly, while embodiments of the present invention are described with reference to adapting transmission from 10 Gigabit Ethernet, the method and apparatus described herein are equally applicable to hubs, nodes, routers and to peers on any other type of network, intranet, Internet, LAN, WAN and mobile wireless networks. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Although this disclosure describes illustrative embodiments of the invention in detail, it is to be understood that the invention is not limited to the precise embodiments described. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. Various adaptations, modifications and alterations may be practiced within the scope of the invention defined by the appended claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. An apparatus comprising: 
<claim-text>an idle removal block operating at a first clock speed to remove idles from received data packets; </claim-text>
<claim-text>a buffer coupled to the idle removal block to receive the data packets from the idle removal block, the buffer generating an idle insertion control signal to the idle removal block to enable the removal of idles by the idle removal block; </claim-text>
<claim-text>an idle insertion block operating at a second clock speed coupled to the buffer to receive data packets from the buffer and insert idles into the data packets, the idle insertion block receiving an idle insertion control signal from the buffer to enable the insertion of idles. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the buffer comprises a dual port memory, wherein the idle removal block is coupled to one port of the dual port memory and wherein the idle removal block is coupled to the other port of the dual port memory. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the buffer comprises write control logic for writing packets from the idle removal block into the buffer and wherein the write control logic generates the idle insertion control signal based on the write capacity of the buffer. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference> wherein the write capacity includes the memory currently available to the write control logic for writing packets into the buffer. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the buffer comprises read control logic for reading packets from the buffer and wherein the read control logic generates the idle removal control signal based on the read capacity of the buffer. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference> wherein the read capacity includes the memory currently filled for the read control logic to read packets from the buffer. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the buffer receives the data packets from the idle removal block based on the first clock frequency, and wherein the idle insertion block receives data packets from the buffer at the second clock frequency. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. An apparatus comprising: 
<claim-text>means, operating at a first clock speed, for removing idles from received data packets; </claim-text>
<claim-text>means for buffering data packets coupled to the means for removing for receiving the data packets from the means for removing, the means for buffering generating an idle insertion control signal to the means for removing to enable the removal of idles by the means for removing; </claim-text>
<claim-text>means, operating at a second clock speed, coupled to the means for buffering for receiving data packets from the means for buffering and for inserting idles into the data packets, the means for inserting receiving an idle insertion control signal from the means for buffering to enable the insertion of idles. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> wherein the means for buffering comprises a dual port memory, wherein the means for removing is coupled to one port of the dual port memory and wherein the means for removing is coupled to the other port of the dual port memory. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> wherein the means for buffering comprises means for writing packets from the means for removing into the means for buffering and wherein the means for writing generates the idle insertion control signal based on the write capacity of the means for buffering. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> wherein the write capacity includes the memory currently available to the means for writing for writing packets into the means for buffering. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> wherein the means for buffering comprises means for reading packets from the buffer and wherein the means for reading generates the idle removal control signal based on the read capacity of the means for buffering </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> wherein the read capacity includes the memory currently filled for the means for reading to read packets from the means for buffering. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> wherein the means for buffering receives the data packets from the means for removing based on the first clock frequency, and wherein the means for inserting receives data packets from the means for buffering at the second clock frequency. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A method comprising: 
<claim-text>receiving a data packet; </claim-text>
<claim-text>detecting a buffer capacity relative to the packet; </claim-text>
<claim-text>removing idles from the packet depending on the detected buffer capacity; </claim-text>
<claim-text>writing the packet into the buffer at a first clock rate and; </claim-text>
<claim-text>reading the packet from the buffer at a second clock rate. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, further comprising halting the writing of the packet during removing idles. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> further comprising inserting idles into the packet after reading the packet to create a second packet at the second clock rate. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, further comprising halting the reading of the packet during inserting idles. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, further comprising generating an error signal if the buffer capacity is exceeded. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein detecting a buffer capacity relative to the packet comprises determining the memory currently available for writing packets into the buffer.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002516A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002516A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002516A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002516A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
