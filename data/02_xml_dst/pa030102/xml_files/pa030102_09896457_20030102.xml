<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005299A1-20030102-D00000.TIF SYSTEM "US20030005299A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005299A1-20030102-D00001.TIF SYSTEM "US20030005299A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005299A1-20030102-D00002.TIF SYSTEM "US20030005299A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005299A1-20030102-D00003.TIF SYSTEM "US20030005299A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005299A1-20030102-D00004.TIF SYSTEM "US20030005299A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005299A1-20030102-D00005.TIF SYSTEM "US20030005299A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005299A1-20030102-D00006.TIF SYSTEM "US20030005299A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005299A1-20030102-D00007.TIF SYSTEM "US20030005299A1-20030102-D00007.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005299</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896457</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L009/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>713</class>
<subclass>171000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>User authorization management system using a meta-password and method for same</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Chenhong</given-name>
<family-name>Xia</family-name>
</name>
<residence>
<residence-us>
<city>San Jose</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>William</given-name>
<middle-name>Earl</middle-name>
<family-name>Malloy</family-name>
</name>
<residence>
<residence-us>
<city>Santa Clara</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>International Business Machines Corporation</organization-name>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>Michael E. Hudzinski</name-1>
<name-2>FAY, SHARPE, FAGAN, MINNICH &amp; McKEE, LLP</name-2>
<address>
<address-1>Seventh Floor</address-1>
<address-2>1100 Superior Avenue</address-2>
<city>Cleveland</city>
<state>OH</state>
<postalcode>44110-2518</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A user authentication information management method receives a meta-password from a user. A repository (<highlight><bold>34</bold></highlight>) lists network addresses (<highlight><bold>36</bold></highlight>) and associated handles (<highlight><bold>38</bold></highlight>), each handle having an associated encoded password. An authentication response from the user is intercepted. A modified authentication response is generated by identifying a network address to which the response is directed (<highlight><bold>208</bold></highlight>), searching for the identified network address (<highlight><bold>210</bold></highlight>) in the repository (<highlight><bold>34</bold></highlight>), identifying a handle (<highlight><bold>212</bold></highlight>) corresponding to the address based on the searching (<highlight><bold>210</bold></highlight>), decoding the password associated with the handle using the meta-password as a decoding key (<highlight><bold>214</bold></highlight>), and substituting the decoded password for the meta-password in the authentication response (<highlight><bold>216</bold></highlight>). The method also generates pseudo-random passwords (<highlight><bold>124</bold></highlight>) consistent with password rules (<highlight><bold>128</bold></highlight>). The repository (<highlight><bold>34</bold></highlight>) can reside on a client device (<highlight><bold>14</bold></highlight>), a proxy server, a local area network, or a security server having an Internet protocol (IP) address. The repository (<highlight><bold>34</bold></highlight>) can also be disposed at a database service. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to computer network security and passwords, and more particularly to the management of user authentication information. It particularly relates to the creation, storage, updating, and transmission of user identification tokens and passwords, and will be described with particular reference thereto. However, the invention is not so limited, and will also find application in other areas of secure information management such as the management and electronic transmission of credit card numbers, personal identification numbers (PIN&apos;s), and the like. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Recently, there has been a rapid rise in the number and type of secure computer services offered through the Internet or over local area networks (LAN&apos;s), wireless communication systems, internal corporate computing resources, and the like. Web browser programs originally designed for navigating an open Internet are now typically additionally used to access secure websites, secure LAN&apos;s, and other restricted sites as well. The use of a web browser simplifies the access and navigation of the various secure computer services by providing a common user interface. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> In order to establish and confirm authorization to access a secure service, a user is typically required to supply at least a user identification (user ID) token and a password to establish a secure connection to the service. Loss or theft of the authorization information, especially the password, is a potential serious security risk. For this reason, each user is strongly encouraged to follow certain guidelines in creating, storing, and transmitting user ID tokens and passwords. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> First, it is strongly recommended or required that each user implement a different password for each service accessed. However, users often have difficulty remembering and keeping track of a large number of passwords for the various secure services typically accessed. As a result, many users ignore the rule of a different password for each service and instead use the same password for many different secure services. Alternatively, users often maintain a physical, e.g. handwritten or printed, list of passwords, or store the passwords in an unencrypted and insecure file, such as a spreadsheet or a word processing document. Of course, the existence of such a physical insecure list in and of itself creates a greatly increased risk of password theft. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Second, it is strongly recommended or required that each password selected is essentially a random character string and thus not easily associable with the user. The use of a spouse&apos;s name or birthday, a favorite color, or other password which might be easily guessed by hackers is strongly discouraged. This rule also is commonly ignored by users who prefer to use easily remembered, but correspondingly obvious, passwords. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Third, passwords should be fairly complex. Short and simple passwords, such as &ldquo;12345&rdquo;, &ldquo;abcde&rdquo;, &ldquo;hello&rdquo;, and the like, are more easily guessed than longer passwords which contain both letters and digits. Once again, however, users typically prefer the simpler passwords. This tendency can be countered to some degree by having password format rules encoded into the security management system of the secure service. Typical password format rules include a minimum password length, a requirement for at least one numerical digit, a requirement for at least one alphabetical letter, or the like. Of course, such requirements again tend to induce users to create physical lists so that the forgotten passwords can be easily recalled. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Fourth, security experts recommend changing passwords frequently. By employing frequent password changes, the risks associated with a compromised password are limited to a short time period between password changes. Users are often resistant to frequent password changes, however, because they do not want to memorize the new passwords. Many secure services counter this resistance by requiring a password change at fixed intervals, e.g. on a monthly or yearly basis. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> To summarize, an inherent tension exists between the characteristics of a secure user password portfolio which include a large number of different and essentially random passwords that are frequently changed, and the desire of computer users to have only a few, or ideally just one, password which is easily memorized and can be implemented over a long period of time. The majority of methods disclosed in the prior art for alleviating this conflict weigh heavily against ease of use. In the most extreme examples, some secure services now assign a random password and enforce password changes on a weekly or monthly basis. Of course, an unrecognizable computer generated password almost certainly will result in the user physically jotting the password down on a slip next to the computer. Thus, these enforced methods are not satisfactory, at least in isolation. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The prior art also discloses methods for helping computer users to cope with large numbers of complex passwords. U.S. Pat. Nos. 6,006,333 and No. 6,182,229, both issued to Nielsen, disclose a client-side system for encoding, storing, and transmitting passwords based upon a master password. In this manner, the user need only remember the master password. The client-side system then recalls, decodes, and sends the actual password to each secure service requesting user authentication information. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> There remains an unfulfilled need, however, for an improved comprehensive password management system which maintains high security while reducing the need for the user to remember a large number of frequently changing passwords. In view of the increasing availability of a variety of different types of devices (e.g., desktop computers, laptop computers, cellular telephones, personal data assistants, and the like) capable of accessing secure network services, the improved password management system should be device independent. Many secure service providers now have multiple login network addresses, and the user can supply the same authorization information at any of these addresses and thereby establish an authorized connection to the entire service. As a consequence, the password management system should preferably accommodate multiple login network addresses for the same secure service. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The increasingly rigorous password requirements imposed by secure service providers, which presently include complex password format rules and mandatory password changes on fixed time schedules, should also preferably be accommodated. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> An improved password management system should also preferably be compatible with, and transparent to, legacy secure services, while simultaneously taking advantage of newer and better standardized network security protocols which are being developed and which are in some cases already available. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The present invention contemplates an improved system and method for the management of user authentication information which provides a solution to the above problems and others. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> In accordance with one aspect of the present invention, a method is disclosed for management of user authentication information. A meta-password is established for an associated user. A repository is maintained which includes a list of network addresses and associated handles, each handle having an associated encoded password. A user authentication response sent by an associated user is intercepted. A network address is identified to which the authentication response is directed. A modified authentication response is generated based upon the authentication response and based upon the contents of the repository. The modified authentication response is transmitted to the identified network address via the network. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Preferably, the step of generating a modified authentication response further includes the steps of: searching for the identified network address in the repository; identifying a handle corresponding to the network address based on the searching; decoding the encoded password associated with the identified handle using the meta-password as a decoding key; and generating the modified authentication response by substituting the decoded password for the meta-password in the authentication response. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> The step of generating a modified authentication response can also preferably include the steps of: receiving a handle selection from the associated user, said handle selection being selected from the handles contained in the repository; entering the network address into the repository; associating the network address with the received handle selection in the repository; decoding the encoded password associated with the received handle using the meta-password as a decoding key; and generating the modified authentication response by combining the decoded password with the authentication response. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Preferably, the method allows for a new handle to be received from the associated user using a handle management dialog box. A collection of password format rules is established. A password is generated consistent with the established password format rules. The generated password is encoded using the meta-password as an encoding key. The network address is stored in the repository. In the repository, the network address is associated with the new handle. Also in the repository, the encoded password is associated with the new handle. The step of generating a password selectively includes generating a password using a random character generator, wherein the random character generator receives as randomizing elements the meta-password and a system clock value. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Preferably, the method includes the steps of: establishing a collection of password format rules for a first handle in the repository; generating a password based upon the collection of password format rules; updating the user password on a secure service provider with which the first handle is associated to correspond with the generated password; encoding the generated password using the meta-password as an encoding key; and associating, in the repository, the encoded password with the first handle. Additional steps selectively include: receiving an update period for the first handle from the associated user; relating the update period with the first handle; and repeating, coincident with a recurrence of the update period, the generating, updating, encoding, and associating steps. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> In accordance with another aspect of the present invention, a system for managing user authentication information is disclosed. The system operates in conjunction with an associated interfacing program which interfaces an associated user with a plurality of associated secure services. The system includes a repository containing at least an address table wherein each address has an associated handle and each handle has an associated encoded password. A software hook is provided, by which an authentication response sent by the interfacing program is intercepted. A processor is provided, for processing the intercepted authentication response by combining a password extracted from the repository with the intercepted authentication response. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> In the preferred system, the repository resides on an associated client device, an associated proxy server, an associated local area network, or an associated security server having an Internet protocol (IP) address. The repository can also be disposed at an associated database service as desired. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> One advantage of the present invention is that only a single user ID token and meta-password provides access to a plurality of networked secure services. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Another advantage of the present invention is that, in spite of the user remembering only a single user ID and meta-password for a plurality of services, a different user ID and password is nonetheless transmitted to each network service. This reduces the security impact of password interception and theft during network transit. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Another advantage of the present invention is that the user names and passwords are stored in an encrypted form. The user need not see or know the actual user names and passwords, and cannot write them down or otherwise disseminate them. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Another advantage of the present invention is that it is device independent and is compatible with access through desktop computers, laptop computers, cellular telephones, personal data assistants (PDA&apos;s), and the like. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Another advantage of the present invention is that it is compatible with existing secure services, while simultaneously taking advantage of new and improved network security protocols where available. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Yet another advantage of the present invention is that it accommodates establishment of a secure connection to a secure service provider through any of a plurality of different network addresses associated therewith. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Still yet another advantage of the present invention is that randomized passwords are automatically generated, thereby avoiding the use of passwords that are connected with the user, such as birth dates, children&apos;s names, and the like. These randomized passwords are not displayed to the user and are electronically stored in an encrypted format to further minimize the possibility of password theft. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Still further advantages and benefits of the present invention will become apparent to those of ordinary skill in the art upon reading and understanding the following detailed description. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The invention may take form in various components and arrangements of components, and in various steps and arrangements of steps. The drawings are only for the purposes of illustrating preferred embodiments and are not to be construed as limiting the invention. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a diagram of the user authorization system according to a preferred embodiment of the invention; </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a diagrammatic representation of the preferred user authorization method in accordance with the invention; </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a flow chart of the preferred process for substituting an actual password for the meta-password entered by the associated user in accordance with the invention; </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows the preferred handle selection dialog box in accordance with the invention; </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows the preferred handle management dialog box in accordance with the invention; </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows the preferred password rules dialog box in accordance with the invention; and </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows a preferred embodiment of changing the meta-password.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> With reference first to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the structure of the preferred embodiment of the user authentication management system <highlight><bold>8</bold></highlight> in accordance with the present invention is disclosed. The exemplary system <highlight><bold>8</bold></highlight> manages a plurality of user ID tokens and passwords, and will be described with respect to such an application. However, it will be appreciated that the invention is applicable to the management of other information including secure information such as credit card numbers, personal identification numbers PIN&apos;s), and the like. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The user authentication management system <highlight><bold>8</bold></highlight> operates in conjunction with an associated secure service provider <highlight><bold>10</bold></highlight>, a network <highlight><bold>12</bold></highlight>, and an associated client device <highlight><bold>14</bold></highlight> which includes a user interface <highlight><bold>16</bold></highlight>, and which runs an appropriate interfacing program <highlight><bold>18</bold></highlight>. The network <highlight><bold>12</bold></highlight> preferably interconnects the Internet, a local area network (LAN), a wireless communication system, and the like, and interconnects at least the secure service provider <highlight><bold>10</bold></highlight> with the client device <highlight><bold>14</bold></highlight>. The client device <highlight><bold>14</bold></highlight> is preferably a desktop computer, laptop computer, network computer, or the like. However, other embodiments of the client device are also contemplated, including Internet-capable cellular telephones, personal data assistants (PDA&apos;s), and the like. The user interface <highlight><bold>16</bold></highlight> type or form is based upon the type or form of the client device <highlight><bold>14</bold></highlight>, but the user interface <highlight><bold>16</bold></highlight> typically includes a display screen <highlight><bold>20</bold></highlight> and an input device <highlight><bold>22</bold></highlight> such as a keyboard, joystick, keypad, and the like. Preferably, the interfacing program <highlight><bold>18</bold></highlight> is a web browser. However, other embodiments of the interfacing program <highlight><bold>18</bold></highlight> are also contemplated, such as a software component of the client device <highlight><bold>14</bold></highlight> operating system, software that is remotely accessed across the network <highlight><bold>12</bold></highlight>, or the like. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The authentication management system <highlight><bold>8</bold></highlight> includes at least a software hook <highlight><bold>30</bold></highlight>, a processor <highlight><bold>32</bold></highlight>, and repository <highlight><bold>34</bold></highlight>. The software hook <highlight><bold>30</bold></highlight> is functional to detect and intercept authentication responses and provide for other user interactions with the authentication management system which will be described in more detail below. Preferably, the software hook <highlight><bold>30</bold></highlight> is a browser plug-in program which interacts with the interfacing program or web browser <highlight><bold>18</bold></highlight>. However, other embodiments are also contemplated for the software hook <highlight><bold>30</bold></highlight>, such as a program running or executing on a proxy server, a software component of the client device <highlight><bold>14</bold></highlight> operating system, and the like. The password management system processor <highlight><bold>32</bold></highlight> implements algorithms which create, identify, encode, decode, and update the passwords. The repository <highlight><bold>34</bold></highlight> stores information which relates particular secure network addresses with encoded passwords. It is to be appreciated that the processor <highlight><bold>32</bold></highlight> and repository <highlight><bold>34</bold></highlight> components can reside on the client device <highlight><bold>14</bold></highlight>. However, these components <highlight><bold>32</bold></highlight>, <highlight><bold>34</bold></highlight> are not required to reside thereat, but instead can be located on a local area network (LAN), on a proxy server, at a security server having an Internet protocol (IP) address, or the like. It is also to be understood that these components can be implemented as a repository database service accessed over the network. The option to remotely locate the repository <highlight><bold>34</bold></highlight> and the processor <highlight><bold>32</bold></highlight> is represented in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> by the dashed connection between the processor <highlight><bold>34</bold></highlight> and the network <highlight><bold>12</bold></highlight>. Placing at least the repository <highlight><bold>34</bold></highlight> at a location accessible over the network <highlight><bold>12</bold></highlight> advantageously enables the user to utilize the authentication management system <highlight><bold>8</bold></highlight> from any of a variety of different client devices <highlight><bold>14</bold></highlight>, such as the user&apos;s desktop computer, a portable computer, an Internet-capable cellular telephone, and the like. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> With continuing reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the repository <highlight><bold>34</bold></highlight> includes links between network addresses and encoded passwords. For maximum flexibility, in the preferred embodiment an intermediate value called a &ldquo;handle&rdquo; is defined. Each handle has a single associated encoded password. However, multiple network addresses can be associated with each handle. In the embodiment illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the repository <highlight><bold>34</bold></highlight> includes an address table <highlight><bold>36</bold></highlight> and a handle table <highlight><bold>38</bold></highlight>. An exemplary handle is the &ldquo;My Company&rdquo; handle which has four different addresses associated therewith as shown in the address table <highlight><bold>36</bold></highlight>. However, the &ldquo;My Company&rdquo; handle has only a single encoded password &ldquo;45hlsa&rdquo; associated therewith as shown in the handle table <highlight><bold>38</bold></highlight>. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The use of handles provides several operational benefits. Multiple network addresses for accessing a single secure service <highlight><bold>10</bold></highlight> are accommodated by assigning all the addresses to a single handle corresponding to the secure service <highlight><bold>10</bold></highlight>. In the exemplary case of the &ldquo;My Company&rdquo; service (or handle), network addresses corresponding to the homepage (www.mycompany.com), shopping (www.mycompany.com/shopping.login.asp), mail (www.mail.mycompany.com), and preferences (www.mycompany.com/preferences/) areas of the service are included in the address table <highlight><bold>36</bold></highlight>. Access through any of these four network addresses is accommodated by the address table <highlight><bold>36</bold></highlight>. If the password for the &ldquo;My Company&rdquo; service is changed, only the encoded password corresponding to the &ldquo;My Company&rdquo; handle is updated. This improves upon many prior art methods which require updating the password for every network address associated with a service individually. Adding a new network address for a service is also simplified and involves adding the new network address to the address table <highlight><bold>36</bold></highlight> with the appropriate handle association. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> With continuing reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, and with further reference to <cross-reference target="DRAWINGS">FIGS. 2 and 3</cross-reference>, the preferred method for maintaining and using the authentication management system <highlight><bold>8</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> will now be described. As shown in <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> user is typically presented with a user authentication dialog box on the display <highlight><bold>20</bold></highlight> which typically requires a response that includes a user identification (user ID) token <highlight><bold>40</bold></highlight>, and a password <highlight><bold>42</bold></highlight>. The authentication request display can be a custom dialog box generated in HTML or another format by the secure service provider <highlight><bold>10</bold></highlight>. The authentication request display can also be generated by the web browser <highlight><bold>18</bold></highlight> in response to a standardized, e.g. HTTP protocol, user login request sent by the service provider <highlight><bold>10</bold></highlight>. In the case of a standard HTTP protocol login, the software hook or plug-in <highlight><bold>30</bold></highlight> preferably inserts an additional dialog input <highlight><bold>44</bold></highlight>, such as a checkbox, radio button, or the like, that allows the user to selectively bypass applying the authentication management system <highlight><bold>8</bold></highlight>. In the event that the selection input <highlight><bold>44</bold></highlight> is selected, the password management system <highlight><bold>8</bold></highlight> is de-activated for that login operation and the user enters the user ID and password directly. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> With reference particularly now to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, in response to a user authentication request dialog display <highlight><bold>100</bold></highlight>, the method accepts a user&apos;s response in at least three ways. First, the user can enter the appropriate password directly in a step <highlight><bold>102</bold></highlight>, thereby essentially bypassing the authentication management system <highlight><bold>8</bold></highlight>. In this case, the entered information, e.g. user ID token and password, are transmitted in unmodified form <highlight><bold>104</bold></highlight> across the network <highlight><bold>12</bold></highlight> to the secure service provider <highlight><bold>10</bold></highlight> in the usual manner. Preferably, measures are taken to ensure that the meta-password, or a slightly mistyped version thereof, is not accidentally transmitted. In the case of an HTTP protocol login, the selection input <highlight><bold>44</bold></highlight> is advantageously used to direct the user to positively indicate that the appropriate password was entered directly. Another preferred check is to verify that both the entered password and the entered user ID are different from the corresponding meta-password and a master user ID. In this way, a mistyping of both inputs is required to inadvertently transmit the mistyped meta-password. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> Second, the user can enter the meta-password corresponding to the user in a step <highlight><bold>106</bold></highlight>. The meta-password is a universal password for the user within the scope of the user authentication system <highlight><bold>8</bold></highlight>. The meta-password is preferably assigned to the user by the information technology organization which maintains the user authentication system <highlight><bold>8</bold></highlight> following the usual organizational security precautions for such password establishment. It will be appreciated that, for security reasons, the meta-password is preferably not stored in the repository <highlight><bold>34</bold></highlight>. Preferably, the meta-password is stored only at a single centralized secure location (not shown) on the network from which the software hook <highlight><bold>30</bold></highlight> can obtain the meta-password, preferably through an initial log-in process involving user entry of the meta-password. In an alternate embodiment, the hook <highlight><bold>30</bold></highlight> can send the user-entered meta-password to a secure network site which returns an indication of the validity of the meta-password. Alternatively, the meta-password can be stored integrally with the software hook <highlight><bold>30</bold></highlight>, in which case however user access is limited to only those devices which have the meta-password loaded. The meta-password can also be stored in encoded form with the repository <highlight><bold>34</bold></highlight>, although in this case overall security of the repository <highlight><bold>34</bold></highlight> will depend on the quality of the meta-password encoding scheme. In yet another contemplated embodiment, the system <highlight><bold>8</bold></highlight> requires the user to enter the meta-password each time it is needed (e.g., for encoding or decoding a password, or for updating the repository <highlight><bold>34</bold></highlight>), without the need for a subsequent verification step. The verification of the meta-password in this embodiment is inherent in the success or failure of the decoding of encoded passwords stored in the repository <highlight><bold>34</bold></highlight>. Other means for establishing the meta-password are also contemplated and fall within the scope of the invention. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The user authentication system <highlight><bold>8</bold></highlight> preferably supports multiple users. Each user has an associated personal repository such as the repository <highlight><bold>34</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The repository <highlight><bold>36</bold></highlight> can be associated with the appropriate user via the meta-password. Alternatively, each user can additionally be assigned a master user ID token through which a user is associated with a personal repository <highlight><bold>34</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> Conditional upon the software hook or browser plug-in <highlight><bold>30</bold></highlight> detecting the meta-password in the user authentication response, the hook <highlight><bold>30</bold></highlight> intercepts and forwards the authentication response to the authentication management system processor <highlight><bold>32</bold></highlight>. Alternatively, the software hook <highlight><bold>30</bold></highlight> can compare every transmitted user authentication response against the address table <highlight><bold>36</bold></highlight> to identify and intercept authentication responses directed toward addresses which are included in the repository <highlight><bold>34</bold></highlight>. However the identification is made, the processor <highlight><bold>32</bold></highlight> responds by substituting an appropriate password from the repository <highlight><bold>34</bold></highlight> in a step <highlight><bold>108</bold></highlight>, conditional upon the network address being located in the address table <highlight><bold>36</bold></highlight>. Preferably, a corresponding user ID token is also substituted for the user ID token entered by the user in the user authentication response. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> With continuing reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference> and with further reference now to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the preferred method for responding to a user authentication response containing the associated user&apos;s meta-password is described in greater detail. Upon receipt by the interfacing program <highlight><bold>18</bold></highlight> of a user authentication request <highlight><bold>200</bold></highlight> from a secure service provider <highlight><bold>10</bold></highlight> via the network <highlight><bold>12</bold></highlight>, the interfacing program <highlight><bold>18</bold></highlight> responds in the usual way, and receives an authentication response from the user in a step <highlight><bold>202</bold></highlight>. The software hook <highlight><bold>30</bold></highlight> intercepts and examines the response in a decision step <highlight><bold>204</bold></highlight>. If the user&apos;s meta-password is not identified, then the software hook <highlight><bold>30</bold></highlight> returns to a monitoring mode, and the client device <highlight><bold>14</bold></highlight> transmits the user authentication response in unmodified form in a step <highlight><bold>206</bold></highlight>. As mentioned previously, in the case of an HTTP protocol login, the selection input <highlight><bold>44</bold></highlight> advantageously also should be set by the user to positively indicate that the appropriate password was entered directly and should be transmitted in unmodified form. In the case of a non-standard login protocol, additional verifications are preferably performed to avoid inadvertently transmitting the meta-password directly, such as additionally checking the input user ID against the master user ID to ensure that they are different. In this way, a mistyping of both inputs is required to inadvertently transmit the mistyped meta-password. In yet another embodiment, the password management plug-in <highlight><bold>30</bold></highlight> displays a confirmation box through which the user must confirm direct transmission of the input password before said transmission actually takes place. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> If the software hook <highlight><bold>30</bold></highlight> identifies the meta-password in the user authentication response, the software hook <highlight><bold>30</bold></highlight> identifies the network address to which the response is to be sent in a step <highlight><bold>208</bold></highlight> and forwards the network address information to the processor <highlight><bold>32</bold></highlight>. The processor <highlight><bold>32</bold></highlight> searches the address table <highlight><bold>36</bold></highlight> of the repository <highlight><bold>34</bold></highlight> in a step <highlight><bold>210</bold></highlight>, and extracts the corresponding handle if the address is located. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> A decision step <highlight><bold>212</bold></highlight> controls operational flow based upon whether a corresponding handle is located in the step <highlight><bold>210</bold></highlight>. If a handle is found, the encoded password is obtained from the handle table <highlight><bold>38</bold></highlight>. This password is preferably encoded for security purposes as will be discussed in greater detail below. The encoded password is decoded in a step <highlight><bold>214</bold></highlight> to obtain the password under which the user is registered with the service provider <highlight><bold>10</bold></highlight>. Preferably, a user ID token is also extracted from the handle table <highlight><bold>38</bold></highlight>. The user ID token is not encoded in the handle table <highlight><bold>38</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. However, the user ID token can optionally also be encoded to provide additional security. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> The decoded password is substituted for the meta-password in the user authentication response in a step <highlight><bold>216</bold></highlight>, and preferably the extracted user ID token is substituted for the entered user ID in the response in a step <highlight><bold>218</bold></highlight>. The substituting steps <highlight><bold>216</bold></highlight>, <highlight><bold>218</bold></highlight> preferably identify the appropriate substitutions in the user authentication response because the response is in a standardized, e.g. HTTP protocol, user authentication response format. The appropriate substitutions also can be identified by searching the response for certain keywords, such as &ldquo;USER ID&rdquo;. Alternatively, or in the case of a non-standard authentication form where the automated searching fails to locate the appropriate substitutions, a dialog box (not shown) can be displayed on the display <highlight><bold>20</bold></highlight>. The dialog box preferably shows the extracted user ID token and the decoded password, where each character of the decoded password is displayed as an asterisk (&ldquo;password1&rdquo; displays as &ldquo;********&rdquo;, for example). Such asterisk display is well known to those of ordinary skill in the art, and is commonly used for password display. Of course, other substitute characters can be used instead of asterisks. The user then transfers the user ID and password information displayed in the dialog box into the user authentication form in the usual manner, e.g. by cut-and-paste operations. After the substituting, the modified response is transmitted in a step <highlight><bold>220</bold></highlight> in the usual manner, e.g. by the web browser <highlight><bold>18</bold></highlight> via the network <highlight><bold>12</bold></highlight>. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> With reference again to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, if at the decision step <highlight><bold>212</bold></highlight> it is recognized that the handle was not found, i.e. the network address is not in the address table <highlight><bold>36</bold></highlight>, the method preferably displays an appropriate dialog box which allows the user to select a handle in a step <highlight><bold>222</bold></highlight>. Equivalently, with reference back to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, upon recognition that the address is not in the repository in a step <highlight><bold>110</bold></highlight>, a handle select dialog is displayed in a step <highlight><bold>112</bold></highlight>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> With reference now to <cross-reference target="DRAWINGS">FIG. 4</cross-reference> and with continued reference to <cross-reference target="DRAWINGS">FIGS. 1 and 2</cross-reference>, the select a handle step <highlight><bold>112</bold></highlight> preferably generates a handle selection dialog box <highlight><bold>300</bold></highlight>. In the handle selection dialog box <highlight><bold>300</bold></highlight> the term &ldquo;Service ID&rdquo; is preferably substituted for &ldquo;handle&rdquo; as being more intuitive for the user. The handle selection dialog box <highlight><bold>300</bold></highlight> provides the user with a convenient interface for associating the network address, for which no entry exists in the address table <highlight><bold>36</bold></highlight>, with an appropriate handle. In an address line <highlight><bold>302</bold></highlight> of the handle selection dialog box <highlight><bold>300</bold></highlight>, the unassigned network address, e.g., &ldquo;www.mycompany.com/returns/login.asp&rdquo;, is displayed. The address to <highlight><bold>302</bold></highlight> which the authentication response is to be sent is preferably completed on line automatically, i.e. the user does not need to enter this information, when the handle selection dialog box <highlight><bold>300</bold></highlight> is accessed in the step <highlight><bold>112</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. Using any convenient user input dialog, e.g. a drop down list <highlight><bold>304</bold></highlight>, the user is prompted to associate the new, unlisted address with an existing handle. The existing handles &ldquo;My Company&rdquo; <highlight><bold>306</bold></highlight>, &ldquo;Intranet&rdquo; <highlight><bold>308</bold></highlight>, and &ldquo;SearchEngine&rdquo; <highlight><bold>310</bold></highlight> are included in the list <highlight><bold>304</bold></highlight> and thus are available for selection. It is to be appreciated that the handle list <highlight><bold>304</bold></highlight> is generated from the handle table <highlight><bold>38</bold></highlight> of the repository <highlight><bold>34</bold></highlight>. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> Conditional upon the user selecting an existing handle, e.g. the &ldquo;My Company&rdquo; handle, the processor <highlight><bold>32</bold></highlight> updates the address table <highlight><bold>36</bold></highlight> to include the new address and the &ldquo;My Company&rdquo; handle association in a step <highlight><bold>114</bold></highlight>. Preferably, the processor <highlight><bold>32</bold></highlight> then proceeds to modify and transmit an authorization response in a step <highlight><bold>116</bold></highlight> essentially according to the steps <highlight><bold>214</bold></highlight> and following as illustrated in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. Since the address table was updated at step <highlight><bold>114</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, any future user authorization response which is directed to this network address will have the password and user ID token modifications performed automatically according to the full process flow illustrated in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> Of course, at the step <highlight><bold>112</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> where the user is prompted to identify an appropriate handle, it may be the case that the network address corresponds to a new secure service provider <highlight><bold>10</bold></highlight> for which no appropriate handle yet exists in the handle table <highlight><bold>38</bold></highlight>. It will be recognized that the handle selection list <highlight><bold>304</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> includes an entry &ldquo;&lt;Add Service ID&gt;&rdquo; <highlight><bold>312</bold></highlight> to accommodate this situation. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Selection of the &ldquo;&lt;Add Service ID&gt;&rdquo; option <highlight><bold>312</bold></highlight> causes a handle management dialog box to be displayed in a step <highlight><bold>118</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. The handle management dialog preferably can also be accessed directly by the user in a step <highlight><bold>120</bold></highlight> prior to submitting the user authentication response, i.e. prior to steps <highlight><bold>102</bold></highlight> or <highlight><bold>106</bold></highlight>. Such requesting step <highlight><bold>120</bold></highlight> advantageously is through a drop-down menu option (not shown) integrated into the menu system of the associated web browser <highlight><bold>18</bold></highlight>. It will be appreciated that such a drop-down menu option advantageously is accessible at any time the browser <highlight><bold>18</bold></highlight> is active, independent of whether or not a user authentication dialog is present. Similarly, the handle selection dialog box <highlight><bold>300</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is advantageously accessible from the drop down menu so that additional network addresses can be associated with a handle without first contacting the network address. The handle selection dialog box <highlight><bold>300</bold></highlight> preferably also includes a &ldquo;Remove Address Association&rdquo; button <highlight><bold>314</bold></highlight> so that the user can remove outdated address associations from the Addresses Table <highlight><bold>36</bold></highlight> by accessing the handle selection dialog box <highlight><bold>300</bold></highlight> through the drop-down menu of the associated web browser <highlight><bold>18</bold></highlight>. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> With continuing reference to <cross-reference target="DRAWINGS">FIGS. 1 and 2</cross-reference>, and with further reference now to <cross-reference target="DRAWINGS">FIG. 5, a</cross-reference> preferred handle management dialog box <highlight><bold>400</bold></highlight> is described. Once again, the handle management dialog box <highlight><bold>400</bold></highlight> preferably uses the more user-friendly term &ldquo;service ID&rdquo; in substitution for &ldquo;handle&rdquo;. The handle management dialog box <highlight><bold>400</bold></highlight> allows the user to directly manage the handles of the repository <highlight><bold>34</bold></highlight>. User operations achievable through the handle management dialog box <highlight><bold>400</bold></highlight> preferably include adding new handles, removing existing and outdated handles, and updating password and user ID token information. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> The handle management dialog box <highlight><bold>400</bold></highlight> displays information including the handle <highlight><bold>402</bold></highlight> (labeled as &ldquo;Service ID&rdquo;), the master user ID token <highlight><bold>404</bold></highlight>, the meta-password <highlight><bold>406</bold></highlight> (preferably displayed in asterisked format), the actual (or &ldquo;raw&rdquo;) user ID token <highlight><bold>408</bold></highlight> corresponding to the handle identified in input <highlight><bold>402</bold></highlight>, and the actual (or &ldquo;raw&rdquo;) password <highlight><bold>410</bold></highlight> corresponding to the handle identified in input <highlight><bold>402</bold></highlight> (again, preferably displayed in asterisked format). It will be appreciated that these entries may not be completely filled-in. For example, if the handle management dialog box <highlight><bold>400</bold></highlight> is accessed through the menu option step <highlight><bold>120</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, no handle is initially selected and so the lines for service ID <highlight><bold>402</bold></highlight>, user ID <highlight><bold>408</bold></highlight>, and password <highlight><bold>410</bold></highlight> are initially blank. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> In one preferred embodiment, the user is always required to enter at least the meta-password in the line <highlight><bold>406</bold></highlight> for security purposes, and so this line is preferably initially blank every time the handle management dialog box <highlight><bold>400</bold></highlight> is displayed. The master user ID <highlight><bold>404</bold></highlight> is preferably used to associate a particular repository <highlight><bold>34</bold></highlight> with a particular user, so that the authentication management system <highlight><bold>8</bold></highlight> can be used by multiple users, either simultaneously or in succession. This embodiment permits multiple users to use the same user interface <highlight><bold>16</bold></highlight> in a secure manner wherein each user must supply his or her master user ID and meta-password every time a secure transaction involving the user authentication system <highlight><bold>8</bold></highlight> is performed. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> In another preferred embodiment, the user is already logged into the user authentication system <highlight><bold>8</bold></highlight> and the user interface <highlight><bold>16</bold></highlight> is itself considered secure. In this embodiment, there is no need for the user to supply the master user ID and meta-password in the handle management dialog box <highlight><bold>400</bold></highlight> and so the user dialog inputs <highlight><bold>404</bold></highlight>, <highlight><bold>406</bold></highlight> are optionally removed from the dialog box <highlight><bold>400</bold></highlight>. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> With continuing reference to <cross-reference target="DRAWINGS">FIGS. 1, 2</cross-reference>, and <highlight><bold>5</bold></highlight>, the handle management dialog box <highlight><bold>400</bold></highlight> is used for updating an existing handle or for adding a new handle. The user preferably selects the existing handle using the drop-down list arrow <highlight><bold>412</bold></highlight> of the service ID input <highlight><bold>402</bold></highlight>. Upon selection and correct entry of the master user ID <highlight><bold>404</bold></highlight> and the meta-password <highlight><bold>406</bold></highlight> (if required), the user ID <highlight><bold>408</bold></highlight> and password <highlight><bold>410</bold></highlight> lines are completed with the appropriate contents retrieved from the handle table <highlight><bold>38</bold></highlight> of the repository <highlight><bold>34</bold></highlight> and decoded by the processor <highlight><bold>32</bold></highlight>. Preferably, the password is displayed with asterisks as shown. Alternatively, a new handle can be added by typing the new handle into the service ID input <highlight><bold>402</bold></highlight>. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Updating of the user ID is preferably performed manually, by editing the user ID field <highlight><bold>408</bold></highlight>. Optionally, the password <highlight><bold>410</bold></highlight> is also be updated by editing the new password field <highlight><bold>414</bold></highlight>, which once again is advantageously displayed in a format of asterisks. Preferably, however, the password updating is automated using the &ldquo;Create Password&rdquo; button <highlight><bold>422</bold></highlight>, as will be described below. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> In order to create a password, the password rules preferably are first identified. These rules provide restrictions and bounds on the allowable format (e.g., length, content, et cetera) of the password. In the illustrated embodiment, a password rules dialog box is accessed by selecting the &ldquo;Password Rules&rdquo; button <highlight><bold>420</bold></highlight> of the handle management dialog box <highlight><bold>400</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> With reference now to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, an exemplary password rules dialog box <highlight><bold>500</bold></highlight> accessed by operating the &ldquo;Password Rules&rdquo; button <highlight><bold>420</bold></highlight> is illustrated. Appropriate password rules are established by the user through check box inputs, numeric inputs, and the like. In the exemplary <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, the password rules include: limiting passwords to digits <highlight><bold>502</bold></highlight>; limiting passwords to letters <highlight><bold>504</bold></highlight>; starting the password with a letter <highlight><bold>506</bold></highlight>; generating a case-sensitive password (e.g., &ldquo;A&rdquo; is not equal to &ldquo;a&rdquo;) <highlight><bold>508</bold></highlight>; specifying a minimum password length <highlight><bold>510</bold></highlight>; specifying a maximum password length <highlight><bold>512</bold></highlight>; specifying a minimum number of letters <highlight><bold>514</bold></highlight>; and specifying a minimum number of digits <highlight><bold>516</bold></highlight>. Of course, this list is only exemplary, and fewer, additional or different password rules may be incorporated as desired. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> With continuing reference to <cross-reference target="DRAWINGS">FIG. 6</cross-reference> and with further reference again to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, upon exiting the password rules dialog box <highlight><bold>500</bold></highlight>, the updated password rules are stored in the handles table <highlight><bold>38</bold></highlight>, e.g. under a password rules column. The password rules are stored in any suitable format. In the exemplary handles table <highlight><bold>38</bold></highlight>, mnemonic tokens are used: &ldquo;LETL&rdquo; represents the minimum (i.e., least) number of letters, &ldquo;SIZM&rdquo; represents the maximum password length (i.e., size), and so forth. Of course, various other password rules encoding schemes may alternatively be used. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> The password creation process will now be described with reference to <cross-reference target="DRAWINGS">FIGS. 1, 2</cross-reference>, and <highlight><bold>5</bold></highlight>. After setting up the password rules, the create password option is selected by the user in a step <highlight><bold>122</bold></highlight> by operating the &ldquo;Create Password&rdquo; button <highlight><bold>422</bold></highlight>. The create password algorithm is implemented by the processor <highlight><bold>32</bold></highlight> in a step <highlight><bold>124</bold></highlight>. Preferably, this algorithm receives at least a system clock input <highlight><bold>126</bold></highlight>, a password rules input <highlight><bold>128</bold></highlight>, and the meta-password <highlight><bold>129</bold></highlight>. The system clock input <highlight><bold>126</bold></highlight> is the instantaneous value of a timer or clock of the type virtually universally maintained by computing devices and available for use. In one embodiment, the least significant few digits of the clock are used as the seed value input to a pseudo-random number generator to generate a pseudo-random number sequence. A wide variety of pseudo-random number generators are known in the art and may be used equally. In that embodiment, the least significant few digits used as the seed value are not stored as part of a time stamp for later use to determine the date for automated updates of the password. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> In a preferred embodiment, a combination of the meta-password with the least significant few digits of the clock is used as the seed value input to the pseudo-random random number generator to generate the pseudo-random number sequence. In this embodiment, the clock time value can be stored directly as desired for later use as the time stamp to trigger automated updates. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> The password rules <highlight><bold>128</bold></highlight> provide bounds on the allowable format (e.g., length, content, et cetera) of the password as discussed previously with particular reference to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. The password rules <highlight><bold>128</bold></highlight> are extracted from the password rules column of the handles table <highlight><bold>38</bold></highlight>. In both embodiments described above, the password is preferably created using a character generator based on the pseudo-random number sequence generated. Such generators are well known to those of ordinary skill in the art, and need not be described here. Once generated, the password created is displayed in the new password line <highlight><bold>414</bold></highlight> in a step <highlight><bold>130</bold></highlight>, preferably in asterisked format. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> The actual updating of the password on the secure service provider <highlight><bold>10</bold></highlight> is accomplished using one of two methods, dependent upon the standardization of the secure service provider <highlight><bold>10</bold></highlight>. In an automated method a standard, e.g. HTTP protocol, password updating method is invoked. For this method, the user provides the information necessary to update the password in the password rules dialog box <highlight><bold>500</bold></highlight>. In the exemplary <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, this information includes a password update network address <highlight><bold>520</bold></highlight> which is used for updating the password. Conditional upon the secure service provider including a standard password updating protocol and conditional upon the appropriate information being stored in the handles table <highlight><bold>38</bold></highlight>, e.g. under a password update column, the password updating is effectuated by selecting the &ldquo;Update Password&rdquo; button <highlight><bold>424</bold></highlight>. Upon confirmation of successful updating of the password at the secure service provider <highlight><bold>10</bold></highlight> (said confirmation typically being included in the standard password updating protocol) the processor <highlight><bold>32</bold></highlight> preferably immediately updates the password information in the handles table <highlight><bold>38</bold></highlight>. The stored password is preferably encoded using the meta-password as an encoding key. In this manner, theft of the repository <highlight><bold>34</bold></highlight> without simultaneous knowledge of the meta-password will not enable unauthorized use of the passwords, since the passwords in the repository are encoded. While the least significant digits of the system clock are used in the password generation process, the date is preferably used for automated updates to be described later. Preferably, a failure in the confirmation of the automatic password updating will result in an appropriate failure message (not shown) being displayed to the user, and no updating of the handles table <highlight><bold>38</bold></highlight>. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> Conditional upon the standard password updating being activated and functional as discussed above, the user selectively sets up an automated schedule for password updating. As shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, the user selects the automatic updating via a check box <highlight><bold>522</bold></highlight> or other convenient indicating means, and selects the desired updating schedule using a list box <highlight><bold>524</bold></highlight> or other convenient selection means. After initial set up, the password updating as described above automatically occurs at the scheduled intervals using the standard, e.g. HTTP, protocol. Because the password creation is automatic and the user enters only the meta-password in response to a user authentication request, such periodic updating is completely transparent to the user. It will be appreciated that the Timedate column of the handles table <highlight><bold>38</bold></highlight> is advantageously used to determine the elapsed time since the last password update. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> Conditional upon the secure service provider <highlight><bold>10</bold></highlight> not implementing a standard password updating protocol, the updating is preferably performed semimanually. For example, the user selectively cuts-and-pastes the old password stored in the password line <highlight><bold>410</bold></highlight> and the new password stored on line <highlight><bold>414</bold></highlight> into appropriate inputs of a password updating dialog box displayed by the browser <highlight><bold>18</bold></highlight>, and transmits the response via the network <highlight><bold>12</bold></highlight> in the usual way. The user then operates the &ldquo;Update Password&rdquo; button <highlight><bold>424</bold></highlight> to update the password information in the handles table. Preferably, a message is displayed to the user (not shown) indicating that an automatic updating of the password at the secure service provider was not performed, so that the user is aware that a semi-manual updating will be required. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> It will be recognized that in the case of automatic password updating, having separate buttons for &ldquo;Create Password&rdquo; <highlight><bold>422</bold></highlight> and for &ldquo;Update Password&rdquo; <highlight><bold>424</bold></highlight> is redundant, and the two buttons <highlight><bold>422</bold></highlight>, <highlight><bold>424</bold></highlight> are advantageously replaced by a single control (not shown) that initiates both the password creation and the subsequent updating. In cases where semi-manual password updating is necessary, e.g. for non-HTTP protocol logins, the two separate inputs <highlight><bold>422</bold></highlight>, <highlight><bold>424</bold></highlight> advantageously allow the user to first generate a password that is displayed in the New Password window after operating the &ldquo;Create Password&rdquo; button <highlight><bold>422</bold></highlight>, followed by the actual updating of the Handles Table <highlight><bold>38</bold></highlight> via the &ldquo;Update Password&rdquo; button <highlight><bold>424</bold></highlight> after successful manual updating of the login information at the service provider <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> In addition to the password management operations discussed above, the handle management dialog box <highlight><bold>400</bold></highlight> provides additional options for adding, updating, and deleting handles, i.e. service ID&apos;s. With continuing reference to <cross-reference target="DRAWINGS">FIGS. 1, 2</cross-reference>, and <highlight><bold>5</bold></highlight>, selection of the &ldquo;Save Service ID&rdquo; button <highlight><bold>426</bold></highlight> initiates an updating of the handle information. The password is encoded in a step <highlight><bold>132</bold></highlight>, using the meta-password as an encoding key as usual. The handle information including the handle, user ID, encoded password, and password rules are stored into the handles table <highlight><bold>38</bold></highlight> in a step <highlight><bold>134</bold></highlight>. In the case of a new handle, this step will create a new row in the handles table <highlight><bold>38</bold></highlight>. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> Selection of the &ldquo;Delete Service ID&rdquo; button <highlight><bold>428</bold></highlight> initiates a removal of the handle indicated in line <highlight><bold>402</bold></highlight> of the handle management dialog box <highlight><bold>400</bold></highlight>. The row in the handles table <highlight><bold>38</bold></highlight> corresponding to the handle along with any addresses in the address table <highlight><bold>36</bold></highlight> linked to that handle are deleted in a step <highlight><bold>136</bold></highlight>. Preferably, the user is prompted for confirmation before any delete operation is acted upon. Such a prompt preferably displays the addresses which will be removed, if such addresses exist. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> With reference now to <cross-reference target="DRAWINGS">FIG. 7, a</cross-reference> preferred embodiment for changing the meta-password is described. In a step <highlight><bold>602</bold></highlight> a new meta-password is received. Depending upon the configuration of the user authentication system <highlight><bold>8</bold></highlight>, the new meta-password can be supplied by the user, or by an authorized information technology organization or person. After the new meta-password is received, the passwords in the handles table <highlight><bold>38</bold></highlight> are decoded using the old meta-password <highlight><bold>604</bold></highlight>, and encoded using the new meta-password <highlight><bold>606</bold></highlight>. In the case where encoded user ID&apos;s are also stored in the handles table <highlight><bold>38</bold></highlight>, these are also decoded and encoded using the old and new passwords, respectively, in steps <highlight><bold>608</bold></highlight>, <highlight><bold>610</bold></highlight>. The repository is updated with the newly encoded information in a step <highlight><bold>612</bold></highlight>, and the new meta-password is registered in a step <highlight><bold>614</bold></highlight>, i.e. the new meta-password replaces the old meta-password wherever the meta-password is stored. As discussed previously, a number of possible locations for storing the meta-password are contemplated. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> In the process of updating the meta-password, it is essential that the steps <highlight><bold>604</bold></highlight>, <highlight><bold>606</bold></highlight>, <highlight><bold>608</bold></highlight>, <highlight><bold>610</bold></highlight>, <highlight><bold>612</bold></highlight>, and <highlight><bold>614</bold></highlight> have rollback capability <highlight><bold>616</bold></highlight>. As described above, the repository and the meta-password can be managed separately by different management systems as desired. Without comprehensive rollback capability, the user risks losing a portion or all of the password information stored in the repository as well as losing meta-password update information wherever the meta-password is stored. Since this information is not generally known to the user, it could be irrevocably lost. In one preferred embodiment in which the repository and the meta-password is stored on a relational database, the rollback capability of the relational database can be used for the rollback step <highlight><bold>616</bold></highlight>. Alternatively, in other repository embodiments the unmodified repository can be stored as a backup file until the updating is complete and the new meta-password is registered <highlight><bold>614</bold></highlight>. Of course, in this case it is important to ensure that the backup file is deleted, preferably with file wiping to ensure that the deleted backup file is unrecoverable. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> The invention has been described with reference to the preferred embodiments. Obviously, modifications and alterations will occur to others upon reading and understanding the preceding detailed description. It is intended that the invention be construed as including all such modifications and alterations insofar as they come within the scope of the appended claims or the equivalents thereof. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">Having thus described the preferred embodiments, the invention is now claimed to be: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for management of user authentication information, comprising: 
<claim-text>receiving a first meta-password from an associated user; </claim-text>
<claim-text>maintaining a repository including a list of network addresses and associated handles, each handle having an associated encoded password; </claim-text>
<claim-text>intercepting a user authentication response sent by the associated user; </claim-text>
<claim-text>identifying a network address to which the authentication response is directed; </claim-text>
<claim-text>generating a modified authentication response based upon the user authentication response and based upon contents of the repository corresponding to said network address; and </claim-text>
<claim-text>transmitting the modified authentication response to the identified network address via the network. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The management method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein generating a modified authentication response further includes: 
<claim-text>searching for the identified network address in the repository; </claim-text>
<claim-text>identifying a handle corresponding to the network address based on the searching step; </claim-text>
<claim-text>decoding the encoded password associated with the identified handle using the first meta-password as a decoding key; and </claim-text>
<claim-text>generating the modified authentication response by substituting the decoded password for the first meta-password in the authentication response. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The management method according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> further including: 
<claim-text>receiving a second meta-password from the associated user together with a request for meta-password update; </claim-text>
<claim-text>using said first meta-password as a key, decoding each of said passwords associated with said list of network addresses as decoded passwords; </claim-text>
<claim-text>using said second meta-password as a key, encoding each of said decoded passwords as re-encoded passwords; and </claim-text>
<claim-text>storing the re-encoded passwords in said registry. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The management method according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference> further including registering said second meta-password in an associated storage location. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The management method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein generating a modified authentication response further includes: 
<claim-text>receiving a handle selection from the associated user, said handle selection being selected from the handles contained in the repository; </claim-text>
<claim-text>entering the identified network address into the repository; </claim-text>
<claim-text>in the repository, associating the identified network address with the received handle selection; </claim-text>
<claim-text>decoding the encoded password associated with the received handle using the first meta-password as a decoding key; and </claim-text>
<claim-text>generating the modified authentication response by combining the decoded password with the authentication response. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The management method according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein receiving a handle selection from the associated user further includes: 
<claim-text>displaying a handle selection dialog box including displaying the handles stored in the repository; and </claim-text>
<claim-text>receiving a handle selection from the associated user via the selection dialog box. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The management method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further including: 
<claim-text>searching for the identified network address in the repository; </claim-text>
<claim-text>recognizing, based upon the searching step, that the network address is not associated with a handle in the repository; and </claim-text>
<claim-text>when the network address is not associated with the handle in the repository, displaying a handle selection dialog box. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The management method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further including: 
<claim-text>accessing a handle management dialog box; </claim-text>
<claim-text>in the handle management dialog box, receiving a new handle from the associated user, said new handle not being included in the repository; </claim-text>
<claim-text>establishing a collection of password rules; </claim-text>
<claim-text>generating a password consistent with the established password rules; </claim-text>
<claim-text>encoding the generated password using the first meta-password as an encoding key; </claim-text>
<claim-text>storing the network address in the repository; </claim-text>
<claim-text>in the repository, associating the network address with the new handle; and </claim-text>
<claim-text>in the repository, associating the encoded password with the new handle. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The management method according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein generating a password includes generating a password using a pseudo-random number generator. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The management method according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein generating a password further includes: 
<claim-text>obtaining a system time; </claim-text>
<claim-text>mathematically combining the system time and the meta-password to obtain a seed value; </claim-text>
<claim-text>applying the seed value to an operation of the pseudo-random number generator to generate a pseudo-random number sequence; and </claim-text>
<claim-text>using the pseudo-random number sequence to generate a character sequence as said password. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The management method according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein generating a password using a pseudo-random number generator further includes: 
<claim-text>obtaining a system time; </claim-text>
<claim-text>applying the system time as a seed to an operation of the pseudo-random number generator to generate a pseudo-random number sequence; and, </claim-text>
<claim-text>using the pseudo-random number sequence to generate a character sequence. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The management method according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein establishing a collection of password rules includes receiving a collection of password rules from the associated user. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The management method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further including: 
<claim-text>establishing a collection of password rules for a first handle in the repository; </claim-text>
<claim-text>generating a password consistent with the collection of password rules; </claim-text>
<claim-text>updating the user password to correspond with the generated password on a secure service provider with which the first handle is associated; </claim-text>
<claim-text>encoding the generated password using the first meta-password as an encoding key; and </claim-text>
<claim-text>associating, in the repository, the encoded password with the first handle. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The management method according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, further including: 
<claim-text>receiving an update period for the first handle from the associated user; </claim-text>
<claim-text>associating the update period with the first handle; and </claim-text>
<claim-text>repeating, coincident with a recurrence of the update period, the generating, the updating, the encoding, and the associating. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The management method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein generating a modified authentication response further includes: 
<claim-text>verifying that the authentication response includes the first meta-password; and </claim-text>
<claim-text>conditional upon the verifying step not locating the first meta-password in the authentication response, generating a modified authentication response which includes substantially no changes relative to the authentication response. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A system for managing user authentication information, the system operating in conjunction with an associated interfacing program which interfaces an associated user with a plurality of associated secure services, the system comprising: 
<claim-text>a repository containing at least an address table wherein each address has an associated handle and each handle has an associated encoded password; </claim-text>
<claim-text>a software hook by which an authentication response sent by the interfacing program is intercepted; and </claim-text>
<claim-text>a processor for processing the intercepted authentication response by combining a password extracted from the repository with the intercepted authentication response, said processing being selectively performed upon receipt from the user of a meta-password associated with the repository. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the repository resides on one of: an associated client device, an associated proxy server, an associated local area network, and an associated security server having an Internet protocol (IP) address. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the repository is disposed at an associated database service. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, further comprising: 
<claim-text>a maintenance processor for enabling user maintenance of the address table. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, further comprising: 
<claim-text>a password generator for generating a password based upon a pseudo-random quantity; and </claim-text>
<claim-text>a password encoder for encoding a password using the meta-password as an encoding key. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the pseudo-random quantity is constructed from the first meta-password and a system clock value. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein: 
<claim-text>the repository includes a handle table for associating each handle with an encoded password. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the handle table includes a user ID associated with each handle. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the handle table includes a collection of password rules associated with each handle. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. An article of manufacture comprising a program storage medium readable by a computer and embodying one or more instructions executable by the computer for performing a method for management of user authentication information, comprising: 
<claim-text>receiving a first meta-password from an associated user; </claim-text>
<claim-text>maintaining a repository including a list of network addresses and associated handles, each handle having an associated encoded password; </claim-text>
<claim-text>intercepting a user authentication response sent by the associated user; </claim-text>
<claim-text>identifying a network address to which the authentication response is directed; </claim-text>
<claim-text>generating a modified authentication response based upon the user authentication response and based upon contents of the repository corresponding to said network address; and </claim-text>
<claim-text>transmitting the modified authentication response to the identified network address via the network. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The article of manufacture according to <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein generating a modified authentication response further includes: 
<claim-text>searching for the identified network address in the repository; </claim-text>
<claim-text>identifying a handle corresponding to the network address based on the searching step; </claim-text>
<claim-text>decoding the encoded password associated with the identified handle using the first meta-password as a decoding key; and </claim-text>
<claim-text>generating the modified authentication response by substituting the decoded password for the first meta-password in the authentication response. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The article of manufacture according to <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> further including: 
<claim-text>receiving a second meta-password from the associated user together with a request for meta-password update; </claim-text>
<claim-text>using said first meta-password as a key, decoding each of said passwords associated with said list of network addresses as decoded passwords; </claim-text>
<claim-text>using said second meta-password as a key, encoding each of said decoded passwords as re-encoded passwords; and </claim-text>
<claim-text>storing the re-encoded passwords in said registry. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The article of manufacture according to <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference> further including registering said second meta-password in an associated storage location. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The article of manufacture according to <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein generating a modified authentication response further includes: 
<claim-text>receiving a handle selection from the associated user, said handle selection being selected from the handles contained in the repository; </claim-text>
<claim-text>entering the identified network address into the repository; </claim-text>
<claim-text>in the repository, associating the identified network address with the received handle selection; </claim-text>
<claim-text>decoding the encoded password associated with the received handle using the first meta-password as a decoding key; and </claim-text>
<claim-text>generating the modified authentication response by combining the decoded password with the authentication response. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The article of manufacture according to <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, wherein receiving a handle selection from the associated user further includes: 
<claim-text>displaying a handle selection dialog box including displaying the handles stored in the repository; and </claim-text>
<claim-text>receiving a handle selection from the associated user via the selection dialog box. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The article of manufacture according to <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, further including: 
<claim-text>searching for the identified network address in the repository; </claim-text>
<claim-text>recognizing, based upon the searching step, that the network address is not associated with a handle in the repository; and </claim-text>
<claim-text>when the network address is not associated with the handle in the repository, displaying a handle selection dialog box. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The article of manufacture according to <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, further including: 
<claim-text>accessing a handle management dialog box; </claim-text>
<claim-text>in the handle management dialog box, receiving a new handle from the associated user, said new handle not being included in the repository; </claim-text>
<claim-text>establishing a collection of password rules; </claim-text>
<claim-text>generating a password consistent with the established password rules; </claim-text>
<claim-text>encoding the generated password using the first meta-password as an encoding key; </claim-text>
<claim-text>storing the network address in the repository; </claim-text>
<claim-text>in the repository, associating the network address with the new handle; and </claim-text>
<claim-text>in the repository, associating the encoded password with the new handle. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The article of manufacture according to <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference>, wherein generating a password includes generating a password using a pseudo-random number generator. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The article of manufacture according to <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, wherein generating a password further includes: 
<claim-text>obtaining a system time; </claim-text>
<claim-text>mathematically combining the system time and the meta-password to obtain a seed value; </claim-text>
<claim-text>applying the seed value to an operation of the pseudo-random number generator to generate a pseudo-random number sequence; and </claim-text>
<claim-text>using the pseudo-random number sequence to generate a character sequence as said password. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The article of manufacture according to <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, wherein generating a password using a pseudo-random number generator further includes: 
<claim-text>obtaining a system time; </claim-text>
<claim-text>applying the system time as a seed to an operation of the pseudo-random number generator to generate a pseudo-random number sequence; and, </claim-text>
<claim-text>using the pseudo-random number sequence to generate a character sequence. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The article of manufacture according to <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference>, wherein establishing a collection of password rules includes receiving a collection of password rules from the associated user. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The article of manufacture according to <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, further including: 
<claim-text>establishing a collection of password rules for a first handle in the repository; </claim-text>
<claim-text>generating a password consistent with the collection of password rules; </claim-text>
<claim-text>updating the user password to correspond with the generated password on a secure service provider with which the first handle is associated; </claim-text>
<claim-text>encoding the generated password using the first meta-password as an encoding key; and </claim-text>
<claim-text>associating, in the repository, the encoded password with the first handle. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The article of manufacture according to <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference>, further including: 
<claim-text>receiving an update period for the first handle from the associated user; </claim-text>
<claim-text>associating the update period with the first handle; and </claim-text>
<claim-text>repeating, coincident with a recurrence of the update period, the generating, the updating, the encoding, and the associating. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The article of manufacture according to <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference> wherein generating a modified authentication response further includes: 
<claim-text>verifying that the authentication response includes the first meta-password; and </claim-text>
<claim-text>conditional upon the verifying step not locating the first meta-password in the authentication response, generating a modified authentication response which includes substantially no changes relative to the authentication response.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>3</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005299A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005299A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005299A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005299A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005299A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005299A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005299A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005299A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
