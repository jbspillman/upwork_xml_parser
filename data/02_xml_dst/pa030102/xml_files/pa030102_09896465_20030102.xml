<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002191A1-20030102-D00000.TIF SYSTEM "US20030002191A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002191A1-20030102-D00001.TIF SYSTEM "US20030002191A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002191A1-20030102-D00002.TIF SYSTEM "US20030002191A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002191A1-20030102-D00003.TIF SYSTEM "US20030002191A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002191A1-20030102-D00004.TIF SYSTEM "US20030002191A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002191A1-20030102-D00005.TIF SYSTEM "US20030002191A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002191A1-20030102-D00006.TIF SYSTEM "US20030002191A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002191A1-20030102-D00007.TIF SYSTEM "US20030002191A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002191A1-20030102-D00008.TIF SYSTEM "US20030002191A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002191A1-20030102-D00009.TIF SYSTEM "US20030002191A1-20030102-D00009.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002191</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896465</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G11B005/035</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>360</class>
<subclass>065000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Pad eliminating decoding method and apparatus for a direct access storage device</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>David</given-name>
<middle-name>James</middle-name>
<family-name>Stanek</family-name>
</name>
<residence>
<residence-us>
<city>Rochester</city>
<state>MN</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Weldon</given-name>
<middle-name>Mark</middle-name>
<family-name>Hanson</family-name>
</name>
<residence>
<residence-us>
<city>Rochester</city>
<state>MN</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>International Business Machines Corporation</organization-name>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>IBM Corporation</name-1>
<name-2>Intellectual Property Law Dept. 917</name-2>
<address>
<address-1>3605 Hwy. 52 North</address-1>
<city>Rochester</city>
<state>MN</state>
<postalcode>55901</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">An apparatus and method for transferring data between a read/write transducer coupled to a data channel and a data storage medium eliminates the necessity of a data sector block coding pad field. A data sector is received during a read operation. A disable signal associated with a last block of the data sector is generated. In response to the disable signal, data correction, such as parity correction, to the last block of the data sector is disabled. Data correction is enabled for application to blocks of the data sector other than the last block. Generating the disable signal involves identifying the last block of the data sector, which may be accomplished by detecting a change of state of a read gate input into the data channel or by use of a counter. The apparatus and method of the present invention may be embodied within a data channel of a data storing system, such as a direct access storage system. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates generally to data storage systems and, more particularly, to a system and method for decoding encoded data blocks that eliminates the need for block coding pad bytes in the decoding process. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> A typical data storage system includes a magnetic medium for storing data in magnetic form and a transducer used to write and read magnetic data respectively to and from the medium. A typical disk storage device, for example, includes one or more data storage disks coaxially mounted on a hub of a spindle motor. The spindle motor rotates the disks at speeds typically greater than several thousand revolutions-per-minute (RPM). </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Digital information is typically stored in the form of magnetic transitions on a series of concentric, spaced tracks formatted on the surface of the magnetizable rigid data storage disks. The tracks are generally divided into a number of sectors, with each sector comprising a number of information fields, including fields for storing data, and sector identification and synchronization information, for example. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> An actuator assembly typically includes a plurality of outwardly extending arms with one or more transducers and slider bodies being mounted on flexible suspensions. The slider body lifts the transducer head off the surface of the disk as the rate of spindle motor rotation increases, and causes the head to hover above the disk on an air bearing produced by high speed disk rotation. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> In a typical data storage device, such as a direct access storage device (DASD) or other magnetic or optical storage device, data is typically stored in data sectors. In addition to storing customer data, each data sector typically includes a number of fields that store specific types of information that facilitate recovery of customer data during the readback process. Such fields may, for example, include one or more synchronization fields, an error correction code (ECC) field, a cyclic redundancy code (CRC) field, and a pad field. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Conventional data channel detector implementations typically require additional data or &ldquo;pad&rdquo; to be written to a data sector following writing of the customer data and ECC fields in order to allow the channel&apos;s detector to decode the last bytes of data written to the sector. The purpose of the pad is to provide sample values to the channel&apos;s detector and/or parity circuits for purposes of resolving pending decisions at the end of a data read operation. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In state of the art DASD read/write channels, parity encoding schemes are employed which use large block sizes to improve code rate efficiency. In such schemes, the encoding process does not require a full block of data be written to the disk. In accordance with current decoding processes which employ parity information to correct errors in the block, however, it is a requirement that a full block of data be read prior to transferring customer data. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The use of large block sizes, such as 12 byte blocks in certain designs, limits the granularity of available sector sizes. In cases where the needed number of bytes does not fit a modulus of the block size, for example, an appropriate number of pad bytes are added to meet the requirement. If the pad was not added, a read operation would return erroneous data due to the last block being incomplete and would most likely have incorrect parity information resulting in miscorrected data being transferred out. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> It is appreciated by those skilled in the art that this pad represents wasted space that could otherwise be allocated for storing customer data or other needed information. Inclusion of such pad degrades format efficiency. In current DASD designs, there is no practicable way to completely eliminate the need for pad due to varied data rates, split sectors, and customer requests for non-standard sector sizes, among other reasons. The use of smaller block sizes has several disadvantages as well, including lower code rate efficiency and/or degraded error rate performance, both of which degrade format efficiency. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> There is a need for an improved data storage formatting approach which provides for increased data sector format efficiency and sector size granularity. There exists a further need for such an approach that provides for increased customer data storage capacity, and one that allows designers to implement more efficient coding schemes without incurring loss of format efficiency due to the requirement to add pad at the end of a data sector. The present invention fulfills these and other needs. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The present invention is directed to an apparatus and method for transferring data between a read/write transducer and a data storage medium which provide for an improvement in track format efficiency. The present invention is also directed to such an apparatus and method that provides for increased sector size granularity. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> An apparatus and method of the present invention provide for transferring of data between a read/write transducer coupled to a data channel and a data storage medium without necessity of a data sector block coding pad field. According to the present invention, a data sector is received during a read operation. A disable signal associated with a last block of the data sector is generated. In response to the disable signal, data correction, such as parity correction, to the last block of the data sector is disabled. Data correction is enabled for application to blocks of the data sector other than the last block. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Generating the disable signal involves identifying the last block of the data sector. According to one embodiment, a disable signal is generated in response to detecting a change of state of a read gate input into the data channel. For example, the disable signal is generated in response to the read gate input changing state from an active state to an inactive state. According to this embodiment, generating the disable signal may further involve enabling data correction to a block proceeding and adjacent to the last block. The disable signal is generated prior to or during application of data correction to the block proceeding and adjacent to the last block. Data correction is disabled to the last block of the data sector in response to the disable signal. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> According to another embodiment, a counting approach is employed to identify the last block of a data sector. According to one counting approach, the data sector has a predefined size, and generating the disable signal involves determining an expected amount of data that will be read during the read operation and counting an amount of data transferred out of the data channel during the read operation. The start of the last block is detected using the counted amount of transferred data. Data correction to the last block is disabled if the expected amount of data is not an integer multiple of the predefined size of the data sector. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> In accordance with a further embodiment of the present invention, an apparatus is employed in a data channel for processing readback signal information developed from a data storage medium during a read operation. The apparatus includes a detector that detects an encoded data stream developed from a readback signal, where the encoded data stream includes a number of encoded data blocks. A processor is coupled to the detector. The processor includes a parity check unit that detects parity of the encoded data blocks and a data correction unit that operates on a particular encoded data block in response to the parity check unit detecting incorrect parity of the particular encoded data block. The apparatus further includes a disable circuit coupled to the parity check unit and the data correction unit. The disable circuit generates a disable signal associated with a last block of the encoded data blocks, and the data correction unit disables data correction to the last block in response to the disable signal. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> The disable circuit, according to one embodiment, includes an input coupled to a read gate input to the data channel. The disable circuit includes a detector that detects a state change of the read gate input. The disable circuit generates a disable signal in response to the detected state change of the read gate input, such as a state change from an active state to an inactive state. In one configuration, the disable circuit may be coupled to the read gate input to the data channel and a timer in the data channel. In this configuration, the disable circuit generates the disable signal in response to a state change of the read gate input and transmits the disable signal to the data correction unit upon expiration of the timer. The timer expires after a period of time corresponding to a processing delay of a decoder coupled to an output of the processor. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> According to a further embodiment, the disable circuit includes a counter, such as a byte counter. The disable circuit generates a disable signal in response to the counter identifying the last block of the encoded data blocks. For example, the counter counts an amount of data transferred out of the data channel during the read operation and detects a start of the last block using the counted amount of transferred data and an expected amount of data to be read during the read operation. The disable circuit generates a disable signal in response to the expected amount of data not being an integer multiple of a predefined size of the data sector. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> In accordance with another embodiment, circuitry and methodologies of the present invention are embodied in a data storing system. The data storing system includes a data storage disk, a transducer supported by a support structure in proximity with the disk, and an actuator that provides relative movement between the transducer and the disk. The data storing system further includes circuitry for processing readback signal information developed by the transducer during a read operation and for selectively disabling data correction to the last block of encoded data blocks as described previously hereinabove. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The above summary of the present invention is not intended to describe each embodiment or every implementation of the present invention. Advantages and attainments, together with a more complete understanding of the invention, will become apparent and appreciated by referring to the following detailed description and claims taken in conjunction with the accompanying drawings. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a top perspective view of a disk drive system with its upper housing cover removed; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a side plan view of a disk drive system comprising a plurality of data storage disks; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates various fields of a data sector including block coding pad which is advantageously eliminated by implementing the present invention; </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates various components of a data channel embodying the present invention; </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates various components of a data channel, including components of a post processor, embodying the present invention; </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> illustrates various operations associated with performing a read operation in accordance with the principles of the present invention; </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> illustrates various operations associated with performing a read operation in accordance with an embodiment of the present invention; </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> illustrates various operations associated with selective disablement of a data correction function in accordance with one embodiment of the present invention; </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> illustrates various operations associated with selective disablement of a data correction function in accordance with another embodiment of the present invention; </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a timing diagram depicting timing details at the end of a typical read operation; and </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a timing diagram depicting timing details at the end of a read operation in accordance with an embodiment of the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> While the invention is amenable to various modifications and alternative forms, specifics thereof have been shown by way of example in the drawings and will be described in detail hereinbelow. It is to be understood, however, that the intention is not to limit the invention to the particular embodiments described. On the contrary, the invention is intended to cover all modifications, equivalents, and alternatives falling within the scope of the invention as defined by the appended claims. </paragraph>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF VARIOUS EMBODIMENTS </heading>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> In the following description of the illustrated embodiments, references are made to the accompanying drawings which form a part hereof, and in which is shown by way of illustration, various embodiments in which the invention may be practiced. It is to be understood that other embodiments may be utilized, and structural and functional changes may be made without departing from the scope of the present invention. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> Referring to the drawings, and more particularly to <cross-reference target="DRAWINGS">FIGS. 1 and 2</cross-reference>, there is illustrated a data storage system <highlight><bold>20</bold></highlight> within which methods and apparatuses according to the present invention may be implemented. The disk drive system <highlight><bold>20</bold></highlight>, as is best shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, typically includes one or more rigid data storage disks <highlight><bold>24</bold></highlight> which are stacked coaxially in a tandem spaced relationship, and rotate about a spindle motor <highlight><bold>26</bold></highlight> at a relatively high rate of rotation. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> As is depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, each disk <highlight><bold>24</bold></highlight> is typically magnetically formatted to include a plurality of spaced concentric tracks <highlight><bold>50</bold></highlight>. One or more of the disks <highlight><bold>24</bold></highlight> may alternatively be magnetically formatted to include a spiraled track configuration, or a combination of concentric and spiraled track configurations. Digital information is typically stored in the form of magnetic transitions along the tracks <highlight><bold>50</bold></highlight>. The tracks <highlight><bold>50</bold></highlight> are generally divided into a number of sectors <highlight><bold>52</bold></highlight>, with each sector <highlight><bold>52</bold></highlight> comprising a number of information fields, including fields for storing data, and sector identification and synchronization information, for example. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Writing data to a magnetic data storage disk <highlight><bold>24</bold></highlight> generally involves passing a current through the write element of the transducer assembly <highlight><bold>27</bold></highlight> to produce magnetic lines of flux which magnetize a specific location of the disk surface <highlight><bold>24</bold></highlight>. Reading data from a specified disk location is typically accomplished by a read element of the transducer assembly <highlight><bold>27</bold></highlight> sensing the magnetic field or flux lines emanating from the magnetized locations of the disk surface <highlight><bold>24</bold></highlight>. As the read element passes over the rotating disk surface <highlight><bold>24</bold></highlight>, the interaction between the read element and the magnetized locations on the disk surface <highlight><bold>24</bold></highlight> results in the production of electrical signals, commonly referred to as readback signals, in the read element. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> An actuator <highlight><bold>30</bold></highlight> typically includes a number of interleaved actuator arms <highlight><bold>28</bold></highlight> with each arm having one or more transducer <highlight><bold>27</bold></highlight> and slider assemblies <highlight><bold>35</bold></highlight> mounted to a load beam <highlight><bold>25</bold></highlight> for transferring information to and from the data storage disks <highlight><bold>24</bold></highlight>. The slider <highlight><bold>35</bold></highlight> is typically designed as an aerodynamic lifting body that lifts the transducer <highlight><bold>27</bold></highlight> off the surface of the disk <highlight><bold>24</bold></highlight> as the rate of spindle motor rotation increases and causes the transducer <highlight><bold>27</bold></highlight> to hover above the disk <highlight><bold>24</bold></highlight> on an airbearing produced by high speed rotation of the disk <highlight><bold>24</bold></highlight>. The distance between the slider <highlight><bold>35</bold></highlight> and the disk surface <highlight><bold>24</bold></highlight> is typically less than 40 nm. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> The actuator <highlight><bold>30</bold></highlight> is typically mounted to a stationary actuator shaft <highlight><bold>32</bold></highlight> and rotates on the shaft <highlight><bold>32</bold></highlight> to move the actuator arms <highlight><bold>28</bold></highlight> into and out of the stack of data storage disks <highlight><bold>24</bold></highlight>. A coil assembly <highlight><bold>36</bold></highlight>, mounted to a coil frame <highlight><bold>34</bold></highlight> of the actuator <highlight><bold>30</bold></highlight>, generally rotates within a gap <highlight><bold>44</bold></highlight> defined between the upper and lower magnet assemblies <highlight><bold>40</bold></highlight> and <highlight><bold>42</bold></highlight> of a permanent magnet structure <highlight><bold>38</bold></highlight> causing the actuator arms <highlight><bold>28</bold></highlight>, in turn, to sweep over the surface of the data storage disks <highlight><bold>24</bold></highlight>. The spindle motor <highlight><bold>26</bold></highlight> typically comprises a DC motor energized by a power supply <highlight><bold>46</bold></highlight> and adapted for rotating the data storage disks <highlight><bold>24</bold></highlight>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The coil assembly <highlight><bold>36</bold></highlight> and the upper and lower magnet assemblies <highlight><bold>40</bold></highlight> and <highlight><bold>42</bold></highlight> of the permanent magnet structure <highlight><bold>38</bold></highlight> operate in cooperation as an actuator voice coil motor <highlight><bold>39</bold></highlight> responsive to control signals produced by a servo processor <highlight><bold>56</bold></highlight>. The servo processor <highlight><bold>56</bold></highlight> controls the direction and magnitude of control current supplied to the voice coil motor <highlight><bold>39</bold></highlight>. The actuator voice coil motor <highlight><bold>39</bold></highlight> produces a torquing force on the actuator coil frame <highlight><bold>34</bold></highlight> when control currents of varying direction and magnitude flow in the coil assembly <highlight><bold>36</bold></highlight> in the presence of a magnetic field produced by the permanent magnet structure <highlight><bold>38</bold></highlight>. The torquing forces imparted on the actuator coil frame <highlight><bold>34</bold></highlight> cause corresponding rotational movement of the actuator arms <highlight><bold>28</bold></highlight> in directions dependent on the polarity of the control currents flowing in the coil assembly <highlight><bold>36</bold></highlight>. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The data storage system <highlight><bold>20</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> preferably employs a closed-loop servo control system for positioning the read/write transducers <highlight><bold>27</bold></highlight> to specified storage locations on the data storage disk <highlight><bold>24</bold></highlight>. During normal data storage system operation, a servo transducer, generally mounted proximate the read/write transducers, or, alternatively, incorporated as the read element of the transducer assembly <highlight><bold>27</bold></highlight>, is typically employed to read information for the purpose of following a specified track (i.e., track following) and locating (i.e., seeking) specified track and data sector locations on the disk surface <highlight><bold>24</bold></highlight>. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> In accordance with one servo technique, embedded servo pattern information is written to the disk <highlight><bold>24</bold></highlight> along segments extending in a direction generally outward from the center of the disk <highlight><bold>24</bold></highlight>. The embedded servo patterns are thus formed between the data storing sectors of each track <highlight><bold>50</bold></highlight>. It is noted that a servo sector typically contains a pattern of data, often termed a servo burst pattern, used to maintain optimum alignment of the read/write transducers <highlight><bold>27</bold></highlight> over the centerline of a track <highlight><bold>50</bold></highlight> when transferring data to and from specified data sectors on the track <highlight><bold>50</bold></highlight>. The servo information may also include sector and track identification codes which are used to identify the location of the transducer assembly <highlight><bold>27</bold></highlight>. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The servo processor <highlight><bold>56</bold></highlight>, which cooperates with channel electronics <highlight><bold>57</bold></highlight>, regulates the actuator voice coil motor <highlight><bold>39</bold></highlight> to move the actuator arms <highlight><bold>28</bold></highlight> and transducers <highlight><bold>27</bold></highlight> to prescribed track <highlight><bold>50</bold></highlight> and sector <highlight><bold>52</bold></highlight> locations when reading and writing data to and from the disks <highlight><bold>24</bold></highlight>. The servo processor <highlight><bold>56</bold></highlight> is loosely coupled to a disk drive controller <highlight><bold>58</bold></highlight>. The disk drive controller <highlight><bold>58</bold></highlight> typically includes control circuitry and software that coordinate the transfer of data to and from the data storage disks <highlight><bold>24</bold></highlight>. Although the servo processor <highlight><bold>56</bold></highlight> and disk drive controller <highlight><bold>58</bold></highlight> are depicted as two separate devices in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, it is understood that the functionality of the servo processor <highlight><bold>56</bold></highlight> and disk drive controller <highlight><bold>58</bold></highlight> may be embodied in a single multi-purpose processor, which typically results in a reduced component cost. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> An apparatus and method in accordance with the principles of the present invention generally provide for improved track format efficiency in a direct access storage device by elimination of the block coding pad field otherwise required to complete the read operation. Pad information typically contains the remainder of an encode/decode block including information required to complete parity correction to the block (block coding pad) and also additional bytes (Viterbi closure pad) required for completion of the data detection operation including finalizing pending decisions within the detector (e.g., Viterbi detector) logic. An apparatus and method according to the present invention are well suited for implementation in-situ a disk drive system of the type described above with reference to <cross-reference target="DRAWINGS">FIGS. 1 and 2</cross-reference>, it being understood that the invention is not limited to the operating environment described in the above discussion or that provided hereinbelow. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> According to the principles of the present invention, and as described in detail hereinbelow, the last block in a read operation is identified. Data correction (e.g., parity correction) to this last block is disabled during processing of the last block to avoid data corruption. Disabling data correction to the last block in a read operation advantageously eliminates the requirement for block coding pad at the expense of a minor error rate performance degradation on the last frame resulting from the lack of parity correction to the last block. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, there is depicted a typical data sector <highlight><bold>100</bold></highlight> of a data track provided on a data storage disk. The data sector <highlight><bold>100</bold></highlight> preferably conforms to a sector format with large block parity codes (e.g., <highlight><bold>12</bold></highlight> bytes per block). <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates the block coding pad that is advantageously eliminated in accordance with the principles of the present invention. Data is written to a data storage disk according to a sequential format. The data sector <highlight><bold>100</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, for example, includes a sync field <highlight><bold>102</bold></highlight>, which includes synchonization patterns that allow the channel VFO to acquire the clock frequency, and a sync word <highlight><bold>104</bold></highlight>, which includes a pattern that identifies the start of the encoded customer data. Customer data is stored in a customer data field <highlight><bold>106</bold></highlight>. Error correction code (ECC) (not shown) is typically stored in an ECC field toward the end of the data sector <highlight><bold>100</bold></highlight>, which provides the capability to correct certain errors that occur within the sector <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> Data sector <highlight><bold>100</bold></highlight> further includes a block coding pad field <highlight><bold>110</bold></highlight> which is used in conventional designs to complete readback signal decoding for encoded customer data patterns. Present data channel detector implementations typically require additional pad data to be written after the customer data and ECC fields to allow the channel&apos;s detector to decode the last bytes of data written to the data storage disk. In general terms, the purpose of the pad data is to provide sample values to the channel&apos;s Viterbi (trellis) and/or parity circuits to resolve pending decisions at the end of a data read operation. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> In the illustrative depiction of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, an encoding block size of 12 bytes is assumed. At the end of the data sector <highlight><bold>100</bold></highlight>, there are 6 bytes of data that are to be written to the disk. Due to the need to perform a parity check during a read operation, however, an additional 6 bytes of block coding pad must be written to ensure that the parity of the encoded 12 byte block is correct in accordance with a conventional approach. If such additional block coding pad was not written, then during readback, the parity check would quite likely fail, causing the post processor to correct the most likely error in the 12 byte block, which may end up miscorrecting data. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> A data track formatting methodology of the present invention advantageously eliminates the block coding pad field required at the end of a data sector to complete readback signal decoding for customer data patterns. Elimination of the block coding pad field improves format efficiency and allows for more customer data to be stored on the media per unit area and allows designers to implement more efficient coding schemes without incurring loss of format efficiency due to the requirement to add block coding pad at the end of a data sector. Also, data sector granularity is increased. Significant improvement in track format efficiency may be realized by implementing the present invention for track formats having increased block sizes. These and other advantages will be readily appreciated by those skilled in the art, as further exemplified in the following discussion. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, there is illustrated a block diagram of a data channel of a data storage system embodying the present invention. In particular, <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows an embodiment of a partial-response maximum-likelihood (PRML) channel <highlight><bold>120</bold></highlight> which implements a track formatting methodology in accordance with the principles of the present invention. The channel <highlight><bold>120</bold></highlight> may be viewed as constituting a portion associated with writing data to a data storage medium and a portion associated with reading data from the medium. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> Customer data to be written to the data storage medium is applied to an encoder <highlight><bold>122</bold></highlight> which encodes the customer data according to a pre-established coding scheme. By way of example, encoder <highlight><bold>122</bold></highlight> may re-map the customer data to include timing information for purposes of facilitating efficient readback signal processing, improving efficiency, and minimizing error propagation. For example, a 16/17 rate coding scheme may be employed by encoder <highlight><bold>122</bold></highlight> which encodes 16 customer bits to 17 channel bits to provide the requisite timing information. The encoder <highlight><bold>122</bold></highlight> converts the encoded binary customer data to a binary write current waveform signal. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> The encoder <highlight><bold>122</bold></highlight> operates on the encoded customer data to enable the magnetic system to mimic a desired partial-response (PR) or extended partial-response (EPR) transfer function in the sampled readback signal. Encoder <highlight><bold>122</bold></highlight> typically employs a delay circuit which includes an exclusive OR (XOR) circuit to produce a binary write current waveform according to a selected partial-response signaling format. By way of example, encoder <highlight><bold>122</bold></highlight> may be described by a 1/(1-D<highlight><superscript>2</superscript></highlight>) operation or by a 1/(1-D) operation, where D represents a unit delay operator. The encoder <highlight><bold>122</bold></highlight> mimics the desired partial-response transfer function characteristics by switching the write current such that each binary &ldquo;1&rdquo; in the data stream has a non-zero sample in the readback signal. It is understood that encoder <highlight><bold>122</bold></highlight> may process the encoded customer data according to any of a number of partial-response transfer function specifications, such as a class-<highlight><bold>4</bold></highlight> partial-response (PR<highlight><bold>4</bold></highlight>) signaling specification or an extended partial-response class-<highlight><bold>4</bold></highlight> (EPR<highlight><bold>4</bold></highlight>) signaling specification. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> Encoder <highlight><bold>122</bold></highlight> is coupled to a precomp circuit <highlight><bold>126</bold></highlight> which provides an output signal to a write circuit <highlight><bold>128</bold></highlight> in the form of a modulated binary pulse signal. The write circuit <highlight><bold>128</bold></highlight> provides the modulated write current signal to a write element of a read/write transducer for writing the processed customer data to the disk surface <highlight><bold>130</bold></highlight>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> Having described the various components and operations associated with writing data to a data storage disk, the following discussion describes various operations associated with reading data from data sectors. A read element of a read/write transducer obtains an analog readback signal from the disk surface <highlight><bold>130</bold></highlight>. The readback signal is applied to a variable gain amplifier (VGA) <highlight><bold>132</bold></highlight> and the amplified readback signal is applied to a low-pass filter <highlight><bold>134</bold></highlight>. The filtered readback signal is converted to digital form by an analog-to-digital convert (ADC) <highlight><bold>136</bold></highlight>. The converted signal produced by ADC <highlight><bold>136</bold></highlight> may, for example, provide for 64 possible 6 bit sampled values. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> The samples of the ADC <highlight><bold>136</bold></highlight> are applied to a digital filter <highlight><bold>138</bold></highlight>, such as a 10 tap finite impulse response (FIR) digital filter. The filtered signal produced at the output of digital filter <highlight><bold>138</bold></highlight> preferably conforms to a selected partial-response signal format (e.g., PR<highlight><bold>4</bold></highlight> or EPR<highlight><bold>4</bold></highlight>). The filtered signal produced by the digital filter <highlight><bold>138</bold></highlight> is then communicated to a Viterbi detector <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> The Viterbi detector <highlight><bold>140</bold></highlight> employs a Viterbi algorithm which is used to select the &ldquo;best value&rdquo; for an output based upon the minimization of the error term relative to an ideal sample value. Various known Viterbi or maximum likelihood detection algorithms may be employed in connection with the present invention. The Viterbi detector <highlight><bold>140</bold></highlight> produces an encoded binary data stream representative of the customer data which is subject to processing by a parity post-processor <highlight><bold>141</bold></highlight> and a decoder <highlight><bold>143</bold></highlight>. The decoded binary data stream representative of the customer data is then transferred to the user via the head-disk controller and interface of the disk drive system. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> A formatting methodology according to an embodiment of the present invention will now be described in greater detail with reference to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. As is shown in <cross-reference target="DRAWINGS">FIG. 5, a</cross-reference> readback signal is sampled, digitized, filtered and communicated to Viterbi detector <highlight><bold>140</bold></highlight>. Viterbi detector <highlight><bold>140</bold></highlight>, in conjunction with path memory <highlight><bold>150</bold></highlight>, detects the encoded data stream from the filtered readback signal. The encoded data stream output from the path memory <highlight><bold>150</bold></highlight> is input to the post processor <highlight><bold>141</bold></highlight>. Post processor <highlight><bold>141</bold></highlight> includes a delay circuit <highlight><bold>152</bold></highlight> that delays the encoded data stream by the encoded block size (e.g., 12 bytes) plus a short delay due to pipelining. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Post processor <highlight><bold>141</bold></highlight> includes a frame counter <highlight><bold>156</bold></highlight> which determines the framing of the encoded blocks. The frame counter <highlight><bold>156</bold></highlight> effectively determines where the starting bit of each encoded block occurs. A parity check unit <highlight><bold>156</bold></highlight> is also included within the post processor <highlight><bold>141</bold></highlight>. The parity check unit <highlight><bold>156</bold></highlight> determines whether or not an encoded block has the correct parity. A error detection circuit <highlight><bold>160</bold></highlight> of the post processor <highlight><bold>141</bold></highlight> is provided to determine the most likely error and error location in an encoded block. Error detection circuit <highlight><bold>160</bold></highlight> uses data from both the path memory <highlight><bold>150</bold></highlight> and internal metrics from the Viterbi detector <highlight><bold>140</bold></highlight> in its determinations. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> A data correction circuit <highlight><bold>154</bold></highlight> of the post processor <highlight><bold>141</bold></highlight> has inputs coupled to the delay circuit <highlight><bold>152</bold></highlight>, parity check unit <highlight><bold>156</bold></highlight>, frame counter <highlight><bold>158</bold></highlight>, and error detection circuit <highlight><bold>160</bold></highlight>. In addition, and in accordance with the present invention, data correction circuit <highlight><bold>154</bold></highlight> has an input coupled to a disable circuit <highlight><bold>170</bold></highlight>. Disable circuit <highlight><bold>170</bold></highlight> selectively enables and disables a data correction function of data correction circuit <highlight><bold>154</bold></highlight> in accordance with the present invention. The data correction circuit <highlight><bold>154</bold></highlight>, when enabled, only operates if the parity of the encoded block is incorrect, in which case it corrects the most likely error in that block as the block leaves the post processor <highlight><bold>141</bold></highlight>. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, disable circuit <highlight><bold>170</bold></highlight> is depicted in the context of two different embodiments. In one embodiment, disable circuit <highlight><bold>170</bold></highlight> produces a disable signal in response to a state of a read gate input <highlight><bold>172</bold></highlight> to the data channel (labeled method &num;1 in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>). The disable circuit <highlight><bold>170</bold></highlight> includes or is coupled to a state detector (not shown) that detects a state change of the read gate input as the read gate input transitions from an active state to an inactive state. The state detector may, for example, be incorporated as part of the post processor <highlight><bold>141</bold></highlight>, such as part of the data correction circuit <highlight><bold>154</bold></highlight>. The disable circuit <highlight><bold>170</bold></highlight> generates the disable signal in response to this detected state change of the read gate input. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> According to a second embodiment, disable circuit <highlight><bold>170</bold></highlight> produces a disable signal in response to the status of a counter <highlight><bold>174</bold></highlight>, such as a byte counter (labeled method &num;2 in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>). The disable circuit <highlight><bold>170</bold></highlight>, which may include one or both of the state detector or counter <highlight><bold>174</bold></highlight>, communicates a disable signal to the data correction circuit <highlight><bold>154</bold></highlight> during a read operation to selectively disable data correction to the last block in the read operation. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> In accordance with the present invention, it is assumed that the large block code is not actually decoded 12 bytes at a time. Doing so would be costly in terms of silicon area, additional pipelining, and sector data size granularity, which is a problem solved by the present invention. Rather, and according to one code implementation, 2 bytes are decoded at a time, with parity bits interspersed throughout the 12 byte block. Thus, the sector data size according to this embodiment is limited to 2 byte granularity, which is significantly better the 12 byte granularity of other approaches. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> depicts several operations implemented by the circuitry of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> according to the principles of the present invention. In broad and general terms, a read operation is initiated <highlight><bold>200</bold></highlight> and an encoded data sector is received <highlight><bold>202</bold></highlight> for decoding. During decoding of the data sector, data correction (e.g., parity correction) is performed to data sector blocks other than the last block of the data sector. Data correction to the last block of the data sector is not performed in order to avoid possible data corruption when the needed number of bytes does not fit a modulus of the block size. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> depicts several operations implemented by the circuitry of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> according to further principles of the present invention. As is depicted in <cross-reference target="DRAWINGS">FIG. 7, a</cross-reference> read operation is initiated <highlight><bold>250</bold></highlight> and an encoded data sector is received <highlight><bold>252</bold></highlight> for decoding. During decoding of the data sector, data correction is applied <highlight><bold>254</bold></highlight> to data sector blocks up to, but excluding, the last block of the data sector. During the decoding process, a disable signal is generated <highlight><bold>256</bold></highlight> associated with the last block of the data sector. Data correction otherwise applied to the last data sector block using conventional schemes is disabled in response to the disable signal. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> depicts several operations implemented by the circuitry of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> according to an embodiment of the present invention. A read operation is initiated <highlight><bold>300</bold></highlight> and an encoded data sector is received <highlight><bold>302</bold></highlight> for decoding. During decoding of the data sector, data correction is applied <highlight><bold>304</bold></highlight> to data sector blocks up to, but excluding, the last block of the data sector. According to this embodiment, identifying the last block in a read operation involves detecting the state of the read gate input to the data channel. In particular, a change of state of the read gate input from active to inactive is detected <highlight><bold>306</bold></highlight>. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> When the read gate input goes active, a read operation begins. When the read gate input transitions to inactive, an internal timer in the channel delays the end of the read operation to account for decoder processing delay. As such, when the read gate input goes inactive, the channel disables parity corrections staring with the next block to be processed, which will be the last block of the sector. The transition of the read gate input from active to inactive states results in the generation <highlight><bold>308</bold></highlight> of a disable signal which is detected by the data correction circuit <highlight><bold>154</bold></highlight>. Data correction to the last block of the data sector is disabled <highlight><bold>310</bold></highlight> in response to the disable signal. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 10 and 11</cross-reference> are timing diagrams that illustrate timing details at the end of a read operation. <cross-reference target="DRAWINGS">FIG. 10</cross-reference> illustrates timing details according to a conventional approach, while <cross-reference target="DRAWINGS">FIG. 11</cross-reference> illustrates timing details depicting a disable signal implementation based on the state of the read gate input to the data channel. As is shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the read operation continues after the read gate goes inactive due to the readback latency introduced by the large block code. A certain amount of time later, the read circuitry actually shuts down and stops transferring data. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> As is shown in <cross-reference target="DRAWINGS">FIG. 11, a</cross-reference> disable signal <highlight><bold>400</bold></highlight> is introduced into the timing scheme. Disable signal <highlight><bold>400</bold></highlight> is communicated from the disable circuit <highlight><bold>170</bold></highlight> to the data correction circuit <highlight><bold>154</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. The disable signal <highlight><bold>400</bold></highlight>, when at a first state (i.e., high), enables the data correction circuit <highlight><bold>154</bold></highlight> to effect data corrections and, when at a second state (i.e., low), disables the data correction circuit <highlight><bold>154</bold></highlight> from effecting data corrections. When the read gate input goes inactive, the next encoded block passing through the post processor will not be subject to correction. This temporal relationship between the read gate input transition to an inactive state and deactivation of data correction for the next encoded block is due to the fact that the read circuitry continues to operate after the read gate input goes inactive according to this embodiment. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> For channels having timing characteristics that preclude implementation of the above-described data correction disablement methodology, and in accordance with another embodiment, a counter-based approach for identifying the last block in a read operation may be employed. According to one such counter-based approach, a counter is used to keep track of the amount of data transferred out of the channel during a read operation together with knowledge of the total amount of data that will be read during the read operation. This information is used to determine if the total amount of data to be read is an integer multiple of the block size. If not, the data correction function is disabled at the appropriate decode of the transfer counter to ensure that the final block of data is not corrupted. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> As is depicted in <cross-reference target="DRAWINGS">FIG. 9, a</cross-reference> read operation is initiated <highlight><bold>400</bold></highlight> and the expected amount of data that will be read during the read operation is determined <highlight><bold>402</bold></highlight>. An encoded data sector is received <highlight><bold>404</bold></highlight> for decoding. The amount of data transferred out of the data channel during the read operation is counted <highlight><bold>406</bold></highlight>. Data correction is enabled and, if indicated, performed <highlight><bold>408</bold></highlight> for data sector blocks up to the last block of the data sector. The start of the last block of the data sector is detected <highlight><bold>410</bold></highlight> using the counted amount of transferred data. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> A computation is performed to determine <highlight><bold>412</bold></highlight> if the expected amount of data to be transferred is an integer multiple of the data sector size. A disable signal is generated <highlight><bold>414</bold></highlight> in response to the computation indicating that the expected amount of data to be transferred for the read operation is not an integer multiple of the data sector size. Having identified the starting bit of the last data sector block using this information, data correction to this last block is disabled <highlight><bold>416</bold></highlight> in response to the disable signal. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> The foregoing description of the various embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of transferring data between a read/write transducer coupled to a data channel and a data storage medium without necessity of a data sector block coding pad field, the method comprising: 
<claim-text>receiving a data sector during a read operation; </claim-text>
<claim-text>generating a disable signal associated with a last block of the data sector; and </claim-text>
<claim-text>disabling, in response to the disable signal, data correction to the last block of the data sector. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein disabling data correction comprises disabling parity correction. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising enabling data correction for application to blocks of the data sector other than the last block. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein generating the disable signal further comprises identifying the last block of the data sector. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein generating the disable signal further comprises detecting a change of state of a read gate input into the data channel. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein generating the disable signal further comprises generating the disable signal in response to a read gate input into the data channel changing state from an active state to an inactive state. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein generating the disable signal further comprises: 
<claim-text>enabling data correction to a block proceeding and adjacent to the last block; </claim-text>
<claim-text>generating the disable signal prior to or during application of data correction to the block proceeding and adjacent to the last block; and </claim-text>
<claim-text>disabling data correction to the last block of the data sector in response to the disable signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the data sector has a predefined size, and generating the disable signal further comprises: 
<claim-text>determining an expected amount of data that will be read during the read operation; </claim-text>
<claim-text>counting an amount of data transferred out of the data channel during the read operation; </claim-text>
<claim-text>detecting a start of the last block using the counted amount of transferred data; and </claim-text>
<claim-text>disabling data correction to the last block if the expected amount of data is not an integer multiple of the predefined size of the data sector. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. An apparatus employed in a data channel for processing readback signal information developed from a data storage medium during a read operation, comprising: 
<claim-text>a detector that detects an encoded data stream developed from a readback signal, the encoded data stream comprising a plurality of encoded data blocks; and </claim-text>
<claim-text>a processor, coupled to the detector, comprising: 
<claim-text>a parity check unit that detects parity of the encoded data blocks; </claim-text>
<claim-text>a data correction unit that operates on a particular encoded data block in response to the parity check unit detecting incorrect parity of the particular encoded data block; and </claim-text>
<claim-text>a disable circuit coupled to the parity check unit and the data correction unit, the disable circuit generating a disable signal associated with a last block of the encoded data blocks, wherein the data correction unit disables data correction to the last block in response to the disable signal. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the disable circuit comprises an input coupled to a read gate input to the data channel. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the disable circuit comprises a detector that detects a state change of the read gate input, the disable circuit generating the disable signal in response to the detected state change of the read gate input. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the disable circuit comprises a detector that detects a state change of the read gate input, the disable circuit generating the disable signal in response to the read gate input changing state from an active state to an inactive state. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the disable circuit is coupled to a read gate input to the data channel and a timer in the data channel, the disable circuit generating the disable signal in response to a state change of the read gate input and transmitting the disable signal to the data correction unit upon expiration of the timer. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the timer expires after a period of time corresponding to a processing delay of a decoder coupled to an output of the processor. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the disable circuit comprises a counter. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the disable circuit comprises a counter and the disable circuit generates the disable signal in response to the counter identifying the last block of the encoded data blocks. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the disable circuit comprises a counter, the counter counting an amount of data transferred out of the data channel during the read operation and detecting a start of the last block using the counted amount of transferred data and an expected amount of data to be read during the read operation. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the disable circuit generates the disable signal in response to the expected amount of data not being an integer multiple of a predefined size of the data sector. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A data storing system, comprising: 
<claim-text>a data storage disk; </claim-text>
<claim-text>a transducer supported by a support structure in proximity with the disk; </claim-text>
<claim-text>an actuator that provides relative movement between the transducer and the disk; and </claim-text>
<claim-text>circuitry for processing readback signal information developed by the transducer during a read operation, the circuitry comprising: 
<claim-text>a detector that detects an encoded data stream developed from a readback signal, the encoded data stream comprising a plurality of encoded data blocks; and </claim-text>
<claim-text>a processor, coupled to the detector, comprising: 
<claim-text>a parity check unit that detects parity of the encoded data blocks; </claim-text>
<claim-text>a data correction unit that operates on a particular encoded data block in response to the parity check unit detecting incorrect parity of the particular encoded data block; and </claim-text>
<claim-text>a disable circuit coupled to the parity check unit and the data correction unit, the disable circuit generating a disable signal associated with a last block of the encoded data blocks, wherein the data correction unit disables data correction to the last block in response to the disable signal. </claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein the disable circuit comprises an input coupled to a read gate input to the data channel and the disable circuit comprises a detector that detects a state change of the read gate input, the disable circuit generating the disable signal in response to the detected state change of the read gate input. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the disable circuit comprises a detector that detects a state change of the read gate input, the disable circuit generating the disable signal in response to the read gate input changing state from an active state to an inactive state. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the disable circuit is coupled to a read gate input to the data channel and a timer in the data channel, the disable circuit generating the disable signal in response to a state change of the read gate input and transmitting the disable signal to the data correction unit upon expiration of the timer. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein the disable circuit comprises a counter and the disable circuit generates the disable signal in response to the counter identifying the last block of the encoded data blocks. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein the disable circuit comprises a counter, the counter counting an amount of data transferred out of the data channel during the read operation and detecting a start of the last block using the counted amount of transferred data and an expected amount of data to be read during the read operation. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, wherein the disable circuit generates the disable signal in response to the expected amount of data not being an integer multiple of a predefined size of the data sector.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>7</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002191A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002191A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002191A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002191A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002191A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002191A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002191A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002191A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002191A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002191A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
