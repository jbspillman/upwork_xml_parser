<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002505A1-20030102-D00000.TIF SYSTEM "US20030002505A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002505A1-20030102-D00001.TIF SYSTEM "US20030002505A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002505A1-20030102-D00002.TIF SYSTEM "US20030002505A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002505A1-20030102-D00003.TIF SYSTEM "US20030002505A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002505A1-20030102-D00004.TIF SYSTEM "US20030002505A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002505A1-20030102-D00005.TIF SYSTEM "US20030002505A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002505A1-20030102-D00006.TIF SYSTEM "US20030002505A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002505A1-20030102-D00007.TIF SYSTEM "US20030002505A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002505A1-20030102-D00008.TIF SYSTEM "US20030002505A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002505A1-20030102-D00009.TIF SYSTEM "US20030002505A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002505A1-20030102-D00010.TIF SYSTEM "US20030002505A1-20030102-D00010.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002505</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896723</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010630</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L012/28</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>H04L012/56</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>370</class>
<subclass>392000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>370</class>
<subclass>395100</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Apparatus and method for packet-based switching</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Thomas</given-name>
<middle-name>A.</middle-name>
<family-name>Hoch</family-name>
</name>
<residence>
<residence-us>
<city>Boxborough</city>
<state>MA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>John</given-name>
<middle-name>Patrick</middle-name>
<family-name>Jones</family-name>
</name>
<residence>
<residence-us>
<city>Westford</city>
<state>MA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Raymond</given-name>
<middle-name>J.</middle-name>
<family-name> Schmidt</family-name>
</name>
<residence>
<residence-us>
<city>Stoughton</city>
<state>MA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>Troutman, Sanders, Mays &amp; Valentine</name-1>
<name-2>Attention: John Curtin, Esq.</name-2>
<address>
<address-1>Suite 600</address-1>
<address-2>1660 International Drive</address-2>
<city>McLean</city>
<state>VA</state>
<postalcode>22102</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A packet-based switching device includes a plurality of physical layer interfaces, such as SONET/SDH layer 1 interfaces, and one or more higher-layer processors, such as SONET/SDH layer 2 or 3 processors. One or more digital cross-connects are interposed between the physical layer interfaces and the higher-layer processors. Each digital cross-connect routes communications traffic between the physical layer interfaces and the higher-layer processors. A packet switch core, such as an asynchronous transfer mode (ATM) switch core, routes traffic among higher-layer processors. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS-REFERENCE TO RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is related to U.S. patent application Ser. No. 09/711997, entitled Apparatus and Method For Redundancy Of Processing Modules Interfaced To A Switching Core (Chidambaran 1-1-1-1-1-1-1-1), filed Nov. 11, 2000, assigned to the same assignee as this application and which is hereby incorporated by reference.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates generally to communication systems and more particularly to packet switching systems having redundancy protection. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Switches used, for example, by communications providers in wide area networks typically provide a number of different interfaces for incoming and outgoing communications traffic to the core switching fabric in order to accommodate customer needs. These interfaces can range, for example, from high rate optical trunking ports to lower rate electrical interfaces. In general, the different interfaces are provided through service specific equipment grouped together on what are termed &ldquo;service shelves&rdquo;, where the service shelves then couple to the switching core. A typical service shelf will include the physical layer interface which couples to higher layer service cards (e.g. layer 2 or 3 for ATM or IP) and then to the switching core. Failure protection of equipment utilized in multiservice switches usually in the form of redundant circuit paths is also extremely important in order to provide the type of reliability that is necessary for these switches. Accordingly, extra service cards (or protection cards) are often provided within a service shelf to allow for the required protection. layer interface eliminates the use of the connected higher layer processor. The overall system bandwidth is reduced by a corresponding amount. Accordingly, there is a need to preserve overall system bandwidth in a packet switching system. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY </heading>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> A switching system in accordance with the principles of the present invention includes a plurality of physical layer interfaces, such as SONET/SDH layer 1 interfaces, and one or more higher-layer processors, such as SONET/SDH layer 2 or 3 processors. One or more digital cross-connects are interposed between the physical layer interfaces and the higher-layer processors. Each digital cross-connect routes communications traffic between the physical layer interfaces and the higher-layer processors. A packet switch core (The term &ldquo;packet&rdquo; is used in a generic sense herein and may include packets of various formats, such as ATM cells, for example) routes traffic among higher-layer processors. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> In an illustrative embodiment, a plurality of physical layer interfaces in the form of SONET interface cards are coupled through digital cross-connects to a plurality of higher-layer processors, which, in this illustrative embodiment, are located on service cards. Layer 1 SONET operations are performed on the SONET interface cards. Layer 2 or 3 ATM or IP functions are performed on the service cards. The higher-layer processors are linked to the packet switch core, which switches communications traffic among the higher-layer processors. In this illustrative embodiment, a plurality of physical layer interfaces are coupled to three higher-layer processors through two duplex cross-connects. In operation, two of the three higher-layer processors are active and one operates as a higher-layer protection processor which may be switched into the active role upon the failure of one of the two active processors. Similarly, the failure of a physical layer interface may trigger the re-routing of traffic from other sources, such as protection sources, through the cross-connect to a higher-layer processor, thereby preserving the utility of a higher-layer processor in the face of a physical layer interface&apos;s failure. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Automatic protection switching (APS) may be effected at the physical layer, for example, by providing 1:1, 1&plus;1, or 1:N protection through the digital cross-connect. The physical interfaces may also support bidirectional line-switched or unidirectional path-switched rings (BLSR or UPSR, respectively).</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The above and further features, aspects, and advantages of the invention will be apparent to those skilled in the art from the following detailed description, taken together with the accompanying drawings in which: </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a conceptual block diagram of a physical layer/higher layer processor in accordance with the principles of the present invention; </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a more detailed conceptual block diagram of the processor of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a more detailed conceptual block diagram of the processor of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>; </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a conceptual block diagram of a packet-switching system which employs a physical layer/higher layer processor in accordance with the principles of the present invention; </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a detailed block diagram of a service shelf component of the packet switching system of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>; </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a detailed block diagram of a core interface card component of the packet switching system of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>; </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a detailed block diagram of an aggregator as used in connection with the present invention; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is an exemplary embodiment of a core interface card for a low speed shelf; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is an exemplary embodiment of a higher level service card as used in connection with the present invention; and </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is an exemplary block diagram of an arbiter function as used in connection with the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The conceptual block diagram of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates a physical layer/higher-layer processor <highlight><bold>100</bold></highlight> in accordance with the principles of the present invention. As will be described in greater detail in the discussion related to <cross-reference target="DRAWINGS">FIGS. 4 through 10</cross-reference>, the physical layer/higher-layer processor may be combined with other components to form a packet-based switching system. The physical layer/higher-layer processor <highlight><bold>100</bold></highlight> includes a plurality of physical layer interfaces <highlight><bold>102</bold></highlight>. Each of the physical layer interfaces <highlight><bold>102</bold></highlight> provide physical layer functions, such as SONETISDH layer 1 functionality, and may include, in addition to optical and/or electronic receivers and transmitters <highlight><bold>104</bold></highlight>, transport processing components <highlight><bold>106</bold></highlight>, such as SONET of SDH transport processing components. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The receivers and transmitters <highlight><bold>104</bold></highlight> associated with each physical layer interface <highlight><bold>102</bold></highlight> accept telecommunications signals from, and transmit telecommunications to, a telecommunications system which accesses the services of a packet switch (not shown in this figure) through the physical layer/higher layer processor <highlight><bold>100</bold></highlight>. The physical layer interfaces <highlight><bold>102</bold></highlight> are connected through a digital cross-connect <highlight><bold>108</bold></highlight> to a plurality of higher layer processors <highlight><bold>110</bold></highlight>. The higher layer processors <highlight><bold>110</bold></highlight> provide higher layer services, such as IP/ATM layer 2 or layer 3 services. Communications traffic travels between the physical layer interfaces <highlight><bold>102</bold></highlight> and the higher layer processors <highlight><bold>110</bold></highlight> through the digital cross-connect <highlight><bold>108</bold></highlight> on its way to and from the packet switch to which the higher layer processors <highlight><bold>110</bold></highlight> are coupled. In one aspect of the present invention, protection switching, such as 1&plus;1, 1:N, or 1&equals;1, protection switching, is performed at the physical layer interfaces <highlight><bold>102</bold></highlight>. Consequently, if one of the physical layer interfaces <highlight><bold>102</bold></highlight> fails, a protection path through another of the physical layer interfaces will carry the protection traffic, which may be routed through the digital cross-connect <highlight><bold>108</bold></highlight> to whichever of the higher layer processors <highlight><bold>110</bold></highlight> had been handling the working traffic from the failed physical layer interface. In this manner, unlike conventional packet switching systems, a higher layer processor will still find use, even if a physical layer interface from which the higher layer processor is receiving or to which it is transmitting communications traffic, fails. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Automatic protection switching (APS) may be effected at the physical layer, for example, by providing 1:1 or 1:N protection through the digital cross-connect. The physical interfaces may also support bidirectional line-switched or unidirectional path-switched rings (BLSR or UPSR, respectively). Automatic protection switching is known and discussed, for example in Bellcore GR-253, which is hereby incorporated by reference. A switchover triggering event may be detected in the K1/K2 overhead. For example, the digital cross-connect may be configured to broadcast telecommunications received from a physical layer interface, thereby forming a permanent bridge and allowing the cross-connect to switchover from one physical layer interface to another in a 1:1 protection scheme. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The digital cross-connect <highlight><bold>108</bold></highlight> may be implemented, for example, as a SONET digital cross-connect system, which provides broadband support in terms of traffic grooming, traffic consolidation, test access, broadcast, add/drop, facility rolling and protection. &ldquo;Traffic grooming&rdquo; refers to the process of accepting traffic from one source, breaking it down into components and sending it to a different egress port. &ldquo;Traffic Consolidation&rdquo; refers to the process of combining multiple low-rate inputs into one high-rate output. &ldquo;Test Access&rdquo; support is offered in the form of a dedicated &ldquo;test&rdquo; port that is capable of monitoring traffic flows and/or injecting &ldquo;test&rdquo; traffic into the cross-connect. &ldquo;Protection&rdquo; support refers to the cross-connects&apos; facility for monitoring and switching traffic from a failed port to a backup port. In particular, if a SONET broadband digital cross-connect systems is employed for the cross-connect <highlight><bold>108</bold></highlight>, the cross-connect <highlight><bold>108</bold></highlight> would be capable of cross-connecting at the STS-1 (or DS3) and higher levels with SONET multiplexing and termination. A packet-based switching system in accordance with the principles of the present invention which employs a SONET BDCS as the cross-connect <highlight><bold>108</bold></highlight> may readily support network unbundling, SONET rings, and network hubbing, for example, by providing a protection mechanism for interconnecting equipment. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The conceptual block diagram of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates a packet switching system which employs a physical layer/higher-layer processor in accordance with the principles of the present invention, as described in the discussion related to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. For the sake of clarity and ease of description, this illustrative embodiment includes two physical layer/higher layer processors, one <highlight><bold>202</bold></highlight> with physical layer interfaces connected to the broader network (not shown) to the &ldquo;west&rdquo;, that is, to the left of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, and connected to a digital packet/cell switch fabric <highlight><bold>204</bold></highlight> to the &ldquo;east&rdquo;, that is to the right of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. The packet switch fabric <highlight><bold>204</bold></highlight>, an asynchronous transfer mode (ATM) switch fabric in this illustrative embodiment, routes traffic among higher-layer processors. The second physical layer/higher-layer processor <highlight><bold>206</bold></highlight> is connected to its west to the digital packet/cell switch fabric <highlight><bold>204</bold></highlight> and to its east to the broader network (not shown) through physical layer interfaces to its east. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The physical layer/higher layer processors of this illustrative embodiment are depicted from a slightly different perspective than that of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. For example, the transport interfaces <highlight><bold>208</bold></highlight> and <highlight><bold>210</bold></highlight> each include a plurality of physical layer interfaces, such as physical layer interfaces <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> and the digital cross-connects <highlight><bold>212</bold></highlight> and <highlight><bold>214</bold></highlight> may be implemented as the digital cross-connect <highlight><bold>108</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Additionally, the plurality of higher layer processors <highlight><bold>216</bold></highlight>, <highlight><bold>218</bold></highlight>, <highlight><bold>220</bold></highlight> within the physical layer/higher layer processor <highlight><bold>202</bold></highlight> and the plurality of higher layer processors <highlight><bold>222</bold></highlight>, <highlight><bold>224</bold></highlight>, <highlight><bold>226</bold></highlight> within the physical layer/higher layer processor <highlight><bold>206</bold></highlight> may be implemented as the higher layer processors <highlight><bold>110</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, however, as illustrated, higher layer processors <highlight><bold>216</bold></highlight>, <highlight><bold>218</bold></highlight>, <highlight><bold>222</bold></highlight>, and <highlight><bold>224</bold></highlight> are asynchronous transfer mode (ATM) processors that provide ATM processing services and higher layer processors <highlight><bold>220</bold></highlight> and <highlight><bold>226</bold></highlight> are frame relay/Internet protocol (FR/IP) processors that provide frame relay Internet protocol processing services. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The conceptual block diagram of <cross-reference target="DRAWINGS">FIG. 3</cross-reference> provides another, more detailed, illustration of a specific embodiment of a physical layer/higher layer processor in accordance with the principles of the present invention. In this illustrative embodiment, a plurality of physical layer interfaces in the form of SONET interface cards <highlight><bold>300</bold></highlight> and <highlight><bold>302</bold></highlight> are coupled through digital cross-connects <highlight><bold>304</bold></highlight> and <highlight><bold>306</bold></highlight> to a plurality of higher-layer processors, which, in this illustrative embodiment, are located on service cards <highlight><bold>308</bold></highlight>, <highlight><bold>310</bold></highlight>, and <highlight><bold>312</bold></highlight>. Layer 1 SONET operations are performed on the SONET interface cards <highlight><bold>300</bold></highlight> and <highlight><bold>302</bold></highlight>. Layer 2 or 3 ATM or IP functions are performed on the service cards <highlight><bold>308</bold></highlight>, <highlight><bold>310</bold></highlight>, and <highlight><bold>312</bold></highlight>. The higher-layer processors are linked to the packet switch core (not shown in this view), which switches communications traffic among the higher-layer processors. In this illustrative embodiment, two physical layer interfaces <highlight><bold>300</bold></highlight> and <highlight><bold>302</bold></highlight> are coupled to three higher-layer processors <highlight><bold>308</bold></highlight>, <highlight><bold>310</bold></highlight>, and <highlight><bold>312</bold></highlight> through two duplex cross-connects <highlight><bold>304</bold></highlight> and <highlight><bold>306</bold></highlight>. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> In operation, two of the three higher-layer processors, e.g., <highlight><bold>308</bold></highlight> and <highlight><bold>310</bold></highlight>, are active and one, e.g., <highlight><bold>312</bold></highlight>, operates as a higher-layer protection processor which may be switched into the active role upon the failure of one of the two active processors <highlight><bold>308</bold></highlight> and <highlight><bold>312</bold></highlight>. Similarly, the failure of a physical layer interface may trigger the re-routing of traffic from other sources, such as protection sources, through the cross-connects <highlight><bold>304</bold></highlight> and <highlight><bold>306</bold></highlight> to a higher-layer processor (one of processors <highlight><bold>308</bold></highlight>, <highlight><bold>310</bold></highlight>, or <highlight><bold>312</bold></highlight>), thereby preserving the utility of a higher-layer processor in the face of a physical layer interface&apos;s failure. Additionally, in this illustrative embodiment, one of the cross-connects <highlight><bold>306</bold></highlight> operates as a standby cross-connect and the other cross connect <highlight><bold>304</bold></highlight> operates as a working cross-connect, thereby providing a further layer of redundancy and fault protection. That is, should the working cross-connect <highlight><bold>304</bold></highlight> fail, the standby cross-connect <highlight><bold>306</bold></highlight> will assume its duties. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Each of the SONET interface cards <highlight><bold>300</bold></highlight> and <highlight><bold>302</bold></highlight> includes receive <highlight><bold>314</bold></highlight> and transmit <highlight><bold>316</bold></highlight> optics which communicate with a physical layer processor <highlight><bold>318</bold></highlight>. In this illustrative embodiment, the physical layer processor <highlight><bold>318</bold></highlight> performs OC48 physical layer operations, including framing and serialization/de-serialization. Each of the SONET interface cards <highlight><bold>300</bold></highlight> and <highlight><bold>302</bold></highlight> also includes a multiplexer/demultiplexer <highlight><bold>320</bold></highlight> which provides an interface between the physical layer processor <highlight><bold>318</bold></highlight> and each of the redundant duplex cross-connects <highlight><bold>304</bold></highlight> and <highlight><bold>306</bold></highlight>. Communications traffic may travel to/from either of the illustrated SONET interface cards <highlight><bold>300</bold></highlight> or <highlight><bold>302</bold></highlight> through either of the cross-connects <highlight><bold>304</bold></highlight> or <highlight><bold>306</bold></highlight> to/from any of the service cards <highlight><bold>308</bold></highlight>, <highlight><bold>310</bold></highlight>, or <highlight><bold>312</bold></highlight>. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Each of the service cards <highlight><bold>308</bold></highlight>, <highlight><bold>310</bold></highlight>, <highlight><bold>312</bold></highlight> includes multiplexer/demultiplexers <highlight><bold>322</bold></highlight> and <highlight><bold>324</bold></highlight> which provide an interface between the cross-connects <highlight><bold>304</bold></highlight> and <highlight><bold>306</bold></highlight> and data interfaces <highlight><bold>326</bold></highlight> and <highlight><bold>328</bold></highlight>. The data interfaces <highlight><bold>326</bold></highlight> and <highlight><bold>328</bold></highlight> operate to delineate cells and packets in the data streams received from the digital cross-connects <highlight><bold>304</bold></highlight> and <highlight><bold>306</bold></highlight>, or, alternatively, to assemble or encapsulate packets and cells received from OC48 layer 2/3 processors <highlight><bold>330</bold></highlight> and <highlight><bold>332</bold></highlight> into data streams suitable for transmission through the SONET cross-connects <highlight><bold>304</bold></highlight> and <highlight><bold>306</bold></highlight>. They also combine streams from cross-connects <highlight><bold>304</bold></highlight> and <highlight><bold>306</bold></highlight> and from various interfaces and presents them to the layer 2/3 functionality. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> A packet-based switch in accordance with the principles of the present invention may be used as a multiservice switch. Such switches, when used by communications providers for wide area networks, for example, typically provide a number of different interfaces for access to and from the core switching fabric in order to accommodate customer needs. The different interfaces may be provided through service shelves which then couple to the switching core. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Such a switch may include a core interface mechanism that permits 1:N type port protection on the core side of the switch such that core bandwidth is not wasted by the direct connection of service cards to the switching core. Referring to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, there is shown one exemplary embodiment of a multiservice switch <highlight><bold>400</bold></highlight>. The switch <highlight><bold>400</bold></highlight> includes a service shelf <highlight><bold>412</bold></highlight> which incorporates a core interface <highlight><bold>414</bold></highlight>. As would be understood, the functional blocks illustrated in the figure may take the form of one or more cards or modules that are insertable into a rack or other similar type system. The service shelf <highlight><bold>412</bold></highlight> couples to first and second redundant switching cores <highlight><bold>416</bold></highlight>, <highlight><bold>418</bold></highlight>. A second service shelf <highlight><bold>420</bold></highlight> couples to what can be considered the output side of the switching cores. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> As shown, the general makeup of the service shelf <highlight><bold>412</bold></highlight> includes a physical layer interface card <highlight><bold>422</bold></highlight> which is a user interface that can be an optical or electrical interface, e.g., DS3, OC-12, OC-48, OC-192, etc. In the case of the high speed shelf shown, the physical layer is generally a high density optical interface such as OC-48 or OC-192. The physical layer card <highlight><bold>422</bold></highlight> couples to higher level service cards <highlight><bold>424</bold></highlight>, <highlight><bold>426</bold></highlight>, <highlight><bold>428</bold></highlight> (for example, layer 2 or layer 3 for ATM or IP) through a cross connect device <highlight><bold>430</bold></highlight>, for example, a SONET STS-1 level cross-connect. The service cards <highlight><bold>424</bold></highlight> couple to the switching core through core interface modules <highlight><bold>414</bold></highlight>. As shown, the switching cores <highlight><bold>416</bold></highlight>, <highlight><bold>418</bold></highlight> are traditional switch cores including input/output ports <highlight><bold>432</bold></highlight> as well as switching fabrics <highlight><bold>434</bold></highlight>. The physical layer interface card <highlight><bold>422</bold></highlight>, cross-connect device <highlight><bold>430</bold></highlight>, and higher level service cards <highlight><bold>424</bold></highlight> and <highlight><bold>426</bold></highlight> combine to form a physical layer/higher processor, as described in the discussion related to <cross-reference target="DRAWINGS">FIGS. 1,2</cross-reference>, and <highlight><bold>3</bold></highlight>. Multiple sets of higher level service cards may be connected to the cross-connect device <highlight><bold>430</bold></highlight>. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The interface mechanism between the service cards <highlight><bold>412</bold></highlight> and the core <highlight><bold>416</bold></highlight>, <highlight><bold>418</bold></highlight> provides redundancy protection between the service cards and core without the requirement that extra core bandwidth be allofted for the protection cards. As shown in the exemplary embodiment, two on-line ATM service cards <highlight><bold>424</bold></highlight> are protected by one back-up or protect service card <highlight><bold>426</bold></highlight>. The core interface card <highlight><bold>414</bold></highlight> permits routing of core data to and from any of the three cards. In addition, the protection card <highlight><bold>426</bold></highlight> can be switched in place without the corresponding re-routing having to be known to the rest of the system. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 5, a</cross-reference> detailed block diagram of a service shelf <highlight><bold>412</bold></highlight> in accordance with the present invention is shown. <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates the interface between the service cards <highlight><bold>424</bold></highlight>, <highlight><bold>426</bold></highlight> and the switching core via the core interface modules <highlight><bold>414</bold></highlight>, where the specific interconnects between the service cards and the core interface are shown. In the exemplary embodiment, the service shelf <highlight><bold>412</bold></highlight> includes nine service cards (SC<highlight><bold>0</bold></highlight>-SC<highlight><bold>8</bold></highlight>) which couple, respectively, to six core interface cards (C<highlight><bold>10</bold></highlight>-C<highlight><bold>15</bold></highlight>). As in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, two on-line service cards <highlight><bold>424</bold></highlight> and one protect service card <highlight><bold>426</bold></highlight> couple to the switching cores through each core interface card providing 1:2 redundancy. Also included in the service shelf are shelf control processor cards <highlight><bold>536</bold></highlight> which handle administrative processing functions for the shelf. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The core interface cards <highlight><bold>414</bold></highlight> couple to redundant switch cores <highlight><bold>416</bold></highlight>, <highlight><bold>418</bold></highlight> (illustrated in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>). A core interface card <highlight><bold>414</bold></highlight> monitors its link to the core and reports status to the shelf control processor <highlight><bold>536</bold></highlight> on the service shelf. Referring to <cross-reference target="DRAWINGS">FIG. 6</cross-reference> in combination with <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, an exemplary block diagram of a core interface card <highlight><bold>414</bold></highlight> is shown. As shown, service cards <highlight><bold>424</bold></highlight>, <highlight><bold>426</bold></highlight> couple to the core through an aggregator device <highlight><bold>638</bold></highlight> in the core interface card <highlight><bold>414</bold></highlight>. Interconnections between the aggregator in the core interface and the arbiter blocks on the service cards are illustrated with double arrows. (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>). The aggregator device <highlight><bold>638</bold></highlight> acts as an interface between the service cards <highlight><bold>412</bold></highlight> and the switching core and essentially distributes core traffic throughout the service shelf. The aggregator <highlight><bold>638</bold></highlight> acts a datapath flow switch, directing flows to either the normally active service card slot or to the dedicated protection slot. In all cases, the aggregator <highlight><bold>638</bold></highlight> will allow control information connectivity through the core to all attached service cards <highlight><bold>424</bold></highlight>, <highlight><bold>426</bold></highlight> and shelf control processors <highlight><bold>536</bold></highlight>. Although shown and described as an applications specific integrated circuit (ASIC), it would be understood that the functionality of the aggregator <highlight><bold>638</bold></highlight> as described herein may also be implemented using discrete components, programmable device or a combination thereof. As shown in <cross-reference target="DRAWINGS">FIGS. 5 and 6</cross-reference>, the core side of the aggregator <highlight><bold>638</bold></highlight> couples to multiple serializer/deserializer blocks <highlight><bold>640</bold></highlight>. The implementation and function of a serializer/deserializer would be well known to a person skilled in the art. The serializer/deserializers <highlight><bold>640</bold></highlight> couple to optical/electrical (O/E) components <highlight><bold>642</bold></highlight> in order to provide the interface to the switching core. Failure of a link will be detected by a serializer/deserializer <highlight><bold>640</bold></highlight> or the aggregator device <highlight><bold>638</bold></highlight> and reported to the shelf control processor <highlight><bold>536</bold></highlight> through a control interface on the aggregator. Failures may be detected, for example, by the loss of a clock signal corresponding to the link or an invalid parity across the link. Other types of failures that are detectable and that can be characterized as a link failure would be apparent to those skilled in the art. As will be explained, the shelf control processor <highlight><bold>536</bold></highlight> (in combination with the aggregator <highlight><bold>638</bold></highlight>) trigger appropriate corrective action in response to a link failure. The aggregator <highlight><bold>638</bold></highlight> on the core interface card <highlight><bold>414</bold></highlight> also contains a thread switch function <highlight><bold>644</bold></highlight> for service card protection. The switch function <highlight><bold>644</bold></highlight> allows the core interface card <highlight><bold>414</bold></highlight> to steer traffic on a given thread to/from an active service card to a protection card. For the shelf, service card protection will be 1:2. The core interface card <highlight><bold>414</bold></highlight> (and the shelf control processor <highlight><bold>536</bold></highlight>) will control the protection switching of the interface. In addition, as will be explained, an arbiter function on the service card can detect link failures on the basis, for example, of the receipt/non-receipt of link test cells. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows a functional block diagram of the aggregator device <highlight><bold>638</bold></highlight>. The aggregator <highlight><bold>638</bold></highlight> includes ingress receive logic <highlight><bold>750</bold></highlight> and egress transmit logic <highlight><bold>752</bold></highlight> on the service card side. Ingress transmit logic <highlight><bold>754</bold></highlight> and egress receive logic <highlight><bold>756</bold></highlight> are also found on the core side of the aggregator <highlight><bold>638</bold></highlight>. There are two aggregation functions&mdash;AGR<highlight><bold>0</bold></highlight> and AGR<highlight><bold>1</bold></highlight>&mdash;implemented in the aggregator (AGR) ASIC, each performing an aggregation of up to 6 independent data streams into a 2.5 Gbps thread. These two aggregation functions are independent and the operation of one does not affect any state of the other. In one exemplary embodiment, each aggregator function AGR<highlight><bold>0</bold></highlight>, AGR<highlight><bold>1</bold></highlight> includes a multiplexer unit <highlight><bold>758</bold></highlight> which couples to the ingress receive logic <highlight><bold>750</bold></highlight>, a cell decode unit <highlight><bold>760</bold></highlight> which couples to the output of the multiplexer <highlight><bold>758</bold></highlight> and a buffer management unit <highlight><bold>762</bold></highlight> which couples to the output of the cell decode unit <highlight><bold>760</bold></highlight>. A credit/grant manager function <highlight><bold>764</bold></highlight> and a multicast unit <highlight><bold>766</bold></highlight> each couple to the output of the buffer management unit <highlight><bold>762</bold></highlight>. A virtual output queue (VOQ) memory interface <highlight><bold>768</bold></highlight> and a pointer memory interface <highlight><bold>770</bold></highlight> each couple to the multicast unit <highlight><bold>766</bold></highlight>. A VOQ scheduler <highlight><bold>772</bold></highlight> couples to the credit/grant manager <highlight><bold>764</bold></highlight>. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The AGR ASIC communicates with the service shelf cards through an arbiter (ARB) ASIC <highlight><bold>776</bold></highlight> over an 8-bit LVDS (low voltage differential signal) interface (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>). This interface runs, for example, at 266 MHz with data being transferred on both clock edges. As shown, the AGR ASIC has 8 ARB interface (AIF) ports. Four of these AIF ports can be configured to connect to either of the aggregation functions in the AGR ASIC. Of the remaining four AIF ports (P<highlight><bold>0</bold></highlight>-P<highlight><bold>7</bold></highlight>), two are connected to aggregation function <highlight><bold>0</bold></highlight> (AGR<highlight><bold>0</bold></highlight>) and the other two are connected to aggregation function <highlight><bold>1</bold></highlight> (AGR<highlight><bold>1</bold></highlight>). Thus, a maximum of six AIF ports can be connected to each aggregation function. In the ingress direction, each aggregation function statistically multiplexes a combination (maximum of 6 data streams) of OC-12, 2&times;OC-12, and OC-48c data streams into a 2.5 Gbps stream. In the egress direction, each aggregation function broadcasts an OC48 thread coming from the core to the six (6) ARB ASICS connected to that thread. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> As discussed above, the AGR ASIC communicates with the switch core, for example, on OC-48 links through quad serializer/deserializer (Serdes) <highlight><bold>40</bold></highlight> and Optical/Electrical ports <highlight><bold>642</bold></highlight>. The Serdes transmitter <highlight><bold>640</bold></highlight> serializes and encodes the data, e.g. 8B10B data, for proper transmission over the fiber link. The receiver will deserialize, decode and also synchronize the four channels (channel lock) before transmitting the data to the aggregator (AGR) ASIC <highlight><bold>638</bold></highlight>. Optical/Electrical components take the electrical signals produced by the Serdes and convert them to optical signals for fiber link transmission and take optical signals from the link and convert them to electrical signals for Serdes processing. In one embodiment of the invention, for example, a 96-byte data cell is striped among four channels. This data cell includes the 84-byte packet and 12-bytes of control data. Data is transferred between the aggregator ASIC and each Serdes on a 4&times;8-bit unidirectional bus. This cell is transmitted in twenty-four 155.52 MHz-clock cycles. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> The AGR ASIC <highlight><bold>638</bold></highlight> is used in high speed and low speed applications, where the respective service shelves are accordingly termed high speed service shelves (HSS) and low speed service shelves (LSS). In the HSS and LSS applications, the AGR <highlight><bold>638</bold></highlight> resides in the HSS and LSS core interface cards, respectively. In the exemplary embodiment of the high speed shelf <highlight><bold>412</bold></highlight>, the core interface card in the HSS uses two AGR ASICS <highlight><bold>638</bold></highlight> and provides 10 Gbps (4&times;2.5 Gbps) interface to the switch core. In the exemplary embodiment of the low speed shelf (see <cross-reference target="DRAWINGS">FIG. 8</cross-reference>), the core interface card <highlight><bold>880</bold></highlight> in the LSS uses one AGR ASIC <highlight><bold>638</bold></highlight> and provides 5 Gbps (2&times;2.5 Gbps) interface to the Switch Core. The AGR is software configurable based on the specific application. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> In the exemplary embodiment, the AGR ASIC includes 8 AGR-ARB interfaces each with a data rate of OC48. All of the eight AGR-ARB interfaces (AIF ports P<highlight><bold>0</bold></highlight> through P<highlight><bold>7</bold></highlight>) are software configurable to operate the AGR ASIC in different configurations required for different shelves (e.g. the High-Speed Shelf and Low-Speed Shelf. Setting a corresponding port enable bit in AIF Port Control Register 0 &amp; 1 can activate each interface. AIF ports P<highlight><bold>0</bold></highlight> &amp; P<highlight><bold>1</bold></highlight> are connected to the aggregation function <highlight><bold>0</bold></highlight> (AGR<highlight><bold>0</bold></highlight>) and ports P<highlight><bold>6</bold></highlight> &amp; P<highlight><bold>7</bold></highlight> are connected to aggregation function <highlight><bold>1</bold></highlight> (AGR<highlight><bold>1</bold></highlight>). Ports P<highlight><bold>2</bold></highlight> through P<highlight><bold>5</bold></highlight> can be connected to either aggregation functions (AGR<highlight><bold>0</bold></highlight> or AGR<highlight><bold>1</bold></highlight>), depending upon the AGRn_SEL bit in the AIF Port Configuration Register. Therefore, at any time at most 6 AIF ports can connect to one OC-48 thread. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> In the high-speed shelf, the core interface card <highlight><bold>414</bold></highlight> has two AGR ASICs <highlight><bold>638</bold></highlight> (AGR-A and AGR-B) residing on it and provides an aggregate bandwidth of 10 Gbps to the core. Each AGR ASIC <highlight><bold>638</bold></highlight> is connected to one 5 Gbps high-speed service card and to one of the two 2.5 G ARB interfaces on the protection card. One of the two AGR ASICs will also have a shelf control processor (SCP) card(s) connected to it. Each SCP has an average data rate of 622 Mbps (OC-12). </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> In the low-speed shelf (<cross-reference target="DRAWINGS">FIG. 8</cross-reference>), the core interface card <highlight><bold>880</bold></highlight> has one AGR ASIC <highlight><bold>638</bold></highlight> and provides two 2.5 Gbps aggregated threads to the core. The AGR ASIC interfaces with the ARB ASIC in 4 low-speed service cards, 2 protection cards, and 2 shelf control processor (SCP) cards. All low-speed cards have an average data rate of 2&times;OC-12, however, in burst traffic conditions, the interfaces can support a peak data rate of OC-48. <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows AGR in LSS core interface card. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Referring again to <cross-reference target="DRAWINGS">FIGS. 4 and 5</cross-reference>, it can be seen that the service cards <highlight><bold>424</bold></highlight>, <highlight><bold>426</bold></highlight> will receive flows from the redundant cores through the core interface card <highlight><bold>414</bold></highlight>. An arbiter function (ARB) <highlight><bold>776</bold></highlight> in the service cards <highlight><bold>424</bold></highlight>, <highlight><bold>426</bold></highlight> will monitor the end to end path of the flows through special in-band test messages over both cores. If a flow is failed, the destination ARB will automatically switch and accept traffic through the protection path from the redundant core and core interface card (this needn&apos;t affect other flows within the switch). The source ARB will always broadcast traffic and test messages through both cores. The AGR interfaces with an Arbiter device/circuit that resides on all service cards and shelf control processors <highlight><bold>36</bold></highlight> to complete the core interface. From a high level the ARB <highlight><bold>776</bold></highlight> is intended to merge traffic flows from each core as necessary, on a per flow basis, and act as a header translator and filter for traffic flows from the cores. The ARB and AGR also provide flow checking and fault detection checking. A significant advantage of the present invention is the ability to switch individual flows without impacting other flows within the switching system. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, one exemplary embodiment of a high level service card <highlight><bold>412</bold></highlight> is shown. As illustrated, the service card is an ATM service card, although it would be understood that other types of service cards, for example IP, frame relay, and TDM. The service card shown provides 2&times;2.5 Gbps threads and provides the ATM layer and traffic management functions for the service shelf. As shown, cross connect interface terminations <highlight><bold>986</bold></highlight> couple to the ATM (layer 2) processing blocks <highlight><bold>988</bold></highlight>. The ATM blocks <highlight><bold>988</bold></highlight> couple to respective traffic management functional blocks <highlight><bold>90</bold></highlight> as well as to the ARB ASIC <highlight><bold>976</bold></highlight> providing the two threads. The ATM layer blocks <highlight><bold>988</bold></highlight> also couple to a segmentation and reassembly function (SAR) <highlight><bold>992</bold></highlight> that couples to a local processor <highlight><bold>994</bold></highlight> via a PCI bus. The service card also includes timing and power functions <highlight><bold>998</bold></highlight>. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> The Arbiter ASIC, or ARB ASIC <highlight><bold>976</bold></highlight>, will be used in the switching system as a flow control mechanism for cell traffic as well as a test cell generator and receiver for system level flow verification. As with the aggregator device, although the exemplary embodiment is described with respect to an ASIC, it would be understood that such a device may also be implemented using discrete components. The ARB is utilized, for example, in the high speed shelf, the low speed shelf, and interfaces on one side to a physical layer device such as a scheduler, also known as a traffic manager or TM. On the opposite side, the ARB interfaces to the aggregator (AGR). The ARB ASIC includes a UTOPIA II bus for interfacing with a SAR for processor to processor communication. The ARB also supports an external memory interface for GMID (global multicast ID) to ECID (egress circuit ID) translation. The ARB ASIC contains a test cell generator and a test cell receiver to test online and off-line cell flows through the core. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The ARB resides on a service card and forwards user traffic (from the physical interface) to the core interface cards at an OC48 (2.5 Gbps) rate. The ARB receives traffic from the core interfaces and will forward traffic destined to its TM device. An ARB also resides on the SCP. In the SCP application, the ARB interfaces to a SAR device to enable processor to processor communication and will not interface to a TM device. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 10, a</cross-reference> functional block diagram of the ARB ASIC <highlight><bold>976</bold></highlight> is shown. The exemplary embodiment of the ARB includes six interfaces: a PCI (processor interface) interface, a physical layer interface (PI Sched RX and TX), a SAR interface (RX and TX), two AGR interfaces (RX and TX, one per core) and an external memory interface. As discussed previously, the ARB includes a link test cell generator <highlight><bold>1102</bold></highlight> and a link test cell receiver <highlight><bold>1104</bold></highlight> which will be used in the system to verify flow integrity. The link test cell (LTC) generator <highlight><bold>1102</bold></highlight> and receiver <highlight><bold>1104</bold></highlight> couple to the aggregator interface <highlight><bold>13</bold></highlight> <highlight><bold>106</bold></highlight>, the link test cell receiver <highlight><bold>1104</bold></highlight> coupling through respective egress filters <highlight><bold>1108</bold></highlight>. The ARB also includes internal priority queues (four QOS levels) <highlight><bold>1110</bold></highlight> for egress traffic, the inputs of which couple to the egress filter <highlight><bold>1108</bold></highlight>. The priority queues couple to egress transmit ports (TM and Utopia) <highlight><bold>1112</bold></highlight>, <highlight><bold>1114</bold></highlight> through a scheduler <highlight><bold>1116</bold></highlight> or <highlight><bold>1118</bold></highlight>. The egress filters <highlight><bold>1108</bold></highlight> in the ARB provide a filtering function that is used to determine if the ARB should accept unicast and multicast cells from the AGRs. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The ARB <highlight><bold>976</bold></highlight> operates in one of two modes. If the ARB resides on a service card (either in the high speed shelf or the low speed shelf), the ARB will be in TM mode in which all traffic is sent and received via the TM device or via the test cell interface. If the ARB resides on a processor card the ARB will be in SAR mode in which all traffic will be sent and received via the SAR or via the test cell interface. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> From an ingress standpoint (with relation to the core), if the ARB <highlight><bold>976</bold></highlight> is in TM mode, user cells will enter through the physical layer interface TM. BIP8 calculations (bit interleaved parity across 8 bit boundaries) will be checked on a per cell basis and optionally drop BIP8 erred cells. Cells entering the ARB through the physical layer interface will be broadcast to both AGR ports (and sent to both cores). Internally generated link test cells will be combined with the user traffic in the ARB ASIC and sent to both AGR ports. The link test cell generator <highlight><bold>1102</bold></highlight> can optionally back pressure the TM device using a back pressure table <highlight><bold>1116</bold></highlight> to create space for test cell insertion. If no user cells or test cells exist, idle cells will be inserted to sustain the flow. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> If the ARB is in SAR mode, cells will be accepted from the SAR device and the TM interface will be ignored. Again, the SAR cells will be combined with the internally generated test cells and sent to both AGR ports. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> From an egress standpoint, cells will enter the ARB via one of two AGR interfaces. When a cell first enters the ARB, a check will be done to determine if the cell is a test cell, a unicast cell, a multicast cell, or an idle cell. Filters and checks will be done to forward the cell to the appropriate interface (TM/SAR or LTC receiver). BIP8 calculations will be checked on a per cell basis and optionally drop BIP8 erred cells. Cells destined for the TM/SAR are placed in one of four priority queues <highlight><bold>1110</bold></highlight> based on a QOS field in the cell. Cells from both AGR interfaces are placed into the same queues. Cells will be read from the priority queues based on either a fixed priority or a programmable priority depending on scheduler mode and sent to the TM or SAR based on mode. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> The egress queue back pressure mechanism will exist to prevent the egress priority queues from overflowing. Back pressure information will be inserted into the ingress path back to the AGRs. The ARB will also track and forward back pressure information from the AGRs to the TM device. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The PCI interface <highlight><bold>1120</bold></highlight> provides access to on chip register and tables as well as off chip memory. In an exemplary embodiment, the PCI interface will be 32 bits wide and support a maximum frequency of 33 MHz. Burst access will be provided to on chip tables and off chip memory when the corresponding function is not enabled. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> In accordance with the present invention, it can be seen that at the service shelf (SS) level the core interface cards are redundant on a per core basis. The service cards (SC) are 1:N redundant, (e.g., 1:2) without wasting core bandwidth. The AGR provides support for 1:N service card redundancy in the HSS and LSS applications. <cross-reference target="DRAWINGS">FIG. 6</cross-reference> and <cross-reference target="DRAWINGS">FIG. 8</cross-reference> depicted the AGR in the high-speed and the low-speed configurations. In the HSS application (see <cross-reference target="DRAWINGS">FIG. 6</cross-reference>), the core interface card <highlight><bold>414</bold></highlight> connects to one protection card (PC) that can protect any one of two service cards (SC<highlight><bold>0</bold></highlight> and SC<highlight><bold>1</bold></highlight>). In the LSS application (see <cross-reference target="DRAWINGS">FIG. 8</cross-reference>), the core interface card <highlight><bold>80</bold></highlight> connects to two protection cards (PC<highlight><bold>0</bold></highlight> and PC<highlight><bold>1</bold></highlight>) each can protect any of the four service cards (SC<highlight><bold>0</bold></highlight>, SC<highlight><bold>1</bold></highlight>, SC<highlight><bold>2</bold></highlight>, and SC<highlight><bold>3</bold></highlight>). </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> In the HSS application, as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, ARB<highlight><bold>0</bold></highlight> and ARB<highlight><bold>1</bold></highlight> of the SC<highlight><bold>0</bold></highlight> and ARB<highlight><bold>0</bold></highlight> of the PC are connected to AGR ASIC-A. Similarly, ARB<highlight><bold>0</bold></highlight> and ARB<highlight><bold>1</bold></highlight> of the SC<highlight><bold>1</bold></highlight> and ARB<highlight><bold>1</bold></highlight> of the PC are connected to AGR ASIC-B. Since there are two service cards (SC<highlight><bold>0</bold></highlight> and SC<highlight><bold>1</bold></highlight>) each connected to two different AGR ASICs and there is only one protection card (PC) to protect them, a cross-connect is needed between two AGR ASICs on the HSS CIC card. When PC is protecting the SC<highlight><bold>0</bold></highlight>, PC-ARB<highlight><bold>0</bold></highlight> protects SC<highlight><bold>0</bold></highlight>-ARB<highlight><bold>0</bold></highlight> directly and PC-ARB<highlight><bold>1</bold></highlight> protects SC<highlight><bold>0</bold></highlight>-ARB<highlight><bold>1</bold></highlight> indirectly through the external cross-connect. Conversely, when PC is protecting the SC<highlight><bold>1</bold></highlight>, PC-ARB<highlight><bold>1</bold></highlight> protects SC<highlight><bold>1</bold></highlight>-ARB<highlight><bold>1</bold></highlight> directly and PC-ARB<highlight><bold>0</bold></highlight> protects SC<highlight><bold>1</bold></highlight>-ARB<highlight><bold>0</bold></highlight> indirectly through the external cross-connect. The cross-connect enable bit (XCON_EN) in the AIF Redundancy Register is provided to enable and disable the external cross-connect. When enabled, the protection port on the AGR ASIC protects the &ldquo;remote&rdquo; ARB connected through the external cross-connect. When XCON_EN is disabled, the protection port on the AGR would protect the &ldquo;local&rdquo; ARB. For example, if the XCON_EN bit in AGR ASIC A is enabled, PC-ARB<highlight><bold>0</bold></highlight> would protect SC<highlight><bold>1</bold></highlight>-ARB<highlight><bold>0</bold></highlight> through the external cross-connect. If the XCON-EN bit in AGR ASIC A is disabled, PC-ARB<highlight><bold>0</bold></highlight> would protect SC<highlight><bold>0</bold></highlight>-ARB<highlight><bold>0</bold></highlight>. This XCON-EN bit is used in HSS applications only and it should be disabled in LSS and NEP applications. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> In the LSS application (see <cross-reference target="DRAWINGS">FIG. 8</cross-reference>), since there is only one AGR ASIC on the core interface card, external cross-connect is not needed. Therefore, the XCON_EN bit is disabled and only AGRn_SEL bits for the protection ports are used to configure the protection ports. On the ingress side, data from a protection card can go to one of two OC-48 threads to the switch based on the card it is protecting. Similarly, on the egress side, data from one of two threads can now go to a protection card. The AGRn_SEL bit (in AGRn Port Configuration Register associated with the protection port is used to select one of two threads. This bit is set by the processor during switchover. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> As discussed, support for 1:N service card redundancy is provided in the AGR <highlight><bold>638</bold></highlight>. In the described embodiments of the HSS and the LSS one protection card (a hot standby) is provided for every two service cards. In order to provide the redundancy protection and allow for seamless traffic switchover between the protection card and service card, an address mapping scheme, termed a Z-mapping scheme (after the different address fields) is implemented. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> All the ARB ASICS <highlight><bold>976</bold></highlight> in a switch utilizing the present invention interface are uniquely identified from a flow/connection standpoint based on an X.Y.Z addressing scheme. The X portion of the address represents an 8-bit OC192 port ID used for addressing one of 256 fabric output ports. A 2-bit Y field addresses the four OC 48 ports within an OC 192 port addressed by X. That is, Y specifies one of the four OC48 links between the switching core and a core interface card. A 3-bit bit Z field addresses an ARB ASIC or AIF port associated with an OC48 thread (PIF thread). The X.Y.Z value is stored in the packet header and is used by the switch fabric in the core and the line card on the service shelf to route packets to the correct destination card/port. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> On the egress side, all user data cells and test cells received from the core are broadcast to all ARBS associated with an OC48 PIF thread. These cells contain a 3-bit E_Z (egress) field that identifies one of 8 destination ARBs connected to the AGR. Each ARB also has a unique Z ID stored in its Z&lsqb;2:0&rsqb; register. Upon receiving a cell from the AGR, the ARB compares the E_Z&lsqb;2:0&rsqb; field of the incoming cell with its Z ID. If the Z values match, the cell is processed, otherwise the cell is dropped. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> When a service card fails, the associated egress traffic is switched to a protection card. In order to accomplish the switching, the AGR uses a 3-bit wide, eight entry deep Z-mapping table with each entry associated with one of the eight AIF ports. Each entry in the Z-mapping table contains the current mapped/unmapped Z address of the corresponding AIF port. The egress transmit logic in the AGR receives a cell from the egress receive logic, it looks up the Z mapping table used to overwrite the E_Z field of the outgoing egress cell. During normal operation, each entry in this table contains the Z address of the ARB connected to the associated AIF port. When one of the service cards fails, the Z address of the failed card and the protection card are swapped by the associated software. The Z address of the failed service card is now mapped to the Z address of the protection card and vice versa. Consequently, the egress traffic destined for the failed service card will now be accepted by the protection card. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> It is desirable to have the Z-mapping table lookup disabled for test cells. For example, when a service card is being protected, it must still be able to receive test cells destined to it. Thus, test cells destined for the failed service card must not be mapped whereas user data cells destined for the same card must be mapped. The IGNR_Z bit in the egress cell header is therefore provided to override the Z-mapping lookup table. Hence, the Z-mapping table lookup will only be performed when the IGNR_Z bit is set to 0. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> The foregoing description merely illustrates the principles of the invention. It will thus be appreciated that those skilled in the art will be able to devise various arrangements, which, although not explicitly described or shown herein, embody the principles of the invention, and are included within its spirit and scope. Furthermore, all examples and conditional language recited are principally intended expressly to be only for instructive purposes to aid the reader in understanding the principles of the invention and the concepts contributed by the inventor to furthering the art, and are to be construed as being without limitation to such specifically recited examples and conditions. Moreover, all statements herein reciting principles, aspects, and embodiments of the invention, as well as specific examples thereof, are intended to encompass both structural and functional equivalents thereof. Additionally, it is intended that such equivalents include both currently known equivalents as well as equivalents developed in the future, i.e., any elements developed that perform the same function, regardless of structure. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> In the claims hereof any element expressed as a means for performing a specified function is intended to encompass any way of performing that function including, for example, a) a combination of circuit elements which performs that function or b) software in any form, including, therefore, firmware, microcode or the like, combined with appropriate circuitry for executing that software to perform the function. The invention as defined by such claims resides in the fact that the functionalities provided by the various recited means are combined and brought together in the manner which the claims call for. Applicant thus regards any means which can provide those functionalities as equivalent as those shown herein. Many other modifications and applications of the principles of the invention will be apparent to those skilled in the art and are contemplated by the teachings herein. Accordingly, the scope of the invention is limited only by the claims appended hereto. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A telecommunications apparatus comprising: 
<claim-text>a plurality of telecommunications physical layer interfaces, </claim-text>
<claim-text>one or more telecommunications higher-layer processors, and </claim-text>
<claim-text>a digital cross-connect connected to route telecommunications traffic among the physical layer interfaces and the one or more higher-layer processors. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein at least one of the physical layer interfaces is a SONET physical layer interface. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. Th apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein a higher layer processor is an asynchronous transfer mode (ATM) processor. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein a higher layer processor is an internet protocol (IP) processor. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein the digital cross-connect is configured to provide 1:1 automatic protection switching for communications traffic from at least one of the physical layer interfaces to one or more higher-layer interfaces. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein the digital cross-connect is configured to provide 1:N automatic protection switching for communications traffic from at least one of the physical layer interfaces to one or more higher-layer interfaces. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein the digital cross-connect is configured to provide 1:1 automatic protection switching for communications traffic to at least one of the physical layer interfaces from one or more higher-layer interfaces. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein the digital cross-connect is configured to provide N:1 automatic protection switching for communications traffic to at least one of the physical layer interfaces from one or more higher-layer interfaces. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A packet-switching system comprising: 
<claim-text>one or more telecommunications apparatuses, each apparatus including: 
<claim-text>a plurality of telecommunications physical layer interfaces, </claim-text>
<claim-text>one or more telecommunications higher-layer processors, and </claim-text>
<claim-text>a digital cross-connect connected to route telecommunications traffic among the physical layer interfaces and the one or more higher-layer processors, and </claim-text>
</claim-text>
<claim-text>a packet switch fabric connected to switch telecommunications traffic received at one or more of the physical layer interfaces to one or more of the physical layer interfaces. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein at least one of the physical layer interfaces is a SONET physical layer interface. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein a higher layer processor is an asynchronous transfer mode (ATM) processor. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein a higher layer processor is an internet protocol (IP) processor. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein the digital cross-connect is configured to provide 1:1 automatic protection switching for communications traffic from at least one of the physical layer interfaces to one or more higher-layer interfaces. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein the digital cross-connect is configured to provide 1:N automatic protection switching for communications traffic from at least one of the physical layer interfaces to one or more higher-layer interfaces. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein the digital cross-connect is configured to provide 1:1 automatic protection switching for communications traffic to at least one of the physical layer interfaces from one or more higher-layer interfaces. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein the digital cross-connect is configured to provide N:1 automatic protection switching for communications traffic to at least one of the physical layer interfaces from one or more higher-layer interfaces. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A method of switching telecommunications traffic comprising the steps of: 
<claim-text>(A) receiving telecommunications traffic at a telecommunications physical interface; </claim-text>
<claim-text>(B) routing the received telecommunications traffic from the physical interface to a digital cross-connect; and </claim-text>
<claim-text>(C) routing the telecommunications traffic through the cross-connect to a telecommunications higher-layer processor. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> further comprising the step of: 
<claim-text>(D) routing the telecommunications from the higher-layer processor through a packet switch fabric to a higher-layer processor; </claim-text>
<claim-text>(E) routing the telecommunications from the higher layer processor to a digital cross-connect; and </claim-text>
<claim-text>(F) routing the telecommunications from the higher layer processor to a telecommunications physical interface. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> wherein the step (A) of receiving telecommunications traffic further comprises the step of: 
<claim-text>(A1) receiving telecommunications at a SONET physical layer interface. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> wherein the step (C) of routing the telecommunications traffic further comprises the step of: 
<claim-text>(C1) routing the telecommunications traffic to an asynchronous transfer mode (ATM) processor. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> wherein the step (C) of routing the telecommunications traffic further comprises the step of: 
<claim-text>(C2) routing the telecommunications traffic to an internet protocol (IP) processor. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> wherein the step (C) of routing the telecommunications traffic further comprises the step of: 
<claim-text>(C3) providing 1:1 automatic protection switching for communications traffic from at least one of the physical layer interfaces to one or more higher-layer interfaces. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> wherein the step (C) of routing the telecommunications traffic further comprises the step of: 
<claim-text>(C4) providing 1:N automatic protection switching for communications traffic from at least one of the physical layer interfaces to one or more higher-layer interfaces. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference> wherein the step (E) of routing the telecommunications traffic further comprises the step of: 
<claim-text>(E1) providing 1:1 automatic protection switching for communications traffic to at least one of the physical layer interfaces from one or more higher-layer interfaces. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference> wherein the step (E) of routing the telecommunications traffic further comprises the step of: 
<claim-text>(E2) providing N:1 automatic protection switching for communications traffic to at least one of the physical layer interfaces from one or more higher-layer interfaces..</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002505A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002505A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002505A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002505A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002505A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002505A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002505A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002505A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002505A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002505A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002505A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
