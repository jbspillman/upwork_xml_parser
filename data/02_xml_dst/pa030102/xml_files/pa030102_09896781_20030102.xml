<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005246A1-20030102-D00000.TIF SYSTEM "US20030005246A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005246A1-20030102-D00001.TIF SYSTEM "US20030005246A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005246A1-20030102-D00002.TIF SYSTEM "US20030005246A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005246A1-20030102-D00003.TIF SYSTEM "US20030005246A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005246A1-20030102-D00004.TIF SYSTEM "US20030005246A1-20030102-D00004.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005246</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896781</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F012/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>711</class>
<subclass>163000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>711</class>
<subclass>115000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Protection of content stored on portable memory from unauthorized usage</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Marcus</given-name>
<family-name>Peinado</family-name>
</name>
<residence>
<residence-us>
<city>Bellevue</city>
<state>WA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>Microsoft Corporation</organization-name>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>Peter M. Ullman</name-1>
<name-2>Woodcock Washburn Kurtz Mackiewicz &amp; Norris LLP</name-2>
<address>
<address-1>One Liberty Place - 46th Floor</address-1>
<city>Philadelphia</city>
<state>PA</state>
<postalcode>19103</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A device for securely recording protected content to a portable memory, and for reading the protected content therefrom. The device includes a feature that makes it adapted to read or write specially-configured portable memories that are incompatible with standard read/write devices. For example, the device may be designed to work with memories having an unusual shape or size, or may manipulate the data in a non-standard way before storing it on the memory. The read/write devices are trusted components that will only handle the protected content in accordance with rules governing the content. The feature included in the device is preferably a proprietary and/or hardware feature, so that counterfeit devices incorporating the feature cannot be built without overcoming economic and/or legal hurdles. Because of the hurdles to building devices compatible with the specially-configured portable memory, protected content can be transferred to such a memory with reasonable assurance that the content will not be widely copied. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention is directed generally to the protection of digital content. More particularly, the invention is directed to a system and method for protecting content stored on portable memory against unauthorized use. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Portable memories may be used to store content and transfer the content between computing devices. Examples of such portable memories include CD-ROM, DVD-ROM, floppy disk, tape, flash memories, etc. Data may be recorded onto one of these portable memories using a read/write device connected to a first computer. The portable memory may then be removed from the first computer, and inserted into the reading device of a second computer. Using this technique, it is possible use a portable memory to transfer data between any two computers that have a read/write device for that portable memory. Moreover, in the case of content data (e.g., music, video), it may be desirable to place the content on a portable memory so that a single consumer can use the memory on various reading devices (e.g., living room CD player, car CD player, etc.). </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> While the ease of data transfer brought about by portable memories has advantages, it also presents problems. Some data is sensitive or proprietary (e.g., copyrighted audio or video), and it is desirable to control the dissemination of such data. One solution is to encrypt the data using a conventional encryption algorithm prior to storing it on a portable memory. A wide variety of encryption algorithms are known which provide good security. However, when encryption is used, the decryption key must be stored somewhere if the content is to be usable&mdash;e.g., the key may be stored in the portable memory reading device, or in a program that uses the data after it is retrieved from the portable memory. The best efforts to obscure the key (e.g., multiple encryption of the key, scattering of the key throughout data, embedding the key in secure hardware, etc.) can be broken. Even if it takes an enormous and expensive effort to discover the key, once the key is discovered the content can be decrypted and distributed in clear-text for the entire world to see. Worse, since encryption algorithms are generally well-known, once the key is discovered, software running on a general-purpose computer can be used to decrypt the content. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> An example of the problem is a &ldquo;globally shared secret&rdquo; key which is known to a class of supposedly secure memory reading devices or data rendering programs. The secret key can be hidden in each such device or program using the best protection mechanisms that technology provides. The device may be designed or programmed not to use the key except under permitted circumstances. However, since the same key is hidden in perhaps millions of devices or programs, an enormous number of people have an opportunity to analyze the device or program to discover the key. It is a virtual certainty that a key used in this manner will eventually be discovered. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> It is therefore clear that a potential for security breach exists when sensitive or proprietary data is stored on a portable memory. Thus there is a need for a system that overcomes the drawbacks of the prior art. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The invention provides a technique for protecting content that is stored on portable memory devices. A memory reader is provided which is capable of reading a particular type of portable memory. The memory reader is designed, either through circuitry or programming, not to provide the data stored on a portable memory except under defined circumstances. For example, the reader may be programmed to authenticate the recipient of the data prior to providing the data. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The memory and reader are designed such that the memory cannot easily be read by any reading device other than the one that it is designed to work with. For example, if the memory is an optical disk, the optical disk may be of a non-standard shape or size so that it will not fit in the drive of commonly-available readers such as CD-ROM drives. If the memory is a flash card, then the flash card and its reader may use a non-standard plug interface. The non-standard disk, or non-standard plug interface, may be proprietary to the entity that oversees the content distribution scheme (e.g., the publisher of content, the manufacturer who provides software and hardware that enables secure content distribution, etc.). Using such non-standard hardware ensures that one who wishes to create a &ldquo;rogue&rdquo; reader that reads the content on the memory without observing the security scheme will have to invest in building (and possibly mass-producing) a new hardware device. The hardware features may be proprietary, thereby presenting legal hurdles to the creation of counterfeit devices. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> While it is relatively easy to wage purely software-based attacks against security schemes, a security technique that cannot be broken without investing in new hardware tends to deter hacking attempts. In particular, the general population of computer users may not bother to break the protection scheme if it requires more effort than downloading a &ldquo;security-breaking&rdquo; program from the Internet, or following a very simple set of hardware-modification instructions (e.g., clip a wire, flip a switch, etc.) </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> As an alternative to using non-standard hardware, the reader may be programmed to use a non-standard data representation scheme. For example, read/write devices may encrypt/decrypt the content with an unusual, non-standard cryptographic algorithm, or may use a non-standard compression or data-reordering scheme. The particular method of representing the data may be proprietary, thereby deterring creation of &ldquo;rogue&rdquo; devices that implement the scheme. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> A class of difficult-to-spoof read/write devices is created according to the above criteria. Each read/write device may be equipped with a certified key pair for use in authentication. Thus, trusted programs or devices that handle secure content will not provide secure content for storage on portable memories to a read/write device unless the device can authenticate itself. Similarly, the read/write device will not provide content to other devices (e.g., rendering devices, PCs, etc.) without authenticating those devices. Because the non-standard or proprietary features of the reading device make it difficult to &ldquo;spoof,&rdquo; the universe of devices that can read and write the portable memory is limited, and distribution of secure content is controlled. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> In a preferred embodiment, the above-mentioned authentication between the read/write device and the rendering device does not take place cryptographically. As an alternative to cryptographic authentication, the interface between a rendering device and a read/write device may incorporate unique and/or proprietary hardware features that make the interface difficult to spoof&mdash;features similar to those discussed above in connection with the interface between the read/write device and the portable memory. Because the manufacturer of a counterfeit read/write device or rendering device would have to invest in building hardware incorporating the feature, the production of counterfeit read/write devices or rendering devices is deterred. This deterrence may limit the number of counterfeit read/write devices and rendering devices to the point that authenticity of the devices may be presumed from the existence of a successful connection between them.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The foregoing summary, as well as the following detailed description of preferred embodiments, is better understood when read in conjunction with the appended drawings. For the purpose of illustrating the invention, there is shown in the drawings exemplary constructions of the invention; however, the invention is not limited to the specific methods and instrumentalities disclosed. In the drawings: </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of an exemplary computing environment in which aspects of the invention may be implemented; </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of a rendering device, read/write device, and portable memory in accordance with aspects of the invention; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> is a block diagram of a first exemplary read/write device having an anti-counterfeit feature in accordance with aspects of the invention; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3B</cross-reference> is a block diagram of a second exemplary read/write device having an anti-counterfeit feature in accordance with aspects of the invention; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3C</cross-reference> is a block diagram of a third exemplary read/write device having an anti-counterfeit feature in accordance with aspects of the invention; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3D</cross-reference> is a sectional view of the plug interface of <cross-reference target="DRAWINGS">FIG. 3C</cross-reference> taken along line <highlight><bold>3</bold></highlight>D-<highlight><bold>3</bold></highlight>D; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram of a fourth exemplary read/write device having an anti-counterfeit feature in accordance with aspects of the invention; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram showing the flow of content through rendering devices, read/write devices, and a portable memory in accordance with aspects of the invention; and </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flow diagram showing a process by which protected content is recorded to a portable memory.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0022" lvl="7"><number>&lsqb;0022&rsqb;</number> Overview </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The invention is directed to the storage on portable memory of data that is subject to usage rules. &ldquo;Rules,&rdquo; in this context, means limitations on the usage of the data such as how it can be used (e.g., copying, printing, ephemeral rendering, etc.), when it can be used, and by whom it can be used. For example, a rule may state that a song may be played back on any host device, but that no copies may be made. A rule governing data may be global rule that applies to all data of a certain class. Alternatively, the rule could be described explicitly and stored with the data, or otherwise associated with the data. An explicitly described rule governing usage is sometimes referred to as an &ldquo;electronic license&rdquo; or &ldquo;digital license.&rdquo; Electronic licenses and protection of data are described in U.S. Pat. No. 5,715,403 entitled &ldquo;System for Controlling the Distribution and Use of Digital Works Having Attached Usage Rights Where the Usage Rights Are Defined by a Usage Rights Grammar,&rdquo; and in U.S. patent application Ser. No. 09/290,363 entitled &ldquo;Enforcement Architecture and Method for Digital Rights Management,&rdquo; which are both incorporated herein by reference. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> When data is protected by a rule, it is paramount that any device that handles the data be trusted&mdash;up to at least some degree of reliability&mdash;not to handle the data in any manner that is inconsistent with the rule. It should be observed that this principle applies whether the rule that governs the data is explicitly stated in the form of an electronic license, or if it is an &ldquo;implicit&rdquo; rule that applies globally to all data without being expressly stated in the form of a license. In the case of an implicit global rule, a device that handles the data must be trusted to obey the global rule with respect to all data. In the case of data that is protected by an explicit electronic license, a device must be trusted to honor whatever terms are stated in the license. The invention applies equally to both cases. Thus, before a trusted device will transmit protected data to another device, the receiving device must prove its trustworthiness. It is in the context of establishing this trust that the invention applies. As described below, proprietary hardware or software features may be used to establish that trust. </paragraph>
<paragraph id="P-0025" lvl="7"><number>&lsqb;0025&rsqb;</number> Exemplary Computing Environment </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates an example of a suitable computing system environment <highlight><bold>100</bold></highlight> in which the invention may be implemented. The computing system environment <highlight><bold>100</bold></highlight> is only one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of the invention. Neither should the computing environment <highlight><bold>100</bold></highlight> be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The invention may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment, program modules and other data may be located in both local and remote computer storage media including memory storage devices. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer <highlight><bold>110</bold></highlight>. Components of computer <highlight><bold>110</bold></highlight> may include, but are not limited to, a processing unit <highlight><bold>120</bold></highlight>, a system memory <highlight><bold>130</bold></highlight>, and a system bus <highlight><bold>121</bold></highlight> that couples various system components including the system memory to the processing unit <highlight><bold>120</bold></highlight>. The system bus <highlight><bold>121</bold></highlight> may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus (also known as Mezzanine bus). </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Computer <highlight><bold>110</bold></highlight> typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer <highlight><bold>110</bold></highlight> and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CDROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can accessed by computer <highlight><bold>110</bold></highlight>. Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term &ldquo;modulated data signal&rdquo; means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The system memory <highlight><bold>130</bold></highlight> includes computer storage media in the form of volatile and/or nonvolatile memory such as read only memory (ROM) <highlight><bold>131</bold></highlight> and random access memory (RAM) <highlight><bold>132</bold></highlight>. A basic input/output system <highlight><bold>133</bold></highlight> (BIOS), containing the basic routines that help to transfer information between elements within computer <highlight><bold>110</bold></highlight>, such as during start-up, is typically stored in ROM <highlight><bold>131</bold></highlight>. RAM <highlight><bold>132</bold></highlight> typically contains data and/or program modules that are immediately accessible to and/or presently being operated on by processing unit <highlight><bold>120</bold></highlight>. By way of example, and not limitation, <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates operating system <highlight><bold>134</bold></highlight>, application programs <highlight><bold>135</bold></highlight>, other program modules <highlight><bold>136</bold></highlight>, and program data <highlight><bold>137</bold></highlight>. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The computer <highlight><bold>110</bold></highlight> may also include other removable/non-removable, volatile/nonvolatile computer storage media. By way of example only, <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates a hard disk drive <highlight><bold>140</bold></highlight> that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive <highlight><bold>151</bold></highlight> that reads from or writes to a removable, nonvolatile magnetic disk <highlight><bold>152</bold></highlight>, and an optical disk drive <highlight><bold>155</bold></highlight> that reads from or writes to a removable, nonvolatile optical disk <highlight><bold>156</bold></highlight>, such as a CD ROM or other optical media. Other removable/non-removable, volatile/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive <highlight><bold>141</bold></highlight> is typically connected to the system bus <highlight><bold>121</bold></highlight> through an non-removable memory interface such as interface <highlight><bold>140</bold></highlight>, and magnetic disk drive <highlight><bold>151</bold></highlight> and optical disk drive <highlight><bold>155</bold></highlight> are typically connected to the system bus <highlight><bold>121</bold></highlight> by a removable memory interface, such as interface <highlight><bold>150</bold></highlight>. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The drives and their associated computer storage media discussed above and illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, provide storage of computer readable instructions, data structures, program modules and other data for the computer <highlight><bold>110</bold></highlight>. In <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, for example, hard disk drive <highlight><bold>141</bold></highlight> is illustrated as storing operating system <highlight><bold>144</bold></highlight>, application programs <highlight><bold>145</bold></highlight>, other program modules <highlight><bold>146</bold></highlight>, and program data <highlight><bold>147</bold></highlight>. Note that these components can either be the same as or different from operating system <highlight><bold>134</bold></highlight>, application programs <highlight><bold>135</bold></highlight>, other program modules <highlight><bold>136</bold></highlight>, and program data <highlight><bold>137</bold></highlight>. Operating system <highlight><bold>144</bold></highlight>, application programs <highlight><bold>145</bold></highlight>, other program modules <highlight><bold>146</bold></highlight>, and program data <highlight><bold>147</bold></highlight> are given different numbers here to illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer <highlight><bold>20</bold></highlight> through input devices such as a keyboard <highlight><bold>162</bold></highlight> and pointing device <highlight><bold>161</bold></highlight>, commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit <highlight><bold>120</bold></highlight> through a user input interface <highlight><bold>160</bold></highlight> that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor <highlight><bold>191</bold></highlight> or other type of display device is also connected to the system bus <highlight><bold>121</bold></highlight> via an interface, such as a video interface <highlight><bold>190</bold></highlight>. In addition to the monitor, computers may also include other peripheral output devices such as speakers <highlight><bold>197</bold></highlight> and printer <highlight><bold>196</bold></highlight>, which may be connected through an output peripheral interface <highlight><bold>190</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The computer <highlight><bold>110</bold></highlight> may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer <highlight><bold>180</bold></highlight>. The remote computer <highlight><bold>180</bold></highlight> may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer <highlight><bold>110</bold></highlight>, although only a memory storage device <highlight><bold>181</bold></highlight> has been illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The logical connections depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> include a local area network (LAN) <highlight><bold>171</bold></highlight> and a wide area network (WAN) <highlight><bold>173</bold></highlight>, but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> When used in a LAN networking environment, the computer <highlight><bold>110</bold></highlight> is connected to the LAN <highlight><bold>171</bold></highlight> through a network interface or adapter <highlight><bold>170</bold></highlight>. When used in a WAN networking environment, the computer <highlight><bold>110</bold></highlight> typically includes a modem <highlight><bold>172</bold></highlight> or other means for establishing communications over the WAN <highlight><bold>173</bold></highlight>, such as the Internet. The modem <highlight><bold>172</bold></highlight>, which may be internal or external, may be connected to the system bus <highlight><bold>121</bold></highlight> via the user input interface <highlight><bold>160</bold></highlight>, or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer <highlight><bold>110</bold></highlight>, or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation, <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates remote application programs <highlight><bold>185</bold></highlight> as residing on memory device <highlight><bold>181</bold></highlight>. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used. </paragraph>
<paragraph id="P-0036" lvl="7"><number>&lsqb;0036&rsqb;</number> Portable Memory and Related Hardware </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> The invention applies to environments employing certain types of hardware. A brief description of these types of hardware is provided below. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> &ldquo;Portable memory&rdquo; provides the capability of storing data&mdash;usually relatively large amounts of data. Furthermore, a portable memory can be physically moved between different host devices. The portable memory may provide read-only access or read/write access. Examples of portable memory include optical media such as compact discs (CDs), mini-CDs, and digital versatile disks (DVDs); magnetic media, such as floppy disks or removable hard disks; removable cassette tapes, such as JAZ tapes; or flash memory, such as compact flash cards. Magnetic disk <highlight><bold>152</bold></highlight> and optical disk <highlight><bold>156</bold></highlight>, shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, are non-limiting examples of portable memories. The following two properties of portable memories are of particular relevance to the issues addressed by the invention: (a) a portable memory can store data; and (b) a portable memory can be attached to different host devices to read or write the data. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> &ldquo;Rendering devices&rdquo; or &ldquo;data sources&rdquo; are host devices, which generate, receive or transfer the data, stored on a portable memory. Examples of data sources are general-purpose computing devices (e.g., PCs, palm-size computers or &ldquo;PDAs,&rdquo; mainframe computers, etc.) and special purpose consumer electronics (CE) devices, such as digital cameras. Examples of rendering devices are again general-purpose computing devices, such as PCs, and special purpose CE devices (e.g., CD players, MP3 players, monitors, e-books readers, etc.). Since many rendering devices have the capability to serve as data sources, the term &ldquo;rendering device&rdquo; and &ldquo;data source&rdquo; is used interchangeably herein to refer to a device that has both capabilities, unless context indicates otherwise. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> &ldquo;Memory readers&rdquo; or &ldquo;read/write devices&rdquo; constitute the hardware interface between the portable memory device and the host devices. For example, a standard CD constitutes a portable memory. A PC is a host device. In order to be able to use CDs, a PC must have a CD player to read the CD, or a CD burner to write the CD. The CD player/burner constitutes the memory reader: the hardware interface between the PC (host device) and the CD (portable memory). Because many portable memory readers also have the capability to write to memory, the term &ldquo;memory reader&rdquo; and &ldquo;read/write device&rdquo; are used interchangeably herein to refer to devices that can either read or write portable memories, as well as devices that do both, unless context indicates otherwise. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Functionally, the relationship between these components can be explained as follows: Any given portable memory should interoperate across all corresponding memory reader/host device combinations. Data written on any given memory reader/host device combination can be read at any other memory reader/host device combination. This relationship is characteristic of the &ldquo;global access property&rdquo; of portable memory. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The relationship between a portable memory, a read/write device, and a rendering device is shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. Rendering device <highlight><bold>202</bold></highlight> is communicatively connected to read/write device <highlight><bold>204</bold></highlight> by communication link <highlight><bold>205</bold></highlight>. Read/write device <highlight><bold>204</bold></highlight> includes a portable memory interface <highlight><bold>206</bold></highlight>. Portable memory <highlight><bold>208</bold></highlight> is mountable on portable memory interface <highlight><bold>206</bold></highlight>, such that portable memory <highlight><bold>208</bold></highlight> may be read and/or written by read/write device <highlight><bold>204</bold></highlight>. Read/write device <highlight><bold>204</bold></highlight> reads and/or writes portable memory <highlight><bold>208</bold></highlight>. The information that is read or written is communicated between read/write device <highlight><bold>204</bold></highlight> and rendering device <highlight><bold>202</bold></highlight> over communication link <highlight><bold>205</bold></highlight>. Rendering device <highlight><bold>202</bold></highlight> then processes the contents received from read/write device <highlight><bold>204</bold></highlight> (e.g., amplifies an analog signal, converts a digital signal to analog, decompresses MPEG audio, etc.) and renders it through an appropriate output device such as audio speaker <highlight><bold>210</bold></highlight>, video monitor <highlight><bold>212</bold></highlight>, etc. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> Rendering device <highlight><bold>202</bold></highlight> and read/write device <highlight><bold>204</bold></highlight> may take the form of physically separate units. For example, if the rendering device is a PC, the user may connect an external DVD-ROM drive to the PC through a cable. Alternatively, rendering device <highlight><bold>202</bold></highlight> and read/write device <highlight><bold>204</bold></highlight> may be enclosed within a single case <highlight><bold>214</bold></highlight>, and thus may be packaged as a single unit. For example, a standard CD player typically includes both the processor and logic that render digital audio (i.e., the rendering device), as well as the drive that reads the disc (i.e., the read/write device). However, even where rendering device <highlight><bold>202</bold></highlight> and read/write device <highlight><bold>204</bold></highlight> come packaged within a single case <highlight><bold>214</bold></highlight>, rendering device <highlight><bold>202</bold></highlight> and read/write device <highlight><bold>204</bold></highlight> are still separate units in the sense that one could open the case and replace one read/write device with another. Because this possibility exists, rendering device <highlight><bold>202</bold></highlight> and read/write device <highlight><bold>204</bold></highlight> are treated separately for the purpose of the discussion herein, regardless of whether they are enclose in a single case <highlight><bold>214</bold></highlight>. </paragraph>
<paragraph id="P-0044" lvl="7"><number>&lsqb;0044&rsqb;</number> Hardware with Spoof-Resistant Features </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> A read/write device in accordance with the invention includes one or more features that make it difficult to produce a commercially-viable counterfeit of the read/write device. The &ldquo;feature&rdquo; relates to the interface between the read/write device and a portable memory, and/or the interface between the read/write device and the rendering device. In either case, the feature is designed to make the read/write device incompatible with standard portable memories and/or standard rendering devices. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The premise of using such &ldquo;features&rdquo; is that a manufacturer of a trustworthy read/write device will build the feature(s) into the device, and will not build untrustworthy devices having the feature(s). Similarly, such features may be incorporated into portable memories that are usable with the device, and the manufacturer of the device may also oversee the production of such portable memories. The economic and legal hurdles to building a counterfeit (untrustworthy) device provide some barrier to the widespread replacement of trustworthy read/write devices with untrustworthy ones. Likewise, the hurdles to building a portable memory usable with the device provides a deterrent to manufacturing portable memories that work with the device but that could offload their contents to standard devices. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Preferably, the &ldquo;feature&rdquo; is a physical feature of the hardware; it is presumed that building untrustworthy hardware incorporating such a physical feature requires a sufficient economic investment that a casual counterfeiter would be deterred from building such a device. More preferably, the feature is legally proprietary, since the illegality and/or civil liability associated with building a counterfeit device incorporating the feature may further deter counterfeiters. It is preferable that the features be designed or selected with the following considerations in mind: </paragraph>
<paragraph id="P-0048" lvl="2"><number>&lsqb;0048&rsqb;</number> The feature is preferably resistant to a pure software attack. Thus, the feature should not be one that can easily be emulated by a program that can be widely published (e.g., by posting it on the Internet, etc.) and easily downloaded, installed and run by an unsophisticated user. </paragraph>
<paragraph id="P-0049" lvl="2"><number>&lsqb;0049&rsqb;</number> The feature is preferably resistant to hardware observation attacks that can be proliferated in the form of software attacks&mdash;e.g., a skilled attacker extracts secrets hidden in hardware and writes a program that uses those secrets for a software attack. </paragraph>
<paragraph id="P-0050" lvl="2"><number>&lsqb;0050&rsqb;</number> The feature is preferably resistant to simple hardware attacks&mdash;e.g., a skilled attacker analyzes the hardware setup and formulates and publishes simple hardware modifications to subvert content protection. These steps are sufficiently simple, such that naive users can execute them (e.g. set a jumper, clip a wire, etc.). </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> FIGS. <highlight><bold>3</bold></highlight>A-<highlight><bold>3</bold></highlight>D show read/write devices having various examples of distinctive &ldquo;features,&rdquo; as discussed above. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> shows a first exemplary read/write device <highlight><bold>204</bold></highlight><highlight><italic>a </italic></highlight>whose distinctive feature is a proprietary data manipulation algorithm, such as a proprietary cryptographic algorithm. Read/write device <highlight><bold>204</bold></highlight><highlight><italic>a </italic></highlight>includes cryptography logic <highlight><bold>304</bold></highlight> that executes on processor <highlight><bold>302</bold></highlight>. Cryptography logic <highlight><bold>304</bold></highlight> implements a proprietary cryptographic algorithm. When read/write device <highlight><bold>204</bold></highlight><highlight><italic>a </italic></highlight>writes data onto portable memory <highlight><bold>208</bold></highlight><highlight><italic>a</italic></highlight>, it encrypts the data using the proprietary algorithm. When read/write device <highlight><bold>204</bold></highlight><highlight><italic>a </italic></highlight>reads data from portable memory <highlight><bold>208</bold></highlight><highlight><italic>a</italic></highlight>, it decrypts the data using the same proprietary algorithm. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> &ldquo;Proprietary&rdquo; may have various meanings in this context. For example, the algorithm implemented by cryptography logic <highlight><bold>304</bold></highlight> may be a trade secret of the manufacturer of read/write device <highlight><bold>204</bold></highlight><highlight><italic>a</italic></highlight>. As another example, the manufacturer of read/write device <highlight><bold>204</bold></highlight><highlight><italic>a </italic></highlight>may own a copyright on the code that implements the algorithm, or mask work protection on a semiconductor chip that implements the algorithm. As a further example, the manufacturer of read/write device <highlight><bold>204</bold></highlight><highlight><italic>a </italic></highlight>may have a patent on the algorithm, or on a device that embodies the algorithm. The premise of the proprietary cryptographic algorithm is that, for any given data, it produces ciphertext that differs sufficiently from that produced by other cryptographic algorithms that no one can either produce or read the ciphertext without using the proprietary algorithm, and no one except for the manufacturer of read/write device <highlight><bold>204</bold></highlight><highlight><italic>a </italic></highlight>or his licensee can legally do so. Thus, any unauthorized read/write devices that employ the algorithm can be addressed through legal channels. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> While a cryptographic algorithm is used in <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> as an example of a proprietary data manipulation algorithm, it will be appreciated that other types of data manipulation algorithms may be used, such as compression algorithms, printable character encoding algorithms, etc. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3B</cross-reference> shows a second exemplary read/write device <highlight><bold>204</bold></highlight><highlight><italic>b</italic></highlight>, whose distinctive feature is the ability to read a portable memory <highlight><bold>208</bold></highlight><highlight><italic>b </italic></highlight>having a non-standard shape. In this example, portable memory <highlight><bold>208</bold></highlight><highlight><italic>b </italic></highlight>is depicted as an optical &ldquo;disk&rdquo; having a triangular shape, which fits into the corresponding triangular recess <highlight><bold>308</bold></highlight> of tray <highlight><bold>306</bold></highlight>. The significance of the triangular shape of the depicted optical disk is that such a shape is an example of a non-standard feature that would make portable memory <highlight><bold>208</bold></highlight><highlight><italic>b </italic></highlight>difficult or impossible to read or write using a standard optical disk drive, such as a CD-ROM drive, DVD-ROM drive, or mini-disk drive. It will be appreciated that an optical disk having a non-standard shape is merely a non-limiting example of a feature that makes portable memory <highlight><bold>208</bold></highlight><highlight><italic>b </italic></highlight>incompatible with standard read/write devices. Other examples of such a feature include: a disk having an unusual width or thickness that does not fit in standard optical disk trays, a disk having an off-center spindle hole, a disk having a non-standard track pattern that can be followed only by a specially-configured laser or magnetic head, a tape having a non-standard width; a tape cartridge having source and take-up spools in non-standard positions that do not align with the spindles of standard tape drives, etc. Optionally, these features may be proprietary to the manufacturer of read/write device <highlight><bold>204</bold></highlight><highlight><italic>b </italic></highlight>and/or the manufacturer of portable memory <highlight><bold>208</bold></highlight><highlight><italic>b</italic></highlight>. It should be appreciated that the examples listed above, or any other feature that makes portable memory <highlight><bold>208</bold></highlight><highlight><italic>b </italic></highlight>incompatible with standard hardware, may be used without departing from the spirit and scope of the invention. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3C</cross-reference> shows a third exemplary read/write device <highlight><bold>204</bold></highlight><highlight><italic>c</italic></highlight>, which is adapted to read portable memory <highlight><bold>208</bold></highlight><highlight><italic>c</italic></highlight>. In the example of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>C, portable memory <highlight><bold>208</bold></highlight><highlight><italic>c </italic></highlight>is a flash ROM or other type of memory that is read and/or written by &ldquo;plugging&rdquo; it into a read/write device rather than moving it across the head of a read/write device. Portable memory <highlight><bold>208</bold></highlight><highlight><italic>c </italic></highlight>connects to portable memory interface <highlight><bold>206</bold></highlight><highlight><italic>c </italic></highlight>of read/write device <highlight><bold>204</bold></highlight><highlight><italic>c </italic></highlight>using plug interface <highlight><bold>310</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>D, plug interface <highlight><bold>310</bold></highlight> has a non-standard pin pattern <highlight><bold>312</bold></highlight>, of which the serpentine pattern shown in <cross-reference target="DRAWINGS">FIG. 3D</cross-reference> is a non-limiting example. The example of <cross-reference target="DRAWINGS">FIG. 3C</cross-reference> is actually a special case of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>B, in that the non-standard pin pattern <highlight><bold>312</bold></highlight> of plug interface <highlight><bold>310</bold></highlight> is one example of a physical feature that makes portable memory <highlight><bold>208</bold></highlight><highlight><italic>c </italic></highlight>incompatible with standard devices that read and write flash ROMs. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> While FIGS. <highlight><bold>3</bold></highlight>A-<highlight><bold>3</bold></highlight>D show examples of features that relate to the interface between a read/write device and a portable memory, the distinctive feature may also relate to the interface between the read/write device and the rendering device, and may serve to make the rendering device incompatible with standard read/write devices. <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows an example of such a feature. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, read/write device <highlight><bold>204</bold></highlight><highlight><italic>d </italic></highlight>is adapted to read portable memory <highlight><bold>208</bold></highlight><highlight><italic>d</italic></highlight>, which is mountable on read/write device <highlight><bold>204</bold></highlight><highlight><italic>d </italic></highlight>at portable memory interface <highlight><bold>206</bold></highlight><highlight><italic>d</italic></highlight>. Portable memory <highlight><bold>208</bold></highlight><highlight><italic>d </italic></highlight>and portable memory interface <highlight><bold>206</bold></highlight><highlight><italic>d </italic></highlight>may include non-standard features as discussed in connection with FIGS. <highlight><bold>3</bold></highlight>A-<highlight><bold>3</bold></highlight>D above. Additionally, read/write device <highlight><bold>204</bold></highlight><highlight><italic>d </italic></highlight>and rendering device <highlight><bold>202</bold></highlight><highlight><italic>d </italic></highlight>have non-standard connection interfaces <highlight><bold>314</bold></highlight> and <highlight><bold>316</bold></highlight>, which are represented in the drawing by the non-limiting example of jagged surfaces. If, for example, standard read/write devices have only straight connection interfaces, then a standard read/write device will be unable to connect with rendering device <highlight><bold>202</bold></highlight><highlight><italic>d. </italic></highlight></paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> As discussed below, the features shown in FIGS. <highlight><bold>3</bold></highlight>A-<highlight><bold>4</bold></highlight> provide some assurance that a device incorporating those features is authentic. Specifically, if a read/write device incorporates a feature of the type shown in <cross-reference target="DRAWINGS">FIG. 4, a</cross-reference> rendering device can send data to that read/write device knowing that the read/write device is either (a) trustworthy or (b) counterfeit. Moreover, a read/write device incorporating features as shown in FIGS. <highlight><bold>3</bold></highlight>A-<highlight><bold>3</bold></highlight>D can write to a portable memory knowing that the memory will only be read by either (a) trustworthy read/write devices that incorporate the feature, or (b) counterfeit read/write devices. As discussed below, the disincentive to counterfeit a device may limit the number of counterfeit devices to an acceptably small level, such that the presence of the feature provides a sufficient basis to trust the device. </paragraph>
<paragraph id="P-0060" lvl="7"><number>&lsqb;0060&rsqb;</number> Flow of Protected Content </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows the path followed by a secure content item from one device to another by way of a portable memory in accordance with the invention. As discussed below, the security of the content is adequately ensured by the trust implicit in the non-standard physical or proprietary qualities of the read/write device. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> Content originates at a content source <highlight><bold>502</bold></highlight>. The content source may, for example, be a server that distributes copyrighted audio, video, text, etc. Typically, content source <highlight><bold>502</bold></highlight> is a computer that distributes content over a network, although this need not be the case. As an alternative example, content source <highlight><bold>502</bold></highlight> may, for example, be an optical or magnetic disk (e.g., optical disk <highlight><bold>156</bold></highlight> or magnetic disk <highlight><bold>152</bold></highlight>, shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) which is physically delivered to the recipient of the content. As a further example, content source <highlight><bold>502</bold></highlight> may be a hardware and/or software tool that facilitates the creation and recording of content, such as a microphone, video camera, or associated editing/filtering software. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> Preferably, the content originating at content source <highlight><bold>502</bold></highlight> is bundled with an electronic license that specifies the rights or permissions associated with the content. Electronic licenses come in many forms and specify various parameters of usage. For example, an electronic license may specify whether content may be rendered, printed, copied, etc. It may specify the identity of a particular user who is permitted to use the content. It may specify time or quantity limits on the use of the content. It may specify the security level of the computing environment in which the content may be used. Electronic licenses are more fully described in U.S. Pat. No. 5,715,403, and U.S. patent application Ser. No. 09/290,363, which are incorporated by reference above. As previously noted, an explicit license is optional. Instead, there may be a global rule which implicitly &ldquo;licenses&rdquo; the content for some default usage, such as rendering of the content. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Content is delivered from content source <highlight><bold>502</bold></highlight> to rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>). As discussed above, rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>) has the capability to render content. Rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>) in this example may also have the ability to transmit the content to another component&mdash;e.g., a single device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>) may be adapted to record content, render content, and transmit the content to another component such as read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>). It should be observed that this ability to transmit the content to another component may also encompass the ability to propagate the content over a network, such as network <highlight><bold>173</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>), although one aspect of trustworthiness is that device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>) will not do so unless permitted by the terms of the explicit or implicit license governing the content. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> Rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>) provides content to read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>) so that it may be written onto portable memory <highlight><bold>208</bold></highlight>. Rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>) is a trusted component of the system. Thus, when it delivers content in usable form to read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>), it authenticates read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>) to ensure that the read/write device is trustworthy to handle protected content. This authentication may take place in various ways. In one example, rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>) and read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>) are equipped with processors such as processing unit <highlight><bold>120</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) and certified public/private key pairs. Thus, rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>) and read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>) may engage in an authentication protocol using the certified keys. Authentication protocols are known in the art, and therefore are not described herein. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> In another example, rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>)&apos;s trust of read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>) is implied by the hardware structure of read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>). As described above in connection with <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>) may have a unique and/or proprietary hardware interface to rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>). In this case, read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>)&apos;s authenticity may be implicit in the fact that it has been successfully interfaced with rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>). This type of authentication is particularly useful where read/write device does not have sufficient processing capability to perform a cryptographic authentication protocol. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> The reason for which the latter type of authentication works is somewhat counterintuitive and warrants additional explanation. In a trusted system, trust is not absolute but rather exists up to some acceptable level of certainty. For example, inasmuch as some authentication protocols are based on secret cryptographic keys, the possibility always exists that the secrecy of a key may have been compromised. However, measure are taken to protect the key, and thus a component that proves its authenticity through such an authentication protocol may be assumed to be authentic insofar as the key can be presumed not to have been compromised. Since keys can be stolen or otherwise compromised, proof of authenticity established in this manner is not perfect, but, in many contexts, may provide an acceptable level of certainty for the level of security required. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> Similarly, when authenticity is established through a unique and/or proprietary hardware interface, the trustworthiness of the component is reliable to the extent that the hardware interface cannot be easily or legally &ldquo;spoofed&rdquo; by an untrustworthy component manufacturer. Because the manufacture of a compatible hardware interface requires a substantial investment by a manufacturer, it can be presumed that only a small number of spoofs of the hardware interface will exist. In the case of a proprietary interface, potential legal liability to the hardware manufacturer will provide a further deterrent to spoofing the interface. Thus, the economic and legal hurdles that stand in the way of spoofing the hardware interface provide at least some level of certainty that read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>) is authentic. Again, it is important to note that this level of certainty is not absolute. There may be hardware spoofs of read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>) that employ the necessary interface, and rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>) will be fooled into concluding that such a counterfeit read/write device is authentic. However, if the relevant content is only in need of moderate protection (e.g., if the content is a song, rather than the password to launch nuclear missiles), this level of trust in read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>)&apos;s authenticity may be all that is required. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> Once the content has been transmitted to read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>), it may be recorded onto portable memory <highlight><bold>208</bold></highlight>. Preferably, the relationship between read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>) and portable memory <highlight><bold>208</bold></highlight> is of the type depicted in FIGS. <highlight><bold>3</bold></highlight>A-<highlight><bold>3</bold></highlight>D&mdash;that is, read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>) and/or portable memory <highlight><bold>208</bold></highlight> have some feature(s) that make portable memory <highlight><bold>208</bold></highlight> compatible with read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>) and incompatible with standard read/write devices. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> In a sense, the incompatibility of portable memory <highlight><bold>208</bold></highlight> with standard read/write devices ensures&mdash;up to some acceptable level of certainty&mdash;that content recorded on portable memory <highlight><bold>208</bold></highlight> will not escape the protected system. It is safe to record protected content onto portable memory <highlight><bold>208</bold></highlight> because portable memory <highlight><bold>208</bold></highlight> cannot be read by standard readers, and can only be read by readers incorporating a unique and/or proprietary feature. As is the case with the unique and/or proprietary interface between rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>) and read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>), the economic or legal hurdles to building a counterfeit read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>) provide an &ldquo;acceptable level of certainty&rdquo; that portable memory <highlight><bold>208</bold></highlight> will not be readable by non-trusted readers. In this sense, the unique or proprietary interface provides a form of authentication that &ldquo;travels&rdquo; with portable memory <highlight><bold>208</bold></highlight>: since only readers incorporating the unique or proprietary feature can read the memory, it can be assumed&mdash;up to an acceptable level of certainty&mdash;that every reader that will read portable memory <highlight><bold>208</bold></highlight> in the future is authentic and trustworthy. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> It should be reemphasized that the proprietary encryption or data manipulation algorithm depicted in <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> is an example of a unique and/or proprietary feature, even though it provides no physical impediment to portable memory <highlight><bold>208</bold></highlight>&apos;s being read by a standard reader. In such a case, the impediment to reading portable memory <highlight><bold>208</bold></highlight> with a standard reader is the legal hurdle of building a counterfeit reader that can undo the data manipulation in order to produce clear content. It should be further noted that, even in the case where the data manipulation algorithm is an encryption algorithm, the primary basis of trust is not in the encryption itself. It is entirely possible that the encryption scheme is weak, and the decryption key is well-known or subject to being compromised. The basis of trust, however, lies primarily in the illegality of building a device that performs the proprietary decryption, rather than the technical or engineering difficulty in decrypting content. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> Once portable memory <highlight><bold>208</bold></highlight> stores the protected content, portable memory <highlight><bold>208</bold></highlight> may be mounted on a second read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>2</bold></highlight>). If the second read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>2</bold></highlight>) is able to read portable memory <highlight><bold>208</bold></highlight>, then it is trustworthy again, up to an acceptable level of certainty. As described above, while read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>2</bold></highlight>) may be a counterfeit device, the production of counterfeits is deterred by the economic and legal hurdles to building one, and thus it is unlikely that read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>2</bold></highlight>) is a counterfeit device. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> Read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>2</bold></highlight>) is connected to a rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>2</bold></highlight>). Since read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>2</bold></highlight>) is a trusted component (or, at least, is likely to be a trusted component rather than a counterfeit), it does not release content to any component without authenticating that component. Authenticity between read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>2</bold></highlight>) and rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>2</bold></highlight>) may be established in the same manner as was authenticity between rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>) and read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>)&mdash;e.g., by an authentication protocol, by a unique and/or proprietary hardware interface, etc. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> Once the content is made available to rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>2</bold></highlight>), it may be rendered so long as rendering is permitted by the terms of the explicit or implicit rules that govern the content. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> It should be noted that a particularly useful example of the system shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is where rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>) is an in-home rendering device (e.g., an audio or video device installed in a user&apos;s living room), and where rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>2</bold></highlight>) is a mobile rendering device (e.g., a car audio device, a palm-sized mini-TV, etc.). In this way, distributors of digital content may distribute reproducible copies of licensed content, where the explicit or implicit license includes permission to copy the content onto portable memory <highlight><bold>208</bold></highlight> (but not onto a standard medium, such as a CDROM). The content purchaser has the convenience of being able to make copies of the content for various devices, and the content distributor has the security of knowing that the universe of devices that can read the content is limited. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> An additional refinement to the system depicted in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is to encrypt the content during some or all of the communications between components using, e.g., a conventional encryption algorithm. For example, content may be encrypted for transport between rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>1</bold></highlight>) and read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>1</bold></highlight>), or between read/write device <highlight><bold>204</bold></highlight>(<highlight><bold>2</bold></highlight>) and rendering device <highlight><bold>202</bold></highlight>(<highlight><bold>2</bold></highlight>), or for storage on portable memory <highlight><bold>208</bold></highlight>. This encryption may be performed using a globally shared secret key. As noted above, since globally shared secrets can be compromised, they may not provide sufficient protection to serve as the sole root of trust for a trusted system, but encryption along the various communication channels may provide some additional protection against casual content snoops. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows a process of storing content on a portable memory in accordance with the invention. At step <highlight><bold>602</bold></highlight>, a rendering device receives protected content. Preferably, the content is associated with a license&mdash;either an explicit license (which may be received with the content), or an implicit license specifying global rules for all content handled by the rendering device. In this example, the rendering device is a trusted rendering device and, therefore, will not handle the content in any manner inconsistent with the license. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> At step <highlight><bold>604</bold></highlight>, the rendering device establishes the authenticity of an attached read/write device. This authenticity may be established by an authentication protocol, or by virtue of its connection to the read/write device being through a unique and/or proprietary interface. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> At step <highlight><bold>605</bold></highlight>, the rendering device evaluates the license to determine whether recording the content on a portable memory is within the terms of the license. Evaluation of the license may include either (a) reading an explicit digital license, or (b) applying the terms of a global implicit license. If such recording is permitted, the process may continue to step <highlight><bold>606</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> At step <highlight><bold>606</bold></highlight>, the rendering device, having established the authenticity of the read/write device, sends the content to the read/write device. Optionally, the content is encrypted during the transmission in order to provide some level of security to the communication channel while the protected content is in transport between the rendering device and the read/write device. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> At step <highlight><bold>608</bold></highlight>, the read/write device produces a non-standard portable memory recording of the received content. As discussed above in greater detail, there are various ways to produce the &ldquo;non-standard&rdquo; recording through the use of a unique or proprietary feature. For example, read/write device may record onto a non-standard portable memory that is readable only by non-standard trusted readers incorporating a unique or proprietary feature. Alternatively, the recording may be made using a proprietary data manipulation algorithm such that the data can only be decrypted and/or decoded using a device that implements the proprietary algorithm. As a further alternative, both the portable memory and the data manipulation algorithm may be proprietary. It will be appreciated that there are various ways of producing a recording that cannot be read by a standard reader, and all such ways are within the spirit and scope of the invention. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> As a further layer of security, step <highlight><bold>608</bold></highlight> may include encrypting the content using a conventional encryption algorithm and a globally shared secret key that is known to all trusted read/write devices. As noted above, such a globally shared secret may not provide sufficient security to serve as the root of trust for the entire system, but it may provide some additional security when used in combination with a read/write device that incorporates unique and/or proprietary features. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> It is noted that the foregoing examples have been provided merely for the purpose of explanation and are in no way to be construed as limiting of the present invention. While the invention has been described with reference to various embodiments, it is understood that the words which have been used herein are words of description and illustration, rather than words of limitations. Further, although the invention has been described herein with reference to particular means, materials and embodiments, the invention is not intended to be limited to the particulars disclosed herein; rather, the invention extends to all functionally equivalent structures, methods and uses, such as are within the scope of the appended claims. Those skilled in the art, having the benefit of the teachings of this specification, may effect numerous modifications thereto and changes may be made without departing from the scope and spirit of the invention in its aspects. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of recording data comprising the acts of: 
<claim-text>receiving protected content at a data processing device; </claim-text>
<claim-text>determining that a portable memory recording device is trustworthy based on a hardware interface between said data processing device and said portable memory recording device; and </claim-text>
<claim-text>using said portable memory recording device to record said protected content onto a portable memory. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said act of determining that said portable memory recording device is trustworthy includes: 
<claim-text>determining that said portable memory recording device will not record said protected content onto portable memories falling outside of a class. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein the determination that said portable memory recording device will not record said protected content onto portable memories falling outside of a class is made with less than absolute certainty. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein a characteristic of said class is that portable memories falling inside said class are not readable by portable memory reading devices lacking a defined feature. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein said defined feature comprises a physical feature. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein said physical feature is a proprietary physical feature. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein said defined feature comprises a proprietary data handling algorithm. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said hardware interface comprises a proprietary feature. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the act of: 
<claim-text>determining that recording of said protected content onto said portable memory is permitted by the terms of a license governing said protected content. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A computer-readable medium having computer-executable instructions to perform the method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A method of recording protected data comprising the acts of: 
<claim-text>receiving protected content at a data processing device; </claim-text>
<claim-text>determining that a portable memory recording device will not record said protected content onto portable memories falling outside of a class; and </claim-text>
<claim-text>using said portable memory recording device to record said protected content onto a portable memory. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the determination that said portable memory recording device will not record said protected content onto portable memories falling outside of a class is made with less than absolute certainty. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein a characteristic of said class is that portable memories falling inside said class are not readable by portable memory reading devices lacking a defined feature. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein said defined feature comprises a physical feature. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein said physical feature is a proprietary physical feature. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein said defined feature comprises a proprietary data handling algorithm. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein said act of determining that said portable memory recording device will not record said protected content onto portable memories falling outside of a class comprises engaging in an authentication protocol between said data processing device and said portable memory recording device. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A computer-readable medium having computer-executable instructions to perform the method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A device for handling content governed by a license comprising: 
<claim-text>a processor; </claim-text>
<claim-text>a data port which communicates said content; </claim-text>
<claim-text>content-recording hardware communicatively connected to said data port, said content-recording hardware having an interface onto which a portable memory is mountable, said interface having a first feature that makes said interface incompatible with portable memories that are readable by devices built in accordance with an open standard; and </claim-text>
<claim-text>a memory which stores logic which is executable on said processor, said logic causing said memory to transmit content to said content-recording hardware through said data port when permitted by the terms of said license. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The device of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein said feature comprises a proprietary feature. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The device of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein said feature comprises the shape of a receptacle onto which said portable memory fits. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The device of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein said feature comprises a dimension of a receptacle onto which said portable memory fits. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The device of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein said portable memory comprises a plug which mounts on said interface, and wherein said feature comprises an arrangement of connecting elements that mate with said plug. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The device of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein said data port comprises a second feature that is incompatible with connectors built according to an open standard. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A device for reading a portable memory which stores content governed by a rule, said device comprising: 
<claim-text>a first interface onto which said portable memory mounts, said portable memory having a feature that makes said portable memory non-mountable on devices built in accordance with an open standard; </claim-text>
<claim-text>a communications port communicatively coupled to a rendering device which renders said content; </claim-text>
<claim-text>a processor; and </claim-text>
<claim-text>a memory which stores authentication logic executable on said processor, wherein said logic causes said device to engage in an authentication protocol with said rendering device and which determines whether said content is to be transmitted to said rendering device in accordance with a result of said authentication protocol. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The device of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein said feature comprises a proprietary feature. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The device of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein said feature comprises the shape of said portable memory. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The device of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein said feature comprises a dimension of said portable memory. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The device of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein said portable memory comprises a plug which mounts on said interface, and wherein said feature comprises an arrangement of connecting elements on said plug. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A method of facilitating the limited copying of protected content comprising the acts of: 
<claim-text>protecting a feature of a portable memory reading or recording device whereby said feature is made proprietary, said feature enabling the creation or reading of a non-standard portable memory recording; </claim-text>
<claim-text>determining that an entity is trustworthy to make a portable memory reading or recording device that does not violate rules governing usage of content; and </claim-text>
<claim-text>permitting said entity to manufacture a portable memory reading or recording device having the proprietary feature. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein said non-standard portable memory recording comprises a recording onto a portable memory that is physically incompatible with portable memory reading or recording devices built according to an open standard. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein said feature comprises a shape of said portable memory. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein said feature comprises a dimension of said portable memory. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein said feature comprises a plug which mounts on said interface, and wherein said feature comprises an arrangement of connecting elements that mate with said plug. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein said non-standard portable memory recording comprises a recording wherein data is manipulated according to a proprietary data manipulation algorithm, and wherein said feature comprises said proprietary data manipulation algorithm. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein said rules are in the form of an electronic license. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein said rules are globally-applicable to a class of content and are not provided in the form of an electronic license. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein said entity comprises the owner of the proprietary feature. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. A system for the limited distribution of protected content comprising: 
<claim-text>means for receiving protected data; </claim-text>
<claim-text>portable memory recording means for recording data onto a portable memory, said portable memory recording means being communicatively coupled to said means for receiving data; </claim-text>
<claim-text>mounting means for mounting said portable memory onto said portable memory recording means, said mounting means including at least one feature that makes portable memories readable by devices built in accordance with an open standard incompatible with said portable memory recording means; </claim-text>
<claim-text>rights management means for limiting the usage of protected content.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005246A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005246A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005246A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005246A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005246A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
