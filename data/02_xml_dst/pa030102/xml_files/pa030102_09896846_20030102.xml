<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004716A1-20030102-D00000.TIF SYSTEM "US20030004716A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004716A1-20030102-D00001.TIF SYSTEM "US20030004716A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004716A1-20030102-D00002.TIF SYSTEM "US20030004716A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004716A1-20030102-D00003.TIF SYSTEM "US20030004716A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004716A1-20030102-D00004.TIF SYSTEM "US20030004716A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004716A1-20030102-D00005.TIF SYSTEM "US20030004716A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004716A1-20030102-D00006.TIF SYSTEM "US20030004716A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004716A1-20030102-D00007.TIF SYSTEM "US20030004716A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004716A1-20030102-D00008.TIF SYSTEM "US20030004716A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004716A1-20030102-D00009.TIF SYSTEM "US20030004716A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004716A1-20030102-D00010.TIF SYSTEM "US20030004716A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030004716A1-20030102-D00011.TIF SYSTEM "US20030004716A1-20030102-D00011.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004716</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896846</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G10L015/12</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>704</class>
<subclass>238000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method and apparatus for determining a measure of similarity between natural language sentences</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Karen</given-name>
<middle-name>Z.</middle-name>
<family-name>Haigh</family-name>
</name>
<residence>
<residence-us>
<city>Greenfield</city>
<state>MN</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Kevin</given-name>
<middle-name>M.</middle-name>
<family-name>Kramer</family-name>
</name>
<residence>
<residence-us>
<city>Coon Rapids</city>
<state>MN</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>HONEYWELL INTERNATIONAL INC.</name-1>
<name-2></name-2>
<address>
<address-1>101 COLUMBIA ROAD</address-1>
<address-2>P O BOX 2245</address-2>
<city>MORRISTOWN</city>
<state>NJ</state>
<postalcode>07962-2245</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Systems and methods for classifying natural language (NL) sentences using a combination of NL algorithms or techniques is disclosed. Each NL algorithm or technique may identify a different similarity trait between two or more sentences, and each may help compare the meaning of the sentences. By combining the various similarity factors, preferably by various weighting factors, a distance metric can be computed. The distance metric provides a measure of the overall similarity between sentences, and can be used to assign a sentences to an appropriate sentence category. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention generally relates to methods and systems for classifying natural language text or sentences, and more particularly to methods and apparatus for determining a measure of similarity between natural language sentences or text. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Computers and computer technology have contributed greatly to our personal and professional lives. Computers now help perform many tasks that were previously performed by humans only a few years ago. While computer systems and computer technology have made significant penetration into our lives, some tasks still require significant human intervention. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> A recurring problem in the computer field is the difficulty of developing computer systems that can perform tasks that have complex, unpredictable or undefined input data. To date, these tasks typically require human intervention, and often, intervention by scarce human workers that have particular knowledge or expertise. An essential problem is the translation of knowledge and skill of a human expert to a computer system in such a manner that the computer system, when provided with the same fact pattern, reaches the same conclusion or decision as the expert. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The first implementations of such systems used conventional, sequential computers that perform a sequence of operations on a very limited number of data elements, such as an add or compare operation of two data elements. A sequential system that works with large numbers of data elements often requires prohibitively long computation times, even for very fast computer systems. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> To reduce the number of data items to be dealt with, &ldquo;expert&rdquo; systems have been developed. One form of &ldquo;expert&rdquo; system attempts to implement human &ldquo;expertise&rdquo; in a number of rules. In a rule based expert system, knowledge engineers attempt to elicit from experts a set of rules that implement the reasoning of the experts when given a set of facts. The rules typically attempt to codify, for example, the knowledge, methodology and reasoning process used by experts to solve a particular problem. The rules are programmed as a sequence of decision steps and, given a fact pattern, the system executes the programmed sequence of rule decisions in an attempt to reach the same conclusion as the expert. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> A limitations of such rule based &ldquo;expert&rdquo; systems is that much of the expertise expressed in the rules is based on knowledge from a large number of individual fact patterns, which are of necessity and purpose more general than individual cases. This results in a loss of a significant amount of information. In addition, it is often difficult to determine whether the correct set of rules has been implemented, particularly since many experts do not consciously know and understand their own methodology and reasoning processes, and may unconsciously create &ldquo;rules&rdquo; that do not in fact reflect their methodology. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Another limitation of many rule based &ldquo;expert&rdquo; systems is that a substantial investment of knowledge engineer and expert time is required to determine and implement the appropriate set of rules. Furthermore, if the rules do not produce a desired result, or the input data changes in a material way, rewriting or updating the rules is often an extremely difficult and time consuming process. The rules often interact with one another, and a change in one rule may require corresponding changes in other related rules. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> One application where such difficulties have arisen is in generating knowledge repositories (or data bases) from legacy documents. Many companies are currently processing legacy documents for use in automated reasoning systems. In one example, a knowledge repository may be used as a diagnostic fault model for an airplane. In another example, a knowledge repository may describe company business practices. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> In order to create a knowledge repository, the legacy documents are typically parsed and the relevant information is identified, often by hand. Some of the information can be easily identified from the document context or by pattern-matching techniques. However, much of the information can be more efficiently and accurately identified by having some level of understanding of the textual meaning of the information in the document. To illustrate this, it is known that some legacy maintenance manuals may include certain fault descriptions. To identify and extract the fault descriptions from the the legacy document, some level of understanding of the meaning of the text within the document would be extremely helpful. For example, the sentence &ldquo;REPLACE THE GO-AROUND SWITCH, S<highlight><bold>2</bold></highlight> ON THE RIGHT THRUST LEVER&rdquo; may describe a fault, while &ldquo;DO THE IRU BITE PROCEDURE (MM 34-21-00, <cross-reference target="DRAWINGS">FIG. 107</cross-reference>)&rdquo; may describe a procedure. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> It is known that English sentences are extremely complex, and are subject to stylistic variation. Using tediously hand-generated rules that rely on regular expressions to identify the fault statements would be extremely difficult. In general, the more complex the pattern, the more difficult it is to write a regular expression to recognize the pattern. Thus, not only would it be difficult to generate rules that rely on regular expressions to identify fault statements with a legacy document, but such a system would likely be dependent on the writing style of the author, making it difficult to transfer the hand-generated rules and/or regular expressions to different legacy documents or even to different chapters within the same document. Thus, such systems may be highly brittle and error-prone. Because of the foregoing, there is often a large cost associated with creating knowledge repositories from legacy documents. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The field of search engines is another application where it is often desirable to identify and categorize certain information within documents. Search engines typically accept a user specified search expression, and compare the search expression to text in selected documents, databases or web pages. Using rules or regular expressions to identify and categorize text within documents can be difficult, time consuming, and tedious. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The present invention provides improved systems and methods for classifying natural language text or sentences by first determining a measure of similarity between natural language sentences or text. The present invention preferably uses Machine Learning (ML) algorithms to categorize and/or identify the similarity between sentences. The ML algorithms are preferably trainable, so that they can be easily customized to any particular domain. By using trainable ML algorithms, the system may be incremental and robust, which allows the accuracy of the system to be increased with additional training. One embodiment of the present invention exploits the semantic information captured by Natural Language Processing (NLP) techniques along with statistical modelling to calculate the similarity between texts. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> It is believed that the present invention may provide as much as a 10-fold reduction or more in the time required to accurately categorize sentences in certain legacy documents, resulting in a cost reduction of 30% to 50%. It is also believed that the present invention may be used to substantially increase the accuracy of many search engines. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> In one illustrative embodiment, the present invention is applied to categorizing sentences in a legacy document to ultimately generate a knowledge repository. In this embodiment, a number of training sentences are selected, and one or more ML algorithms are used to assign each of the training sentences to one or more predefined categories. The algorithms are preferably dependent on a number of operating parameters (e.g., weights) over its constituent components. Once assigned, a correspondence is displayed between each of the training sentences and each of the one or more predefined categories. A user may then review the categorization of each of the training sentences, and change the categorization where appropriate. Based on the changes made by the user, the algorithm updates the operating parameters to reflect the change in the assigned categories, resulting in one iteration of training. Thereafter, the algorithm may be further trained by repeating the assigning, displaying, changing and updating steps until a desired accuracy level is achieved. Once adequately trained, all of the sentences in a legacy document may be processed. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The assigning step described above preferably uses a distance metric to determine which predefined category to assign a particular sentence. For example, the distance metrics can provide a measure of similarity between a particular sentence and one or more sentences that have already been assigned to a particular category. The particular sentence is preferably assigned to the category that includes the training sentences that are most similar to it. One possible assignment is to assign the sentence to the category of the single most similar sentence (smallest distance). Another possible assignment is to assign the particular sentence to the category that contains the majority of the k most similar sentences. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> There are a number of illustrative algorithms for determining a measure of similarity between a first sentence and a second sentence. One illustrative method calculates the similarity between a pair of sentences based on inputs from several similarity factors. The final similarity value is preferably calculated by a weighted combination of each of the constituent similarity factors. The constituent similarity factors may be functions or methods based on sentence grammar, sentence semantics, statistics, or other specific techniques developed for the language or domain. Some illustrative methods or functions may include, for example, a string match, a keyword match, a phrase match, or a match based on the statistical significance of words, or a domain model match. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> In order to utilize sentence grammar or semantics as a basis for a similarity factor, the sentences are preferably first parsed by a Natural Language Parsing engine. The NLP engine preferably assigns words to their pre-defined grammatical categories (e.g. nouns, verbs, adjectives, . . . ). The engine may also build complete sentence diagramming trees (e.g. noun phrase, prepositional phrase, . . . ). The engine may also assign words to pre-defined semantic categories (e.g. subject, object, modifier, . . . ). The NLP may also identify other natural language elements, including for example, proper names, currency, or sentence voice (passive/active). </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The information extracted by the NLP engine can then be used by any number of similarity factors to assist in the calculation of the similarity between sentences. It is believed that by calculating the natural language properties of the text, and then comparing words or groups of words from similar classes, a more accurate estimation of the similarity of the sentences can be achieved. Some illustrative methods or functions include, for example, a string overlap match, a keyword match, and a phrase match. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The string overlap match function may contribute to the measure of the overall similarity of the two sentences by identifying the number of overlapping words in the sentences, regardless of word type or class. For example, the string overlap match function may return the number of words in the first sentence that match a word in the second sentence, as a percentage of the number of words in the longest of the first sentence and second sentence. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The keyword match function may provide a measure of the overall similarity of the two sentences by identifying the number of overlapping words in the sentences, where only words with a common syntactic or semantic type are compared. For example, the keyword match function may return the number of words in the first sentence that match a word in the second sentence, where both words share a common type, as a percentage of the maximum number of keywords in the first sentence and the second sentence. The phrase match function may be similar to the keyword match function, but may be applied to phrases or words. This method allows, as one possible example, noun phrases to be compared, including (or not) information from any constituent prepositional phrases. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Other techniques may be incorporated to improve the robustness of the natural language metrics. For example, to compensate for spelling errors or the like, it is contemplated that a word in the first sentence may be deemed to match a word in the second sentence when, for example, the word in the first sentence and the word in the second sentence each exceed a minimum number of characters, and the word in the first sentence shares a predetermined minimum number of characters with the word in the second sentence. Similarly, words or phrases may be considered similar if they are related according to some pre-defined knowledge (either domain dependent or independent). For example, the related words may include an original word with the prefix or suffix removed, various tenses of the original word, and/or different words with similar meanings as identified by, for example, a domain thesaurus. In addition, it is contemplated that one or more named entities may be extracted from the first sentence and the second sentence; the named entities may include a complex groups of nouns. The named entities may then be treated as a single object when performing word or phrase comparisons. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> A second general category or factor that can be used for the overall similarity metric is statistical information. Certain words are more common or more indicative of a sentence&apos;s meaning than other words. For example, the general noun &ldquo;thing&rdquo; indicates much less meaning about a sentence than a more specific noun. Statistical information can be gathered from the language the text was written in (i.e. a general database of word usage), or built from the text under consideration (i.e. domain-specific). There are different methods of building and using this statistical information; one possible technique is to calculate the correlation factor of words in the training text to the category of the sentence, and this correlation factor can then be used to predict the category of new sentences. In the current embodiment, the statistical information is captured in a domain model that returns a similarity value, wherein the similarity value is increased by the correlation factor of a model word when both sentences include the model word, and is decreased by the correlation factor of a model word when only one of the first and second sentences include the model word. By decreasing the similarity value when only one of the two sentences includes the model word, a negative probability or correlation is applied. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Statistical information can augment the natural language metric, and vice versa. For example, extremely common words (and hence information-free words) can be identified as &ldquo;stop&rdquo; words by the statistical methods, and then the natural language methods can exclude them from the similarity analysis. Inversely, the natural language information can be used to augment the statistical calculation, such as when a word can be used as both a noun and a verb; each type of usage may have a different statistical correlation. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The two above-mentioned categories of similarity factors (natural language and statistical) and any combinations are independent of the domain of the text. In some domains, there may be domain-specific information that will augment the accuracy of the similarity metric. In one embodiment, for example, certain airline maintenance words are &ldquo;more interesting&rdquo; to the human users of the system than others. Any domain-specific factors can be added to the similarity metric in the same manner as the domain-independent factors, and moreover, factors that mix the domain-independent methods with domain-dependent methods can be created. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Each of these factors can then be combined to create a measure of the similarity of two sentences. The metric is flexible enough to incorporate any additional techniques as they are designed or developed. Each factor contributes to the final measure through a weighted function that can be tuned to the domain under consideration. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> While the above illustrative embodiments may be used to categorize sentences in legacy documents, other applications are also contemplated. For example, the illustrative algorithms of the present invention may be applied to search engines. Often, search engines compare the similarity of a search expression with sentences or to text in search documents. The present invention can advantageously perform such a comparison, using some notion of the meaning of the sentences to be compared, which in many applications is highly desirable.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Other objects of the present invention and many of the attendant advantages of the present invention will be readily appreciated as the same becomes better understood by reference to the following detailed description when considered in connection with the accompanying drawings, in which like reference numerals designate like parts throughout the figures thereof and wherein: </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a screen shot of an illustrative graphical user interface in accordance with the present invention; </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a schematic diagram showing the architecture of an illustrative embodiment of the present invention; </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a high level diagram showing an illustrative algorithm for assigning sentences to one of several categories; </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a schematic diagram showing a sentence diagram of a sentence using a natural language parser; </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a diagram showing the calculation of a similarity factor between two sentences using an illustrative string overlap function; </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a diagram showing the calculation of a similarity factor between two sentences using an illustrative keyword match function; </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a diagram showing the calculation of a similarity factor between two sentences using an illustrative phrase match function; </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is table showing illustrative correlation factors for several model words; </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a diagram showing the calculation of a similarity factor between two sentences using an illustrative model match function; </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a diagram showing the calculation of an illustrative distance metric in accordance with a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a table showing the calculation of the distance metric of <cross-reference target="DRAWINGS">FIG. 10</cross-reference> using the similarity factors of <cross-reference target="DRAWINGS">FIGS. 5, 6</cross-reference>, <highlight><bold>7</bold></highlight> and <highlight><bold>9</bold></highlight> and various weighting factors; and </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a graph showing the accuracy of sentence categorization versus the number of sentences used for training for an Airbus A320 legacy maintenance manual.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a screen shot of an illustrative graphical user interface in accordance with the present invention. The illustrative graphical user interface provides an interactive and iterative environment for machine learning in the context of placing sentences into desired categories. At each iteration of the learning process, the user is presented with a set of sentences, which are highlighted with best guesses for sentence classification. In <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> number of training sentences are displayed at <highlight><bold>10</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>10</bold></highlight><highlight><italic>e, </italic></highlight>with the &ldquo;fault&rdquo; type sentences, such as sentence <highlight><bold>10</bold></highlight><highlight><italic>c, </italic></highlight>highlighted as shown. The user may then make any necessary corrections, preferably by clicking on the appropriate sentences to toggle the highlights. Control is then returned to the ML learner by depressing the learn button <highlight><bold>12</bold></highlight>. The ML learner then tunes one or more weights and/or other operating parameters to the new correlation data. The algorithm then uses all previously labeled sentences including those just categorized by the user, and categorizes a next set of sentences. This may be repeated until the desired accuracy is achieved. When the user quits via the quit button <highlight><bold>14</bold></highlight>, the algorithm may categorize all remaining sentences in the document. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a schematic diagram of the architecture of an illustrative embodiment of the present invention. Before the ML algorithm is applied, every sentence in the document is initially parsed, as shown at <highlight><bold>20</bold></highlight>. Each sentence is parsed to identify, for example, words, parts-of-speech, phrases, etc. Any parser or tagger may be used. One illustrative parser is known as the Text Tokeniser Toolkit (TTT), which is available from the Language Technology Group of the University of Edenburgh, located in Edenburgh, Scotland. Another illustrative parser is known as the Link Grammar Parser (LGP), available from Carnegie Mellon University, Pittsburgh, Pa. Yet another illustrative parser is Barker&apos;s ML-based semantic recognizer, described in Ken Barker&apos;s PhD thesis, Ottawa-Carleton Institute for Computer Science, University of Ottawa, Ottawa, Ontario, June 1998. Others are also available. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> For some documents, such as maintenance manuals, there are often many grammatical oddities. At a minimum, many maintenance manuals are not written with standard English, but rather often contain abbreviations and/or strange structure. For example, some maintenance manuals may contain parenthetical cross-references, and a large vocabulary unfamiliar to standard parsers. Moreover, sentences may be truncated by the character recognition software used to read the manuals into computer readable form. It has been found that TTT parses these sentences reasonably well, giving fairly accurate part-of-speech tags and syntactic chunks. The LGP provides a reasonable identification of prepositional phrases. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> After parsing each sentence, block <highlight><bold>22</bold></highlight> calculates pair-wise distance metrics between sentences. Then, and as shown at block <highlight><bold>24</bold></highlight>, a small set of sentences are presented to the user for labeling, such as described above with respect to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The labels are used to build a statistical domain model (e.g., word-to-category correlations), as shown at block <highlight><bold>26</bold></highlight>. The domain models may also help identify, for example, a set of appropriate weights and/or operating parameters to tune the metric to the relevant data set. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> Using the tuned metric, the user may enter into a full interactive training mode. The ML algorithm presents the user with a set of training sentences, along with an estimated category for each sentence. The user can make any necessary corrections. After the corrections are made, the ML algorithm may update the model, and then categorize another set of sentences. This iterative process may continue until the user is satisfied with the accuracy of the model. The ML algorithm may then be allowed to categorizes all remaining sentences in the document. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The fully categorized sentences can be used to build fault models for automated reasoning systems. Even after a fault model has been built, the user can still make corrections to the sentence categorizations via block <highlight><bold>24</bold></highlight> to produce an updated model via block <highlight><bold>26</bold></highlight>. This may be used to increase the accuracy of sentence categorization at any time. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a high level diagram showing an illustrative algorithm for assigning sentences to one of several categories. The ML algorithm of the present invention builds clusters of training examples according to their labeled categories. The n-dimensional clusters <highlight><bold>30</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>30</bold></highlight><highlight><italic>c </italic></highlight>depend on features of each categorized sentence in the training examples. For each new target sentence, such as sentence <highlight><bold>32</bold></highlight>, the ML algorithm may select a category <highlight><bold>30</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>30</bold></highlight><highlight><italic>c </italic></highlight>based on the similarity of the target sentence <highlight><bold>32</bold></highlight> to each of the categorized sentences in the training examples. The categorized sentences in the training examples are represented by dots, squares and triangles in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. The similarity between the target sentence <highlight><bold>32</bold></highlight> and the categorized sentences is preferably calculated using the measure of similarity, or distance metric, as described herein. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> The distance metric is preferably a mathematical combination of a set of relevant high-level features that are transformed from a low-level feature space, e.g., the statistical domain model and the natural language parse information. The transformation preferably enables a knowledge-based distance-metric to be built, i.e., one that uses knowledge about the structure and meaning of the sentence. Such a distant metric may enable the ML algorithm to powerfully differentiate between sentence categories. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> One approach for building the distance metric is to leverage recent advances in Natural Language processing technology. Other domain information may also be leveraged wherever possible. By combining one or more NL processing techniques, along with statistical models and any other available information, a single distance metric may be constructed that sufficiently differentiates between sentence categories. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> In one illustrative embodiment, several NL techniques and statistical information are used to provide similarity factors for the distance metric. Some of the NL techniques may include parts-of-speech tagging and syntactic chunks. Parts-of-speech tagging identifies nouns, adverbs, adjectives, etc. in the sentences. Syntactic chunks identify such things as noun phrases, prepositional phrases and verb phrases. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a schematic diagram showing the sentence diagram of a sentence using a natural language parser. A part-of-speech tagger may identify and tag the various parts-of-speech in each sentence. The parts-of-speech may include, for example, nouns, adverbs, adjectives, articles, etc. Referring to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, in the sentence &ldquo;Check the wiring of the ground signal&rdquo;, the word &ldquo;the&rdquo; is a determiner, &ldquo;of&rdquo; is a preposition, the words &ldquo;wiring&rdquo;, &ldquo;ground&rdquo; and &ldquo;signal&rdquo; are nouns, and the word &ldquo;check&rdquo; is a verb. A parser may provide additional natural language syntactic information such as noun, verb and prepositional phrases, and also semantic information such as subject and object. A parser may provide an output of &ldquo;(check_VB) &lsqb; &lsqb; the_DT wiring_NN &rsqb; of_PP &lsqb;the_DT ground_NN signal_NN &rsqb; &rsqb;, where each of the words has a suffix that identifies the part-of-speech of each word, each noun phrase is enclosed in square brackets and each verb phrase is enclosed in parentheses. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> A word model may also be developed and used. A word model is a statistical analysis of word-to-category correlations. Each of these techniques help identify relevant parts of the sentences. By using one of more of these NL techniques, a single distance metric may be constructed that sufficiently differentiates between sentence categories. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> A number of illustrative methods for calculating similarity factors for use in some distance metric calculations are now discussed. <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a diagram showing the calculation of a similarity factor between two sentences using a string overlap function. The illustrative string overlap function calculates how many words match between a first and second sentence, as a percentage of the number of words in the longest of the two sentences. Referring to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, and for illustration purposes, a first sentence may be &ldquo;Do a check and repair the unserviceable wiring&rdquo;, and a second sentence may be &ldquo;Repair the above wiring&rdquo; The words that match between the two sentences are &ldquo;Repair&rdquo;, &ldquo;the&rdquo; and &ldquo;wiring&rdquo;. The maximum number of words in the longest sentence is eight (8). Thus, the similarity factor produced by the string overlap function is <highlight><bold>{fraction (3/8)}, or </bold></highlight>0.375. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> To reduce the effects of spelling errors, stylistic changes, abbreviations, and other variations, a longest common subsequence (LCS) technique may be used when comparing the word in each sentence. The LCS technique may, for example, accept a pair of word as equal if each of the words has at least four (4) letters and the words share more than 80% of their characters. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> A keyword match function may contribute to the similarity metric by comparing only words of the same part-of-speech &ldquo;type&rdquo;; hence the similarity of the meaning of the two sentences can be more accurately determined, as further shown and described below. <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a diagram showing the calculation of a similarity factor between two sentences using an illustrative keyword match function. A keyword is a particular part-of-speech &ldquo;type&rdquo; as described above. The illustrative keyword match function calculates how many keywords match between the two sentences, as a percentage of the maximum number of keywords in the longest sentence. A keyword match occurs when the keyword types are equal and the words match according to the longest common subsequence (LCS) technique described above. To increase the importance of certain part-of-speech &ldquo;types&rdquo;, weights can be applied to each of the keyword types (e.g., noun, verb, adverb, etc). </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, and for illustration purposes, the same two sentences described above with reference to <cross-reference target="DRAWINGS">FIG. 5</cross-reference> are used. Namely, and after being processed by the part-of-speech tagger, the first sentence recites &ldquo;Do_VB a_DT check_NN and_CONJ repair_VB the_DT unserviceable_ADJ wiring_NN&rdquo;, and the second sentence recites &ldquo;Repair_VB the_DT above_ADJ wiring_NN&rdquo;. In this example, verbs are assigned a weight of 2.0, nouns are assigned a weight of 1.0, and all other word types are assigned a weight of zero. Since the _DT, _CONJ and _ADJ word types have a weight of zero, they do not contribute to the overall similarity factor produced by the keyword match function. The words that match between the two sentences and have the same word type are thus &ldquo;Repair_VB&rdquo; and &ldquo;wiring_NN&rdquo;. In addition, the maximum number of keywords in either sentence (with a non-zero weight) is four (4). Thus, the similarity factor produced by the illustrative keyword match function is (2.0&plus;1.0)/4, or 0.75. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> A phrase match function may contribute to the similarity metric by comparing only phrases of the same type, hence the similarity of the meaning of the two sentences can be more accurately determined, as further shown and described below. <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a diagram showing the calculation of a similarity factor between two sentences using an illustrative phrase match function. The illustrative phrase match function calculates how many phrases match between the two sentences, as a percentage of the maximum number of phrases in the longest sentence. Like the keyword match function discussed above, a phrase match may occur when the phrase types are equal and the phrases match according to a longest common subsequence (LCS) technique, as described above. To increase the importance of certain phrase &ldquo;types&rdquo;, weights can be applied to each of the phrase types (e.g., noun-phrase, verb-phrase, prepositional-phrase, etc). Within each phrase, the overlap or keyword match functions may be applied. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, and for illustration purposes, the same two sentences described above with reference to <cross-reference target="DRAWINGS">FIG. 5</cross-reference> and <cross-reference target="DRAWINGS">FIG. 6</cross-reference> are used. Namely, and after being processed by the part-of-speech and grammar tagger, the first sentence recites &ldquo;(Do_VB) &lsqb;a_DT check_NN&rsqb; and_CONJ (repair_VB) &lsqb;the_DT unserviceable_ADJ wiring_NN&rsqb;&rdquo;, and the second sentence recites &ldquo;(Repair_VB) &lsqb;the_DT above_ADJ wiring_NN&rsqb;&rdquo;. In this example, verb-phrases are assigned a weight of 2.0, noun-phrases are assigned a weight of 1.0, and all other phrase types are assigned a weight of zero. Also in this example, a longest common subsequence (LCS) technique is used only requiring 80% of the characters to be the same. The two verb phrases from the first sentence are compared with the one verb phrase from the second sentence; the longest common subsequence (LCS) algorithm is applied over the keywords in each phrase, yielding a match between the &ldquo;repair&rdquo; words (total weight 2.0). The two noun phrases from the first sentence are compared with the one noun phrase from the second sentence; the longest common subsequence (LCS) algorithm is applied over the keywords in each phrase, yielding a match between the &ldquo;wiring&rdquo; words (total weight 1.0). The maximum number of phrases in either sentence (with a non-zero weight) is four (4). Thus, the similarity factor produced by the illustrative phrase match function is (2.0 (the weight of verb phrases)*2.0 (one verb match found in the phrases, with weight of 2.0)&plus;1.0 (the weight of noun phrases)*1.0 (one noun match found in the phrases))/4, or 1.25. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> Another illustrative method for calculating a similarity factor between two sentences uses a model match function. In this particular embodiment, the model match function uses a statistical model that is based on word-to-category statistics based on the observation that certain words or phrases tend to correlate strongly to a particular sentence category. For example, the words &ldquo;repair&rdquo;, &ldquo;replace&rdquo; and &ldquo;install&rdquo; may correlate strongly to &ldquo;fault&rdquo; type statements in a maintenance manual, while the words &ldquo;test&rdquo;, &ldquo;procedure&rdquo; and &ldquo;check&rdquo; may correlate strongly to no-fault type statements. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is table showing some illustrative correlation factors for several model words including the words repair, check, replace and install. The word &ldquo;repair&rdquo; has a correlation factor of 1.00 to &ldquo;fault&rdquo; type statements. The word &ldquo;check&rdquo; has a correlation factor of 0.95 to &ldquo;no-fault&rdquo; type statement. The word &ldquo;replace&rdquo; has a correlation factor of 0.98 to &ldquo;fault&rdquo; type statements, and the word &ldquo;install&rdquo; has a correlation factor of 1.00 to &ldquo;fault&rdquo; type statements. The statistical model may capture NL information to distinguish between different uses of the same word (e.g. &ldquo;service&rdquo; may appear as a noun or a verb). </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> Using these correlation factors, an illustrative model match function may return a similarity value between the two sentences. In doing so, a similarity value is initialized to zero, and is increased by the correlation factor of a model word when both the first sentence and the second sentence include the model word, and is decreased by the correlation factor of a model word when only one of the first or second sentences include the model word. The similarity value may be divided by the number of model words detected in either of the sentences, if desired. By decreasing the similarity value when only one of the first and second sentences include the model word, a negative probability or correlation is applied. This method has proven to be fairly powerful in categorizing sentences. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a diagram showing the calculation of a similarity factor between two sentences using the correlation factors shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. For illustration purposes, the same two sentences described above with reference to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, <cross-reference target="DRAWINGS">FIG. 6</cross-reference> and <highlight><bold>7</bold></highlight> are used. Both sentences include the word &ldquo;repair&rdquo;, but only the first sentence includes the word &ldquo;check&rdquo;. Neither of the sentences include the words &ldquo;replace&rdquo; or &ldquo;install&rdquo;. Thus, the illustrative model match function may return a value of (repair </paragraph>
<paragraph lvl="0"><in-line-formula>(&plus;1)&plus;check (&minus;0.95))/2&equals;0.025. </in-line-formula></paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> The various sentence similarity values discussed above may be combined to calculate a distance metric. <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a diagram showing the calculation of an illustrative distance metric. The illustrative distance D<highlight><subscript>pq </subscript></highlight><highlight><bold>46</bold></highlight> between two sentences p and q is determined by a weighted sum of the votes of each underlying technique. In <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, &ldquo;d<highlight><subscript>1</subscript></highlight>&rdquo; may correspond to the similarity factor calculated using the string overlap function, &ldquo;d<highlight><subscript>2</subscript></highlight>&rdquo; may correspond to the similarity factor calculated using the keyword match function, &ldquo;d<highlight><subscript>3</subscript></highlight>&rdquo; may correspond to the similarity factor calculated using the phrase match function, and &ldquo;d<highlight><subscript>4</subscript></highlight>&rdquo; may correspond to the similarity factor calculated using the model match function. Each of the similarity factors is weighted by a corresponding weighting factor w<highlight><subscript>i</subscript></highlight>. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> As shown at <highlight><bold>48</bold></highlight>, some of the similarity factors d<highlight><subscript>i </subscript></highlight>may rely on some of the information provided by one or more of the other similarity factors d<highlight><subscript>j</subscript></highlight>. When so provided, separate weights w<highlight><subscript>ij </subscript></highlight>may be applied to each of the techniques, if desired. In one example, the similarity factor &ldquo;d<highlight><subscript>3</subscript></highlight>&rdquo; for the phrase match function may rely on the similarity factor &ldquo;d<highlight><subscript>2</subscript></highlight>&rdquo; of the keyword match function, if desired. Experiments were conducted with several of the above ML techniques, and obtained the best results from a nearest-neighbor approach, using k&equals;10 neighbors and a weighted distance voting strategy. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a table showing the calculation of the distance metric D<highlight><subscript>pq </subscript></highlight><highlight><bold>46</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10</cross-reference> using the similarity factors calculated with reference to <cross-reference target="DRAWINGS">FIGS. 5, 6</cross-reference>, <highlight><bold>7</bold></highlight>, and <highlight><bold>9</bold></highlight>. The two sentences used to calculate the illustrative similarity factors in <cross-reference target="DRAWINGS">FIGS. 5, 6</cross-reference>, <highlight><bold>7</bold></highlight>, and <highlight><bold>9</bold></highlight> are reproduced along the top of <cross-reference target="DRAWINGS">FIG. 11</cross-reference>. The first column of <cross-reference target="DRAWINGS">FIG. 11</cross-reference> recites the four illustrative techniques described above, including the string overlap function <highlight><bold>50</bold></highlight>, the keyword match function <highlight><bold>52</bold></highlight>, the phrase match function <highlight><bold>54</bold></highlight> and the model match function <highlight><bold>56</bold></highlight>. The second column, labeled &ldquo;score&rdquo;, recites the similarity factors calculated for each of the NL techniques. The third column <highlight><bold>60</bold></highlight> includes a first set of illustrative weights w<highlight><subscript>i </subscript></highlight>for each of the NL techniques, wherein all the weights are the same and equal to one. Using these weights, the distance metric D<highlight><subscript>pq </subscript></highlight><highlight><bold>46</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10</cross-reference> produces a distance metric value of 2.40, as shown at <highlight><bold>62</bold></highlight>. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> The fourth column <highlight><bold>64</bold></highlight> includes a second set of illustrative weights w<highlight><subscript>i </subscript></highlight>for each of the NL techniques, wherein the string overlap function has a weight of 0.0, the keyword match function and model match function of a weight of 1.0, and the phrase match function has a weight of 2.0. Using these weights, the distance metric D<highlight><subscript>pq </subscript></highlight><highlight><bold>46</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10</cross-reference> produces a distance metric value of 3.275, as shown at <highlight><bold>66</bold></highlight>. Finally, the fifth column <highlight><bold>68</bold></highlight> includes a third set of illustrative weights w<highlight><subscript>i </subscript></highlight>for each of the NL techniques, wherein the string overlap function has a weight of 1.0, the keyword match function and model match function of a weight of 2.0, and the phrase match function has a weight of 0.0. Using these weights, the distance metric D<highlight><subscript>pq </subscript></highlight><highlight><bold>46</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10</cross-reference> produces a distance metric value of 1.9, as shown at <highlight><bold>70</bold></highlight>. During the learning process described above, the weights w<highlight><subscript>i </subscript></highlight>for each of the techniques are preferably updated to reflect the current categorization of sentences. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> The above-described NL techniques are only meant to be illustrative and that numerous other possible techniques can be used in the present invention. For example, to improve the robustness of the system, it is contemplated that related words may be identified and added to a sentence. The related words may include, for example an original word with the prefix or suffix removed, various tenses of the original word, and/or different words with similar meanings as identified by, for example, a domain thesaurus. In addition, it is contemplated that one or more named entities may be extracted from the first sentence and the second sentence; the named entities may include a complex groups of nouns. The named entities may then be treated as a single object when performing word or phrase comparisons. In some embodiments, one or more stop words may also be excluded from the first and second sentences. The stop words may be identified in a predefined stop list, and may include common words that are not likely to help identify the similarity of the first and second sentences. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a graph showing the accuracy of sentence categorization versus the number of sentences used for training for an Airbus A320 legacy maintenance manual. In this experiment, a complete set of 67,000 sentences were obtained from an Airbus A320 maintenance manual. For this data set, the present invention achieved over 99% accuracy after training the sentence with 820 sentences (with 20 sentences per interaction with the user), or approximately one hour of training time. Using current manual methods, only an 80% accuracy level was achieved with 400 hours of conversion time. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> Having thus described the preferred embodiments of the present invention, those of skill in the art will readily appreciate that the teachings found herein may be applied to yet other embodiments within the scope of the claims hereto attached. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for providing a measure of similarity between a pair of sentences, each sentence having a number of words and phrases, the method comprising: 
<claim-text>calculating multiple similarity factors, based on selections of words in the first sentence and the second sentence; and </claim-text>
<claim-text>generating a distance metric using one or more of the similarity factors, the distance metric representing a measure of the similarity between the first sentence and the second sentence. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of processing the first sentence and the second sentence with a natural language algorithm to identify and assign the words in each sentence to one or more natural language categories. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein one or more similarity factors provide a measure of similarity according to natural language information. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein one or more similarity factors provide a measure of similarity according to statistical methods. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein one or more similarity factors provide a measure of similarity according to domain-specific information. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein one or more similarity factors provide a measure of similarity according to other relevant information. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein one or more similarity factors provide a measure of similarity according to a combination of any of natural language, statistical, or other technique. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, where the multiple similarity factors are combined to generate an overall estimate of the similarity of the sentences. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the similarity factors result from one or more of a string overlap function, a keyword match function, a phrase match function, or a model match function. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the string overlap function returns how many words in the first sentence match a word in the second sentence, as a percentage of the number of words in the longest of the first sentence and second sentence. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the keyword match function returns how many words in the first sentence match a word in the second sentence with both words having a common word type, as a percentage of the maximum number of keywords in the first sentence and second sentence. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the common word type is a natural language category, including a noun, a verb, an adverb, a preposition, an object, a direct object, and a subject. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the phrase match function returns a sentence similarity value, wherein the sentence similarity value is related to the similarity of one or more selected phrases that exist in both the first and second sentences, with both phrases having a common phrase type. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the phrase type is one of a noun phrase, a verb phrase, and a prepositional phrase. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the model match function includes at least one set of model words, each model word having a corresponding correlation factor that correlates the model word to a category or domain. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the model match function returns a sentence similarity value, wherein the sentence similarity value is increased by the correlation factor of a model word when both the first sentence and second sentence include the model word, and is decreased by the correlation factor of a model word when only one of the first and second sentences include the model word. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of identifying words related to those in the sentences, and using the related words to complete the similarity factors. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the related words are identified using a domain thesaurus. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the related words are identified by removing a suffix or a prefix from selected words in the first and second sentences. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of extracting one or more named entities from the first and second sentences to allow complex groups of nouns to be treated as a single object. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of excluding from the comparing step selected words that are identified in a predefined stop list. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. A method for determining a distance metric that indicates the similarity of a first sentence and a second sentence, the method comprising the steps of: 
<claim-text>comparing the first sentence and the second sentence using a first comparing function, the first comparing function providing a first similarity indicator; </claim-text>
<claim-text>comparing the first sentence and the second sentence using a second comparing function, the second comparing function providing a second similarity indicator; and </claim-text>
<claim-text>calculating the distance metric by combining the first similarity indicator and the second similarity indicator. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein the distance metric is calculated by performing a weighted sum of the first similarity indicator and the second similarity indicator. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein the first comparing function includes a string overlap function. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, wherein the string overlap function returns how many words in the first sentence match a word in the second sentence, as a percentage of the number of words of the longest of the first sentence and second sentence. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein a word in the first sentence is determined to match a word in the second sentence if the word in the first sentence and the word in the second sentence each exceed a minimum number of characters, and the word in the first sentence shares a predetermined minimum number of characters with the word in the second sentence. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, wherein a word in the first sentence is determined to match a word in the second sentence if the word in the first sentence and the word in the second sentence each have a minimum of four characters, and the word in the first sentence shares at least 80 percent of the characters with the word in the second sentence. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein the first comparing function includes a keyword match function. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein the keyword match function returns how many words in the first sentence match a word in the second sentence with both words having a common word type, as a percentage of the maximum number of keywords in the first sentence and second sentence. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, wherein a word in the first sentence matches a word in the second sentence if the word in the first sentence and the word in the second sentence each exceed a minimum number of characters, and the word in the first sentence shares a predetermined minimum number of characters with the word in the second sentence. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein the word type of each word is assigned by a part-of-speech tagger function. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, wherein the keyword match function only attempts to match those words that have a selected word type. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein the first comparing function is a phrase match function. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, wherein the phrase match function returns a sentence similarity value, wherein the sentence similarity value is related to the similarity of one or more selected phrases that are present in both the first and second sentences, with both phrases having a common phrase type. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00033">claim 34</dependent-claim-reference>, wherein the phrase type is assigned by a grammar tagger function. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00033">claim 35</dependent-claim-reference>, wherein the grammar tagger function can identify selected semantic properties. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, wherein the phrase match function determines a phrase similarity value for each phrase pair by identifying how many words in a first phrase match a word in a second phrase, as a percentage of the maximum number of words in the first phrase and second phrase. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference>, wherein a weighting factor is applied to each phrase similarity value, depending on the phrase type, to compute the phrase match similarity factor. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference>, wherein a word in the first phrase matches a word in the second phrase when the word in the first phrase and the word in the second phrase each exceed a minimum number of characters and share a predetermined minimum number of characters. </claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein the first comparing function is a model match function. </claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference>, wherein the model match function includes at least one set of model words, each model word having a corresponding correlation factor that correlates the model word to desired categories. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference>, wherein the model match function returns a sentence similarity factor, the sentence similarity factor is increased by the correlation factor of a model word when both the first sentence and second sentence include the model word, and is decreased by the correlation factor of a model word when only one of the first and second sentences include the model word. </claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein the first comparing function is either a string overlap function, a keyword match function, a phrase match function, or a model match function. </claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein the second comparing function is either a string overlap function, a keyword match function, a phrase match function, or a model match function. </claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00044">claim 44</dependent-claim-reference>, further comprising the step of: 
<claim-text>comparing the first sentence and the second sentence using a third comparing function, the third comparing function providing a third similarity indicator; and </claim-text>
<claim-text>calculating the distance metric using the first, second and third similarity indicators. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. A method for comparing the similarity of a first text block and a second text block, each text block having a number of words, the method comprising: 
<claim-text>providing a list of correlating words, each correlating word having a corresponding correlation factor that provides a measure of correlation of the correlating word to a particular category; </claim-text>
<claim-text>providing a similarity factor; and </claim-text>
<claim-text>for each correlating word, increasing the similarity factor by the corresponding correlation factor when both the first text block and second text block include the correlating word, and decreasing the similarity factor by the corresponding correlation factor when only one of the first and second text blocks include the correlating word, the similarity factor providing a measure of the similarity between the first text block and the second text block. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference>, wherein the first text block includes the correlating word when a word in the first text block and the correlating word each exceed a minimum number of characters, and the word in the first text block shares a predetermined minimum number of characters with the correlating word. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. A method for categorizing sentences in a document, comprising: 
<claim-text>processing a number of selected sentences, said processing step assigning each of the number of selected sentences to one or more predefined categories, the particulars of the assignment of the number of selected sentences being dependent on a number of operating parameters; </claim-text>
<claim-text>displaying a correspondence between the one or more predefined categories and the selected sentences; </claim-text>
<claim-text>allowing a user to change the assigned category for selected sentences; </claim-text>
<claim-text>updating one or more of the operating parameters to reflect the change in the assigned categories; and </claim-text>
<claim-text>repeating the processing, displaying, allowing and updating steps until a desired accuracy level is achieved. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference>, further comprising the step of processing all sentences in the document once the repeating step is completed. </claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. A method for providing a measure of similarity between a first sentence and a second sentence, each sentence having a number of words, the method comprising: 
<claim-text>comparing one or more words of the first sentence with one or more words of the second sentence, the comparing step returning how many words in the first sentence match a word in the second sentence, as a percentage of the number of words in the longest of the first sentence and second sentence. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. A method according to claim <highlight><bold>50</bold></highlight>, wherein a word in the first sentence is determined to match a word in the second sentence if the word in the first sentence and the word in the second sentence each exceed a minimum number of characters, and the word in the first sentence shares a predetermined minimum number of characters with the word in the second sentence. </claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. A method for providing a measure of similarity between a first phrase and a second phrase, each phrase having a number of words, the method comprising: 
<claim-text>comparing one or more words of the first phrase with one or more words of the phrase sentence, the comparing step returning how many words in the first phrase match a word in the second phrase, as a percentage of the number of words in the longest of the first phrase and second phrase. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. A method according to claim <highlight><bold>52</bold></highlight>, wherein a word in the first phrase matches a word in the second phrase when the word in the first phrase and the word in the second phrase each exceed a minimum number of characters and share a predetermined minimum number of characters. </claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. A method for providing a sentence similarity value for a first sentence and a second sentence, each sentence having a number of words, the method comprising: 
<claim-text>providing a number of model words, each model word having a corresponding correlation factor; and </claim-text>
<claim-text>computing a sentence similarity value by increasing the sentence similarity value by the correlation factor of a model word when both the first sentence and second sentence include the model word, and decreasing the sentence similarity value by the correlation factor of a model word when only one of the first and second sentences include the model word.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004716A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004716A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004716A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004716A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004716A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004716A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004716A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004716A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004716A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004716A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004716A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030004716A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
