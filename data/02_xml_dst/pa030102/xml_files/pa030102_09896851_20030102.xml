<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005286A1-20030102-D00000.TIF SYSTEM "US20030005286A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005286A1-20030102-D00001.TIF SYSTEM "US20030005286A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005286A1-20030102-D00002.TIF SYSTEM "US20030005286A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005286A1-20030102-D00003.TIF SYSTEM "US20030005286A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005286A1-20030102-D00004.TIF SYSTEM "US20030005286A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005286A1-20030102-D00005.TIF SYSTEM "US20030005286A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005286A1-20030102-D00006.TIF SYSTEM "US20030005286A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005286A1-20030102-D00007.TIF SYSTEM "US20030005286A1-20030102-D00007.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005286</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896851</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L009/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>713</class>
<subclass>155000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>380</class>
<subclass>279000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Methods, systems and computer program products for authentication between clients and servers using differing authentication protocols</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>John</given-name>
<middle-name>R.</middle-name>
<family-name>McGarvey</family-name>
</name>
<residence>
<residence-us>
<city>Apex</city>
<state>NC</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>MYERS BIGEL SIBLEY &amp; SAJOVEC</name-1>
<name-2></name-2>
<address>
<address-1>PO BOX 37428</address-1>
<city>RALEIGH</city>
<state>NC</state>
<postalcode>27627</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Methods, systems and computer program products are provided for authenticating a message from a client using a first authentication protocol and a resource manager using a second authentication protocol different from the first authentication protocol by generating a second message from the message from the client. The second message may include information from the client which has been authenticated using the first authentication protocol. The second message is authenticated using the second authentication protocol and the authenticated second message is provided to the resource manager. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to authentication and more particularly to authentication of messages where a principal and a resource utilize different security protocols. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Networked computer applications are often deployed using a &ldquo;tiered&rdquo; model. In this model, the originator of a request for a unit of work (also referred to as a &ldquo;principal&rdquo;) typically initiates that work via a client program (first tier), which then communicates to a web server, or similar second tier server (also referred to as a middle-tier server), which itself communicates, on behalf of the request originator, to other middle-tier servers and/or to third or fourth tier servers such as database servers or other resource managers. When the request is processed by the resource managers, they, typically, evaluate whether the request originator has been authenticated and whether the originator is authorized to perform the unit of work. The resource managers, typically, also record access by the originator of the request in appropriate audit logs. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Such a tiered approach to networked applications may create a need for the secure propagation of security credentials of the request originator through each of the tiers of the application. In such propagation of secure credentials, the request originator delegates to the middle-tier servers the authority to access other servers on their behalf. Thus, the secure propagation of the credentials of the request originator (the requesting &ldquo;principal&rdquo;) may be referred to as &ldquo;delegation&rdquo; or &ldquo;impersonation.&rdquo;</paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> One security mechanism that provides for delegation is Kerberos. In Kerberos, the requesting principal sends the request accompanied by a delegatable service ticket obtained from a trusted third party, the Kerberos key distribution center. The middle-tier server then uses the delegatable service ticket to obtain service tickets from the key distribution center. The obtained service tickets are used to impersonate the requesting principal to other servers in the network as needed to satisfy the original request. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The Kerberos approach to delegation, however, is intended primarily to handle synchronous connection to other servers and may not extend well to cases when the request is passed as an asynchronously transmitted message. A conventional approach for asynchronous message based authentication is to create a digital signature for the message. The digital signature is based on a public/private key pair. An example of such a digital signature approach to authentication is Public Key Infrastructure (PKI) authentication. PKI authentication is also conventionally used for synchronous connections, as in for example, Secure Socket Layer (SSL) and Transport Layer Security (TLS). </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Embodiments of the present invention provide methods, systems, and computer program products for authenticating a message that is sent from an intermediate principal, such as a middle tier server, to a resource manager, where a client originates a request via a message to the intermediate principal using one authentication protocol, and where a different message is sent to the resource manager by the intermediate principal on the client&apos;s behalf, and where this second message is authenticated by a different authentication protocol. The message issued by the client containing the original request, i.e. a first message, may be referred to herein as the &ldquo;C-message.&rdquo; The message issued by the intermediate principal on the client&apos;s behalf and carrying the delegated authority of the client, i.e. a second message, may be referred to as the &ldquo;D-message.&rdquo; Note that each of the C-message or the D-message or both may constitute all or part of an asynchronous transmission, or may constitute all or part of a synchronous data connection. The D-message includes information from the client which has been authenticated by the intermediate principal using the first authentication protocol. In addition to this information, the D-message carries authentication information of the second authentication protocol, and is authenticated by the resource manager using that protocol. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In particular embodiments of the present invention, the first authentication protocol is Kerberos and the second authentication protocol is public key authentication s is enabled by a public key infrastructure (PKI). In such embodiments, authenticating the D-message may be provided by signing the D-message with a private key corresponding to a PKI certificate available to the resource manager. Furthermore, the D-message may be generated by receiving a Kerberos ticket, verifying authenticity of the Kerberos ticket and extracting principal information from the Kerberos ticket if the authenticity of the ticket is verified. The D-message is then generated utilizing the extracted principal information. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> In further embodiments of the present invention, the D-message is generated utilizing the extracted principal information by incorporating the principal information with data from the message from the client to provide the D-message. In such embodiments, the resource manager receives the D-message and authenticates the signature of the D-message. The principal information is extracted from the D-message and the data of the D-message processed based on the principal information from the D-message if the signature of the D-message is authentic. Note that the resource manager determines whether or not the unit of work is authorized based on the identify of the client, not the identity of the middle-tier server or that of the public key signature service. The resource manager, typically, must recognize associated with the D-message signature as a trusted signature service, although the permissions granted tot he identity of the middle-tier server may be different from the permissions granted to the client identity by the resource manager. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> In alternative embodiments of the present invention, the D-message is generated utilizing the extracted principal information by generating at least a first component and a second component of the D-message. The first component contains the principal information and the second component contains data from the message from the client. For example, the first component may contain the principal information that identifies the client and the second component contain the request data from the C-message. In such embodiments, the D-message is signed with a private key by signing the first component with the private key and signing the second component with the private key. Furthermore, the resource manager receives the D-message, authenticates the signatures of the first component and the second component, extracts the principal information from the first component and extracts the data, such as the request data from the C-message, from the second component. The request data of the second component is processed based on the principal information from the first component if the signatures of both components of the D-message are authentic. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> In additional embodiments of the present invention, the Kerberos ticket and the request data from the C-message are sent from a middle-tier server to a public key signature service. In such embodiments, the public key signature service signs the message, so that it can be authenticated by the resource manager, and returns the signed D-message to the middle-tier server so that middle-tier server can forward it to the resource manager. Furthermore, data flows between the middle-tier server and the public key signature service may be authenticated, for example, using Data Encryption Standard (DES), SSL or other such mechanisms for encrypted data communications. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> In still further embodiments of the present invention, the Kerberos service ticket is obtained by the middle-tier server responsive to receiving a delegatable Kerberos ticket. Also, an identification of the middle-tier server may be incorporated in the D-message as this information may be used to trace the delegation of authority from the client to the middle-tier server so as to associate the unit of work with the identities of both the client and the middle-tier server. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> In still further embodiments of the present invention, a system for authentication of messages from a client utilizing Kerberos authentication and a resource manager utilizing public key infrastructure (PKI) authentication is provided by a public key signature service configured to receive a Kerberos service ticket, authenticate the Kerberos service ticket, generate a message incorporating data associated with the authenticated Kerberos service ticket which is signed using a digital signature based on a PKI private key and PKI certificate so as to allow the resource manager to authenticate the message and provide the signed message to the resource manager. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> In additional embodiments of the present invention, the public key signature service is further configured to extract principal information from the Kerberos service ticket and incorporate the principal information with the message. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The system may also include a middle-tier server configured to obtain the Kerberos service ticket responsive to receipt of a delegatable Kerberos ticket and to provide the obtained Kerberos service ticket to the public key signature service. In such embodiments, the public key signature service may be further configured to provide the signed message to the resource manager by returning the signed message to the middle-tier server. The middle-tier server may be further configured to forward the signed message returned by the public key signature service to the resource manager. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> In further embodiments of the present invention, the public key signature service is further configured to extract middle-tier server information from the Kerberos service ticket and incorporate the middle-tier server information with the message. The public key signature service may also be configured to selectively incorporate the principal information into the message with the data associated with the Kerberos service ticket and to selectively generate a second message associated with the message containing the data associated with the Kerberos ticket which contains the principal information and sign the message containing the data and the second message if the second message is generated. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> As will further be appreciated by those of skill in the art, while described above primarily with reference to method aspects, the present invention may be embodied as methods, apparatus/systems and/or computer program products.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram illustrating a system incorporating embodiments of the present invention; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of a data processing system suitable for use as a public key signature service, middle tier server, client and/or server according to embodiments of the present invention; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a more detailed block diagram of a public key signature service according to embodiments of the present invention; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flowchart illustrating operations of a middle-tier server according to embodiments of the present invention; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5A</cross-reference> is a flowchart illustrating operations of a public key signature service according to embodiments of the present invention; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5B</cross-reference> is a more detailed flowchart of operations of <cross-reference target="DRAWINGS">FIG. 5A</cross-reference> according to further embodiments of the present invention; and </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flowchart illustrating operations of a resource manager according to embodiments of the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The present invention now will be described more fully hereinafter with reference to the accompanying drawings, in which illustrative embodiments of the invention are shown. This invention may, however, be embodied in many different forms and should not be construed as limited to the embodiments set forth herein; rather, these embodiments are provided so that this disclosure will be thorough and complete, and will fully convey the scope of the invention to those skilled in the art. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> As will be appreciated by one of skill in the art, the present invention may be embodied as a method, data processing system, or computer program product. According, the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment or an embodiment combining software and hardware aspects all generally referred to herein as a &ldquo;circuit&rdquo; or &ldquo;module.&rdquo; Furthermore, the present invention may take the form of a computer program product on a computer-usable storage medium having computer-usable program code embodied in the medium. Any suitable computer readable medium may be utilized including hard disks, CD-ROMs, optical storage devices, a transmission media such as those supporting the Internet or an intranet, or magnetic storage devices. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Computer program code for carrying out operations of the present invention may be written in an object oriented programming language such as Java&reg;, Smalltalk or C&plus;&plus;. However, the computer program code for carrying out operations of the present invention may also be written in conventional procedural programming languages, such as the &ldquo;C&rdquo; programming language. The program code may execute entirely on the user&apos;s computer, partly on the user&apos;s computer, as a stand-alone software package, partly on the user&apos;s computer and partly on a remote computer or entirely on the remote computer. In the latter scenario, the remote computer may be connected to the user&apos;s computer through a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider). </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The present invention is described below with reference to flowchart illustrations and/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and/or block diagrams, and combinations of blocks in the flowchart illustrations and/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> These computer program instructions may also be stored in a computer-readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable memory produce an article of manufacture including instruction means which implement the function/act specified in the flowchart and/or block diagram block or blocks. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Various embodiments of the present invention will now be described with reference to the figures. As will be appreciated by those of skill in the art in light of the present disclosure, while embodiments of the present invention are described primarily with reference to Kerberos and PKI, embodiments of the present invention may also provide for authentication of messages across other differing authentication protocols. In embodiments of the present invention, the resource manager utilizes an authentication protocol based on a signature and a public key. However, the authentication protocols used by the client and the middle-tier server, or between the middle-tier server and the public key signature service may be authentication based on a user identification and password, challenge based authentication such as Cryptographic Handshake Authentication Protocol (CHAP) or Digest-MD5, or shared secret based authentication where the parties share a common cryptographic key. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates a network configuration having two different authentication protocols (e.g. Kerberos and PKI) in which embodiments of the present invention may be incorporated. As seen in <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> principal may use a client data processing system <highlight><bold>10</bold></highlight> to request a unit of work from a resource manager, such as the resource server data processing system <highlight><bold>20</bold></highlight>. Thus, the client <highlight><bold>10</bold></highlight> and the resource server <highlight><bold>20</bold></highlight> are endpoints for requesting and providing the work unit respectively. The servers between these endpoints may be referred to as &ldquo;middle-tier servers.&rdquo; In the exemplary system illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the client <highlight><bold>10</bold></highlight> utilizes a first authentication protocol, such as Kerberos, and the resource server <highlight><bold>20</bold></highlight> utilizes a second authentication protocol which relies on PKI signatures. The client <highlight><bold>10</bold></highlight> communicates with a key distribution center <highlight><bold>12</bold></highlight> and one or more middle-tier servers <highlight><bold>14</bold></highlight>. The middle-tier servers <highlight><bold>14</bold></highlight> are delegated authority by the client <highlight><bold>10</bold></highlight> to act on its behalf in requesting the unit of work from the resource server <highlight><bold>20</bold></highlight>. Such delegation may be provided by the client <highlight><bold>10</bold></highlight> obtaining and providing a delegatable credential, such as a delegatable Kerberos ticket, to the middle-tier servers <highlight><bold>14</bold></highlight>. The middle-tier servers <highlight><bold>14</bold></highlight> may also obtain delegatable credentials to be forward to the next data processing system in the sequence (tiers) used to reach the resource server <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> As is further seen in <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> public key signature service <highlight><bold>16</bold></highlight> may also be provided. As described in more detail below, the public key signature service <highlight><bold>16</bold></highlight> receives a delegatable credential from a middle-tier server <highlight><bold>14</bold></highlight>, verifies the authenticity of the credential and creates a signed message which may be authenticated by the resource server <highlight><bold>20</bold></highlight> and which contains information about the principal utilizing the client <highlight><bold>10</bold></highlight> and/or a middle tier server <highlight><bold>14</bold></highlight> so that the resource server <highlight><bold>20</bold></highlight> may determine if a requested unit of work is authorized. In PKI embodiments of the present invention, the public key signature service <highlight><bold>16</bold></highlight> may be trusted by the resource server <highlight><bold>20</bold></highlight> based on the use of public and private keys and the distribution of certificates by a certificate authority <highlight><bold>18</bold></highlight>. As is known to those of skill in the art, such public and private keys and certificates may be utilized to uniquely identify the signature of a third party so as to verify the authenticity of information signed by the third party. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> While <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is illustrated as having a single client <highlight><bold>10</bold></highlight> and a single resource server <highlight><bold>20</bold></highlight>, multiple clients and/or servers may also be provided. Furthermore, the middle-tier server <highlight><bold>14</bold></highlight> is illustrated as communicating with a single resource server <highlight><bold>20</bold></highlight> but may communicate with one or more resource and/or middle-tier servers. Similarly, multiple key distribution centers, public key signature services and/or certificate authorities may also be provided. Thus, the present invention should not be construed as limited to the configuration of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> but is intended to cover all configurations capable of carrying out the operations described herein. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates an exemplary embodiment of a data processing system <highlight><bold>230</bold></highlight> suitable for providing a client, a middle tier server, a public key signature service and/or a resource server in accordance with embodiments of the present invention. The data processing system <highlight><bold>230</bold></highlight> typically includes input device(s) <highlight><bold>232</bold></highlight> such as a keyboard or keypad, a display <highlight><bold>234</bold></highlight>, and a memory <highlight><bold>236</bold></highlight> that communicate with a processor <highlight><bold>238</bold></highlight>. The data processing system <highlight><bold>230</bold></highlight> may further include a speaker <highlight><bold>244</bold></highlight>, and an I/O data port(s) <highlight><bold>246</bold></highlight> that also communicate with the processor <highlight><bold>238</bold></highlight>. The I/O data ports <highlight><bold>246</bold></highlight> can be used to transfer information between the data processing system <highlight><bold>230</bold></highlight> and another computer system or a network. These components may be conventional components such as those used in many conventional data processing systems which may be configured to operate as described herein. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram of embodiments of data processing systems that illustrates systems, methods, and computer program products in accordance with embodiments of the present invention. The processor <highlight><bold>238</bold></highlight> communicates with the memory <highlight><bold>236</bold></highlight> via an address/data bus <highlight><bold>348</bold></highlight>. The processor <highlight><bold>238</bold></highlight> can be any commercially available or custom microprocessor. The memory <highlight><bold>236</bold></highlight> is representative of the overall hierarchy of memory devices containing the software and data used to implement the functionality of the data processing system <highlight><bold>230</bold></highlight>. The memory <highlight><bold>236</bold></highlight> can include, but is not limited to, the following types of devices: cache, ROM, PROM, EPROM, EEPROM, flash memory, SRAM, and DRAM. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the memory <highlight><bold>236</bold></highlight> may include several categories of software and data used in the data processing system <highlight><bold>230</bold></highlight>: the operating system <highlight><bold>352</bold></highlight>; the application programs <highlight><bold>354</bold></highlight>; the input/output (I/O) device drivers <highlight><bold>358</bold></highlight>; and the data <highlight><bold>356</bold></highlight>. As will be appreciated by those of skill in the art, the operating system <highlight><bold>352</bold></highlight> may be any operating system suitable for use with a data processing such as OS/2, AIX or System390 from International Business Machines Corporation, Armonk, N.Y., Windows95, Windows98 or Windows2000 from Microsoft Corporation, Redmond, Wash., Unix or Linux configured to support an TCP/IP-based protocol connection. The I/O device drivers <highlight><bold>358</bold></highlight> typically include software routines accessed through the operating system <highlight><bold>352</bold></highlight> by the application programs <highlight><bold>354</bold></highlight> to communicate with devices such as the I/O data port(s) <highlight><bold>246</bold></highlight>, the data storage <highlight><bold>235</bold></highlight> and certain memory <highlight><bold>236</bold></highlight> components. The application programs <highlight><bold>354</bold></highlight> are illustrative of the programs that implement the various features of the data processing system <highlight><bold>230</bold></highlight> and preferably include at least one application which supports operations according to embodiments of the present invention. Finally, the data <highlight><bold>356</bold></highlight> represents the static and dynamic data used by the application programs <highlight><bold>354</bold></highlight>, the operating system <highlight><bold>352</bold></highlight>, the I/O device drivers <highlight><bold>358</bold></highlight>, and other software programs that may reside in the memory <highlight><bold>236</bold></highlight>. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> As is further seen in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the application programs <highlight><bold>354</bold></highlight> may include a public key signature service <highlight><bold>360</bold></highlight>. The public key signature service <highlight><bold>360</bold></highlight> may carry out the operations described herein for authenticating messages received in one authentication protocol to provide authenticatable message in a second authentication protocol. The data portion <highlight><bold>356</bold></highlight> of memory <highlight><bold>236</bold></highlight>, as shown in the embodiments of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, may include a PKI certificate <highlight><bold>364</bold></highlight> and a Kerberos ticket <highlight><bold>362</bold></highlight> received along with a message. The PKI certificate <highlight><bold>364</bold></highlight> and the Kerberos ticket <highlight><bold>362</bold></highlight> may be utilized by the public key signature service <highlight><bold>360</bold></highlight> to authenticate the received message using the two authentication protocols. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> While the present invention is illustrated, for example, with reference to the public key signature service <highlight><bold>360</bold></highlight> being an application program in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, as will be appreciated by those of skill in the art, other configurations may also be utilized while still benefitting from the teachings of the present invention. For example, the public key signature service <highlight><bold>360</bold></highlight> may also be incorporated into the operating system <highlight><bold>352</bold></highlight>, the I/O device drivers <highlight><bold>358</bold></highlight> or other such logical division of the data processing system <highlight><bold>230</bold></highlight>. Thus, the present invention should not be construed as limited to the configuration of <cross-reference target="DRAWINGS">FIG. 3</cross-reference> but is intended to encompass any configuration capable of carrying out the operations described herein. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Operations according to embodiments of the present invention, including operations of the middle-tier server <highlight><bold>14</bold></highlight>, the public key signature service <highlight><bold>16</bold></highlight> and the resource server <highlight><bold>20</bold></highlight>, will now be described with reference to the exemplary network diagram of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> and the flowcharts of <cross-reference target="DRAWINGS">FIGS. 4 through 6</cross-reference>. However, as will be appreciated by those of skill in the art, the network illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is exemplary only. Embodiments of the present invention may be utilized in other network configurations. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> As seen in <cross-reference target="DRAWINGS">FIG. 4, a</cross-reference> middle-tier server <highlight><bold>14</bold></highlight> according to embodiments of the present invention receives a Kerberos ticket (block <highlight><bold>400</bold></highlight>) and determines if the ticket is delegatable (block <highlight><bold>405</bold></highlight>). If not, the ticket is processed in a conventional manner (block <highlight><bold>430</bold></highlight>). If, however, the ticket is delegatable (block <highlight><bold>405</bold></highlight>), the middle-tier server <highlight><bold>14</bold></highlight> obtains a service ticket for the public key signature service <highlight><bold>16</bold></highlight> from the key distribution center <highlight><bold>12</bold></highlight> (block <highlight><bold>410</bold></highlight>). The middle-tier server <highlight><bold>14</bold></highlight> sends the service ticket and the data to be sent to the resource server <highlight><bold>20</bold></highlight> to the public key signature service <highlight><bold>16</bold></highlight> (block <highlight><bold>415</bold></highlight>) and receives back from the public key signature service <highlight><bold>16</bold></highlight> a signed message which includes the data sent and an indication of the principal which requested the unit of work (block <highlight><bold>420</bold></highlight>). The signed message is forwarded to the resource server <highlight><bold>20</bold></highlight> (block <highlight><bold>425</bold></highlight>) by the middle-tier server <highlight><bold>14</bold></highlight>. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5A</cross-reference> illustrates operations of a public key signature service <highlight><bold>16</bold></highlight> according to embodiments of the present invention. As seen in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>A, the public key signature service <highlight><bold>16</bold></highlight> receives the ticket and the associated data (block <highlight><bold>500</bold></highlight>) and authenticates the service ticket utilizing the first authentication protocol which, in the present example, is Kerberos (block <highlight><bold>505</bold></highlight>). The public key signature service <highlight><bold>16</bold></highlight> creates a new message incorporating the principal information from the service ticket with the data associated with the service ticket (block <highlight><bold>510</bold></highlight>). </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The new message may contain one or more messages or parts. For example, if the data associated with the service ticket is a Secure Socket Layer (SSL) challenge, then the information about the principal may not be incorporated directly with the original data but may be incorporated into a separate identity structure which is associated with the original data and is separately signed by the public key signature service <highlight><bold>16</bold></highlight>. In such a case, both the data associated with the service ticket and the identity structure could be signed with the digital signature of the public key signature service <highlight><bold>16</bold></highlight>. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> The public key signature service <highlight><bold>16</bold></highlight> signs the new message with a digital signature utilizing the second authentication protocol (block <highlight><bold>515</bold></highlight>). The signed message is returned to the middle-tier server from which the service ticket was received (block <highlight><bold>520</bold></highlight>). Alternatively, the new message could be forwarded directly to the resource server <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5B</cross-reference> illustrates further details regarding operations of the public key signature service <highlight><bold>16</bold></highlight> according to further embodiments of the present invention. As seen in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>B, the public key signature service <highlight><bold>16</bold></highlight> receives the Kerberos service ticket and the associated data (block <highlight><bold>550</bold></highlight>) and authenticates the service ticket utilizing the Kerberos protocol (block <highlight><bold>555</bold></highlight>). If the service ticket is not authentic (block <highlight><bold>555</bold></highlight>), operations may cease. Alternatively, a log of tickets which fail authentication may be kept for further analysis. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> If the service ticket is authentic (block <highlight><bold>555</bold></highlight>), the principal information is extracted from the ticket (block <highlight><bold>560</bold></highlight>). Optionally, the public key signature service <highlight><bold>16</bold></highlight> may also be determined if an identification of the middle-tier server <highlight><bold>14</bold></highlight> which provided the ticket is to be provided to the resource server <highlight><bold>20</bold></highlight> (block <highlight><bold>565</bold></highlight>). If so, the middle-tier information is also extracted from the service ticket (block <highlight><bold>570</bold></highlight>). </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> A determination is also made if the principal information and/or the middle-tier server information is to be incorporated with the data associated with the ticket (block <highlight><bold>575</bold></highlight>). As described above, such a determination may be made based on the type of data associated with the ticket (e.g. the unit of work requested by the principal using the client <highlight><bold>10</bold></highlight>). If additional data cannot be added to the data associated with the ticket, then a separate identity data structure which includes the principal and/or middle-tier server information may be created as a separate component of the message (block <highlight><bold>580</bold></highlight>). The separate component may be a separate message. If additional data can be added to the data associated with the ticket (block <highlight><bold>575</bold></highlight>), the principal and/or middle-tier server information and the data associated with the ticket may be incorporated into a message for the resource server <highlight><bold>20</bold></highlight> (block <highlight><bold>585</bold></highlight>). In either case, the message and/or messages are signed with PKI private key of the public key signature service <highlight><bold>16</bold></highlight> utilizing conventional PKI signature techniques (block <highlight><bold>590</bold></highlight>) and the signed message(s) returned to the middle-tier server <highlight><bold>14</bold></highlight> from which the service ticket was received (block <highlight><bold>595</bold></highlight>). As described above, alternatively, the signed message(s) could be forwarded to the resource server <highlight><bold>20</bold></highlight> without being returned to the middle-tier server <highlight><bold>14</bold></highlight> from which the service ticket was received . </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Operations of a resource server <highlight><bold>20</bold></highlight> according to exemplary embodiments of the present invention are illustrated in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. As seen in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, the resource server <highlight><bold>20</bold></highlight> receives the signed message or messages from the middle-tier server <highlight><bold>14</bold></highlight> or the public key signature service <highlight><bold>16</bold></highlight> (block <highlight><bold>600</bold></highlight>) and determines if the signature is authentic utilizing the second authentication protocol (block <highlight><bold>605</bold></highlight>). For example, the signature of the message(s) could be verified using conventional PKI techniques. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> If the signature is not authentic (block <highlight><bold>605</bold></highlight>), the data of the message(s) may be rejected (block <highlight><bold>635</bold></highlight>). If the signature is authentic (block <highlight><bold>605</bold></highlight>), it may also be determined if the signer of the message(s) was a trusted party (block <highlight><bold>610</bold></highlight>). If not, the data is rejected (block <highlight><bold>635</bold></highlight>). If the signer is a trusted party (block <highlight><bold>610</bold></highlight>), the identity of the requesting principal is obtained from the message(s) (block <highlight><bold>615</bold></highlight>). It is determined if the requesting principal has the authority to request the unit of work specified by the data (block <highlight><bold>620</bold></highlight>) and, if not, the data is rejected (block <highlight><bold>635</bold></highlight>). If the requesting principal has the authority to request the unit of work (block <highlight><bold>620</bold></highlight>), it may optionally be determined if the middle-tier server <highlight><bold>14</bold></highlight> is authorized to access the resource server <highlight><bold>20</bold></highlight> (block <highlight><bold>625</bold></highlight>) and, if not, the data is rejected (block <highlight><bold>635</bold></highlight>). If the middle-tier server <highlight><bold>14</bold></highlight> is authorized to access the resource server <highlight><bold>20</bold></highlight> (block <highlight><bold>625</bold></highlight>), the data is processed as if sent by the requesting principal (block <highlight><bold>630</bold></highlight>). Optionally, if the data is rejected or if the data is processed, an audit log may be updated to indicate the action taken. Such an audit log may record information about the requesting principal. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> In addition to the operations described above, optionally, communications with the public key signature service <highlight><bold>16</bold></highlight> may be encrypted. Furthermore, while the present invention has been described, in part, with reference to the resource server <highlight><bold>20</bold></highlight>, as will be appreciated by those of skill in the art in light of the present disclosure, the resource server <highlight><bold>20</bold></highlight> is illustrative of resource managers in general. Accordingly, embodiments of the present invention may be utilized to securely access resource managers of differing types. The resource managers may include, for example, security policies for carrying out some or all of the operations described above for authentication of requests to access a resource managed by the resource manager. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> The flowcharts and block diagrams of <cross-reference target="DRAWINGS">FIGS. 1 through 6</cross-reference> illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products for message authentication according to various embodiments of the present invention. In this regard, each block in the flow charts or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the blocks may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be understood that each block of the block diagrams and/or flowchart illustrations, and combinations of blocks in the block diagrams and/or flowchart illustrations, can be implemented by special purpose hardware-based systems which perform the specified functions or acts, or combinations of special purpose hardware and computer instructions. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> Furthermore, in the drawings, certain operations/acts and or blocks which have been indicated as optional are shown in dashed lines. The presence or lack of such a dashed line shall not, however, be construed as requiring any of the elements of the figures other than those necessary to provide the functions, operations and/or acts specified in the claims set forth below. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> In the drawings and specification, there have been disclosed typical illustrative embodiments of the invention and, although specific terms are employed, they are used in a generic and descriptive sense only and not for purposes of limitation, the scope of the invention being set forth in the following claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">That which is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of authenticating a message from a client using a first authentication protocol to a resource manager using a second authentication protocol different from the first authentication protocol, the method comprising: 
<claim-text>generating a second message from the message from the client, the second message including information from the client which has been authenticated using the first authentication protocol; </claim-text>
<claim-text>authenticating the second message using the second authentication protocol; and </claim-text>
<claim-text>providing the authenticated second message to the resource manager. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the first authentication protocol comprises Kerberos and the second authentication protocol comprises public key infrastructure (PKI). </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein the step of authenticating the second message comprises signing the second message with a private key corresponding to a PKI certificate available to the resource manager so as to provide the second message with a signature. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the step of generating a second message comprises: 
<claim-text>receiving a Kerberos ticket; </claim-text>
<claim-text>verifying authenticity of the Kerberos ticket; </claim-text>
<claim-text>extracting principal information from the Kerberos ticket if the authenticity of the ticket is verified; and </claim-text>
<claim-text>generating the second message utilizing the extracted principal information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein the step of generating the second message utilizing the extracted principal information comprises incorporating the principal information with data from the message from the client to provide the second message. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the resource manager carries out the steps of: 
<claim-text>receiving the second message; </claim-text>
<claim-text>authenticating the signature of the second message; </claim-text>
<claim-text>extracting the principal information from the second message; and </claim-text>
<claim-text>processing the data from the second message based on the principal information from the second message if the signature of the second message is authentic. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein the step of generating the second message utilizing the extracted principal information comprises generating at least a first component and a second component of the second message, the first component containing the principal information and the second component containing data from the message from the client. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein the step of signing the second message with a private key comprises signing the first component with the private key and signing the second component with the private key. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the resource manager carries out the steps of: 
<claim-text>receiving the at least two second messages; </claim-text>
<claim-text>authenticating the signatures of the second message; </claim-text>
<claim-text>extracting the principal information from the first component; </claim-text>
<claim-text>extracting the data from the second component; and </claim-text>
<claim-text>processing the data of the second component based on the principal information from the first component if the signatures of the at least two second messages are authentic. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein the step of receiving a Kerberos ticket comprises receiving a Kerberos service ticket from a middle-tier server. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the step of providing the authenticated second message to the resource manager comprises returning the authenticated second message to the middle-tier server. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the Kerberos service ticket and the authenticated second message are encrypted. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the Kerberos service ticket is obtained by the middle-tier server responsive to receiving a delegatable Kerberos ticket. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> further comprising incorporating an identification of the middle-tier server in the second message. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A method of providing authentication for communications between a Kerberos client and a public key infrastructure (PKI) server, the method comprising: 
<claim-text>authenticating a message from the Kerberos client at a party trusted by the PKI server; </claim-text>
<claim-text>signing the authenticated message with the PKI private key of the party trusted by the PKI server; and </claim-text>
<claim-text>forwarding the signed authenticated message to the PKI server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, further comprising incorporating an identification of a principal of the message from the Kerberos client with the signed authenticated message. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the step of incorporating an identification of a principal of the message comprises incorporating the identification of the principal in the message from the Kerberos client. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the step of incorporating an identification of the principal of the message comprises incorporating the identification of the principal into a second message signed with the private key, and wherein forwarding the signed authenticated message comprises forwarding the signed authenticated message and the second message to the PKI server. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the step of authenticating the message is performed responsive to receiving a Kerberos service ticket. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, further comprising incorporating an identification of a source of the Kerberos service ticket with the signed authenticated message. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. A system for authentication of messages from a client utilizing Kerberos authentication and a resource manager utilizing public key infrastructure (PKI) authentication, comprising: 
<claim-text>a public key signature service configured to receive a Kerberos service ticket, authenticate the Kerberos service ticket, generate a message incorporating data associated with the authenticated Kerberos service ticket which is signed using a digital signature based on a PKI private key and PKI certificate so as to allow the resource manager to authenticate the message and provide the signed message to the resource manager. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the public key signature service is further configured to extract principal information from the Kerberos service ticket and incorporate the principal information with the message. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, further comprising a middle-tier server configured to obtain the Kerberos service ticket responsive to receipt of a delegatable Kerberos ticket and to provide the obtained Kerberos service ticket to the public key signature service. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein the public key signature service is further configured to provide the signed message to the resource manager by returning the signed message to the middle-tier server and wherein the middle-tier server is further configured to forward the signed message returned by the public key signature service to the resource manager. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, wherein the public key signature service is further configured to extract middle-tier server information from the Kerberos service ticket and incorporate the middle-tier server information with the message. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein the public key signature service is further configured to selectively incorporate the principal information into the message with the data associated with the Kerberos service ticket and to selectively generate a second message associated with the message containing the data associated with the Kerberos ticket which contains the principal information and sign the message containing the data and the second message if the second message is generated. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. A system for authenticating a message from a client using a first authentication protocol and a resource manager using a second authentication protocol different from the first authentication protocol, comprising: 
<claim-text>means for generating a second message from the message from the client, the second message including information from the client which has been authenticated using the first authentication protocol; </claim-text>
<claim-text>means for authenticating the second message using the second authentication protocol; and </claim-text>
<claim-text>means for providing the authenticated second message to the resource manager. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. A system for providing authentication for communications between a Kerberos client and a public key infrastructure (PKI) server, comprising: 
<claim-text>means for authenticating a message from the Kerberos client at a party trusted by the PKI server; </claim-text>
<claim-text>means for signing the authenticated message with the PKI private key of the party trusted by the PKI server; and </claim-text>
<claim-text>means for forwarding the signed authenticated message to the PKI server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. A computer program product for authenticating a message from a client using a first authentication protocol and a resource manager using a second authentication protocol different from the first authentication protocol, comprising: 
<claim-text>a computer readable storage media having computer readable program code embodied therein, the computer readable program code comprising: 
<claim-text>computer readable program code which generates a second message from the message from the client, the second message including information from the client which has been authenticated using the first authentication protocol; </claim-text>
<claim-text>computer readable program code which authenticates the second message using the second authentication protocol; and </claim-text>
<claim-text>computer readable program code which provides the authenticated second message to the resource manager. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A computer program product for providing authentication for communications between a Kerberos client and a public key infrastructure (PKI) server, comprising: 
<claim-text>a computer readable storage media having computer readable program code embodied therein, the computer readable program code comprising: 
<claim-text>computer readable program code which authenticates a message from the Kerberos client at a party trusted by the PKI server; </claim-text>
<claim-text>computer readable program code which signs the authenticated message with the PKI private key of the party trusted by the PKI server; and </claim-text>
<claim-text>computer readable program code which forwards the signed authenticated message to the PKI server.</claim-text>
</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>4</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005286A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005286A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005286A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005286A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005286A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005286A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005286A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005286A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
