<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030001557A1-20030102-D00000.TIF SYSTEM "US20030001557A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030001557A1-20030102-D00001.TIF SYSTEM "US20030001557A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030001557A1-20030102-D00002.TIF SYSTEM "US20030001557A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030001557A1-20030102-D00003.TIF SYSTEM "US20030001557A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030001557A1-20030102-D00004.TIF SYSTEM "US20030001557A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030001557A1-20030102-D00005.TIF SYSTEM "US20030001557A1-20030102-D00005.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030001557</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09896871</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010628</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G01R023/12</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>324</class>
<subclass>076530</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>System and method for detecting phase offset in a phase-locked loop</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Anuradha</given-name>
<family-name>Pisipaty</family-name>
</name>
<residence>
<residence-us>
<city>San Jose</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>Conexant Systems, Inc.</organization-name>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>SEED INTELLECTUAL PROPERTY LAW GROUP PLLC</name-1>
<name-2></name-2>
<address>
<address-1>701 FIFTH AVE</address-1>
<address-2>SUITE 6300</address-2>
<city>SEATTLE</city>
<state>WA</state>
<postalcode>98104-7092</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A phase detection circuit for a phase-locked loop clock recovery system is described which detects the phase difference between an incoming data signal and a clock. The phase detection circuit is configured to generate two phase detection signals, the difference of which is indicative of the phase error between the incoming data and the clock. The phase detection circuit provides improved performance at high frequencies as well as increased flexibility in design and fabrication. The phase detection circuit in one embodiment comprises four type-D flip-flops and two exclusive-OR (XOR) gates. An incoming data signal is fed to one D flip-flop which is enabled off of a rising or positive edge of the clock which in turn feeds its output to a second D flip-flop enabled off of the same clock edge. The same incoming data is also fed to a third D flip-flop which is enabled off of a falling or negative clock edge of the same clock signal. The output of which is in turn fed into a fourth D flip-flop which is enabled off of the same negative edge. The incoming data is also fed to a first XOR gate, along with the output of the first D flip-flop to generate the error phase detection signal. The outputs of the second and fourth D flip-flops are fed into a second XOR gate to generate the reference phase detection signal. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This invention relates to synchronous data detection, and more specifically, relates to a phase detection circuit that operates in multiple capacities of synchronous data detection. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> In systems for synchronous transmission of digital data, an information signal is sent from a transmitting unit to a receiving unit. This transmission may take place over serial or parallel data channels. In either case the data is sent in synchronism with a clock signal. In order to save bandwidth, the clock signal is normally not transmitted with the data. Hence, the receiving unit receives the signal at the same clock rate at which it is transmitted. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Two typical methods for transmitting digital data are baseband and carrier-based transmission. In baseband transmission, a signal is sent directly over a communications link. In carrier-based transmission, the signal is first modulated onto a carrier signal. The modulated carrier signal is then sent to the receiving unit. Common modulation techniques include amplitude modulation (AM), frequency modulation (FM) and phase modulation (PM). When a modulated signal reaches the receiving unit, it is demodulated from the carrier signal to its original form by demodulation circuitry. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The receiving unit then extracts the clock from the baseband or demodulated carrier-based signal in order to generate a reference by which the data can be interpreted. The method for extracting the clock depends on the type of data format used in the binary signal. Some examples of data formats are non-return to zero (NRZ), return to zero (RZ), biphase and delay-modulation. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Each format has associated advantages and disadvantages. The RZ format, for instance, contains a spectral line at the clock frequency, which makes clock recovery easy. The NRZ format, conversely, does not necessarily contain a spectral line at the clock frequency and requires additional circuitry for extraction. The NRZ format is advantageous in another way, however, in that it uses half the bandwidth as does the RZ format, which increases the amount of data that can be sent. Hence, data formats are chosen primarily by the needs and allowances of the particular application. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> When using a format such as the NRZ format, the clock must be recovered from the signal. This operation is typically performed by a phase-locked loop (PLL). As depicted in <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> PLL <highlight><bold>100</bold></highlight> typically comprises phase offset detection circuitry <highlight><bold>102</bold></highlight>, loop filter circuitry <highlight><bold>104</bold></highlight> and a voltage controlled oscillator (VCO). PLL <highlight><bold>100</bold></highlight> modulates VCO <highlight><bold>106</bold></highlight> until it is in phase with the incoming data. The signal generated by VCO <highlight><bold>106</bold></highlight> is then used as the reference clock to interpret the data signal. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In order to do this, phase detector circuit <highlight><bold>102</bold></highlight> detects the phase difference between the incoming data signal and the output of VCO <highlight><bold>106</bold></highlight> and generates phase detection signals <highlight><bold>108</bold></highlight>. Phase detection signals <highlight><bold>108</bold></highlight> have a difference in average value that corresponds to the difference in phase between the incoming data signal and the VCO <highlight><bold>106</bold></highlight> output. Loop filter <highlight><bold>104</bold></highlight> converts the difference in average value into an analog voltage signal and filters the signal to remove extraneous noise. An example analog voltage signal <highlight><bold>200</bold></highlight> is shown in <cross-reference target="DRAWINGS">FIG. 2A</cross-reference>. Signal <highlight><bold>200</bold></highlight> is fed to VCO <highlight><bold>106</bold></highlight>, which slows down or speeds up in response, bringing the output of VCO <highlight><bold>106</bold></highlight> into phase with the incoming data. Once aligned with the incoming data, the output of VCO <highlight><bold>106</bold></highlight> is used as the clock signal for interpreting incoming data </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> A conventional PLL circuit <highlight><bold>300</bold></highlight> containing a phase detector <highlight><bold>330</bold></highlight> is depicted in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. A description and operating theory behind circuit <highlight><bold>300</bold></highlight> can be found in &ldquo;A Self Correcting Clock Recovery Circuit,&rdquo; <highlight><italic>IEEE Journal of Lightwave Technology</italic></highlight>, vol. LT-3, pp. 1312-1314, December 1985. Circuit <highlight><bold>300</bold></highlight> provides a basic means for aligning data and clock phase and comprises phase detector <highlight><bold>330</bold></highlight>, loop filter <highlight><bold>328</bold></highlight> and VCO <highlight><bold>314</bold></highlight>. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Phase detector <highlight><bold>330</bold></highlight> comprises two D flip flops <highlight><bold>302</bold></highlight> and <highlight><bold>304</bold></highlight> connected in series, and two XOR gates <highlight><bold>306</bold></highlight> and <highlight><bold>308</bold></highlight> tied to the input and output of, respectively, flip-flops <highlight><bold>302</bold></highlight> and <highlight><bold>304</bold></highlight>. Incoming data is supplied to input node <highlight><bold>310</bold></highlight> of flip-flop <highlight><bold>302</bold></highlight> and the input of XOR gate <highlight><bold>306</bold></highlight>. VCO <highlight><bold>314</bold></highlight> provides a clock signal to flip-flop <highlight><bold>302</bold></highlight> at its clock input node <highlight><bold>316</bold></highlight>. D flip-flop <highlight><bold>302</bold></highlight> enables its output <highlight><bold>312</bold></highlight> on every rising edge of this clock signal. Output <highlight><bold>312</bold></highlight> is connected directly to the input of XOR gates <highlight><bold>306</bold></highlight> and <highlight><bold>308</bold></highlight>, as well as to the input to D flip-flop <highlight><bold>304</bold></highlight>. D flip-flop <highlight><bold>304</bold></highlight> enables its output <highlight><bold>318</bold></highlight> on the rising edge of the inverted clock signal provided by VCO <highlight><bold>314</bold></highlight>. Hence, flip-flops <highlight><bold>302</bold></highlight> and <highlight><bold>304</bold></highlight> operate one-half clock cycle apart. The output <highlight><bold>318</bold></highlight> of D flip-flop <highlight><bold>304</bold></highlight> is connected to the second input of XOR gate <highlight><bold>308</bold></highlight>. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Phase detector <highlight><bold>330</bold></highlight> produces two phase detection signals by which the phase offset is measured. The phase detection signals, commonly referred to as reference signals, are square pulse signals generated for each transition of the incoming data and having a fixed width equal to half the clock period. The first phase detection signal is output <highlight><bold>324</bold></highlight> of XOR gate <highlight><bold>308</bold></highlight>. It is a square pulse signal commonly referred to as a reference signal that is generated for every transition of the incoming data and has a fixed width equal to half the clock period. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The second phase detection signal is provided by the output <highlight><bold>322</bold></highlight> of XOR gate <highlight><bold>306</bold></highlight>. The second phase detection signal is a variable width, square pulse signal with a pulse generated for every transition of the incoming data. The width of this square pulse is dependent upon the position of the rising clock edge in relation to each incoming data transition. This signal is commonly referred to as an error signal. When the rising edge of the clock is in phase with the incoming data, the width of the data pulses produced in the error and reference signals are the same. There is no difference in average value between the signals and correspondingly, the frequency of VCO <highlight><bold>314</bold></highlight> is not modulated. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> When the rising edge of the clock lags behind the incoming data transition, the data pulse in the error signal decreases in width and has an average value less than the fixed width pulse of the reference signal. As a result, a negative error voltage is produced by loop filter <highlight><bold>328</bold></highlight> and fed to VCO <highlight><bold>314</bold></highlight>. When the rising edge of the clock arrives before the incoming data transition, the data pulse in the error signal increases in width and has an average value more than the fixed width pulse of the reference signal. As a result, a positive error voltage is produced by loop filter <highlight><bold>328</bold></highlight> and fed to VCO <highlight><bold>314</bold></highlight>. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> As data frequencies rise, the delay, hold and setup times associated with circuit <highlight><bold>300</bold></highlight> become smaller in order to accommodate shorter data pulse widths and to guard against timing violations. However, phase detector <highlight><bold>300</bold></highlight> will begin to experience difficulty at these higher frequencies. Properly balancing propagation delays and drive strengths of the D flip-flops <highlight><bold>302</bold></highlight> and <highlight><bold>304</bold></highlight> becomes very difficult. In order for the flip-flops to be powerful enough to drive their outputs to satisfy shorter hold and setup times, they must be larger in terms of circuit geometry. But as their size increases, the distance the distance that data signal <highlight><bold>310</bold></highlight> must travel also increases and creates longer propagation delays. The propagation delays will begin to violate the hold and setup times of the various logic gates and the circuit will fail to recognize data pulses. These pulses are generally referred to as &ldquo;missed pulses.&rdquo; Missed pulses can translate into a &ldquo;dead zone&rdquo; in the analog voltage signal at the phase detector output, resulting in phase jitter. An analog voltage signal <highlight><bold>202</bold></highlight> with a dead zone <highlight><bold>204</bold></highlight> is demonstrated in <cross-reference target="DRAWINGS">FIG. 2B</cross-reference>. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> Phase jitter is a time variation in the clock edge produced by VCO <highlight><bold>106</bold></highlight>, in which the edge moves back and forth instantaneously and oscillates around the targeted position. This is undesirable because it results in a dynamically varying amount of time available for logic computations. Phase jitter translates to phase noise in the frequency domain, and can prevent PLL <highlight><bold>100</bold></highlight> from locking on the correct data frequency. This is a serious problem because it prevent the receiving unit from correctly reading the transmitted data. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The present invention provides an improved error and reference signal generation method in the phase detection circuitry. This improvement permits high frequency signal phase alignment when incorporated into a phase-locked loop. The improvement also facilitates the balancing of flip-flop size, strength, and density, while maintaining a low propensity for phase jitter at higher frequencies. The improved phase detector system may be broadly conceptualized as a system that uses multiple sections and cascades them in order to prevent timing errors such as missed pulses. This allows the system to operate at higher frequencies without the addition of large amounts of complex circuitry and without the need for highly tuned fabrication processes. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> A phase locked loop that implements an improved phase detector circuit in accordance with the present invention comprises a first section configured to generate a first output signal from an input signal on a first clock edge. The first section also generates a second output signal from the input signal on a second clock edge. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The first section is coupled to a second section configured to generate a third output signal from the first output signal on the first clock edge. The second section also generates a fourth output signal from the second output signal on the second clock edge. By generating the third and fourth output signals on the same clock edge as used in the first section, as opposed to the opposite clock edge, the circuit effectively doubles the time available for correct signal interpretation. This allows for operation at higher frequencies. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The input signal and the first output signal can also be coupled to a third section, which is configured to compare the two signals and to generate a first phase detection signal based on the comparison. The first phase detection signal comprises a pulse for every input signal pulse. The width of the first phase detection signal pulse is dependent on the phase difference between the clock signal and the input signal. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The outputs of the first section and the second section can be coupled to a fourth section, configured to compare the two signals and to generate a second phase detection signal based on the comparison. The second phase detection signal comprises a pulse for every input signal pulse. The width of the second phase detection signal pulse is independent of the phase difference between the clock signal and the input signal, and is used as a reference signal. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Comparison of the average values of the two phase detection signals provides a method for detecting phase offset between the input signal and the clock signal. This information can be fed to a clock generator that can increase or decrease its frequency to bring the input signal and clock signal into phase. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Other systems, methods, features and advantages of the invention will be or will become apparent to one with skill in the art upon examination of the following figures and detailed description. It is intended that all such additional systems, methods, features and advantages be included within this description, be within the scope of the invention, and be protected by the accompanying claims. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The present invention will be described with reference to the accompanying drawings, wherein: </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is block diagram of the typical elements of a phase-locked loop clock recovery system. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> is a typical filtered analog voltage signal as a function of time that is input to a voltage controlled oscillator circuit. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2B</cross-reference> is a typical filtered analog voltage signal as a function of time where the phase-locked loop is operating at higher frequencies resulting in phase jitter. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a conventional phase detector circuit used in the phase detector capacity as depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a schematic diagram of a preferred embodiment of the present invention as implemented in a phase-locked loop clock recovery system. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a timing diagram depicting waveforms present at various nodes in response to an arbitrary input data sequence to the system of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The components in the figures are not necessarily to scale, emphasis instead being placed upon illustrating the principles of the invention. In the figures, like reference numerals designate corresponding parts throughout the different views. </paragraph>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The problems described above, in relation to conventional phase detection circuits, are solved by the current invention. The invention accomplishes this by passing the incoming data through cascaded flip-flops operated off of the same clock edge instead of opposite clock edges. This doubles the amount of time available for the second flip-flop to recognize retimed data coming from the first. The second flip-flop will not read the data coming from the first flip-flop until an entire clock period has past, as opposed to conventional circuitry which would read the data at the next immediate clock edge, or only one-half clock period later. This allows the circuit to function with setup and hold times that would cause conventional circuitry to miss pulses, and allows for operation at higher frequencies. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The addition of a second stage of cascaded flip-flops also provides more freedom to adjust circuit geometry. This is because the outputs of the first stage of flip-flops do not have to drive the additional load created by the reference XOR gate as it would in a conventional circuit. As a result, the first stage of flip-flops can be smaller and therefore more receptive to high speed incoming data, while the second stage can be larger and more capable of driving the output loads. Accordingly, the circuit can meet the needs of a host of different individual applications. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> depicts an example phase-locked loop circuit <highlight><bold>400</bold></highlight> in accordance with one embodiment of the invention. Circuit <highlight><bold>400</bold></highlight> comprises VCO <highlight><bold>436</bold></highlight>, loop filter <highlight><bold>434</bold></highlight> and phase detector <highlight><bold>440</bold></highlight>, shown encompassed by a dashed line. Incoming data is routed to phase detector <highlight><bold>440</bold></highlight> through node <highlight><bold>402</bold></highlight>. Node <highlight><bold>402</bold></highlight> is connected to the inputs of D flip-flop <highlight><bold>404</bold></highlight>, D flip-flop <highlight><bold>406</bold></highlight>, and XOR gate <highlight><bold>408</bold></highlight>. D flip-flop <highlight><bold>404</bold></highlight> has one clock input supplied at node <highlight><bold>410</bold></highlight>, and one output at node <highlight><bold>412</bold></highlight>. D flip-flop <highlight><bold>406</bold></highlight> has one clock input supplied by inverter <highlight><bold>414</bold></highlight> at node <highlight><bold>416</bold></highlight>, and one output at node <highlight><bold>418</bold></highlight>. D flip-flop <highlight><bold>404</bold></highlight> is triggered off of a positive or rising clock edge. D flip-flop <highlight><bold>406</bold></highlight> is triggered off of the opposite clock edge. This opposite edge is equivalent to the negative or falling clock edge in relation to D flip-flop <highlight><bold>404</bold></highlight>. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The output of D flip-flop <highlight><bold>404</bold></highlight> is tied directly to the input of D flip-flop <highlight><bold>420</bold></highlight>, as well as the second input of XOR gate <highlight><bold>408</bold></highlight> at node <highlight><bold>412</bold></highlight>. D flip-flop <highlight><bold>420</bold></highlight> has one clock input at node <highlight><bold>410</bold></highlight>, and one output at node <highlight><bold>422</bold></highlight>. D flip-flop <highlight><bold>420</bold></highlight> is triggered off of the same clock edge as D flip-flop <highlight><bold>404</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The output of D flip-flop <highlight><bold>406</bold></highlight> is tied directly to the input of D flip-flop <highlight><bold>424</bold></highlight> at node <highlight><bold>418</bold></highlight>. D flip-flop <highlight><bold>424</bold></highlight> has one clock input at node <highlight><bold>416</bold></highlight>, and one output at node <highlight><bold>426</bold></highlight>. D flip-flop <highlight><bold>424</bold></highlight> is triggered off of the same clock edge as D flip-flop <highlight><bold>406</bold></highlight>, which is the opposite edge in relation to D flip-flops <highlight><bold>404</bold></highlight> and <highlight><bold>420</bold></highlight>. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The outputs of D flip-flop <highlight><bold>420</bold></highlight> at node <highlight><bold>422</bold></highlight> and D flip-flop <highlight><bold>424</bold></highlight> at node <highlight><bold>426</bold></highlight> are tied to the inputs of XOR gate <highlight><bold>428</bold></highlight>. The output of this gate at node <highlight><bold>430</bold></highlight> is commonly referred to as the REFERENCE <highlight><bold>442</bold></highlight> signal. The REFERENCE <highlight><bold>442</bold></highlight> signal will be a logic high whenever the inputs to XOR gate <highlight><bold>428</bold></highlight> are complementary, or opposite logic levels. The output of XOR gate <highlight><bold>408</bold></highlight> at node <highlight><bold>432</bold></highlight> is commonly referred to as the ERROR <highlight><bold>444</bold></highlight> signal and it functions in the same manner as XOR gate <highlight><bold>428</bold></highlight>, producing a logic high signal whenever the inputs are complementary. These two signals are the phase detection signals for the PLL <highlight><bold>400</bold></highlight> and would be connected directly to a loop filter <highlight><bold>434</bold></highlight> in the same manner as depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. The net difference between these two signals is reflective of the phase offset between the incoming data and the clock provided by VCO <highlight><bold>436</bold></highlight>. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a timing diagram showing the operation of the phase detection circuit <highlight><bold>440</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. The diagram displays the typical timing of this circuit at an instance when an incoming data signal is out of phase with the clock. This diagram only shows the various responses of the elements in phase detector <highlight><bold>440</bold></highlight> as supplied by a clock from VCO <highlight><bold>436</bold></highlight>, it does not show any clock frequency modulations that would result when this circuit is coupled with a charge pump and a loop filter. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> DATA_IN signal <highlight><bold>510</bold></highlight> is the signal present at node <highlight><bold>402</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, where the received data is input into phase detection circuitry <highlight><bold>440</bold></highlight>, i.e. D flip-flops <highlight><bold>404</bold></highlight> and <highlight><bold>406</bold></highlight>, as well as the first input of XOR gate <highlight><bold>408</bold></highlight>. CLOCK signal <highlight><bold>520</bold></highlight> is the clock signal supplied to phase detection circuitry <highlight><bold>440</bold></highlight> at node <highlight><bold>410</bold></highlight>. Q_<highlight><bold>412</bold></highlight> signal <highlight><bold>530</bold></highlight> is the signal output from D flip-flop <highlight><bold>404</bold></highlight> at node <highlight><bold>412</bold></highlight> and supplied to the input of D flip-flop <highlight><bold>406</bold></highlight> and the second input of XOR gate <highlight><bold>408</bold></highlight>. Q_<highlight><bold>422</bold></highlight> signal <highlight><bold>540</bold></highlight> is the signal output from D flip-flop <highlight><bold>420</bold></highlight> at node <highlight><bold>422</bold></highlight> and supplied to the first input of XOR gate <highlight><bold>420</bold></highlight>. CLOCK_INV signal <highlight><bold>550</bold></highlight> is the inverted clock signal supplied to D flip-flop <highlight><bold>406</bold></highlight> at node <highlight><bold>416</bold></highlight>. Q_<highlight><bold>418</bold></highlight> signal <highlight><bold>560</bold></highlight> is the signal output from D flip-flop <highlight><bold>406</bold></highlight> at node <highlight><bold>418</bold></highlight> and supplied to the input of D flip-flop <highlight><bold>424</bold></highlight>. Q_<highlight><bold>426</bold></highlight> signal <highlight><bold>570</bold></highlight> is the signal output from D flip-flop <highlight><bold>424</bold></highlight> at node <highlight><bold>426</bold></highlight> and supplied to the second input of XOR gate <highlight><bold>420</bold></highlight>. ERROR signal <highlight><bold>580</bold></highlight> is the output signal of XOR gate <highlight><bold>408</bold></highlight> present at node <highlight><bold>432</bold></highlight>. REFERENCE signal <highlight><bold>590</bold></highlight> is the signal output from XOR gate <highlight><bold>428</bold></highlight> at node <highlight><bold>430</bold></highlight>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The timing diagram displays the voltage levels present at time T<highlight><bold>0</bold></highlight> after DATA_IN signal <highlight><bold>510</bold></highlight> has been low for an extended period of time. All non-clock signals will remain low during that time. DATA_IN signal <highlight><bold>510</bold></highlight> is a received data signal originating from a transmitting source and is relationally independent from the other signals in the diagram. DATA_IN signal <highlight><bold>510</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is typical of what a received data signal might look like. DATA_IN signal <highlight><bold>510</bold></highlight> first transitions from a low to a high between time T<highlight><bold>2</bold></highlight> and time T<highlight><bold>3</bold></highlight>. At time T<highlight><bold>3</bold></highlight>, CLOCK signal <highlight><bold>520</bold></highlight> transitions from low to high and enables D flip-flop <highlight><bold>404</bold></highlight> to capture the high level present at it&apos;s input <highlight><bold>402</bold></highlight>. This high level is passed to the D flip-flop <highlight><bold>404</bold></highlight> output <highlight><bold>412</bold></highlight> and creates the low to high transition of Q_<highlight><bold>412</bold></highlight> <highlight><bold>530</bold></highlight> which occurs after a delay D<highlight><bold>1</bold></highlight> from time T<highlight><bold>3</bold></highlight>. Delay D<highlight><bold>1</bold></highlight> is the time it takes for the internal D flip-flop <highlight><bold>404</bold></highlight> circuitry to recognize and pass the input data to it&apos;s output. In addition, D<highlight><bold>1</bold></highlight> includes the rise time associated with this output due to the parasitic loads created by the surrounding circuitry. As a result of delay D<highlight><bold>1</bold></highlight>, the input to D flip-flop <highlight><bold>420</bold></highlight> has a logic low level present when CLOCK <highlight><bold>520</bold></highlight> transitions at time T<highlight><bold>3</bold></highlight>. Accordingly, D flip-flop <highlight><bold>420</bold></highlight> output signal Q_<highlight><bold>422</bold></highlight> <highlight><bold>540</bold></highlight> remains at a logic low level. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> DATA_IN <highlight><bold>510</bold></highlight> transitions from high to low shortly after time T<highlight><bold>4</bold></highlight>. The next rising edge on CLOCK <highlight><bold>520</bold></highlight> occurs at time T<highlight><bold>5</bold></highlight>, at which point D flip-flop <highlight><bold>404</bold></highlight> is enabled to capture the logic low level DATA_IN <highlight><bold>510</bold></highlight> signal present at it&apos;s input <highlight><bold>402</bold></highlight>. This low level signal is passed to the D flip-flop <highlight><bold>404</bold></highlight> output <highlight><bold>412</bold></highlight> and creates the high to low transition of Q_<highlight><bold>412</bold></highlight> <highlight><bold>530</bold></highlight> after a delay D<highlight><bold>2</bold></highlight> from time T<highlight><bold>5</bold></highlight>. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> As a result of delay D<highlight><bold>2</bold></highlight>, the input to D flip-flop <highlight><bold>420</bold></highlight> has a logic high signal present when CLOCK <highlight><bold>520</bold></highlight> transitions at time T<highlight><bold>5</bold></highlight>, which results in the low to high transition of Q_<highlight><bold>422</bold></highlight> <highlight><bold>540</bold></highlight>. This is what allows the improved circuit <highlight><bold>440</bold></highlight> to operate at higher frequencies with little phase jitter. By clocking D flip-flop <highlight><bold>420</bold></highlight> on the rising clock edge at time T<highlight><bold>5</bold></highlight>, as opposed to the preceding falling clock edge at time T<highlight><bold>4</bold></highlight>, the circuit minimizes the chance that delay D<highlight><bold>1</bold></highlight> could be so large as to cause D flip-flop <highlight><bold>420</bold></highlight> to miss the DATA_IN pulse. If D flip-flop <highlight><bold>420</bold></highlight> was clocked at the prior clock edge at time T<highlight><bold>4</bold></highlight>, and if delay D<highlight><bold>1</bold></highlight> extended past time T<highlight><bold>4</bold></highlight>, D flip-flop <highlight><bold>420</bold></highlight> would miss the DATA_IN pulse, resulting in a dead zone in the analog voltage signal, which would then translate to undesired phase jitter. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Upon the next rising edge of CLOCK <highlight><bold>520</bold></highlight> at time T<highlight><bold>7</bold></highlight>, DATA_IN <highlight><bold>510</bold></highlight> is low and therefore Q_<highlight><bold>412</bold></highlight> <highlight><bold>530</bold></highlight> remains at a logic low level. D flip-flop <highlight><bold>420</bold></highlight> is enabled with this low logic level present at it&apos;s input <highlight><bold>412</bold></highlight> at time T<highlight><bold>7</bold></highlight>, which results in the high to low transition of Q_<highlight><bold>422</bold></highlight> <highlight><bold>540</bold></highlight>. Because DATA_IN <highlight><bold>510</bold></highlight> remains low through time T<highlight><bold>10</bold></highlight>, signals Q_<highlight><bold>412</bold></highlight> <highlight><bold>530</bold></highlight> and Q_<highlight><bold>422</bold></highlight> <highlight><bold>540</bold></highlight> remain low as well. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> After DATA_IN <highlight><bold>510</bold></highlight> first transitions from low to high, the next rising edge on CLOCK_INV <highlight><bold>550</bold></highlight> occurs at time T<highlight><bold>4</bold></highlight>. This enables D flip-flop <highlight><bold>406</bold></highlight> to capture the high level present at it&apos;s input <highlight><bold>402</bold></highlight>. This high level is passed to the D flip-flop <highlight><bold>406</bold></highlight> output <highlight><bold>418</bold></highlight> and creates the low to high transition of Q_<highlight><bold>418</bold></highlight> <highlight><bold>560</bold></highlight>. Note that Q_<highlight><bold>418</bold></highlight> <highlight><bold>560</bold></highlight> does not transition precisely at time T<highlight><bold>3</bold></highlight>, but does so after a delay D<highlight><bold>3</bold></highlight>. Again, this is accounted for by the time it takes for the internal D flip-flop <highlight><bold>406</bold></highlight> circuitry to recognize and pass the input data to it&apos;s output. In addition, D<highlight><bold>3</bold></highlight> includes the rise time associated with this output due to the parasitic loads created by the surrounding circuitry. As a result of delay D<highlight><bold>3</bold></highlight>, the input to D flip-flop <highlight><bold>424</bold></highlight> has a logic low level present when CLOCK_INV <highlight><bold>550</bold></highlight> transitions at time T<highlight><bold>4</bold></highlight>, which results in the corresponding low signal Q_<highlight><bold>426</bold></highlight> <highlight><bold>570</bold></highlight> present at the output <highlight><bold>426</bold></highlight>. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> DATA_IN <highlight><bold>510</bold></highlight> transitions from high to low shortly after time T<highlight><bold>4</bold></highlight>. The next rising edge on CLOCK_INV <highlight><bold>550</bold></highlight> occurs at time T<highlight><bold>6</bold></highlight>, at which point D flip-flop <highlight><bold>406</bold></highlight> is enabled to capture the logic low level DATA_IN <highlight><bold>510</bold></highlight> signal present at it&apos;s input <highlight><bold>402</bold></highlight>. This low level is passed to the D flip-flop <highlight><bold>406</bold></highlight> output <highlight><bold>418</bold></highlight> and creates the high to low transition of Q_<highlight><bold>418</bold></highlight> <highlight><bold>560</bold></highlight>. Again, this does not happen precisely at time T<highlight><bold>6</bold></highlight>, but after a delay D<highlight><bold>4</bold></highlight>. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> As a result of delay D<highlight><bold>4</bold></highlight>, the input to D flip-flop <highlight><bold>424</bold></highlight> has a logic level high signal present when CLOCK_INV <highlight><bold>550</bold></highlight> transitions, which results in the low to high transition of Q_<highlight><bold>426</bold></highlight> <highlight><bold>570</bold></highlight>. Again this demonstrates how the improved circuit <highlight><bold>440</bold></highlight> can operate at higher frequencies with little phase jitter. By clocking D flip-flop <highlight><bold>424</bold></highlight> on the rising clock edge at time T<highlight><bold>6</bold></highlight>, as opposed to the preceding falling clock edge at time T<highlight><bold>5</bold></highlight>, the circuit minimizes the chance that delay D<highlight><bold>3</bold></highlight> could be so large as to cause D flip-flop <highlight><bold>424</bold></highlight> to miss the DATA_IN pulse. If D flip-flop <highlight><bold>424</bold></highlight> was clocked at the prior clock edge at time T<highlight><bold>5</bold></highlight>, and if delay D<highlight><bold>3</bold></highlight> extended past time T<highlight><bold>5</bold></highlight>, D flip-flop <highlight><bold>424</bold></highlight> would miss the DATA_IN pulse, resulting in a dead zone in the analog voltage signal, which would then translate to undesired phase jitter. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> Upon the next rising edge of CLOCK_INV <highlight><bold>550</bold></highlight> at time T<highlight><bold>8</bold></highlight>, DATA_IN <highlight><bold>510</bold></highlight> is low and therefore Q_<highlight><bold>418</bold></highlight> <highlight><bold>560</bold></highlight> remains at a logic low level. D flip-flop <highlight><bold>424</bold></highlight> is enabled when CLOCK_INV <highlight><bold>550</bold></highlight> transitions at time T<highlight><bold>8</bold></highlight> with this low logic level present at it&apos;s input <highlight><bold>418</bold></highlight>, which results in the high to low transition of Q_<highlight><bold>426</bold></highlight> <highlight><bold>570</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> XOR gate <highlight><bold>408</bold></highlight> presents a low level at its output <highlight><bold>432</bold></highlight> whenever both of its inputs are at the same logic level. From time T<highlight><bold>0</bold></highlight> until shortly after time T<highlight><bold>2</bold></highlight> where DATA_IN <highlight><bold>510</bold></highlight> transitions from low to high, the inputs DATA_IN <highlight><bold>510</bold></highlight> and Q_<highlight><bold>412</bold></highlight> <highlight><bold>530</bold></highlight> to XOR gate <highlight><bold>408</bold></highlight> are low. Therefore the output signal ERROR <highlight><bold>580</bold></highlight> to XOR gate <highlight><bold>408</bold></highlight> is low. During the time period between the transition from low to high of DATA_IN <highlight><bold>560</bold></highlight> and when it transitions to low again, DATA_IN <highlight><bold>510</bold></highlight> is high and Q_<highlight><bold>412</bold></highlight> <highlight><bold>530</bold></highlight> is low. Because the logic levels are different, ERROR <highlight><bold>580</bold></highlight> transitions from low to high. It remains high until Q_<highlight><bold>412</bold></highlight> <highlight><bold>530</bold></highlight> becomes high just after T<highlight><bold>3</bold></highlight>, at which time ERROR <highlight><bold>580</bold></highlight> transitions back to low. ERROR <highlight><bold>580</bold></highlight> transitions to high again in response to DATA_IN <highlight><bold>510</bold></highlight> transitioning to low after T<highlight><bold>4</bold></highlight>. Finally, ERROR <highlight><bold>580</bold></highlight> transitions back to low when Q_<highlight><bold>412</bold></highlight> <highlight><bold>530</bold></highlight> transitions to low after time T<highlight><bold>5</bold></highlight>. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> XOR gate <highlight><bold>428</bold></highlight> presents a logic low level signal REFERENCE <highlight><bold>590</bold></highlight> at its output <highlight><bold>430</bold></highlight> whenever both of its inputs are at the same logic level. From time T<highlight><bold>0</bold></highlight> until shortly after time T<highlight><bold>5</bold></highlight> where Q_<highlight><bold>422</bold></highlight> <highlight><bold>540</bold></highlight> transitions from low to high, the inputs Q_<highlight><bold>422</bold></highlight> <highlight><bold>540</bold></highlight> and Q_<highlight><bold>426</bold></highlight> <highlight><bold>570</bold></highlight> to XOR gate <highlight><bold>428</bold></highlight> are low. Therefore the output signal REFERENCE <highlight><bold>590</bold></highlight> to XOR gate <highlight><bold>428</bold></highlight> is low. During the time period between when Q_<highlight><bold>422</bold></highlight> <highlight><bold>540</bold></highlight> transitions from low to high and when it transitions back to low, Q_<highlight><bold>422</bold></highlight> <highlight><bold>540</bold></highlight> is high and Q_<highlight><bold>426</bold></highlight> <highlight><bold>570</bold></highlight> is low. Because the logic levels are different, REFERENCE <highlight><bold>590</bold></highlight> transitions from low to high. It remains high until Q_<highlight><bold>426</bold></highlight> <highlight><bold>570</bold></highlight> becomes high at which time REFERENCE <highlight><bold>590</bold></highlight> transitions back to low. REFERENCE <highlight><bold>590</bold></highlight> again transitions to high in response to Q_<highlight><bold>422</bold></highlight> <highlight><bold>540</bold></highlight> transitioning to low. Then REFERENCE <highlight><bold>590</bold></highlight> transitions back to low when Q_<highlight><bold>426</bold></highlight> <highlight><bold>570</bold></highlight> transitions to low after time T<highlight><bold>8</bold></highlight>. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> The ERROR <highlight><bold>580</bold></highlight> signal and the REFERENCE <highlight><bold>590</bold></highlight> signal produced between time T<highlight><bold>2</bold></highlight> and time T<highlight><bold>9</bold></highlight> each have an average value. If the ERROR <highlight><bold>580</bold></highlight> signal had an average value equal to the average value of the REFERENCE <highlight><bold>590</bold></highlight> signal, the ERROR <highlight><bold>580</bold></highlight> signal would be in a state corresponding to no phase difference between the DATA_IN <highlight><bold>510</bold></highlight> signal and the CLOCK <highlight><bold>520</bold></highlight> signal. In the example illustrated in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the average value of the ERROR <highlight><bold>580</bold></highlight> signal is different from the average value of the REFERENCE <highlight><bold>690</bold></highlight> signal. This is illustrated by the different pulse widths in the two signals. The ERROR <highlight><bold>580</bold></highlight> signal is in a state corresponding to the DATA_IN <highlight><bold>510</bold></highlight> signal being out of phase with the CLOCK <highlight><bold>520</bold></highlight> signal. The difference between the average values of the two signals is representative of the phase difference between DATA_IN <highlight><bold>510</bold></highlight> and CLOCK <highlight><bold>520</bold></highlight> produced by VCO <highlight><bold>314</bold></highlight>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> ERROR <highlight><bold>580</bold></highlight> and REFERENCE <highlight><bold>590</bold></highlight> signals are fed into a loop filter circuit <highlight><bold>434</bold></highlight>. Loop filter circuitry <highlight><bold>434</bold></highlight> then performs two functions. The first is to determine the difference in the average values of the ERROR <highlight><bold>580</bold></highlight> signal and the REFERENCE <highlight><bold>590</bold></highlight> signal. The second function is to produce an analog voltage corresponding to that difference in value between the two phase detection signals. The analog voltage is then filtered to remove extraneous or unwanted noise by loop filter circuitry <highlight><bold>434</bold></highlight>. This analog voltage is then supplied to VCO <highlight><bold>436</bold></highlight>. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> VCO <highlight><bold>436</bold></highlight> can be a conventional voltage-controlled oscillator that produces a clock signal at its output. The clock signal is a series of square pulses that operates at a frequency which is dependent on the voltage level supplied to the control voltage input terminal. The filtered voltage is supplied to the control voltage input terminal of VCO <highlight><bold>436</bold></highlight> and modulates the oscillator frequency up or down accordingly. VCO <highlight><bold>436</bold></highlight>, for example, can increase its frequency when a positive analog voltage signal is supplied and it can decrease its frequency when a negative analog voltage signal is supplied. The relation between frequency modulation and the analog voltage signal polarity can be chosen arbitrarily to suit the individual application. If the frequency of DATA_IN <highlight><bold>510</bold></highlight> is stable, the CLK <highlight><bold>520</bold></highlight> signal will be brought closer to synchronization with each successive incoming pulse, until the two signal are in phase. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> While various embodiments of the invention have been described, it will be apparent to those of ordinary skill in the art that many more embodiments and implementations are possible that are within the scope of this invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A phase detection circuit comprising: 
<claim-text>a first section configured to generate a first output signal from an input signal on a first clock edge and to generate a second output signal from the input signal on a second clock edge; </claim-text>
<claim-text>a second section, coupled with the first section, the second section configured to generate a third output signal from the first output signal on the first clock edge and to generate a fourth output signal from the second output signal on the second clock edge; </claim-text>
<claim-text>a third section, coupled with the first section, the third section configured to compare the input signal and the first output signal and to generate a first phase detection signal based on the comparison; and </claim-text>
<claim-text>a fourth section, coupled with the first section and the second section, the fourth section configured to compare the third output signal and the fourth output signal and to generate a second phase detection signal based on the comparison. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the width of the first phase detection signal is dependent on the phase difference between the input signal and a clock signal which provides the first and second clock edges. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the first phase detection signal has a first state where the first phase detection signal has an average value that is the same as the average value of the second phase detection signal, the first state corresponding to a condition where the input signal is in phase with the clock signal. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the first phase detection signal has a second state where the first phase detection signal has an average value different than the average value of the second phase detection signal, the second state corresponding to a condition where the input signal is out of phase with the clock signal. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the width of the second phase detection signal is independent of the phase difference between the clock signal and the input signal. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the second phase detection signal pulse has a width corresponding to half of a clock period. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the third section comprises an exclusive OR (XOR) gate. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the fourth section comprises an exclusive OR (XOR) gate. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the first section comprises: 
<claim-text>a first delay section configured to generate the first output signal from an input signal on the first clock edge; and </claim-text>
<claim-text>a second delay section configured to generate the second output signal from the input signal on the second clock edge. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the first delay section comprises a flip-flop. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the second delay section comprises a flip-flop. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the second section comprises: 
<claim-text>a first delay section configured to generate the third output signal from the first output signal on the first clock edge; and </claim-text>
<claim-text>a second delay section configured to generate the fourth output signal from the second output signal on the second clock edge. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the first delay section comprises a flip-flop. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the second delay section comprises a flip-flop. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, and further comprising a clock generator configured to generate the clock signal. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the clock generator modulates the clock signal in proportion to a difference between the first phase detection signal and the second phase detection signal. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A circuit as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the clock generator is a voltage controlled variable frequency oscillator (VCO). </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A method for recovering a clock signal and regenerating a data signal comprising the steps of: 
<claim-text>passing an input signal through a first section configured to generate a first output signal from the input signal on a first clock edge; and generating a second output signal from the input signal on a second clock edge; </claim-text>
<claim-text>passing the first and second output signals through a second section configured to generate a third output signal from the first output signal on the first clock edge and generating a fourth output signal from the second output signal on the second clock edge; </claim-text>
<claim-text>generating a first phase detection signal based on a comparison of the input signal and the first output signal; and </claim-text>
<claim-text>generating a second phase detection signal based on a comparison of the outputs of the second section. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A method as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, and further comprising a step of modulating the output clock signal of a clock generator in proportion to the difference between the first phase detection signal and the second phase detection signal. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A method for recovering a clock signal and regenerating a data signal comprising the steps of: 
<claim-text>passing an input signal through two series connections of delay sections, one section utilizing a first clock edge and the other section utilizing a second clock edge; </claim-text>
<claim-text>generating a first phase detection signal based on a comparison of the input signal and the first output signal of the first delay section; and </claim-text>
<claim-text>generating a second phase detection signal based on a comparison of the outputs of the final delay section in each series connection of delay sections. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. A method as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, and further comprising a step of modulating the output clock signal of a clock generator in proportion to the difference between the first phase detection signal and the second phase detection signal. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. A phase detector comprising: 
<claim-text>a first means for generating a first output signal from an input signal on a first clock edge; and for generating a second output signal from the input signal on a second clock edge; </claim-text>
<claim-text>a second means, coupled with the first means, for generating a third output signal from the first output signal on the first clock edge; and for generating a fourth output signal from the second output signal on the second clock edge; </claim-text>
<claim-text>a third means for comparing the input signal and the first output signal and for generating a first phase detection signal based on the comparison; and </claim-text>
<claim-text>a fourth means, coupled with the second means, for comparing the third output signal and the fourth output signal and for generating a second phase detection signal based on the comparison. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A phase detector as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, and further comprising a clock generating means for generating a clock signal used to provide the first and second clock edges. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A phase detector as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein the clock generating means modulates the clock signal in proportion to the difference between the first phase detection signal and the second phase detection signal. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A system comprising a transmitter configured to transmit a signal and a receiver configured to receive the signal, the receiver comprising: 
<claim-text>a phase detection circuit comprising: 
<claim-text>a first section configured to generate a first output signal from an input signal on a first clock edge; and to generate a second output signal from the input signal on a second clock edge; </claim-text>
<claim-text>a second section, coupled with the first section, the second section configured to generate a third output signal from the first output signal on a first clock edge; and to generate a fourth output signal from the second output signal on the second clock edge; </claim-text>
<claim-text>a third section, coupled with the first section, the third section configured to compare the input signal and the first output signal and to generate a first phase detection signal based on the comparison; and </claim-text>
<claim-text>a fourth section, coupled with the first section and the second section, the fourth section configured to compare the third output signal and the fourth output signal and to generate a second phase detection signal based on the comparison. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the receiver and transmitter communicate over a network.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030001557A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030001557A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030001557A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030001557A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030001557A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030001557A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
