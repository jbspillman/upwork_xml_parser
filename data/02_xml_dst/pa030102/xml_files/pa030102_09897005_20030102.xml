<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005059A1-20030102-D00000.TIF SYSTEM "US20030005059A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005059A1-20030102-D00001.TIF SYSTEM "US20030005059A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005059A1-20030102-D00002.TIF SYSTEM "US20030005059A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005059A1-20030102-D00003.TIF SYSTEM "US20030005059A1-20030102-D00003.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005059</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09897005</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/16</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>709</class>
<subclass>206000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>709</class>
<subclass>219000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Server availability reporting using asynchronous E-mail message</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Berry</given-name>
<middle-name>A.</middle-name>
<family-name>Cobb</family-name>
</name>
<residence>
<residence-us>
<city>Scottsdale</city>
<state>AZ</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Jiyu</given-name>
<family-name>Lin</family-name>
</name>
<residence>
<residence-us>
<city>Erie</city>
<state>CO</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>INTERNATIONAL BUSINESS MACHINES CORPORATION</organization-name>
<address>
<city>ARMONK</city>
<state>NY</state>
<country>
<country-code>US</country-code>
</country>
</address>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>Richard L. Catania., Esq.</name-1>
<name-2>Scully, Scott, Murphy &amp; Presser</name-2>
<address>
<address-1>400 Garden City Plaza</address-1>
<city>Garden City</city>
<state>NY</state>
<postalcode>11530</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method and system for reporting availability of a plurality of servers. The method comprises the steps of for each of said plurality of servers, periodically searching a log file for indication of a crash or shutdown or start, computing the time said crash or shutdown or start occurred, and sending said time and indication as an e-mail to a database on a server. The method further comprises the steps of calculating the duration of downtime for each said crash or said shutdown; for each server, sorting said e-mail by order received; and displaying for each of said plurality of servers, said duration of downtime in said order. For example, the sending step includes the step of sending said e-mail to a database on a pre-identified one server; and the sorting step includes the step of sorting said e-mail by order received by said pre-identified one server. Also, with a preferred embodiment, each of the plurality of servers includes an e-mail function; and the sending step includes the step of, each server using its e-mail function to send the time and indication to said database. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This invention generally relates to distributed data processing systems. More specifically, the invention relates to methods and systems for reporting the availability of servers in a distributed system. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Prior Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Some conventional data processing environments comprise a plurality of user terminals or work stations connected to a central host data processing system. Such data processing environments are typically referred as central or host environments. Increasing in popularity are distributed data processing environments in which user terminals or work stations are connected to plural server data processing systems. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> In a typical distributed environment employing a distributed database management system, a group of administrators collectively perform operational tasks associated with management of servers such as Groupware and E mail servers. Both E Mail and Groupware applications usually generate megabytes of information during normal daily operation. The information is typically stored in a log format. The logs are preferably processed with a view to identifying error conditions and thus to eliminating or at least reducing application server failures. However, the processing of such logs is a laborious activity. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> One particular problem associated with distributed database environments is to provide statistics relating to server availability for a large distributed system, for example one having more than 250 servers. The prior art tools use either data replication or polling to retrieve the necessary data, which either consume huge disk space and bandwidth or take too long for a large number of servers. More specifically, if data replication is used to retrieve the necessary data, then the same amount of data would need to be stored 250 times, and the same data would need to be transmitted through the network 250 times. This is a waste of substantial storage space and bandwidth. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> An object of this invention is to provide an improved method and system for reporting the availability of servers in a distributed data processing system. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Another object of the present invention is to report information on the availability of distributed servers, in a way that decreases the data storage and bandwidth requirements. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> These and other objectives are attained with a method and system for reporting availability of a plurality of servers. The method comprises the steps of for each of said plurality of servers, periodically searching a log file for indication of a crash or shutdown or start, computing the time said crash or shutdown or start occurred, and sending said time and indication as an e-mail to a database on a server. The method further comprises the steps of calculating the duration of downtime for each said crash or said shutdown; for each server, sorting said e-mail by order received; and displaying for each of said plurality of servers, said duration of downtime in said order. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> For example, the sending step includes the step of sending said e-mail to a database on a pre-identified one server; and the sorting step includes the step of sorting said e-mail by order received by said pre-identified one server. Also, with a preferred embodiment, each of the plurality of servers includes an e-mail function; and the sending step includes the step of, each server using its e-mail function to send the time and indication to said database. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> Further benefits and advantages of the invention will become apparent from a consideration of the following detailed description, given with reference to the accompanying drawings, which specify and show preferred embodiments of the invention.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates a distributed data processing system. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows one procedure for compiling and reporting statistics on the availability of a group of distributed servers. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram of a server that may be used as the reporter server in the system of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram of a server that may be used as an application server in the system of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIGS. 1 and 2</cross-reference>, a distributed data processing system <highlight><bold>10</bold></highlight> embodying the present invention comprises a plurality of application server computer systems <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight>, <highlight><bold>16</bold></highlight> and a Reporter or Monitor server computer system <highlight><bold>20</bold></highlight> all interconnected via a network. Each application server provides a service to a set of client user terminals or work stations, and preferably the Reporter server <highlight><bold>12</bold></highlight> is connected to an administration terminal or work station. It should be noted that <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a very simplified illustration of a distributed data processing system. In practice, system <highlight><bold>10</bold></highlight> may have many more application servers than the three shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, and the system may have many additional devices or elements not expressly shown in the Figure. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> In the operation of system <highlight><bold>10</bold></highlight>, the servers collect data about themselves. These data typically include information identifying when each server was started and stopped, and data relating to why the server stopped operating. For example, these data may indicate that operation of a server was stopped by the user, as the result of normal operation of the server, or because the server, or system <highlight><bold>10</bold></highlight>, crashed&mdash;that is, as the result of some fault or error by the server or system <highlight><bold>10</bold></highlight>. Other data may also be collected. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Reporter <highlight><bold>20</bold></highlight> collects data from servers <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight>, <highlight><bold>16</bold></highlight> and issues reports indicating the availability of the servers. Commonly, these reports may be issued on a daily, weekly, or monthly basis. In order to do this, Reporter <highlight><bold>20</bold></highlight> may maintain data for an extended length of time. As discussed above, with prior art systems, the Reporter obtains the desired information by polling or by replication. In accordance with the present invention, each application server of system <highlight><bold>10</bold></highlight> sends, or pushes, the desired information to Reporter <highlight><bold>20</bold></highlight> by electronic mail. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The use of e-mail to push data to a centralized server is much more efficient, in comparison to data replication or polling, in terms of disk space, network bandwidth and speed. The approach of this invention is also easier for administrators to maintain, and can be deployed easily across multiple domains. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> System <highlight><bold>10</bold></highlight>, preferably, uses Domino server&apos;s built-in e-mail capability to send the necessary data to a central server <highlight><bold>20</bold></highlight>. In this way, the storage and bandwidth requirements have significantly decreased, for example by 250 times. This approach also solves a problem that is unsolvable by the polling method: when an outage indicator is received, the polling method cannot determine whether it is the server or it is the network that suffered the outage. The present invention has an added advantage that it can be deployed on multiple domains easily. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> As will be understood by those of ordinary skill in the art, any suitable application servers and Reporter server may be used in the practice of this invention. As an illustrative example, <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows details of one server that may be used as Reporter <highlight><bold>20</bold></highlight>. Server <highlight><bold>20</bold></highlight> comprises a system random access memory (RAM) <highlight><bold>200</bold></highlight>, a system read only memory (ROM) <highlight><bold>210</bold></highlight>, a central processing unit (CPU) <highlight><bold>220</bold></highlight>, a mass storage device <highlight><bold>230</bold></highlight> comprising one or more large capacity magnetic disks or similar data recording media, one or more removable storage means <highlight><bold>240</bold></highlight> such as floppy disk drives, CD ROM drives and the like, a network adaptor <highlight><bold>250</bold></highlight>, a keyboard adaptor <highlight><bold>260</bold></highlight>, a pointing device adaptor <highlight><bold>270</bold></highlight>, and a display adaptor <highlight><bold>280</bold></highlight>, all interconnected via a bus architecture <highlight><bold>290</bold></highlight>. A keyboard <highlight><bold>300</bold></highlight> is coupled to the bus architecture <highlight><bold>290</bold></highlight> via the keyboard adaptor <highlight><bold>260</bold></highlight>. Similarly, a pointing device <highlight><bold>3</bold></highlight> <highlight><bold>1</bold></highlight> <highlight><bold>0</bold></highlight>, such as a mouse, touch screen, tablet, tracker ball or the like, is coupled to the bus architecture <highlight><bold>290</bold></highlight> via the pointing device adaptor <highlight><bold>270</bold></highlight>. Equally, a display, liquid crystal (LCD) panel, or the like, is coupled to the bus architecture <highlight><bold>290</bold></highlight> via the display adaptor <highlight><bold>280</bold></highlight>. Additionally, the DSM server <highlight><bold>10</bold></highlight> is coupled to the servers <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight>, <highlight><bold>16</bold></highlight> via the network adaptor <highlight><bold>250</bold></highlight>. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Basic input output system (BIOS) software is stored in the ROM <highlight><bold>210</bold></highlight> for enabling data communications between the CPU <highlight><bold>220</bold></highlight>, mass storage <highlight><bold>230</bold></highlight>, RAM <highlight><bold>200</bold></highlight>, ROM <highlight><bold>210</bold></highlight>, removable storage <highlight><bold>240</bold></highlight>, and adaptors <highlight><bold>250</bold></highlight>-<highlight><bold>280</bold></highlight> via the bus architecture <highlight><bold>290</bold></highlight>. Stored on the mass storage device <highlight><bold>230</bold></highlight> is operating system software and application software. Further application software may be loaded into the server <highlight><bold>20</bold></highlight> via the removable storage <highlight><bold>240</bold></highlight> or the network adaptor <highlight><bold>280</bold></highlight>. The operating system software enables the server <highlight><bold>20</bold></highlight> to select and run the application software. The application software stored in the server <highlight><bold>20</bold></highlight> is capable of receiving and storing incoming e-mails such as Lotus Notes/Domino. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Also, as an illustrative example, <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows details of a server that may be used as servers <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight>, <highlight><bold>16</bold></highlight>. The application servers <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight>, <highlight><bold>16</bold></highlight> contain software such as Lotus Notes/Domino that is capable of generating system logs and sending out e-mails. This application server comprises a system random access memory (RAM) <highlight><bold>700</bold></highlight>, a system read only memory (ROM) <highlight><bold>710</bold></highlight>, a central processing unit (CPU) <highlight><bold>720</bold></highlight>, a mass storage device <highlight><bold>730</bold></highlight> comprising one or more large capacity magnetic disks or similar data recording media, one or more removable storage means <highlight><bold>740</bold></highlight> such as floppy disk drives, CD ROM drives and the like, a network adaptor <highlight><bold>750</bold></highlight>, a keyboard adaptor <highlight><bold>760</bold></highlight>, a pointing device adaptor <highlight><bold>770</bold></highlight>, and a display adaptor <highlight><bold>780</bold></highlight>, all interconnected via a bus architecture <highlight><bold>790</bold></highlight>. A keyboard <highlight><bold>800</bold></highlight> is coupled to the bus architecture <highlight><bold>790</bold></highlight> via the keyboard adaptor <highlight><bold>760</bold></highlight>. Similarly, a pointing device <highlight><bold>810</bold></highlight>, such as a mouse, touch screen, tablet, tracker ball or the like, is coupled to the bus architecture <highlight><bold>790</bold></highlight> via the pointing device adaptor <highlight><bold>770</bold></highlight>. Equally, a display output device <highlight><bold>820</bold></highlight>, such as a cathode ray tube (CRT) display output device (LCD) panel, or the like, is coupled to the bus architecture <highlight><bold>790</bold></highlight> via the display adaptor <highlight><bold>780</bold></highlight>. Additionally, the each application server <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight>, <highlight><bold>16</bold></highlight> is coupled to the Reporter server <highlight><bold>20</bold></highlight> and to remote client terminals or work stations via the network adaptor <highlight><bold>750</bold></highlight>. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> It will be appreciated preferably the Reporter server is located in terms of system hierarchy, between the application servers <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight>, <highlight><bold>16</bold></highlight> and <highlight><bold>95</bold></highlight> the administration terminal or work station. In operation the Reporter Server operates as a mid-level systems manager. In operation, the application servers <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight>, <highlight><bold>16</bold></highlight> record data transfers in which they are involved, such as message and E Mail to or from the connected client terminals or work stations, in log files. The log files maintained by the application servers <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight>, <highlight><bold>16</bold></highlight> are directed to the Reporter server <highlight><bold>20</bold></highlight>. The server <highlight><bold>20</bold></highlight> processes the received log files to reduce the amount of reporting information sent to the administration terminal or work station. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> While it is apparent that the invention herein disclosed is well calculated to fulfill the objects previously stated, it will be appreciated that numerous modifications and embodiments may be devised by those skilled in the art, and it is intended that the appended claims cover all such modifications and embodiments as fall within the true spirit and scope of the present invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of reporting availability of a plurality of servers, said method comprising the steps of: 
<claim-text>for each of said plurality of servers, periodically searching a log file for indication of a crash or shutdown or start; </claim-text>
<claim-text>computing the time said crash or shutdown or start occurred; </claim-text>
<claim-text>sending said time and indication as an e-mail to a database on a server; </claim-text>
<claim-text>calculating the duration of downtime for each said crash or said shutdown; </claim-text>
<claim-text>for each server, sorting said e-mail by order received; and </claim-text>
<claim-text>displaying for each of said plurality of servers, said duration of downtime in said order. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>the sending step includes the step of sending said e-mail to a database on a pre-identified one server; and </claim-text>
<claim-text>the sorting step includes the step of sorting said e-mail by order received by said pre-identified one server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>each of the plurality of servers includes an e-mail function; and </claim-text>
<claim-text>the sending step includes the step of, each server using its e-mail function to send the time and indication to said database. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>the sending step includes the step of sending said e-mail to a database one pre-identified one server; and </claim-text>
<claim-text>the displaying step includes the step of, said one server, issuing a report showing said durations of downtimes. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>the searching step includes the step of, each of said plurality of servers, searching a log file on said each server for said indication; and </claim-text>
<claim-text>the computing step includes the step of each of said plurality of servers computing the time said crash or shutdown or start of said each server occurred. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A system for reporting availability of a plurality of servers, said method comprising: 
<claim-text>means for periodically searching, for each of said plurality of servers, a log file for indication of a crash or shutdown or start; </claim-text>
<claim-text>means for computing the time said crash or shutdown or start occurred; </claim-text>
<claim-text>means for sending said time and indication as an e-mail to a database on a server; </claim-text>
<claim-text>means for calculating the duration of downtime for each said crash or said shutdown; </claim-text>
<claim-text>means for sorting, for each server, said e-mail by order received; and </claim-text>
<claim-text>a display means for displaying for each of said plurality of servers, said duration of downtime in said order. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A system according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein: 
<claim-text>the sending means includes means for sending said e-mail to a database on a pre-identified one server; and </claim-text>
<claim-text>the sorting means includes means for sorting said e-mail by order received by said pre-identified one server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A system according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein: 
<claim-text>each of the plurality of servers includes an e-mail function; and </claim-text>
<claim-text>each server using its e-mail function to send the time and indication to said database. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A system according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein: 
<claim-text>said e-mail is sent to a database on a pre-identified one server; and </claim-text>
<claim-text>said one server includes means for issuing a report showing said durations of downtimes. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A system according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein: 
<claim-text>the searching means includes means, on each of said plurality of servers, for searching a log file on said each server for said indication; and </claim-text>
<claim-text>the computing means includes means on each of said plurality of servers, for computing the time said crash or shutdown or start of said each server occurred. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A program storage device readable by machine, tangibly embodying a program of instructions executable by the machine to perform method steps for reporting availability of a plurality of servers, said method steps comprising: 
<claim-text>for each of said plurality of servers, periodically searching a log file for indication of a crash or shutdown or start; </claim-text>
<claim-text>computing the time said crash or shutdown or start occurred; </claim-text>
<claim-text>sending said time and indication as an e-mail to a database on a server; </claim-text>
<claim-text>calculating the duration of downtime for each said crash or said shutdown; </claim-text>
<claim-text>for each server, sorting said e-mail by order received; and </claim-text>
<claim-text>displaying for each of said plurality of servers, said duration of downtime in said order. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A program storage device according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein: 
<claim-text>the sending step includes the step of sending said e-mail to a database on a pre-identified one server; and </claim-text>
<claim-text>the sorting step includes the step of sorting said e-mail by order received by said pre-identified one server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A program storage device according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein: 
<claim-text>each of the plurality of servers includes an e-mail function; and </claim-text>
<claim-text>the sending step includes the step of, each server using its e-mail function to send the time and indiction to said database. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A program storage device according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein: 
<claim-text>the sending step includes the step of sending said e-mail to a database on e pre-identified one server; and </claim-text>
<claim-text>the displaying step includes the step of, said one server, issuing a report showing said durations of downtimes. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A program storage device according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein: 
<claim-text>the searching step includes the step of, each of said plurality of servers, searching a log file on said each server for said indication; and </claim-text>
<claim-text>the computing step includes the step of each of said plurality of servers computing the time said crash or shutdown or start of said each server occurred. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A method of reporting availability of a plurality of servers, said method comprising the steps of: 
<claim-text>for each of said plurality of servers, periodically searching a log file for an indication of the occurrence of each of a group of defined conditions for the server; </claim-text>
<claim-text>computing the time of occurrence of the group of defined conditions; </claim-text>
<claim-text>sending said time and said indication, as electronic mail, to a database on a reporter server; </claim-text>
<claim-text>for each of a subset of the group of defined conditions, calculating the duration of time the server is in each of said subset of conditions; </claim-text>
<claim-text>for each server, sorting the electronic mail by order received by the reporter server; and </claim-text>
<claim-text>for each of the plurality of servers, displaying in said order, the duration of time the server is on said subset of conditions. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the group of conditions includes a crash of the server, a shutdown of the server, and a start of the server.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005059A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005059A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005059A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005059A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
