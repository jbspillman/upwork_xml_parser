<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004983A1-20030102-D00000.TIF SYSTEM "US20030004983A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00001.TIF SYSTEM "US20030004983A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00002.TIF SYSTEM "US20030004983A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00003.TIF SYSTEM "US20030004983A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00004.TIF SYSTEM "US20030004983A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00005.TIF SYSTEM "US20030004983A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00006.TIF SYSTEM "US20030004983A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00007.TIF SYSTEM "US20030004983A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00008.TIF SYSTEM "US20030004983A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00009.TIF SYSTEM "US20030004983A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00010.TIF SYSTEM "US20030004983A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00011.TIF SYSTEM "US20030004983A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00012.TIF SYSTEM "US20030004983A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00013.TIF SYSTEM "US20030004983A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00014.TIF SYSTEM "US20030004983A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00015.TIF SYSTEM "US20030004983A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00016.TIF SYSTEM "US20030004983A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00017.TIF SYSTEM "US20030004983A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00018.TIF SYSTEM "US20030004983A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00019.TIF SYSTEM "US20030004983A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00020.TIF SYSTEM "US20030004983A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030004983A1-20030102-D00021.TIF SYSTEM "US20030004983A1-20030102-D00021.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004983</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09897292</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010629</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F007/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>707</class>
<subclass>500000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method for generating and navigating a plurality of menus using a database and a menu template</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Gerald</given-name>
<middle-name>I.</middle-name>
<family-name>Cohen</family-name>
</name>
<residence>
<residence-us>
<city>Franklin</city>
<state>MI</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>LAW OFFICES OF RONALD M ANDERSON</name-1>
<name-2></name-2>
<address>
<address-1>600 108TH AVE, NE</address-1>
<address-2>SUITE 507</address-2>
<city>BELLEVUE</city>
<state>WA</state>
<postalcode>98004</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Menus are created that facilitate access to data in a menu database. Preferably, the menus include a plurality of menus items laid out so as to duplicate the spatial organization of keys on a numeric keypad, such that a one-to-one relationship exists between the keys on the keypad and the menu items. The amount of memory required to store database records relating to individual menus is reduced, because a menu template provides general formatting information. Thus, database records need not include formatting details. When a menu is required, a menu template modifier uses the menu template and the corresponding database record to generate the desired menu. The menus are employed for accessing data in the menu database. An edit function is provided in the menu template modifier to enable custom menus to be developed and modified. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention generally relates to a user interface applicable to retrieving and presenting information, and more specifically, to a method and system for creating and using intuitive menus to access information within a database. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Menus are commonly employed to control software programs and selectively access data. The data or information accessed using a menu can be presented in many forms, including, for example, a text list of items, a still frame image, play of an audio file, display of an animation, a video presentation, or a combination or sequence of such presentations. Providing user-friendly menus for accessing a variety of different types of information in a large database can represent a challenge. In the past, it has been necessary to create and store each menu that may be required. The memory resources needed to store large numbers of menus is significant, as is the programming effort required to generate the menus, particularly if they are complex. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> It would clearly be preferable to provide a software tool that enables a designer to easily create menus, using efficient code, while retaining significant versatility in determining the content of the menus. Rather than requiring that each menu be separately created and then stored for subsequent use, it would also be preferable to store instructions that can be executed to recreate a specific menu when the menu is needed. To reduce the computer memory resources required, a menu template should be employed to interpret the stored menu instructions when automatically recreating a menu. The prior art does not teach or suggest a menu creation system employing a menu template and a set of stored attributes or instructions that define each menu so a menu that was previously created can be recreated when needed. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> A further limitation of most menu systems is that they do not enable data to be easily accessed according to the personal needs of a user. For example, when browsing the Internet, people routinely visit the same sequence of web sites. It would be desirable to provide a user-modifiable menu interface that enables the user to customize and store a sequence of actions or events, so that the sequence can easily be accessed and repeated simply by selecting items from a menu. It would also be desirable to enable the user to bypass one or more of these actions, because of user familiarity or disinterest with the data that would otherwise be presented, or due to a preference to review a plurality of menus more quickly than would be achievable if presentation of all data were compulsory. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The ability to create menus to access such customized sequences would be useful in retrieving information from databases as well. While some databases are static, many are dynamic and include information that is frequently updated. For example, a warehouse inventory database employed by a distribution company might be updated on a daily basis to reflect the actual contents of the warehouse. A salesman for specific product lines marketed by the distribution company is likely to need access to the inventory data to determine the availability and cost information for those product lines on a regular basis. The salesman will find it useful to be able to regularly perform the same type of database search for information related to each product line handled by the salesman. By enabling such database queries to be remembered, the time required to search a database for the information required can be substantially reduced. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Enabling a user to create, define, and customize a menu to access sequential data is also important for creating automated protocols and questionnaires. In this case, a sequence of menu-like displays that include a plurality of user-selectable options can be provided, and the options selected by a user recorded. To provide this function, it is important that a menu system be dynamic, so that menus are not displayed to a user when the user&apos;s prior responses indicate that a previously defined parameter is irrelevant to the user&apos;s current circumstances. Thus, the sequence of questions or protocol displays presented should be automatically modified according to the choices made by the user. It would therefore be desirable to provide a menu system that links menus in sequences, which vary with a user&apos;s selection of menu items. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The optimal presentation of a sequence of menus or of a sequence of events in response to a user action also depends on being able to control the timing of the presentation of the menus or events. For example, a teacher may want to restrict the time available to students for answering each element of an exam so that each student is similarly tested. This type of exam requires that the sequential display of each question and the associated student selectable answers be automated according to the dictates of a timer. It would therefore be desirable to include a timing function in the display of menu items. Other applications of such a timing function will be evident. For example, the automated display of a sequence of web pages, much like an automated slide show, would enable a user to view the successive pages, pause the automation at any time to more fully consider information on a specific web page, and choose the next sequence of web pages that will be visited. It would be desirable to provide a menu system that, when used in conjunction with a computing device such as a desktop computer, portable computer, or a hand-held computing device, will enable a user to create (and/or view) an automated sequential display of items included on selected menus in any desired order and according to any desired timing intervals, without requiring the user to write program code. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> When navigating through most prior art menus employed in information management systems, a mouse or other pointing device, or cursor button and a select button are typically employed to make selection of menu items. When using cursor buttons, one of the menu items on the display is usually highlighted. A user typically must press the cursor buttons several times to move to and highlight a desired item. Then, the user must press a select button (e.g., the Enter key) to indicate to the system that the highlighted item has been selected. A major drawback of this technique is the inconvenience engendered by requiring the user to press a button multiple times. A mouse or other pointing device might appear to be more convenient; yet, using a mouse requires some degree of skill and precision and can be tedious when an item being selected is accessed on successive displays, so that continuous repositioning of the cursor is required. This problem becomes an issue when the user wants to quickly view a series of displays, but must move the mouse cursor a substantial distance over each display to select and actuate a control to cause the next display to be viewed. Of greater concern, manipulating a mouse generally requires the user&apos;s hand be removed from the keyboard. The continuing movement of the user&apos;s hand between the mouse and the keyboard quickly becomes inefficient and tiring. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Touch sensitive monitors and voice recognition systems provide alternatives to the mouse and cursor button systems described above in selecting menu items. However, touch sensitive monitors are relatively costly, and require frequent cleaning to remove fingerprints and body oils, and also require a user to remove a hand from the keyboard to make a selection by touching the screen. While voice recognition technology is gradually becoming more accurate, it is not yet a mature or widely adopted technology. To minimize errors, the user must &ldquo;train&rdquo; the software and speak clearly and at a level well above the ambient noise. While voice recognition technology frees the user&apos;s hands from the need to touch the keyboard, using voice recognition technology reduces privacy, cannot be used in noisy environments, and the data input often requires correction. Therefore, it would be desirable to provide a menu-based system that enables a user to rapidly select menu items or data objects with a greater ease and accuracy than can be achieved by using a mouse, using a cursor button system, using a touch screen, or using voice recognition technology. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Preferably, a menu system should be an input device, such as a keyboard. A computer keyboard is the most common input device and is thus an ideal device for selecting data objects or menu items. The numeric keypad portion of a keyboard (keys 0-9, &ldquo;Num Lock&rdquo;, &ldquo;/&rdquo;, &ldquo;*&rdquo;, &ldquo;&minus;&rdquo;, &ldquo;&plus;&rdquo;, and &ldquo;Enter&rdquo;) has particular advantages as an electronic input device for entering selections. Some form of numeric keypad is almost universally included on all computer keyboards, as well as on mobile devices such as portable phones. The numeric keypad is designed for rapid entry of digits, and as such, can be used for the rapid selection of menu options. It would therefore also be desirable to provide a menu system that incorporates a menu template for generating and displaying any required menu items in the format of the keys on a numeric keypad so that each item on a menu has a one-to-one relationship with a corresponding key on the numeric keypad, thus enabling a user to rapidly select menu items without removing a hand from the keyboard. From the preceding discussion, it will be apparent that a menu system tool adapted for use with a database should enable menu items to be selected with a numeric keypad. In addition, the menu system tool should include a menu template that enables menus to be defined and recreated when needed, to reduce the amount of system memory required to store different menus. The menu system tool should enable a user to create a variety of different menus without writing code, and should optionally include a timing function for increased versatility. The prior art does not teach or suggest such a menu system tool. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> In accord with one aspect of the present invention, a method is defined for enabling a user to select a specific menu item from among a plurality of different menu items being displayed on a screen. A one-to-one relationship is established between menu items and specific keys on an input device. The steps of the method include providing an input device that includes a plurality of the specific keys, and generating a menu that includes a plurality of menu items. The menu is displayed to a user in a format such that there is a one-to-one relationship between an individual menu item and a specific key. A user can then select a specific menu item by manipulating the corresponding specific key. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> In one embodiment, the one-to-one relationship is established by formatting the appearance of the menu to generally duplicate an appearance of at least a portion of the plurality of the keys, so that a user can visually discern the one-to-one relationship between an individual menu item and its corresponding key. Unique labels included on the menu items can also indicate the corresponding keys. Preferably, the keyboard includes a numeric keypad, and the layout of the menu items generally duplicates the layout of the keys on the numeric keypad. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Another aspect of the present invention is directed to a method for enabling a user to select a specific menu item from among a plurality of different menu items being displayed on a screen. The steps of the method include providing a keyboard input device that includes a plurality of keys. A menu is generated that includes a plurality of menu items and the menu items are displayed to a user such that there is a one-to-one relationship between each menu item and a specific key. The user is enabled to select a menu item by manipulating the key that corresponds to the menu item. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> Another aspect of the present invention is directed to a method for creating a plurality of menus stored in a menu database using a menu template and a menu template modifier. A database program is employed to open a menu database. The steps of this method include providing a plurality of database records in the menu database that each contain information relating to each menu and to menu items included in the menus. The menu template defines a format of each menu, and the menu template modifier employs the menu template and the database records to determine the appearance of each menu and menu item based on data entered in a plurality of database records and included in the menu database. Specifically, the menu template modifier is employed to specify an appearance of a selected menu and to enter data in a database record for each menu item in the selected menu. The data provided in a database record for a menu item define each event that is executed when the menu item is selected during the use of the menu. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The menu template preferably formats the menu items to generally duplicate the layout of the keys on a numeric keypad portion of a computer keyboard, so that there is a clear one-to-one relationship between each menu item and a corresponding key on the numeric keypad, as described above. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Another aspect of the present invention is directed to a method for creating and saving a menu. The method includes the steps of providing a database program that opens a menu database into which database records can be stored, a menu template, and menu template modifier. A user is enabled to edit a blank menu using the menu template to create a menu. Using the menu template modifier, a database record is created in the menu database and contains data specifying an appearance and other parameters of the menu. Also, the user is enabled to specify parameters for each of a plurality of menu items included in the menu database, wherein the parameters for each menu item are included in the same database record. The parameters define an appearance of a menu item and specify any actions associated with the menu item that occur when the menu item is selected by a user during use of the menu. These actions include at least one of displaying an image, playing an audio file, playing a video file, dialing a telephone number, executing a file, accessing a hyperlink, accessing another menu, and applying a focus on a specific menu item in a menu. All data relating to a specific menu are included in a single database record that defines that menu. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The actions preferably occur in a specified order and preferably occur in a sequence controlled by a timer. The time interval is preferably defined as one of the parameters in the database record for a menu item, but is alternatively controlled by a user. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Yet another aspect of the present invention is directed to a method for reducing an amount of memory required to store a plurality of menus. This method includes the steps of providing a database program, a menu template, a menu template modifier, and a database opened by the database program in which a plurality of database records can be stored. A user is enabled to generate menus using the menu template and the menu template modifier. The menu template modifier produces a database record for each menu that contains data specifying an appearance and other parameters of the menu, and an appearance and other parameters of each item in the menu. The menu template modifier subsequently recreates a menu when required using the database record that were created for the menu and its menu items, and the menu template, which is used to define a format for the menus. Since the database need not store different format data for each of the plurality of menus, an amount of memory required to store the plurality of menus is substantially reduced. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> Another aspect of the present invention is directed to a method for accessing data in a menu database using a plurality of menus. The method includes the step of providing a menu database program, at least one menu database that includes a plurality of database records defining the plurality of menus and a plurality of menu items in the plurality of menus, a menu template, and a menu template modifier. A user is enabled to select and open the menu database with the database program and to select a menu from among a plurality of menus to be recreated and displayed. The menu template modifier, the menu template, and a database record are used to recreate the menu selected from among the plurality of menus. The menu thus recreated includes a plurality of individually selectable menu items. The user is then enabled to select at least one of the plurality of menu items, and in response, any events associated with the menu item selected are caused to occur. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Preferably, the events that are caused to occur in response to the selection of a menu item include at least one of changing the menu database, displaying an additional menu, setting the focus on an additional menu item, displaying an image, displaying textual data, playing audio data, presenting audio-visual data, displaying video data, connecting to hyperlinked data, connecting to a webpage, and establishing a telephonic connection. Also preferably, a sequencer component is provided that determines an order in which a plurality of events occur in a timed sequence. Preferably, a bypass function enables the user to deactivate or reactivate the occurrence of some or all of these events. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> A tracker component is preferably provided for recording each menu item selected. When an additional menu is displayed to a user, the method further includes the step of enabling the tracker component to generate a textual report of menu items selected by a user on an immediately preceding menu. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Another aspect of the present invention is directed to an article of manufacture adapted for use with a computer. The article includes a memory medium and a plurality of machine instructions stored on the memory medium, which when executed by a computer, cause the computer to carry out functions generally consistent with corresponding steps of any of the related methods described above. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The present invention also includes a system having a memory in which a plurality of machine instructions are stored, a display, a keyboard input device comprising a plurality of keys, and a processor that is coupled to the display and to the memory to access the machine instructions. The processor executes the machine instructions and thereby implements a plurality of functions that are generally consistent with the steps of any of the related methods described above. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWING FIGURES </heading>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The foregoing aspects and many of the attendant advantages of this invention will become more readily appreciated as the same becomes better understood by reference to the following detailed description, when taken in conjunction with the accompanying drawings, wherein: </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a computer system suitable for implementing the present invention; </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 2A and 2B</cross-reference> are simplified block diagrams respectively illustrating the functional components, and the relationship between a menu template, a menu template modifier, and database records, as used in the present invention; </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a flow chart illustrating the logical steps implemented to navigate a database using a plurality of menus generated using the menu template, menu template modifier, and data from a database record, in accord with the present invention; </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is an isometric view of a preferred input device, a conventional keyboard that includes a numeric keypad; </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a simplified schematic view of a numeric keypad suitable for implementing the present invention; </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6A</cross-reference> is a simplified block diagram illustrating a menu template that duplicates the layout of the numeric keypad of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>; </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6B</cross-reference> illustrates a preferred plurality of menu functions that are consistent from one menu to the next and are based on the menu template of <cross-reference target="DRAWINGS">FIG. 6A</cross-reference>; </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7A</cross-reference> is a is simplified block diagram illustrating a dialog box presented to a user to enable a user to navigate among a plurality of menus in a plurality of databases; </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7B</cross-reference> is a simplified block diagram illustrating a dialog box presented to a user to enable a user to manage a plurality of menus in a plurality of databases; </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a schematic view of a menu display that establishes a one-to-one relationship between a menu item and a key by matching menu item labels with key labels; </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a schematic view of a menu display that establishes a one-to-one relationship between a menu item and a key based upon labels, and duplicates the layout of keys in a numeric keypad; </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a schematic view of the menu display of <cross-reference target="DRAWINGS">FIG. 9</cross-reference> in which graphic images are included on some of the menu items; </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a flow chart illustrating the logical steps implemented in accord with the present invention to enable an optional timer function in menus; </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a flow chart illustrating the logical steps implemented in accord with the present invention to enable a menu template modifier to use a menu template and a database records to generate a menu; </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a flow chart illustrating the logical steps implemented in accord with the present invention to enable a sequencer function to determine events occurring in a sequence when a specific menu item is selected; </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a flow chart illustrating the logical steps implemented in accord with the present invention to enable a navigator component to replace an existing menu with another menu; </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a flow chart illustrating the logical steps implemented in accord with the present invention to enable a tracker function to record user-elected menu items and generate a report based on user selections; </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a simplified block diagram illustrating an exemplary report provided by the tracker function of <cross-reference target="DRAWINGS">FIG. 15</cross-reference>; </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a table illustrating an exemplary menu database in accord with the present invention; </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18A</cross-reference> is a simplified block diagram illustrating an exemplary menu based on the menu template of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>A and the menu database of <cross-reference target="DRAWINGS">FIG. 17</cross-reference>; </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18B</cross-reference> is a simplified block diagram illustrating an exemplary menu based on the menu template of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>A and the menu database of <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, in which a coversheet hides the individual menu buttons representing individual menu items; </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a simplified block diagram illustrating an exemplary menu based on the menu template of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>A and the menu database of <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, which is displayed to a user who selects a third menu item from the menus of <cross-reference target="DRAWINGS">FIGS. 18A and 18B</cross-reference>; </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a simplified block diagram illustrating the exemplary menu of <cross-reference target="DRAWINGS">FIG. 19</cross-reference> after a user has enabled an edit function in accord with the present invention; </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> is a is simplified block diagram illustrating a dialog box displayed to a user to enable a user to edit a specific menu item within a menu; </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a is simplified block diagram illustrating a dialog box displayed to a user to enable a user to edit a specific menu in a specific menu database; and </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> is a simplified block diagram illustrating an exemplary menu designed to function as an interactive questionnaire.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF THE PREFERRED EMBODIMENT </heading>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The present invention provides a software tool that enables a user to create menus that employ a menu database and which are used to access the data in the database. The data accessed in the menu database may include different types of information, including, but not limited to, text, images, documents, phone numbers, and Internet addresses. Selection of a menu item can result in the automated selection of additional items from the same or different menus, and/or in the display of additional menus. An optional timing function can be applied to a menu to provide an automated slideshow presentation of data and predefined actions to occur. For example, selection of a single menu item can in succession cause an image or document to be displayed, audio data to be played, and a web page to be accessed and displayed, and the user can interrupt the successive presentation of these elements at anytime. This tool can also be used to develop customized questionnaires that access a sequence of questions and record a user&apos;s response. Preferably, each menu item has a one-to-one relationship with a different one of a plurality of keys on an input device, such as the numeric keypad of a computer keyboard, so that a menu item can be selected in a very intuitive manner simply by actuating a corresponding key on the keyboard. While at least one preferred embodiment of the present invention will be utilized in conjunction with a computing system that includes a display and keyboard input device, it should be understood that other types of input devices can be employed to navigate a plurality of menus created using the method of the present invention. Input devices such as pressure or touch sensitive display screens, numeric and alphanumeric keypads, or even voice activated input devices can be employed to navigate menus created in accord with the method of the present invention. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> Before explaining how these features are implemented, it will be helpful to define several terms. The term &ldquo;database record&rdquo; encompasses a row of related data within a database. The terms &ldquo;input device&rdquo; as used herein and in the claims that follow refer to any device employed by a user to input data into a computing device, or to enter commands, or make selections affecting the operation of a computing device. The most common input devices are computer keyboards and computer pointing devices. While most personal computers includes a pointing device such as a mouse, trackball, pressure sensitive pad, joystick, or finger actuated control, a key feature of at least one preferred embodiment of the present invention is its use of a menu comprising menu items displayed to the user in a configuration that generally duplicates the appearance of at least a portion of a keyboard input device, such as the numeric keypad. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> and the following related discussion are intended to provide a brief, general description of a suitable computing environment for practicing the present invention. A preferred embodiment of a menu database that employs user friendly menus in accord with the present invention is implemented in a database program (for example, Microsoft Corporation&apos;s ACCESS&trade; database program) that is executed on a personal computer or other computing device. Those skilled in the art will appreciate that the present invention may be practiced with other computing devices, including a laptop and other portable computers, multiprocessor systems, networked computers, mainframe computers, hand-held computers, personal data assistants (PDAs), and on devices that include a processor, a memory, and a display. An exemplary computing system <highlight><bold>10</bold></highlight> that is suitable for implementing the present invention includes a processing unit <highlight><bold>12</bold></highlight> that is functionally coupled to an input device <highlight><bold>20</bold></highlight>, and an output device <highlight><bold>22</bold></highlight>, e.g., a display. Processing unit <highlight><bold>12</bold></highlight> include a central processing unit (CPU <highlight><bold>14</bold></highlight>) that executes machine instructions comprising a database program and the machine instructions for implementing the menu functions that are described herein. Those of ordinary skill in the art will recognize that CPUs suitable for this purpose are available from Intel Corporation, AMD Corporation, Motorola Corporation, and other sources. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> Also included in processing unit <highlight><bold>12</bold></highlight> are a random access memory <highlight><bold>16</bold></highlight> (RAM) and non-volatile memory <highlight><bold>18</bold></highlight>, which typically includes read only memory (ROM) and some form of memory storage, such as a hard drive, optical drive, etc. These memory devices are bi-directionally coupled to CPU <highlight><bold>14</bold></highlight>. Such storage devices are well known in the art. Machine instructions and data are temporarily loaded into RAM <highlight><bold>16</bold></highlight> from non-volatile memory <highlight><bold>18</bold></highlight>. Included among the stored data are the contents of a menu database and a menu template of the present invention. Also stored in memory are the database program code, operating system software and ancillary software. While not separately shown, it should be understood that a power supply is required to provide the electrical power needed to energize computing system <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Preferably, computing system <highlight><bold>10</bold></highlight> includes an optional modem <highlight><bold>15</bold></highlight> and optional speakers <highlight><bold>17</bold></highlight>. While these components are not strictly required in a functional computing system, their inclusion enhances the utility of computing system <highlight><bold>10</bold></highlight> in connection with implementing some of the features of the present invention. As shown, optional modem <highlight><bold>15</bold></highlight> and optional speakers <highlight><bold>17</bold></highlight> are components that are internal to processing unit <highlight><bold>12</bold></highlight>. However, such units can be, and often are, provided as external peripheral devices. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Input device <highlight><bold>20</bold></highlight> can be any device or mechanism that allows input into the operating environment. This includes, but is not limited to a mouse, keyboard, microphone, modem, pointing or other device as described above. Although, in a preferred embodiment, human interaction with input device <highlight><bold>20</bold></highlight> is necessary, it is contemplated that the present invention can be modified to receive input electronically, or in response to physical, molecular, or organic processes, or in response to an external system. Output device <highlight><bold>22</bold></highlight> generally includes any device that produces output information, but will most typically comprise a monitor or computer display designed for human perception of output. However, it is contemplated that present invention can be modified so that the system&apos;s output is an electronic signal, or adapted to interact with mechanical, molecular, or organic processes, or external systems. Accordingly, the conventional computer keyboard and computer display of the preferred embodiments should be considered as exemplary, rather than as limiting on the scope of the present invention. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> As noted above, a preferred embodiment of the present invention is a software tool that enables a user to navigate through a menu database, typically using a plurality of predefined menus. Depending on the menu options available, a user may be able to selectively view an image, read a document, access a webpage, listen to an audio file, or access another menu offering additional choices. Each predefined menu is preferably stored in the database in a form that enables the menu to be generated when needed, rather than being stored as a complete menu, thus saving considerable memory storage capacity. A key aspect of the present invention is the interaction between a menu template, a menu template modifier, and database records that define the appearance and functionality of the menus. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> schematically illustrates a menu database <highlight><bold>31</bold></highlight> in which database records <highlight><bold>28</bold></highlight> are stored. Also shown are the functional components that are implemented in the present invention to create, recreate, and or edit a menu <highlight><bold>29</bold></highlight> using menu template <highlight><bold>26</bold></highlight>, including a menu template modifier <highlight><bold>24</bold></highlight>, a navigator component <highlight><bold>25</bold></highlight><highlight><italic>a</italic></highlight>, a sequencer component <highlight><bold>25</bold></highlight><highlight><italic>c</italic></highlight>, and a tracker component <highlight><bold>25</bold></highlight><highlight><italic>d</italic></highlight>. It should be noted that each individual database record <highlight><bold>28</bold></highlight> preferably includes all the data required by menu template modifier <highlight><bold>24</bold></highlight> to use menu template <highlight><bold>26</bold></highlight> in generating a desired menu. Preferably, menu template <highlight><bold>26</bold></highlight> is not stored in menu database <highlight><bold>31</bold></highlight>, but instead, in another portion of non-volatile memory <highlight><bold>18</bold></highlight>. In at least one embodiment, menu template <highlight><bold>26</bold></highlight> is saved as a form in the database program being used. Note that a plurality of different menu templates could be created and saved. Each different menu template would then result in the generation of a different menu layout using data from the same database record <highlight><bold>28</bold></highlight>. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2B</cross-reference> illustrates the relationships between menu template modifier <highlight><bold>24</bold></highlight>, menu template <highlight><bold>26</bold></highlight>, and database records <highlight><bold>28</bold></highlight>. Note that menu template modifier <highlight><bold>24</bold></highlight> is used to recreate or generate a previously created menu when it is required, to edit an existing menu, and to create a new menu from the menu template. To recreate a specific menu <highlight><bold>29</bold></highlight> that was previously created, menu template modifier <highlight><bold>24</bold></highlight> uses menu template <highlight><bold>26</bold></highlight> and database record <highlight><bold>28</bold></highlight>. To create a new menu (or to edit an existing menu), menu template modifier <highlight><bold>24</bold></highlight> uses menu template <highlight><bold>26</bold></highlight> and an edit function <highlight><bold>27</bold></highlight> to generate a new database record <highlight><bold>28</bold></highlight> that corresponds to the new or edited menu. The nature of the menu template, menu template modifier, and the format of the menu database record that defines a menu in accord with the present invention will be evident from the discussion of specific examples provided below. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> The sequence of logical steps employed by the present invention for enabling a user to navigate through a customized menu database using a plurality of predefined menus are shown in a flow chart <highlight><bold>30</bold></highlight>, in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. Initial execution of the database software program being used enables the user to select a menu database at a start block <highlight><bold>32</bold></highlight>. The menu database selected by the user must be a previously customized menu database designed to be used with the software tool of the present invention, unless the user is initially creating a new menu with the present invention. (The steps implemented to modify custom menus and initially create new menus are described below in reference to the menu editing functionality of the present invention.) Note that if an database unrelated to the present invention is selected at start block <highlight><bold>32</bold></highlight>, the software tool of the present invention will not function properly, and an error message will preferably inform the user that the selected database is not a menu database adapted to be used with the software tool. A menu database will include all of the information required to generate at least one desired menu in accord with the menu template, as well as all of the data relevant to the menu options of the one or more menus. Preferably, information defining the format of a menu is not included in the menu database, but instead, is defined in the menu template. Thus, reiteration of the menu formatting information for each menu in a menu database is avoided to conserve memory resources. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Once a specific menu database has been selected, the menu template used by the software tool is retrieved in a block <highlight><bold>34</bold></highlight>. As noted above, in this embodiment, menu template <highlight><bold>26</bold></highlight> defines a layout for menu items that generally duplicates the layout or appearance of a numeric keypad portion of a conventional computer keyboard. Accordingly, any menu item displayed using the template will have a one-to-one relationship with a corresponding key on the keyboard. Once menu template <highlight><bold>26</bold></highlight> has been retrieved, the logic proceeds to a block <highlight><bold>40</bold></highlight>, and the record for the desired menu is retrieved from memory. At startup, this record will correspond to the menu that has been designed to serve as the start menu. At other times, the record will correspond to a menu that either has been affirmatively selected by a user, or the next menu in a predefined sequence of menus. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> Using the data contained in this record and the menu template, the logic recreates the first menu in a block <highlight><bold>42</bold></highlight>. The database data defines the textual or graphics content that will be displayed on each menu item. A user can employ input device <highlight><bold>20</bold></highlight> to select from among the various menu elements that are displayed in a block <highlight><bold>44</bold></highlight>, by actuating a corresponding key for the desired menu item on the input device keyboard. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> In a decision block <highlight><bold>50</bold></highlight>, the logic determines if a user has selected a menu item, for example, by activating its corresponding key on a keyboard input device. If not, the logic continues looping (or waits) until the user selects a menu item. When the user makes a menu selection, the logic proceeds to a block <highlight><bold>52</bold></highlight>, wherein the logic tracks or records the user&apos;s menu selection. One feature of the software tool of the present invention is its provision of a tracker component that tracks and maintains a navigation history of a user. As will be clear from an example provided below, if the user selects a menu item that has a text caption, the tracker component records this text so that it can be later added to a report that can be viewed to trace and summarize the user&apos;s selection of items from multiple menus. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Once the tracker component has recorded the user&apos;s menu selection in memory, the logic proceeds to a block <highlight><bold>54</bold></highlight>. At this point, the software tools refers to the menu database record for the selected menu item to determine the action(s) that should be executed. Each menu item can be associated with one or more types of information, including computer files, Internet addresses, telephone numbers, programs, etc. This information is processed by a sequencer component of the software tool and sequentially presented to the user. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> One of the options available when creating a menu with the present invention is a timing function that is executed by the sequencer component to automate the sequential selection of menu items, the sequential display of menus, or the sequential display or presentation of different types of information to the user at predefined intervals. For example, the timer function can be used to present a succession of images, text, and related audio files comprising a children&apos;s story. Of course, other types of automated sequences can be developed, such as a &ldquo;tour&rdquo; of a plurality of web pages that a user regularly visits, for example, to check for updates. This feature is described in greater detail below. A decision block <highlight><bold>55</bold></highlight> determines if the timer function is active. The timer function may be disabled, for example, to manually step through the sequence of information specified in a menu item, or in a plurality of menu items selected by the user. If the timer function is active, the logic proceeds to a block <highlight><bold>56</bold></highlight>. Otherwise, the logic continues with a block <highlight><bold>57</bold></highlight>. In block <highlight><bold>57</bold></highlight>, the logic processes the information associated with the selected menu item, and if a plurality of different types of information are included in the database record, the user can manually step through them. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> The timer automates the selection of a series of items from a single menu, or the selection of a series of different menus. The timer can also automate the flow of some, or all of the information that is presented to the user. For example, if the database contains the image data associated with a specific menu item, user selection of that menu item can result in the display of the associated image, without invoking the timer. The timer is employed to control the automated presentation of audio, video, or hyperlinked data according to predefined or user selected intervals. If the timer were not used, the user would need to affirmatively select the appropriate menu item to select a desired image, audio presentation, or hyperlink. Note that the timer function works with the sequencer component of the invention, but the two are distinct. The sequencer causes the sequential display of one bit of information after another with the selection of a single menu item. The timer determines how quickly multimedia data are presented after an item is selected, and how quickly additional items of the same or different menu(s) are selected. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> In block <highlight><bold>56</bold></highlight>, the sequencer component of the software tool processes the contents of the database record to determine the type of data that will next be presented. For example, if the sequencer component determines that a phone number is included in the database record for the selected menu item, the software tool dials the phone number using modem <highlight><bold>15</bold></highlight> (see <cross-reference target="DRAWINGS">FIG. 1</cross-reference>). If an audio file is listed in the database record, that audio file is loaded in RAM and played through speakers <highlight><bold>17</bold></highlight>. If a video file is listed in the database record, the video file is loaded into RAM and then displayed on output device <highlight><bold>22</bold></highlight>. If a hyperlink file is listed in the database record, the location identified by the hyperlink is accessed by launching a browser program, or by launching a word processing program for displaying a local hypertext document file. Certain hypertext files can also be displayed in the database program. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> After the data for the menu item selected has been sequentially processed and presented to a user in block <highlight><bold>56</bold></highlight>, the logic proceeds to a decision block <highlight><bold>58</bold></highlight>, in which the software determines if, based on the data included in the database record for the previous selection, a new menu is to be presented to the user, or whether the original menu will once again be displayed. The instructions can also indicate which menu item in the current or new menu will have the focus. When active, the timer also automates the above process. If the timer is not active, the user must affirmatively select the desired menu item. Preferably, in block <highlight><bold>64</bold></highlight>, one of the menu selections always present provides the user with an option to terminate the program, such that the user can exit the program at any time. If so, the logic proceeds to an end block <highlight><bold>66</bold></highlight>, and the database program terminates. Otherwise, the logic returns to block <highlight><bold>44</bold></highlight>, and the current menu remains in visible in the display </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> If instructions in the database record for the selected menu item indicate that a new menu is to be displayed, the logic flows to a block <highlight><bold>60</bold></highlight>, and the menu template is again retrieved. The logic then loads the database record for the next menu from the menu database in a block <highlight><bold>62</bold></highlight> and loops back to block <highlight><bold>42</bold></highlight>. In block <highlight><bold>42</bold></highlight>, the menu template modifier and a database record are used to generate the new (current) menu. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> In the exemplary preferred embodiment, the spatial organization of menu items on menu template <highlight><bold>26</bold></highlight> generally duplicates the organization of keys on a conventional numeric keypad <highlight><bold>38</bold></highlight> of a conventional computer keyboard <highlight><bold>36</bold></highlight>, as illustrated in FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>6</bold></highlight>A. Numeric keypad <highlight><bold>38</bold></highlight> includes 17 keys, including numeral keys (&ldquo;0-9&rdquo;), math symbol keys (&ldquo;/&rdquo;, &ldquo;*&rdquo;, &ldquo;&minus;&rdquo;, &ldquo;&plus;&rdquo;), and functional keys (NumLock, Enter, and Del). By enabling a user to select from among the menu options displayed to a user by actuating keys on numeric keypad <highlight><bold>38</bold></highlight>, instead of by using a mouse or other computer pointing device to select a menu option on the display, the present invention eliminates the need for a user to remove a hand from the keyboard. Requiring a user to continually move back and forth from a mouse to a keyboard is inefficient, especially in situations in which the user must search through a number of menus. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> Because the organization of menu options on the menu template duplicates the spatial organization of keys on numeric keypad <highlight><bold>38</bold></highlight>, a user can look at the menu being displayed and immediately visually determine which key of numeric keypad <highlight><bold>38</bold></highlight> is associated with a specific menu item or option. <cross-reference target="DRAWINGS">FIG. 6A</cross-reference> illustrates a menu template <highlight><bold>26</bold></highlight><highlight><italic>a </italic></highlight>that duplicates the spatial organization of numeric keypad <highlight><bold>38</bold></highlight>. Menu template <highlight><bold>26</bold></highlight><highlight><italic>a </italic></highlight>includes <highlight><bold>17</bold></highlight> different elements or options <highlight><bold>27</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>q</italic></highlight>, spatially arrayed and organized in the same manner as the keys on numeric keypad <highlight><bold>38</bold></highlight>. Note that the relative &ldquo;size&rdquo; of menu items or options <highlight><bold>27</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>q </italic></highlight>do not necessarily match the size of each key on numeric keypad <highlight><bold>38</bold></highlight>, but the spatial relationships do correlate. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> Note that the key labeled &ldquo;5&rdquo; in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is shaded, as is corresponding menu element <highlight><bold>27</bold></highlight><highlight><italic>m </italic></highlight>in menu template <highlight><bold>26</bold></highlight><highlight><italic>a</italic></highlight>. Thus, without using any numeric or textual references, a one-to-one relationship is created between each menu item and a corresponding key on numeric keypad <highlight><bold>38</bold></highlight>. In this preferred embodiment of the invention, those portions of menu template <highlight><bold>26</bold></highlight><highlight><italic>a </italic></highlight>that correspond to numeral keys &ldquo;0-9&rdquo; (menu buttons <highlight><bold>27</bold></highlight><highlight><italic>h</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>q</italic></highlight>) are dedicated to user-selectable menu items that change from menu to menu, while those portions corresponding to the math symbol keys (&ldquo;/&rdquo;, &ldquo;*&rdquo;, &ldquo;&minus;&rdquo;, &ldquo;&plus;, i.e., menu buttons <highlight><bold>27</bold></highlight><highlight><italic>b</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>e</italic></highlight>) and functional keys (NumLock, Enter and Del, i.e., menu buttons <highlight><bold>27</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>27</bold></highlight><highlight><italic>f</italic></highlight>, and <highlight><bold>27</bold></highlight><highlight><italic>g</italic></highlight>, respectively) are used for menu control functions that are consistent from menu to menu. In the following discussion, it is important to be aware that any of specific menu elements <highlight><bold>27</bold></highlight><highlight><italic>h</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>q </italic></highlight>corresponding to a specific one of the numeral keys (0-9) has a functionality that is dependent on the screen or menu being displayed to a user. Thus, the selection of a menu element that corresponds to a numeral key may have a different result in different menus. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6B</cross-reference> illustrates the control functions preferably assigned to menu options <highlight><bold>27</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>g </italic></highlight>of menu template <highlight><bold>26</bold></highlight><highlight><italic>b</italic></highlight>. With respect to menu template <highlight><bold>26</bold></highlight><highlight><italic>b</italic></highlight>, a menu option <highlight><bold>27</bold></highlight><highlight><italic>a</italic></highlight>, corresponding to the NumLock key, enables a user to toggle the timing function on and off. A menu option <highlight><bold>27</bold></highlight><highlight><italic>b</italic></highlight>, corresponding to the &ldquo;/&rdquo; key, enables a user to initiate a keyword search. Keyword searching enables a user to find a desired menu from among a plurality of different menus based upon an associated keyword. If the user wants to jump to a particular menu, but does not know its identifying menu number, selecting menu option <highlight><bold>27</bold></highlight><highlight><italic>b </italic></highlight>causes display of a list box in which the keyword that is associated with the subject of the desired menu can be found. When the user selects the keyword in the dropdown list, the navigator component presents the desired menu associated with the keyword. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> A menu option <highlight><bold>27</bold></highlight><highlight><italic>c</italic></highlight>, corresponding to the &ldquo;*&rdquo; key, enables a user to access navigator component <highlight><bold>25</bold></highlight><highlight><italic>a</italic></highlight>, as illustrated in <cross-reference target="DRAWINGS">FIG. 7A</cross-reference>. Preferably, the navigator component includes a title box <highlight><bold>31</bold></highlight><highlight><italic>a</italic></highlight>, a menu &num; box <highlight><bold>31</bold></highlight><highlight><italic>b </italic></highlight>indicating the current menu database name and menu number, and nine menu elements <highlight><bold>29</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>29</bold></highlight><highlight><italic>j</italic></highlight>, corresponding respectively to numeral keys 0-9 of keypad <highlight><bold>38</bold></highlight>. These menu elements have the following functions. Selecting menu element <highlight><bold>29</bold></highlight><highlight><italic>a </italic></highlight>(numeral key &ldquo;0&rdquo;) disables the sequencer in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> so that selection of a menu item causes navigational events only, as illustrated in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>. This feature enables the user to navigate more quickly through a sequence of menus when review of the events normally presented by the sequencer is not desired. If the user selects menu element <highlight><bold>29</bold></highlight><highlight><italic>a </italic></highlight>a second time, the sequencer function is restored. Selecting menu element <highlight><bold>29</bold></highlight><highlight><italic>b </italic></highlight>(numeral key &ldquo;1&rdquo;) enables a user to immediately return to a first menu in the current menu database, selecting menu item <highlight><bold>29</bold></highlight><highlight><italic>c </italic></highlight>(numeral key &ldquo;2&rdquo;) enables a user to jump to the next menu in the current menu database, and selecting menu item <highlight><bold>29</bold></highlight><highlight><italic>d </italic></highlight>(numeral key &ldquo;3&rdquo;) enables a user to jump to the last menu in the current menu database. Selecting menu item <highlight><bold>29</bold></highlight><highlight><italic>e </italic></highlight>(numeral key &ldquo;4&rdquo;) enables a user to return to the immediately previous menu, selecting menu item <highlight><bold>29</bold></highlight><highlight><italic>f </italic></highlight>(numeral key &ldquo;5&rdquo;) enables a user to close the navigator component and to return to the current menu, and selecting menu item <highlight><bold>29</bold></highlight><highlight><italic>g </italic></highlight>(numeral key &ldquo;6&rdquo;) enables the user to select the Go To Menu function. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> The Go To Menu function enables a user to access a specific menu immediately, if the user knows a specific menu number for it. By entering a specific menu number, a user is able to access that menu immediately, rather than searching through a plurality of menus. Generally, a user may only remember the number for a menu that the user frequently uses. However, this shortcut can enable a user to save considerable time, especially when a number of intermediate menus must be navigated to reach a menu that includes an option for accessing a desired database record. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> Selecting menu item <highlight><bold>29</bold></highlight><highlight><italic>h </italic></highlight>(numeral key &ldquo;7&rdquo;) enables a user to change to a different menu database, selecting menu item <highlight><bold>29</bold></highlight><highlight><italic>i </italic></highlight>(numeral key &ldquo;8&rdquo;) enables a user to use a Menu Manager function, and selecting menu item <highlight><bold>29</bold></highlight><highlight><italic>j </italic></highlight>(numeral key &ldquo;9&rdquo;) enables a user to quit the database application. A Menu Manager <highlight><bold>25</bold></highlight><highlight><italic>b </italic></highlight>menu is illustrated in <cross-reference target="DRAWINGS">FIG. 7B</cross-reference>. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> Preferably the Menu Manager menu includes a title box <highlight><bold>33</bold></highlight><highlight><italic>a</italic></highlight>, a menu &num; box <highlight><bold>33</bold></highlight><highlight><italic>b </italic></highlight>indicating the current menu number, and seven user selectable menu items, <highlight><bold>35</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>35</bold></highlight><highlight><italic>g</italic></highlight>, corresponding to numeral keys 0-6 of keypad <highlight><bold>38</bold></highlight>. Selection of menu item <highlight><bold>35</bold></highlight><highlight><italic>a </italic></highlight>(numeral key &ldquo;0&rdquo;) enables a user to close the Menu Manager and return to the navigator component; selecting menu item <highlight><bold>35</bold></highlight><highlight><italic>b </italic></highlight>(numeral key &ldquo;1&rdquo;) enables a user to add a new menu to the current menu database. Selecting menu item <highlight><bold>35</bold></highlight><highlight><italic>c </italic></highlight>(numeral key &ldquo;2&rdquo;) enables the user to import a new menu database from a memory storage device such as a zip disk, a floppy disk, a hard drive, a compact disk, a network drive, or from the Internet. Selecting menu item <highlight><bold>35</bold></highlight><highlight><italic>d </italic></highlight>(numeral key &ldquo;3&rdquo;) enables a user to use the Go To Menu function as described above. Menu item <highlight><bold>35</bold></highlight><highlight><italic>e </italic></highlight>(numeral key &ldquo;4&rdquo;) can be selected to enable a user to create a blank menu database, which has no menu records or data. Selecting menu item <highlight><bold>35</bold></highlight><highlight><italic>f </italic></highlight>(numeral key &ldquo;5&rdquo;) enables the user to copy a menu database to create a new menu database with the same contents, but saved under a different file name. Pressing &ldquo;6&rdquo; on the numeric keypad to select menu item <highlight><bold>35</bold></highlight><highlight><italic>g </italic></highlight>deletes a menu database from the list of databases available. With respect to either the navigator component or the Menu Manager, if desired, the specific function control key of an input device such as keypad <highlight><bold>38</bold></highlight> that selects the desired function can be changed. In other words, if desired, functions for menu option associated with numeral key &ldquo;2&rdquo; could be switched to a different key, such as numeral key &ldquo;3.&rdquo;</paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> Referring once again to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>B, menu option <highlight><bold>27</bold></highlight><highlight><italic>d </italic></highlight>corresponds to the &ldquo;&minus;&rdquo; key, and selecting it results in the user being prompted to enter a phone number that the user wishes to dial, if desired. More details on the editing function are provided below. Selecting menu option <highlight><bold>27</bold></highlight><highlight><italic>e </italic></highlight>in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>B, corresponding to the &ldquo;&plus;&rdquo; key, enables a user to return to the previous menu. Note that selecting menu option <highlight><bold>27</bold></highlight><highlight><italic>c </italic></highlight>also enables a user to return to a previous menu. However, the backtracking function enabled by menu option <highlight><bold>27</bold></highlight><highlight><italic>e </italic></highlight>is different. Backtracking allows the user to view the names and numbers of previously viewed menus. Each time a menu is displayed, the name of the menu database and the number of the menu are stored in a Menu Queue displayed in the area associated with menu option <highlight><bold>27</bold></highlight><highlight><italic>e</italic></highlight>. The user can select menu option <highlight><bold>27</bold></highlight><highlight><italic>e </italic></highlight>to return to the immediately preceding menu, or use the menu number listed in the Menu Queue, and the Go To Menu function described above to return to the previously viewed menus listed in the Menu Queue. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> Menu option <highlight><bold>27</bold></highlight><highlight><italic>f </italic></highlight>in <cross-reference target="DRAWINGS">FIG. 6B</cross-reference> corresponds to the ENTER key, and enables a user to execute or continue with a selected menu option or function. For instance, if a user has depressed numeral key &ldquo;5&rdquo; on the numeric keypad, the display visually indicates that the menu item corresponding to numeral key &ldquo;5&rdquo; has been selected (either by highlighting that button on the display, or more preferably by modifying the display to show that menu option as being depressed), and the information referenced by selecting that menu item (for example, playing a video file) is not executed until the user also depresses the ENTER key, when the timer is inactive. In a preferred embodiment, the display of an image file occurs immediately upon the user pressing a menu item key, while audio, video, and Internet files are sequentially launched after the &ldquo;Enter&rdquo; key has been pressed manually (or automatically, if the timer is active). It should be noted that this preferred embodiment could be modified so that all events (i.e., the display of an image and the launching of audio, video, and Internet files) occur sequentially without the timer. Alternatively, the embodiment could also be modified so that the occurrence of each individual event (i.e., the display of an image and the launching of audio, video, and Internet files) are dependent on the manual or automatic selection of the enter key. Selecting menu option <highlight><bold>27</bold></highlight><highlight><italic>g</italic></highlight>, corresponding to the &ldquo;.&rdquo; key (or DEL key), enables the edit function of the software tool. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> Indicating a one-to-one relationship between the items or options of a menu and a selected portion of a keyboard or other input device can be accomplished in other ways than by duplicating a spatial organization of the keys on the input device, such as by the use of menu templates that do not share the format of the device. For example, <cross-reference target="DRAWINGS">FIG. 8</cross-reference> and <cross-reference target="DRAWINGS">FIG. 9</cross-reference> illustrate the product of different menu templates modified by the same database record. A menu <highlight><bold>37</bold></highlight><highlight><italic>a </italic></highlight>in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> on a standard computer display <highlight><bold>22</bold></highlight><highlight><italic>a</italic></highlight>, provides a one-to-one relationship by numbering the menu items so that each number of an item corresponds to the same numbered key on the numeric keypad or on the numbered keys in the top row of a conventional QWERTY keyboard. A user would then press the corresponding numeral key to select a specific menu option. For example, to select the menu option for LAMB, a user would depress the key labeled &ldquo;5.&rdquo; Of course, such a one-to-one relationship is not limited to the numeric keypad portion of a computer keyboard. If it is desired to display more than ten menu items to a user using a single menu, a one-to-one relationship could be established between any of the 26 individual letters of the alphabet on a standard computer keyboard, and the menu items displayed on a computer screen, such that each menu item was uniquely associated with a different one of the letters of the alphabet. Note that in the example shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, menu items corresponding to numeral keys 7, 8, 9, and 0 are empty, indicating that no menu items have been defined for those keys. Instead of displaying those menu items to a user and indicating that they are empty, alternatively, only menu items 1-6 might be displayed to a user. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> With respect to displaying menu items to a user, it should be understood that the individual menu items can be displayed with an identifying text or graphic image, or a combination thereof. A menu <highlight><bold>37</bold></highlight><highlight><italic>b</italic></highlight>, shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, includes six menu items (corresponding to numeral keys 1-6 on numeric keypad <highlight><bold>38</bold></highlight>) that are textually described. Note that a menu item <highlight><bold>39</bold></highlight><highlight><italic>f </italic></highlight>pertaining to recipes for lamb has been selected and has the focus, as indicated by the use of the bold font. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> A menu <highlight><bold>37</bold></highlight><highlight><italic>c</italic></highlight>, shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, includes graphic images, as well as text labels on the menu items. The text labels on menu items <highlight><bold>39</bold></highlight><highlight><italic>b </italic></highlight>and <highlight><bold>39</bold></highlight><highlight><italic>c </italic></highlight>(beef and fish, respectively) in menu <highlight><bold>37</bold></highlight><highlight><italic>b </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 9</cross-reference> have been replaced by images of a cow and a fish. Preferably, any image used will be unambiguous, to avoid uncertainty as to the definition of the menu item. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a flowchart <highlight><bold>72</bold></highlight> that illustrates how the timing function implemented by the sequencer component operates. Preferably menu template <highlight><bold>26</bold></highlight> associates a NumLock key <highlight><bold>70</bold></highlight> (see <cross-reference target="DRAWINGS">FIG. 5</cross-reference>) with the timing function (menu option <highlight><bold>27</bold></highlight><highlight><italic>a </italic></highlight>of FIGS. <highlight><bold>6</bold></highlight>A-<highlight><bold>6</bold></highlight>B), however, any of the keys of numeric keypad <highlight><bold>38</bold></highlight> can be employed for this purpose, if desired. Once the appropriate key is actuated to select the timing function option in a box <highlight><bold>74</bold></highlight>, a text box is presented to the user at a block <highlight><bold>76</bold></highlight>, prompting the user to enter a timer interval. If the user enters &ldquo;0&rdquo; at a decision block <highlight><bold>77</bold></highlight>, the timing function is turned off in a block <highlight><bold>78</bold></highlight><highlight><italic>a</italic></highlight>. If the user again selects the timing function option in a block <highlight><bold>74</bold></highlight><highlight><italic>a</italic></highlight>, the sequencer component activates an auto-timer in a block <highlight><bold>80</bold></highlight>. Referring once again to block <highlight><bold>76</bold></highlight>, in response to the user entering a non-zero interval (e.g., in seconds), in a block <highlight><bold>79</bold></highlight> the sequencer component sets the timing function on in a block <highlight><bold>79</bold></highlight>, using the interval entered by the user in block <highlight><bold>76</bold></highlight>. Selection of the timer option again in a block <highlight><bold>74</bold></highlight><highlight><italic>b </italic></highlight>also leads to block <highlight><bold>80</bold></highlight> in which the auto-timer is activated by the sequencer component. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> The logic determines if a new menu or menu item selection has been made in a decision block <highlight><bold>82</bold></highlight>. If not, the logic continues to a block <highlight><bold>85</bold></highlight>, and no change is made to the display. The logic continues looping through decision block <highlight><bold>82</bold></highlight> and block <highlight><bold>85</bold></highlight> until the user selects a menu item or new menu. If a selection of a menu item (e.g., by using keys 0-9 on numeric keypad <highlight><bold>38</bold></highlight>) or new menu has been made, the logic proceeds to decision block <highlight><bold>83</bold></highlight> to determine whether menu element <highlight><bold>29</bold></highlight><highlight><italic>a </italic></highlight>in <cross-reference target="DRAWINGS">FIG. 7A</cross-reference> was selected to bypass the timer. If so, the logic proceeds to a block <highlight><bold>78</bold></highlight><highlight><italic>b </italic></highlight>and the timing function is turned off. The logic then determines if the bypassed information led to a new menu in a decision block <highlight><bold>87</bold></highlight>. If so, then that new menu is immediately displayed in a block <highlight><bold>89</bold></highlight>. The logic then returns to decision block <highlight><bold>82</bold></highlight>, to await for a new menu or menu item to be selected by the user. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> In one preferred embodiment, the bypass feature enables a user to bypass the display or activation of any images, audio files, video files and any hyperlinked data associated with a selected menu or menu item. This feature would likely not be employed by a user navigating a series of linked menus for the first time. However, once a user becomes familiar with the linked menus, he or she may desire to navigate to a particular location in the sequence of menus without accessing or viewing some or any of the information (images, audio files, video files, or hyperlinked data) associated with intervening menus. While the present invention includes features, such as the GO TO MENU feature associated with button <highlight><bold>27</bold></highlight><highlight><italic>c </italic></highlight>(as described above) that similarly enable a user to more rapidly navigate a sequence of menus, some users may prefer to use the bypass option rather than the GO TO MENU option. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> While in a preferred embodiment of the present invention, the bypass feature bypasses audio, image, video and hyperlinked data, it is anticipated that other bypass options could be provided. For example, only audio, video and hyperlinked data could be bypassed, while image data are immediately displayed. Preferably, defining the data that are to be bypassed will be accomplished as an option configurable by the user. Referring once again to decision block <highlight><bold>83</bold></highlight>, if the bypass function is not selected by the user, the logic proceeds to a block <highlight><bold>84</bold></highlight>, and the timing function looks within the database record for that menu or menu item to identify any associated timing data. In a decision block <highlight><bold>86</bold></highlight>, the sequencer component determines if the database contains a timer interval. If so, that timer interval is applied in a block <highlight><bold>88</bold></highlight> (rather than the user defined timing interval). If no timer interval is included in the database, then from decision block <highlight><bold>86</bold></highlight>, the logic proceeds to a block <highlight><bold>90</bold></highlight>, and the timer function determines if a user-defined zero time has been entered. If a user defined non-zero timer interval has been entered, that interval is applied at a block <highlight><bold>92</bold></highlight> in controlling the duration with which information referenced in the database record for the selected menu item is displayed or presented. If a zero time interval was entered by the user, then no timer interval is applied, as indicated at a block <highlight><bold>94</bold></highlight>, and the timer stops until the database presents a non-zero interval to the auto timer, upon the selection of another menu item or menu. From block <highlight><bold>88</bold></highlight>, block <highlight><bold>92</bold></highlight>, and block <highlight><bold>94</bold></highlight>, the logic returns to decision block <highlight><bold>82</bold></highlight> and awaits the selection of another menu or menu item. Once a time interval is either applied, or the sequencer component determines that no timer interval is to be applied, that selection remains constant until another menu or menu item is selected in block <highlight><bold>82</bold></highlight>, at which point the sequencer component proceeds once again to block <highlight><bold>84</bold></highlight> and checks for timer interval data in the corresponding current database record for the selected menu or menu item. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> As noted above, a very important element of the software tool of the present invention is the menu template modifier, which utilizes the menu template and a database record to recreate and/or modify a menu. A flowchart <highlight><bold>100</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 12</cross-reference> illustrates the sequence of logical steps employed by the menu template modifier to recreate a menu with the otherwise blank menu template. At a block <highlight><bold>102</bold></highlight>, the menu template and the specific database record corresponding to a desired menu are retrieved from non-volatile memory and loaded into RAM. In a block <highlight><bold>104</bold></highlight>, the logic hides from view all of the undefined menu items (i.e., any undefined menu items <highlight><bold>27</bold></highlight><highlight><italic>h</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>q</italic></highlight>, which correspond to numeral keys 0-9 of keypad <highlight><bold>38</bold></highlight>) by setting their &ldquo;visible&rdquo; property in the database program to false. Variables that are associated with the tracker component of the present invention are also processed in block <highlight><bold>104</bold></highlight> to add a coherent portion of a sentence that will be used in a report based on the menu items selected from a previously presented menu, as will be described in detail below. The variables associated with the tracker component are given a null value and all menu items are &ldquo;untagged&rdquo; to indicate that in the new menu, no menu items have yet been selected by the user. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> A specific database record defines attributes of the menu, provides text or picture labels for items, and specifies the different types of information that will be presented when a specific item in the menu is selected. The logic proceeds to extracting the data relating to the specific menu items from the database records, and modifying the menu template according to the data provided by the database record. If, in decision block <highlight><bold>106</bold></highlight>, the database does not contain any data, or additional data relating to the display of specific menu items, the logic moves to decision block <highlight><bold>115</bold></highlight>. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> If, in decision block <highlight><bold>106</bold></highlight>, the menu template modifier determines that additional menu data specifying menu items are included in the database, then the data are used to determine whether and how each menu item is displayed. The appearance of each menu item may be defined, even though not visible below the coversheet image, which will be described in block <highlight><bold>122</bold></highlight>. Although menu items are not visible to the user if hidden by a coversheet image, the coversheet image can be removed at any time, so that menu items become visible. Since in this preferred embodiment, there are a maximum of 10 displayable items (preferably menu items <highlight><bold>27</bold></highlight><highlight><italic>h</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>q</italic></highlight>, corresponding to numeral keys 0-9 of numeric keypad <highlight><bold>38</bold></highlight>), the menu template modifier first determines in a decision block <highlight><bold>108</bold></highlight> if the menu database record for menu item <highlight><bold>27</bold></highlight><highlight><italic>h </italic></highlight>(selected with numeral key &ldquo;0&rdquo; of the numeric keypad) contains the name of a text label. If a text label is used for the menu item, then that text label is displayed to a user in a block <highlight><bold>114</bold></highlight> by setting its &ldquo;visible&rdquo; property to true. The menu template modifier then determines if the current menu database record includes an image that is associated with this menu item, in a decision block <highlight><bold>110</bold></highlight><highlight><italic>b. </italic></highlight></paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> Returning to decision block <highlight><bold>108</bold></highlight>, if no text data are found in the current menu database record relating to the current menu item, the menu template modifier determines if the current database record includes an image that is associated with the current menu item, in a decision block <highlight><bold>110</bold></highlight><highlight><italic>a</italic></highlight>. If not, the logic loops back to decision block <highlight><bold>106</bold></highlight>, as described above. If image data are found, the image is displayed in a block <highlight><bold>112</bold></highlight>, and the logic again loops back to decision block <highlight><bold>106</bold></highlight> to determine if additional menu data for display of the other menu items are contained in the menu database records. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> If an image file is associated with the current menu item, then the menu template modifier causes that image to be displayed on the menu item in a block <highlight><bold>112</bold></highlight> (assuming it is not obscured by a coversheet image). Note that the image is displayed over any text that was displayed in block <highlight><bold>114</bold></highlight>. After the image is displayed, the logic loops back to decision block <highlight><bold>106</bold></highlight> and determines if the current menu database includes menu data for displaying the other menu items. This process will repeat until all the menu items included in the menu have been displayed with any associated text and/or images, as defined by the database record. Note that in decision block <highlight><bold>110</bold></highlight><highlight><italic>b</italic></highlight>, if no image is found in the current menu database record, the logic also loops back to decision block <highlight><bold>106</bold></highlight>. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> The logic proceeds to decision block <highlight><bold>115</bold></highlight> to determine whether menu element <highlight><bold>29</bold></highlight><highlight><italic>a </italic></highlight>in <cross-reference target="DRAWINGS">FIG. 7A</cross-reference> was chosen to bypass the setting of a menu timer and the presentation of menu data. If so, the logic proceeds to a block <highlight><bold>134</bold></highlight>. In block <highlight><bold>134</bold></highlight>, the logic waits for the next menu. It should be noted that the next menu will either be affirmatively selected by a user, or if the auto-timer is enabled, after the designated interval has elapsed, the next menu in the programmed sequence will be displayed in response to the auto-timer. If the auto-timer is not enabled, or if there are no additional menu in a preprogrammed sequence of menus, no new menu will be displayed until the user affirmatively selects a menu. As will be discussed more in detail below, a user interface illustrated in <cross-reference target="DRAWINGS">FIG. 22</cross-reference> can be used to generate a sequence of menus, and to select timer intervals to be employed in displaying different menus when the auto-timer is enabled. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> If in decision block <highlight><bold>115</bold></highlight>, the bypass function is not selected, the logic proceeds to a block <highlight><bold>116</bold></highlight>, and the menu data from the database record that includes the overall attributes of the menu are parsed. Initially, in decision blocks <highlight><bold>118</bold></highlight>, <highlight><bold>122</bold></highlight>, <highlight><bold>126</bold></highlight>, and <highlight><bold>130</bold></highlight>, the menu template modifier respectively determines if the menu represented by its corresponding database record includes an auto-timer interval, a coversheet image that hides some or all of the menu items, a sound file, and an audio-visual or multimedia file. These features are applied sequentially. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> In response to decision block <highlight><bold>118</bold></highlight>, the menu template modifier determines if any timer function interval data are included in the database record. If a timer interval is included, the menu template modifier uses that interval to set the auto-timer interval in block <highlight><bold>120</bold></highlight>. This default setting will determine how much time elapses before an item of a menu is selected. Automated selection of a menu item, however, can only occur if the auto-timer had been switched on, as described above with respect to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>B and <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, and the database contains instructions for the navigator component that indicate the menu items that are to be automatically selected next. After the menu template modifier either sets the auto timer, or determines that no interval is present in the database record, the logic proceeds to decision block <highlight><bold>122</bold></highlight>. If, in response to decision block <highlight><bold>122</bold></highlight>, the menu template modifier determines that a coversheet image file exists in the database record and in a block <highlight><bold>124</bold></highlight>, the coversheet image file is accessed and used to hide some or all the menu item buttons (buttons <highlight><bold>27</bold></highlight><highlight><italic>h</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>q</italic></highlight>, corresponding to numeral keys 0-9 of keypad <highlight><bold>38</bold></highlight>) as specified, when the menu is presented to a user on display. Otherwise all menu items modified as described above are displayed. The coversheet image is an alternative to defining the appearance of each menu item to achieve a desired overall look to the menu and permits versatile design of the entire menu presentation in one step. If, in decision block <highlight><bold>122</bold></highlight>, no cover sheet image exists in the database record (or after a coversheet image has been applied in block <highlight><bold>124</bold></highlight>), the logic proceeds to decision block <highlight><bold>126</bold></highlight>, and the menu template modifier determines if a sound file is present in the current database record. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> If, in decision block <highlight><bold>126</bold></highlight>, a sound file is found, that sound file is accessed and presented to a user in a block <highlight><bold>128</bold></highlight> simultaneously with the initial presentation of the new menu. After the menu template modifier determines whether there is a sound file to be presented to the user with the menu, the logic proceeds to decision block <highlight><bold>130</bold></highlight>, in which the menu template modifier determines if a multimedia file is present in the database record. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> If, in decision block <highlight><bold>130</bold></highlight>, a multimedia file is found, that multimedia file is loaded into RAM and presented to a user in a block <highlight><bold>132</bold></highlight>, simultaneously with the initial presentation of the new menu. If both an audio file is found in decision block <highlight><bold>126</bold></highlight> and a multimedia (audio-visual) file is found in decision block <highlight><bold>130</bold></highlight>, the audio file will be played first, followed by the multimedia file, after the completed menu is presented to the user. Following decision block <highlight><bold>130</bold></highlight>, the logic proceeds to a decision block <highlight><bold>134</bold></highlight>, and the menu template modifier waits for the next menu to be selected by a user for display. At that point, the logic returns to block <highlight><bold>102</bold></highlight>, and the menu template modifier sequence is repeated using the menu template and a different menu database record. Before the next menu is displayed, the user may select one of the menu items, resulting in the display or presentation of the information associated with the selected menu item. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> Another important element of the software tool of the present invention is the sequencer component, which looks at the menu database record for a menu item after a selection has been made, to determine what order should be applied to menu events if the selection of a single menu item will result in the execution of more than one event. A flowchart <highlight><bold>140</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> illustrates the sequence of logical steps employed by the sequencer component. The sequencer component is employed whenever a user selects a menu item <highlight><bold>27</bold></highlight><highlight><italic>h</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>q </italic></highlight>(by pressing a corresponding numeral key on numeric keypad <highlight><bold>38</bold></highlight>), as indicated in a block <highlight><bold>142</bold></highlight>. Alternatively, if the navigator has set the focus on an item, that item will be selected when the user manually presses the &ldquo;Enter&rdquo; key, or automatically selected if the timer is on and the interval has elapsed. The sequencer component then parses the current menu database for data that it can process in a block <highlight><bold>144</bold></highlight>. For instance, the data can include telephone numbers, still images, audio files, video files, hyperlink addresses, documents, and almost any other type of information, or programs. As described above, the user may use the bypass feature to bypass the presentation of these data in a decision block <highlight><bold>145</bold></highlight>. If the user selects the bypass feature, the logical process for the sequencer component terminates, and in a block <highlight><bold>164</bold></highlight><highlight><italic>a</italic></highlight>, the logic returns to the navigator component. Otherwise the logic proceeds to block <highlight><bold>146</bold></highlight>, and data are sequentially presented to the user. Blocks <highlight><bold>164</bold></highlight><highlight><italic>a </italic></highlight>and <highlight><bold>164</bold></highlight><highlight><italic>b </italic></highlight>each indicates that the logic moves to the navigator component, which is described in detail in <cross-reference target="DRAWINGS">FIG. 14</cross-reference> and each leads to a block <highlight><bold>172</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, as will be described in more detail below. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> In a decision block <highlight><bold>146</bold></highlight>, the sequencer component determines if the menu database includes a still frame image that is associated with the current menu item. A still frame image can be either an image or text file, that when displayed, will hide other aspects of the menu like the coversheet discussed above. This image will disappear if another menu item is selected or if another menu is displayed. If a still frame image exists, it will be displayed in a block <highlight><bold>148</bold></highlight>. Once the sequencer component has either determined that such image is not included in the current database record of menu database for the menu item selected, or that the image has been displayed, the sequencer component proceeds with a decision block <highlight><bold>150</bold></highlight> to determine whether any audio data are associated with the current menu item. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> If audio data are included, the audio data are presented to the user in a block <highlight><bold>152</bold></highlight>. Once the audio file has been played, or the sequencer component has determined that an audio file is not included in the current record of the menu database, the sequencer component continues at a decision block <highlight><bold>154</bold></highlight> to determine whether any multimedia file is associated with the current menu item. If a multimedia file exists, the sequencer component loads the file for presentation to the user in a block <highlight><bold>156</bold></highlight>. If not, or after the multimedia file has been presented to the user, the sequencer component proceeds with a decision block <highlight><bold>158</bold></highlight> to determine whether any hyperlinks are specified in the current record of the menu database associated with the selected menu item. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> If hyperlink data are included, the sequencer component connects the user to the hyperlink in a block <highlight><bold>160</bold></highlight> and activates appropriate ancillary software (such as a web browser) capable of displaying a web page identified by the hyperlink. Note that while a hyperlink often will result in a web browser displaying a web page, hyperlinks can also cause a file to be opened in a variety of programs. The types of files that can thus be opened include, but are not limited to, word processing, spreadsheet, database, image, audio, and video files. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> It is contemplated that hyperlinks alone could be used to enable a user to access image data, audio date, video data, or any other type of data. While the logical process of the preferred embodiment illustrated in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> individually determines if image data, audio data, media (video) data, hyper links, and telephone dialing data are associated with the presently selected menu or menu item, it should be understood that appropriate hyper links could instead be used to access all other types of information, if those hyper links were incorporated into the menu database. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> Once the user returns to the original menu display from the hyperlink, or the sequencer component has determined that an hyperlink address is not included in the current record of the menu database, the sequencer component continues at a decision block <highlight><bold>162</bold></highlight> to determine whether a phone number is associated with the current menu item. If so, dialing software is launched in block <highlight><bold>163</bold></highlight> that is capable of connecting the user to that phone number via modem <highlight><bold>15</bold></highlight> (see <cross-reference target="DRAWINGS">FIG. 1</cross-reference>). If a phone number is not in the menu database, and alternatively, after the telephone number has been dialed, the sequencer component terminates, and in block <highlight><bold>164</bold></highlight><highlight><italic>b</italic></highlight>, the navigator component resumes its function. Of course, the number of events that the sequencer processes (and the corresponding number of associated database columns) could be extended or modified beyond what is illustrated in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. For example, increasing the number of hyperlink events that the sequencer sequentially processes would provide the user greater flexibility in determining the order and number of events that occur when a menu item is selected. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> As noted above, the navigator component is another important component of the software tool of the present invention. A flowchart <highlight><bold>170</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 14</cross-reference> illustrates the sequence of logical steps implemented by the navigator component. The navigator component is employed to process data in the menu database and can present another menu from the current menu database to the user, or even a different menu database. Also, the navigator component can shift the focus to a specific menu item in a current menu or a new menu. The navigator component is enabled in a block <highlight><bold>172</bold></highlight> after sequencer events are enabled. As noted above, the logic jumps to block <highlight><bold>172</bold></highlight> from either block <highlight><bold>164</bold></highlight><highlight><italic>a </italic></highlight>or <highlight><bold>164</bold></highlight><highlight><italic>b </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. In block <highlight><bold>172</bold></highlight>, the navigator component looks in the menu database for a &ldquo;next event&rdquo; defined by the data. In this preferred embodiment, it is not mandatory that an event be associated with an item. If no event data has been entered into the database that corresponds to a particular menu item, then nothing will happen when that menu item is selected. No error message will occur, although if desired, a prompt can be provided to remind the user that data corresponding to the desired menu item need to be added to the database. That &ldquo;event&rdquo; can include changing the menu database, generating a new menu, and selecting or focusing on a new menu item. The &ldquo;next item&rdquo; data that the navigator component looks for in a block <highlight><bold>174</bold></highlight> are data that relate to an event other than displaying a new menu. If, in a decision block <highlight><bold>176</bold></highlight>, the navigator component determines that the &ldquo;next item&rdquo; data are present, this data is stored in a temporary storage referred to herein as the &ldquo;next item&rdquo; variable, in a block <highlight><bold>178</bold></highlight>. After either determining that no &ldquo;next item&rdquo; data exists, or after storing the data, the navigator component again parses the menu data in a block <highlight><bold>180</bold></highlight>, this time looking for &ldquo;next menu&rdquo; data. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> If, in a decision block <highlight><bold>182</bold></highlight>, the navigator component determines that &ldquo;next menu&rdquo; data is included in the current database record, this data is also stored in a temporary storage receptacle referred to as the &ldquo;next menu&rdquo; variable, in a block <highlight><bold>184</bold></highlight>. After either determining that no &ldquo;next menu&rdquo; data exists, or storing such data in the &ldquo;next menu&rdquo; variable, the navigator component parses the menu database for the name of the next menu database (if any) that will be the source of subsequent menu items in a block <highlight><bold>186</bold></highlight>. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> If, in a decision block <highlight><bold>188</bold></highlight>, the navigator component determines that a name of a &ldquo;next menu database&rdquo; is provided in the current database record and is different than the name of the current menu database, the navigator component connects the menu template with that different named next menu database, thereby replacing the current menu database in a block <highlight><bold>190</bold></highlight>. Once this has occurred, the original menu database can no longer provide &ldquo;next menu&rdquo; and &ldquo;next item&rdquo; data, but such data can instead be obtained from the &ldquo;next menu&rdquo; and &ldquo;next item&rdquo; variables. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> After the change in menu databases is accomplished, the logic proceeds to a decision block <highlight><bold>192</bold></highlight>. If, in decision block <highlight><bold>188</bold></highlight>, the navigator component determines that a name of a &ldquo;next menu database&rdquo; is not provided in the record, or is the same as the name of the current menu database, the navigator component does not cause the menu database to be changed and instead proceeds to decision block <highlight><bold>192</bold></highlight> to determine if a next menu is currently stored in the &ldquo;next menu variable.&rdquo;</paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> If, in decision block <highlight><bold>192</bold></highlight>, the navigator component determines that a &ldquo;next menu&rdquo; is currently stored in the &ldquo;next menu variable,&rdquo; the navigator component enables the menu template modifier to generate the next menu using the menu template and the appropriate database record in a block <highlight><bold>200</bold></highlight>. Note that depending on the path used to arrive at decision block <highlight><bold>192</bold></highlight>, either the original menu database is active (via block <highlight><bold>188</bold></highlight>) or a new menu database is active (via block <highlight><bold>190</bold></highlight>). If the next menu data was not stored in the next menu variable, and the original database has been replaced in block <highlight><bold>190</bold></highlight>, no record will exist to determine which menu from the new database should be displayed to a user. Regardless of which menu database is active, if the next menu data are stored in the &ldquo;next menu&rdquo; variable, the navigator component uses that next menu data from the &ldquo;next menu&rdquo; variable, and the menu template and menu template modifier to generate a new menu to display to a user in block <highlight><bold>200</bold></highlight> and the logic proceeds to a decision block <highlight><bold>194</bold></highlight>. At this point, the navigator component determines whether a &ldquo;next item&rdquo; is currently stored in the &ldquo;next item&rdquo; variable. If, in decision block <highlight><bold>192</bold></highlight>, the navigator component determines that no &ldquo;next menu&rdquo; data are currently stored in the &ldquo;next menu&rdquo; variable, the logic also proceeds to decision block <highlight><bold>194</bold></highlight>. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> If, in decision block <highlight><bold>194</bold></highlight>, the navigator component determines that the next item is stored in the &ldquo;next item&rdquo; variable, then that next item is selected automatically according to the timer function in a block <highlight><bold>196</bold></highlight>. Note that if the &ldquo;next item&rdquo; variable has a value that is greater than 9, then the menu options (associated with the non-numeral math keys of the numeric keypad) are activated, the menu template is changed, or a text box becomes visible that invites the user to enter data. While a preferred menu format mimics the spatial orientation of a numeric keypad, the present invention is capable of changing the menu template to any format, so long as the menu template modifier can modify the template according to the parameters within the corresponding database record. Once the timer function determines whether the next item is automatically activated, the navigator component transfers control to the sequencer component in a block <highlight><bold>198</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 13</cross-reference>). Block <highlight><bold>198</bold></highlight> requires the logic to return to block <highlight><bold>142</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. If, in decision block <highlight><bold>194</bold></highlight>, the navigator component determines that the next item is not stored in the &ldquo;next item&rdquo; variable, then the navigator component also transfers control to the sequencer component in block <highlight><bold>198</bold></highlight>. In this way, the old database determines which item and menu from the new database are selected for subsequent processing by the sequencer component. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> Yet another important element of the software tool of the present invention is the tracker component, which ensures that each time a user selects a new menu or new menu item, the selections and any entries are recorded and applied to generate sentences usable in a report. This function is particularly useful when the software tool is used to create custom questionnaires and reports, based on user input. A flow chart <highlight><bold>210</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 15</cross-reference> illustrates the sequence of logical steps employed by the tracker component. The tracker component is activated in a block <highlight><bold>212</bold></highlight> whenever a menu is displayed to a user. Whenever the user selects a specific menu item, any text associated with that item&apos;s menu label is recorded in a specific tracker variable in a block <highlight><bold>214</bold></highlight>. Each different menu item will have its own tracker variable. Thus, in this preferred embodiment in which up to 10 menu items are provided (menu items <highlight><bold>27</bold></highlight><highlight><italic>h</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>q</italic></highlight>, representing numeral keys 0-9 on numeric keypad <highlight><bold>38</bold></highlight>), there are 10 tracker variables per menu. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> After a user moves from one menu to a next menu in a block <highlight><bold>216</bold></highlight>, the tracker component looks for a value in the first tracker variable in a block <highlight><bold>218</bold></highlight>. The tracker component determines if a value is present in the current tracker variable in a decision block <highlight><bold>220</bold></highlight>. If so, the tracker component assigns a punctuation value based on the value assigned to the current tracker variable in a block <highlight><bold>222</bold></highlight>. The tracker component then determines if the current tracker variable is the last tracker variable in a decision block <highlight><bold>224</bold></highlight>. If not, the tracker component looks for a value in the next tracker variable in a block <highlight><bold>226</bold></highlight>. The tracker component then returns to decision block <highlight><bold>220</bold></highlight> and determines if a value is present in the current (but different) tracker variable. This cycle is repeated until all tracker variables have been examined. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> Once the tracker component determines that the last tracker variable has been examined in decision block <highlight><bold>224</bold></highlight>, the logic proceeds to a block <highlight><bold>228</bold></highlight>, in which the tracker component checks the database for predefined text associated with the menu related to the tracker variables just examined. The tracker component combines the punctuation assigned in block <highlight><bold>222</bold></highlight>, the tracker variables, and the predefined text, to create a sentence in a block <highlight><bold>230</bold></highlight>. In a block <highlight><bold>232</bold></highlight>, the sentence is added to a tracker paragraph, which includes other sentences generated. The tracker component then loops back to block <highlight><bold>216</bold></highlight> and repeats the process if the user once again changes menus. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> illustrates an exemplary display <highlight><bold>240</bold></highlight> produced by the tracker component. Menu options <highlight><bold>242</bold></highlight>, <highlight><bold>244</bold></highlight>, <highlight><bold>246</bold></highlight>, <highlight><bold>248</bold></highlight>, and <highlight><bold>250</bold></highlight>, respectively labeled 0, 1, 2, 3, and 4, can be selected using a mouse or by pressing the corresponding numeral key on numeric keypad <highlight><bold>38</bold></highlight>. Pressing the &ldquo;0&rdquo; key (for menu option <highlight><bold>242</bold></highlight>) closes the display. Pressing the &ldquo;1&rdquo; key (to select menu option <highlight><bold>244</bold></highlight>) enables the user to add text to the contents of the text box below the buttons. Activating the &ldquo;2&rdquo; key (to select menu option <highlight><bold>246</bold></highlight>) erases all of the text in the text box. Pressing &ldquo;3&rdquo; (to select menu option <highlight><bold>248</bold></highlight>) adds a new line to the contents of the text box and in effect, starts a new paragraph. Finally, pressing &ldquo;4&rdquo; (to select menu option <highlight><bold>250</bold></highlight>) generates a printable report in which the contents of the text box portion of display <highlight><bold>240</bold></highlight> are properly formatted for printing. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> Note that four sentences are presented in display <highlight><bold>240</bold></highlight>, indicating that a user has accessed at least four menus. A sentence <highlight><bold>252</bold></highlight> indicates that the user selected MEATS as a menu item from the HEALTHY LIVING AND FOOD MENU. The underlined portion of sentence <highlight><bold>252</bold></highlight> is predefined text that has been joined with the italicized portion of the text, which corresponds to the tracker variable associated with the menu item selected. The punctuation was added to produce a grammatically correct and readable sentence. Similarly, a sentence <highlight><bold>254</bold></highlight> indicates that the user selected CHICKEN, FISH, and PORK as preferred meats. Once again, the underlined portion of sentence <highlight><bold>254</bold></highlight> is predefined text that has been joined with the italicized portion of the text, which were provided from the tracker variables associated with the menu items actually selected. In this case, CHICKEN, FISH, and PORK equate to three different tracker variables that have been combined. A sentence <highlight><bold>256</bold></highlight> and a sentence <highlight><bold>258</bold></highlight> are generated in the same manner. In this preferred embodiment, the contents of the text box in display <highlight><bold>240</bold></highlight> are editable by the user. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> A portion of an exemplary menu database <highlight><bold>270</bold></highlight> is shown in a tabular format in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>. The data for each menu item extend horizontally in a database record or row, while the data that define the labels and other information presented to the user when a specific menu item is selected are in different columns. A column <highlight><bold>270</bold></highlight><highlight><italic>a </italic></highlight>indicates the menu number; a column <highlight><bold>270</bold></highlight><highlight><italic>b </italic></highlight>provides the text label to be displayed on a menu item; a column <highlight><bold>270</bold></highlight><highlight><italic>c </italic></highlight>provides any image file displayed on a menu item; a column <highlight><bold>270</bold></highlight><highlight><italic>d </italic></highlight>provides any video file associated with a menu item; a column <highlight><bold>270</bold></highlight><highlight><italic>e </italic></highlight>provides any hyperlink associated with a menu item; a column <highlight><bold>270</bold></highlight><highlight><italic>f </italic></highlight>provides any coversheet associated with a menu item; a column <highlight><bold>270</bold></highlight><highlight><italic>g </italic></highlight>provides any telephone number associated with a menu item; and a column <highlight><bold>270</bold></highlight><highlight><italic>h </italic></highlight>indicates the next menu (if any) that will be displayed, and any menu item that is to receive the focus. Note that entries in column <highlight><bold>270</bold></highlight><highlight><italic>h </italic></highlight>include a first numeral indicating the next menu, and a second numeral indicating any menu item that is to receive focus. In row <highlight><bold>264</bold></highlight><highlight><italic>a </italic></highlight>and column <highlight><bold>270</bold></highlight><highlight><italic>h</italic></highlight>, an entry &ldquo;1/&minus;&rdquo; indicates that the next menu will be Menu 1, resulting in a change from Menu 2. The &ldquo;&minus;&rdquo; symbol indicates that no menu item will receive the focus. Actually, the next menu and next menu item to receive the focus are preferably separated into two different columns, but <cross-reference target="DRAWINGS">FIG. 17</cross-reference> includes them in a single column to reduce the size of the drawing. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> All menu data relating to a single menu, including all data pertaining to each separate menu item for that menu, exist as a single row or record in the menu database. <cross-reference target="DRAWINGS">FIG. 17</cross-reference> displays the activity of a single menu item as a unique row, which might lead one to believe that each menu item is stored as a separate database record. However, <cross-reference target="DRAWINGS">FIG. 17</cross-reference> was formatted in that manner only to reduce the size of the drawing. In fact, rows <highlight><bold>262</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>262</bold></highlight><highlight><italic>d</italic></highlight>, and all data pertaining to menu items 5-9 and 0, exist in a single database record that defines Menu 1. The same principle applies to Menus 2, 3 and 4, which are defined by rows <highlight><bold>264</bold></highlight>, <highlight><bold>266</bold></highlight>, and <highlight><bold>268</bold></highlight>, respectively. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> Row <highlight><bold>262</bold></highlight><highlight><italic>a </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 17</cross-reference> includes data relating to menu item one of Menu 1 (column <highlight><bold>270</bold></highlight><highlight><italic>a</italic></highlight>). This menu item will be labeled &ldquo;Fruits,&rdquo; as defined at row <highlight><bold>262</bold></highlight><highlight><italic>a </italic></highlight>and column <highlight><bold>270</bold></highlight><highlight><italic>b</italic></highlight>. There is a telephone number associated with this menu item (indicated at row <highlight><bold>262</bold></highlight><highlight><italic>a </italic></highlight>and column <highlight><bold>270</bold></highlight><highlight><italic>g</italic></highlight>), and for this menu item, the next menu that will be displayed is menu 2 (as indicated at row <highlight><bold>262</bold></highlight><highlight><italic>a </italic></highlight>and column <highlight><bold>270</bold></highlight><highlight><italic>h</italic></highlight>). Note that not all columns defining data that can be associated with a menu item in the preferred embodiment are shown; other types of information included in other columns have been omitted to reduce the size of <cross-reference target="DRAWINGS">FIG. 17</cross-reference>. Preferably, other columns will indicate any audio file associated with a menu item, any menu header to be displayed to a user, any pre-text and any post-text that will be used by the tracker component to generate grammatically correct sentences in a tracking report, the menu keyword associated with a menu, the name of the next menu database, and the interval for the auto-timer. It is not necessary for all or any of the cells in a database record for a menu item to contain data specifying any of these different types of information. However, when data are present in a cell, the menu template modifier, sequencer component, and navigator component use that data to enable the functioning of the present invention. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> In a row <highlight><bold>268</bold></highlight><highlight><italic>c</italic></highlight>, a menu item 3 on menu 4 (intersection of row <highlight><bold>268</bold></highlight><highlight><italic>c </italic></highlight>and column <highlight><bold>270</bold></highlight><highlight><italic>b</italic></highlight>) is labeled &ldquo;Fish.&rdquo; Because an image file &ldquo;c:&bsol;fish.bmp&rdquo; (at row <highlight><bold>268</bold></highlight><highlight><italic>c </italic></highlight>and column <highlight><bold>270</bold></highlight><highlight><italic>c</italic></highlight>) is included, as described above, the image overlays the text data, so the user sees an image of a fish on menu item 3, rather than the text label &ldquo;Fish.&rdquo; If the user selects menu item 3, a fishing video will be shown to a user (&ldquo;c:&bsol;fishing.exe&rdquo; included at row <highlight><bold>268</bold></highlight><highlight><italic>c </italic></highlight>and column <highlight><bold>270</bold></highlight><highlight><italic>d</italic></highlight>); a hyperlink to a webpage is activated (&ldquo;www.anglers.com&rdquo; included at row <highlight><bold>268</bold></highlight><highlight><italic>c </italic></highlight>and column <highlight><bold>270</bold></highlight><highlight><italic>e</italic></highlight>); a fact sheet is displayed to a user (&ldquo;c:fishfacts.rtf&rdquo; included at row <highlight><bold>268</bold></highlight><highlight><italic>c </italic></highlight>and column <highlight><bold>270</bold></highlight><highlight><italic>f</italic></highlight>), a phone number is dialed (555-456-7890 defined at the intersection of row <highlight><bold>268</bold></highlight><highlight><italic>c </italic></highlight>and column <highlight><bold>270</bold></highlight><highlight><italic>g</italic></highlight>); and, a next menu is then displayed, with a focus on item 1 of menu 3 (menu /1, as specified at row <highlight><bold>268</bold></highlight><highlight><italic>c </italic></highlight>and column <highlight><bold>270</bold></highlight><highlight><italic>h</italic></highlight>). The sequence of these events is determined by the interaction of the menu template modifier, the timer function implemented by the sequencer component, and the navigator component, as described above. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> The above sequence of events presented in response to a particular menu item selection is particularly appropriate when a menu database has been provided to present &ldquo;packaged&rdquo; audio-visual presentations and related information to a user. If desired, a different menu database, containing much the same information, could be provided. In this alternative, in response to selection of a menu item, rather than automatically launching the audio, visual, hyperlink, fact sheet display, and phone number dialing described above, another menu would be displayed in which each of the above functions is individually selectable as a menu item. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 18A, 18B</cross-reference>, and <highlight><bold>19</bold></highlight> illustrate menus recreated by the menu template modifier according to the menu database example in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>. The layout of the keys on the numeric keypad is reproduced in the format of the menu items in these displays. <cross-reference target="DRAWINGS">FIG. 18A</cross-reference> illustrates a menu <highlight><bold>37</bold></highlight><highlight><italic>d </italic></highlight>that is identical to a menu <highlight><bold>37</bold></highlight><highlight><italic>e </italic></highlight>illustrated in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>B, except that in <cross-reference target="DRAWINGS">FIG. 18B, a</cross-reference> coversheet <highlight><bold>292</bold></highlight> hides menu items <highlight><bold>27</bold></highlight><highlight><italic>h</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>q</italic></highlight>. Accordingly, selecting menu item <highlight><bold>27</bold></highlight><highlight><italic>k</italic></highlight>, labeled &ldquo;3. Meats&rdquo; (e.g., by pressing numeral key 3 on numeric keypad <highlight><bold>38</bold></highlight>) for the menu of <cross-reference target="DRAWINGS">FIG. 18</cross-reference>A, or selecting menu item 3 from the list displayed in <cross-reference target="DRAWINGS">FIG. 18B</cross-reference> (by similarly pressing numeral key <highlight><bold>3</bold></highlight> on numeric keypad <highlight><bold>38</bold></highlight>) leads to the presentation of a menu <highlight><bold>37</bold></highlight><highlight><italic>f </italic></highlight>shown in <cross-reference target="DRAWINGS">FIG. 19</cross-reference>. Menu items <highlight><bold>27</bold></highlight><highlight><italic>m</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>q </italic></highlight>(corresponding to numeral keys 5-9 on numeric keypad <highlight><bold>38</bold></highlight>) are undefined and are therefore not visible. If desired, some or all of the menu items can be covered with a coversheet. The consequences of selecting a specific menu item in <cross-reference target="DRAWINGS">FIGS. 18A and 18B</cross-reference> are indicated by the data associated with rows <highlight><bold>262</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>262</bold></highlight><highlight><italic>d </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 17</cross-reference>. Row <highlight><bold>262</bold></highlight><highlight><italic>a </italic></highlight>is associated with menu item <highlight><bold>27</bold></highlight><highlight><italic>i </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 18</cross-reference>A, row <highlight><bold>262</bold></highlight><highlight><italic>b </italic></highlight>is associated with menu item <highlight><bold>27</bold></highlight><highlight><italic>j </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 18</cross-reference>A, row <highlight><bold>262</bold></highlight><highlight><italic>c </italic></highlight>is associated with menu item <highlight><bold>27</bold></highlight><highlight><italic>k </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 18</cross-reference>A, and row <highlight><bold>262</bold></highlight><highlight><italic>d </italic></highlight>is associated with menu item <highlight><bold>27</bold></highlight><highlight><italic>l </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 18A</cross-reference>. Menu item <highlight><bold>27</bold></highlight><highlight><italic>i </italic></highlight>has a text label &ldquo;Fruits,&rdquo; which the user can select by pressing the &ldquo;1&rdquo; key on the numeric keypad. If this is done, the phone number (555)999-9999 is presented to the user and dialed by ancillary software. Subsequently, Menu 2 is displayed with the focus on menu item 2 (as indicated by the &ldquo;2/2&rdquo; at row <highlight><bold>262</bold></highlight><highlight><italic>a </italic></highlight>and column <highlight><bold>270</bold></highlight><highlight><italic>h </italic></highlight>in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>; the first &ldquo;2&rdquo; indicating Menu 2), and the second indicating that menu item 2 (labeled with a picture of an orange)) receives the focus. If the timer is active, the user is automatically connected to www.Florida.com (as indicated at row <highlight><bold>264</bold></highlight><highlight><italic>b </italic></highlight>and column <highlight><bold>270</bold></highlight><highlight><italic>e </italic></highlight>in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>), unless the user selects another item or stops the time before the timer&apos;s automated selection is executed. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> Referring once again to <cross-reference target="DRAWINGS">FIGS. 18A and 18B</cross-reference>, Item 2 of menu 1 is labeled &ldquo;Veggies.&rdquo; Selecting this menu item (using numeral key &ldquo;2&rdquo; of numeric keypad <highlight><bold>38</bold></highlight>) will result in the display of menu 3 without setting a focus on any specific item (see at column <highlight><bold>270</bold></highlight><highlight><italic>h </italic></highlight>and row <highlight><bold>262</bold></highlight><highlight><italic>b</italic></highlight>). Therefore, no item will be automatically selected if the timer function is active. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> Item 3 of menu 1 is labeled &ldquo;Meats.&rdquo; Selecting this item will prompt the display of the fourth menu in the database table in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, which is illustrated as menu <highlight><bold>37</bold></highlight><highlight><italic>f </italic></highlight>in <cross-reference target="DRAWINGS">FIG. 19</cross-reference>. Note that a Menu Queue <highlight><bold>290</bold></highlight><highlight><italic>a </italic></highlight>is incorporated into menus <highlight><bold>37</bold></highlight><highlight><italic>d </italic></highlight>and <highlight><bold>37</bold></highlight><highlight><italic>e </italic></highlight>of <cross-reference target="DRAWINGS">FIGS. 18A and 18B</cross-reference>. The menus included in the Menu Queue are the most recently displayed menus. Preferably, the current menu is highlighted, which is indicated in the figure as underlined text. A user can navigate back to a previous menu in the Menu Queue by selecting the specific menu from the Menu Queue, or by noting the menu number and using menu option <highlight><bold>27</bold></highlight><highlight><italic>c </italic></highlight>(corresponding to the &ldquo;*&rdquo; math function key on numeric keypad <highlight><bold>38</bold></highlight>) as described above. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, the text labels for menu items <highlight><bold>27</bold></highlight><highlight><italic>j </italic></highlight>and <highlight><bold>27</bold></highlight><highlight><italic>k </italic></highlight>have been covered with a graphical image. As discussed above, if both a graphic image and a text label are associated with a menu option, the image will cover the text label. Though hidden, the tracker will still process this text if the item is selected, as illustrated in <cross-reference target="DRAWINGS">FIG. 15</cross-reference>. Menu option <highlight><bold>27</bold></highlight><highlight><italic>j </italic></highlight>shows a cow, indicating that the topic associated with menu item <highlight><bold>27</bold></highlight><highlight><italic>j </italic></highlight>(corresponding to numeral key &ldquo;2&rdquo; of numeric keypad <highlight><bold>38</bold></highlight>) is beef (see also row <highlight><bold>268</bold></highlight><highlight><italic>b </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 17</cross-reference>). Similarly, menu item <highlight><bold>27</bold></highlight><highlight><italic>k </italic></highlight>(corresponding to numeral key &ldquo;3&rdquo; of numeric keypad <highlight><bold>38</bold></highlight>) shows a fish, indicating that the topic relating to that menu item is fish (see also row <highlight><bold>268</bold></highlight><highlight><italic>c </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 17</cross-reference>). Note that a Menu Queue <highlight><bold>290</bold></highlight><highlight><italic>b </italic></highlight>has changed slightly, and now includes FOOD MENU 1, which corresponds to the menus displayed in <cross-reference target="DRAWINGS">FIGS. 18A and 18B</cross-reference>. FOOD MENU 4, the current menu, is underlined. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> Menu item <highlight><bold>27</bold></highlight><highlight><italic>l </italic></highlight>in <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is labeled lamb. While not shown in the sample menu database of <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, when a user selects menu item <highlight><bold>27</bold></highlight><highlight><italic>l </italic></highlight>(corresponding to numeral key &ldquo;4&rdquo; of numeric keypad <highlight><bold>38</bold></highlight>), the result is a single event, i.e., the sound of a sheep is played as a wave file. On the other hand, selecting menu item <highlight><bold>27</bold></highlight><highlight><italic>k </italic></highlight>(corresponding to numeral key &ldquo;3&rdquo; of numeric keypad <highlight><bold>38</bold></highlight>), which incorporates the fish image, causes multiple consecutive events to be carried out in an order determined by the sequencer component (as described above in connection with <cross-reference target="DRAWINGS">FIG. 13</cross-reference>). These events include playing a video on catching fish, connecting to a website for anglers, presentation of fishing facts, the dialing of a phone number for information on obtaining a fishing license, and the subsequent display of the third database menu with the focus on its first menu item. The same principles apply to the processing of all data in the menu database. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> As discussed above, the non-numeric menu options also have specific functions, which remain consistent even though the menu items and their associated events change from menu to menu. Menu options <highlight><bold>27</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>g </italic></highlight>surround menu items <highlight><bold>27</bold></highlight><highlight><italic>h</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>q </italic></highlight>in the same way that the non-numeral keys surround the numeral keys on numeric keypad <highlight><bold>38</bold></highlight>. To summarize these functions, selecting the NumLock key (corresponding to menu option <highlight><bold>27</bold></highlight><highlight><italic>a</italic></highlight>) enables the user to toggle the timer function on or off or to select the auto-timer. Selecting the &ldquo;/&rdquo; key (menu option <highlight><bold>27</bold></highlight><highlight><italic>b</italic></highlight>), prompts the user to type in the first letters of a keyword that corresponds to the subject of the displayed menu as listed in a dropdown combo-box (not separately shown, but well known in the art). As the menu database stores each menu keyword in association with a menu number, selecting a keyword sends the associated menu number to the navigator component to prompt the display of the desired menu. Selecting the &ldquo;*&rdquo; key (menu option <highlight><bold>27</bold></highlight><highlight><italic>c</italic></highlight>) prompts the display of the menu navigator component shown in <cross-reference target="DRAWINGS">FIG. 7A</cross-reference>. Selecting the &ldquo;&minus;&rdquo; key (menu option <highlight><bold>27</bold></highlight><highlight><italic>d</italic></highlight>) prompts the user to enter a phone number that the user wishes to dial. The Menu Queue stores the previous (including the current) menus that were displayed. In the Menu Queue, to the left of each menu number is the name of the menu database in which the menu is defined. Selecting the &ldquo;&plus;&rdquo; key (menu option <highlight><bold>27</bold></highlight><highlight><italic>e</italic></highlight>) restores the last menu by sending the last menu database name and menu number to the navigator component. The &ldquo;Enter&rdquo; key (menu option <highlight><bold>27</bold></highlight><highlight><italic>f</italic></highlight>) is selected by the user when the timer function is off to enable manual control of the actions of the sequencer component and navigator component. Finally, selecting the &ldquo;.&rdquo; key (menu option <highlight><bold>27</bold></highlight><highlight><italic>g</italic></highlight>) changes the menu display to a design mode. The design mode is another important element of the software tool of the present invention, and it enables the user to enter data into the menu database when creating a new menu and to edit an existing menu to change the events and other parameters associated with the menu. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> illustrates a menu display <highlight><bold>37</bold></highlight><highlight><italic>g </italic></highlight>showing menu <highlight><bold>37</bold></highlight><highlight><italic>f </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 19</cross-reference> in design mode, which is displayed when a user selects the &ldquo;.&rdquo; key (menu option <highlight><bold>27</bold></highlight><highlight><italic>g</italic></highlight>). When a menu is in design mode, selecting a menu item (typically by pressing on its corresponding numeral key) prompts the display of an additional screen that facilitates entry, review, deletion, or modification of data in the menu database that pertains solely to that menu item. Note that in this display, menu option <highlight><bold>27</bold></highlight><highlight><italic>d </italic></highlight>(corresponding to the &ldquo;&minus;&rdquo; key) indicates that a user has opened the design mode for a menu. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> Data that are edited are entered into the database with the appropriate cell, based on whether the data corresponds to a menu item&apos;s labeling, its loading of other menus, or its information and communication access properties. Pressing on non-numeral keys (menu options <highlight><bold>27</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>g</italic></highlight>) while in the design mode activates various functions that are different than when the menu is not in the design mode. The labels on menu options <highlight><bold>27</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>g </italic></highlight>indicate these functions. For example, selecting the NumLock key (menu option <highlight><bold>27</bold></highlight><highlight><italic>a</italic></highlight>) enables the menu designer to set default settings for the functions of the menus. Selecting the &ldquo;/&rdquo; key (menu option <highlight><bold>27</bold></highlight><highlight><italic>b</italic></highlight>) enables the menu designer to edit the keyword that is associated with the menu, that keyword then being stored in the record associated with the menu in the menu database. Selecting the &ldquo;*&rdquo; key (menu option <highlight><bold>27</bold></highlight><highlight><italic>c</italic></highlight>) prompts the display of the navigator component shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>A, which is the same function as in non-design mode. Selecting the &ldquo;&minus;&rdquo; key (menu option <highlight><bold>27</bold></highlight><highlight><italic>d</italic></highlight>) enables the designer to select design features of the menu, as illustrated in the example of <cross-reference target="DRAWINGS">FIG. 22</cross-reference>. Selecting the &ldquo;&plus;&rdquo; key (menu option <highlight><bold>27</bold></highlight><highlight><italic>e</italic></highlight>) causes the menu display to change to the menu associated with the previous record in the menu database (unless the first database menu is currently displayed). Selecting the &ldquo;Enter&rdquo; key (menu option <highlight><bold>27</bold></highlight><highlight><italic>f</italic></highlight>) causes the menu display to change to the menu associated with the next record in the menu database. When the last record in the menu database is displayed, pressing this key causes a new, blank record to be added to the menu database and displayed. Selecting the &ldquo;.&rdquo; key (menu option <highlight><bold>27</bold></highlight><highlight><italic>g</italic></highlight>) switches back to the non-design or active mode. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> In the design mode, a user can select a specific menu item (menu items <highlight><bold>27</bold></highlight><highlight><italic>h</italic></highlight>-<highlight><bold>27</bold></highlight><highlight><italic>q</italic></highlight>, corresponding to keys 0-9 of numeric keypad <highlight><bold>38</bold></highlight>) to edit. Selecting one of these menu items results in the display of a menu item design form <highlight><bold>300</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>. This design form facilitates data entry into the database to determine any events associated with selection of a menu item and the appearance of each item of a menu. The example in this Figure is for menu item 3 (represented by the image of a fish on the menu item) of menu <highlight><bold>37</bold></highlight><highlight><italic>g </italic></highlight>(see <cross-reference target="DRAWINGS">FIG. 20</cross-reference>), and is displayed to a user after a user selects menu item <highlight><bold>27</bold></highlight><highlight><italic>k </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 20</cross-reference> (e.g., by pressing numeral key &ldquo;3&rdquo; on keypad <highlight><bold>38</bold></highlight>). Note the correlation of the information displayed in the text boxes of design form <highlight><bold>300</bold></highlight> and row <highlight><bold>268</bold></highlight><highlight><italic>c </italic></highlight>of the data table of <cross-reference target="DRAWINGS">FIG. 17</cross-reference> (which does not include all of the events illustrated in the design form). Design form <highlight><bold>300</bold></highlight> enables a user to edit the menu database record represented by row <highlight><bold>268</bold></highlight><highlight><italic>c</italic></highlight>, for example to add or modify the events included in the row. It should be understood that an analogous design form exists for each other menu item of menu <highlight><bold>37</bold></highlight><highlight><italic>g </italic></highlight>for <cross-reference target="DRAWINGS">FIG. 20</cross-reference> (those menu items corresponding to keys 0-2 and 4-9 on the numeric keypad). </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> Referring again to design form <highlight><bold>300</bold></highlight>, a text box <highlight><bold>302</bold></highlight> informs a user that the present design form relates to menu item 3, while a text box <highlight><bold>304</bold></highlight> informs a user that the present design form relates to menu 4 (note these item and menu numbers are consistent with the menu data displayed in the data table of <cross-reference target="DRAWINGS">FIG. 17</cross-reference>). The spatial arrangement of text boxes <highlight><bold>306</bold></highlight>-<highlight><bold>326</bold></highlight> correspond to the spatial arrangement of numeral keys 0-9 and the Enter key of numeric keypad <highlight><bold>38</bold></highlight>. Text boxes <highlight><bold>306</bold></highlight>-<highlight><bold>326</bold></highlight> are also labeled in the same manner as numeral keys 0-9 and the Enter key of numeric keypad <highlight><bold>38</bold></highlight>. By actuating numeral key &ldquo;9,&rdquo; a user can edit the identification of a video file associated with menu item 3, using text box <highlight><bold>310</bold></highlight>. Text box <highlight><bold>308</bold></highlight> enables a user to edit the identification of a sound file associated with menu item 3 when numeral key &ldquo;8&rdquo; is pressed. Text box <highlight><bold>306</bold></highlight> and corresponding numeral key &ldquo;7&rdquo; enable the identification of a coversheet to be edited, while text box <highlight><bold>316</bold></highlight> and corresponding numeral key &ldquo;6&rdquo; enable a hyperlink to be edited. If a user presses the &ldquo;5&rdquo; key, a cursor enters text box <highlight><bold>314</bold></highlight>, labeled &ldquo;5. Item label.&rdquo; The user can then type in the text that will be used as a label for the menu item. If the user enters the text box labeled &ldquo;5. Item label,&rdquo; and presses the &ldquo;Enter&rdquo; key without typing in text, the instructions above the box invite the user to enter the name of a picture label for the item. As previously described, a text label can exist under the image, i.e., the image covers the text label. The design form enables a designer to use the same text box to selectively edit the text label or the identification of the image. Selecting numeral key &ldquo;4&rdquo; (corresponding to text box <highlight><bold>312</bold></highlight>) enables an auto-timer default interval to be edited; selecting numeral key &ldquo;3&rdquo; (corresponding to text box <highlight><bold>322</bold></highlight>) enables a &ldquo;next item&rdquo; to be edited; and selecting numeral key &ldquo;2&rdquo; (corresponding to text box <highlight><bold>320</bold></highlight>) enables a &ldquo;next menu&rdquo; to be edited. Text box <highlight><bold>318</bold></highlight> and corresponding numeral key &ldquo;1&rdquo; enable a &ldquo;next menu database&rdquo; to be edited, while text box <highlight><bold>324</bold></highlight> and corresponding numeral key &ldquo;0&rdquo; enable a phone number associated with menu item 3 to be edited. Finally, when a user selects text box <highlight><bold>326</bold></highlight>, labeled &ldquo;Enter&rdquo; (by pressing the &ldquo;Enter&rdquo; key), the data in a given text box is inserted into the appropriate database cell and the menu template modifier updates the current menu both in terms of its display) and the events that ensue if the menu item that was edited is subsequently selected (with the menu display in the active mode). If the &ldquo;Enter&rdquo; key is consecutively pressed a second time, design form <highlight><bold>300</bold></highlight> is closed, and menu <highlight><bold>37</bold></highlight><highlight><italic>g </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is once again displayed. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> illustrates a design form <highlight><bold>330</bold></highlight> that directs data entry into the database for determining the events that occur with the opening and closing of a menu display and with the tracking of user activity. The data entered in this example are associated with the overall menu design of menu <highlight><bold>37</bold></highlight><highlight><italic>f </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 19</cross-reference>. Design form <highlight><bold>330</bold></highlight> is presented to a user when a user selects menu option <highlight><bold>27</bold></highlight><highlight><italic>d </italic></highlight>of a design menu as illustrated in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>, for example, by pressing the &ldquo;&minus;&rdquo; key on numeric keypad <highlight><bold>38</bold></highlight>. Pressing numeral keys facilitates data entry for this form just as it does for design form <highlight><bold>300</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 21</cross-reference>. A text box <highlight><bold>332</bold></highlight> informs a user that the present design form relates to editing the parameters for an entire menu, rather than a menu item; while a text box <highlight><bold>334</bold></highlight> informs a user that the present design form relates to menu 4. After the user types data, the &ldquo;Enter/Close Form&rdquo; (corresponding to a text box <highlight><bold>356</bold></highlight> labeled &ldquo;Enter&rdquo;) is pressed to store the data in the menu database. If the user presses this key a second time without providing more data entry, the form is closed. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> For example, if the user presses the &ldquo;0&rdquo; key, a cursor enters a text box <highlight><bold>354</bold></highlight> labeled &ldquo;0 Menu Heading.&rdquo; Entry of data in this text box modifies a menu heading <highlight><bold>360</bold></highlight>, as illustrated in <cross-reference target="DRAWINGS">FIGS. 19 and 20</cross-reference>. Pressing the &ldquo;1&rdquo; key, corresponding to a text box <highlight><bold>348</bold></highlight>, directs the entry of a coversheet file name that will be used to hide the items of a menu when it is opened (such as coversheet <highlight><bold>292</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 18B</cross-reference>). Pressing the &ldquo;2&rdquo; key (corresponding to a text box <highlight><bold>350</bold></highlight>) directs the entry of a sound file name causes the corresponding audio clip to accompany the presentation of the menu. Pressing the &ldquo;3&rdquo; key (corresponding to a text box <highlight><bold>352</bold></highlight>) directs the entry of a video file, which causes an audio-video clip to accompany the presentation of the menu. If data are included for the coversheet, audio clip, and audio-video clip, the audio clip first accompanies the menu display, with the items hidden by the coversheet, and is followed by display of the audio-video clip. Pressing the &ldquo;4&rdquo; key (corresponding to a text box <highlight><bold>342</bold></highlight>) directs the entry of a number indicating a default auto-timer setting. Pressing the &ldquo;5&rdquo; key (corresponding to a text box <highlight><bold>344</bold></highlight>) directs the entry of &ldquo;pre-text,&rdquo; which is the text that can be used to indicate that the menu has been displayed to the user and will be included by the tracker component as the first part of a sentence that summarizes user interaction with the menu, as illustrated in <cross-reference target="DRAWINGS">FIG. 16</cross-reference>. Pressing the &ldquo;6&rdquo; key (corresponding to a text box <highlight><bold>346</bold></highlight>) directs the entry of &ldquo;post-text,&rdquo; which is the text used by the tracker component to complete the sentence summarizing user interaction with the menu, also illustrated in <cross-reference target="DRAWINGS">FIG. 16</cross-reference>. Pressing the &ldquo;7&rdquo; key (corresponding to a text box <highlight><bold>336</bold></highlight>) directs the entry of the name of the database in which the next menu is defined, if this information has not been specified by the previously selected item. Pressing the &ldquo;8&rdquo; key (corresponding to a text box <highlight><bold>338</bold></highlight>) directs the entry of the number of the next menu that will be presented, if this information has not been specified by the previously selected item. Pressing the &ldquo;9&rdquo; key (corresponding to a text box <highlight><bold>340</bold></highlight>) directs the entry of the menu item number that will be selected next by manual default or auto-timer function, if this information has not been specified by the previously selected item. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> Menu design form <highlight><bold>330</bold></highlight> thus enables a user to label the menu&apos;s heading, determine the events that occur when a new menu is first displayed, and store text used by the tracker component to record user activity. Menu databases (see text box <highlight><bold>336</bold></highlight>) can be imported from a hard drive on the user&apos;s personal computer, a server, from another type of storage medium, or over the Internet. After data have been entered into a design form text box, the appearance of the menu is updated by the activation of the menu template modifier. After the desired data has been entered into the database, the user can exit the design form and return to the design mode (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) or active (non-design) mode (<cross-reference target="DRAWINGS">FIG. 19</cross-reference>) menu displays. If the user subsequently presses a numeral key while a menu is displayed in the active mode, the sequencer component and navigator component will function according to the new directions of the updated menu database. The user can switch between the design and active modes of menu display by activating or deactivating the design mode control function as described above. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> Note that a menu item need not be visible for the navigator component or sequencer component to function. Even if a menu item is not displayed as a text or image label, the sequencer component and navigator component still function in accord with the instructions of the menu database. Typically, the user may want to display menu items so that other users will know what to expect when an item is selected, unless the user deliberately wants the menu item to be hidden. If an item is visible, its selection is indicated on the display before the sequencer component and navigator component are activated. The text labels for menu items are stored in a variable that tracks the items that the user has selected from a plurality of menus. This tracking is only possible for text labels because the content of this variable is set equal to its prior contents plus the text that labels a newly selected menu item. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> Yet another aspect of the present invention enables a designer to develop a menu driven Questionnaire. <cross-reference target="DRAWINGS">FIG. 23</cross-reference> illustrates a menu <highlight><bold>37</bold></highlight><highlight><italic>h </italic></highlight>with a text box <highlight><bold>362</bold></highlight> that becomes visible when a specified integer, that is not in the range 0 to 9, is entered into a next item cell of the database (e.g., in column <highlight><bold>270</bold></highlight><highlight><italic>h </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 17</cross-reference>). When this entry is detected in the database record for a menu item that has been selected, a cursor appears in text box <highlight><bold>362</bold></highlight> that invites the user to type a response to a question or instructions presented as text in the menu&apos;s heading <highlight><bold>360</bold></highlight><highlight><italic>a</italic></highlight>, a still frame image, a stand-alone audio clip, or an audio-video presentation. The user&apos;s text entry is then compiled with &ldquo;pre-text&rdquo; and &ldquo;post-text&rdquo; data, as well as text of labeled items that the user has selected from the menu, to generate a sentence. In the example shown in this figure, the user entry and selection would be joined to the menu&apos;s pretext, i.e., &ldquo;The amount of fruit the user grows is,&rdquo; is joined with the data entry &ldquo;4&rdquo; (see text box <highlight><bold>362</bold></highlight>), and with the selection of menu option <highlight><bold>27</bold></highlight><highlight><italic>j </italic></highlight>(shaded), indicating &ldquo;tons&rdquo; to generate the statement: &ldquo;The amount of fruit the user grows is 4 tons.&rdquo;&mdash;as illustrated in <cross-reference target="DRAWINGS">FIG. 16</cross-reference>. After user text entry, the navigator may be employed, as described in conjunction with <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, to select another item, another menu, or another database, in accord with the instructions of the menu database entered using the data entry form of <cross-reference target="DRAWINGS">FIG. 22</cross-reference>. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> Although the present invention has been described in connection with the preferred form of practicing it and modifications thereto, those of ordinary skill in the art will understand that many other modifications can be made to the present invention within the scope of the claims that follow. Accordingly, it is not intended that the scope of the invention in any way be limited by the above description, but instead be determined entirely by reference to the claims that follow. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">The invention in which an exclusive right is claimed is defined by the following: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for enabling a user to select a specific menu item from among a plurality of different menu items being displayed, to access data in a database that has been opened by a database program, comprising the steps of: 
<claim-text>(a) providing an input device having a plurality of user actuatable switches; </claim-text>
<claim-text>(b) creating a menu that comprises a plurality of menu items, wherein there is a one-to-one relationship between each menu item and a different user actuatable switch from among the plurality of user actuatable switches, and wherein the menu items are each associated with data in the database; </claim-text>
<claim-text>(c) displaying the menu to a user on a display, wherein said display does not comprise said user actuatable switches; and </claim-text>
<claim-text>(d) enabling the user to select a menu item to access the data in the database associated with the menu item that was selected, by actuating a user actuatable switch that corresponds to said menu item. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said input device comprises a keyboard having a plurality of specific keys, and wherein said plurality of user actuatable switches comprises said plurality of specific keys. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein the step of creating a menu comprises the step of formatting the menu so that the plurality of menu items are arrayed in a layout that is generally similar to a layout of at least the specific keys on the input device for which there is the one-to-one relationship with the menu items, such that a user can visually discern said one-to-one relationship between the menu items and the specific keys, from the layout of the specific keys and the layout of the menu items. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein the step of providing the keyboard input device comprises the step of providing uniquely labeled specific keys; and wherein the step of creating the menu comprises the step of including a label on each menu item matching a unique label on the corresponding specific key for which there is the one-to-one relationship with the menu item, so that the user can visually discern said one-to-one relationship between a menu item and its corresponding specific key, by matching the label on the menu item with the unique label on its corresponding specific key. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein the step of actuating a specific key causes a programmed action to be executed, as defined by the associated data in the database accessed by the corresponding menu item. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein the step of creating a menu comprises the step of determining a number of desired menu items, and a number of specific keys available in said plurality of specific keys, and when the number of desired menu items exceeds the number of specific keys available in said plurality of specific keys, employing one of the plurality of menu items to open an additional menu that is displayed if the user actuates a specific key corresponding to said one menu item, said additional menu including at least a portion of the desired menu items not previously displayed. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein the step of providing a keyboard input device comprises the step of providing a generally conventional computer keyboard having a numeric keypad that includes the plurality of specific keys. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein the step of creating a menu comprises the step of formatting the menu to duplicate an appearance of at least a portion of said numeric keypad. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the step of formatting the appearance of the menu comprises the step of arraying the menu items to generally duplicate a spatial configuration of said numeric keypad, so that the user can visually discern said one-to-one relationship between the menu items and the keys of the numeric keypad by comparing said spatial configuration of the keys of said numeric keypad with the spatial configuration of the menu items comprising the menu displayed. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the step of formatting the appearance of the menu comprises the step of including a number with each menu item that corresponds to a number of the key on the numeric keypad in which the menu item is in the one-to-one relationship, so that the user can visually discern said one-to-one relationship, by comparing the number on each menu item with the number on each of the keys of the numeric keypad. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A method for enabling a user to select a specific menu item from among a plurality of different menu items being displayed on a screen using a numeric keypad, to access data in a database, comprising the steps of: 
<claim-text>(a) providing a keyboard input device that includes a numeric keypad having a plurality of keys numbered sequentially; </claim-text>
<claim-text>(b) creating a menu that comprises a plurality of menu items such that each menu item corresponds to a different one of the keys on the numeric keypad; </claim-text>
<claim-text>(c) displaying said menu to a user so as to indicate a one-to-one relationship between each menu item and its corresponding one of the keys on the numeric keypad; and </claim-text>
<claim-text>(d) enabling a user to select a menu item to access data in the database by actuating a specific key that correspond to the menu item that was selected. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the step of creating the menu comprises the step of formatting the menu so that the menu items are arrayed in a layout that generally duplicates a layout of at least a portion of the keys in the numeric keypad, so that the user can visually discern said one-to-one relationship between the menu items and the keys by comparison of the layout of said at least the portion of the keys and of the menu items. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the step of creating the menu comprises the step of duplicating a spatial configuration of said at least a portion of the keys, such that the user can visually discern said one-to-one relationship between each menu item and its corresponding key by comparing said spatial configuration of said at least the portion of the keys on the numeric keypad with a spatial configuration of the menu items displayed. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the step of creating the menu comprises the step of providing each menu item with a number that corresponds to a number of its corresponding key, such that a user can visually discern said one-to-one relationship between each menu item and its corresponding key, by matching the numbers of the menu items to the corresponding numbers of the keys. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the numbers of the menu items are displayed to the user when the menu is displayed. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the step of creating a menu comprises the step of including at least one of a text label and a graphic label with at least some of the menu items comprising the menu that is displayed to the user, said at least one of the text label and the graphic label providing an indication of a function that will be implemented by selecting a menu item with which said at least one of the text label and the graphic label is included. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. An article of manufacture adapted for use with a computing device to enable a user to rapidly select a specific menu item from among a plurality of different menu items being displayed on a screen, to access data in a database, comprising: 
<claim-text>(a) a memory medium; and </claim-text>
<claim-text>(b) a plurality of machine instructions, which are stored on the memory medium, said plurality of machine instructions, when executed by a processor in a computing device, causing the processor to: 
<claim-text>(i) create a menu that includes a plurality of menu items; </claim-text>
<claim-text>(ii) display the menu that was created to a user in a format such that there is a one-to-one relationship between each menu item and a different specific key on a keyboard input device, each menu item being associated with data in the database; and </claim-text>
<claim-text>(iii) enable a user to select a menu item by actuating a specific key corresponding to the menu item, to access the data in the database associated with the menu item selected. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The article of manufacture of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the menu that is created duplicates an appearance of at least a portion of a plurality of specific keys on the keyboard input device, so that a user can visually discern said one-to-one relationship between the menu items and the specific keys. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The article of manufacture of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the machine instructions cause a spatial organization of the menu items to generally duplicate a spatial organization of said at least the portion of the plurality of special keys, so that a user can visually discern said one-to-one relationship between the menu items and the specific keys. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The article of manufacture of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the machine instructions cause the actuation of a specific key to execute an action defined by the data in the database associated with the corresponding menu item. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The article of manufacture of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein if a number of desired menu items exceeds a number of specific keys available on said keyboard input device, the machine instructions cause one menu item to be employed to open an additional menu, so that when a user actuates a specific key corresponding to said one menu item, the additional menu containing at least a portion of the desired menu items not previously displayed is created and displayed to a user. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The article of manufacture of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein said article is adapted to be used with a standard computer having a keyboard that includes a numeric keypad comprising the plurality of specific keys. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The article of manufacture of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the machine instructions cause the menu displayed to include labels on at least some of the menu items, each menu item having a label corresponding to a generally similar label on its corresponding specific key, so that a user can visually discern said one-to-one relationship between the menu items and the specific keys by comparing said labels on the menu items with the labels on the specific keys. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The article of manufacture of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein the machine instructions cause the menu displayed to include one of a text label and a graphic label with at least some of the menu items comprising the menu that is displayed, said at least one of the text label and the graphic label providing an indication of a function that will be implemented by selecting a menu item. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A system for enabling a user to rapidly select a specific menu item from among a plurality of different menu items being displayed on a screen to access data in a database, comprising: 
<claim-text>(a) a memory in which a plurality of machine instructions are stored; </claim-text>
<claim-text>(b) a display; </claim-text>
<claim-text>(c) a keyboard input device comprising a plurality of specific keys; and </claim-text>
<claim-text>(d) a processor that is coupled to the display and to the memory to access the machine instructions, said processor executing said machine instructions and implementing a plurality of functions, including: 
<claim-text>(i) creating a menu that comprises the plurality of different menu items and providing a one-to-one relationship between each menu item and a corresponding specific key, each menu item having associated data in the database; </claim-text>
<claim-text>(ii) displaying the generated menu to a user; and </claim-text>
<claim-text>(iv) enabling a user to select a menu item by actuating the specific key corresponding to the menu item, to access the data associated with the menu item in the database. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the menu substantially duplicates an appearance of at least a portion of said plurality of specific keys, such that a user can visually discern said one-to-one relationship between the menu items and the specific keys. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, wherein a layout of the menu items is substantially similar to a layout of at least the portion of said plurality of specific keys. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the functions implemented by the processor further include executing an action defined by the data in the database associated with a menu item in response to a user actuating the specific key corresponding to said menu item. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the keyboard input device comprises a standard computer keyboard that includes a numeric keypad comprising the plurality of specific keys. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A method for generating a plurality of menus for accessing data in a database opened in a database program, with a computing device, comprising the steps of: 
<claim-text>(a) providing: 
<claim-text>(i) a plurality of database records, each database record including data relating to a menu; </claim-text>
<claim-text>(ii) a menu template; and </claim-text>
<claim-text>(iii) a menu template modifier; </claim-text>
</claim-text>
<claim-text>(b) accessing said plurality of database records with the menu template modifier; and </claim-text>
<claim-text>(c) using said menu template modifier, recreating each of the plurality of menus when required, based upon the data in said plurality of database records and based on a format defined by said menu template. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein the menu template defines a format for a menu in which a layout of a plurality of menu items comprising the menu generally corresponds to a layout of at least a portion of a plurality of specific keys on a keyboard input device. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein the menu template produces a menu in which a layout of a plurality of menu items comprising the menu generally correspond to a layout of at least a portion of a plurality of keys comprising a numeric keypad of a computer keyboard. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, further comprising the steps of providing a plurality of controls in the menu template modifier that enable different actions when accessing data; and enabling the user to select a control for association with a menu item in the menu, so that when the menu item is selected, the control is activated. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. A memory medium on which are stored a plurality of machine instructions adapted to be executed by a computer to cause a plurality of functions to be performed, said functions comprising: 
<claim-text>(a) enabling a user to execute a database program and to open a menu database including database records that contain information relating to different menus; </claim-text>
<claim-text>(b) accessing said database records with a menu template modifier; and </claim-text>
<claim-text>(c) recreating a menu based upon data included in a portion of said database records, in a format defined by a menu template. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. A method for creating a menu in a menu database opened in a database program, comprising the steps of: 
<claim-text>(a) opening a menu database for storing database records; </claim-text>
<claim-text>(b) accessing a menu template, and a menu template modifier that function under the database program, said menu template modifier displaying a menu form that includes menu items in a format defined by the menu template; </claim-text>
<claim-text>(c) enabling a user to edit said menu form that is displayed to create a menu by entering data; </claim-text>
<claim-text>(d) using said menu template modifier, generating a database record that includes data entered by the user defining an appearance and other parameters of the menu; </claim-text>
<claim-text>(e) for each menu item included in the menu form using data entered by the user, using said menu template modifier to add to said database record data specifying an appearance and any events that will be actuated when a user selects that menu item during use of the menu; and </claim-text>
<claim-text>(f) saving said database record in the database, so that the menu can subsequently be recreated when needed, using the menu template modifier, menu template, and said database record to define a form and a functionality of the menu. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 35</dependent-claim-reference>, wherein the step of providing the menu template comprises the step of applying a format for the menu items so that each menu item has a one-to-one relationship with a different key from among at least a portion of a plurality of keys on a keyboard input device. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 36</dependent-claim-reference>, wherein the menu template formats a spatial organization of the menu items to generally duplicate at least a portion of the plurality of keys on a numeric keypad. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. A method for reducing an amount of memory required to store information for a plurality of menus that are included in a database opened with a database program, comprising the steps of: 
<claim-text>(a) providing a menu template for each of the plurality of menus, a menu template modifier, and a database that includes a plurality of database records in which are data specifying an appearance of each of the plurality of menus, and an appearance and functional parameters for each of a plurality of menu items in the plurality of menus; and </claim-text>
<claim-text>(b) using the menu template, the menu template modifier, and the database records to recreate any of the plurality of menus when needed, the database records not including any data for formatting the plurality of menus and the database not being used to store the plurality of menus in a complete form, so that the amount of memory required to store the information for the plurality of menu is substantially reduced compared to that required to store each of the plurality of menus in the complete form. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. An article of manufacture adapted for use with a computer to enable a user to store information for a plurality of menus using substantially less memory resources, comprising: 
<claim-text>(a) a memory medium; and </claim-text>
<claim-text>(b) a plurality of machine instructions stored on the memory medium, which when executed by a computer, cause the computer to: 
<claim-text>(i) access a menu template and a menu template modifier, and a database; </claim-text>
<claim-text>(ii) enable a user to enter data for each of the plurality of menus; </claim-text>
<claim-text>(iii) generate a plurality of database records with the menu template modifier that include the data entered by the user defining an appearance of each of the plurality of menus and an appearance and functional parameters for each of a plurality of menu items included in the plurality of menus; and </claim-text>
<claim-text>(iv) said menu template defining a format for each of the plurality of menus and a spatial organization of the plurality of menu items in the plurality of menus, said plurality of database records, menu template, and menu template modifier subsequently being usable to recreate any of said plurality of menus when required, the database records not including any data for formatting the plurality of menus, and the database not being used to store the plurality of menus in a complete form, so that the memory resources required to store the information for the plurality of menus is substantially reduced compared to that required to store each of the plurality of menus in the complete form. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. A method for utilizing a plurality of menus to access selected data in a menu database opened with a database program, comprising the steps of: 
<claim-text>(a) providing a menu template that defines a format for each of the plurality of menus, a menu template modifier, and at least one menu database comprising a plurality of database records, said menu template modifier being capable of generating a menu based on said menu template and the data in said plurality of database records, the menu thus generated including a plurality of menu items; </claim-text>
<claim-text>(b) enabling a user to select a desired menu from the menu database; </claim-text>
<claim-text>(c) using said menu template modifier, said menu template, and a database record to generate the desired menu, said database record defining an appearance and a functionality of the menu items included within the desired menu; </claim-text>
<claim-text>(d) displaying said desired menu to a user to enable the user to select at least one of said plurality of menu items, said menu items that is selected having a database record that includes at least one event associated with the menu item; and </claim-text>
<claim-text>(e) in response to the menu item being selected by the user, causing said at least one of the plurality of events included in the database record associated with the menu item that was selected, to occur. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference>, wherein the step of enabling said at least one of a plurality of events to occur comprises at least one of displaying additional menu, displaying an image, displaying textual data, playing audio data, playing audio-visual data, playing video data, connecting to hyperlinked data, connecting to a webpage, establishing a telephonic connection, changing the menu database, displaying another menu, and selecting another menu item. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference>, further comprising the step of providing a sequencer component that determines an order in which a plurality of events associated with a menu item should occur and implements a timing function for causing the plurality of events to occur in said order. </claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference>, further comprising the step of enabling the user to disable sequencer events and the timer function, so that the user can bypass data with which the user is familiar and navigate through a sequence of menus more rapidly. </claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference>, further comprising the steps of: 
<claim-text>(a) providing a plurality a database records that define a plurality of sequential menus; and </claim-text>
<claim-text>(b) enabling the user to select at least one of a sequence of menu databases, a sequence of menus, and a sequence of menu items, by selecting a single menu item. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference>, further comprising the step of providing a tracker component that records each menu item selected. </claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 45</dependent-claim-reference>, wherein when an additional menu is displayed to a user, said tracker generates a textual report of menu items selected by a user on an immediately preceding menu. </claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 45</dependent-claim-reference>, further comprising the step of enabling a user to generate a report that includes each previously selected menu item, said report being usable to provides results of a questionnaire comprising the menu items displayed to the user from which the user selected specific menu items. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference>, further comprising the steps of providing a timer function that automates display of successive menus; and enabling a user to selectively enable and disable said timer function. </claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference>, wherein the menu template displays the plurality of menu items in a spatial organization so that each menu item has a one-to-one relationship with a corresponding one of at least a portion of a plurality of keys on a keyboard input device. </claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the spatial organization of the menu items generally duplicates a spatial organization of at least a portion of a plurality of keys on a numeric keypad. </claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference>, further comprising the steps of providing an edit function with the menu template modifier, and enabling a user to selectively edit one of a desired menu and a desired menu item in a menu with the menu template modifier. </claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. An article of manufacture adapted for use with a computing device, comprising: 
<claim-text>(a) a memory medium; and </claim-text>
<claim-text>(b) a plurality of machine instructions stored on the memory medium, which when executed by a processor of the computing device, causing the processor to: 
<claim-text>(i) enable a user to select a desired menu in a menu database opened in a database program; </claim-text>
<claim-text>(ii) access a menu template, a menu template modifier, and a plurality of database records in which data are included that define an appearance of the desired menu, and an appearance and functionality for a plurality menu items included in the desired menu; </claim-text>
<claim-text>(iii) use the menu template, the menu template modifier, and the plurality of database records to recreate the desired menu; </claim-text>
<claim-text>(iv) display said desired menu to a user to enable a user to select at least one of a plurality of menu items; and </claim-text>
<claim-text>(v) enable at least one of a plurality of events associated with the menu item that was selected to occur in response to the selection of the menu item. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. The article of manufacture of <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference>, wherein said menu template defines a format in which the menu items in the desired menu are displayed so that a layout of the menu items generally duplicates a layout of at least a portion of a plurality of keys on a keyboard input device. </claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. A system for enabling a user to access data in a menu database opened with a database program, using a plurality of predefined menus, comprising: 
<claim-text>(a) a memory in which a plurality of machine instructions are stored; </claim-text>
<claim-text>(b) a display; </claim-text>
<claim-text>(c) a keyboard input device comprising a plurality of keys, and </claim-text>
<claim-text>(d) a processor that is coupled to the display and to the memory to access the machine instructions, said processor executing said machine instruction to implement a plurality of functions, including: 
<claim-text>(i) enabling a user to select a desired menu from the menu database, said desired menu including a plurality of menu items; </claim-text>
<claim-text>(ii) using a menu template that defines a format of the desired menu, a menu template modifier, and a database record included in the menu database, recreating the desired menu, said database record including data that define an appearance and functional parameters of the menu items. </claim-text>
<claim-text>(iii) displaying said desired menu to the user, and enabling the user to select at least one of a plurality of menu items, the data defining each menu item in a database record specifying any events associated with the menu item; and </claim-text>
<claim-text>(iv) enabling at least one of a plurality of events associated with the menu items that was selected by the user to occur. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00055">
<claim-text><highlight><bold>55</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00055">claim 54</dependent-claim-reference>, wherein said menu template formats a layout of the menu items included in the desired menu to generally duplicate a layout of a plurality of keys on at least a portion of a keyboard input device, so that there is a one-to-one relationship between each menu item and a corresponding one of the plurality of keys in said at least the portion of the keyboard input device. </claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00055">claim 55</dependent-claim-reference>, wherein said at least the portion of keys comprises a numeric keypad of a keyboard.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004983A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004983A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004983A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004983A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004983A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004983A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004983A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004983A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004983A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004983A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004983A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030004983A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030004983A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030004983A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030004983A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030004983A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030004983A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030004983A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030004983A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030004983A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030004983A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030004983A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
