<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004704A1-20030102-D00000.TIF SYSTEM "US20030004704A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004704A1-20030102-D00001.TIF SYSTEM "US20030004704A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004704A1-20030102-D00002.TIF SYSTEM "US20030004704A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004704A1-20030102-D00003.TIF SYSTEM "US20030004704A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004704A1-20030102-D00004.TIF SYSTEM "US20030004704A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004704A1-20030102-D00005.TIF SYSTEM "US20030004704A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004704A1-20030102-D00006.TIF SYSTEM "US20030004704A1-20030102-D00006.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004704</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09897347</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010702</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F017/20</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>704</class>
<subclass>008000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>System and method of spreadsheet-based string localization</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>John</given-name>
<middle-name>M.</middle-name>
<family-name>Baron</family-name>
</name>
<residence>
<residence-us>
<city>Longmont</city>
<state>CO</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>HEWLETT-PACKARD COMPANY</name-1>
<name-2>Intellectual Property Administration</name-2>
<address>
<address-1>P.O. Box 272400</address-1>
<city>Fort Collins</city>
<state>CO</state>
<postalcode>80527-2400</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The present invention is directed to a system of and method for creating localization data which is used to update instruction manuals, books, and user interfacing portions of computer programs to contain words, phrases, sentences, and paragraphs in local languages when the product is purchased by an individual who desires to look at the information in a language other than the language in which it was created. The invention also includes a system for and a method of tracking and highlighting changes in the localization data to ensure the word or words in the foreign languages remain synchronized with the word or words in the base or original language. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> Typically, when a manufacturer sells a product, written instructions or instruction manuals are included with the product when sold. Similarly, when a software manufacturer sells software, the software typically includes strings forming words, phrases, sentences and paragraphs including information concerning the operation of the product for use by the end user. When a manufacturer sells products in its home country, a single version of instructions or messages is used to convey, or receive information to/from the user (interfacing message(s)). However, when a product is marketed to a country whose citizens speak several languages, or is shipped to different countries whose national language is different than the base language used to compose the instructions or user information, the base language interfacing messages must be translated to other, i.e. foreign, languages. For example, many foreign countries have laws which dictate that particular portions of instruction manuals or user interface portions of programs must be presented in the native or official language of the country. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Typically, software programs are written in some base language which is typically the native language of the country in which the program is created. In the United States, this base language would be English. While the majority of the software program is not translated when the program is sold in a foreign country (e.g., the portion representing executable code and variables), portions of the program which are used to convey information to the end user, or receive input from the user, must be translated to ensure the end user will understand the instructions or required action or information. Such portions typically include alphanumeric strings for display to the user. Interfacing messages would be translated to ensure the end user could interact with the program. For instance, if a spreadsheet program were created in the United States and sold in Japan, the program typically would be written in English and, initially, the portions of the program used to illicit or transfer information from and to the end user (e.g., prompts and output) would also be written in English. Throughout the process of generating the software, the program and user interfaces would retain its English characteristics for ease in testing, troubleshooting, performance measurement, and program review. However, before the software product was shipped to Japan for sale, portions of the program used to interface with the end user would be translated into Japanese to ensure the user would be able to interact, i.e., understand the information being conveyed to them and would be able to input information to the software program. While the portion of the software program which interfaces with the end product user would be translated, the remainder of the program would retain its English characteristics. The English format of the balance of the program would ease later program updates, program troubleshooting (if required) and normal software maintenance. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> For software programs that are sold in more than one country, one way to minimize the amount of effort necessary to ensure user interfacing portions of the software are presented to the end user in the local language of the country where the product is sold, is to collect all user interfacing words, phrases, sentences, and paragraphs, into a separate file which is called by the main software routine when interface to the end user is desired. One method of interfacing the main software routine with the local language user interface is by embedding variables in the main software routine where the definitions of the variables are held in a local language user interface table. These local language user interface tables are generally referred to as string tables. If a software product was planned on being sold in more than one country, a string table would be created in each language in which the product is intended to be used. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Additional problems are encountered by the software manufacturer when string tables are created and then user interfacing language is changed after the creation of the string tables. Since the software developer is typically unfamiliar with the foreign languages, the developer must keep track of changes in the user interface&apos;s words, phrases, sentences and paragraphs in the base language to ensure that the string tables are updated accordingly. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The present invention is directed to a system and method for creating localization data which is used to update instruction manuals, books, and computer programs to contain alphanumeric string-data forming words, phrases, sentences, and paragraphs appropriate to the native language of a user. Localization is achieved by the creation of a spreadsheet which contains one or more words in the base language or the language in which the manual or program was written, and correlates those base language components with corresponding components of other, or foreign, languages. Additionally, the present invention ensures changes in the alphanumeric strings in one language are highlighted until the corresponding foreign language strings are updated to reflect the changes. The preferred embodiment of the present invention creates string tables which contain the words, phrases, sentences and paragraphs in a language other than the base language for incorporation into the base program when the base program is compiled or executed. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a diagram depicting the relationship between the localization spreadsheet and the various string tables; </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 2A and 2B</cross-reference> are tables depicting an example of various components contained within the localization spreadsheet; </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a flow diagram of a program which generates string tables; </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flow diagram of the operations which occur when the localization spreadsheet is saved; </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a flow diagram which shows two different modes a user can use to interface with the localization spreadsheet; and </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flow diagram of the present invention which highlights changed areas of the localization spreadsheet. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Presently, a need exists for a simplified system for and method of translating interfacing word(s) from a base language in a software program to a foreign language used by a user. Additionally, a further need exists to ensure synchronization is maintained between the associated foreign word(s), the base language interfacing word(s) and included identifiers. Words are composed of alphanumeric characters, which are defined for this application as one or more printable or displayable characters including specific symbols, characters, and graphics contained in natural languages. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a flow diagram which shows the relationship between the localization spreadsheet and the individual language string tables. Localization spreadsheet <highlight><bold>100</bold></highlight> contains, for this example, nine columns including a string identifier <highlight><bold>101</bold></highlight>, comment field <highlight><bold>102</bold></highlight>, English language string <highlight><bold>103</bold></highlight>, exclamation point <highlight><bold>104</bold></highlight>, French language string <highlight><bold>105</bold></highlight>, German language string <highlight><bold>106</bold></highlight>, Italian language string <highlight><bold>107</bold></highlight>, Japanese language string <highlight><bold>108</bold></highlight>, and Spanish language string <highlight><bold>109</bold></highlight>. Once localization spreadsheet <highlight><bold>100</bold></highlight> is complete, individual string tables, for each foreign language desired, are created. For example, the information contained in column <highlight><bold>103</bold></highlight> is used to generate English string table <highlight><bold>110</bold></highlight>. Similarly, the information contained in column <highlight><bold>105</bold></highlight> is used to generate French string table <highlight><bold>111</bold></highlight>. Similarly, string tables <highlight><bold>112</bold></highlight>, <highlight><bold>113</bold></highlight>, <highlight><bold>114</bold></highlight> and <highlight><bold>115</bold></highlight> are each generated in their respective languages. The column labeled with the exclamation point <highlight><bold>104</bold></highlight> is used to store an indication that the row corresponding to the indication has been marked for special or specific treatment. For instance, an indication in this column may be used as a &ldquo;do not translate&rdquo; flag. An indication in this row would ensure the alphanumerics included in English column <highlight><bold>103</bold></highlight> are not translated in the foreign languages. This may be used, for example, to prevent the name of a company or a product from being translated. Similarly, column <highlight><bold>104</bold></highlight> may be used to mark rows for other types of special treatment. Of course, several of these &ldquo;marker&rdquo; columns can be used, if desired. Also note that while columns are shown, one skilled in the art could use rows or could even use other organization forms to control the process. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 2A and 2B</cross-reference> show a detailed breakout of the information contained in the columns of localization spreadsheet <highlight><bold>100</bold></highlight>. Identifier column <highlight><bold>101</bold></highlight> contains descriptive terms, or even variables from the instruction manual or software program, including a description of the prompt or output which allows the programmer to determine the purpose of the specific identifier. Comment column <highlight><bold>102</bold></highlight> allows the programmer to include comments which will allow others to update a localization spreadsheet accordingly. English column <highlight><bold>103</bold></highlight> includes the English word, phrase, sentence or paragraph which is associated with the identifier in Column <highlight><bold>101</bold></highlight> in the same row. For example, identifier file <highlight><bold>200</bold></highlight> is associated with the English word file <highlight><bold>201</bold></highlight>. Similarly, column <highlight><bold>105</bold></highlight> contains the French language equivalent of the corresponding English word or in this case, Fichier <highlight><bold>202</bold></highlight>, i.e., &ldquo;File.&rdquo; Thus each term within each column of the localization table includes a term in the foreign language which is associated with the identifier and the English word translated into the foreign language. Row <highlight><bold>205</bold></highlight> includes an indication in column <highlight><bold>104</bold></highlight> which, in this example, indicates that the English string should be placed, unmodified, within the corresponding locations in the remaining columns. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a flow diagram of process <highlight><bold>300</bold></highlight> which illustrates the generation of the string tables associated with the localization spreadsheet. Process <highlight><bold>300</bold></highlight> can work in any computing environment and can be adapted by those skilled in the art to run on any operating system and in any computer platform. Process <highlight><bold>300</bold></highlight> is an example of an engine which controls the system and method of the invention. In step <highlight><bold>301</bold></highlight> a check is performed to test whether the identifier (ID) field contains a value or is empty. If the ID field does contain a value, the program examines the next language column in step <highlight><bold>309</bold></highlight>. The column is checked to determine if this column is the base language column, English in this example, in step <highlight><bold>302</bold></highlight>. If the language included in the field is in the base or native language then step <highlight><bold>303</bold></highlight> outputs the selected string in the base language to the output string table. However, if in step <highlight><bold>302</bold></highlight>, the column is not the base column, a check is performed at step <highlight><bold>304</bold></highlight> to determine whether this field contains data representing the corresponding foreign language. If the column does contain data, then the string is not empty and the foreign language string data in the field is written into the corresponding string table in step <highlight><bold>305</bold></highlight>. Once the string data is written into the corresponding string table, in step <highlight><bold>306</bold></highlight>, a check is performed to test to see if the foreign language string output was the last language for which a string table is required. If additional columns containing additional foreign languages exist, flow is returned to step <highlight><bold>309</bold></highlight>, in which the next language column is selected and the process continues. One of ordinary skill in the art would understand that process <highlight><bold>300</bold></highlight> works across each row of the localization spreadsheet. Once the last foreign language column is addressed in step <highlight><bold>306</bold></highlight>, the program determines in step <highlight><bold>307</bold></highlight> whether additional rows exist which contain data which need to be included in the associated string tables. If additional rows do exist, they are selected, as encountered, in step <highlight><bold>310</bold></highlight>. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> For example, applying process <highlight><bold>300</bold></highlight> to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, in step <highlight><bold>301</bold></highlight> a determination would be made as to whether the ID field of the first row is empty. In order to accomplish this, the program would check the ID field <highlight><bold>200</bold></highlight> and determine that the word &ldquo;file&rdquo; is present. Next, in step <highlight><bold>309</bold></highlight> the program would go to the next language column and determine whether that column was the base language, or in this example English, column. As the default, the native language should always be present. In this example, column <highlight><bold>103</bold></highlight> would be checked and identified as the base language column. Since this word is in the English language column, step <highlight><bold>303</bold></highlight> is executed and the word &ldquo;File&rdquo; is written into a dedicated English string table. Next, test <highlight><bold>306</bold></highlight> is used to check to see whether English was the last language or whether other columns exist containing one or more words in corresponding foreign languages. Since additional columns exist, the program in step <highlight><bold>309</bold></highlight> would go to the next language column, column <highlight><bold>105</bold></highlight>. In step <highlight><bold>302</bold></highlight> the program would determine that column <highlight><bold>105</bold></highlight> is not the base language column and continue processing at step <highlight><bold>304</bold></highlight>. In step <highlight><bold>304</bold></highlight> the contents of field <highlight><bold>202</bold></highlight> would be examined and a determination made as to whether or not this field contains a valid string value. Cell <highlight><bold>202</bold></highlight> contains the string &ldquo;Fichier&rdquo; (i.e., French for &ldquo;File&rdquo;), a valid string such that program flow would continue in step <highlight><bold>305</bold></highlight> where &ldquo;Fichier&rdquo; would be written into the French string table. Flow would return to step <highlight><bold>306</bold></highlight> and a determination would be made that additional columns contain further additional foreign language string equivalents and program flow would return to step <highlight><bold>309</bold></highlight>. In step <highlight><bold>309</bold></highlight> the next column is selected and in step <highlight><bold>302</bold></highlight> the column is identified as not being the base language column. In step <highlight><bold>304</bold></highlight> a check is made to test whether or not cell <highlight><bold>203</bold></highlight> is empty, in this case the program recognizing the string &ldquo;Datei&rdquo; (i.e., &ldquo;file&rdquo; in German) stored in cell <highlight><bold>203</bold></highlight> and step <highlight><bold>305</bold></highlight> would copy the string &ldquo;Datei&rdquo; into the German string table. This process continues left to right through the row until the information contained in the last column <highlight><bold>109</bold></highlight> is examined. At this point, since this is the last language for which a column exists, the test at step <highlight><bold>306</bold></highlight> consisting of &ldquo;Was this the last language&rdquo; is answered in the affirmative and flow <highlight><bold>300</bold></highlight> continues with step <highlight><bold>307</bold></highlight>. In step <highlight><bold>307</bold></highlight> a determination is made as to whether this is the last row contained in the localization spreadsheet. From the spreadsheet depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, this question would be answered &ldquo;no&rdquo; and the second row of the localization spreadsheet would then be examined according to processing flow <highlight><bold>300</bold></highlight>. This process would be continued until the last foreign language in the last row was examined and placed into a spreadsheet. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Returning to step <highlight><bold>304</bold></highlight>, if the cell is empty, the empty test at step <highlight><bold>304</bold></highlight> would be passed and process flow would pass to step <highlight><bold>308</bold></highlight>. In step <highlight><bold>308</bold></highlight> a determination is made as to whether the format associated with localization spreadsheet supported fallback. If fallback is supported, this means that the main software routine, using the string table, can accept an empty field without adversely affecting the operation of the main routine. An empty string in the table is replaced during program execution by a next best language string. The next best language may be predefined by the user. For example, American English may be defined to be the next best language for an empty British-English string. Similarly, France French may be predefined to be the next best language for Canadian French. During execution, empty or missing strings in a specific language may be filled with the corresponding term or string from the next best language. If the format associated with the localization spreadsheet does support fallback, the cell within the string table would be empty and step <highlight><bold>306</bold></highlight> would move onto the next cell in the next language. However, returning to step <highlight><bold>308</bold></highlight> if the format does not support fallback, a string value would need to be entered into the cell of the string table to ensure program execution would be completed. In this case, processing at step <highlight><bold>303</bold></highlight> writes the default, or in this example the English, entry into the associated field of the string table to ensure the operation of the main routine is not adversely impacted. Reference number <highlight><bold>204</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2B</cross-reference> shows an empty string included within the table. One of ordinary skill in the art would understand that the &ldquo;row&rdquo; approach used by the preceding description is not required and that other variations are possible and are encompassed within this invention. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flow diagram of the save portion of the program. In flow <highlight><bold>400</bold></highlight>, when the user selects the save feature in edit mode in step <highlight><bold>401</bold></highlight> a determination is made in step <highlight><bold>402</bold></highlight> to identify the appropriate output format from the driver page of the spreadsheet. The driver page controls and outputs formatting information for the spreadsheet of <cross-reference target="DRAWINGS">FIGS. 2A and 2B</cross-reference>. The driver page is a separate page which contains data specific to the programming language that the string tables will be used by. It is a separate page to help prevent accidental alterations during translation of the spreadsheet. One of ordinary skill in the art would understand that different programming languages require different string table formats. Step <highlight><bold>402</bold></highlight> ensures the appropriate output format will be generated. In step <highlight><bold>403</bold></highlight> the language tag is captured from the individual column to be associated with the specific string table. In step <highlight><bold>404</bold></highlight> additional language specific information is obtained from the driver page for inclusion in the appropriate string table. In step <highlight><bold>405</bold></highlight> the string tables may be generated. Conversely the string tables may be generated in a separate step or process. In step <highlight><bold>406</bold></highlight> the localization spreadsheet is saved. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a flow diagram which shows two different modes in which a user can interface with the localization spreadsheet. Typically a user interacts with the localization spreadsheet for one of two reasons. First the user may desire to edit the information contained within the localization spreadsheet. Second, the user may desire to generate the string tables which are associated with the localization spreadsheet. Alternatively, each time the localization spreadsheet is updated, the string tables can be generated to ensure that up-to-the-minute string tables are always available. Process flow <highlight><bold>500</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> begins with a check to test whether the user desires to generate the string tables or desires to edit the spreadsheet. In step <highlight><bold>501</bold></highlight>, if the user only desires to generate the string table, processing continues at step <highlight><bold>502</bold></highlight> which minimizes the window and generates the output table in step <highlight><bold>503</bold></highlight>. Once all output tables are generated, the associated spreadsheet program, such as Microsoft Excel, is exited. Alternatively, in step <highlight><bold>501</bold></highlight> if the user desires to edit the localization spreadsheet additional capabilities exist for the user to do that. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flow diagram which shows how highlighting is incorporated to identify missing, or out-of-date information contained in the spreadsheet of <cross-reference target="DRAWINGS">FIGS. 2A</cross-reference> and <highlight><bold>2</bold></highlight>B. Outdated information may be introduced by changes in identifier column <highlight><bold>101</bold></highlight>, English column <highlight><bold>103</bold></highlight>, or column <highlight><bold>104</bold></highlight>. Outdated information is usually identified by a user updating information within one or more cells of one or more columns. For example, referring to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>A, if &ldquo;File&rdquo; <highlight><bold>201</bold></highlight> were modified by a user, highlighting may be included to indicate that each string corresponding to &ldquo;File&rdquo; <highlight><bold>201</bold></highlight> is outdated and needs to be reviewed. By incorporating highlighting in this manner, recalculation of translations and screen updates are minimized. Processing flow <highlight><bold>600</bold></highlight> begins with step <highlight><bold>601</bold></highlight> in which a determination is made as to whether or not a base language alphanumeric string is present for each identifier present. If an identifier is present without a base language alphanumeric string, then the table position corresponding to the base language should be highlighted in step <highlight><bold>602</bold></highlight> indicating that the base language string requires additional information. Similarly, in step <highlight><bold>603</bold></highlight> a check is performed to ensure each alphanumeric string present in the base language has an associated identifier. If not, the appropriate cell in the identifier column is highlighted in step <highlight><bold>604</bold></highlight>. Once a determination is made that each identifier corresponds to an alphanumeric string and that each alphanumeric string in the base language correspond to an identifier, in step <highlight><bold>605</bold></highlight> a check is performed to determine if translation is required for this row. If the determination is made in step <highlight><bold>605</bold></highlight> that the &ldquo;no translate&rdquo; flag is set, in step <highlight><bold>606</bold></highlight> each alphanumeric string which corresponds to the identifier, other than the base language string, is highlighted to show that no translation is needed. One example of the use of a no translate flag is the use of an indication in Column <highlight><bold>104</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference>. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Referring still to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, if a determination is made in step <highlight><bold>605</bold></highlight> that the &ldquo;no translate&rdquo; flag is not set then translation is desired. A determination will be made in step <highlight><bold>607</bold></highlight> as to whether fallback is supported and if it is, corresponding cells in the associated tables use the alphanumeric strings in the corresponding cells of the next best language to determine the appropriate alphanumeric strings. If, however, fallback is not supported, all cells which correspond to rows in which both the identifier and the base language string are available are highlighted unless they contain an alphanumeric string. One of ordinary skill would understand highlighting includes blinking reverse video, change font color, change font size, change font type or any other action which draws attention to the specific cell. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A computer readable media having stored therein a documentation creation system comprising: 
<claim-text>a localization spreadsheet including: 
<claim-text>a first column of cells having stored therein identifiers associated with alphanumeric strings to be included in a textual document; </claim-text>
<claim-text>a second column of cells associated with respective ones of said identifiers, each cell having stored therein an alphanumeric string in a first natural language; </claim-text>
<claim-text>a third column of cells associated with respective ones of said identifiers each cell having stored therein an alphanumeric string in a second natural language; and </claim-text>
<claim-text>an engine configured to create a string table from said localization spreadsheet including said identifiers and said alphanumeric strings of one of first and second natural languages. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The computer readable media of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said engine is further configured to generate a plurality of said string tables wherein each string table includes said alphanumeric strings from the same column of cells from said localization spreadsheet. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The computer readable media of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said string table is used by a computer program to create screens displayed to a user of said computer program. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The computer readable media of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said localization spreadsheet includes logic for highlighting one of said identifier in response to a change made to a corresponding alphanumeric string of one of said first and second natural languages. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The computer readable media of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said localization spreadsheet includes logic for highlighting ones of said alphanumeric strings of one of said first and second natural language in response to a change made to a corresponding one of said identifier. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The computer readable media of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said localization spreadsheet includes logic for highlighting, in response to a change made to one of said alphanumeric strings in said first natural language, a corresponding one of said alphanumeric strings of a second natural language. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The computer readable media of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the localization spreadsheet further comprises: 
<claim-text>a fourth column of cells associated with respective ones of said identifiers each cell having stored therein an alphanumeric string in a third natural language. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The computer readable media of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said alphanumeric strings represent one of a menu, prompt and information exchange. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A method of creating a string table comprising the steps of: 
<claim-text>creating a localization spreadsheet including: 
<claim-text>storing in a first column of cells identifiers associated with alphanumeric strings to be included in a textual document; </claim-text>
<claim-text>storing in a second column of cells an alphanumeric string in a first natural language where each of said alphanumeric string is associated with respective ones of said identifiers; </claim-text>
<claim-text>storing in a third column of cells an alphanumeric string in a second natural language where each of said alphanumeric string in said second natural language is associated with respective ones of said identifiers; and </claim-text>
<claim-text>creating the string table from said localization spreadsheet including said identifiers and said alphanumeric strings of one of first and second natural languages. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> further comprising the step of: 
<claim-text>generating a plurality of said string tables wherein each string table includes said alphanumeric strings from the same column of cells from said localization spreadsheet. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> further comprising the steps of: 
<claim-text>reading said string table using a computer program; </claim-text>
<claim-text>creating screens using said alphanumeric strings contained within said string tables; and </claim-text>
<claim-text>displaying said screens to a user of said computer program. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> further comprising the step of: 
<claim-text>highlighting one of said identifier in response to a change made to a corresponding ones of said alphanumeric strings of one of said first and second natural languages. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> further comprising the step of: 
<claim-text>highlighting ones of said alphanumeric strings of one of said first and second natural language in response to a change made to a corresponding one of said identifier. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> further comprising the step of: 
<claim-text>highlighting, in response to a change made to one of said alphanumeric strings in said first natural language, a corresponding one of said alphanumeric strings of a second natural language. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> further comprising the step of: 
<claim-text>storing in a fourth column of cells an alphanumeric string in a third natural language associated with respective ones of said identifiers. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> further comprising the step of: 
<claim-text>representing one of a menu, prompt and information exchange by said alphanumeric string. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A computer readable media having stored therein: 
<claim-text>means for associating an alphanumeric string with respective ones of said identifiers; </claim-text>
<claim-text>means for associating an alphanumeric string in a first natural language with respective ones of said identifiers; </claim-text>
<claim-text>means for associating an alphanumeric string in a second natural language with respective ones of said identifiers; and </claim-text>
<claim-text>means for creating a string table including said identifiers and said alphanumeric strings of one of first and second natural languages. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The computer readable media of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> further comprising: 
<claim-text>means for using said string table within a main software routine to include a foreign language in an interfacing software program. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The computer readable media of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> further comprising: 
<claim-text>means for reading said string table; </claim-text>
<claim-text>means for creating screens including said alphanumeric strings contained within said string tables; and </claim-text>
<claim-text>means for displaying said screens to a user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The computer readable media of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> further comprising: 
<claim-text>means for highlighting ones of said alphanumeric strings of one of said first and second natural language, in response to a change made to a corresponding one of said identifier. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The computer readable media of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> further comprising: 
<claim-text>means for highlighting, in response to a change made to one of said alphanumeric strings in said first natural language, a corresponding one of said alphanumeric strings of a second natural language. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The computer readable media of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> further comprising: 
<claim-text>means for storing in a fourth column of cells an alphanumeric string in a third natural language associated with respective ones of said identifiers. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A method of creating a string table comprising the steps of: 
<claim-text>creating a localization spreadsheet including: 
<claim-text>storing in a first column of cells identifiers associated with alphanumeric strings to be included in a textual document; </claim-text>
<claim-text>storing in a second column of cells alphanumeric strings in a first natural language where each of said alphanumeric strings in said first natural language is associated with respective ones of said identifiers; </claim-text>
<claim-text>storing in a third column of cells alphanumeric strings in a second natural language where each of said alphanumeric strings in said second natural language is associated with respective ones of said identifiers; </claim-text>
<claim-text>creating a plurality of string tables from said localization spreadsheet including said identifiers and said alphanumeric strings from one of said first and second natural languages; </claim-text>
<claim-text>identifying a change in either said identifier column or in any of said language columns; and </claim-text>
<claim-text>highlighting, in response to said identifying step, entries in the other columns which are associated with identified changes in a particular column.</claim-text>
</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004704A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004704A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004704A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004704A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004704A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004704A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004704A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
