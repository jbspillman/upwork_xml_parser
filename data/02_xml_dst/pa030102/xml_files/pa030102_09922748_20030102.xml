<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002506A1-20030102-D00000.TIF SYSTEM "US20030002506A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00001.TIF SYSTEM "US20030002506A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00002.TIF SYSTEM "US20030002506A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00003.TIF SYSTEM "US20030002506A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00004.TIF SYSTEM "US20030002506A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00005.TIF SYSTEM "US20030002506A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00006.TIF SYSTEM "US20030002506A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00007.TIF SYSTEM "US20030002506A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00008.TIF SYSTEM "US20030002506A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00009.TIF SYSTEM "US20030002506A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00010.TIF SYSTEM "US20030002506A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00011.TIF SYSTEM "US20030002506A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00012.TIF SYSTEM "US20030002506A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00013.TIF SYSTEM "US20030002506A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00014.TIF SYSTEM "US20030002506A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00015.TIF SYSTEM "US20030002506A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030002506A1-20030102-D00016.TIF SYSTEM "US20030002506A1-20030102-D00016.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002506</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09922748</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010807</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-200303</doc-number>
</priority-application-number>
<filing-date>20010702</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L012/28</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>H04L012/56</ipc>
</classification-ipc-secondary>
<classification-ipc-secondary>
<ipc>H04L012/66</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>370</class>
<subclass>392000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>370</class>
<subclass>419000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Packet switching apparatus, method of transmitting multicast packet at packet switching apparatus, and setup method of packet switching apparatus</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Norihiko</given-name>
<family-name>Moriwaki</family-name>
</name>
<residence>
<residence-non-us>
<city>Kokubunji</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Takahiko</given-name>
<family-name>Kozaki</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Masami</given-name>
<family-name>Takahashi</family-name>
</name>
<residence>
<residence-non-us>
<city>Fujisawa</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>Hitachi, Ltd.</organization-name>
<assignee-type>03</assignee-type>
</assignee>
<correspondence-address>
<name-1>Stanley P. Fisher</name-1>
<name-2>Reed Smith Hazel &amp; Thomas LLP</name-2>
<address>
<address-1>3110 Fairview Park Drive, Suite 1400</address-1>
<city>Falls Church</city>
<state>VA</state>
<postalcode>22042-4503</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">In a packet switching apparatus capable of multicast, the length of a bitmap added to a multicast packet is made variable, depending on the number of line interface cards housed in the packet switching apparatus. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to a packet data switching apparatus that switches variable-length packets such as Internet Protocol (IP) packets. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of the Background </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Recently, there has been a significant increase in data traffic including Internet data traffic. Also, there is a move to perform conventional voice communications and services such as transaction processing, which have been performed over leased lines, on the Internet for the purpose of cost reduction. To cope with this situation, high speed, large capacity, and scalable configuration are required for packet data switching apparatuses. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> shows the configuration of a general packet switching apparatus. A packet switching apparatus <highlight><bold>1</bold></highlight> comprises: plural ingress line cards <highlight><bold>20</bold></highlight>; plural egress line cards <highlight><bold>30</bold></highlight>; a packet switch <highlight><bold>10</bold></highlight> for connecting and switching input/output lines; and a controller <highlight><bold>40</bold></highlight> for controlling these functional blocks. </paragraph>
<paragraph id="P-0006" lvl="7"><number>&lsqb;0006&rsqb;</number> The ingress line cards <highlight><bold>20</bold></highlight> and the egress line cards <highlight><bold>30</bold></highlight> are, in some times, configured with physically identical modules. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Methods are available for scalably expanding such a packet switching apparatus so as to have larger capacity. As shown in <cross-reference target="DRAWINGS">FIG. 22</cross-reference>, plural packet switching apparatuses <highlight><bold>1</bold></highlight> are mutually connected by a connection system <highlight><bold>50</bold></highlight> configured with large-capacity crossbar switches and the like. Alternatively, as shown in <cross-reference target="DRAWINGS">FIG. 23</cross-reference>, packet switches are cascaded to obtain a large capacity and increase the number of user ports. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> In future, in terms of applications, more demands are expected for services such as distant learning, tele-conference and contents distribution. To efficiently offer these services over a network, the packet switching apparatuses must have the multicast function. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> A packet switching apparatus to support multicast is disclosed in JP-A-235991/1993 (hereinafter referred to as &ldquo;reference 1&rdquo;). An ATM-based multicast system disclosed by the reference 1 is shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference>. In this system, a fixed-length packet (ATM cell) comprised of user information <highlight><bold>100</bold></highlight> and a cell header <highlight><bold>101</bold></highlight> containing ATM call identifier VPI/VCI is inputted to an switching system. When an ATM cell arrives at the switch, the destination information of the cell is retrieved from a header conversion table, using VPI/VPI <highlight><bold>101</bold></highlight> as key, and the destination information is added to the cell header. For a multicast cell, a bitmap tag <highlight><bold>110</bold></highlight> is added; for a unicast cell, a coded tag <highlight><bold>112</bold></highlight> is added. The bitmap tag refers to a method by which bits corresponding to all output destinations are provided and are set to &ldquo;1&rdquo; for desired output destinations (for example, when eight destinations exist, the destinations are displayed by 8 bits), and the coded tag refers to a method that represents an output destination by binary (for example, when eight destinations exist, the destinations are displayed by 3 bits). Each cell is added with a distribution indicator <highlight><bold>120</bold></highlight> to provide identification of multicast or unicast for the cell. Multicast cells are added with temporary VPI/VCI <highlight><bold>111</bold></highlight> and unicast cells are added with proper VPI/VCI <highlight><bold>113</bold></highlight>. A multicast cell inputted to the switch are copied and outputted to plural output destinations according to the bitmap tag. In a following stage of the switch, a multicast cell is identified by the distribution indicator <highlight><bold>120</bold></highlight> and temporal VPI/VCI <highlight><bold>111</bold></highlight> of a multicast cell is replaced by proper VPI/VCI before it is sent to an output line. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> ATM technology features cyclic hardware processing of data in units of fixed-length slots. In an ATM cell multicast system, </paragraph>
<paragraph id="P-0011" lvl="7"><number>&lsqb;0011&rsqb;</number> an area of an internal cell header added to a fixed-length packet (cell) is fixedly allocated. For example, to support multicast in a large-capacity packet switching apparatus supporting 256 lines, a 256-bit bitmap area must be allocated in advance within a cell header. This means that, even if the system shown in the reference 1 is used, for unicast, 8 bits (256 destinations can be identified) are used for a coded tag and an area of other 248 bits (31 bytes) is an unused area. In other words, if a short packet of about 64 bytes is inputted to a variable-length packet switch, with multicast considered, a 256-bit (32-byte) bitmap is always added as a header. As a result of this, the 64-byte data will swell to 96-byte data, which is 1.5 times the size of the original data within the packet switching apparatus (in practice, an internal header for another usage will be added). Particularly for unicast, 31 bytes of the 96 bytes are transferred as an unused area, resulting in a wasteful use of switching resources of the packet switching apparatus. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Scalability is very important in large-capacity packet switching apparatuses. For example, as a possible implementation form, in edge portions of a network or at initial installation thereof, only a small number of unit nodes shown in <cross-reference target="DRAWINGS">FIG. 22</cross-reference> are used connected to a connection system <highlight><bold>50</bold></highlight>, and when core portions of the network or traffic increases, unit nodes <highlight><bold>1</bold></highlight> are incrementally added to the connection system <highlight><bold>50</bold></highlight>. In other words, in the above described large-capacity packet switching apparatus capable of supporting 256 lines, when only 16 lines are used, a bitmap necessary for multicast requires no more than 16 bits, so that the other 240 bits of the area provided for 256 lines are redundant. In short, in the case where a large-capacity packet switching apparatus is used in a small-scale configuration, since the whole of a multicast bitmap provided for a maximum configuration is transferred within the apparatus, switching resources within the apparatus become redundant. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> According to one aspect of the present invention, in a packet switching apparatus capable of multicast, the length of a bitmap added to multicast packets is made variable depending on the number of line interface cards installed in the packet switching apparatus. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> In one embodiment of the present invention, the number of installed line interface cards is entered from a management terminal connected to a packet switching apparatus. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Other aspects of the present invention will be made apparent in embodiments of the present invention.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Preferred embodiments of the present invention will be described in detail based on the followings, wherein: </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram showing the configuration of a packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram showing a line interface card (ingress side) of the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram showing the configuration of a line interface card (egress side) of the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram showing functional blocks of the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a flowchart showing a setup method of the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a processing example of the line interface card (ingress side) of the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a processing example of the line interface card (ingress side) of the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a processing example of the line interface card (ingress side) of the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is an example of a packet format used in the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is an example of a packet format used in the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is an example of a packet format used in the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> illustrates effects of internal packet length reduction of the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a block diagram showing the configuration of a packet switch of the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a block diagram showing another configuration of the line interface card (ingress side) of the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is an example of a packet format used in the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a drawing showing physical installation of the line interface card of the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a drawing showing an example of application of the packet switching apparatus of the present invention to networks; </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is an example of bitmap data used in the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a block diagram showing the configuration of a switch of the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a flowchart showing another setup method of the packet switching apparatus of the present invention; </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> is a block diagram showing the configuration of a conventional packet switching apparatus; </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a block diagram showing the configuration of a conventional large-capacity packet switching apparatus; </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> is a block diagram showing the configuration of a conventional large-capacity packet switching apparatus; and </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> illustrates a conventional multicast packet method.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0041" lvl="7"><number>&lsqb;0041&rsqb;</number> &lt;First Embodiment&gt;</paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> A description will be made of a first embodiment of a packet switching apparatus of the present invention. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows an embodiment of a packet switching apparatus of the present invention. The packet switching apparatus comprises: plural ingress line cards <highlight><bold>20</bold></highlight>; plural egress line cards <highlight><bold>30</bold></highlight>; a variable-length packet switch <highlight><bold>60</bold></highlight> for switching among input and output lines; and a controller <highlight><bold>40</bold></highlight> controlling these functional blocks. An ingress line card &num;k is paired with an egress line card &num;k (k is an integer satisfying a relation of 1&lE;k&lE;n). The variable-length packet switch <highlight><bold>60</bold></highlight> comprises: plural header extracters <highlight><bold>61</bold></highlight>, one for each of the ingress line cards; an n&times;n switch <highlight><bold>62</bold></highlight> having n input ports (I_PORT) and n output ports (O_PORT); and a switch controller <highlight><bold>63</bold></highlight>. The n&times;n switch <highlight><bold>62</bold></highlight> may be configured so as to have an internal queue buffer for each output destination to provide against packet output collision; alternatively, the n&times;n switch may be made bufferless by controlling packet transmission from the line cards <highlight><bold>20</bold></highlight> to prevent collision of packet output to an identical switch output port by a controlling means such as the controller <highlight><bold>40</bold></highlight>. I_PORT&num;k is paired with O_PORT&num;k (k is an integer satisfying a relation of 1&lE;k&lE;n). A packet outputted from an ingress line card &num;k is inputted to I_PORT&num;k, and a packet outputted from O_PORT&num;k is inputted to an egress line card &num;k. A management terminal <highlight><bold>41</bold></highlight> is connected to the controller <highlight><bold>40</bold></highlight>. In the following description, pairs of the ingress line cards and the egress line cards may be simply referred to as line interface cards, and pairs of the input ports and the output ports as ports. A line interface card number of k denotes a pair of ingress line card &num;k and egress line card &num;k, and the line interface card number is the same as the number of an input port through which packets outputted from the ingress of the line interface card are inputted (or the number of an output port through which packets are outputted to an egress line card of the line interface card). Therefore, if, e.g., I_PORT&num;k is not used due to fault or for other reasons (in this case, O_PORT&num;k also is not used), the line interface card number k does not exist. A packet switching apparatus, although not shown, has n slots for accommodating n line interface cards. Packets outputted from an ingress line interface card of a line interface card accommodated in slot &num;k are inputted to I_PORT&num;k, and packets outputted from O_PORT&num;k are inputted to an egress line card &num;k of a line interface card accommodated in slot &num;k. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows one embodiment of an ingress line card <highlight><bold>20</bold></highlight>. The ingress line card <highlight><bold>20</bold></highlight> comprises: O/E converter <highlight><bold>21</bold></highlight>; PHY L2 processor <highlight><bold>22</bold></highlight>; route retrieval engine <highlight><bold>23</bold></highlight>; routing table <highlight><bold>24</bold></highlight>; and input buffer <highlight><bold>25</bold></highlight>. After being inputted to the apparatus over an input line, packet data is converted from optical signal to an electrical signal in the O/E converter <highlight><bold>21</bold></highlight>. Thereafter, in the PHY L2 processor <highlight><bold>22</bold></highlight>, physical layer processing, packet extraction from a layer 2 frame, and error checking are performed. Thereafter, in the route retrieval engine <highlight><bold>23</bold></highlight>, layer 3 processing such as output port retrieval and quality class retrieval are performed based on a destination IP address. Retrieval processing uses the routing table <highlight><bold>24</bold></highlight> connected to the route retrieval engine <highlight><bold>23</bold></highlight>. The routing table <highlight><bold>24</bold></highlight> is configured in advance. In the routing table <highlight><bold>24</bold></highlight>, each IP address has its related information such as output port information, quality class, and next hop IP address (NHIP). NHIP means the IP address of next transfer destination. Retrieval results are put in the header part of each packet. Packets outputted from the routing retrieval engine <highlight><bold>23</bold></highlight> are stored in the input buffer <highlight><bold>25</bold></highlight> and outputted to a variable-length packet switch after being subjected to queuing processing for each output destination and quality class control. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows one embodiment of an egress line card <highlight><bold>30</bold></highlight>. The egress line card <highlight><bold>30</bold></highlight> comprises: output buffer <highlight><bold>31</bold></highlight>; PHY L2 processor <highlight><bold>32</bold></highlight>; layer 2 table <highlight><bold>33</bold></highlight>; routing table <highlight><bold>24</bold></highlight>; and E/O converter <highlight><bold>34</bold></highlight>. A packet outputted from the variable-length packet switch is stored in the output buffer <highlight><bold>31</bold></highlight> and subjected to quality class control. Next, in the PHY L2 processor <highlight><bold>32</bold></highlight>, layer 2 processing is performed. For example, in the case where an output line is Ethernet, a layer 2 address (MAC address) of destination router is searched for and inserted, using a next hop IP address (NHIP). Correspondence between NHIP and layer 2 address of connection router is stored in the layer 2 table <highlight><bold>33</bold></highlight>. Thereafter, the variable-length packet is subjected to layer 2 frame mapping processing and outputted to an output line after being converted to an optical signal in the E/O converter <highlight><bold>34</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows one embodiment of the route retrieval engine <highlight><bold>23</bold></highlight> installed in the ingress line card <highlight><bold>20</bold></highlight>. The route retrieval engine <highlight><bold>23</bold></highlight> comprises: First In First Out (FIFO) queue buffer <highlight><bold>231</bold></highlight>; packet header (PKTH) extracter <highlight><bold>232</bold></highlight>; bitmap allocater <highlight><bold>233</bold></highlight>; unicast detection and coding <highlight><bold>234</bold></highlight>; selector <highlight><bold>235</bold></highlight>; internal header generater <highlight><bold>236</bold></highlight>; and internal header inserter <highlight><bold>237</bold></highlight>. A packet inputted to the route retrieval engine <highlight><bold>23</bold></highlight> is stored in the FIFO queue buffer <highlight><bold>231</bold></highlight> and successively subjected to the following processing. From the packet at the head of the FIFO queue buffer <highlight><bold>231</bold></highlight>, a packet header, concretely, a destination IP address (hereinafter referred to as DIP<highlight><bold>241</bold></highlight>) in the case of IP is fetched. DIP<highlight><bold>241</bold></highlight> is sent to the routing table, and using its information as key, destination port information <highlight><bold>242</bold></highlight> indicating a desired egress line card <highlight><bold>30</bold></highlight>, NHIP <highlight><bold>243</bold></highlight>, and QOS information <highlight><bold>244</bold></highlight>, which is a quality class identifier, are searched. The destination port information <highlight><bold>242</bold></highlight>, which is bitmap information corresponding to a destination port, is sent to both the bitmap allocater <highlight><bold>233</bold></highlight> and the unicast detection and coding <highlight><bold>234</bold></highlight>. NHIP <highlight><bold>243</bold></highlight> and QOS information <highlight><bold>244</bold></highlight> are sent to the internal header generater <highlight><bold>236</bold></highlight>. The bitmap allocater <highlight><bold>233</bold></highlight> has a microprocessor connected to a microprocessor interface MP-I/F<highlight><bold>238</bold></highlight>. In the bitmap allocater <highlight><bold>233</bold></highlight>, a bitmap area specified by the microprocessor is cut out of the destination port information <highlight><bold>242</bold></highlight>. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows an example of the procedure for allocating a bitmap area. A user, from a management terminal connected to a packet switching apparatus, enters the number of line interface cards installed in the packet switching apparatus (step <highlight><bold>401</bold></highlight>). The number of line interface cards is rounded up in units of bytes and the length of a valid bitmap area is determined (step <highlight><bold>402</bold></highlight>). These processing explained above are performed by the controller <highlight><bold>40</bold></highlight>. Via MP-I/F <highlight><bold>238</bold></highlight>, the valid bitmap area is set to the bitmap allocater <highlight><bold>233</bold></highlight> (step <highlight><bold>403</bold></highlight>). The procedure for allocating a bitmap area is terminated by executing these steps. In the example of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the bitmap area is allocated in units of bytes (8 bits). This is because rounding up in units of bytes is more suitable for processing since serial data is supposed to be converted to 8-bit-wide parallel data for processing in the header extracter <highlight><bold>61</bold></highlight> in this example. The setting unit of bitmap may be arbitrary unit of length depending on the implementation. Although, in this embodiment, the processing of step <highlight><bold>402</bold></highlight> is performed in the controller <highlight><bold>40</bold></highlight> and a valid bitmap area is allocated to the bitmap allocater <highlight><bold>233</bold></highlight> via MP-I/F <highlight><bold>238</bold></highlight>, the number of line interface cards entered from the management terminal may be directly sent to the microprocessor within the bitmap allocater <highlight><bold>233</bold></highlight> from the controller <highlight><bold>40</bold></highlight> so that the calculation in step <highlight><bold>402</bold></highlight> and the allocation of M bytes to the obtained bitmap area are performed by the microprocessor. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows an example of processing of the bitmap allocater <highlight><bold>233</bold></highlight>. If it is assumed that a maximum of 256 line interface cards can be installed in the packet switching apparatus, that is, a multicast of up to 256 destinations can be supported, bitmap information of 256 bits per entry is stored in the destination port information <highlight><bold>242</bold></highlight> of the routing table <highlight><bold>24</bold></highlight>. In the case where this apparatus is used with a maximum configuration, directions are given to the bitmap allocater <highlight><bold>233</bold></highlight> from MP-I/F <highlight><bold>238</bold></highlight> so that all 256 bits of the destination port information <highlight><bold>242</bold></highlight> are valid. The bitmap allocater <highlight><bold>233</bold></highlight> sends bitmap <highlight><bold>242</bold></highlight>-<highlight><bold>1</bold></highlight> of 256 bits received from the routing table <highlight><bold>24</bold></highlight> to the selector <highlight><bold>235</bold></highlight> as BMP <highlight><bold>2331</bold></highlight>-<highlight><bold>1</bold></highlight> without modification. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows another example of processing of the bitmap allocater <highlight><bold>233</bold></highlight>. In the case where 64 line interface cards are installed for use in slots &num;1 to 64 in the above described packet switching apparatus in which up to <highlight><bold>256</bold></highlight> line interface cards can be installed, directions are given to the bitmap allocater <highlight><bold>233</bold></highlight> from MP-I/F <highlight><bold>238</bold></highlight> so that only <highlight><bold>64</bold></highlight> bits of the destination port information <highlight><bold>242</bold></highlight> are valid. The bitmap allocater <highlight><bold>233</bold></highlight> isolates valid 64 bits from the bitmap <highlight><bold>242</bold></highlight>-<highlight><bold>2</bold></highlight> of 256 bits received from the routing table <highlight><bold>24</bold></highlight> and sends only valid bits to the selector <highlight><bold>235</bold></highlight> as BMP <highlight><bold>2331</bold></highlight>-<highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> The unicast detection and coding <highlight><bold>234</bold></highlight> analyzes a bitmap of the destination port information <highlight><bold>242</bold></highlight> to detect whether the number of desired destinations is one, which indicates unicast. In case of unicast, the bitmap information is coded into a binary value (routing tag, hereinafter referred to as RTG) which directly indicates a specified destination. An example of processing of the unicast detection and coding <highlight><bold>234</bold></highlight> will be described using <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. The unicast detection and coding <highlight><bold>234</bold></highlight> analyzes bitmap <highlight><bold>242</bold></highlight>-<highlight><bold>3</bold></highlight> of 256 bits received from the routing table <highlight><bold>24</bold></highlight>, and on detecting that only one destination (destination 4 in this example) is an output target, which indicates unicast, the bitmap is coded into 8 bits of RTG <highlight><bold>2341</bold></highlight>-<highlight><bold>1</bold></highlight> (&ldquo;00000100&rdquo; indicating an output port &num;4 in this embodiment) and sends it to the selector <highlight><bold>235</bold></highlight>. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> Referring back to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, BMP <highlight><bold>2331</bold></highlight> and RTG <highlight><bold>2341</bold></highlight> are inputted to the selector <highlight><bold>235</bold></highlight>, which selects BMP <highlight><bold>2331</bold></highlight> or RTG <highlight><bold>2341</bold></highlight> so as to output BMP <highlight><bold>2331</bold></highlight> for multicast cells and RTG <highlight><bold>2341</bold></highlight> for unicast cells. The switching of the selector <highlight><bold>235</bold></highlight> is made according to an identifying signal <highlight><bold>239</bold></highlight> from the unicast detection and coding <highlight><bold>234</bold></highlight>. The identifying signal <highlight><bold>239</bold></highlight> is also sent to the internal header generater <highlight><bold>236</bold></highlight>. Unicast or multicast can also be judged by the type of DIP <highlight><bold>241</bold></highlight>. An output signal of the selector <highlight><bold>235</bold></highlight> is sent to the internal header generater <highlight><bold>236</bold></highlight> and is inserted in a packet stored in the head of the FIFO queue buffer <highlight><bold>231</bold></highlight> along with NHIP <highlight><bold>243</bold></highlight> and QOS information <highlight><bold>244</bold></highlight> in the internal header inserter <highlight><bold>237</bold></highlight>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> Next, a description will be made of an example of a packet format used with the packet switching apparatus of the present invention. A format of unicast packet is shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. A unicast packet <highlight><bold>300</bold></highlight> consists of an input packet part <highlight><bold>320</bold></highlight> from a line and an internal header <highlight><bold>310</bold></highlight>. The input packet part <highlight><bold>320</bold></highlight> consists of a packet header (PKTH) <highlight><bold>321</bold></highlight> containing a destination IP address and other information, and variable-length data <highlight><bold>322</bold></highlight>. The internal header <highlight><bold>310</bold></highlight> inserted by the internal header inserter <highlight><bold>237</bold></highlight> consists of multicast/unicast identifier (M/U) <highlight><bold>311</bold></highlight>, packet type information (PKT) <highlight><bold>312</bold></highlight>, quality class information (QOS) <highlight><bold>313</bold></highlight>, routing tag (RTG) <highlight><bold>2341</bold></highlight>, and NHIP <highlight><bold>315</bold></highlight>. The RTG <highlight><bold>2341</bold></highlight> area consists of one byte (<highlight><bold>8</bold></highlight> bits) so that it can identify <highlight><bold>256</bold></highlight> destinations. In this embodiment, a routing tag (&ldquo;00000101&rdquo;) destined for output port &num;5 is shown. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows a format of multicast packet when a small number of line interface cards are installed in the apparatus. In the format of <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, in the interests of simplicity, the same portions as in <cross-reference target="DRAWINGS">FIG. 9</cross-reference> will be omitted from the following discussion and only different portions will be explained. In a multicast packet <highlight><bold>301</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the internal header <highlight><bold>310</bold></highlight> is provided with a 2-byte (<highlight><bold>16</bold></highlight> bits) bitmap (BMP) <highlight><bold>2331</bold></highlight>S so that 16 destinations can be identified. In this embodiment, a bitmap example of &ldquo;1001100000000000&rdquo; is shown. Since the first, fourth, and fifth bits from the start are set to &ldquo;1&rdquo;, this packet is a multicast packet destined for output ports &num;1, &num;4, and &num;5. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows a format of multicast packet when a large number of line interface cards are installed in the apparatus. In a multicast packet <highlight><bold>302</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, the internal header <highlight><bold>310</bold></highlight> is provided with a 32-byte (256 bits) bitmap (BMP) <highlight><bold>2331</bold></highlight>L so that 256 destinations can be identified. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Using <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, the effects of redundant bit reduction in the apparatus of the present invention will be described. Hereinafter, an example when a 64-byte packet is inputted will be described. It is assumed that an internal header added to each packet includes 2 bytes of M/U <highlight><bold>311</bold></highlight>, PKT <highlight><bold>312</bold></highlight>, and QO <highlight><bold>313</bold></highlight>, and 4 bytes of NHIP <highlight><bold>315</bold></highlight>, and the maximum number of line interface cards installed in the apparatus, that is, a multicast support count is 256. In conventional systems in which the number of bytes of an internal header of unicast and multicast packets is fixed, since a 32-byte (256 bits) multicast bitmap area is added to all packets in all device configurations, packet length within the apparatus is 102 bytes. In other words, 1.59 times of bandwidth is used internally. In contrast, according to the present invention, since an internal header of unicast packets and multicast packets is optimized, for unicast packets, an 8-bit (1 byte) routing tag has only to be added so that 256 destinations can be identified. Consequently, regardless of apparatus configurations, packet length within the apparatus is 71 bytes, so that an increment of bandwidth is reduced to 1.11 times. For multicast packets, the length of an added bitmap area can be variable, whereby a 2-byte bitmap is added so that 16 destinations can be identified when 16 line interface cards are installed, and an 8-byte bitmap is added so that 64 destinations can be identified when 64 line interface cards are installed. Accordingly, it is understood that, in the case of small-scale configuration such as when 16 line interface cards are installed or 64 line interface cards are installed, increments of the internal bandwidth of multicast packets can be reduced to 1.13 times and 1.22 times, respectively. If the maximum number of line interface cards installed in the apparatus, that is, a multicast leaf count is greater, the effects of the present invention become greater. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Next, packet processing in the variable-length packet switch will be described. The variable-length packet switch <highlight><bold>60</bold></highlight> consists of a header extracter <highlight><bold>61</bold></highlight>, n&times;n switch <highlight><bold>62</bold></highlight>, and switch controller <highlight><bold>63</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The internal header <highlight><bold>310</bold></highlight> of a variable-length packet inputted from an ingress line card <highlight><bold>20</bold></highlight> is sent to the switch controller <highlight><bold>63</bold></highlight> through header extractor <highlight><bold>61</bold></highlight>. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> shows the operation of the header extracter. The internal header <highlight><bold>310</bold></highlight> extracted in the header extracter <highlight><bold>610</bold></highlight> is subjected to the identification of multicast or unicast in M/U <highlight><bold>311</bold></highlight>. If the internal header <highlight><bold>310</bold></highlight> is identified as unicast, conversion from a routing tag to a bitmap is made in RTG-to-BMP converter <highlight><bold>611</bold></highlight>. If the internal header <highlight><bold>310</bold></highlight> is identified as multicast, a bitmap is outputted without modification. In a subsequent stage, according to a multicast/unicast identifying signal <highlight><bold>613</bold></highlight>, either of the bitmap converted from the routing tag or a bitmap within the internal header <highlight><bold>310</bold></highlight> added to the original multicast packet is selected by a selector <highlight><bold>612</bold></highlight>. After the selection, output destination information <highlight><bold>614</bold></highlight> unified to a bitmap format is sent to the switch controller <highlight><bold>63</bold></highlight>, where control of n&times;n switch <highlight><bold>62</bold></highlight> is conducted based on the output destination information <highlight><bold>614</bold></highlight>. When, e.g., a bitmap &ldquo;1001100000000000&rdquo; is inputted, since the first, fourth, and fifth bits of the bitmap are set to 1, the switch controller <highlight><bold>63</bold></highlight> controls the switch <highlight><bold>62</bold></highlight> so that the packet is multicast to output ports &num;1, &num;4, and &num;5. To be more specific, the packet is copied and multicast to output ports &num;1, &num;4, and &num;5. In this embodiment, the length of bitmap of multi-cast packets differs depending on the number of line interface cards installed in the packet switching apparatus. In order that a bitmap area added in the ingress line card <highlight><bold>20</bold></highlight> can be correctly recognized, information about the length of the bitmap is set to the header analyzer <highlight><bold>610</bold></highlight> in advance through the MP-I/F<highlight><bold>64</bold></highlight>. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> The above embodiment has been described on the assumption that, e.g., 64 line interface cards are installed in slots &num;1 to &num;64 in the packet switching apparatus. However, for the reason that slot &num;2 cannot be used due to fault or other reasons, it is conceivable to use the 64 line interface cards installed in slots &num;1, and &num;3 to &num;65. In this case, it is necessary to change the flow of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> or the operation of the switch controller <highlight><bold>62</bold></highlight>. Two change examples are shown below. </paragraph>
<paragraph id="P-0059" lvl="7"><number>&lsqb;0059&rsqb;</number> CHANGE EXAMPLE 1 </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> In step <highlight><bold>401</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, &ldquo;N&rdquo; is defined as the number 64 of installed line interface cards plus 1 (that is, a maximum slot number). If no line interface card is installed in slot &num;2, since no packet is outputted to output port &num;2, the second bit of bitmap added to multicast packets is always &ldquo;0&rdquo; such as &ldquo;X0XX . . . &rdquo;</paragraph>
</section>
<section>
<heading lvl="1">CHANGE EXAMPLE 2 </heading>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Without changing the flow of <cross-reference target="DRAWINGS">FIG. 5, a</cross-reference> 64-bit bitmap is added to multicast packets. From the management terminal <highlight><bold>41</bold></highlight>, information that slot &num;2 (or line interface &num;2, or I_PORT&num;2 and O_PORT&num;2) is not used is inputted. This information is passed to the switch controller <highlight><bold>62</bold></highlight> via the controller <highlight><bold>40</bold></highlight>. Upon receiving the information, the switch controller <highlight><bold>62</bold></highlight> recognizes that the first bit of the bitmap from the start is a bit corresponding to output port &num;1 as usual, the second bit from the start is a bit corresponding to output port 3, the third bit from the start is a bit corresponding to output port 4, and so forth. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> As is apparent from the above description, according to this embodiment, in the case where a large-capacity packet switching apparatus to support multicast over a large number of lines is configured, an area of an internal packet header can be allocated so as to be variable depending on packet types and the number of lines installed. By adding an internal packet header containing only a minimum of information required to each of multicast packets and unicast packets, a packet switching apparatus can be provided which can make effective use of switching resources without having to transfer redundant bits within the apparatus. </paragraph>
<paragraph id="P-0063" lvl="7"><number>&lsqb;0063&rsqb;</number> &lt;Second Embodiment&gt;</paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> As a second embodiment of the present invention, another embodiment of the route retrieval engine <highlight><bold>23</bold></highlight> installed in the ingress line card <highlight><bold>20</bold></highlight> will be described with reference to <cross-reference target="DRAWINGS">FIG. 14</cross-reference>. Hereinafter, only portions different from the previous description of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> will be mainly explained . The route retrieval engine <highlight><bold>23</bold></highlight> has a unicast allocater <highlight><bold>234</bold></highlight>A instead of the unicast detection and coding <highlight><bold>234</bold></highlight>. A packet inputted to the route retrieval engine <highlight><bold>23</bold></highlight> is stored in the FIFO queue buffer <highlight><bold>231</bold></highlight> and successively subjected to the following processing. A packet header (more specifically, referred to as DIP <highlight><bold>241</bold></highlight> in the case of IP) is extracted from the packet at the head of the FIFO queue buffer <highlight><bold>231</bold></highlight>. DIP <highlight><bold>241</bold></highlight> is sent to a routing table <highlight><bold>24</bold></highlight>A to retrieve required information. The routing table <highlight><bold>24</bold></highlight>A, for each entry, stores multicast/unicast identifier (M/U) <highlight><bold>242</bold></highlight>B and destination port information <highlight><bold>242</bold></highlight>A in which a routing tag directly indicating a relevant destination is stored for unicast, and bitmap is stored for multicast. The following processing is performed for the destination port information <highlight><bold>242</bold></highlight>A outputted from the destination table <highlight><bold>24</bold></highlight>A. In the case of multicast, in the bitmap allocater <highlight><bold>233</bold></highlight> just like in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, only an area specified by the microprocessor is cut out of bitmap of the destination port information <highlight><bold>242</bold></highlight>. In the case of unicast, only a fixed area is cut out of the destination port information <highlight><bold>242</bold></highlight>A in the unicast allocater <highlight><bold>234</bold></highlight>A. The selector <highlight><bold>235</bold></highlight> selects signal from the bitmap allocater <highlight><bold>233</bold></highlight> or the unicast allocater <highlight><bold>234</bold></highlight>A according to an identifying signal <highlight><bold>239</bold></highlight>A generated based on the multicast/unicast identifier (M/U) <highlight><bold>242</bold></highlight>B, and sends the selected one to the internal header generater <highlight><bold>236</bold></highlight>. The identifying signal <highlight><bold>239</bold></highlight>A is also sent to the internal header generater <highlight><bold>236</bold></highlight>. The output signal from the selector <highlight><bold>235</bold></highlight> is sent to the internal header generater <highlight><bold>236</bold></highlight> and is inserted in a packet stored in the head of the FIFO queue buffer <highlight><bold>231</bold></highlight> along with NHIP <highlight><bold>243</bold></highlight> and QOS information <highlight><bold>244</bold></highlight> through the internal header inserter <highlight><bold>237</bold></highlight>. Judgment of multicast or unicast can also be made by the type of DIP <highlight><bold>241</bold></highlight>. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> In the case where the route retrieval engine is configured as in the present embodiment, since storing processing dedicated to unicast or multicast for the routing table <highlight><bold>24</bold></highlight>A is already performed by software, unicast detection and coding by hardware is unnecessary. </paragraph>
<paragraph id="P-0066" lvl="7"><number>&lsqb;0066&rsqb;</number> &lt;Third Embodiment&gt;</paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> As a third embodiment, another example of a packet format used with the packet switching apparatus of the present invention will be described with reference to <cross-reference target="DRAWINGS">FIG. 15</cross-reference>. Unicast packets have the same format as described in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. The multicast packet <highlight><bold>302</bold></highlight> consists of an input packet part <highlight><bold>320</bold></highlight> and an internal header <highlight><bold>310</bold></highlight>. The input packet part <highlight><bold>320</bold></highlight> consists of a packet header (PKTH) <highlight><bold>321</bold></highlight> containing a destination IP address and other information, and variable-length data <highlight><bold>322</bold></highlight>. The internal header <highlight><bold>310</bold></highlight> consists of multicast/unicast identifier (M/U) <highlight><bold>311</bold></highlight>, packet type information (PKT) <highlight><bold>312</bold></highlight>, quality class information (QOS) <highlight><bold>313</bold></highlight>, NHIP <highlight><bold>315</bold></highlight>, and bitmap length information (BMLN) <highlight><bold>330</bold></highlight>. BMLN <highlight><bold>330</bold></highlight> indicates the number of bytes or bits of a valid bitmap area specified by MP-I/F <highlight><bold>238</bold></highlight> according to the apparatus scale and the number of installed line interface cards. For multicast packets, by referring to the BMLN <highlight><bold>330</bold></highlight> area, a valid area of following bitmap (BMP) <highlight><bold>2331</bold></highlight>L can be cut out. By using this packet format, a bitmap area can be correctly selected and cut out without setting information about a bitmap area to be cut out in the header analyzer <highlight><bold>610</bold></highlight> via MP-I/F <highlight><bold>64</bold></highlight> in the header extracter <highlight><bold>61</bold></highlight> within the variable-length packet switch <highlight><bold>60</bold></highlight>. In other words, when the number of line interface cards installed in the switching apparatus is changed, a change of the number of multicast targets, more specifically, a bitmap area can be expanded or shrunk without stopping services. </paragraph>
<paragraph id="P-0068" lvl="7"><number>&lsqb;0068&rsqb;</number> &lt;Fourth Embodiment&gt;</paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> A fourth embodiment will be described using <cross-reference target="DRAWINGS">FIG. 16</cross-reference>. <cross-reference target="DRAWINGS">FIG. 16</cross-reference> shows an apparatus configuration in which, upon detecting that line interface cards <highlight><bold>20</bold></highlight> are installed in a back panel <highlight><bold>500</bold></highlight>, information indicating the status is passed to the controller <highlight><bold>40</bold></highlight>, using a control line <highlight><bold>510</bold></highlight> provided for each of the line interface cards <highlight><bold>20</bold></highlight>. The controller <highlight><bold>40</bold></highlight> has an installation register <highlight><bold>40</bold></highlight> having bits thereof respectively corresponding to the line interface cards. These bits are automatically set by detecting whether the corresponding line interface cards are installed or not. Since use of this configuration tells the number of installed line interface cards through the installation register, bitmap area allocation by the user as describe in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> would not be required. To be more specific, since the apparatus automatically detects that a line interface is installed or removed, and can automatically perform a procedure corresponding to that of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, that is, area specification to the bitmap allocater <highlight><bold>233</bold></highlight> and the header analyzer <highlight><bold>610</bold></highlight>, plug &amp; play operation for the line interface cards becomes feasible. </paragraph>
<paragraph id="P-0070" lvl="7"><number>&lsqb;0070&rsqb;</number> &lt;Fifth Embodiment&gt;</paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> A fifth embodiment will be described using FIGS. <highlight><bold>17</bold></highlight> to <highlight><bold>20</bold></highlight>. Although the above description assumes multicast for all line interface cards, multicast service limited to only specific line interface cards is also conceivable. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> In a network drawing shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, LAN-A<highlight><bold>1</bold></highlight>, LAN-A<highlight><bold>2</bold></highlight>, LAN-A<highlight><bold>3</bold></highlight>, LAN-B, and other LAN not shown are connected to a transit network <highlight><bold>410</bold></highlight>. More specifically, packet data is sent or received between LANs via a packet transit node <highlight><bold>460</bold></highlight> within the transit network. For example, it is conceivable to form an enterprise network among LAN-A<highlight><bold>1</bold></highlight>, LAN-A<highlight><bold>2</bold></highlight>, and LAN-A<highlight><bold>3</bold></highlight>. A multicast service is supposed to be offered only within the enterprise network. In other words, in the transit node <highlight><bold>460</bold></highlight>, multicast requests occur only among line interface ports P<highlight><bold>0</bold></highlight> to P<highlight><bold>3</bold></highlight> to which LAN-A<highlight><bold>1</bold></highlight> to LAN-A<highlight><bold>3</bold></highlight> are respectively connected, and among other line interface ports, multicast is not performed. In this case, by providing bitmap only for specific line interface cards subject to multicast, the internal header can be further shrunk. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> Reduction of an internal header will be hereinafter described. In <cross-reference target="DRAWINGS">FIG. 18</cross-reference>, it is assumed that, of line interfaces installed, only line interface numbers 0 to 3 and 12 to 15 are subject to multicast. Specifically, in the DES_PORT (<highlight><bold>242</bold></highlight>) area in the routing table <highlight><bold>24</bold></highlight>, only bits corresponding to the line interface numbers 0 to 3 and 12 to 15 may be set to &ldquo;1&rdquo; at the same time. In this case, from bitmap <highlight><bold>450</bold></highlight> arranged in the order of the original line interface card numbers, 8 bits for line interface numbers 0 to 3 and 12 to 15 are cut out and unified as a bitmap (<highlight><bold>451</bold></highlight>) and inserted to a multicast packet. The unified bitmap <highlight><bold>451</bold></highlight> is converted back to the original bitmap <highlight><bold>450</bold></highlight> in an original BMP regenerater <highlight><bold>615</bold></highlight> within the variable-length packet switch <highlight><bold>60</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 19</cross-reference>. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> shows an embodiment of the procedure for allocating a bitmap area. The user enters the number of line interface cards subject to multicast from a management terminal connected to the packet switching apparatus (step <highlight><bold>411</bold></highlight>). The entered number of line interface cards subject to multicast is rounded up in units of bytes (step <highlight><bold>412</bold></highlight>). Next, the user successively enters line interface card numbers subject to multicast (step <highlight><bold>413</bold></highlight>). Thereafter, via MP-I/F, a valid bitmap area is allocated for the bitmap allocater <highlight><bold>233</bold></highlight> and the header extracter <highlight><bold>61</bold></highlight> within the packet switch <highlight><bold>60</bold></highlight> (step <highlight><bold>414</bold></highlight>), and thus bitmap allocation terminates. Although, in the example of <cross-reference target="DRAWINGS">FIG. 20</cross-reference>, the bitmap area is allocated rounded up in units of one byte (<highlight><bold>8</bold></highlight> bits), the bitmap may be allocated in other bit units. A slot number, I_PORT number, or O_PORT number may be entered instead of line interface card numbers. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> In this way, by providing bitmap only for specific line interface cards subject to multicast, the internal header area can be further shrunk. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> According to the above described embodiments, the following effects are expected. </paragraph>
<paragraph id="P-0077" lvl="1"><number>&lsqb;0077&rsqb;</number> (1) In the case where a large-capacity packet switching apparatus to support multicast for a large number of lines is configured, an area of an internal packet header can be allocated so as to be variable depending on packet types, and an internal packet header containing only a minimum of information required is added to each of multicast packets and unicast packets. With this configuration, a packet switching apparatus can be provided which can make effective use of switching resources without having to transfer redundant bits within the apparatus. </paragraph>
<paragraph id="P-0078" lvl="1"><number>&lsqb;0078&rsqb;</number> (2) In a packet switching apparatus that supports multicast for a large number of lines and is scalably expandable, an area of an internal packet header can be allocated so as to be variable depending on the use scale of the switching apparatus, and an internal packet header containing only a minimum of information required is added. With this configuration, a packet switching apparatus can be provided which can make effective use of switching resources without having to transfer redundant bits within the apparatus. </paragraph>
<paragraph id="P-0079" lvl="1"><number>&lsqb;0079&rsqb;</number> (3) In a packet switching apparatus that supports multicast for a large number of lines and is scalably expandable, an area of an internal packet header can be allocated so as to be variable depending on packet types and the use scale of the switching apparatus, and an internal packet header containing only a minimum of information required is added. With this configuration, a packet switching apparatus can be provided which can make effective use of switching resources without having to transfer redundant bits within the apparatus, and can change the use scale of the switching apparatus without stopping services. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> According to the present invention, multicast can be achieved without making a wasteful use of switching resources. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> The foregoing invention has been described in terms of preferred embodiments. However, those skilled, in the art will recognize that many variations of such embodiments exist. Such variations are intended to be within the scope of the present invention and the appended claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A packet switching apparatus comprising: 
<claim-text>n (an integer of 3 or more) slots capable of housing line interface cards to each of which an input line and an output line are connected; and </claim-text>
<claim-text>a packet switch for switching packets outputted from k line interface cards housed in k (an integer equal to or greater than 2 and less than or equal to n) slots of the n slots, wherein: 
<claim-text>each of the k line interface cards adds a bitmap to a multicast packet inputted from the input line and outputs the multicast packet to the packet switch; </claim-text>
<claim-text>the packet switch multicasts the multicast packets to plural line interface cards of the k line interface cards specified in the bitmap; and </claim-text>
<claim-text>the length of the bitmap is made variable depending on the value of k. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A packet switching apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein each of the k line interface cards brings the length of bitmap to n bits when k&equals;n, and makes the length of the bitmap smaller than n bits when k&lt;n. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A packet switching apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>a control part for controlling the k line interface cards and the packet switch; and </claim-text>
<claim-text>a management terminal connected to the control part, </claim-text>
<claim-text>wherein the value of k is inputted from the management terminal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A packet switching apparatus according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, further comprising: 
<claim-text>a control part for controlling the k line interface cards and the packet switch; and </claim-text>
<claim-text>a management terminal connected to the control part, </claim-text>
<claim-text>wherein the value of k is inputted from the management terminal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A packet switching apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>means for detecting that the line interface cards are housed in the slots. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A packet switching apparatus according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, further comprising: 
<claim-text>means for detecting that the line interface cards are housed in the slots. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A packet switching apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the packet switch has a n&times;n switch. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A method of transmitting a multicast packet at a packet switching apparatus which comprises n (an integer of 3 or more) slots capable of housing line interface cards to each of which an input line and an output line are connected, and a packet switch, the method comprising the steps of: 
<claim-text>in each of plural interface cards housed in plural slots of the n slots, deciding the length of a bitmap added to a multicast packet, depending on the number of the housed line interface cards; </claim-text>
<claim-text>in each of the plural interface cards housed in the plural slots, outputting a multicast packet added with the bitmap to the packet switch; and </claim-text>
<claim-text>in the packet switch, multicasting the multicast packets to the plural line interface cards of the line interface cards housed in the plural slots specified in the bitmap. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A method of transmitting a multicast packet according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein each of the line interface cards housed in the plural slots brings the length of the bitmap to n bits when the number of the housed interface cards is equal to n, and in other cases, makes the length of the bitmap smaller than n bits. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A method of transmitting a multicast packet according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein a management terminal is connected to the packet switching apparatus, and the number of the housed line interface cards is inputted from the management terminal. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A method of transmitting a multicast packet according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein a management terminal is connected to the packet switching apparatus, and the number of the housed line interface cards is inputted from the management terminal. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A setup method of a packet switching apparatus which a management terminal is connected to, the packet switching apparatus comprising n (an integer of 3 or more) slots capable of housing line interface cards to each of which an input line and an output line are connected, the method comprising the steps of: 
<claim-text>inputting the number of line interface cards housed in plural slots of the n slots from the management terminal; and </claim-text>
<claim-text>depending on the inputted number of line interface cards, in each of the plural line interface cards housed in the plural slots, controlling the length of a bitmap added to a multicast packet. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A setup method of a packet switching apparatus according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein each of the plural interface cards housed in the plural slots performs control so that the length of the bitmap is n bits when the number of the housed line interface cards is equal to n, and in other cases, the length of the bitmap is smaller than n bits. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A setup method of a packet switching apparatus according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, comprising the steps of: 
<claim-text>if a multicast packet inputted to the plural line interface cards housed in the plural slots is multicast to only specific plural line interface cards of the plural line interface cards housed in the plural slots, inputting information for identifying the specific plural line interface cards from the management terminal; and </claim-text>
<claim-text>depending on the inputted number of line interfaces and the information, in each of the plural line interface cards housed in the plural slots, controlling the length of a bitmap added to a multicast packet. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A setup method of a packet switching apparatus according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, comprising the steps of: 
<claim-text>if a multicast packet inputted to the plural line interface cards housed in the plural slots is multicast to only specific plural line interface cards of the plural line interface cards housed in the plural slots, inputting information for identifying the specific plural line interface cards from the management terminal; and </claim-text>
<claim-text>depending on the inputted number of line interfaces and the information, in each of the plural line interface cards housed in the plural slots, controlling the length of a bitmap added to a multicast packet.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002506A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002506A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002506A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002506A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002506A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002506A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002506A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002506A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002506A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002506A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002506A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002506A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002506A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030002506A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030002506A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030002506A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030002506A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
