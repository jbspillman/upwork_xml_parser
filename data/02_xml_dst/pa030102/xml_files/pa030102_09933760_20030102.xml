<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005331A1-20030102-D00000.TIF SYSTEM "US20030005331A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005331A1-20030102-D00001.TIF SYSTEM "US20030005331A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005331A1-20030102-D00002.TIF SYSTEM "US20030005331A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005331A1-20030102-D00003.TIF SYSTEM "US20030005331A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005331A1-20030102-D00004.TIF SYSTEM "US20030005331A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005331A1-20030102-D00005.TIF SYSTEM "US20030005331A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005331A1-20030102-D00006.TIF SYSTEM "US20030005331A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005331A1-20030102-D00007.TIF SYSTEM "US20030005331A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030005331A1-20030102-D00008.TIF SYSTEM "US20030005331A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030005331A1-20030102-D00009.TIF SYSTEM "US20030005331A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030005331A1-20030102-D00010.TIF SYSTEM "US20030005331A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030005331A1-20030102-D00011.TIF SYSTEM "US20030005331A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030005331A1-20030102-D00012.TIF SYSTEM "US20030005331A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030005331A1-20030102-D00013.TIF SYSTEM "US20030005331A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030005331A1-20030102-D00014.TIF SYSTEM "US20030005331A1-20030102-D00014.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005331</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09933760</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010822</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F011/30</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>H04L009/00</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>713</class>
<subclass>201000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>713</class>
<subclass>150000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Multi-level security network system</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>09933760</doc-number>
<kind-code>A1</kind-code>
<document-date>20010822</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09129879</doc-number>
<document-date>19980806</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6304973</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Timothy</given-name>
<middle-name>C.</middle-name>
<family-name>Williams</family-name>
</name>
<residence>
<residence-us>
<city>Chantilly</city>
<state>VA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>Cryptek Secure Communications, LLC</organization-name>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>JACOBSON HOLMAN PLLC</name-1>
<name-2></name-2>
<address>
<address-1>400 SEVENTH STREET N.W.</address-1>
<address-2>SUITE 600</address-2>
<city>WASHINGTON</city>
<state>DC</state>
<postalcode>20004</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A network prevents unauthorized users from gaining access to confidential information. The network has various workstations and servers connected by a common medium and through a router to the Internet. The network has two major components, a Network Security Center (NSC) and security network interface cards or devices. The NSC is an administrative workstation through which the network security officer manages the network as a whole as well as the individual security devices. The security devices are interposed between each of workstation, including the NSC, and the common medium and operate at a network layer (layer 3) of the protocol hierarchy. The network allows trusted users to access outside information, including the Internet, while stopping outside attackers at their point of entry. At the same time, the network limits an unauthorized insider to information defined in their particular security profile. The user may select which virtual network to access at any given time. The result is trusted access to multiple secure Virtual Private Networks (VPN), all from a single desktop machine. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to a multi-level security network system. More particularly, the present invention relates to a secure communication between hosts using a network that implements a security policy, and especially a network allowing multiple levels of information to coexist on a network system. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The National Security Agency (NSA) has set forth specific definitions and requirements that establish various levels of security in computer and network systems. These basic definitions are set forth in &ldquo;Trusted Computer System Evaluation Criteria,&rdquo; Department of Defense, 1985 (TCSEC) and &ldquo;Trusted Network Interpretation of the Trusted computer System Evaluation Criteria,&rdquo; National Computer Security Center, 1987 (TNI). These documents define the requirements for systems to be evaluated in one of six hierarchical ratings: C1, C2, B1, B2, B3, and A1, with C1 being the least secure and A1 the most secure. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Division B, that is, ratings B1, B2, and B3, introduces the requirements for multi-level secure (MLS) systems. The term &ldquo;multi-level security&rdquo; refers to a system in which two or more classification levels of information are processed simultaneously, and not all users are cleared for all levels of information present. This same concept was applied during the 1980&apos;s to networked systems, at which time the phrase MLS network was generally used to refer to a network that was capable of simultaneously transmitting data at multiple security levels when some hosts or users were not cleared for all levels of data. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> In order for an MLS network to qualify as a B-level secure network, it must provide at least the following five security functions: (1) access control, (2) object reuse, (3) labeling, (4) identification and authentication (I&amp;A), and (5) auditing. Open Systems Interconnection (OSI) sets forth industry standard definition of seven layers of network connection: (1) physical, (2) data link, (3) network, (4) transport, (5) session, (6) presentation, and (7) application. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The first criteria, &ldquo;access control,&rdquo; is concerned with the enforcement of rules (security policy) by which active subjects (e.g., processes, hosts) access passive objects (for example, files, memory, and devices). In a network system, operating at the OSI network layer of the protocol hierarchy, access control is concerned with the access of hosts to network packets. Rule-based Mandatory Access Control (MAC) is concerned with preventing each host from transmitting or receiving data at the wrong level. Discretionary Access Control (DAC), on the other hand, is concerned with ensuring that a host computer can only establish authorized connections to other hosts. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The second criteria, &ldquo;object reuse&rdquo; is concerned with preventing inadvertent release of residual data, typically in unused fields or at the end of a packet buffer. &ldquo;Labeling&rdquo; of each packet is necessary in a distributed system to convey the sensitivity of data to the various elements of the network. &ldquo;Identification and Authentication&rdquo; (I&amp;A) is concerned with establishing individual accountability for authorized users. &ldquo;Audit&rdquo; is concerned with recording information about the use of the network&apos;s security mechanisms, to further support the requirement of user accountability. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In addition to these five basic requirements, a secure network should also provide two other capabilities, communications secrecy and communications integrity. These additional requirements support the secure transfer of MLS labeling and control information in an open environment, such as the Internet. Communications secrecy is provided by appropriate use of encryption to transform user data and control information so that it is unintelligible to wiretappers. Encryption is a process that scrambles or transforms sensitive data within messages (either an entire message, or part of a message) to make them unreadable to any recipient who does not know a secret string of characters, called a key. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Communications integrity, on the other hand, is concerned with detecting modification of data, such as security labels, and user data, as it traverses the network. Packet integrity has also been accomplished by calculating cryptographic checksums of packet headers and packet data. The receiving node can straightforwardly detect message modification to a high degree of probability by recalculating the cryptographic checksum on the received data, and comparing it to the received checksum. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The current approaches to MLS networking include Verdix VSLAN (which has subsequently changed to GKI, then to Cryptek Secure Communications VSLAN), Boeing MLS LAN and ITT networks. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The Verdix Secure Local Area Network (VSLAN) product was developed by Verdix Corporation in the 1980s. VSLAN was the first network product evaluated by the TNI criteria and the first commercial network product to provide MLS security. VSLAN is the only commercial network product available with a B2 rating. However, VSLAN operates at the link layer (layer 2) of the protocol stack and, thus, its security mechanisms are limited to the scope of a local area network. While VSLAN uses Data Encryption Standard (DES) for communications integrity, it cannot be used on an open network because DES is not sufficiently strong to protect classified data. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The Boeing MLS LAN has received an A1 security rating with respect to the TNI. It does not provide any encryption, but relies on physical protection of the medium to protect data in transit. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The ITT network security is described in U.S. Pat. No. 5,577,209 to Boyle et al. (&ldquo;Boyle&rdquo;). Boyle uses cryptographic sealing techniques to support MLS labeling and mediation. The approach operates at the session layer (layer 5) of the OSI protocol reference model. Boyle, however, does not provide encryption of data for purposes of secrecy. Consequently, classified data could be accessed by passive wiretapping or by use of readily available tools, such as tcpdump running on any host in any of the intermediate networks. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Most protocol architectures do not have a protocol implementation that uses a distinct session-layer protocol. Rather, for protocols commonly used on the Internet, application programs (layer 7) interface directly to the transport layer (layer 4) of the protocol hierarchy. For these two reasons, Boyle is not very useful with real classified data on real networks, such as the Internet. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> Over the past 15 years, computer security and network security have progressed on separate tracks. Computer security has generally been concerned with the evaluation of standalone computer systems, without networking, at a time when the Internet was exploding. With the exception of a few TNI-evaluated products, network security has concentrated on the use of cryptography (particularly public key cryptography) and firewalls. Cryptography has been used to provide secrecy and integrity, largely without regard for the security of the communicating systems. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Various methods and devices have been used to enhance network security, including firewalls, identification and authentication (I&amp;A), intrusion detectors, and virtual private networks (VPN). </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Firewalls have been used to protect an organization&apos;s internal resources from the external Internet by passing certain protocols (e.g., email, name services) into the protection perimeter, but filtering out all protocols not explicitly listed. The firewalls attempt to isolate a company&apos;s intranetwork from the remainder of the Internet. Firewalls provide proxy servers that stand between the external network and internal resources and that pre-validate external requests. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> However, firewalls are only intended to protect internal resources from outsiders. As a result, firewalls offer no protection against an internal attack upon those same resources. Firewalls are generally subject to impersonation, in which an intruder&apos;s host is programmed to use an IP address of one of the network computers, or an attacker may know the password of one of the trusted users. Firewalls are also subject to session stealing, in which the intruder takes over an authorized session, together with all access modes established for the authorized user. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Firewalls may provide an IP tunneling capability to provide encrypted channel across the Internet to another part of the company&apos;s intranetwork. However, a major problem with firewalls is that once an unauthorized user is &ldquo;in&rdquo; to a host of the internal network, it is possible to use that host as a point for attacking other hosts within that network. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> I&amp;A devices generally involve the use of passwords for a user on one host to gain access across a network to another host. I&amp;A may also be implemented by the use of a Personal Identification Number (PIN) and device to authenticate the user. The I&amp;A device may be hardware using smart card technology that either takes a challenge and calculates a response or uses some clock-based synchronization to ensure that the I&amp;A data passed across the network is unique from one access attempt to another. I&amp;A may also be implemented in software. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> However, the use of I&amp;A mechanisms does not address mediation (MAC, DAC) in any way, nor does it address the use of encryption or packet integrity on a stream of packets from one host to another. Furthermore, the risks of reusing a password across a network are obvious, given the availability of public domain software to grab packets as they traverse internal networks. Once an attacker (whether inside or outside-the network) is able to send packets to your host, there are other attacks, such as routing via your host to another host, or sending packets to unprotected TCP/UDP ports, that could jeopardize the operation of any host on the network. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> An intrusion detector generally involves the use of a &ldquo;sniffer,&rdquo; such as tcpdump or hardware that snoops packets on the internal network, that attempts to detect and react to malicious behavior. However, intrusion detectors only provide detection, and not prevention. That is, the detectors cannot prevent an intrusion, but only detect that an intrusion has occurred. Intrusion detectors also do not provide a way for mediating the flow of packets, protecting packet secrecy, or protecting packet integrity. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Virtual private networks (VPNs) are implemented by firewalls with encryption between different sites of a network or local area network (LAN). Some VPNs provide software-based encryption that runs on the individual host computers of the network. Generally, a VPN may be defined as a private network that exists within a larger, open network and uses methods (such as encryption) to make the network private. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Site-Level VPNs have the classic problems of firewalls. That is, they do not protect internal communications, and are susceptible to session stealing and sniffing on local and remote networks. An encrypted path between two sites may shut out an external attacker, but an internal attacker on the LAN has free rein to attack any host in that network, as well as any host in any of the other related LAN sites. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Software-based host level VPNs provide a driver that sits between the ethernet driver and the TCP/IP protocol stack. These VPNs offer some of the distributed advantages of having a firewall-at-each-host architecture, but do not have an architectural basis for protecting the hosts. The software VPN can be bypassed, for instance, if an application process on the host can communicate directly with the NIC driver via the OS on that host, instead of using the software VPN interface. Software VPNs may also be disabled or modified by processes running with privilege (e.g., the UNIX root user or its equivalent on NT boxes). It relies on the host OS for protection, and not all hosts provide equivalent protections, so a node with a weak OS could be used as a location to launch attacks against other hosts. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Therefore, it is a primary object of the present invention to overcome the limitations of the conventional security mechanisms. It is a further object of the invention to provide a secure network in which the security mechanisms are at layer 3 of protocol hierarchy. It is another object of the invention to provide a centralized administration of a layer 3 secure network that may be distributed over the Internet. It is another object of the invention to provide a security device that prevents unauthorized third parties from gaining access to a host. It is another object of the invention to provide a multi-level secure network having a security device coupled between each host and the network medium. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> In accordance with these and other objectives, the secure network of the present invention, having a commercial name DiamondTEK Ultra, provides a unique implementation of cryptographic technology with high-assurance policy-based enforcement of packet flow. The network prevents unauthorized users from gaining access to sensitive information. Although the network of the present invention has not yet completed evaluation by the NSA, it is designed to satisfy all of the B2 criteria. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The network generally comprises various host computers (such as PCs, workstations, or servers) connected by a common medium. Routers may be used to connect Local Area Networks to public networks, such as the Internet. The network has two major components, a Network Security Center (NSC) and security network interface cards or &ldquo;security devices.&rdquo;</paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The NSC is an administrative workstation through which a network security officer manages the security aspects of the system and implemented by the individual security devices. The NSC is responsible for setting up authentication materials and for authorizing individual peer-to-peer and client server associations. In addition, since this is a Multi-Level Secure network, the NSC is responsible for defining the security levels and categories of information permitted on the network and the labeling used by each host. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The security devices are interposed between each host, including the NSC, and the common medium. The security devices enable a host to communicate across the network. Unlike other network security solutions, the security device is designed as a self-contained circuit board that is directly integrated into the hardware of the host system. The architecture of the security device is readily integrated into a variety of hardware environments. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The security devices authenticate principals responsible for host computers that connect to the network. Through use of the security devices and the NSC, the network allows trusted users to access outside information, including the Internet, while stopping outside attackers at their point of entry. At the same time, the network limits an insider to information defined in their particular security profile. The user may select which logical network to access at any given time. The result is trusted access to multiple secure Virtual Private Networks (VPN), all from a single desktop machine. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The present network simultaneously enforces two independent and complementary types of access control rules: discretionary access control (DAC) and mandatory access control (MAC). </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The network further ensures confidentiality and integrity of host-to-host communications by the use of encryption mechanisms. Cryptography provides the underlying secrecy and integrity of communications required for the network to be able to enforce a unique policy when operating over an open backbone network. Various types of cryptography are available, including DES, and Triple-DES for commercial and financial applications, and high-grade Type 1 encryption for classified applications. The network ensures that messages cannot be modified by an unauthorized user, or attacker, through the use of message digests. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The features of the network overcome the problems associated with traditional I&amp;A devices, intrusion detectors, firewalls and VPNs, as well as with previous MLS networks (such as VSLAN, Boeing MLS LAN and the ITT network). The security device is a separate hardware board having a separate CPU, memory, network interface and bus architecture from the application processes on the host. A dual-ported RAM architecture guarantees that no malicious host process can tamper with the internal configuration of the security device. All network accesses must go through a security device, which implement security mechanisms for each and every access attempt. The security devices cannot be bypassed since there is no other path to or from the network. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The network extends the mediation and cyptographic protection offered by a firewall (with its mediation and its cryptographic protection) to the network interface of each individual host computer. This may still permit a malicious user on a particular Bethesda machine to use a permitted association to a host in Tampa to attack that machine, but the network architecture significantly restricts the ability of the attacker to access other hosts. Further, the auditing by the network involved, transparently forwarded to a central collection site at the NSC, can be used to provide accountability, which makes discovery for such attacks more certain. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The network provides hardware based mediation (MAC and DAC) at each host, and provides cryptographic protection (secrecy, integrity) on all host-to-host associations. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> As used herein, the term &ldquo;policy&rdquo; refers to the control of sensitive and potentially classified data according to the rules of the system as set by the system controller. For example, a host operating at a security level of Secret may transfer data to another Secret host, but is prohibited from sending data to a host operating at a lower classification. Similarly, hosts operating at higher classifications or with additional non-hierarchical categories are prohibited from sending messages to the Secret host. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>3</bold></highlight> show various instances of the secure network having a security device in accordance with the present invention. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a diagram of the conceptual network architecture. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a diagram of the packet format, including packet labeling, used on the network. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> depicts representative labeling for the hierarchical levels and non-hierarchical categories used by the network. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a representation of the transmit and receive windows for communication of information between hosts of the network. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a block diagram of the security device. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a flow diagram showing the IP packet transmission for the security device. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a flow diagram showing the IP packet reception for the security device. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a schematic showing conventional network adapter architecture. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a schematic showing the host bust interface using a two-port RAM. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a block diagram showing the overall structure of the network. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is an example of how the security device can be used to partition a network (including the Internet) into multiple trusted Virtual Private Networks (VPNs), with the ability to switch a host between VPNs.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> In describing a preferred embodiment of the invention illustrated in the drawings, specific terminology will be resorted to for the sake of clarity. However, the invention is not intended to be limited to the specific terms so selected, and it is to be understood that each specific term includes all technical equivalents which operate in a similar manner to accomplish a similar purpose. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> Turning to the drawings, FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>3</bold></highlight> show various embodiments of a security network <highlight><bold>10</bold></highlight> having a dedicated Network Security Controller (NSC) <highlight><bold>12</bold></highlight>, workstations <highlight><bold>14</bold></highlight> and servers <highlight><bold>16</bold></highlight>. The NSC <highlight><bold>12</bold></highlight> permits a Security Officer to configure and audit the operation of the secure network <highlight><bold>10</bold></highlight>. The network <highlight><bold>10</bold></highlight> also has security devices <highlight><bold>18</bold></highlight>, having the commercial name DiamondNIC, installed between each host (workstation <highlight><bold>14</bold></highlight> or server <highlight><bold>16</bold></highlight>) and the local area network medium <highlight><bold>20</bold></highlight> to form a Local Area Network (LAN) <highlight><bold>5</bold></highlight>. The various LANs <highlight><bold>5</bold></highlight> are connected to an untrusted backbone net <highlight><bold>30</bold></highlight> by a router <highlight><bold>22</bold></highlight>. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The security device <highlight><bold>18</bold></highlight> is preferably a Network Interface Card (NIC) that easily replaces a standard NIC card for nodes that contain or need access to sensitive information. The security device is a self-contained circuit board that is directly integrated into the hardware of the host system. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> Thus, the security cards <highlight><bold>18</bold></highlight> operate at the network layer (layer 3) of the protocol stack and provide encrypted, controlled communications from one host (IP address, TCP/UDP port) to another. Because the security mechanisms operate at layer 3, the security mechanisms pertain to the entire Internet address space. Further, the choice of LAN or WAN medium is not relevant to the security provided by the system. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> Each security device <highlight><bold>18</bold></highlight> enforces a mandatory access control (MAC) policy, as well as discretionary access control (DAC) policy, on the flow of packets to and from that host <highlight><bold>14</bold></highlight>, <highlight><bold>16</bold></highlight>. It ensures labeling of all data packets with a hierarchical security level and a set of non-hierarchical security categories appropriate for the local host. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> The DiamondNIC security device <highlight><bold>18</bold></highlight> provides user identification and authentication (I&amp;A) via a card reader and keypad (not shown) attached to the device <highlight><bold>18</bold></highlight>. Auditing is provided by the use of embedded firmware within the security device, with audit data directed to the NSC <highlight><bold>12</bold></highlight> for archival. Finally, the security device <highlight><bold>18</bold></highlight> uses encryption to provide secrecy and communications integrity on all selected connections. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Hosts that are installed with the DiamondNIC security devices <highlight><bold>18</bold></highlight> may communicate with like hosts on the internetwork, as permitted by profiles, operating at security levels loaded from the NSC <highlight><bold>12</bold></highlight>. Host software, even malicious host software, cannot bypass the security mechanisms (mediation, auditing, encryption) provided by the security device <highlight><bold>18</bold></highlight> because the security mechanisms are embedded within the device <highlight><bold>18</bold></highlight> itself and all network communications must pass through the security device <highlight><bold>18</bold></highlight> in order to access the network. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> The network <highlight><bold>10</bold></highlight> provides the same capabilities as firewalls, with several additional advantages. The network <highlight><bold>10</bold></highlight> extends the firewall concept to each individual host in the intranet. Thus, the policy enforced for each host is the policy required for that host, not a one-size-fits-all policy imposed by a single firewall. The network <highlight><bold>10</bold></highlight> also provides centralized network control, which permits hosts to be switched from one security profile to another, without risk that information may leak across security levels. This network security architecture makes an NSA B2 security rating possible. </paragraph>
</section>
<section>
<heading lvl="1">Network Security Threat Model </heading>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> To be effective, security mechanisms should be derived from the security threats that affect an organization. All security threats generally are concerned with the unauthorized disclosure of sensitive information or the modification of data. The primary threats for an organization processing sensitive data within a networked system, and particularly a networked system interconnected with the Internet, are disclosure, downgrading, passive wiretapping, active wiretapping, downloaded software, and covert channels. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> In a classified environment, the threat of disclosure includes the ability to read data that is classified above the user&apos;s current level. In a classified environment, the threat of downgrading includes writing data to a lower classification than the user&apos;s current level. These threats are addressed by appropriate use of multi-level security (MLS) technology. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> Passive wiretapping includes monitoring at intermediate sites, using tools such as tcpdump, as well as attaching devices to monitor the communications medium. The network counters the threat of passive wiretapping by appropriate use of encryption. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> Active wiretapping, also known as message stream modification, includes the modification of selected data (e.g., monetary amounts) within a packet, insertion of new packets into the data stream, playback of packets, and deletion of selected packets. Network control, as well as user data connections, can be attacked. This is countered by appropriate use of cryptographic checksums. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Cryptographic checksums are used to calculate an error detection code on a block of data, using encryption and a secret key. If two communicating hosts each calculate the same code, then there is a very high probability that the data was not modified in transit. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> The threat of downloaded software includes viruses, malicious programs, Java code, and other software that can be downloaded by a trusted host from potentially malicious hosts. This is addressed in the present network by ensuring that hosts interact only with other trusted hosts operating at the same classification. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> A covert channel exists when a high-level process manipulates a shared resource or modulates the rate at which data is sent, to signal data to a lower-level process. There are two types of covert channels, timing and storage. Covert channels, however, are much less a problem in a network environment than on a standalone computer, but still must be addressed in MLS systems. Secure networks cannot entirely stop covert channels between communicating hosts. </paragraph>
</section>
<section>
<heading lvl="1">Architecture </heading>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> The network <highlight><bold>10</bold></highlight> architecture essentially comprises a specialized NSC <highlight><bold>12</bold></highlight> host dedicated to configuring and auditing the secure network and a DiamondNIC network security device <highlight><bold>18</bold></highlight> installed between each host computer and the network medium <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0065" lvl="7"><number>&lsqb;0065&rsqb;</number> Hosts, Users, and Principal </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> The network over which the security device <highlight><bold>18</bold></highlight> communicates actually enforces security with respect to network hosts. A principal is an individual that authorizes one or more users to access the network from a given host system, subject to a certain security profile (mandatory and discretionary access control rules). The network can be configured by the network security officer such that a single host may have more than one principal. Hence, each principal must complete an identification and authentication (I&amp;A) procedure before the host is permitted to communicate over the network. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> When the I&amp;A procedure has been completed, the security device <highlight><bold>18</bold></highlight> communicates with the NSC and downloads the principal&apos;s operational profile&mdash;the combination of association lists (for discretionary access control) and security windows (for mandatory access control)&mdash;from the NSC. From that point onward, the security device securely transmits and receives data over the network independently and transparently, relying upon its own CPU to avoid depriving the host of processing bandwidth. The bandwidth may be needed to offload processing, such as encryption. More importantly, however, independent transmission by the security device also prevents the host software from being able to bypass the security mechanisms. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> The security device will only send and receive messages if the communication has been specifically authorized in the operational profile assigned by the network security officer. Encryption keys are generated and exchanged as necessary. The VPN is a collection of potentially communicating hosts, such as A, B, C, D and E. Each individual pair has an association, and the virtual private network (VPN) is the collection of all possible associations (e.g., A-B, A-C, A-D, A-E, B-A, B-C, etc.). Each pair of communicating security devices may be said to establish a transparent VPN, whereby every message is automatically encrypted before transmission and decrypted after arrival at its intended destination. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> The network security officer may empower each user to access a variety of hosts with different degrees of privilege. For instance, suppose that a certain user is authorized to access the network not only from his desktop PC, but also from a workstation housed within a physically secure laboratory protected by a cipher lock. The NSO can define two operational profiles for the user, thought of as different roles, to give that user more privileges when accessing the network from the physically secure workstation than when connected from the unprotected desktop PC. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> In addition, a person may be a principal at different devices with different profiles (that is, security levels and associations) defined for each device. A principal can also be enabled to operate the security device in a bypass or non-secured mode and thereby network non-sensitive data with other hosts that are not individually equipped with a security device. </paragraph>
<paragraph id="P-0071" lvl="7"><number>&lsqb;0071&rsqb;</number> Conceptual Network Architecture </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> depicts the architecture of the system with respect to the trust required in its constituent parts and the OSI layers in the protocol hierarchy where these functions reside. Region A includes the physical layer communications links, link layer protocols, repeaters, bridges, and intermediate routing hosts. The hardware and software in this region need not be trusted or physically protected, because of end-to-end mechanisms implemented in Region B. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> Region B consists of the trusted devices, where each security device <highlight><bold>18</bold></highlight> is represented by a diamond-shaped object. The dashed lines indicate that control and auditing of the security devices <highlight><bold>18</bold></highlight> is implemented wholly within Region B, by the NSC <highlight><bold>12</bold></highlight>. The devices <highlight><bold>18</bold></highlight> operate within layer <highlight><bold>3</bold></highlight> of the protocol hierarchy and provide a cryptographic foundation that assures communications secrecy and communications integrity. Any suited cryptographic method may be used, including the Data Encryption Standard (DES) and Triple-DES for commercial and financial applications and ranging to high-grade Type 1 algorithms for government and military applications. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> Because the security devices <highlight><bold>18</bold></highlight> provide communications secrecy appropriate for the information being carried on the network, there is no need to physically or procedurally protect the communications medium in Region A. Any information intercepted by a wiretapper or intermediate host will be unintelligible. In addition, the security devices <highlight><bold>18</bold></highlight> provide communications integrity mechanisms appropriate for the information being carried on the network. Communications integrity mechanisms include, but are not limited to, keyed message digests (MDS), secure host algorithm (SHA) and message authentication code. Thus, any attempts to modify the host data (IP data field or header) will be detected by the recipient security device <highlight><bold>18</bold></highlight>. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> Regions C and D include host computers <highlight><bold>14</bold></highlight> (either workstations <highlight><bold>14</bold></highlight> or servers <highlight><bold>16</bold></highlight>), the TCP/IP protocol stack, application programs, and users. The Internet Protocol (IP) runs at layer 3, the Transmission Control Protocol (TCP) and User Datagram Protocol (UDP) run at the transport layer (layer 4) and application protocol (e.g., Telnet, File Transfer Protocol) clients and servers run at layer 7 of the protocol hierarchy. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> The distinction between Region C and Region D is that hosts in Region C are trusted MLS computers that are capable of simultaneously processing data at multiple security levels, while hosts in Region D are not capable of simultaneously processing data at multiple security levels. Hosts in Region D may be evaluated according to the U.S. Government Trusted Product Evaluation Program (TPEP) or Trusted Technology Assessment Program (TTAP) programs, the upcoming Common Criteria, or less rigorous programs such as Security Proof of Concept Keystone (SPOCK) or the International is Computer Security Association (ICSA). These hosts may be multi-user or single-user at a time computers, but are capable of operating only at one security level at a time. </paragraph>
<paragraph id="P-0077" lvl="7"><number>&lsqb;0077&rsqb;</number> Installation and Profiles </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> The network <highlight><bold>10</bold></highlight> is typically installed by first installing the NSC <highlight><bold>12</bold></highlight> in a secure location, readily available to the security officers. The security device <highlight><bold>18</bold></highlight> adapters are typically installed in the backplanes of the various host computers, and software drivers, associated with the operating system, are installed on the host computers. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> After the network <highlight><bold>10</bold></highlight> is installed and configured, the Security Administrator defines information about the security devices, their principals, and attached hosts. The administrator adds the information for each of the security devices <highlight><bold>18</bold></highlight> to a database located at the NSC <highlight><bold>12</bold></highlight>. In addition, the administrator programs an authentication card for the principal with the security device information, including the principal&apos;s one-time password. The administrator travels to each of the nodes, and reads in the card to install node-specific information onto the board of the security device. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> A principal initializes and uses a node by first going to the node and, using the appropriate I&amp;A means, selects a profile and identifies and authenticates himself/herself to the network. For example, this may include inserting the principal&apos;s authentication card in the card reader attached to the security device <highlight><bold>18</bold></highlight>. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> The principal also selects a usage profile using the pushbuttons on the front of the card reader. The principal is able to select only among those profiles entered by the security administrator. There can be up to 100 profiles defined for each principal although, in practical use, most principals will have only a few profiles. The selected profile has associated with it a security window and permitted host-to-host associations. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> The NSC <highlight><bold>12</bold></highlight> sends the appropriate security window and associations for the profile to the security device <highlight><bold>18</bold></highlight>. Once the host initializes the device driver, the host transmits packets to the network. The security device <highlight><bold>18</bold></highlight> mediates each packet according to the security window and authorized associations, then encrypts the packet using the appropriate traffic key. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> When the security device <highlight><bold>18</bold></highlight> detects an attempted security violation, it sends an audit event to the NSC. If authorized, the principal may switch to a different profile, with a different security window and different associations. This permits a principal to easily change from one usage profile to another, as required, among the set of such profiles authorized for the principal. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> However, only one profile (that is, security windows and associations) can be in effect at a given security device at any time. Thus, if a principal change profiles by selecting a different profile, the security device is flushed and all data is reloaded. The principal may or may not have to remove the authentication card. The clearing out of the security device is not known by the principal. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> The principal shuts down the security device <highlight><bold>18</bold></highlight> by removing the card (or logging out) and perhaps powering down the system. Throughout this operation, the security device <highlight><bold>18</bold></highlight> will only transmit or receive packets in accordance with the established current profile. Hence, the principal&apos;s profile is preferably configured to prevent access to both classified and public outside information at the same time. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> Accordingly, the network allows trusted users to access outside information, including the Internet, while stopping outside attackers at their point of entry. At the same time, the network limits an insider to information defined in their particular security profile. The network preserves the security effects compartmentalization, while making it easy for authorized users to access the information they need. Unlike static VPN solutions, the network lets the user decide which network to access at any given time. </paragraph>
<paragraph id="P-0087" lvl="7"><number>&lsqb;0087&rsqb;</number> Integrity and Assurance </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> The network system ensures both confidentiality and integrity of host-to-host communications by the use of encryption and integrity techniques. Encryption is a process that scrambles sensitive messages to make them unreadable to any recipient who does not know a secret string of characters, called a key. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> If the network security officer has authorized two hosts to communicate at a given security level, via the use of principal profiles, the security devices <highlight><bold>18</bold></highlight> perform a key exchange protocol and generate unique keys known only to that pair of security devices <highlight><bold>18</bold></highlight>. These keys are henceforth used to encrypt all communication between the attached hosts at the chosen security level until one of the hosts either shuts down or disconnects from the network or a defined limit of use has been exceeded. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> By having the security device automatically encrypt all messages, security of communication across the network is ensured. The user need not remember complex pass phrases and complete an authentication protocol that could be spoofed by Trojan horse software. In addition, by applying encryption at the network layer, rather than at the application layer, the network accomplishes all authentication, key generation, and key distribution functions transparently and effortlessly. An application programming interface may also be provided by the security device <highlight><bold>18</bold></highlight> to allow the user to encrypt individual files and directories, as well as messages. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> The assignment of unique keys to each pair of hosts at each security level offers two advantages. First, the network preferably incorporates various LANs, such as Ethernet and Token Ring, as well as transmitting packets through the Internet, which potentially allows messages to be intercepted by hosts other than the intended recipient. Encryption guarantees that only authorized target hosts can retrieve the information. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> Second, if a key should somehow be stolen unbeknownst to the principals that share the key, only a small subset of the total network traffic is compromised. It is noted, however, that the traffic keys are not known even to the principals. The keys are established by the two communicating security devices, and kept in memory inside the two security devices. So, there&apos;s no practical way for someone to steal a key. Yet, if someone is snooping packets on the network, and manages to guess the key, the key would only be valid for traffic from one host, to another host, at a particular level. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> Additional security may be provided by intermediate hosts on the Internet, such as Internet Service Providers, that run readily available sniffing tools, such as the UNIX tcpdump program to view all packets matching certain filters defined by the wiretapper. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> The network <highlight><bold>10</bold></highlight> further ensures that messages have not been modified by an attacker through the use of message digests, such as cryptographic checksums. As noted above, a message digest is a number that is calculated from the text of the message and is then transmitted along with the message. When the encrypted information is received, the digest calculation is performed anew (for the encrypted data) at the receiving host and compared to the received value of the digest. If the transmitted value and newly calculated value match, the receiving host can be confident that the message was delivered intact. </paragraph>
<paragraph id="P-0095" lvl="7"><number>&lsqb;0095&rsqb;</number> Cryptographic Protocol Overview </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows the preferred protocol headers for host-to-host messages and for control messages. All packets have an Ethernet or Token Ring header, as appropriate, with the standard IPv4 (Internet Protocol version 4) header and an IP Security (IPSec) header extension with an Common IP Security Option (CIPSO) label, as specified by RFCs 1825-1829. Different packet formats, as yet unspecified, will be used for the Type 1 model of the security device <highlight><bold>18</bold></highlight>. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> The headers (IP, IPSec, CIPSO label, and cryptographic headers) are in clear text while IP data (i.e., TCP or UDP headers and data) are encrypted. RFC 1851 describes the formatting of encrypted packets. Label integrity uses, but is not limited to, DSS, SHA or MD5. This provides protection of both data and control communications. If tunneling is configured for the association, the host&apos;s IP header is encapsulated in the encrypted payload. At the receive end, before the packet is decrypted, MAC processing is based on the CIPSO label and DAC processing is based on the sending host&apos;s IP address. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> Traffic keys are determined by each pair of communicating security device <highlight><bold>18</bold></highlight> using Internet Engineering Task Force (IETF) key determination based on shared secret information (IKE) or some other recognized process. The NSC <highlight><bold>12</bold></highlight> can be used as a Certificate Authority. Traffic keys are derived separately for each security level and host. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> Key life is determined centrally, based on elapsed time or number of bytes. The NSC <highlight><bold>12</bold></highlight> defines the key life when the security device <highlight><bold>18</bold></highlight> is initialized and the security device <highlight><bold>18</bold></highlight> initiates its own key change when the key life expires. The security devices <highlight><bold>18</bold></highlight> transfer traffic keys to the NSC (via key generation audit) for short-term archival and potential key recovery. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> Individual host-to-host associations may be protected by an appropriate encryption algorithm, as determined by the administrator. All network control communications are protected by the highest level of encryption available to the system. The network <highlight><bold>10</bold></highlight> also permits a network administrator to designate lap certain associations as clear-text (unencrypted). This mode of operation permits a host to communicate with other cleartext hosts. </paragraph>
</section>
<section>
<heading lvl="1">Security Policies </heading>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> This section describes the Mandatory Access Control (MAC) and Discretionary Access Control (DAC) policies enforced by the security devices <highlight><bold>18</bold></highlight>. It also describes Labeling, Identification and Authentication (I&amp;A), Audit, Object Reuse, and System Architecture as they relate to the policy of the network. </paragraph>
<paragraph id="P-0102" lvl="7"><number>&lsqb;0102&rsqb;</number> Mandatory Access Control (MAC) Policy </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> Mandatory access control is implemented through a security window calculation (<cross-reference target="DRAWINGS">FIG. 7</cross-reference>) at both the sending and receiving hosts. Each message is assigned a level that reflects both its sensitivity (e.g., secret, proprietary) and its handling restrictions (e.g., not releasable to foreign nationals, not releasable to the engineering department). Sensitivity is the combination of a hierarchical level (TopSecret&gt;Secret&gt;Proprietary&gt;SBU&gt;Unclassified) and a non-hierarchical category. Categories may be of the form &ldquo;X,&rdquo; where X is the name of some project &ldquo;Corporate Merger&rdquo; or operation &ldquo;Desert Storm.&rdquo;</paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> Similarly, for at least single level workstations, each network principal, or authorized user, is assigned a level that reflects the host&apos;s trustworthiness to read and properly handle sensitive messages. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> Two rules govern the reception and transmission of messages by the host. First, only an authorized host may receive sensitive data over the network. Thus, for instance, a standard PC operating as a host without any added security mechanisms of its own may have a security device configured to operate at Level-Top Secret and Categories&equals;(USNukes, SpySatellites). This configuration would be okay provided that the host is not permitted to transmit any of that onto the network or to receive anything different. Thus, the security window for that host, but not that principal, is closed down so that the host can only SEND TS (USNukes, SpySatellites) and RECEIVE TS (USNukes, SpySatellites). </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> Second, data that is transmitted is properly labeled so that it will be properly handled by the transmitting host as well as the remote receiving host. If the remote host is also a PC, then its security windows must be closed down to a single point as in the preceding example. The security device ensures that its transmissions are securely labeled. The network security officer is able to determine the specific range of levels, or security window, at which each host is permitted to communicate. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> If the remote host is a Mulit-Level Secure computer that is capable of simultaneously processing a range of Secret to Top Secret, then the security window can be opened up accordingly. In this sense, the host is then trusted not to mix up the Secret with the Top Secret. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> This flexible design permits unsecured hosts to be quickly and easily added to the network <highlight><bold>10</bold></highlight>. These unsecured hosts can freely inter-operate with other unsecured hosts without any restriction. However, secured network hosts will not inter-operate with these unsecured hosts unless the secured hosts are specifically authorized to network non-sensitive data, that is, via a defined security window. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> MAC is concerned with preventing each host from receiving data classified above the host&apos;s current level (&ldquo;read up&rdquo;) and transmitting data classified below the hosts&apos;s current level (&ldquo;write down&rdquo;). The level of a host computer is expressed as a range of hierarchical clearance levels (e.g., Secret, Top Secret) and sets of non-hierarchical categories (e.g., Project1, Operation2000), as determined by the profiles of individuals that use the computer. Individual host computers may or may not be trusted to handle MLS data. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, the network <highlight><bold>10</bold></highlight> is capable of supporting up to 256 hierarchical security levels and at least 65,535 non-hierarchical categories. The security administrator assigns names (e.g., &ldquo;Unclassified&rdquo;, &ldquo;Secret&rdquo;) and a hierarchical relationship to the security levels that will be used in the system. Typically, only a few security levels are defined and the rest are unused. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> The administrator also assigns names to the non-hierarchical categories, but as the name implies, these can be placed anywhere in the category space. All hosts must use the same labeling conventions on the network, but individual MLS hosts may have different values for a level or category as represented within the operating system. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> Referring back to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the network <highlight><bold>10</bold></highlight> architecture provides an innovative and flexible &ldquo;security window&rdquo; mechanism that is capable of supporting both trusted MLS hosts (Region C) and single-level hosts (Region D). For hosts in Region C, the security device <highlight><bold>18</bold></highlight> can be configured to permit packets labeled at multiple levels, with multiple different sets of categories. There are separate windows for a host&apos;s transmissions to the network and the host&apos;s receptions from the network. The security window can be closed down to a single authorized level and set of categories, or can be opened up to accommodate multi-level hosts. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, packets &lcub;a, b, c&rcub; pass through the origin security device <highlight><bold>18</bold></highlight> transmit window, while packets &lcub;d, e&rcub; are labeled below allowable limits (attempts to &ldquo;write down&rdquo;) and are rejected and audited. For the packets that pass through the sending host&apos;s transmit window, the packets are labeled by the sending host and mediated by the sending security device <highlight><bold>18</bold></highlight>. At the destination, only packets &lcub;b, c&rcub; pass through the receive window while packet (a) is labeled above allowable limits. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> As further shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, in order for data to flow from one host to another, it must satisfy the MAC restrictions enforced by both the sending and receiving security device <highlight><bold>18</bold></highlight>. The diamond shapes in the figure are intended to reflect the lattice it&apos;s organization of a range of security levels and non-hierarchical categories. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> More formally, the requirements to transmit data are stated in terms of the dominance relationships. The hierarchical classification in the packet&apos;s security label must be greater than or equal to the minimum allowable classification in the host&apos;s transmit window. In addition, the packet&apos;s security label must be less than or equal to the maximum allowable classification in the host&apos;s transmit window. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> The non-hierarchical categories in the object&apos;s security label include all the categories defined for the lower bound of the host&apos;s transmit window and are included in the categories defined for the upper bound of the host&apos;s transmit window. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> A similar dominance relationship is defined for the receive side of the association. The important point, though, is that the purpose of this is to prevent the sending host from sending data below its actual classification (&ldquo;write down&rdquo;) and prevent the receiving host from reading data above its authorizations (&ldquo;read up&rdquo;). </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> As an example, suppose the labeling space defined for the network includes four hierarchical levels: Unclassified, Confidential, Secret, Top_Secret and Ultra&mdash;Secret; and <highlight><bold>26</bold></highlight> non-hierarchical categories &lcub;A, B, C, D, . . . X, Y, Z). In addition, suppose a B2-evaluated host is operating at a range of levels Secret to Top_Secret, with category A required, and categories &lcub;D, Z) optional depending on the data processed by the operating system. The security device <highlight><bold>18</bold></highlight> might be configured to permit any of the labels of Table 1 to be transmitted and received.  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="49PT" align="left"/>
<colspec colname="1" colwidth="84PT" align="left"/>
<colspec colname="2" colwidth="84PT" align="left"/>
<thead>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center">TABLE 1</entry>
</row>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry>Level</entry>
<entry>Categories</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>Secret</entry>
<entry>A</entry>
</row>
<row>
<entry></entry>
<entry>Secret</entry>
<entry>A, D</entry>
</row>
<row>
<entry></entry>
<entry>Secret</entry>
<entry>A, Z</entry>
</row>
<row>
<entry></entry>
<entry>Secret</entry>
<entry>A, D, Z</entry>
</row>
<row>
<entry></entry>
<entry>Top_Secret</entry>
<entry>A</entry>
</row>
<row>
<entry></entry>
<entry>Top_Secret</entry>
<entry>A, D</entry>
</row>
<row>
<entry></entry>
<entry>Top_Secret</entry>
<entry>A, Z</entry>
</row>
<row>
<entry></entry>
<entry>Top_Secret</entry>
<entry>A, D, Z</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> Continuing with our example, the security device <highlight><bold>18</bold></highlight> may also be configured by the system administrator to reject and audit any of the representative labels shown in Table 2.  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="56PT" align="left"/>
<colspec colname="2" colwidth="56PT" align="left"/>
<colspec colname="3" colwidth="91PT" align="left"/>
<thead>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="3" align="center">TABLE 2</entry>
</row>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="3" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry>Level</entry>
<entry>Categories</entry>
<entry>Reason</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="3" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>Secret</entry>
<entry>A, B</entry>
<entry>Category B is not</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>permitted</entry>
</row>
<row>
<entry></entry>
<entry>Top_Secret</entry>
<entry>A, D, M, Z</entry>
<entry>Category M is not</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>permitted</entry>
</row>
<row>
<entry></entry>
<entry>Secret</entry>
<entry>none</entry>
<entry>Must have Category A</entry>
</row>
<row>
<entry></entry>
<entry>Top_Secret</entry>
<entry>D, Z</entry>
<entry>Must have Category A</entry>
</row>
<row>
<entry></entry>
<entry>Unclassified</entry>
<entry>A</entry>
<entry>Security Level too low</entry>
</row>
<row>
<entry></entry>
<entry>Ultra_Secret</entry>
<entry>A, D</entry>
<entry>Security Level too high</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="3" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> For hosts in Region D, policy dictates that each host must operate at a single level at a time (otherwise it would be a non-MLS host processing more than one level of information). For these single-level hosts, the security window can be collapsed to a single labeling and all packets sent by the host must match that labeling exactly. For simplicity, however, a different option is permitted below. </paragraph>
<paragraph id="P-0121" lvl="7"><number>&lsqb;0121&rsqb;</number> Labeling&mdash;Single Level Hosts </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> The MAC implementation described above calls for each host to create a label in each packet, then to pass the packet to the security device <highlight><bold>18</bold></highlight> where the label is mediated with respect to the security window for that node. For single-level hosts, either the security device <highlight><bold>18</bold></highlight> can simply stamp the administratively-defined label into the packet header or a simplified driver can read the appropriate information from the security device and label the packets before giving them to the security device. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> For single-level hosts, stamping the label into the header is equivalent to mediating the host-defined label against a security window that contains a single acceptable labeling. No mediation is required for these single level hosts because the security device <highlight><bold>18</bold></highlight> stamps the only label that is acceptable for that node. The two approaches (security window, labeling) are compatible because, in both cases, (1) only packets consistent with the security policy are transferred onto the network, and (2) each packet on the network is labeled at the correct level. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> The label can be at any hierarchical level and non-hierarchical category set defined for the network. The labeling information is transferred to/from the NSC <highlight><bold>12</bold></highlight> to the security device <highlight><bold>18</bold></highlight> in CIPSO format using the same means used to transfer the security window for multi-level hosts. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> This method for stamping a label into the packet header works only for single-level hosts, or for MLS hosts that are administratively constrained to a single level on the network. Hosts that operate in MLS mode on the network must provide a trusted labeling process with the label mediated by the security device <highlight><bold>18</bold></highlight>. </paragraph>
<paragraph id="P-0126" lvl="7"><number>&lsqb;0126&rsqb;</number> Discretionary Access Control (DAC) Policy </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> Discretionary access control at layer 3 of the protocol stack is concerned with ensuring that a host computer can only have associations with authorized host computers. DAC is implemented through a pair of association lists, a &ldquo;receive&rdquo; association list and a &ldquo;transmit&rdquo; association list. Both the receive and transmit association lists are assigned by the network security officer. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> Each network host, or authorized user permitted to access an authorized workstation, can only send messages to hosts that appear in its transmit association list. Likewise, a host is only permitted to receive messages from hosts that are named in its receive association list. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> The network <highlight><bold>10</bold></highlight> enforces a centralized discretionary access control (DAC) policy based on hardware addresses, Internet Protocol (IP) addresses and Transmission Control Protocol (TCP) or User Datagram Protocol (UDP) ports. This policy is specified by a network security administrator at the NSC <highlight><bold>12</bold></highlight> and downloaded to each security device <highlight><bold>18</bold></highlight> as part of the principal&apos;s security profile. The DAC policy is not settable by the individual hosts involved. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> The IP portion of the DAC policy addresses the ability of any host in the 32-bit IP address space to send and receive from any other host. This policy is enforced at the transmit side of the network (based on the sending host&apos;s authorization to send to the destination address) and at the receive side of the network (based on the receiving host&apos;s authorization to receive from the destination address). The DAC policy is independent of the classification level and categories, but cannot override a MAC decision. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> In actual use, this may be set up, for instance, as associations between pairs of hosts. For example, a first set of hosts &lcub;A, B&rcub; may communicate with each other, and a second set of hosts &lcub;C, D, E&rcub; may also be permitted to communicate with each other. However, communication is not permitted between any of the hosts of the first set with any of the hosts from the second set. These sets of hosts are essential VPNs. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> The network <highlight><bold>10</bold></highlight> also provides rudimentary port filtering based on TCP and UDP ports, with the default being no port-based filtering. TCP and UDP each provide 16-bits of port space, with the ports used to identify specific endpoints (client or server process) on the sending and receiving hosts. Each TCP/UDP header has a source port address and a destination port address, where the source port address is associated with the sending process on the source host, and the destination port address is associated with the intended recipient process on the destination host. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> The port filtering rules are also part of the DAC policy, specified by a network security administrator at the NSC <highlight><bold>12</bold></highlight>, downloaded to security devices <highlight><bold>18</bold></highlight> as they come online, and enforced by the security device <highlight><bold>18</bold></highlight> for every packet. The port filtering aspect of the policy serves to further restrict communications between pairs of hosts that are authorized to communicate. For example, workstation A may be permitted to access server B, but the security device <highlight><bold>18</bold></highlight> for server B might block packets to port <highlight><bold>23</bold></highlight> (to block use of Telnet) or port <highlight><bold>514</bold></highlight> (to block access to the UNIX syslog facility). </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> The port filter is preferably per association, so effectively Telnet from a specific host may be permitted, and denied for all other hosts. For instance, if the protocol type does not specify either TCP or UDP, then the packet is passed to IP address filtering. Packets that are rejected because of a host-to-host association or a blocked port may be audited by the NSC. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> The network <highlight><bold>10</bold></highlight> preferably combines the features of both mandatory and discretionary access control. Accordingly, for instance, in order for host A to transmit a message to host B, three conditions must be met: (1) the network requires that principal A&apos;s transmit association list must include host B; (2) host B&apos;s receive association list must include host A; and, (3) the security level of the message must be included within both host A&apos;s and host B&apos;s security windows. Requirements (1) and (2) are based upon DAC, and requirement (3) is based upon MAC. </paragraph>
<paragraph id="P-0136" lvl="7"><number>&lsqb;0136&rsqb;</number> Identification and Authentication (I&amp;A) </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> I&amp;A is performed at the NSC <highlight><bold>12</bold></highlight> for operators and administrators and is performed at the security device <highlight><bold>18</bold></highlight> for the principals that are authorized to operate a node of the secure network. Identification of security officers at the NSC is a conventional login with user ID and password. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> The security device <highlight><bold>18</bold></highlight> boards support various types of I&amp;A for principals, including but not limited to authentication cards (what the user has) and ID/password (what the user knows). The mechanism used by a particular security device <highlight><bold>18</bold></highlight> board is determined from configuration data read from the administrator&apos;s card. The mechanisms include: an authentication card, ID/Password, Fortezza and Authentication card and PIN. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> An authentication card is the standard means for I&amp;A, and requires each principal to insert an authentication card in the security device <highlight><bold>18</bold></highlight> card reader to use the network. Each principal&apos;s card is programmed at the NSC and preferably transferred to the principal in person. The card contains one-time password information that prevents spoofing by anyone other than an administrator. This information includes the principal ID and a random value that is updated once per login. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> The security device <highlight><bold>18</bold></highlight> performs I&amp;A via an ID and password entered by the principal at the attached host. The password is compared with the value stored at the NSC. This method requires the local host to provide a trusted path mechanism by which the principal can reliably place the user ID and password in the security device <highlight><bold>18</bold></highlight>. For single-user workstations, this may mean, for instance, that the user of the workstation enter the principal ID and password. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> Fortezza involves the use of a Fortezza card in the host system to sign a defined value with the identity of the principal. It also requires a trusted path between the host&apos;s Fortezza software and the network driver. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> The authentication card and PIN mechanism requires the principal to enter a PIN at the host in addition to inserting the authentication card. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> Regardless of the means used for authentication, a principal&apos;s ability to use the network depends upon the Security Officer defining the principal in a database at the NSC, and providing the means of authentication (programmed card, password, etc.) to the principal. </paragraph>
<paragraph id="P-0144" lvl="7"><number>&lsqb;0144&rsqb;</number> Audit </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> Audit is the second key part of an accountability policy. MLS systems must record information about security-relevant events such as use of I&amp;A mechanisms and attempts to send data outside of the host&apos;s security range or on unauthorized connections. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> The network <highlight><bold>10</bold></highlight> provides selectable auditing of the following types of events: login and logout of security officers at the NSC; change of security databases at the NSC; I&amp;A of principals; statistical events, providing detailed information about the individual packets transmitted and received; exception events, including attempts to violate the security window, send to or receive from an unauthorized association, etc.; TCP/UDP port filtering rejections; and, TCP opens and closes. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> The NSC provides real-time alarms of attempted security violations. These are typically directed to a printer, and include the date and time, principal identifier, IP addresses, and protocol type and port number. The network immediately notifies the network security officer of any attempted violations. The network optionally disconnects the offending host from the network to avoid additional audit data from being generated. </paragraph>
<paragraph id="P-0148" lvl="7"><number>&lsqb;0148&rsqb;</number> Object Reuse </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> Object reuse (OR) is concerned with preventing inadvertent release of residual data, typically, in unused fields or at the end of a packet buffer. The TNI has two requirements for object reuse: preventing access to the residual data itself, and preventing use of residual authorizations. Both object reuse requirements are addressed by the innovative use of specialized hardware on the security device <highlight><bold>18</bold></highlight> board hardware that sanitizes buffers before they are reused again by the system. This hardware may be thought of as a macro extension of the processor. </paragraph>
<paragraph id="P-0150" lvl="7"><number>&lsqb;0150&rsqb;</number> System Architecture Requirement </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> A secure network must have a system architecture that ensures the network functions as a reference monitor. In accordance with the TNI, which defines the Network Reference Monitor (NRM) concept, an NRM must be tamperproof, must always be invoked, and must be small enough to be subject to complete analysis and testing. This relates to the ability of a MLS network to accurately and completely perform the functions that it is supposed to provide. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> This requirement is inherently addressed by placing the security enforcement mechanisms in their own dedicated domain on the security device <highlight><bold>18</bold></highlight> board, where they cannot be interfered with by the host&apos;s software. It is supported by the effective use of cryptography to provide communications secrecy and communications integrity for all host-to-host transfers and all control communications. </paragraph>
</section>
<section>
<heading lvl="1">Design </heading>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> The secure network described above consists of a specialized NSC <highlight><bold>12</bold></highlight> host dedicated to configuring and auditing the secure network and a network security device <highlight><bold>18</bold></highlight> installed between each host computer and the network medium. The design of the NSC <highlight><bold>12</bold></highlight> and the security device <highlight><bold>18</bold></highlight> mediation will now be discussed. </paragraph>
<paragraph id="P-0154" lvl="7"><number>&lsqb;0154&rsqb;</number> Network Security Center or Controller (NSC) </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> The NSC <highlight><bold>12</bold></highlight> is a dedicated machine used by the security officer to configure, operate, and audit the operation of the secure network. The NSC is necessary for the network to run, although the security devices <highlight><bold>18</bold></highlight> may also be configured to continue operating without the NSC. </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> The NSC is responsible for both authenticating principals when they connect to the network and for authorizing connections. When a principal initially signs onto the network over an authorized security device, the NSC is contacted to verify the authentication data and to initialize security-relevant parameters, including the security profile, the association profiles, and the seed, or keying material, from which the security device generates individual encryption keys. </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> Once the initialization is complete, the security device possesses sufficient intelligence and autonomy to manage all subsequent communication with other security devices across the network by itself. However, the security device continues to automatically report security-relevant occurrences to the NSC where they are displayed as real-time alarms and added to the audit log where they can later be examined for evidence of potential security violations. </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> The network architecture preferably provides for up to two separate NSCs, a primary NSC and a hot backup NSC. In normal operation, the primary NSC manages all aspects of the network, and provides automatic updates of network databases to the backup. The address of the backup NSC is known to the various security device adapters (from information read from an installation card), but the backup NSC does not participate in network policy management. </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> If the primary NSC fails, each security device independently switches over to the hot backup and periodically checks the availability of the primary. The backup preferably allows network principals to authenticate themselves, download configuration data, and begin operating on the network. The backup also logs audit data and provides the ability to configure individual boards to operate in &ldquo;emergency mode&rdquo; and generate their own keying material. </paragraph>
<paragraph id="P-0160" lvl="0"><number>&lsqb;0160&rsqb;</number> The NSC is preferably implemented on a commercial off-the-shelf Pentium-class machine, using Windows NT for screen management, printer management, keyboard/mouse input, threads dispatching, and object reuse. The NSC software is organized as a main application with multiple worker threads for network control, network I/O, audit, print management, and system monitoring. </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> The NSC does not use any NT networking code. Instead, the NSC uses a security device <highlight><bold>18</bold></highlight> board with special firmware (known as the security device <highlight><bold>18</bold></highlight>-Prime) that manages the encryption/transmission of control messages to the various security device boards, and the reception/decryption of responses and audit data. The security device <highlight><bold>18</bold></highlight>-Prime manages control keys based on the security device <highlight><bold>18</bold></highlight> addresses. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> The NSC <highlight><bold>12</bold></highlight> provides at least two levels of Security Officers in accordance with the concept of least privilege: an administrator has access to all NSC commands (configuration, operation, and auditing), while an operator can only perform restricted control and monitoring functions. A security administrator can define additional site-specific roles that permit operators at a particular facility to have additional privileges beyond the pre-defined operator role. </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> The NSC command set includes security officer, network control, network management, principal, and security device <highlight><bold>18</bold></highlight> functions. The Security officer commands provide the ability for a security officer to login, logout, acknowledge alarms, and modify the security officer database. Network control functions include starting, stopping, suspending, resuming, and auditing the network. </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> Network management functions include defining user profiles, including security windows and host-to-host associations. It also includes loading key files, setting date and time, and database functions such as archiving the audit file and backing up and restoring databases. </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> Principals are the individuals that are directly responsible for the operation of nodes of the secure network. They may be users of single-user workstations, or may be administrators of multi-user systems. The functions related to management of principals include defining, editing, listing, and removing the principal data records, and programming access cards for the principals to bring up a network node. </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> Security device <highlight><bold>18</bold></highlight> functions include editing security device <highlight><bold>18</bold></highlight> data records, shutting down, suspending, and resuming security device <highlight><bold>18</bold></highlight> operation, and refreshing encryption keys used by the security device <highlight><bold>18</bold></highlight>. Creating an installation card used to installation of the security device boards with their IP address and control keys. </paragraph>
<paragraph id="P-0167" lvl="7"><number>&lsqb;0167&rsqb;</number> Security Device <highlight><bold>18</bold></highlight> Architecture </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> In the preferred embodiment, the security device <highlight><bold>18</bold></highlight> is a self-contained circuit board that is directly attached into the hardware of the host system. The architecture is straightforward, enabling the device to be readily integrated into a variety of hardware environments. The device operates using its own independent processor <highlight><bold>48</bold></highlight>, bus <highlight><bold>46</bold></highlight>, program and data memory <highlight><bold>54</bold></highlight>. These independent elements isolate the security device, including its algorithms, and insure that it operates within its own protected domain. Providing an independent processor also avoids stealing any memory cycles or processing bandwidth from the host in which it is installed. Since the device operates at a low OSI level, enforcing all security mechanisms within the hardware circuit board, it is tamperproof and cannot be compromised by software-based attacks. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, the security device <highlight><bold>40</bold></highlight> consists of a single-board adaptor installed on a Host Backplane Bus <highlight><bold>42</bold></highlight>. Different implementations exist for various host bus architectures (for instance, PCI, Sbus, and ISA) and various network interfaces (such as Ethernet and Token Ring). Yet, each security device <highlight><bold>40</bold></highlight> includes a host interface, attached card reader <highlight><bold>62</bold></highlight>, processor block, local RAM <highlight><bold>54</bold></highlight>, cipher block and network block. </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> The host interface includes the host adapter&apos;s bus interface logic (not shown) and a block of two-port RAM <highlight><bold>44</bold></highlight>. Portions of the memory <highlight><bold>44</bold></highlight> can be mapped into either the host adapter memory space or the security device&apos;s <highlight><bold>40</bold></highlight> own internal memory, but not both at the same time. The host copies a packet into the two-port RAM <highlight><bold>44</bold></highlight> buffer and writes a memory location to cause the buffer to be mapped into the security device memory. After the buffer is transferred to the security device, it is invisible to the host processor until it is processed. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> The processor block consists of a dedicated processor <highlight><bold>48</bold></highlight>, non-volatile memory <highlight><bold>52</bold></highlight> (EPROM/flash) for program storage, and support logic. The processor block includes dedicated hardware logic burned into a ROM on the security device board, to move buffers, scrub buffers in support of object reuse requirements, and move data to and from the encryption chip. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> The security device has its own internal system RAM <highlight><bold>54</bold></highlight>, which is used for transitory storage of data packets, security windows, association lists, and the like. A portion of the internal RAM <highlight><bold>54</bold></highlight>, identified as network coprocessor RAM <highlight><bold>64</bold></highlight>, is used by the network block to send and receive packet buffering. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> The cipher block <highlight><bold>58</bold></highlight>, which consists of encryption device(s), support circuitry, and dedicated memory two-port RAM <highlight><bold>56</bold></highlight> available only to the processor and encryption hardware. The network block is the network coprocessor <highlight><bold>66</bold></highlight>, which includes logic to send and receive packets on the network <highlight><bold>68</bold></highlight>. The network <highlight><bold>68</bold></highlight> is preferably a LAN. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> A key architectural feature of this hardware design is that the network medium <highlight><bold>68</bold></highlight> is separated from the host bus <highlight><bold>42</bold></highlight>. This separation of the two interfaces dictates that packets will move from one interface to the other only if moved by security device&apos;s <highlight><bold>40</bold></highlight> software <highlight><bold>52</bold></highlight>. The only way a packet may move from host bus <highlight><bold>42</bold></highlight> to local bus <highlight><bold>46</bold></highlight>, is for the CPU <highlight><bold>48</bold></highlight>, running the firmware <highlight><bold>52</bold></highlight>, to grab the packet from the two-port RAM <highlight><bold>44</bold></highlight>. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> In addition, the hardware design provides a separation of the security device&apos;s own processing environment from both the host and the network. The security device&apos;s program and internal buffers are invisible to the host because of the dual-ported RAM design. Further, except for control requests from the NSC <highlight><bold>12</bold></highlight>, which are accepted only from the NSC and must be cryptographically verified, there is no interface by which another host on the network can retrieve data from the security device&apos;s internal buffers. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> Because all communications from one host to another must use the services provided by the security device in order to access the network, it is not possible for a host to inadvertently or maliciously bypass the security device security features. In a properly configured network, where there are no other electrical connections to the network, it is possible to make absolute statements that the host software (whether trusted to operate in MLS mode, or not) must operate in accordance with the centralized network security policy set up by the security policy defined by the security officer at the NSC. Further, any packets that are transmitted are cryptographically protected before being placed on the network. </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> The security device functions are implemented in firmware <highlight><bold>52</bold></highlight> installed on the security device board. During installation, the security device firmware reads an administrator installation card at the authentication interface unit <highlight><bold>62</bold></highlight> to get the board IP addresses (Node, NSC, default router) and cipher key. Subsequently, the security device downloads principal-specific and node-specific data, via the network interface <highlight><bold>66</bold></highlight>, from the NSC and sends audit events to the network for archival. However, the security device operates independently of the attached host. </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> The security device has four general phases of operation: configuration, initialization, key exchange, and secure communication. Configuration is performed by the network security officer at the NSC workstation. The NSO configures each security device to support one or more principals, where each principal may have up to about 100 profiles. Each profile has associated mandatory access controls (security windows) and discretionary access controls (association lists). </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> Initialization of the security device occurs when a principal authenticates, via the security device, to the NSC. The security device reads security profile selected by the principal and cryptographic seed keying material from the database resident on the NSC. Whenever the security device establishes initial contact with another host that is also equipped with a security device, key exchange is conducted to prepare for secure communications between the hosts. </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> After a user is authenticated and selects a valid profile, the security device firmware downloads the security window and association list for the principal from the NSC. The window (that is, the hierarchical security levels and non-hierarchical categories, are represented in CIPSO format. </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> After configuration, initialization, and key exchange have taken place, secure communication between pairs of hosts is automatically and transparently managed by the respective security devices. User programs executing atop a security device equipped host only require access to a standard built-in networking application program interface (API) such as WinSock or TLI. This interface to the security device disguises the fact that an intricate sequence of operations is being performed by the security device each time a packet is transmitted or received across the network. </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> The network security claims for the security device <highlight><bold>18</bold></highlight> depend upon the proper sequence as well as execution of the following tasks. This can be viewed as multiple layers of processing in which the transmit flow of packets involves processing the individual layers from the highest layer (host) to lowest layer (network). </paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> Packets are transmitted from the left to the right, that is, from the host bus <highlight><bold>42</bold></highlight> to the network <highlight><bold>68</bold></highlight>, and received right to left, from the network <highlight><bold>68</bold></highlight> to the host <highlight><bold>42</bold></highlight>. Packet flow is controlled by the CPU <highlight><bold>48</bold></highlight> and its firmware programs <highlight><bold>52</bold></highlight>. Transmission and reception of packets will be discussed in further detail below with reference to <cross-reference target="DRAWINGS">FIGS. 9, 10</cross-reference> and <highlight><bold>12</bold></highlight>. </paragraph>
<paragraph id="P-0184" lvl="0"><number>&lsqb;0184&rsqb;</number> The security device <highlight><bold>40</bold></highlight> is configured so that malicious programs on the host computer can not directly access any of the devices on the security device local bus <highlight><bold>46</bold></highlight>. Thus, direct access cannot be established to the local RAM <highlight><bold>54</bold></highlight>, network coprocessor <highlight><bold>66</bold></highlight>, encryption hardware <highlight><bold>58</bold></highlight>, or authentication interface <highlight><bold>60</bold></highlight>. This is accomplished by only permitting communications between the host bus <highlight><bold>42</bold></highlight> and the internal bus <highlight><bold>46</bold></highlight> via the two-port RAM <highlight><bold>44</bold></highlight>. Thus, the host bus <highlight><bold>42</bold></highlight> address signals, data signals, read/write signals, and so forth, do not extend to the local bus <highlight><bold>46</bold></highlight>. Instead, each bus <highlight><bold>42</bold></highlight>, <highlight><bold>46</bold></highlight> essentially terminates at the two-port RAM interface <highlight><bold>44</bold></highlight>. (<cross-reference target="DRAWINGS">FIG. 12</cross-reference>). </paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> The two-port RAM <highlight><bold>44</bold></highlight> is connected to the host bus <highlight><bold>42</bold></highlight> and provides complete separation of the host and internal busses. The two-port RAM <highlight><bold>44</bold></highlight> is implemented as standard RAM storage devices with two separate bus interfaces. This design provides for no pass-through or leakage from one bus to the other, except by a write on one bus to a memory cell followed by a read on the other bus. </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> In operation, a principal inserts a card in the authentication interface unit <highlight><bold>62</bold></highlight> and selects a profile using the keypad and display on that unit. The unit <highlight><bold>62</bold></highlight> is typically connected to the interface logic <highlight><bold>60</bold></highlight> by a ribbon cabling. The logic <highlight><bold>60</bold></highlight> enables information to be read/write to/from the card, as well as to read the keypad and write to a display. </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> Once a principal is authenticated, the host may transmit packets to the network. With cross reference to <cross-reference target="DRAWINGS">FIG. 9, a</cross-reference> host asserts a signal on the bus <highlight><bold>42</bold></highlight> to put a packet into the two-port RAM <highlight><bold>44</bold></highlight>, step <highlight><bold>100</bold></highlight>. The CPU <highlight><bold>48</bold></highlight>, operating under control of firmware <highlight><bold>52</bold></highlight>, reads the packet from the shared memory <highlight><bold>44</bold></highlight> by asserting signals on the local bus <highlight><bold>46</bold></highlight>. </paragraph>
<paragraph id="P-0188" lvl="0"><number>&lsqb;0188&rsqb;</number> The CPU <highlight><bold>48</bold></highlight>, using a transmit association list in the internal memory <highlight><bold>54</bold></highlight>, performs DAC by determining if the destination IP address is in the transmit list, step <highlight><bold>102</bold></highlight>. The transmit list was previously downloaded from the NSC via the network <highlight><bold>68</bold></highlight>, based upon the principal authentication and profile selected. The CPU <highlight><bold>48</bold></highlight>, using a transmit security window in the internal memory <highlight><bold>54</bold></highlight>, performs MAC by determining if the security label is consistent with the transmit security window, step <highlight><bold>104</bold></highlight>. As with the transmit list, the security window was also downloaded from the NSC as a result of the principal authentication and the profile selected. </paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> The CPU <highlight><bold>48</bold></highlight> then puts the packet in the cipher two-port RAM <highlight><bold>56</bold></highlight>, which is used for communications with the cipher unit <highlight><bold>58</bold></highlight>. The cipher unit <highlight><bold>58</bold></highlight> uses pre-loaded keying material to perform the cryptographic transformation and place the result back into the two-port RAM <highlight><bold>56</bold></highlight>. Unlike the host two-port RAM, the cipher two-port RAM <highlight><bold>56</bold></highlight> preferably does not have protection responsibility. Rather, the cipher two-port RAM <highlight><bold>56</bold></highlight> is used to facilitate communications between the CPU <highlight><bold>48</bold></highlight> and cipher unit <highlight><bold>58</bold></highlight>, step <highlight><bold>106</bold></highlight>. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> Next, the CPU <highlight><bold>48</bold></highlight> collects information from the packet that is to be protected by a message digest (cryptographic checksum), and places it in the cipher two-port RAM <highlight><bold>56</bold></highlight>. The cipher unit <highlight><bold>58</bold></highlight> makes the cryptographic transformation and puts it back into the cipher two-port RAM, where the CPU takes it and puts it in the IP header, step <highlight><bold>107</bold></highlight>. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> The CPU <highlight><bold>48</bold></highlight> then puts the packet into a reserved area in the network coprocessor RAM <highlight><bold>64</bold></highlight>. The network coprocessor <highlight><bold>66</bold></highlight> takes the packet from this RAM <highlight><bold>64</bold></highlight> and transmits it onto the network <highlight><bold>68</bold></highlight>, steps <highlight><bold>108</bold></highlight>, <highlight><bold>110</bold></highlight>. RAM <highlight><bold>64</bold></highlight> is a portion of the internal RAM <highlight><bold>54</bold></highlight> that is dedicated by the firmware <highlight><bold>52</bold></highlight> for use by the network coprocessor. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> Packet reception operates in the reverse manner, as discussed with relation to <cross-reference target="DRAWINGS">FIG. 10</cross-reference>. After the packet is received from the network <highlight><bold>68</bold></highlight> by the network coprocessor <highlight><bold>66</bold></highlight> and placed in the network coprocessor RAM <highlight><bold>64</bold></highlight>, the CPU <highlight><bold>48</bold></highlight> takes over and does reception DAC, step <highlight><bold>152</bold></highlight> and MAC, step <highlight><bold>154</bold></highlight> using data structures in internal RAM <highlight><bold>54</bold></highlight> that were downloaded from the NSC after principal authentication and profile selection. </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> The CPU <highlight><bold>48</bold></highlight> verifies the integrity of the packet, step <highlight><bold>156</bold></highlight>, by performing the same message digest calculation done by the sending host in step <highlight><bold>107</bold></highlight>. If the results match, then the packet was not modified en route. This involves putting data in cipher two-port RAM <highlight><bold>56</bold></highlight> and the cipher unit <highlight><bold>58</bold></highlight> performing a transformation using keys loaded in the hardware. The CPU <highlight><bold>48</bold></highlight> decrypts the packet, step <highlight><bold>158</bold></highlight>, using the same general approach flow of processing as for encryption, step <highlight><bold>106</bold></highlight>, but with the cipher unit operating in decryption mode. </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows the process for transmitting information. At step <highlight><bold>100</bold></highlight>, the host requests and the security device <highlight><bold>18</bold></highlight> maps the packet to be transmitted. At this step, the host places a packet in the Interface Control Block (ICB) and notifies the security device. This maps the packet out of host memory and into board memory. </paragraph>
<paragraph id="P-0195" lvl="0"><number>&lsqb;0195&rsqb;</number> At the security device, the packet then undergoes DAC, step <highlight><bold>102</bold></highlight>. Here, the security device verifies that the host has an authorized transmit association to the destination address in the host&apos;s IP header. If not, an audit is generated, step <highlight><bold>112</bold></highlight>, and the processing flow is terminated, step <highlight><bold>114</bold></highlight>. </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> If the destination address is in the transmit list, Mandatory Access Control is performed. At step <highlight><bold>104</bold></highlight>, the security device verifies that the host-specified packet label (CIPSO) is consistent with the transmit security window, or (for single-level hosts) labels the packet with the host label. If not, an audit is generated, step <highlight><bold>112</bold></highlight>, and the processing flow is terminated, step <highlight><bold>114</bold></highlight>. </paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> At step <highlight><bold>106</bold></highlight>, for packets satisfying both discretionary and mandatory access control, the packet is encrypted, using the encryption key for the destination IP address. At step <highlight><bold>107</bold></highlight>, the cryptographic checksum B is computed and placed in to the packet. Proceeding to step <highlight><bold>108</bold></highlight>, the link layer header is generated, and at step <highlight><bold>110</bold></highlight>, the packet is transmitted. </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> Similarly, packet reception occurs in an order of processing, from the lowest layer to the highest. Turning to step <highlight><bold>150</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the security device receives the packet from the network. Discretionary Access Control is then performed by security device by verifying that the host has a receive association for the source IP address in the incoming packet&apos;s IP header, step <highlight><bold>152</bold></highlight>. If not, an audit is generated, step <highlight><bold>162</bold></highlight>, and the processing flow is terminated, step <highlight><bold>164</bold></highlight>. </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> Mandatory Access Control is performed at step <highlight><bold>154</bold></highlight> by verifying that the packet label (CIPSO) is consistent with the receive security window. At step <highlight><bold>154</bold></highlight>, the security device verifies the integrity of the received packet by calculating a message digest (cryptographic checksum) of the received data. If the computed value matches the value sent by the originating security device, then the packet was not modified. If not, an audit is generated, step <highlight><bold>162</bold></highlight>, and the processing flow is terminated, step <highlight><bold>164</bold></highlight>. </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> For packets satisfying both discretionary and mandatory access control, the packet is decrypted, step <highlight><bold>156</bold></highlight>, using traffic key for source IP address. The security device then maps the packet out of the board memory and into the host memory. </paragraph>
<paragraph id="P-0201" lvl="0"><number>&lsqb;0201&rsqb;</number> When configured at installation (by data on the administrator&apos;s card), the security device <highlight><bold>18</bold></highlight> provides the ability for the attached host computer to initiate switching from one authorized profile to another. Each profile has associated with it separate transmit and receive security windows for MAC, as well as separate transmit and receive association association lists for DAC. </paragraph>
<paragraph id="P-0202" lvl="0"><number>&lsqb;0202&rsqb;</number> The host enters the profile by using its trusted path to write the new profile identifier into the security device ICB. The security device validates that the host actually has the requested profile and, if so, then resets the security window and associations and sends a profile change notification to the NSC. If the security device is not configured to allow the host to initiate profile switching, then principal must select another profile via the card reader in order to switch profiles. </paragraph>
<paragraph id="P-0203" lvl="0"><number>&lsqb;0203&rsqb;</number> The security device also provides a way for the local host to place cleartext data in the ICB and receive the encrypted results. This uses the standard packet transmission code with a specified key. </paragraph>
<paragraph id="P-0204" lvl="7"><number>&lsqb;0204&rsqb;</number> Host Bus Interface Using Two-Port RAM </paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> In order to better understand the operation of the host bus interface, which uses two-port RAM <highlight><bold>44</bold></highlight>, reference will first be made to the conventional network adapter architecture. A standard network adapter <highlight><bold>310</bold></highlight> is shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>. The same general architecture is used for other types of adapters, e.g., SCSI controllers, video controllers, etc. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> Typically the adapter is plugged into the host bus <highlight><bold>302</bold></highlight>, which typically consists of address lines <highlight><bold>304</bold></highlight>, data lines <highlight><bold>306</bold></highlight>, and control lines <highlight><bold>308</bold></highlight>. For example, on a 32-bit computer, there might be 32 address lines, 32 data lines, and several control lines (interrupt, I/O, etc.). In a standard network adapter, some portion of these lines extend directly into the adapter card <highlight><bold>310</bold></highlight>. For example, the local bus <highlight><bold>311</bold></highlight> might consist of 8 address lines, 8 data lines, and a few control lines. These are wired directly or with minimal interface logic to the host bus <highlight><bold>302</bold></highlight>. </paragraph>
<paragraph id="P-0207" lvl="0"><number>&lsqb;0207&rsqb;</number> If the adapter has local RAM <highlight><bold>312</bold></highlight> or local adapter firmware <highlight><bold>314</bold></highlight>, these are directly accessible to software (typically a device driver) on the host computer. This means is commonly used for personal computers to execute extensions to the device driver that are resident in firmware on the adapter board. In the case of a network adapter, a network coprocessor sits on the bus and sends receives packets from adapter RAM <highlight><bold>312</bold></highlight> or from host memory (not shown). </paragraph>
<paragraph id="P-0208" lvl="0"><number>&lsqb;0208&rsqb;</number> The problem with this architecture for a security device, however, is that the contents of memory on the adapter board depend on the trustworthiness of the host operating system. Any user process on the host <highlight><bold>300</bold></highlight> that can bypass these host controls can modify memory locations on the adapter board and cause the network adapter to send or receive anything. </paragraph>
<paragraph id="P-0209" lvl="0"><number>&lsqb;0209&rsqb;</number> Turning to <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, the host bus interface having a two-port RAM is shown in further detail. The security device <highlight><bold>310</bold></highlight> runs in its own protected domain, completely isolated from potentially malicious host software running on the host CPU <highlight><bold>300</bold></highlight>. This is done via a two-port RAM interface <highlight><bold>312</bold></highlight> implemented on the security device <highlight><bold>310</bold></highlight>, and providing only a limited means for the host software to interact with the security device. </paragraph>
<paragraph id="P-0210" lvl="0"><number>&lsqb;0210&rsqb;</number> In particular, it is not possible for host software to observe or modify data in the local RAM <highlight><bold>334</bold></highlight>, firmware <highlight><bold>336</bold></highlight>, or network coprocessor <highlight><bold>338</bold></highlight>. This is because the only signal lines that extend from the host bus onto the security device are those address and data lines used to read and write data into the host port <highlight><bold>314</bold></highlight> of the two port RAM <highlight><bold>312</bold></highlight>. There is no path onto the local bus <highlight><bold>320</bold></highlight>. </paragraph>
<paragraph id="P-0211" lvl="0"><number>&lsqb;0211&rsqb;</number> The operation of the two-port RAM interface for packet transmission will now be discussed. The host <highlight><bold>300</bold></highlight> device driver builds a packet for transmission and writes the packet into a portion of the two port RAM. However, the exact memory layout of the two-port RAM is irrelevant to the security provided by the system, and other suitable configurations may be used. </paragraph>
<paragraph id="P-0212" lvl="0"><number>&lsqb;0212&rsqb;</number> The host <highlight><bold>300</bold></highlight> device driver writes to a memory location in the two-port RAM that causes an interrupt <highlight><bold>326</bold></highlight> to be signaled to the CPU <highlight><bold>332</bold></highlight> of the security device. </paragraph>
<paragraph id="P-0213" lvl="0"><number>&lsqb;0213&rsqb;</number> The firmware <highlight><bold>336</bold></highlight> of the security device contains code to map the portion of two port RAM <highlight><bold>312</bold></highlight> out of host memory and into the security device&apos;s memory. When this occurs, the memory is no longer visible to the host (typically, a bus error occurs if it is accessed) and is visible to the security devices firmware. Thus, when the transmit buffer is mapped out of host memory, a new buffer is mapped into host memory. Therefore the host always has a buffer to which he has access. The device will not map the buffer out of host space until it can process the buffer. </paragraph>
<paragraph id="P-0214" lvl="0"><number>&lsqb;0214&rsqb;</number> Next, the firmware <highlight><bold>336</bold></highlight> accesses the data by memory reads using the local address <highlight><bold>322</bold></highlight> and data <highlight><bold>324</bold></highlight> lines to the two port RAM. The packet is moved from the two port RAM area into local RAM space via a hardware assisted block move mechanism. The firmware <highlight><bold>336</bold></highlight> running on the local CPU <highlight><bold>332</bold></highlight> then performs MAC, DAC, encryption and integrity functions, and may hand the packet to the network coprocessor <highlight><bold>338</bold></highlight> for transmission. All of this is invisible to software running on the host CPU <highlight><bold>300</bold></highlight>. </paragraph>
<paragraph id="P-0215" lvl="0"><number>&lsqb;0215&rsqb;</number> The operation for packet reception is similar. The network coprocessor <highlight><bold>338</bold></highlight> receives a packet, places it in local RAM, and the firmware <highlight><bold>336</bold></highlight> on the local CPU performs MAC, DAC, decryption, and packet integrity functions. If the packet is valid for the host, the firmware <highlight><bold>336</bold></highlight> places the packet in the two port RAM via memory writes using the address <highlight><bold>322</bold></highlight> and data <highlight><bold>324</bold></highlight> lines. Again, this goes into an available portion of the two port RAM using conventions established by the security device and the host device driver. </paragraph>
<paragraph id="P-0216" lvl="0"><number>&lsqb;0216&rsqb;</number> When the packet is fully placed into this memory, the firmware maps the memory buffer into host memory (thus making it visible to the host device driver) and writes a memory location that causes the two port RAM interface circuitry to assert an interrupt signal <highlight><bold>308</bold></highlight> to the host CPU. </paragraph>
<paragraph id="P-0217" lvl="0"><number>&lsqb;0217&rsqb;</number> The key points of this interface are: (1) host signal lines do not extend into the security device board, and so the only means for the host to interact with the security device is via this two port RAM interface. (2) A particular buffer in the two port RAM is invisible to the host while the security device is processing its contents. </paragraph>
<paragraph id="P-0218" lvl="0"><number>&lsqb;0218&rsqb;</number> The CPU of the security device has access to all memory on the NIC board at all times, even when a particular buffer in the two port RAM is mapped into host memory. However, when the buffer is mapped into the security device&apos;s address space, the host computer has no access to the buffer. </paragraph>
<paragraph id="P-0219" lvl="7"><number>&lsqb;0219&rsqb;</number> General Operation </paragraph>
<paragraph id="P-0220" lvl="0"><number>&lsqb;0220&rsqb;</number> The overall operation of the system will now be discussed with reference to <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. The first step is to configure the network. A security officer <highlight><bold>502</bold></highlight> at the network security center <highlight><bold>500</bold></highlight> interacts via menus at the security center console <highlight><bold>504</bold></highlight> to define security devices (<highlight><bold>510</bold></highlight>, <highlight><bold>520</bold></highlight>), principals (<highlight><bold>512</bold></highlight>, <highlight><bold>522</bold></highlight>), classification levels, etc. This includes profiles for principals, which includes associations such as the ability of host <highlight><bold>514</bold></highlight> to transmit to host <highlight><bold>524</bold></highlight>. </paragraph>
<paragraph id="P-0221" lvl="0"><number>&lsqb;0221&rsqb;</number> The security officer <highlight><bold>502</bold></highlight> also specifies the authentication method (card, password, etc.) to be used by the principal. If the principals are to use an authentication card, the security officer creates individual authentication cards at the card reader <highlight><bold>506</bold></highlight> and gives these cards to principals (<highlight><bold>512</bold></highlight>, <highlight><bold>522</bold></highlight>). During this process, the security officer <highlight><bold>502</bold></highlight> creates an initialization card for security devices (<highlight><bold>510</bold></highlight>, <highlight><bold>520</bold></highlight>) and physically goes to that site to read in the card via card readers (<highlight><bold>516</bold></highlight>, <highlight><bold>526</bold></highlight>) in order to complete installation of the devices. </paragraph>
<paragraph id="P-0222" lvl="0"><number>&lsqb;0222&rsqb;</number> Each principal goes to the location of the security device (<highlight><bold>510</bold></highlight>, <highlight><bold>520</bold></highlight>) and initiates the authentication method specified for the principal. Different principals may be configured to use different means, for example, principal <highlight><bold>512</bold></highlight> may be configured to use an authentication card and principal <highlight><bold>522</bold></highlight> may be configured to use a password. </paragraph>
<paragraph id="P-0223" lvl="0"><number>&lsqb;0223&rsqb;</number> When an authentication card is required, the principal <highlight><bold>512</bold></highlight> inserts the authentication card into the card reader <highlight><bold>516</bold></highlight>, which is connected to the security device <highlight><bold>510</bold></highlight>. The card is read by the security device <highlight><bold>510</bold></highlight>. Principal <highlight><bold>522</bold></highlight>, which has a password instead of a card, types the password at the console of host <highlight><bold>528</bold></highlight>. The host transfers the password to the security device <highlight><bold>524</bold></highlight> via a trusted path. </paragraph>
<paragraph id="P-0224" lvl="0"><number>&lsqb;0224&rsqb;</number> The device will be defined to support a specified authentication type. The principal who is attempting to use the device must have the appropriate authentication data. The security devices independently transfer the authentication data to the security center <highlight><bold>500</bold></highlight> via an encrypted (nominally Triple DES, although other methods are conceivable) connection. The security center replies to the security device, listing the profiles that may be selected by the principal. This may be anywhere from a single profile up to a hundred profiles. </paragraph>
<paragraph id="P-0225" lvl="0"><number>&lsqb;0225&rsqb;</number> Each principal (independently) selects the desired profile at the keypad of the local card reader (<highlight><bold>516</bold></highlight>, <highlight><bold>526</bold></highlight>). Each security device (<highlight><bold>510</bold></highlight>, <highlight><bold>520</bold></highlight>) sends this information to the security center <highlight><bold>500</bold></highlight> via an encryption connection. </paragraph>
<paragraph id="P-0226" lvl="0"><number>&lsqb;0226&rsqb;</number> There is not an initial communication without the selected profile between the device and the controller. The device gathers the required data and then sends all of the information via the encrypted channel to the controller. The security center responds to the security device with the security windows to be used for MAC and the security associations to be used for DAC. Assuming that security devices (<highlight><bold>510</bold></highlight>, <highlight><bold>520</bold></highlight>) permit associations between hosts (<highlight><bold>518</bold></highlight>, <highlight><bold>528</bold></highlight>), the security devices negotiate traffic keys between the two devices (based on a shared secret value downloaded from the security center). The shared secret is only one of the possible mechanisms. The approved mechanisms are defined in the IPSec standards. </paragraph>
<paragraph id="P-0227" lvl="0"><number>&lsqb;0227&rsqb;</number> At this point the two hosts (<highlight><bold>518</bold></highlight>, <highlight><bold>528</bold></highlight>) may communicate via their respective security devices, provided that communications are consistent with the predefined security windows (MAC). </paragraph>
<paragraph id="P-0228" lvl="7"><number>&lsqb;0228&rsqb;</number> Example Embodiment </paragraph>
<paragraph id="P-0229" lvl="0"><number>&lsqb;0229&rsqb;</number> Turning to <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, an example of a local area network <highlight><bold>10</bold></highlight> is shown connected to a network <highlight><bold>30</bold></highlight>. The LAN <highlight><bold>10</bold></highlight> comprises a first VPN <highlight><bold>80</bold></highlight>, and a second VPN <highlight><bold>82</bold></highlight>. The VPNs <highlight><bold>80</bold></highlight>, <highlight><bold>82</bold></highlight>, are established by a security officer that sets up permitted associations between hosts based on IP addresses. The VPNs are collections of host IP addresses that are permitted to communicate. Hosts on the second VPN <highlight><bold>82</bold></highlight> are invisible to hosts which are not directly addressable. This centralized configuration of secure VPNs is enforced by the respective security devices <highlight><bold>18</bold></highlight> of each host. </paragraph>
<paragraph id="P-0230" lvl="0"><number>&lsqb;0230&rsqb;</number> In the example set forth in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, working from the left of the page, a first host <highlight><bold>86</bold></highlight> is configured to operate on both the first and second VPNs <highlight><bold>80</bold></highlight>, <highlight><bold>82</bold></highlight>. The third and fourth hosts, <highlight><bold>90</bold></highlight>, <highlight><bold>92</bold></highlight>, only have the ability to operate on either the first VPN <highlight><bold>80</bold></highlight> or the second VPN <highlight><bold>82</bold></highlight>, respectively, but cannot access both VPNs. This is merely a matter of defining the IP associations permitted for this host. </paragraph>
<paragraph id="P-0231" lvl="0"><number>&lsqb;0231&rsqb;</number> The second host <highlight><bold>88</bold></highlight> has a security device <highlight><bold>18</bold></highlight> that permits the host <highlight><bold>88</bold></highlight> to operate either on the second VPN <highlight><bold>82</bold></highlight> or on an untrusted line <highlight><bold>84</bold></highlight>. This ability to switch between a trusted network <highlight><bold>82</bold></highlight> and an untrusted network <highlight><bold>84</bold></highlight> is defined by the security officer at the NSC by defining multiple permitted profiles for a principal. When the principal authenticates at the security device <highlight><bold>18</bold></highlight> associated with this host <highlight><bold>88</bold></highlight>, the principal determines which of the permitted profiles is to be used. </paragraph>
<paragraph id="P-0232" lvl="0"><number>&lsqb;0232&rsqb;</number> According to our example, the profile for the principal operating at the second host <highlight><bold>88</bold></highlight> is twofold. First, for the second VPN <highlight><bold>82</bold></highlight>, the host <highlight><bold>88</bold></highlight> is permitted to transmit and receive associations with the first host <highlight><bold>86</bold></highlight> and with the fourth host <highlight><bold>92</bold></highlight>. A security window for MAC is also defined. A security window is always used, except when the security device is operating in a bypass mode to unprotected hosts, such as hosts without a security device. Secondly, when operating on network <highlight><bold>84</bold></highlight>, the second host <highlight><bold>88</bold></highlight> is permitted to communicate with any unprotected host (not shown) anywhere on the Internet. </paragraph>
<paragraph id="P-0233" lvl="0"><number>&lsqb;0233&rsqb;</number> Although the principal at host <highlight><bold>88</bold></highlight> may switch between the second trusted VPN <highlight><bold>82</bold></highlight>, and an untrusted path <highlight><bold>84</bold></highlight>, the principal may only use one profile at a time. Thus, the host <highlight><bold>88</bold></highlight> may connect to either the untrusted network <highlight><bold>84</bold></highlight> or the trusted network <highlight><bold>82</bold></highlight> to communicate only with hosts <highlight><bold>86</bold></highlight>, <highlight><bold>92</bold></highlight>. Thus, it is impossible for a host on the Internet to route packets through hosts <highlight><bold>88</bold></highlight> and back out on the trusted network <highlight><bold>82</bold></highlight>, perhaps to attack the fourth host <highlight><bold>92</bold></highlight>. </paragraph>
<paragraph id="P-0234" lvl="0"><number>&lsqb;0234&rsqb;</number> If the principal has a profile that permits communication with unprotected hosts (such as hosts that do not have a security device <highlight><bold>18</bold></highlight>), the security device operates in a &ldquo;bypass&rdquo; mode. In the &ldquo;bypass&rdquo; mode, the security device does not provide encryption but does implement MAC and DAC. Thus, MAC and DAC are always performed, though encryption may not be performed depending on the destination node. </paragraph>
<paragraph id="P-0235" lvl="0"><number>&lsqb;0235&rsqb;</number> Further to this example, if the second host <highlight><bold>88</bold></highlight> is an untrusted host and it is operating at a secret level, then the memory of the second host <highlight><bold>88</bold></highlight> before permitting connections to or from any other untrusted host. This is possible, for instance, by switching disk drives, such as a slide-in drive, and power-cycling the host to clear memory. </paragraph>
<paragraph id="P-0236" lvl="0"><number>&lsqb;0236&rsqb;</number> Unlike the second host <highlight><bold>88</bold></highlight>, the third host <highlight><bold>90</bold></highlight> is configured (by the user&apos;s profile) to be able to connect over the Internet <highlight><bold>30</bold></highlight> to a remote host <highlight><bold>94</bold></highlight>, as well as to the first host <highlight><bold>86</bold></highlight> via line <highlight><bold>80</bold></highlight>. Simultaneously, the first host <highlight><bold>86</bold></highlight> may be connected to the fourth host <highlight><bold>92</bold></highlight> via line <highlight><bold>82</bold></highlight>. </paragraph>
<paragraph id="P-0237" lvl="7"><number>&lsqb;0237&rsqb;</number> Alternative Embodiments </paragraph>
<paragraph id="P-0238" lvl="0"><number>&lsqb;0238&rsqb;</number> The preferred embodiment is for networks including multi-user servers, where the principal is not necessarily a user of the attached host. However, the invention may be used in any suitable network environment, such as one having single-user workstations where the principal is the current user of the workstation. The security devices in the single-user workstation network may be configured so that the classification of the host is related to the administrative clearance of the user/principal operating at the host. The network would support multi-level security for communications between individual users. </paragraph>
<paragraph id="P-0239" lvl="0"><number>&lsqb;0239&rsqb;</number> Although the preferred embodiment is also for a network having classified information, the invention has uses for unclassified environments as well. As implemented in an unclassified network, for instance, instead of establishing different hierarchical security levels, various non-hierarchical descriptors may be defined by the network security officer. Also, a combination of levels and descriptors may be defined. </paragraph>
<paragraph id="P-0240" lvl="0"><number>&lsqb;0240&rsqb;</number> In the present embodiment, for example, the security device may be used to monitor and distribute incoming and outgoing information in accordance with the various descriptors. Principals are assigned profiles that define permitted associations and the like. Each principal may be assigned one or more profiles. The principal may log in at any host and select from the one or more profiles. The selected user profile is then used to define the permitted communications for that host. Accordingly, a principal may use any host to connect to the network, and select a user profile to establish the parameters for that connection. </paragraph>
<paragraph id="P-0241" lvl="0"><number>&lsqb;0241&rsqb;</number> In yet another alternative embodiment, the security device <highlight><bold>18</bold></highlight> may be eliminated altogether and the security mechanisms implemented by software located at the computer (or as otherwise suitable). Thus, for instance, the software is configured to implement encryption, DAC and MAC for all incoming and outgoing communications. In addition, the software establishes and implements user profiles, association lists, and audit events, as defined by the network security officer. </paragraph>
<paragraph id="P-0242" lvl="0"><number>&lsqb;0242&rsqb;</number> The foregoing descriptions and drawings should be considered as illustrative only of the principles of the invention. The invention may be configured in a variety of manners and is not limited by the design of the preferred embodiment. Numerous applications of the present invention will readily occur to those skilled in the art. Therefore, it is not desired to limit the invention to the specific examples disclosed or the exact construction and operation shown and described. Rather, all suitable modifications and equivalents may be resorted to, falling within the scope of the invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">We claim: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A security device for connecting a host computer from a host bus to a computer network, the security device comprising a local bus, a network interface connecting said local bus to the computer network, and a two-port memory device connecting said local bus to the host bus. </claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The security device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the two-port memory device has two bus interfaces, a first interface for communicating with the host bus and a second interface for communicating with the local bus. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The security device of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein information to be passed between the host bus and the local bus can not be simultaneously located on the first interface and the second interface. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The security device of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein information to be transmitted from a sending host to a receiving host is written from the host bus to the first interface, then read from the first interface to the second interface. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The security device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the two-port memory device comprises a two-port RAM. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The security device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising an internal system memory connected to said local bus for storing information for said firmware and said interface. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The security device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising a cipher unit connected to the local bus. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The security device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising an authentication interface unit for authenticating a computer user. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The security device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said interface comprises a network coprocessor. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The security device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the network comprises a local area, Ethernet or token ring network. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The security device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising a central processing unit for implementing firmware. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The security device of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein security is implemented at a network layer of protocol hierarchy. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A method for controlling a sending computer to transmit information to a receiving computer over a computer network, the method comprising: 
<claim-text>receiving the information to be transmitted to the receiving computer from the sending computer; </claim-text>
<claim-text>implementing security mechanisms to determine whether communication is authorized from the sending computer to the receiving computer and, if not, then terminating the transmission of information and, if so, then encrypting the information to be transmitted; and, </claim-text>
<claim-text>transmitting the encrypted information to the receiving computer over the computer network. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the step of implementing security mechanisms comprises the steps of determining if the receiving computer is in a transmit list and consistent with a transmit security window and, if both conditions are not satisfied then terminating the transmission of information, otherwise encrypting the information to be transmitted. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the steps of determining if the receiving computer is in a transmit list and consistent with a transmit security window comprises the steps of performing discretionary access control and mandatory access control, respectively. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, further comprising the step of generating an audit in addition to terminating the flow of information. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein security is implemented at a network layer of protocol hierarchy. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, the method being implemented by security devices, one security device connected to each one the sending computer and the receiving computer. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A method for controlling a receiving computer to receive information transmitted from a transmitting computer over a computer network, the method comprising: 
<claim-text>receiving the information to be received by the receiving computer from the computer network; </claim-text>
<claim-text>implementing security mechanisms to determine whether communication is authorized from the sending computer to the receiving computer and, if not, then terminating the transmission of information and, if so, then decrypting the information to be received; and, </claim-text>
<claim-text>transmitting the decrypted information to the receiving computer for reception thereof. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein the step of implementing security mechanisms comprises the steps of determining if the transmitting computer is in a receive list and consistent with a receive security window and, if both conditions are not satisfied then terminating the transmission of information, otherwise decrypting the information to be received. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the steps of determining if the transmitting computer is in a receive list and consistent with a receive security window comprises the steps of performing discretionary access control and mandatory access control, respectively. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, further comprising the step of generating an audit in addition to terminating the flow of information. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The method <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein security is implemented at a network layer of protocol hierarchy. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, the method being implemented by security devices, one security device connected to each one the sending computer and the receiving computer. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A secure network having a plurality of host computers accessible to users and connected to a network medium that has access to an untrusted line, the secure network comprising: 
<claim-text>a network security controller for enabling a security officer to generate at least one user profile for each user, each user profile defining at least one destination which the user is authorized to access; and, </claim-text>
<claim-text>security devices connected to the network medium for receiving the user profiles generated at the network security controller, each security device associated with one host computer, each security device having an authorization device for authorizing users at the associated host computer, the security device permitting the authorized user, via the associated host computer, to select a user&apos;s profile associated with the user and for restricting access of the host computer to the at least one destination defined in the selected user&apos;s profile. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The network of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the at least one destination comprises at least one other host computer of the network or the untrusted line. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The network of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, the security device implementing security mechanisms when the host computer connects to a trusted destination. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The network of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, the security device not implementing security mechanisms when the host computer connects to an untrusted destination. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The network of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the untrusted line comprises the Internet. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The network of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein a user cannot simultaneously communicate with a trusted destination and an untrusted destination. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The network of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein a user is prevented from simultaneously connecting to destinations having different security levels. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The network of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein a user can only select one profile at a time. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The network of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the user profiles define virtual private networks of communication comprising subsets of host computers. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The network of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein security is implemented at a network layer of protocol hierarchy. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The network of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein at least one user profile has only one destination. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The network of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the destination in a user&apos;s profile correspond to a level of security granted the user. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The network of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the security devices are integrated with the associated host computer. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. A method for operating a network having a plurality of host computers accessible to users and connected to a network medium that has access to an untrusted line, the method comprising: 
<claim-text>generating at least one user profile for each user, each user profile defining at least one destination which the user is authorized to access; </claim-text>
<claim-text>authorizing a user at a host computer; </claim-text>
<claim-text>determining, at the host computer, the at least one user is profile associated with the authorized user; </claim-text>
<claim-text>permitting, at the host computer, the authorized user to select a user&apos;s profile associated with the user; and </claim-text>
<claim-text>restricting access of the host computer to the at least one destination defined in the selected user&apos;s profile. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein the at least one destination comprises at least one other host computer of the network or the untrusted line. </claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, further comprising the step of implementing a security mechanism when the host computer connects to a trusted destination. </claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, further comprising the step of not implementing security mechanisms when the host computer connects to an untrusted destination. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein the untrusted line comprises the Internet. </claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein a user cannot simultaneously communicate with a trusted destination and an untrusted destination. </claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein a user is prevented from simultaneously connecting to destinations having different security levels. </claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein a user can only select one profile at a time. </claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein the user profiles define virtual private networks of communication comprising subsets of host computers. </claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein security is implemented at a network layer of protocol hierarchy. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein at least one user profile has only one destination. </claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein the destination in a user&apos;s profile correspond to a level of security granted the user. </claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. A multi-level secure network having a plurality of host computers accessible to users and connected to a network medium that has access to an untrusted line, the secure network comprising a security device coupled between at least one host computer and the network medium which operates at a network layer communications protocol and a network security controller for controlling the security device to establish connections to the network medium. </claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. The multi-level secure network of claim <highlight><bold>50</bold></highlight>, wherein the network security controller audits events. </claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. The multi-level secure network of claim <highlight><bold>50</bold></highlight>, wherein the security device prevents simultaneous connection to a trusted line and an untrusted line. </claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. The multi-level secure network of claim <highlight><bold>50</bold></highlight>, wherein the security device prevents simultaneous connection between lines of different security levels.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>10</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005331A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005331A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005331A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005331A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005331A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005331A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005331A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005331A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030005331A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030005331A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030005331A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030005331A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030005331A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030005331A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030005331A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
