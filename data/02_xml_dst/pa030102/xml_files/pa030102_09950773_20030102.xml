<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004937A1-20030102-D00000.TIF SYSTEM "US20030004937A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00001.TIF SYSTEM "US20030004937A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00002.TIF SYSTEM "US20030004937A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00003.TIF SYSTEM "US20030004937A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00004.TIF SYSTEM "US20030004937A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00005.TIF SYSTEM "US20030004937A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00006.TIF SYSTEM "US20030004937A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00007.TIF SYSTEM "US20030004937A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00008.TIF SYSTEM "US20030004937A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00009.TIF SYSTEM "US20030004937A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00010.TIF SYSTEM "US20030004937A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00011.TIF SYSTEM "US20030004937A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00012.TIF SYSTEM "US20030004937A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00013.TIF SYSTEM "US20030004937A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00014.TIF SYSTEM "US20030004937A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00015.TIF SYSTEM "US20030004937A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00016.TIF SYSTEM "US20030004937A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00017.TIF SYSTEM "US20030004937A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00018.TIF SYSTEM "US20030004937A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00019.TIF SYSTEM "US20030004937A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00020.TIF SYSTEM "US20030004937A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00021.TIF SYSTEM "US20030004937A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00022.TIF SYSTEM "US20030004937A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00023.TIF SYSTEM "US20030004937A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00024.TIF SYSTEM "US20030004937A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030004937A1-20030102-D00025.TIF SYSTEM "US20030004937A1-20030102-D00025.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004937</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09950773</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010913</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F007/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>707</class>
<subclass>003000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method and business process to maintain privacy in distributed recommendation systems</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>09950773</doc-number>
<kind-code>A1</kind-code>
<document-date>20010913</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09854635</doc-number>
<document-date>20010515</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</continuation-in-part-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Jukka-Pekka</given-name>
<family-name>Salmenkaita</family-name>
</name>
<residence>
<residence-non-us>
<city>Helsinki</city>
<country-code>FI</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Antti</given-name>
<family-name>Sorvari</family-name>
</name>
<residence>
<residence-non-us>
<city>Itasalmi</city>
<country-code>FI</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>MORGAN &amp; FINNEGAN, L.L.P.</name-1>
<name-2></name-2>
<address>
<address-1>345 Park Avenue</address-1>
<city>New York</city>
<state>NY</state>
<postalcode>10154-0053</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A distributed recommendation system and method are disclosed that provides greater privacy for the user&apos;s private data. The method distributes the tasks of a recommendation system between wireless devices and network servers, so as to protect the privacy of end users. The system and method provide greater privacy for context-sensitive, adaptive, user interfaces for Internet service usage by wireless devices. The user&apos;s wireless device sends a current context-activity pair to a network server in response to either the user&apos;s selection of an activity or automatically. The user&apos;s wireless device includes a service history log. The activities stored in the service history log include past recommendations made by the network server, past services used, prestored service preferences, and special requested service requirements. Context-activity pair information sent to the server can include any combination of these activities. The server then responds an appropriate recommendation. As the system makes new recommendations to users in response to context-activity pairs submitted by their wireless devices, the server gathers the new context-activity pairs and recommendations and adds them to its context-activity pair database. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is a continuation-in-part of U.S. patent application Ser. No. 09/854,635, filed May 15, 2001, entitled &ldquo;Method And Business Process To Maintain Privacy In Distributed Recommendation Systems&rdquo;, assigned to Nokia Corp.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> 1. Field of the Invention: </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The invention disclosed broadly relates to methods for providing Internet services and more particularly relates to improvements in mobile device accessing of Internet recommendation services. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> 2. Background Art: </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Mobile phones and wireless personal digital assistants (PDAS) are able to access the Internet using I-Mode protocol, mobile IPv6 protocol or the Wireless Application Protocol (WAP). Wireless devices can now access Internet applications such as headline news, exchange rates, sports results, stock quotes, weather forecasts, multilingual phrase dictionaries, personal online calendars, online travel and banking services, or download distinctive ringing tones. Broadband wireless networks make it possible for wireless devices to exchange multimedia messages that combine conventional text with much richer content types, such as photographs, images, voice clips, and video clips. Wireless devices can be used to pay bills online using the wireless device as a virtual wallet. Wireless devices can deliver useful and informative advertising and transaction services from online merchants. Wireless devices now also provide entertainment services, such as interactive adventure games, quizzes, and chess tournaments. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Recommendation systems use information of the activity histories or preferences of numerous users to produce useful recommendations for a single user. Existing recommendation systems use collaborative filtering methods to produce recommendations for an individual user by analyzing the actions and preferences of a group of individuals. As the use of information technology has become widespread in all areas of human life, the concerns of individuals over their privacy have increased. Specifically, most distributed recommendation systems were developed for landline Internet services, and the privacy concerns will significantly increase as the services are adopted for use by more personal, wireless devices. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> What is needed is a distributed recommendation system that provides greater privacy for the user&apos;s private data. What is needed is a way to distribute the tasks of a recommendation system between wireless devices and network servers in a way that protects the privacy of end users. What is needed is a way of creating greater privacy for context-sensitive, adaptive, user interfaces for Internet service usage by wireless devices. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The invention is a distributed recommendation system that provides enhanced privacy for the user&apos;s private data. The invention distributes the tasks of a recommendation system between wireless devices and network servers, so as to protect the privacy of end users. The invention provides enhanced privacy for context-sensitive, adaptive, user interfaces for Internet service usage by wireless devices. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The invention enables a mobile phone or wireless PDA to use context inference techniques to sense the user&apos;s environment and in response, to provide a recommendation to the user that is appropriate to the user&apos;s perceived environment. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> One aspect of the invention is a method that includes the steps of receiving sensor signals characterizing a current environment of a user&apos;s wireless device; processing the sensor signals with a context inference engine; outputting a current context result from the processing by context inference engine; and providing a recommendation to the user in response to the current context result. The step of providing a recommendation is embodied as programmed instructions executed in a network server. In accordance with the invention, context-activity pair information is sent to the server without any user identification. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> As the user carries about the wireless device, its sensors automatically and continuously measure the geographic location and context of the device. The wireless device periodically transmits the current context in a message over the wireless network to the network server. There are several types of messages, each of which is distinguished by its own unique op code. When the wireless device sends a message containing the current context, the network server parses the op code and responds with information corresponding to the op code, the information being related to the current context. If the op code indicates that the message is a spontaneous message which is automatically transmitted by the device, then the network server responds with information such as a service category menu or prepaid advertising of local services related to the current context. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> In another aspect of the invention, the user&apos;s wireless device includes a service history log. The activities stored in the service history log are divided into two major categories: past recommendations made by the network server and services. The category of services is broken into three sub-categories: past services used, prestored service preferences, and special requested service requirements. The term &ldquo;activities&rdquo; refers to any of these four categories and sub-categories. The service history log stores four component databases: &lsqb;1&rsqb; past recommendations and context, &lsqb;2&rsqb; past services used and context, &lsqb;3&rsqb; prestored service preferences, and &lsqb;4&rsqb; special requested service requirements. Context-activity pair information sent to the server can include any combination of these activities. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The wireless device can automatically send messages with a unique op code designating that the message is an automatically transmitted message containing the device&apos;s past recommendations and context or the past services used and context, in addition to the current context. The network server parses the op code and uses the device&apos;s past recommendations and context or past services used and context to find similar recommendations in its database. The network server then responds with information customized to the user&apos;s perceived interests, the information being related to the current context. The database in the network server can include recommendations that have been made in the past to other users in similar contexts. The database can also include services that have actually been used in the past by other users in similar contexts. The network server can respond to the current user with recommendations based on past recommendations made to other users and past services used by other users. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The sensor signals characterizing the current environment of the user&apos;s wireless device can be, for example, positioning signals, touch signals, audio signals, compass signals, ambient light signals, ambient temperature signals, three-axis acceleration signals, time signals, or the device&apos;s operational mode signals. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> In another aspect of the invention, the step of providing a recommendation is embodied as programmed instructions executed within a separate network server in response to context-activity pair signals received from the user&apos;s wireless device. A context-activity pair database is maintained by the server which associates context-activity pair information with appropriate recommendations made in the past to many users. As the system makes new recommendations to users in response to context-activity pairs submitted by their wireless devices, the server gathers the new recommendations and adds them to its context-activity pair database. No user personal data is included in the context-activity pair database. In this manner, the variety, quality and pertinence of the recommendations in the context-activity pair database grows as the recommendation system is used. As an added benefit, the server compiles statistical usage information about the recommendations and stores this in the context-activity pair database. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Another aspect of the invention is providing the current context-activity pair to the server in response to either the user&apos;s selection of an activity or automatically, and then receiving an appropriate recommendation from the server. In accordance with the invention, recommendations received from the server by the wireless device are filtered to identify new or significant information. The filtering can be done using statistical usage information associated with the recommendations, user ratings associated with the recommendations, or other factors distinguishing one recommendation from another. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> In an alternate embodiment of the invention, the current context information accompanying the activity information sent by the wireless device to the network server, is a metadata representation of the sensor signals characterizing the current state of the wireless device. A context inference engine in the network server is embodied as programmed instructions executed within the server. Where the processing power or memory capacity of the wireless device may be limited, the network server can make a more accurate determination of the mobile user&apos;s current context. The resultant current context computed by the server and the activity information received from the wireless device constitute the current context-activity pair. The context-activity pair database maintained by the server associates current context-activity pair with appropriate recommendations made in the past to many users. As the system makes new recommendations to users in response to context-activity pairs submitted by their wireless devices, the server gathers the new recommendations and adds them to its context-activity pair database. No user personal data is included in the context-activity pair database. In this manner, the variety, quality and pertinence of the recommendations in the database grows as the recommendation system is used. As an added benefit, the server compiles statistical usage information about the recommendations and stores this in the context-activity pair database.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">DESCRIPTION OF THE FIGURES </heading>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a network diagram of the invention, showing an example relationship between the user&apos;s portable wireless device, the protocol gateway to the Internet, the network server, a third party service provider, the Universal Description, Discovery and Integration (UDDI) registry, and a plurality of web sites. The Recommendation Web Services menu is shown in the browser of the wireless device. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 1A and 1B</cross-reference> show the user&apos;s wireless device displaying the SELECT SERVICE CATEGORY sub-menu and the ENTER SPECIAL SERVICE REQUIREMENTS sub-menu, respectively. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 1C and 1D</cross-reference> show the user&apos;s wireless device displaying the CHANGE STORED SERVICE PREFERENCES sub-menu and the CHANGE PRIVACY FILTER SETTINGS sub-menu, respectively. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 1E and 1F</cross-reference> show the user&apos;s wireless device displaying the recommendation results, for recommendations with no age restriction filter and for recommendations with a filter for family oriented subject matter, respectively. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates the service history log <highlight><bold>110</bold></highlight>, with past recommendation and context files <highlight><bold>227</bold></highlight> and with past service used and context files <highlight><bold>235</bold></highlight>. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> is a network process diagram showing the interaction of the user&apos;s device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2B</cross-reference> is a flow diagram of a process in the network server <highlight><bold>140</bold></highlight> to respond to an updated menu request message from the device <highlight><bold>100</bold></highlight>, by compiling an updated menu which is returned to the device <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2C</cross-reference> is a flow diagram of a process in the wireless device <highlight><bold>100</bold></highlight> to display the updated menu on the device&apos;s browser and process the user&apos;s request for a recommendation by gathering past received recommendations from the service history log and pairing them with the current context of the device. The context-activity pair is then sent in a recommendation request message to the network server <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2D</cross-reference> is a flow diagram of a process in the network server <highlight><bold>140</bold></highlight> to respond to the recommendation request message from the device <highlight><bold>100</bold></highlight>, by accessing recommendations from the database corresponding to the current context, finding recommendations among those accessed from the database that are similar to the past received recommendations provided in the recommendation request message. The found recommendations are then sorted in accordance with the user&apos;s service preferences also provided in the recommendation request message. Then the resultant recommendations are returned to the device <highlight><bold>100</bold></highlight> in a recommendation response message. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2E</cross-reference> is a flow diagram of a process in the wireless device <highlight><bold>100</bold></highlight> to filter the recommendations received in the recommendation response message and display the filtered recommendations on the device&apos;s browser. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2F</cross-reference> is a flow diagram of a process in the network server <highlight><bold>140</bold></highlight> to respond to the recommendation request message from the device <highlight><bold>100</bold></highlight>, by accessing recommendations from the database corresponding to the current context, finding recommendations among those accessed from the database that are similar to the past services used provided in the recommendation request message. The found recommendations are then sorted in accordance with the user&apos;s service preferences also provided in the recommendation request message. Then the resultant recommendations are returned to the device <highlight><bold>100</bold></highlight> in a recommendation response message. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2G</cross-reference> is a flow diagram of a process in the wireless device <highlight><bold>100</bold></highlight> to filter the recommendations received in the recommendation response message and display the filtered recommendations on the device&apos;s browser. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a functional block diagram of the wireless device <highlight><bold>100</bold></highlight>, showing its various components and programs. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> is a functional block diagram of the wireless device <highlight><bold>100</bold></highlight>, the server <highlight><bold>140</bold></highlight>, and the web server <highlight><bold>160</bold></highlight>, and their interaction when exchanging a metadata vector <highlight><bold>138</bold></highlight> and privacy control data <highlight><bold>150</bold></highlight> and when exchanging a context-activity pair and associated recommendations. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3B</cross-reference> is a network process flow diagram of the interaction of the wireless device <highlight><bold>100</bold></highlight>, network server <highlight><bold>140</bold></highlight>, and web server <highlight><bold>160</bold></highlight> when carrying out the determination of the current context of the wireless device <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3C</cross-reference> is a network process flow diagram of the interaction of the wireless device <highlight><bold>100</bold></highlight> and network server <highlight><bold>140</bold></highlight> when the user&apos;s wireless device with a requested context-activity pair which is sent to the network server and the resultant service recommendations received back from the server. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3D</cross-reference> is a network process flow diagram of an alternate embodiment of the invention, in which the context-activity pair information <highlight><bold>190</bold></highlight> sent by the wireless device to the network server, includes the metadata vector <highlight><bold>138</bold></highlight>. The network server can then assist the wireless device in determining the mobile device&apos;s current context, as well as the server sending the resultant service recommendations back to the wireless device. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3E</cross-reference> is a network process flow diagram of an alternate embodiment of the invention, in which Step <highlight><bold>326</bold></highlight>&prime; sends to recommendation algorithm <highlight><bold>166</bold></highlight> in server <highlight><bold>140</bold></highlight>, a sample of representative context-activity pairs filtered by algorithm <highlight><bold>112</bold></highlight> and related service history items from log <highlight><bold>110</bold></highlight> as a set of context-activity pairs and related service history items. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a functional block diagram of the network server <highlight><bold>140</bold></highlight>, showing the memory storing the application services software programs needed to perform the operations of the invention. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 5A and 5B</cross-reference> show an alternate embodiment of the user&apos;s wireless device with the UPDATE PRIVACY FEATURES: sub-menu of the Recommendation Web Services menu. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 5C and 5D</cross-reference> show an alternate embodiment of the user&apos;s wireless device with the MANAGE CONTEXT-ACTIVITY PROFILE sub-menu of the Recommendation Web Services menu. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 5E and 5F</cross-reference> show an alternate embodiment of the user&apos;s wireless device with the REQUEST A RECOMMENDATION sub-menu of the Recommendation Web Services menu. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 5G and 5H</cross-reference> show two examples of the alternate embodiment of user&apos;s wireless device with a requested context-activity pair which is sent to the network server and the resultant service recommendations received back from the server. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6A</cross-reference> shows an alternate embodiment of the context-pairs and services database <highlight><bold>192</bold></highlight> in the network server <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6B</cross-reference> shows an alternate embodiment of the context-pairs and service history log <highlight><bold>110</bold></highlight> in the device <highlight><bold>100</bold></highlight>.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DISCUSSION OF THE PREFERRED EMBODIMENT: </heading>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> The portable wireless device <highlight><bold>100</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> includes a context sensitive web services feature that enables the wireless device to use context inference techniques to sense the user&apos;s environment and in response, to provide recommendations to the user that are appropriate to the user&apos;s perceived environment. The portable wireless device <highlight><bold>100</bold></highlight> offloads to the network server <highlight><bold>140</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, some of the computationally intensive computing necessary in context inference techniques. <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a network diagram that shows an example relationship between the user&apos;s portable wireless device <highlight><bold>100</bold></highlight>, the wireless access point <highlight><bold>114</bold></highlight>, the infrastructure network <highlight><bold>116</bold></highlight>, the network server <highlight><bold>140</bold></highlight>, and the third party service provider <highlight><bold>180</bold></highlight> interconnected over the Internet <highlight><bold>130</bold></highlight>. The portable wireless device <highlight><bold>100</bold></highlight> can be a wireless mobile telephone, pager, two-way radio, smartphone, personal communicator, wireless personal digital assistant (PDA) or the like. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> As the user carries about the wireless device <highlight><bold>100</bold></highlight>, its sensors automatically and continuously measure the geographic location and context of the device. The wireless device periodically transmits the current context in a message over the wireless network to the network server <highlight><bold>140</bold></highlight>. There are several types of messages, each of which is distinguished by its own unique op code. When the wireless device sends a message containing the current context, the network server parses the op code and responds with information corresponding to the op code, the information being related to the current context. If the op code indicates that the message is a spontaneous message which is automatically transmitted by the device <highlight><bold>100</bold></highlight>, then the network server <highlight><bold>140</bold></highlight> responds with information such as a service category menu or prepaid advertising of local services related to the current context. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the user&apos;s wireless device <highlight><bold>100</bold></highlight> includes a service history log <highlight><bold>110</bold></highlight>. The activities stored in the service history log <highlight><bold>110</bold></highlight> are divided into two major categories: past recommendations made by the network server <highlight><bold>140</bold></highlight> and services. The category of services is broken into three sub-categories: past services used, prestored service preferences, and special requested service requirements. The term &ldquo;activities&rdquo;, as used herein, refers to any of these four categories and sub-categories. The service history log <highlight><bold>110</bold></highlight> stores four component databases: &lsqb;1&rsqb; past recommendations and context, &lsqb;2&rsqb; past services used and context, &lsqb;3&rsqb; prestored service preferences, and &lsqb;4&rsqb; special requested service requirements. The user&apos;s wireless device <highlight><bold>100</bold></highlight> includes application programs <highlight><bold>106</bold></highlight>, current context state <highlight><bold>111</bold></highlight> and recommendation algorithms <highlight><bold>112</bold></highlight>. An example is shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> of the two component databases: &lsqb;1&rsqb; past recommendations and context and &lsqb;2&rsqb; past services used and context. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The wireless device <highlight><bold>100</bold></highlight> can automatically send messages with a unique op code designating that the message is an automatically transmitted message containing the device&apos;s past recommendations and context or past services used and context, in addition to the current context. The network server parses the op code and uses the device&apos;s past recommendations and context or past services used and context to find similar recommendations in its database. The network server <highlight><bold>140</bold></highlight> then responds with information customized to the user&apos;s perceived interests, the information being related to the current context. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> The user of the wireless device <highlight><bold>100</bold></highlight> can also manually enter requests for menus and recommendations related to the current context. The wireless device <highlight><bold>100</bold></highlight> then sends messages with a unique op code designating that the message is a manual request by the user containing the device&apos;s past recommendations and context or past services used and context, in addition to the current context. The network server parses the op code and uses the device&apos;s past recommendations and context or past services used and context to find similar recommendations in its database consistent with the user&apos;s manual request. The network server <highlight><bold>140</bold></highlight> then responds with information customized to the user&apos;s expressed interests, the information being related to the current context. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> The service history log <highlight><bold>110</bold></highlight> can accumulate data on past services used by the user of the device <highlight><bold>100</bold></highlight> in several ways. The service history log <highlight><bold>110</bold></highlight> can be programmed to capture on-line ticket purchase information for services. The service history log <highlight><bold>110</bold></highlight> can also be programmed to monitor the dwell-time of the device at scheduled events and to draw the inference that the user is in fact attending the scheduled event. The event and the current context are then stored in the database &lsqb;2&rsqb; past services used and context, in the service history log <highlight><bold>110</bold></highlight>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The network <highlight><bold>105</bold></highlight> formed by the wireless device <highlight><bold>100</bold></highlight>, wireless access point <highlight><bold>114</bold></highlight>, and infrastructure network <highlight><bold>116</bold></highlight> can be implemented as a digital wireless wide area network (WAN), based on architectures such as Global System for Mobile Communication (GSM), IS-136 TDMA-based Digital Advanced Mobile Phone Service (DAMPS), Personal Digital Cellular (PDC), IS-95 CDMA-based cdmaOne System, General Packet Radio Service (GPRS) and broadband wireless architectures such as W-CDMA and Broadband GPRS. For more information on these digital wireless, wide area network architectures, see the book by Yi-Bing Lin, et al. entitled <highlight><italic>Wireless and Mobile Network Architectures, </italic></highlight>John Wiley &amp; Sons, 2001. The network <highlight><bold>105</bold></highlight> can also be a short-range wireless system connected to a wide area landline infrastructure network such as the Internet <highlight><bold>130</bold></highlight>. Short-range wireless systems include both wireless personal area network (&ldquo;PAN&rdquo;) and wireless local area network (&ldquo;LAN&rdquo;). Both of these networks have the common feature of operating in unlicensed portions of the radio spectrum, usually either in the 2.4 GHz Industrial, Scientific, and Medical (ISM) band or the 5 GHz Unlicensed-National Information Infrastructure (&ldquo;U-NII&rdquo;) band. Wireless personal area networks use low cost, low power wireless devices that have a typical range of ten meters. The best-known example of wireless personal area network technology is the Bluetooth Standard, which operates in the 2.4 GHz ISM band. It provides a peak air link speed of one Mbps and a power consumption low enough for use in personal, portable electronics such as PDAs and mobile phones. The Bluetooth Special Interest Group, <highlight><italic>Specification Of The Bluetooth System, </italic></highlight>Version 1.0B, Volumes 1 and 2, December 1999, describes the principles of Bluetooth device operation and communication protocols. Wireless local area networks generally operate at higher peak speeds of from 10 to 100 Mbps and have a longer range, which requires greater power consumption. Wireless local area networks are typically used as wireless links from portable laptop computers to a wired LAN, via an access point (AP). Examples of wireless local area network technology include the IEEE 802.11 Wireless LAN Standard and the HIPERLAN Standard, which operates in the 5 GHz U-NII band. For more information on wireless LANs, see the book by Jim Geier entitled <highlight><italic>Wireless LANs, </italic></highlight>Macmillan Technical Publishing, 1999. The network <highlight><bold>105</bold></highlight> formed by the wireless device <highlight><bold>100</bold></highlight>, wireless access point <highlight><bold>114</bold></highlight>, and infrastructure network <highlight><bold>116</bold></highlight> can use a wireless communications protocol, such as the Wireless Application Protocol (WAP), the I-Mode protocol, or the mobile IPv6 protocol. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows the user&apos;s wireless device <highlight><bold>100</bold></highlight> communicating over a radio link with the wireless access point <highlight><bold>114</bold></highlight>, which is connected to a wireless network <highlight><bold>116</bold></highlight>, which is connected to a protocol gateway <highlight><bold>120</bold></highlight>. The gateway <highlight><bold>120</bold></highlight> is connected over the Internet <highlight><bold>130</bold></highlight> to the server <highlight><bold>140</bold></highlight>. The wireless device <highlight><bold>100</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> also has a plurality of sensors for sensing the mobile user&apos;s ambient conditions. The sensors shown include POSITIONING SENSOR <highlight><bold>122</bold></highlight>, TOUCH SENSOR <highlight><bold>124</bold></highlight>, AUDIO SENSOR <highlight><bold>125</bold></highlight>, COMPASS SENSOR <highlight><bold>126</bold></highlight>, AMBIENT LIGHT SENSOR <highlight><bold>128</bold></highlight>, AMBIENT TEMPERATURE SENSOR <highlight><bold>132</bold></highlight>, and THREE-AXIS ACCELERATION SENSOR <highlight><bold>134</bold></highlight>. The audio sensor <highlight><bold>125</bold></highlight> can be a microphone, for example, which can detect speech or environmental sounds. The positioning sensor can be, for example, a GPS receiver integrated in the device. The positioning sensor can also be, for example, a radio beacon triangulation sensor that determines the location of the wireless device by means of a network of radio beacons, base stations, or access points, as is described for example, in Nokia European patent EP 0 767 594 A2, entitled &ldquo;Mobile Station Positioning System&rdquo;. These sensors provide inputs which are sampled by the wireless device <highlight><bold>100</bold></highlight> to infer a current context, as will be described below. The network server <highlight><bold>140</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> includes recommendation algorithms <highlight><bold>166</bold></highlight>, context-activity pairs database <highlight><bold>192</bold></highlight>, and context inference engine <highlight><bold>142</bold></highlight>. The wireless device <highlight><bold>100</bold></highlight> provides recommendations to its user that are appropriate to the device&apos;s current environment by selecting an activity, pairing it with the current context result, and sending the context-activity pair to the network server <highlight><bold>140</bold></highlight>. The network server <highlight><bold>140</bold></highlight> searches its database of recommendations using the context-activity pair, and returns recommendations to the user. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the user&apos;s portable wireless device <highlight><bold>100</bold></highlight> includes the microbrowser <highlight><bold>102</bold></highlight> which displays the Recommendation Web Services menu, to enable the user to navigate through the cards or pages being displayed and to select options that are programmed by the application programs <highlight><bold>106</bold></highlight>. The microbrowser <highlight><bold>102</bold></highlight> and the user&apos;s wireless device displays a recommendation web services menu. The recommendation web services menu provides the user with options to select: (A) REQUEST A RECOMMENDATION; (B) UPDATE PRIVACY FEATURES; and (C) MANAGE CONTEXT-ACTIVITY PROFILE. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> The REQUEST A RECOMMENDATION menu displays the following options: </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> REQUEST A RECOMMENDATION: </paragraph>
<paragraph id="P-0054" lvl="2"><number>&lsqb;0054&rsqb;</number> &lsqb;1&rsqb; SELECT A SERVICE CATEGORY </paragraph>
<paragraph id="P-0055" lvl="2"><number>&lsqb;0055&rsqb;</number> &lsqb;2&rsqb; SEND PAST RECEIVED RECOMMENDATIONS </paragraph>
<paragraph id="P-0056" lvl="2"><number>&lsqb;0056&rsqb;</number> &lsqb;3&rsqb; SEND PAST SERVICES USED </paragraph>
<paragraph id="P-0057" lvl="2"><number>&lsqb;0057&rsqb;</number> &lsqb;4&rsqb; SEND PRESTORED SERVICE PREFERENCES </paragraph>
<paragraph id="P-0058" lvl="2"><number>&lsqb;0058&rsqb;</number> &lsqb;5&rsqb; ENTER SPECIAL SERVICE REQUIREMENTS </paragraph>
<paragraph id="P-0059" lvl="2"><number>&lsqb;0059&rsqb;</number> &lsqb;6&rsqb; CHANGE PRESTORED SERVICE PREFERENCES </paragraph>
<paragraph id="P-0060" lvl="2"><number>&lsqb;0060&rsqb;</number> &lsqb;7&rsqb; CHANGE PRIVACY FILTER SETTINGS </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Reference to <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> will show how these seven menu selections invoke corresponding processes in both the user&apos;s device <highlight><bold>100</bold></highlight> and in the network server <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> The option <highlight><bold>501</bold></highlight> to &lsqb;1&rsqb; SELECT A SERVICE CATEGORY invokes process <highlight><bold>508</bold></highlight> in the user&apos;s device <highlight><bold>100</bold></highlight>, to RETRIEVE UPDATED SERVICE CATEGORY MENU, as shown in <cross-reference target="DRAWINGS">FIGS. 2B &amp; 2C</cross-reference>. Process <highlight><bold>508</bold></highlight> sends updated menu request message <highlight><bold>509</bold></highlight> to process <highlight><bold>608</bold></highlight> in the network server <highlight><bold>140</bold></highlight>, to UPDATE SERVICE CATEGORY MENU, as shown in <cross-reference target="DRAWINGS">FIG. 2B</cross-reference>. The updated menu <highlight><bold>225</bold></highlight> is returned in updated menu response message <highlight><bold>509</bold></highlight>&prime;, as shown in FIGS. <highlight><bold>2</bold></highlight>B &amp; <highlight><bold>2</bold></highlight>C. The updated menu <highlight><bold>225</bold></highlight> is displayed in the device&apos;s browser <highlight><bold>102</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1A</cross-reference>. This same sequence of steps is automatically performed by the wireless device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight> in response to the wireless device <highlight><bold>100</bold></highlight> automatically transmitting messages with a unique op code designating that the message is an automatically transmitted message. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> The option <highlight><bold>502</bold></highlight> to &lsqb;2&rsqb; SEND PAST RECEIVED RECOMMENDATIONS invokes process <highlight><bold>514</bold></highlight> in the user&apos;s device <highlight><bold>100</bold></highlight>, to SEND CONTEXT &amp; PAST RECEIVED RECOMMENDATIONS, as shown in <cross-reference target="DRAWINGS">FIGS. 2D &amp; 2E</cross-reference>. Process <highlight><bold>514</bold></highlight> sends recommendation request message <highlight><bold>515</bold></highlight> to process <highlight><bold>614</bold></highlight> in the network server <highlight><bold>140</bold></highlight>, to PROVIDE NEW RECOMMENDATIONS CORRESPONDING TO PAST RECOMMENDATIONS, as shown in <cross-reference target="DRAWINGS">FIG. 2D</cross-reference>. The recommendations <highlight><bold>250</bold></highlight> are returned in recommendation response message <highlight><bold>515</bold></highlight>&prime;, as shown in <cross-reference target="DRAWINGS">FIG. 2D</cross-reference>. The recommendations <highlight><bold>250</bold></highlight> are displayed in the device&apos;s browser <highlight><bold>102</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1E</cross-reference>. This same sequence of steps is automatically performed by the wireless device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight> in response to the wireless device <highlight><bold>100</bold></highlight> automatically transmitting messages with a unique op code designating that the message is an automatically transmitted message. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> The option <highlight><bold>503</bold></highlight> to &lsqb;3&rsqb; SEND PAST SERVICES USED invokes process <highlight><bold>520</bold></highlight> in the user&apos;s device <highlight><bold>100</bold></highlight>, to SEND CONTEXT AND PAST SERVICES USED, as shown in <cross-reference target="DRAWINGS">FIGS. 2F &amp; 2G</cross-reference>. Process <highlight><bold>520</bold></highlight> sends recommendation request message <highlight><bold>521</bold></highlight> to process <highlight><bold>620</bold></highlight> in the network server <highlight><bold>140</bold></highlight>, to PROVIDE NEW RECOMMENDATIONS CORRESPONDING TO PAST SERVICES USED, as shown in <cross-reference target="DRAWINGS">FIG. 2F</cross-reference>. The recommendations <highlight><bold>250</bold></highlight> are returned in recommendation response message <highlight><bold>521</bold></highlight>&prime;, as shown in <cross-reference target="DRAWINGS">FIG. 2G</cross-reference>. The recommendations <highlight><bold>250</bold></highlight> are displayed in the device&apos;s browser <highlight><bold>102</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1E</cross-reference>. This same sequence of steps is automatically performed by the wireless device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight> in response to the wireless device <highlight><bold>100</bold></highlight> automatically transmitting messages with a unique op code designating that the message is an automatically transmitted message. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> The option <highlight><bold>504</bold></highlight> to &lsqb;4&rsqb; SEND PRESTORED SERVICE PREFERENCES invokes process <highlight><bold>510</bold></highlight> in the user&apos;s device <highlight><bold>100</bold></highlight>, to SEND CONTEXT AND PRESTORED SERVICE PREFERENCES in the prestored service preferences file <highlight><bold>231</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIGS. 2D &amp; 2F</cross-reference>. An example of prestored service preferences is shown displayed in the browser <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1C</cross-reference>. Process <highlight><bold>510</bold></highlight> sends message <highlight><bold>511</bold></highlight> to process <highlight><bold>610</bold></highlight> in the network server <highlight><bold>140</bold></highlight>, to PROVIDE RECOMMENDATIONS CORRESPONDING TO SERVICE PREFERENCES. The recommendations <highlight><bold>250</bold></highlight> are returned in message <highlight><bold>511</bold></highlight>&prime;. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> The option <highlight><bold>505</bold></highlight> to &lsqb;5&rsqb; ENTER SPECIAL SERVICE REQUIREMENTS invokes process <highlight><bold>512</bold></highlight> in the user&apos;s device <highlight><bold>100</bold></highlight>, to SEND CONTEXT AND SPECIAL SERVICE REQUIREMENTS. An example of special service requirements is shown displayed in the browser <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 11B</cross-reference>. Process <highlight><bold>512</bold></highlight> sends message <highlight><bold>513</bold></highlight> to process <highlight><bold>612</bold></highlight> in the network server <highlight><bold>140</bold></highlight>, to PROVIDE RECOMMENDATIONS CORRESPONDING TO SPECIAL REQUIREMENTS. The recommendations <highlight><bold>250</bold></highlight> are returned in message <highlight><bold>513</bold></highlight>&prime;. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> The option <highlight><bold>506</bold></highlight> to &lsqb;6&rsqb; CHANGE PRESTORED SERVICE PREFERENCES invokes process <highlight><bold>516</bold></highlight> in the user&apos;s device <highlight><bold>100</bold></highlight>, to CHANGE PRESTORED SERVICE PREFERENCES. An example of a menu to change prestored service preferences is shown displayed in the browser <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1C</cross-reference>. The option <highlight><bold>507</bold></highlight> to &lsqb;7&rsqb; CHANGE PRIVACY FILTER SETTINGS invokes process <highlight><bold>518</bold></highlight> in the user&apos;s device <highlight><bold>100</bold></highlight>, to CHANGE PRIVACY FILTER SETTINGS. An example of a menu to change privacy filter settings is shown displayed in the browser <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1D</cross-reference>. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> As the user carries about the wireless device <highlight><bold>100</bold></highlight>, its sensors <highlight><bold>122</bold></highlight>-<highlight><bold>134</bold></highlight> continuously measure the geographic location and context of the device, which are compiled into a metadata vector <highlight><bold>138</bold></highlight> representing the current context. The wireless device <highlight><bold>100</bold></highlight> periodically transmits the current context in an updated menu request message <highlight><bold>509</bold></highlight>, shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>B, over the wireless network <highlight><bold>105</bold></highlight> to the network server <highlight><bold>140</bold></highlight>. The updated menu request message <highlight><bold>509</bold></highlight> includes the network address of the server <highlight><bold>140</bold></highlight>, an op code value RQ_MN that designates the message as an updated menu request message, and an operand portion containing the current context. The network server <highlight><bold>140</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2B</cross-reference> includes a server op code parser <highlight><bold>216</bold></highlight> that interprets the op code value RQ_MN as indicating that the message is an updated menu request message <highlight><bold>509</bold></highlight>. In response, the server op code parser <highlight><bold>216</bold></highlight> invokes step <highlight><bold>218</bold></highlight> of the server recommendation algorithms <highlight><bold>166</bold></highlight>. Step <highlight><bold>218</bold></highlight> gets from a database a list of services provided by regional advertisers corresponding to the current context of the device <highlight><bold>100</bold></highlight>. Step <highlight><bold>218</bold></highlight> flows to step <highlight><bold>220</bold></highlight>, which gets from a database a list of services provided by regional points of interest, such as galleries, monuments, museums, and the like, corresponding to the current context of the device <highlight><bold>100</bold></highlight>. Step <highlight><bold>220</bold></highlight> flows to step <highlight><bold>222</bold></highlight>, where the list of services provided by regional advertisers and the list of services provided by regional points of interest are filtered for weather related and time related service categories, eliminating those services that cannot be used by the user in the current context. For example, night baseball is eliminated, if the current context is daytime. Hiking a nature trail is eliminated if the current context is bad weather. Step <highlight><bold>222</bold></highlight> flows to step <highlight><bold>224</bold></highlight>, where the updated menu message <highlight><bold>509</bold></highlight>&prime; is prepared. The updated menu message <highlight><bold>509</bold></highlight>&prime; includes the network address of the device <highlight><bold>100</bold></highlight>, an op code &ldquo;RSP_MN&rdquo; that designates the message as an updated menu server response message, and operands. The operands include the updated menu <highlight><bold>225</bold></highlight>. The updated menu <highlight><bold>225</bold></highlight> is returned to the device <highlight><bold>100</bold></highlight> in the updated menu response message <highlight><bold>509</bold></highlight>&prime;, as shown in <cross-reference target="DRAWINGS">FIGS. 2B &amp; 2C</cross-reference>. This same sequence of steps is automatically performed by the wireless device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight> in response to the wireless device <highlight><bold>100</bold></highlight> automatically transmitting messages with a unique op code designating that the message is an automatically transmitted message. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> The device op code parser <highlight><bold>214</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 2C</cross-reference> interprets the op code value &ldquo;RSP_MN&rdquo; as indicating that the message is an updated menu server response <highlight><bold>509</bold></highlight>&prime;. In response, the device op code parser <highlight><bold>214</bold></highlight> invokes step <highlight><bold>226</bold></highlight> of the device recommendation algorithms <highlight><bold>112</bold></highlight>. Step <highlight><bold>226</bold></highlight> stores and displays the updated menu <highlight><bold>225</bold></highlight> in the device&apos;s browser <highlight><bold>102</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1A</cross-reference>. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> The user can initialize the device <highlight><bold>100</bold></highlight> by entering special service requirements as shown in the browser <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1B</cross-reference>. Examples of special service requirements that can be stored in the service history log <highlight><bold>110</bold></highlight> of device <highlight><bold>100</bold></highlight> are: </paragraph>
<paragraph id="P-0071" lvl="2"><number>&lsqb;0071&rsqb;</number> &lsqb;a&rsqb; AGE REQUIREMENT: </paragraph>
<paragraph id="P-0072" lvl="3"><number>&lsqb;0072&rsqb;</number> ALL AGES/CHILD AGE RANGE/ADULTS ONLY </paragraph>
<paragraph id="P-0073" lvl="2"><number>&lsqb;0073&rsqb;</number> &lsqb;b&rsqb; TIME OF DAY REQUIREMENT: </paragraph>
<paragraph id="P-0074" lvl="3"><number>&lsqb;0074&rsqb;</number> EARLIEST/LATEST </paragraph>
<paragraph id="P-0075" lvl="2"><number>&lsqb;0075&rsqb;</number> &lsqb;c&rsqb; MAX WALKING DISTANCE </paragraph>
<paragraph id="P-0076" lvl="2"><number>&lsqb;0076&rsqb;</number> &lsqb;d&rsqb; PRICE RANGE </paragraph>
<paragraph id="P-0077" lvl="2"><number>&lsqb;0077&rsqb;</number> &lsqb;e&rsqb; PREFERRED DRESS: </paragraph>
<paragraph id="P-0078" lvl="3"><number>&lsqb;0078&rsqb;</number> CASUAL/DRESSY/FORMAL </paragraph>
<paragraph id="P-0079" lvl="2"><number>&lsqb;0079&rsqb;</number> &lsqb;f&rsqb; HANDICAPPED FACILITIES: </paragraph>
<paragraph id="P-0080" lvl="3"><number>&lsqb;0080&rsqb;</number> RAMPS/HAND RAILS/REST ROOMS. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> The user can initialize the device <highlight><bold>100</bold></highlight> by entering stored service preferences, as shown in the browser <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1C</cross-reference>. Examples of stored service preferences that can be stored in the service history log <highlight><bold>110</bold></highlight> of device <highlight><bold>100</bold></highlight> are: </paragraph>
<paragraph id="P-0082" lvl="2"><number>&lsqb;0082&rsqb;</number> GALLERIES &lsqb;modem art&rsqb;</paragraph>
<paragraph id="P-0083" lvl="2"><number>&lsqb;0083&rsqb;</number> MONUMENTS &lsqb;maritime history&rsqb;</paragraph>
<paragraph id="P-0084" lvl="2"><number>&lsqb;0084&rsqb;</number> MOVIES &lsqb;family oriented&rsqb;</paragraph>
<paragraph id="P-0085" lvl="2"><number>&lsqb;0085&rsqb;</number> MUSEUMS &lsqb;technology; natural history&rsqb;</paragraph>
<paragraph id="P-0086" lvl="2"><number>&lsqb;0086&rsqb;</number> MUSIC &lsqb;jazz&rsqb;</paragraph>
<paragraph id="P-0087" lvl="2"><number>&lsqb;0087&rsqb;</number> NIGHT LIFE &lsqb;professional sports&rsqb;</paragraph>
<paragraph id="P-0088" lvl="2"><number>&lsqb;0088&rsqb;</number> OUTDOORS/FITNESS &lsqb;sailing; cycling&rsqb;</paragraph>
<paragraph id="P-0089" lvl="2"><number>&lsqb;0089&rsqb;</number> RESTAURANTS &lsqb;casual&rsqb;</paragraph>
<paragraph id="P-0090" lvl="2"><number>&lsqb;0090&rsqb;</number> THEATER &lsqb;orchestral&rsqb;</paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> The user can initialize the device <highlight><bold>100</bold></highlight> by entering privacy filter settings, as shown in the browser <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1D</cross-reference>. Privacy filter settings are used to remove the user&apos;s private information from the messages sent by the device <highlight><bold>100</bold></highlight> to the network server <highlight><bold>140</bold></highlight>. Examples of privacy filter settings that can be stored in the device <highlight><bold>100</bold></highlight> are: </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> FOR CURRENT REQUESTS: </paragraph>
<paragraph id="P-0093" lvl="2"><number>&lsqb;0093&rsqb;</number> &lsqb;a&rsqb; REMOVE USER NAME </paragraph>
<paragraph id="P-0094" lvl="2"><number>&lsqb;0094&rsqb;</number> &lsqb;b&rsqb; ENTER OTHER DATA TO REMOVE </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> FOR PAST RECOMMENDATIONS: </paragraph>
<paragraph id="P-0096" lvl="2"><number>&lsqb;0096&rsqb;</number> &lsqb;a&rsqb; REMOVE USER NAME </paragraph>
<paragraph id="P-0097" lvl="2"><number>&lsqb;0097&rsqb;</number> &lsqb;b&rsqb; REMOVE LOCATION OF PAST RECOMMENDATION </paragraph>
<paragraph id="P-0098" lvl="2"><number>&lsqb;0098&rsqb;</number> &lsqb;c&rsqb; REMOVE DATE OF PAST RECOMMENDATION </paragraph>
<paragraph id="P-0099" lvl="2"><number>&lsqb;0099&rsqb;</number> &lsqb;d&rsqb; REMOVE NAME OF PAST SERVICE PROVIDER </paragraph>
<paragraph id="P-0100" lvl="2"><number>&lsqb;0100&rsqb;</number> &lsqb;e&rsqb; ENTER OTHER DATA TO REMOVE </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> The service history log <highlight><bold>110</bold></highlight> in the user&apos;s device <highlight><bold>100</bold></highlight> stores activities in four component databases: &lsqb;1&rsqb; past recommendations and context, &lsqb;2&rsqb; past services used and context, &lsqb;3&rsqb; prestored service preferences, and &lsqb;4&rsqb; special requested service requirements. An example is shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> of the two component databases: &lsqb;1&rsqb; past recommendations and context <highlight><bold>227</bold></highlight> and &lsqb;2&rsqb; past services used and context <highlight><bold>235</bold></highlight>. The embodiment of the database shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> uses extensible markup language (XML) files to provide a coherent view of the wide variety of data that can be used to characterize a contexts, services, and recommendations. To specify the current context, XML tags are used to categorize each type of context data that characterizes the current context. The each unit context data is delineated by a beginning tag and an ending tag, forming an element. For example, the element &ldquo;&lt;TEMPERATURE&gt;10 degrees Celsius&lt;/TEMPERATURE &gt;&rdquo; defines the category as temperature, and specifies the data as &ldquo;10 degrees Celsius&rdquo;. As another example, the element &ldquo;&lt;LAT&gt;38 degrees, 48 minutes North&lt;/LAT&gt;&rdquo; defines the category as geographic latitude, and specifies the data as &ldquo;38 degrees, 48 minutes North&rdquo;. Another feature of XML is its ability to specify a hierarchy in the categories of data. For example, geographic location is normally specified as both a latitude and a longitude. The categories of data for latitude and longitude can be thought of as &ldquo;child&rdquo; categories within the category for geographic location. XML expresses this hierarchy as follows: </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> &lt;LOCATION&gt;</paragraph>
<paragraph id="P-0103" lvl="2"><number>&lsqb;0103&rsqb;</number> &lt;LAT&gt;38 degrees, 48 minutes North&lt;/LAT&gt;</paragraph>
<paragraph id="P-0104" lvl="2"><number>&lsqb;0104&rsqb;</number> &lt;LON&gt;76 degrees, 38 minutes West&lt;/LON&gt;</paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> &lt;/LOCATION &gt;</paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> A typical specification of the context for an activity stored in the service history log <highlight><bold>110</bold></highlight> would be, for example: </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> &lt;CONTEXT&gt;</paragraph>
<paragraph id="P-0108" lvl="2"><number>&lsqb;0108&rsqb;</number> &lt;LOCATION&gt;</paragraph>
<paragraph id="P-0109" lvl="3"><number>&lsqb;0109&rsqb;</number> &lt;LAT&gt;38 degrees, 48 minutes North&lt;/LAT&gt;</paragraph>
<paragraph id="P-0110" lvl="3"><number>&lsqb;0110&rsqb;</number> &lt;LON&gt;76 degrees, 38 minutes West&lt;/LON&gt;</paragraph>
<paragraph id="P-0111" lvl="3"><number>&lsqb;0111&rsqb;</number> &lt;ALT&gt;150 meters&lt;/ALT &gt;</paragraph>
<paragraph id="P-0112" lvl="2"><number>&lsqb;0112&rsqb;</number> /LOCATION &gt;</paragraph>
<paragraph id="P-0113" lvl="2"><number>&lsqb;0113&rsqb;</number> &lt;DATE&gt;2001:01:31&lt;/DATE &gt;</paragraph>
<paragraph id="P-0114" lvl="2"><number>&lsqb;0114&rsqb;</number> &lt;TIME&gt;1200&lt;/TIME&gt;</paragraph>
<paragraph id="P-0115" lvl="2"><number>&lsqb;0115&rsqb;</number> &lt;TEMPERATURE&gt;10 degrees Celsius &lt;/TEMPERATURE &gt;</paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> &lt;/CONTEXT&gt;</paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> By expressing the context in the service history log <highlight><bold>110</bold></highlight> in XML, the stored expression is both human and machine readable, it defines the content, and it defines the hierarchical structure of the content. XML also separates the appearance of the content from the structure of the content, so that the content can be displayed in any format by using customized style sheets in each different type of display device. Extensible Stylesheet Language (XSL) can provide flexible document presentation, enabling the content of an XML file to be displayed on the large display screen of a personal computer, as well as in the microbrowser <highlight><bold>102</bold></highlight>. Messages exchanged between the wireless device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight> can include XML files carried in the Simple Object Access Protocol (SOAP) messaging protocol or the SyncML synchronization protocol. For additional background on XML, see the book by Heather Williamson, <highlight><italic>XML: The Complete Reference, </italic></highlight>Osborne/McGraw-Hill, 2001. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> Both the wireless device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight> interpret the tags of the XML elements in the XML file in the same way. This can be accomplished by incorporating the same XML tag parser in both the device recommendation algorithms <highlight><bold>112</bold></highlight> of the wireless device <highlight><bold>100</bold></highlight> and in the server recommendation algorithms <highlight><bold>166</bold></highlight> of the network server <highlight><bold>140</bold></highlight>. In its simplest form, the XML tag parser can be a simple string comparison function that searches the XML file for XML tag strings, such as the beginning tag &ldquo;&lt;LOCATION&gt;&rdquo; and the ending tag &ldquo;&lt;/LOCATION&gt;&rdquo;. When it finds the a particular beginning tag, it gets the data located between the beginning tag and the ending tag and passes the data as &ldquo;location data&rdquo; to program subroutines that operate on location data. Such program subroutines include the database search routine in the server recommendation algorithms <highlight><bold>166</bold></highlight> in the server <highlight><bold>140</bold></highlight>, that forms a query from the latitude and longitude data to search for recommendations for services in the database <highlight><bold>192</bold></highlight> having similar latitude and longitude values. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> Another way for both the wireless device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight> to interpret the tags of the XML elements in the XML file in the same way, is by means of a standard XML parser. The two principal, standard XML parsers are the Simple API for XML (SAX) event-based parser and the Document Object Model (DOM) tree-based parser. The principal difference between them is in the way the XML data is made available to the client application, such as the device recommendation algorithms <highlight><bold>112</bold></highlight>. SAX is an event driven model, wherein the client application is continuously notified as the XML document features are recognized by the parser. As the SAX parser reads an XML file, it sends to the application program <highlight><bold>112</bold></highlight> information from the XML file in real time. Each time the parser sees a beginning tag, an ending tag, character data, or a processing instruction, it reports it to the client application. The entire XML file does not have to be read before acting on the data at the beginning of the file. The entire document does not have to reside in memory, which can be an advantage for the wireless device <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> The Document Object Model (DOM) model parser is object based, on the other hand, wherein the entire XML document is parsed and stored as a hierarchical tree of objects that the client application can then randomly access. A document type definition (DTD) is available to both the wireless device <highlight><bold>100</bold></highlight> and in the network server <highlight><bold>140</bold></highlight>, either being stored locally or at a server they can reference. A DTD is a set of declarations that specify the allowed order, structure, and meaning of the tags for a particular XML file. The XML file references the DTD that governs its order, structure, and meaning, at a specified location, such as the directory of the local filesystem, and its filename as a handle. Standard XML parsers are part of many operating systems now available. A DOM tree-based parser reads in the DTD and the XML file and converts the XML file into programming constructs accessible to the application logic. A document type declaration element must appear in the XML file to indicate the DTD to which the XML file complies and where to find it. It starts with &ldquo;&lt;DOCTYPE&rdquo; and ends with &ldquo;&gt;&rdquo;. The example given below is </paragraph>
<paragraph id="P-0121" lvl="7"><number>&lsqb;0121&rsqb;</number> &lt;DOCTYPE OBJECT &ldquo;xml_directory&bsol;object.dtd&rdquo;&gt;. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> Each XML file begins with a processing instruction that gives information to an XML processor in both the wireless device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight>. It starts with &ldquo;&lt;&quest;&rdquo; and ends with &ldquo;&gt;&rdquo;. The example given below is &lt;&quest;XML VERSION&equals;&ldquo;1.0&rdquo;&quest;&gt;. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> An example of a complete XML file specifying a past recommendation received by the device <highlight><bold>100</bold></highlight> and the context in which it was received, is shown in the following TABLE A, which is the XML file <highlight><bold>227</bold></highlight> taken from the service history log <highlight><bold>110</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>.  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="259PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE A</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Example of an XML File Specifying a Past Recommendation</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;&quest;XML VERSION&equals;&ldquo;1.0&rdquo;&quest;&gt;</entry>
</row>
<row>
<entry>&lt;DOCTYPE PAST_RECOMMENDATIONS_OBJECT &ldquo;xml_directory&bsol;object.dtd&rdquo;&gt;.</entry>
</row>
<row>
<entry>&lt;PAST_RECOMMENDATIONS_OBJECT&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;DESCRIPTION&gt;Past Recommendation&lt;/DESCRIPTION&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;PLACE-EVENTS&gt;Museums&lt;/PLACE-EVENTS&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;PAST_RECOMMENDATIONS&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;NAME&gt;History Museum&lt;/NAME&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;CONTEXT&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;LOCATION&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="56PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;LAT&gt;38 degrees, 48 minutes North&lt;/LAT&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;LON&gt;76 degrees, 38 minutes West&lt;/LON&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;ALT&gt;150 meters&lt;/ALT&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/LOCATION&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;DATE&gt;2001:01:31&lt;/DATE&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;TIME&gt;1200&lt;/TIME&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;TEMPERATURE&gt;10&lt;/TEMPERATURE&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;METAVECTOR&gt;FF12AB34CD&lt;/METAVECTOR&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/CONTEXT&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/PAST_RECOMMENDATIONS&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;/PAST_RECOMMENDATIONS_OBJECT&gt;</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> An abbreviated example of a corresponding document type definition (DTD) that specifies the allowed order, structure, and meaning of the tags for a past recommendation XML file, is shown in the following TABLE B. This is part of a file named &ldquo;object.dtd&rdquo; stored in the local filesystem directory named &ldquo;xml_directory&rdquo; in both the wireless device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight>. It illustrates, for example, that the PAST_RECOMMENDATIONS element must include both the NAME of the service and the CONTEXT in which it was recommended. The CONTEXT element must include the LOCATION, the DATE, the TIME, the TEMPERATURE, and the METAVECTOR containing the metadata vector <highlight><bold>138</bold></highlight> characterizing the context of device. The LOCATION element must include latitude LAT, the longitude LON, and the altitude ALT of the device.  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="280PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE B</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Abbreviated Example of a Document Type Definition (DTD)</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="280PT" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;&excl;ELEMENT PAST_RECOMMENDATIONS_OBJECT (DESCRIPTION, PLACE-EVENTS,</entry>
</row>
<row>
<entry>PAST_RECOMMENDATIONS)&gt;</entry>
</row>
<row>
<entry>&lt;&excl;ELEMENT PAST_RECOMMENDATIONS (NAME, CONTEXT)&gt;</entry>
</row>
<row>
<entry>&lt;&excl;ELEMENT CONTEXT (LOCATION, DATE, TIME, TEMPERATURE, METAVECTOR)&gt;</entry>
</row>
<row>
<entry>&lt;&excl;ELEMENT LOCATION (LAT, LON, ALT)&gt;</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0125" lvl="7"><number>&lsqb;0125&rsqb;</number> In a complete DTD for the XML file of TABLE A, the data elements, such as &ldquo;&lt;LAT&gt;38 degrees, 48 minutes North&lt;/LAT&gt;&rdquo; would be specified in the DTD as &ldquo;&lt;&excl;ELEMENT LAT (&num;PCDATA)&gt;&rdquo; to indicate that these elements are present and contain only data, but do not contain not other elements. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> Great flexibility is provided by the use of XML to define the data to be included in the files of the four component databases of the service history log <highlight><bold>110</bold></highlight>: &lsqb;1&rsqb; past recommendations and context, &lsqb;2&rsqb; past services used and context, &lsqb;3&rsqb; prestored service preferences, and &lsqb;4&rsqb; special requested service requirements. These XML files can be readily identified, accessed, and their elements parsed to obtain the relevant data pertaining to each category. The meaning of the data is assured by its location in a known element type. The XML files, themselves, can be included in the messages exchanged between the wireless device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight>. This can be seen in the following discussion of the process <highlight><bold>514</bold></highlight> in the wireless device <highlight><bold>100</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>C, to process the user&apos;s request for a recommendation by gathering XML files <highlight><bold>227</bold></highlight> of past received recommendations from the service history log <highlight><bold>110</bold></highlight> and pairing them with the current context of the device. The context-activity pair is then sent in a recommendation request message <highlight><bold>515</bold></highlight> to the network server <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the user selects the option&rsqb; SEND PAST RECEIVED RECOMMENDATIONS. Then, in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>A, the user selects the service category of &ldquo;GALLERIES&rdquo; from the service category menu <highlight><bold>225</bold></highlight>. Then in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>C, step <highlight><bold>228</bold></highlight>, receives the user&apos;s input and flows to step <highlight><bold>228</bold></highlight> to get the current context. The process then flows to step <highlight><bold>232</bold></highlight> to access the service history log <highlight><bold>110</bold></highlight> for XML files <highlight><bold>227</bold></highlight> of past received recommendations. The process then flows to step <highlight><bold>234</bold></highlight> to apply privacy filter settings <highlight><bold>229</bold></highlight> to the data in the XML files <highlight><bold>227</bold></highlight>. For example, step <highlight><bold>234</bold></highlight> can remove any occurrence of the user&apos;s name, the location of past recommendations, the date of past recommendations, the name of past service providers, and the like. Then, the recommendation request message <highlight><bold>515</bold></highlight> is assembled. The recommendation request message <highlight><bold>515</bold></highlight> includes the network address of the server <highlight><bold>140</bold></highlight>, an op code &ldquo;RQ_REC<highlight><subscript>&mdash;</subscript></highlight>3&rdquo; that designates the message as a recommendation request message, and the operands. The operands include the current context expressed in a separate field as the metadata vector <highlight><bold>138</bold></highlight>, the past recommendation and context XML file <highlight><bold>227</bold></highlight>&prime;, and the prestored service preferences XML file <highlight><bold>231</bold></highlight>. The wireless device <highlight><bold>100</bold></highlight> then sends recommendation request message <highlight><bold>515</bold></highlight> to the network server <highlight><bold>140</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 2D</cross-reference>. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2D</cross-reference> is a flow diagram of the process in the network server <highlight><bold>140</bold></highlight> to respond to the recommendation request message <highlight><bold>515</bold></highlight> from the device <highlight><bold>100</bold></highlight>. The network server <highlight><bold>140</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2D</cross-reference> includes the server op code parser <highlight><bold>216</bold></highlight> that interprets the op code value &ldquo;RQ_REC<highlight><subscript>&mdash;</subscript></highlight>3&rdquo; as indicating that the message is a recommendation request message <highlight><bold>515</bold></highlight>. In response, the server op code parser <highlight><bold>216</bold></highlight> invokes step <highlight><bold>240</bold></highlight> of the server recommendation algorithms <highlight><bold>166</bold></highlight>. Step <highlight><bold>240</bold></highlight> receives the metadata vector <highlight><bold>138</bold></highlight> from the message <highlight><bold>515</bold></highlight> and accesses recommendations from the database <highlight><bold>192</bold></highlight> corresponding to the current context. The process then flows to step <highlight><bold>242</bold></highlight> which searches through the accessed recommendations obtained from the database to find those similar to the past received recommendations <highlight><bold>227</bold></highlight>&prime; input from the message <highlight><bold>515</bold></highlight>. The process then flows to step <highlight><bold>244</bold></highlight> which sorts the similar recommendations in accordance with the user&apos;s preferences <highlight><bold>231</bold></highlight>, also received in the message <highlight><bold>515</bold></highlight>. The user&apos;s preferences <highlight><bold>231</bold></highlight> is shown as the example XML file of TABLE C, as follows:  
<table-cwu id="TABLE-US-00003">
<number>3</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE C</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Example of an XML File Specifying User Preferences</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;&quest;XML VERSION&equals;&ldquo;1.0&rdquo;&quest;&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;PREFERENCES_OBJECT&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="175PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;DESCRIPTION&gt;Preferences&lt;/DESCRIPTION&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;GALLERIES&gt;Modern Art&lt;/GALLERIES&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;MONUMENTS&gt;Maritime&lt;/MONUMENTS&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;MOVIES&gt;Family Oriented&lt;/MOVIES&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/PREFERENCES_OBJECT&gt;</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> The process then flows to step <highlight><bold>246</bold></highlight> which updates usage statistics and stores them in a database. The process then flows to step <highlight><bold>248</bold></highlight> which assembles the recommendation response message <highlight><bold>515</bold></highlight>&prime; and transmits it back to the wireless device <highlight><bold>100</bold></highlight>. The recommendation response message <highlight><bold>515</bold></highlight>&prime; includes the network address of the wireless device <highlight><bold>100</bold></highlight>, the op code &ldquo;REC<highlight><subscript>&mdash;</subscript></highlight>3&rdquo; that designates the message as a recommendation response message, and the operands. The operands include the recommendations XML file <highlight><bold>250</bold></highlight>. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2E</cross-reference> is a flow diagram of a process in the wireless device <highlight><bold>100</bold></highlight> to filter the recommendations received in the recommendation response message and display the filtered recommendations on the device&apos;s browser. The device op code parser <highlight><bold>214</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 2E</cross-reference> interprets the op code value &ldquo;REC<highlight><subscript>&mdash;</subscript></highlight>3&rdquo; as indicating that the message is a recommendation response message <highlight><bold>515</bold></highlight>&prime;. In response, the device op code parser <highlight><bold>214</bold></highlight> invokes step <highlight><bold>254</bold></highlight> of the device recommendation algorithms <highlight><bold>112</bold></highlight>. Step <highlight><bold>254</bold></highlight> filters the recommendations XML file <highlight><bold>250</bold></highlight> received in message <highlight><bold>515</bold></highlight>&prime;. The filtering identifies new or significant information in the recommendations XML file <highlight><bold>250</bold></highlight>. This can be accomplished by comparing the recommendations XML file <highlight><bold>250</bold></highlight> with the past recommendations XML files <highlight><bold>227</bold></highlight> in the service history log <highlight><bold>110</bold></highlight>. The process then flows to step <highlight><bold>256</bold></highlight> which displays the filtered recommendations to the user on the browser <highlight><bold>102</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1E</cross-reference>. An XSL stylesheet can be used to display the content of the recommendations XML file <highlight><bold>250</bold></highlight> in the microbrowser <highlight><bold>102</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 1E</cross-reference> shows the result of a first filtering criterion of &ldquo;FILTER&equals;NO AGE RESTRICTION&rdquo;. The one of the two recommendations displayed in <cross-reference target="DRAWINGS">FIG. 1E</cross-reference> has the characterization &ldquo;Ages: Adult&rdquo;. Alternately, if the filtering criterion were &ldquo;FILTER&equals;FAMILY ORIENTED&rdquo; as provided in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>F, then only one of two potential recommendations is displayed, the displayed recommendation having the characterization &ldquo;Ages: All Ages&rdquo;. The process then flows to step <highlight><bold>258</bold></highlight> which optionally transfers the recommendations <highlight><bold>250</bold></highlight> to the application programs <highlight><bold>106</bold></highlight> for further processing. This same sequence of steps is automatically performed by the wireless device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight> in response to the wireless device <highlight><bold>100</bold></highlight> automatically transmitting messages with a unique op code designating that the message is an automatically transmitted message. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> The recommendations XML file <highlight><bold>250</bold></highlight> providing two recommendations for galleries, is shown as the example XML file of TABLE D, as follows:  
<table-cwu id="TABLE-US-00004">
<number>4</number>
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="252PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE D</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Example of an XML File Specifying New Recommendations</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;&quest;XML VERSION&equals;&ldquo;1.0&rdquo;&quest;&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;DOCTYPE RECOMMENDATIONS_OBJECT &ldquo;xml directory&bsol;object.dtd&rdquo;&gt;.</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="252PT" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;RECOMMENDATIONS_OBJECT&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;DESCRIPTION&gt;New Recommendations&lt;/DESCRIPTION&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;RECOMMENDATION&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="224PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;NAME&gt;Arts Club&lt;/NAME&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;LOCATION&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;ADDRESS&gt;789 Eastern Blvd.&lt;/ADDRESS&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="210PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;AREA&gt;Southside &lt;/AREA&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="224PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;LAT&gt;(Lat)&lt;/LAT&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="210PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;LON&gt;Lon&lt;/LON&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="224PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/LOCATION&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;AGES&gt;Adult&lt;/AGES&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="224PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;TIMES&gt;10:00 - 17:00&lt;/TIMES&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;ADMISSION&gt;$5.00 adult&lt;/ADMISSION&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="224PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;DRESS&gt;casual dress&lt;/DRESS&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/RECOMMENDATION&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;RECOMMENDATION&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="224PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;NAME&gt;Way Out Art&lt;/NAME&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;LOCATION&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="210PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;ADDRESS&gt;248 Circle Rd.&lt;/ADDRESS&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;AREA&gt;Mountains &lt;/AREA&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;LAT&gt;(Lat)&lt;/LAT&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;LON&gt;Lon&lt;/LON&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="224PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/LOCATION&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;AGES&gt;All Ages&lt;/AGES&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;TIMES&gt;10:00 - 17:00&lt;/TIMES&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;ADMISSION&gt;$5.00 adult/$2.50 child&lt;/ADMISSION&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;DRESS&gt;casual dress&lt;/DRESS&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="252PT" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;/RECOMMENDATION&gt;</entry>
</row>
<row>
<entry>&lt;/RECOMMENDATIONS_OBJECT&gt;</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> An abbreviated example of a corresponding document type definition (DTD) that specifies the allowed order, structure, and meaning of the tags for a new recommendation XML file <highlight><bold>250</bold></highlight>, is shown in the following TABLE E. This DTD is part of a file named &ldquo;object.dtd&rdquo; stored in the local filesystem directory named &ldquo;xml_directory&rdquo; in both the wireless device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight>. It illustrates, for example, that new RECOMMENDATIONS sent to the wireless device <highlight><bold>100</bold></highlight> must include LOCATION of the service, but it does not include the complete CONTEXT. The LOCATION must include ADDRESS, AREA, LAT, LON. The DTD can provide for optional data in the XML file, as well, by including other elements, such as &ldquo;&lt;ADMISSION&gt;&rdquo; and designating them with an asterisk &ldquo;*&rdquo; so that they are not necessarily required in each XML file. The same XML tag parser in both the device recommendation algorithms <highlight><bold>112</bold></highlight> of the wireless device <highlight><bold>100</bold></highlight> and in the server recommendation algorithms <highlight><bold>166</bold></highlight> of the network server <highlight><bold>140</bold></highlight>, can search the XML file for optional XML tag strings, such as the beginning tag &ldquo;&lt;ADMISSION&gt;&rdquo; and the ending tag &ldquo;&lt;/ADMISSION&gt;&rdquo;, and if they are found, the XML tag parser gets the data located between the tags and passes it as &ldquo;admission data&rdquo; to program subroutines that operate on admission data.  
<table-cwu id="TABLE-US-00005">
<number>5</number>
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="280PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE E</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Abbreviated Example of a DTD for New Recommendations</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="280PT" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;&excl;ELEMENT RECOMMENDATIONS_OBJECT (DESCRIPTION, RECOMMENDATION)&gt;</entry>
</row>
<row>
<entry>&lt;&excl;ELEMENT RECOMMENDATION (NAME, LOCATION, ADMISSION*)&gt;</entry>
</row>
<row>
<entry>&lt;&excl;ELEMENT LOCATION (ADDRESS, AREA, LAT, LON)&gt;</entry>
</row>
<row>
<entry>&lt;&excl;ELEMENT ADMISSION (&num;PCDATA)&gt;</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> To enable the wireless device <highlight><bold>100</bold></highlight> to read the XML recommendations file <highlight><bold>250</bold></highlight> of TABLE D, a DOM tree-based parser in the device <highlight><bold>100</bold></highlight> reads in the DTD of TABLE E and the XML file <highlight><bold>250</bold></highlight> received from the network server <highlight><bold>140</bold></highlight>. The DOM tree-based parser converts the XML file <highlight><bold>250</bold></highlight> into a hierarchical tree data structure enabling the data for each element to be accessible to the application programs <highlight><bold>106</bold></highlight> and recommendation algorithms <highlight><bold>112</bold></highlight>. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> This process also works in reverse in the network server <highlight><bold>140</bold></highlight> and enables the network server to construct the XML recommendations file <highlight><bold>250</bold></highlight>. The DOM tree-based parser can read in the DTD of TABLE E and create the hierarchical tree data structure that serves as a template for the recommendation algorithm <highlight><bold>166</bold></highlight> in server <highlight><bold>140</bold></highlight>. The recommendation algorithm <highlight><bold>166</bold></highlight> can then fill the nodes of the tree with recommendation data, such as ADDRESS data, AREA data, LAT data, and LON data. The DOM tree-based parser uses this newly created tree of data to create a corresponding XML recommendations file <highlight><bold>250</bold></highlight> of TABLE D, that conforms to the DTD of TABLE E. The recommendation algorithm <highlight><bold>166</bold></highlight> and the DOM tree-based parser, in effect, work together as a document generator. The Document Object Model (DOM) defines the characteristics of the XML file hierarchical tree data structure and an application programming interface (API) for manipulating it. A description of DOM is provided on the web site http://www.w3.org/TR/DOM-Level-2-Core/. For additional information on the Document Object Model and the XML file hierarchical tree data structure, see the book by Elliotte Harold, et al, entitled <highlight><italic>XML In A Nutshell</italic></highlight>, O&apos;Reilly &amp; Associates, 2001. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> In an alternate embodiment, the wireless device uses the SAX event-driven parser and the network server <highlight><bold>140</bold></highlight> uses the DOM tree-based parser. This arrangement confers the advantage of requiring a smaller memory allocation for the SAX parser in the wireless device <highlight><bold>100</bold></highlight> and yet it provides the capability of the DOM parser to construct the XML recommendations files <highlight><bold>250</bold></highlight> in the network server <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> In another alternate embodiment, Extensible Hypertext Markup Language (XHTML) can be used to display in the wireless device <highlight><bold>100</bold></highlight> the recommendations <highlight><bold>250</bold></highlight> in step <highlight><bold>256</bold></highlight> which are received from the network server <highlight><bold>140</bold></highlight>. XHTML is a hybrid between HTML and XML specifically designed for network device displays. A subset of XHTML is XHTML Basic, which defines a document type that is rich enough to be used for content authoring and precise document layout, yet can be shared with wireless mobile devices <highlight><bold>100</bold></highlight> with small screens, such as PDAs and cell phones. XHTML Basic is the mobile adaptation of XHTML, and includes everything in XHTML except those capabilities, such as frames, that are not appropriate for devices with small screens. XHTML Basic is an XML-based standard, which allows the automatic parsing and transcoding of content through the use of Extensible Stylesheet Language Transformations (XSLT), part of the XSL style sheet language for XML. XSLT provides a language for transforming XML documents into other XML documents. Using XSLT, a system can automatically transform the same XML content into multiple markup languages depending on the browser <highlight><bold>102</bold></highlight>. Through such transformations, content can be created for one type device and automatically transformed to appear on another type device. For example, the network server <highlight><bold>140</bold></highlight> can create its recommendations once in XML and use XSLT to dynamically convert it to XHTML Basic and HTML for presentation on mobile wireless devices <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> XHTML Basic can used with cascading style sheets (CSS) to describe how documents are presented on screen in the browser <highlight><bold>102</bold></highlight>. Through the use of CSS, document authors can control the presentation of documents without sacrificing device independence. The use of well-known standard HTML tags avoids storing multiple versions of content. The network server <highlight><bold>140</bold></highlight> does not need to provide for extra overhead for transcoding required to prepare content for an array of different markup languages. CSS enables a document author to specify the presentation of an application once for each type of device, by means of a corresponding style sheet. If the presentation needs to be changed at any time, the change is made once in the style sheet and the modification is dynamically reflected throughout all the pages in the network server <highlight><bold>140</bold></highlight>. CSS separates the content of the document from the presentation. This allows creating browser-specific versions of the same content simply by creating a corresponding style sheet for each browser type. Then, when a user requests a page at the wireless device <highlight><bold>100</bold></highlight>, the network server <highlight><bold>140</bold></highlight> server identifies the requesting device and returns the content with a link to the appropriate style sheet. The style sheet is downloaded once and cached by the browser <highlight><bold>102</bold></highlight> for use with subsequent pages, which speeds the rendering of all pages received from the network server <highlight><bold>140</bold></highlight>. CSS enables every aspect of the appearance of the document, such as positioning, fonts, text attributes, borders, margin alignment, and flow, to be defined in the style sheet. A change to any aspect of the document&apos;s appearance needs to be made only once. CSS also gives carriers greater control over the look and feel of the services they provide through their wireless portal. The operator can use XHTML Basic to define a default style sheet for all devices it supports, which will ensure a basic look and feel consistent for all devices <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2F</cross-reference> is a flow diagram of the process in the network server <highlight><bold>140</bold></highlight> to respond to the recommendation request message <highlight><bold>521</bold></highlight> from the device <highlight><bold>100</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 2F</cross-reference> differs from <cross-reference target="DRAWINGS">FIG. 2D</cross-reference> in by showing how to find database recommendations that are similar to the past services used by the wireless device <highlight><bold>100</bold></highlight>, instead of being similar to the past recommendations received by the device. The network server <highlight><bold>140</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2F</cross-reference> includes the server op code parser <highlight><bold>216</bold></highlight> that interprets the op code value &ldquo;RQ_REC<highlight><subscript>&mdash;</subscript></highlight>4&rdquo; as indicating that the message is a recommendation request message <highlight><bold>521</bold></highlight>. In response, the server op code parser <highlight><bold>216</bold></highlight> invokes step <highlight><bold>240</bold></highlight> of the server recommendation algorithms <highlight><bold>166</bold></highlight>. Step <highlight><bold>240</bold></highlight> receives the metadata vector <highlight><bold>138</bold></highlight> from the message <highlight><bold>521</bold></highlight> and accesses recommendations from the database <highlight><bold>192</bold></highlight> corresponding to the current context. The process then flows to step <highlight><bold>243</bold></highlight> which searches through the accessed recommendations obtained from the database to find those similar to the past services used XML file <highlight><bold>235</bold></highlight>&prime; input from the message <highlight><bold>521</bold></highlight>. The process then flows to step <highlight><bold>244</bold></highlight> which sorts the similar recommendations in accordance with the user&apos;s preferences <highlight><bold>231</bold></highlight>, also received in the message <highlight><bold>521</bold></highlight>. The process then flows to step <highlight><bold>246</bold></highlight> which updates usage statistics and stores them in a database. The process then flows to step <highlight><bold>248</bold></highlight> which assembles the recommendation response message <highlight><bold>521</bold></highlight>&prime; and transmits it back to the wireless device <highlight><bold>100</bold></highlight>. The recommendation response message <highlight><bold>521</bold></highlight>&prime; includes the network address of the wireless device <highlight><bold>100</bold></highlight>, the op code &ldquo;REC<highlight><subscript>&mdash;</subscript></highlight>3&rdquo; that designates the message as a recommendation response message, and the operands. The operands include the recommendations XML file <highlight><bold>250</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 2G</cross-reference> is similar to the flow diagram of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>E, of the process in the wireless device <highlight><bold>100</bold></highlight> to filter the recommendations received in the recommendation response message and display the filtered recommendations on the device&apos;s browser. The process displays the filtered recommendations to the user on the browser <highlight><bold>102</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1E</cross-reference>. This same sequence of steps is automatically performed by the wireless device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight> in response to the wireless device <highlight><bold>100</bold></highlight> automatically transmitting messages with a unique op code designating that the message is an automatically transmitted message. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> Another example of the invention is when the user requests a location-based recommendation with the device <highlight><bold>100</bold></highlight>. As discussed above, <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows the service history log <highlight><bold>110</bold></highlight> has accumulated data on past services used by the user of the device <highlight><bold>100</bold></highlight> and the contexts of those past services. The recommendation algorithms <highlight><bold>112</bold></highlight> automatically filters the service history log <highlight><bold>110</bold></highlight> and selects past services used by the user of the device <highlight><bold>100</bold></highlight> and the contexts of those past services, treating them as context-activity pairs. It is not necessary that these pairs of selected past services used and past contexts be related to the current context of the device <highlight><bold>100</bold></highlight>. Two examples of these past pairs of selected past services used and past contexts are numbered &lsqb;10&rsqb; and &lsqb;11&rsqb; as follows: </paragraph>
<paragraph id="P-0140" lvl="2"><number>&lsqb;0140&rsqb;</number> &lsqb;10&rsqb; &ldquo;location&equals;xyz1; service&equals;www.newsservice.com/ . . . /news.wml&rdquo;, and </paragraph>
<paragraph id="P-0141" lvl="2"><number>&lsqb;0141&rsqb;</number> &lsqb;11&rsqb; &ldquo;location&equals;xyz2; service&equals;www.stockquotes.com/ . . . /quotes.wml&rdquo;. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> The device <highlight><bold>100</bold></highlight> then sends these two automatically selected past pairs to the network server <highlight><bold>140</bold></highlight>. The recommendation algorithms <highlight><bold>112</bold></highlight> filter out any reference to the user&apos;s ID before sending the pairs to the server. Then, device <highlight><bold>100</bold></highlight> then sends the current context &ldquo;location&equals;xyz3&rdquo; to the network server <highlight><bold>140</bold></highlight>. The current context &ldquo;xyz3&rdquo; can represent the airport, for example. When the network server <highlight><bold>140</bold></highlight> receives the two example past pairs of selected past services used and past contexts, it stores them in its database <highlight><bold>192</bold></highlight>. Past pairs such as these can be accumulated from many users as recommendation resource in the database <highlight><bold>192</bold></highlight> for use by many other users. Examples of nine other past pairs previously accumulated in database <highlight><bold>192</bold></highlight> from other users are: </paragraph>
<paragraph id="P-0143" lvl="2"><number>&lsqb;0143&rsqb;</number> &lsqb;1&rsqb; &ldquo;location&equals;xyz3; service&equals;www.airlines1.com/ . . . /timetables.wml&rdquo;, </paragraph>
<paragraph id="P-0144" lvl="2"><number>&lsqb;0144&rsqb;</number> &lsqb;2&rsqb; &ldquo;location&equals;xyz3; service&equals;www.airlines2.com/ . . . /timetables.wml&rdquo;, </paragraph>
<paragraph id="P-0145" lvl="2"><number>&lsqb;0145&rsqb;</number> &lsqb;3&rsqb; &ldquo;location&equals;xyz3; service&equals;www.airlines3.com/ . . . /timetables.wml&rdquo;, </paragraph>
<paragraph id="P-0146" lvl="2"><number>&lsqb;0146&rsqb;</number> &lsqb;4&rsqb; &ldquo;location&equals;xyz3; service&equals;www.weatheronline.com/ . . . /weather.wml&rdquo;, </paragraph>
<paragraph id="P-0147" lvl="2"><number>&lsqb;0147&rsqb;</number> &lsqb;5&rsqb; &ldquo;location&equals;xyz4; service&equals;www.horoscope1.com/ . . . /stars.wml&rdquo;, </paragraph>
<paragraph id="P-0148" lvl="2"><number>&lsqb;0148&rsqb;</number> &lsqb;6&rsqb; &ldquo;location&equals;xyz4; service&equals;www.horoscope2.com/ . . . /stars.wml&rdquo;, </paragraph>
<paragraph id="P-0149" lvl="2"><number>&lsqb;0149&rsqb;</number> &lsqb;7&rsqb; &ldquo;location&equals;xyz5; service&equals;www.emailservice1.com/ . . . /mail.wml&rdquo;, </paragraph>
<paragraph id="P-0150" lvl="2"><number>&lsqb;0150&rsqb;</number> &lsqb;8&rsqb; &ldquo;location&equals;xyz5; service&equals;www.emailservice2.com/ . . . /mail.wml&rdquo;, and </paragraph>
<paragraph id="P-0151" lvl="2"><number>&lsqb;0151&rsqb;</number> &lsqb;9&rsqb; &ldquo;location&equals;xyz5; service&equals;www.emailservice3.com/ . . . /mail.wml&rdquo;, </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> The network server <highlight><bold>140</bold></highlight> compares the current context &ldquo;location&equals;xyz3&rdquo; the past contexts of past pairs previously accumulated in database <highlight><bold>192</bold></highlight>. There are four matches: </paragraph>
<paragraph id="P-0153" lvl="2"><number>&lsqb;0153&rsqb;</number> &lsqb;1&rsqb; &ldquo;location&equals;xyz3; service&equals;www.airlines1.com/ . . . /timetables.wml&rdquo;, </paragraph>
<paragraph id="P-0154" lvl="2"><number>&lsqb;0154&rsqb;</number> &lsqb;2&rsqb; &ldquo;location&equals;xyz3; service&equals;www.airlines2.com/ . . . /timetables.wml&rdquo;, </paragraph>
<paragraph id="P-0155" lvl="2"><number>&lsqb;0155&rsqb;</number> &lsqb;3&rsqb; &ldquo;location&equals;xyz3; service&equals;www.airlines.3com/ . . . /timetables.wml&rdquo;, and </paragraph>
<paragraph id="P-0156" lvl="2"><number>&lsqb;0156&rsqb;</number> &lsqb;4&rsqb; &ldquo;location&equals;xyz3; service&equals;www.weatheronline.com/ . . . /weather.wml&rdquo;. </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> The network server <highlight><bold>140</bold></highlight> sends a list of the four past services used (by others) taken from the list of the four matches, as four recommendations to the user&apos;s device <highlight><bold>100</bold></highlight>. The four recommendations are: </paragraph>
<paragraph id="P-0158" lvl="2"><number>&lsqb;0158&rsqb;</number> &lsqb;1&rsqb; service&equals;www.airlines1.com/ . . . /timetables.wml&rdquo;, </paragraph>
<paragraph id="P-0159" lvl="2"><number>&lsqb;0159&rsqb;</number> &lsqb;2&rsqb; service&equals;www.airlines2.com/ . . . /timetables.wml&rdquo;, </paragraph>
<paragraph id="P-0160" lvl="2"><number>&lsqb;0160&rsqb;</number> &lsqb;3&rsqb; service&equals;www.airlines.3com/ . . . /timetables.wml&rdquo;, and </paragraph>
<paragraph id="P-0161" lvl="2"><number>&lsqb;0161&rsqb;</number> &lsqb;4&rsqb; service&equals;www.weatheronline.com/ . . . /weather.wml&rdquo;. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> The recommendation algorithms <highlight><bold>112</bold></highlight> in the user&apos;s device can filter these four recommendations received from the server, if desired. The filtered recommendations are then displayed to the user and one or more of these displayed recommendations can be selected. The user&apos;s selected recommendations and the current context &ldquo;location&equals;xyz3&rdquo; are then stored in the service history log <highlight><bold>110</bold></highlight>. For example, if the user selects: </paragraph>
<paragraph id="P-0163" lvl="2"><number>&lsqb;0163&rsqb;</number> &lsqb;2&rsqb; service&equals;www.airlines2.com/ . . . /timetables.wml&rdquo;, </paragraph>
<paragraph id="P-0164" lvl="2"><number>&lsqb;0164&rsqb;</number> then this recommendation and the current context &ldquo;location&equals;xyz3&rdquo; are stored in the service history log <highlight><bold>110</bold></highlight>. </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> Turning now to <cross-reference target="DRAWINGS">FIG. 3, a</cross-reference> functional block diagram is shown of the wireless device <highlight><bold>100</bold></highlight>, with its various components and programs. The memory <highlight><bold>202</bold></highlight> of the wireless device <highlight><bold>100</bold></highlight> is connected by means of the bus <highlight><bold>204</bold></highlight> to the keypad <highlight><bold>104</bold></highlight>, the radio <highlight><bold>206</bold></highlight>, the sensor interface <highlight><bold>208</bold></highlight>, the central processor <highlight><bold>210</bold></highlight>, and the display <highlight><bold>212</bold></highlight> which displays the browser <highlight><bold>102</bold></highlight>. The memory <highlight><bold>202</bold></highlight> stores the context-activity pair and service history log <highlight><bold>110</bold></highlight>, which is shown in greater detail in a first example in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> and in a second example in <cross-reference target="DRAWINGS">FIG. 6B</cross-reference>. The memory <highlight><bold>202</bold></highlight> also stores the current context state <highlight><bold>111</bold></highlight> which includes a description of the environment of the wireless device <highlight><bold>100</bold></highlight> at the present time. As will be discussed further below, the characterization of the environment of the wireless device <highlight><bold>100</bold></highlight>, includes the metadata vector <highlight><bold>138</bold></highlight> which includes information relating to the sensor signals input from the sensors at the current time. Also included in the memory <highlight><bold>202</bold></highlight> are recommendation algorithms <highlight><bold>112</bold></highlight> which will be discussed further below. </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> is a functional block diagram of the wireless device <highlight><bold>100</bold></highlight>, the server <highlight><bold>140</bold></highlight> and the webserver <highlight><bold>160</bold></highlight> and their interaction when exchanging a metadata vector <highlight><bold>138</bold></highlight> and privacy control data <highlight><bold>150</bold></highlight>&prime; and when exchanging a context-activity pair <highlight><bold>190</bold></highlight> and associated recommendations <highlight><bold>200</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> will be discussed in greater detail below in conjunction with the network process flow diagram of <cross-reference target="DRAWINGS">FIG. 3B</cross-reference> which shows the interaction of the wireless device <highlight><bold>100</bold></highlight> with the network server <highlight><bold>140</bold></highlight> and the web server <highlight><bold>160</bold></highlight> when carrying out the determination of the current context of the wireless device <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0167" lvl="0"><number>&lsqb;0167&rsqb;</number> Turning now to <cross-reference target="DRAWINGS">FIG. 3C, a</cross-reference> network process flow diagram is shown of the interaction of the wireless device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight> when the user&apos;s wireless device sends a current context-activity pair to the network server <highlight><bold>140</bold></highlight> and the resultant service recommendations received back from the server <highlight><bold>140</bold></highlight>. There are two ways that the user&apos;s device <highlight><bold>100</bold></highlight> can initiate sending the current context-activity pair to the server <highlight><bold>140</bold></highlight>. The first way is shown in step <highlight><bold>322</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>C, where the user&apos;s device <highlight><bold>100</bold></highlight> is programmed to automatically get the current context state <highlight><bold>111</bold></highlight> from the context inference engine <highlight><bold>136</bold></highlight>, and to select an appropriate activity from the history log <highlight><bold>110</bold></highlight>, and to send the current context-activity pair to the server <highlight><bold>140</bold></highlight>. The activities can be past recommendations made by the network server <highlight><bold>140</bold></highlight>, past services used, prestored service preferences, special requested service requirements, or any combination of these. The second way that the device <highlight><bold>100</bold></highlight> can send a context-activity pair is shown in step <highlight><bold>324</bold></highlight>, where the user inputs a selection of an activity onto the request a recommendation sub menu shown in <cross-reference target="DRAWINGS">FIG. 5E</cross-reference> or <highlight><bold>5</bold></highlight>F. In response, the device <highlight><bold>100</bold></highlight> then gets the current context state <highlight><bold>111</bold></highlight> from the context inference engine <highlight><bold>136</bold></highlight>. The device <highlight><bold>100</bold></highlight> then sends the current context-activity pair to the server <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> Step <highlight><bold>326</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3C</cross-reference> shows that the context-activity pair can be processed by the recommendation algorithms <highlight><bold>112</bold></highlight> in the wireless device <highlight><bold>100</bold></highlight>, before transmission to the server <highlight><bold>140</bold></highlight>. An important feature of the invention is that the information transmitted to the network server <highlight><bold>140</bold></highlight> can be without any user identification, in order to preserve the privacy of the user&apos;s information. Often instead of single context-activity pair <highlight><bold>190</bold></highlight> a sample filtered by recommendation algorithm <highlight><bold>112</bold></highlight> of representative context-activity pairs and related service history items from log <highlight><bold>110</bold></highlight> is transmitted to recommendation algorithm <highlight><bold>166</bold></highlight>. That is, message <highlight><bold>190</bold></highlight> is often a set of context-activity pairs and related service history items. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> In an alternate embodiment of the invention shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>E, Step <highlight><bold>326</bold></highlight>&prime; sends to recommendation algorithm <highlight><bold>166</bold></highlight> in server <highlight><bold>140</bold></highlight>, a sample of representative context-activity pairs filtered by algorithm <highlight><bold>112</bold></highlight> and related service history items from log <highlight><bold>110</bold></highlight> as a set of context-activity pairs and related service history items. </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> In step <highlight><bold>328</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>C, the network server <highlight><bold>140</bold></highlight> receives the context-activity pair <highlight><bold>190</bold></highlight> from the device <highlight><bold>100</bold></highlight>, and processes the context-activity pair with the recommendation algorithms <highlight><bold>166</bold></highlight>. The recommendation algorithms <highlight><bold>166</bold></highlight> match the context-activity pairs stored in the database <highlight><bold>192</bold></highlight> which are similar to the context-activity pair which was received from the device <highlight><bold>100</bold></highlight>, and it accesses the associated recommendations for the matched context-activity pairs from the database <highlight><bold>192</bold></highlight>. This can be seen to better advantage in <cross-reference target="DRAWINGS">FIG. 6A</cross-reference> which shows an example of the context-activity pairs and associated services database <highlight><bold>192</bold></highlight> in the server <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> Referring for a moment to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>G, the user has selected at the wireless device <highlight><bold>100</bold></highlight>, the activity of &ldquo;dining&mdash;restaurant&rdquo;. The current context is a particular local time and location, a particular light level, ambient temperature, speed and acceleration. This current context information, values sent from the recommendation algorithms <highlight><bold>111</bold></highlight> in the device <highlight><bold>100</bold></highlight>, past recommendations <highlight><bold>227</bold></highlight> or past services used <highlight><bold>235</bold></highlight>, and optionally the corresponding metadata vector <highlight><bold>138</bold></highlight>, are sent as the context-activity pair information <highlight><bold>190</bold></highlight> to the network server <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 6A</cross-reference> showing an example of the contents of the database <highlight><bold>192</bold></highlight>, the first row in the context-activity pairs column gives a range of times, a range of locations, a range of temperatures and a range of speed and accelerations for context-activity pairs which are to be matched with the current context-activity pair being transmitted from the wireless device <highlight><bold>100</bold></highlight>. The corresponding associated service recommendations are shown in the middle column. For each respective service recommendation in the middle column, there is a corresponding number of times that that particular recommendation has been made to other users in the past, as shown in the right-hand column of <cross-reference target="DRAWINGS">FIG. 6A</cross-reference>. The current context is 8:00 PM at night and therefore the service recommendations seen to be different from the service recommendations that would be made from the second row of the database <highlight><bold>192</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 6A</cross-reference>. In the second row it can be seen that the context-activity pairs deal with a morning timeframe at the same location. There, it can be seen that in the middle column for the second row, the recommendations are not the same as they were for the nighttime recommendations for the first row. Similar to the previous description, the right-hand column of <cross-reference target="DRAWINGS">FIG. 6A</cross-reference> gives the number of times that each respective service recommendation has been made to prior users. The recommendation algorithms <highlight><bold>166</bold></highlight> in the network server <highlight><bold>140</bold></highlight> perform the matching operation and identify the first row in <cross-reference target="DRAWINGS">FIG. 6A</cross-reference> as a match for context-activity pairs. Accordingly, the recommendation algorithms <highlight><bold>166</bold></highlight> in the network server <highlight><bold>140</bold></highlight> return the recommendations <highlight><bold>200</bold></highlight> to the user&apos;s wireless device <highlight><bold>100</bold></highlight>. Those recommendations are the service recommendations shown in the upper row middle column of <cross-reference target="DRAWINGS">FIG. 6A</cross-reference>. The number of times each recommendation has been made can also be transmitted in the recommendations <highlight><bold>200</bold></highlight>. This is performed in the step <highlight><bold>336</bold></highlight> of the process diagram of FIG. <highlight><bold>3</bold></highlight>C. The &ldquo;number of times recommended&rdquo; is only one of the measures which can be used to generate new recommendations. Other measures include parameters based on feedback. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> Step <highlight><bold>332</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3C</cross-reference> receives the recommendations <highlight><bold>200</bold></highlight> at the wireless device <highlight><bold>100</bold></highlight>, and the recommendation algorithms <highlight><bold>112</bold></highlight> apply a filtering operation to the received recommendations to identify any new or significant information. New information can be determined by reference to the context-activity pairs and service history log <highlight><bold>110</bold></highlight> in device <highlight><bold>100</bold></highlight>, which is shown in greater detail in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> and in <cross-reference target="DRAWINGS">FIG. 6B</cross-reference>. There it can be seen that in the past, this particular wireless device <highlight><bold>100</bold></highlight> has received old recommendations for two entries which are also part of the set of recommendations <highlight><bold>200</bold></highlight> now being received from the server <highlight><bold>140</bold></highlight>. The recommendation algorithm <highlight><bold>112</bold></highlight> removes the two old recommendations shown in the top row middle column of <cross-reference target="DRAWINGS">FIG. 6B</cross-reference> so that only the new recommendations received in the recommendations <highlight><bold>200</bold></highlight> from the network server <highlight><bold>140</bold></highlight> are to be displayed to the user in the wireless device <highlight><bold>100</bold></highlight>. The recommendations algorithms <highlight><bold>112</bold></highlight> can make other determinations, for example it can examine the user&apos;s rating of the respective old recommendations as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>B and can take the user&apos;s rating into consideration in the display of current recommendations to the user. The recommendation algorithms <highlight><bold>112</bold></highlight> in the wireless device <highlight><bold>100</bold></highlight> can also take into consideration the number of times that each respective recommendation has been previously recommended to other users, that information having been transmitted in recommendations <highlight><bold>200</bold></highlight> to the wireless device <highlight><bold>100</bold></highlight>. Then in step <highlight><bold>334</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>C, the wireless device displays the filtered recommendations to the user. Alternately, the wireless device can transfer the filtered recommendations to an application program for further processing. In some embodiments the wireless device <highlight><bold>100</bold></highlight> provides feedback to the server <highlight><bold>140</bold></highlight> after step <highlight><bold>334</bold></highlight>. The feedback is used to enhance the quality of later matching operations in step <highlight><bold>328</bold></highlight>. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> At the network server <highlight><bold>140</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>C, step <highlight><bold>336</bold></highlight> transitions to step <highlight><bold>338</bold></highlight> in which the new context-activity pairs and recommendations are added to the database <highlight><bold>192</bold></highlight>. An important feature of this invention is that there is no user identification which is included in the database <highlight><bold>192</bold></highlight>. Then step <highlight><bold>340</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3C</cross-reference> computes usage statistics for the context-activity pairs in the database <highlight><bold>192</bold></highlight> and associates the usage statistics with the respective recommendations stored in the database <highlight><bold>192</bold></highlight>. This information can have economic value to third party service providers such as the service provider <highlight><bold>180</bold></highlight>. As is seen in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>C, step <highlight><bold>342</bold></highlight> shows the third party service provider <highlight><bold>180</bold></highlight> purchasing selected data sets from the database <highlight><bold>192</bold></highlight> to be used for market research. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> An alternate embodiment of the invention is shown in <cross-reference target="DRAWINGS">FIG. 3D</cross-reference>. In the alternate embodiment, the context-activity pair information <highlight><bold>190</bold></highlight> sent by the wireless device <highlight><bold>100</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> to the network server <highlight><bold>140</bold></highlight>, includes the metadata vector <highlight><bold>138</bold></highlight>. Where the processing power or memory capacity of the wireless device <highlight><bold>100</bold></highlight> may be limited, the network server <highlight><bold>140</bold></highlight> can make a more accurate determination of the mobile user&apos;s current context by assisting in the further processing of the metadata vector <highlight><bold>138</bold></highlight>. The metadata vector <highlight><bold>138</bold></highlight>, which is discussed in greater detail below, represents the current sensor signals and characterizes the current state of the wireless device <highlight><bold>100</bold></highlight>. A context inference engine <highlight><bold>142</bold></highlight> in the network server <highlight><bold>140</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> is embodied as programmed instructions executed within the server <highlight><bold>140</bold></highlight>. The resultant current context computed by the server <highlight><bold>140</bold></highlight> and the activity information received from the wireless device <highlight><bold>100</bold></highlight> in the context-activity pair <highlight><bold>190</bold></highlight>, constitute the current context-activity pair. The context-activity pair database <highlight><bold>192</bold></highlight> maintained by the server <highlight><bold>140</bold></highlight> associates a current context-activity pair with appropriate recommendations made in the past to many users. As the system makes new recommendations to users in response to context-activity pairs submitted by their wireless devices, the server <highlight><bold>140</bold></highlight> gathers the new recommendations and adds them to its context-activity pair database <highlight><bold>192</bold></highlight>. No user personal data is included in the context-activity pair database <highlight><bold>192</bold></highlight>. In this manner, the variety, quality and pertinence of the recommendations in the database <highlight><bold>192</bold></highlight> grows as the recommendation system is used. As an added benefit, the server <highlight><bold>140</bold></highlight> compiles statistical usage information about the recommendations and stores this in the context-activity pair database <highlight><bold>192</bold></highlight>. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> The network process flow diagram of the alternate embodiment of <cross-reference target="DRAWINGS">FIG. 3D</cross-reference> begins with either step <highlight><bold>321</bold></highlight> or step <highlight><bold>323</bold></highlight> in the user&apos;s wireless device <highlight><bold>100</bold></highlight>. In step <highlight><bold>321</bold></highlight>, the user&apos;s device <highlight><bold>100</bold></highlight> is programmed to automatically get the current metadata vector <highlight><bold>138</bold></highlight> from the context inference engine <highlight><bold>136</bold></highlight>, and to select an appropriate activity from the history log <highlight><bold>110</bold></highlight>. In alternate step <highlight><bold>323</bold></highlight>, the user can make an activity selection from the request a recommendation sub menu shown in <cross-reference target="DRAWINGS">FIG. 5E</cross-reference> or <highlight><bold>5</bold></highlight>F. Both steps <highlight><bold>321</bold></highlight> and <highlight><bold>323</bold></highlight> flow into step <highlight><bold>325</bold></highlight> in the user&apos;s wireless device <highlight><bold>100</bold></highlight>. In step <highlight><bold>325</bold></highlight>, the context inference engine <highlight><bold>136</bold></highlight> contacts the context inference engine <highlight><bold>142</bold></highlight> of the network server <highlight><bold>140</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>A, and sends the metadata vector <highlight><bold>138</bold></highlight> and activity as the context-activity pair <highlight><bold>190</bold></highlight> to server <highlight><bold>140</bold></highlight>. The process then flows to step <highlight><bold>327</bold></highlight> in the network server <highlight><bold>140</bold></highlight>. The context inference engine <highlight><bold>142</bold></highlight> at network server <highlight><bold>140</bold></highlight> uses user information stored in the server in the user database <highlight><bold>146</bold></highlight> to make a more accurate determination of the wireless device&apos;s current context. Step <highlight><bold>327</bold></highlight> then flows to step <highlight><bold>328</bold></highlight>, and the rest of the steps in the flow diagram of <cross-reference target="DRAWINGS">FIG. 3D</cross-reference> are substantially the same as those described above for <cross-reference target="DRAWINGS">FIG. 3C</cross-reference>. In this manner, the network server <highlight><bold>140</bold></highlight> can then assist the wireless device <highlight><bold>100</bold></highlight> in determining the wireless device&apos;s current context, as well as the server <highlight><bold>140</bold></highlight> sending the resultant service recommendations back to the wireless device <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> Context Sensitive Web Services </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> The context sensitive web services feature enables a mobile phone or wireless PDA to use context inference techniques to sense the user&apos;s environment and in response, to provide recommendations to the user that is appropriate to the user&apos;s perceived environment. The feature offloads some of the computationally intensive computing necessary in context inference techniques, from the mobile user&apos;s wireless device to a server and to web sites on the Internet. The context sensitive web services feature maintains a personal profile of the mobile user&apos;s personal preferences in an online server or web site. The mobile user is provided with the ability to control access by application programs in the wireless device, to the user&apos;s private data. The context sensitive web services feature provide the mobile user with the ability to control any access to the user&apos;s profile by the online server or web site. </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> The mobile user&apos;s wireless device is equipped with a context inference engine for providing and awareness of the mobile user&apos;s context to application programs, including third party applications. Since the processing power and storage capacity is limited in typical wireless devices, the computational load and storage requirements of the context inference engine are distributed to a context inference server capable of processing the context data. The feature enables the mobile user to control which application programs in the wireless device are granted access to the user&apos;s private context information. A privacy control block in the wireless device grants or revokes access by application programs to the private context information, based on the mobile user&apos;s preferences stored in a privacy profile. The same privacy control and privacy profile is extended to the context inference server, thereby enabling the extension of the user&apos;s privacy control to any web server connected to the context inference server. The feature thus enables building an infrastructure for context sensitive applications and services within the wireless device and the server, while providing to the mobile user control over the privacy user&apos;s context information. </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> The Recommendation Web Services menu displayed by the microbrowser <highlight><bold>102</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is rendered by the WAP client program under the control of the application programs <highlight><bold>106</bold></highlight>, which are shown in <cross-reference target="DRAWINGS">FIGS. 3 and 3</cross-reference>A. If the UPDATE PRIVACY FEATURES session type is selected by the user, the Recommendation Web Services menu of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> then presents to the user the UPDATE PRIVACY FEATURES sub-menu from which the user can select the following options: </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> &lsqb;A&rsqb; UPDATE PRIVACY FEATURES: </paragraph>
<paragraph id="P-0182" lvl="2"><number>&lsqb;0182&rsqb;</number> &lsqb;1&rsqb; UPDATE YOUR PRIVACY PROFILE </paragraph>
<paragraph id="P-0183" lvl="2"><number>&lsqb;0183&rsqb;</number> &lsqb;2&rsqb; UPDATE YOUR PERSONAL DATA </paragraph>
<paragraph id="P-0184" lvl="2"><number>&lsqb;0184&rsqb;</number> &lsqb;3&rsqb; AUTHENTICATE A PROGRAM </paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> Option &lsqb;1&rsqb; of UPDATE YOUR PRIVACY PROFILE, leads to a second sub-menu shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>A, which has the following options: </paragraph>
<paragraph id="P-0187" lvl="2"><number>&lsqb;0187&rsqb;</number> &lsqb;1&rsqb; UPDATE YOUR PRIVACY PROFILE </paragraph>
<paragraph id="P-0188" lvl="3"><number>&lsqb;0188&rsqb;</number> &lsqb;a&rsqb; Add a local program to permissions list </paragraph>
<paragraph id="P-0189" lvl="3"><number>&lsqb;0189&rsqb;</number> &lsqb;b&rsqb; Remove a local program from list </paragraph>
<paragraph id="P-0190" lvl="3"><number>&lsqb;0190&rsqb;</number> &lsqb;c&rsqb; Add a server program to permissions list </paragraph>
<paragraph id="P-0191" lvl="3"><number>&lsqb;0191&rsqb;</number> &lsqb;d&rsqb; Remove a server program from list </paragraph>
<paragraph id="P-0192" lvl="3"><number>&lsqb;0192&rsqb;</number> &lsqb;e&rsqb; Add a network program to permissions list </paragraph>
<paragraph id="P-0193" lvl="3"><number>&lsqb;0193&rsqb;</number> &lsqb;f&rsqb; Remove a network program from list. </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> Option &lsqb;2&rsqb; of UPDATE YOUR PERSONAL DATA, leads to a another sub-menu shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>A, which has the following options: </paragraph>
<paragraph id="P-0195" lvl="2"><number>&lsqb;0195&rsqb;</number> &lsqb;2&rsqb; UPDATE YOUR PERSONAL DATA </paragraph>
<paragraph id="P-0196" lvl="3"><number>&lsqb;0196&rsqb;</number> &lsqb;a&rsqb; Update server database </paragraph>
<paragraph id="P-0197" lvl="3"><number>&lsqb;0197&rsqb;</number> &lsqb;b&rsqb; Update network database. </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> Option &lsqb;3&rsqb; of AUTHENTICATE A PROGRAM, leads to a another sub-menu shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>A, which has the following options: </paragraph>
<paragraph id="P-0199" lvl="2"><number>&lsqb;0199&rsqb;</number> &lsqb;3&rsqb; AUTHENTICATE A PROGRAM </paragraph>
<paragraph id="P-0200" lvl="3"><number>&lsqb;0200&rsqb;</number> &lsqb;a&rsqb; Request program&apos;s public key certificate </paragraph>
<paragraph id="P-0201" lvl="3"><number>&lsqb;0201&rsqb;</number> &lsqb;b&rsqb; Verify certificate signatures </paragraph>
<paragraph id="P-0202" lvl="3"><number>&lsqb;0202&rsqb;</number> &lsqb;c&rsqb; Verify validity time </paragraph>
<paragraph id="P-0203" lvl="3"><number>&lsqb;0203&rsqb;</number> &lsqb;d&rsqb; Verify revocation status </paragraph>
<paragraph id="P-0204" lvl="3"><number>&lsqb;0204&rsqb;</number> &lsqb;e&rsqb; Check if certificate authority on trust list </paragraph>
<paragraph id="P-0205" lvl="3"><number>&lsqb;0205&rsqb;</number> &lsqb;f&rsqb; Flag program as authenticated. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> The AUTHENTICATE A PROGRAM option calls the privacy control <highlight><bold>150</bold></highlight> of the wireless device <highlight><bold>100</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. If an application program A, B, X, or Y has been verified for its acceptability by a trusted authority, then the trusted authority will have issued a digital certificate on a message authentication code (MAC) it has computed for the application program, which can be checked by the privacy control <highlight><bold>150</bold></highlight>. As long as the privacy control <highlight><bold>150</bold></highlight> trusts the trusted authority issuing the digital certificate, authentication of the application program is straight forward. </paragraph>
<paragraph id="P-0207" lvl="0"><number>&lsqb;0207&rsqb;</number> Once the mobile user has verified the program&apos;s digital certificate and is satisfied that the application program will not subvert the integrity or security of the user&apos;s private data, the user can register the program. Registration is the granting by the user of access permission to the program, to access the current context of the user&apos;s wireless device and/or to access other portions of the user&apos;s private data. There are several levels of permission that can be granted by the user in two categories, &lsqb;a&rsqb; when can the accesses take place and &lsqb;b&rsqb; what data can be accessed. </paragraph>
<paragraph id="P-0208" lvl="0"><number>&lsqb;0208&rsqb;</number> Option &lsqb;4&rsqb; of REGISTER A PROGRAM, leads to a another sub-menu shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>A, which has the following options: </paragraph>
<paragraph id="P-0209" lvl="2"><number>&lsqb;0209&rsqb;</number> &lsqb;4&rsqb; REGISTER A PROGRAM </paragraph>
<paragraph id="P-0210" lvl="3"><number>&lsqb;0210&rsqb;</number> &lsqb;a&rsqb; When can the accesses take place </paragraph>
<paragraph id="P-0211" lvl="3"><number>&lsqb;0211&rsqb;</number> &lsqb;b&rsqb; What data can be accessed </paragraph>
<paragraph id="P-0212" lvl="0"><number>&lsqb;0212&rsqb;</number> For the first category of &lsqb;a&rsqb; when can the accesses take place, the highest level of permission in this category is that access can occur anytime and without notice. The lowest level of permission in this category is that access can only occur at specified times or under specified conditions, and only after notice to the user and specific authorization by the user. For the second category of &lsqb;b&rsqb; what data can be accessed, the highest level of permission in this category is to access unlimited datasets in the user&apos;s private data, including current context information, personal data entered by the user, the user&apos;s Internet usage history data, the user&apos;s Internet cookie data, and the user&apos;s application program usage data. The lowest level of permission in this category is that access of any data can only occur after notice to the user and specific authorization by the user. The user can configure any levels of permission in between the highest and lowest and make that the basis for the registration. The user can include the terms of registration in a digital certificate signed by the user and appended to the application program. This registration certificate can be presented by the program to the privacy control <highlight><bold>150</bold></highlight> prior to a proposed access event, the privacy control <highlight><bold>150</bold></highlight> to automatically verify the registration status of the program. The registration certificate can be constructed as follows. </paragraph>
<paragraph id="P-0213" lvl="0"><number>&lsqb;0213&rsqb;</number> The privacy control <highlight><bold>150</bold></highlight> can compute a message authentication code (MAC) and its own digital signature and append it as a certificate to an acceptable application program A, B, X, or Y. The privacy control <highlight><bold>150</bold></highlight> can include the terms of registration in the digital certificate. Then when the program requests access to the user&apos;s private data, the privacy control <highlight><bold>150</bold></highlight> can automatically check the MAC and its own digital signature to verify that the program has not been changed and the privacy control <highlight><bold>150</bold></highlight> can also automatically verify the registration status of the program. This is achieved by the privacy control <highlight><bold>150</bold></highlight> computing a hash value for the entire application program A, B, X, or Y (or some portion of it) and the terms of registration, and then forming a message authentication code (MAC) from the hash value. The privacy control <highlight><bold>150</bold></highlight> then uses its PKI private key to digitally sign the message authentication code (MAC). The terms of the registration, the MAC and the privacy control&apos;s digital signature are appended to the application program A, B, X, or Y as a registration certificate. </paragraph>
<paragraph id="P-0214" lvl="0"><number>&lsqb;0214&rsqb;</number> Then, whenever the application program A, B, X, or Y requests access to the user&apos;s context data or private data, the privacy control <highlight><bold>150</bold></highlight> will require the application program to present the registration certificate so that the privacy control <highlight><bold>150</bold></highlight> can check that the presented MAC compares with a computed MAC and that the presented digital signature is genuine. The privacy control <highlight><bold>150</bold></highlight> can then automatically grant access permission to the application program, in accordance with the terms of the registration. </paragraph>
<paragraph id="P-0215" lvl="0"><number>&lsqb;0215&rsqb;</number> Methods to generate and evaluate message authentication codes to insure the integrity of data are described in the book by Stephen Thomas entitled <highlight><italic>SSL and TLS, </italic></highlight>published by John Wiley and Sons, 2000. Two example algorithms for message authentication are RSA&apos;s Message Digest (MD5) and the Secure Hash Algorithm (SHA), both of which are described in the book by Stephen Thomas. Another reference that goes into greater detail in its discussion of data integrity methods is the book by Bruce Schneier entitled <highlight><italic>Applied Cryptography </italic></highlight>-2<highlight><italic>nd Edition </italic></highlight>published by John Wiley and Sons, 1996. Methods to generate and evaluate digital signatures to insure the source of the digital program are described in the book by Richard E. Smith entitled <highlight><italic>Internet Cryptography, </italic></highlight>published by Addison Wesley, 1997. </paragraph>
<paragraph id="P-0216" lvl="0"><number>&lsqb;0216&rsqb;</number> What has been described here for the privacy control <highlight><bold>150</bold></highlight> in the wireless device <highlight><bold>100</bold></highlight>, is equally applicable to the privacy control <highlight><bold>164</bold></highlight> in the network server <highlight><bold>140</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3A</cross-reference>. The privacy control <highlight><bold>164</bold></highlight> in the network server <highlight><bold>140</bold></highlight> can compute the message authentication code (MAC) and its own digital signature and append it, with the terms of the registration, as a registration certificate to an acceptable application program in the web server <highlight><bold>160</bold></highlight>. Privacy control <highlight><bold>164</bold></highlight> has a cached copy <highlight><bold>144</bold></highlight> of the Privacy Profile <highlight><bold>152</bold></highlight> of the wireless device <highlight><bold>100</bold></highlight>. This enables automatically processing the privacy check in the network Server <highlight><bold>140</bold></highlight> for access requests from web server <highlight><bold>160</bold></highlight>. When the application program in the web server <highlight><bold>160</bold></highlight> requests access to the user&apos;s private data in the network server <highlight><bold>140</bold></highlight> or in the wireless device <highlight><bold>100</bold></highlight>, the privacy control <highlight><bold>164</bold></highlight> in the network server <highlight><bold>140</bold></highlight> will require the application program in the web server <highlight><bold>160</bold></highlight> to present the registration certificate so that it can check the MAC and its own digital signature to verify that the application program has not been changed. The privacy control <highlight><bold>164</bold></highlight> can then automatically grant access permission to the application program in the web server <highlight><bold>160</bold></highlight>, in accordance with the terms of the registration. </paragraph>
<paragraph id="P-0217" lvl="0"><number>&lsqb;0217&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a functional block diagram of the wireless device <highlight><bold>100</bold></highlight>, showing its various components and programs. The wireless device <highlight><bold>100</bold></highlight> has context sensitive applications A, B, X, and Y, either downloaded, or in firmware. The wireless device <highlight><bold>100</bold></highlight> does not need to utilize external functionality in the network for the initial sampling and digitization of the sensor inputs. The sampled and digitized values of the sensor inputs are POSITIONING METADATA <highlight><bold>122</bold></highlight>&prime;, TOUCH METADATA <highlight><bold>124</bold></highlight>&prime; AUDIO METADATA <highlight><bold>125</bold></highlight>&prime;, COMPASS METADATA <highlight><bold>126</bold></highlight>&prime;, AMBIENT LIGHT METADATA <highlight><bold>128</bold></highlight>&prime;, AMBIENT TEMPERATURE METADATA <highlight><bold>132</bold></highlight>&prime;, and THREE-AXIS ACCELERATION METADATA <highlight><bold>134</bold></highlight>&prime;. The sampled and digitized values of the sensor inputs are loaded into a metadata vector <highlight><bold>138</bold></highlight>. </paragraph>
<paragraph id="P-0218" lvl="0"><number>&lsqb;0218&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows the memory <highlight><bold>202</bold></highlight> of the wireless device <highlight><bold>100</bold></highlight>, connected by the bus <highlight><bold>204</bold></highlight> to the keypad <highlight><bold>104</bold></highlight>, the radio <highlight><bold>206</bold></highlight>, the sensor interface <highlight><bold>208</bold></highlight>, the central processor <highlight><bold>210</bold></highlight>, and the display <highlight><bold>212</bold></highlight>. The memory <highlight><bold>202</bold></highlight> stores programs which are sequences of executable instructions which, when executed by the processor <highlight><bold>210</bold></highlight>, carry out the methods of the feature. The memory <highlight><bold>202</bold></highlight> stores the WAP client program, the context inference engine <highlight><bold>136</bold></highlight>, the privacy control <highlight><bold>150</bold></highlight>, the privacy profile <highlight><bold>152</bold></highlight>, the context aware API <highlight><bold>154</bold></highlight>, the motion/gesture API <highlight><bold>156</bold></highlight>, the location API <highlight><bold>158</bold></highlight>, and other APIs <highlight><bold>162</bold></highlight>. The context inference engine <highlight><bold>136</bold></highlight> processes the metadata vector <highlight><bold>138</bold></highlight> to produce the current context. Application programs <highlight><bold>106</bold></highlight> stored in the memory <highlight><bold>202</bold></highlight> include the application programs A and B which are part of the software system SS1, and the application programs X and Y which are contained in the execution environment &ldquo;Exec. Env.&rdquo;</paragraph>
<paragraph id="P-0219" lvl="0"><number>&lsqb;0219&rsqb;</number> If sufficient computational power and storage capacity are available in the wireless device <highlight><bold>100</bold></highlight>, further processing of the metadata vector <highlight><bold>138</bold></highlight> can take place in the context inference engine <highlight><bold>136</bold></highlight>, toward the objective of producing the result of an inferred current context. However, if at some point in the computation, the context inference engine <highlight><bold>136</bold></highlight> needs the processing power or storage capacity available at the network server <highlight><bold>140</bold></highlight>, the metadata vector <highlight><bold>138</bold></highlight> is sent from the wireless device <highlight><bold>100</bold></highlight> to the context inference engine <highlight><bold>142</bold></highlight> in the network server <highlight><bold>140</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3A</cross-reference>. The context inference engine <highlight><bold>142</bold></highlight> in the network server <highlight><bold>140</bold></highlight> an inferred current context can perform the required processing on the metadata vector <highlight><bold>138</bold></highlight> and then return it to the context inference engine <highlight><bold>136</bold></highlight> in the wireless device <highlight><bold>100</bold></highlight> for completion of the an inferred current context result. Alternately, the context inference engine <highlight><bold>142</bold></highlight> in the network server <highlight><bold>140</bold></highlight> can complete the required processing and then return the resultant inferred current context to the wireless device <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0220" lvl="0"><number>&lsqb;0220&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows the architecture of a wireless device with support for context awareness. The context awareness is built on top of sensory information received from various types of sensors physically located in the handset shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The sensors shown include POSITIONING SENSOR <highlight><bold>122</bold></highlight>, TOUCH SENSOR <highlight><bold>124</bold></highlight>, AUDIO SENSOR <highlight><bold>125</bold></highlight>, COMPASS SENSOR <highlight><bold>126</bold></highlight>, AMBIENT LIGHT SENSOR <highlight><bold>128</bold></highlight>, AMBIENT TEMPERATURE SENSOR <highlight><bold>132</bold></highlight>, and THREE-AXIS ACCELERATION SENSOR <highlight><bold>134</bold></highlight>. The sensors can also be located in accessory-like phone covers or in a wireless accessory such as a Bluetooth enabled device. The sensors may also be located in the environment such as in the user&apos;s rooms or vehicles. Also, the time duration of use of a phone and other available information can be used along with sensor data in context awareness services. </paragraph>
<paragraph id="P-0221" lvl="0"><number>&lsqb;0221&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows sensor data received from the sensors <highlight><bold>122</bold></highlight>, <highlight><bold>124</bold></highlight>, <highlight><bold>125</bold></highlight>, <highlight><bold>126</bold></highlight>, <highlight><bold>128</bold></highlight>, <highlight><bold>132</bold></highlight>, and <highlight><bold>134</bold></highlight> is processed by Context Inference Engine <highlight><bold>136</bold></highlight> which then feeds the data through various APIs <highlight><bold>154</bold></highlight>, <highlight><bold>156</bold></highlight>, <highlight><bold>158</bold></highlight>, and <highlight><bold>162</bold></highlight> to application programs A, B, X, and Y. The application programs may register themselves at the Application Programming Interface <highlight><bold>154</bold></highlight> to receive current context or changes in the context. This enables context sensitivity in the application programs. </paragraph>
<paragraph id="P-0222" lvl="0"><number>&lsqb;0222&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows &ldquo;native&rdquo; application programs A and B which are executed in a first software system SS1 of the wireless device <highlight><bold>100</bold></highlight>. The term &ldquo;Software System&rdquo; is used here for any environment with execution capability. This first software system may be proprietary or based on a commercially available real-time operating system, such as NOS, ISA, EPOC, JAVA, or WAP. Third party application programs X and are executed within an execution environment. This execution environment may limit the system capabilities available for the application programs, such as access to APIs (fixed, not dynamic behavior). </paragraph>
<paragraph id="P-0223" lvl="0"><number>&lsqb;0223&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows the mobile user&apos;s privacy control feature. The privacy control feature enables the user to designate which application programs are granted access to the context awareness APIs <highlight><bold>154</bold></highlight> to utilize the current context information produced by the context inference engine <highlight><bold>136</bold></highlight>. All requests or registrations by application programs A, B, X, and Y to have access to the Context Inference Engine <highlight><bold>136</bold></highlight>, must first go through the Privacy Control block <highlight><bold>150</bold></highlight>. Privacy Control block <highlight><bold>150</bold></highlight> uses the user&apos;s security data check stored in the Privacy Profile <highlight><bold>152</bold></highlight> to grant access rights to the requesting application programs. The user controls the granting of access rights by means of the user&apos;s security data input by the user through the user interface. The user&apos;s security data includes permissions list <highlight><bold>155</bold></highlight>, Public Key Infrastructure (PKI) certificates <highlight><bold>157</bold></highlight>, PKI trusted authority trust list <highlight><bold>159</bold></highlight>, and flags set by the user for those application programs that have been authenticated by the PKI procedures, data set <highlight><bold>161</bold></highlight>. The user can update the user&apos;s security data with the UPDATE PRIVACY FEATURES menu displayed by the wireless device <highlight><bold>100</bold></highlight> shown in <cross-reference target="DRAWINGS">FIGS. 5A and 5B</cross-reference>. Access might be granted to an application program based on its digital signature, which is a part of the system applications, or other means known in the art. It is also possible to provide a separate system-wide Privacy User Interface to the privacy control <highlight><bold>150</bold></highlight>, which can be employed by the mobile user to set the privacy policies and to alert the mobile user that an application program is attempting to register to receive the user&apos;s private context awareness information. The privacy control <highlight><bold>150</bold></highlight> and Privacy Profile <highlight><bold>152</bold></highlight> enable the mobile user to grant, deny, or revoke access, to grant access for a limited time, or to require an application program to always request registration before the user grants access. </paragraph>
<paragraph id="P-0224" lvl="0"><number>&lsqb;0224&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the Context Inference Engine <highlight><bold>136</bold></highlight> in the wireless device <highlight><bold>100</bold></highlight> makes inferences from all the sensor inputs based on where the wireless device is located by the mobile user. For instance the inferred current context of the device <highlight><bold>100</bold></highlight> may be &ldquo;IN THE USER&apos;S POCKET&rdquo;, when a certain set of sensors input a specific combination of signals having a specific value range. As an example, the resulting inference of the current context by the Context Interference Engine <highlight><bold>136</bold></highlight> could be expressed in XML language format as follows: </paragraph>
<paragraph id="P-0225" lvl="7"><number>&lsqb;0225&rsqb;</number> &lt;Context Inference Engine in Device&gt;</paragraph>
<paragraph id="P-0226" lvl="2"><number>&lsqb;0226&rsqb;</number> &lt;device placement&gt;pocket &lt;/device placement&gt;</paragraph>
<paragraph id="P-0227" lvl="2"><number>&lsqb;0227&rsqb;</number> &lt;User Interface state&gt;sleep mode &lt;/User Interface state&gt;</paragraph>
<paragraph id="P-0228" lvl="2"><number>&lsqb;0228&rsqb;</number> &lt;device location&gt;in elevator 5 building 1 floor 2&lt;/device location&gt;</paragraph>
<paragraph id="P-0229" lvl="2"><number>&lsqb;0229&rsqb;</number> &lt;API active actions&gt;meeting starting on floor 3 room 322 &lt;/API active actions&gt;</paragraph>
<paragraph id="P-0230" lvl="7"><number>&lsqb;0230&rsqb;</number> &lt;/Context Inference Engine in Device &gt;</paragraph>
<paragraph id="P-0231" lvl="0"><number>&lsqb;0231&rsqb;</number> The Context Inference Engine <highlight><bold>136</bold></highlight> in the wireless device <highlight><bold>100</bold></highlight> can perform the context inference process with any of several methods. Different input information from the sensors can be weighted according to their relative value of importance appropriate for each environment condition or situation to be analyzed. Each sensor has it&apos;s own weight value. Alternatively, the weight values for each sensor for each environment condition can be learned from training sessions using, for example artificial neural networks (ANNs), self-organizing maps (SOMs), decision trees, fuzzy rule-based systems, or model-based systems such as Hidden Markov Modeling (HMM). Combinations of two or more of the alternate methods can be used, depending on the application. </paragraph>
<paragraph id="P-0232" lvl="0"><number>&lsqb;0232&rsqb;</number> The Context Inference Engine <highlight><bold>136</bold></highlight> can continuously adapt its weights through adaptive and continuous learning methods, where the user teaches the wireless device <highlight><bold>100</bold></highlight> new environment conditions and names them. Hidden Markov Modeling (HMM) can be used, for example, to implement an adaptive and continuous learning method for the Context Inference Engine <highlight><bold>136</bold></highlight>. Alternately, the wireless device <highlight><bold>100</bold></highlight> can be programmed to spontaneously recognize a changed scene by comparing it with known scenes. The user can teach the wireless device new environmental conditions and name them, using the adaptive and automatic learning capability of neural networks. Adaptive and continuous learning methods are computationally intensive and are appropriate candidates to place on the network server <highlight><bold>140</bold></highlight>, which assists the wireless device <highlight><bold>100</bold></highlight>, as discussed below. </paragraph>
<paragraph id="P-0233" lvl="0"><number>&lsqb;0233&rsqb;</number> The field of context inference has applied the principles of automated pattern recognition to processing diverse types sensor inputs. Speech recognition has been applied to processing speech signals and handwriting recognition has been applied to processing hand force and accelerometer signals. In the field of robotics, image recognition has been applied to processing digitized still and motion images, mechanical location recognition has been applied to processing laser and sonar range finder signals, and mechanical motion recognition to has been applied to processing inertial, acceleration, and heading signals. In the field of prosthetic devices, touch recognition has been applied to processing tactile sensor signals. In the field of medicine, automated diagnostic programs recognize various pathologies by processing bioelectric field signals, as well as the more traditional pulse, respiration rate, and body temperature signals. These diverse sensor signal recognition processes have the common feature that an initial training stage is conducted where sampled signals are equated with a statistical model for those signals. </paragraph>
<paragraph id="P-0234" lvl="0"><number>&lsqb;0234&rsqb;</number> The principles of automated pattern recognition for these diverse sensor inputs are exemplified by the techniques for recognizing speech patterns. A common technique used in speech recognition is Hidden Markov Modeling (HMM). The term &ldquo;Hidden&rdquo; refers to the probabilistic and not directly observable events which underlie a speech signal. HMM speech recognition systems typically use realizations of phonemes which are statistical models of phonetic segments having parameters that are estimated from a set of training examples. Models of words are made by chaining or linking appropriate statistical models of phonetic segments. The statistical models serve as standards which are to be matched with the unknown voice signals to be recognized. </paragraph>
<paragraph id="P-0235" lvl="0"><number>&lsqb;0235&rsqb;</number> Recognition of unknown voice signals requires sampling and digitizing the speaker&apos;s spoken phonemes. These digitized phonemes are then processed into metadata. The metadata is then compared with the standard statistical models of phonemes. The most likely matches are then the inferred speech recognition result. </paragraph>
<paragraph id="P-0236" lvl="0"><number>&lsqb;0236&rsqb;</number> Recognition consists of finding the most likely path through the set of word models for the input speech signal. HMM speech recognition decoding systems first need to be trained through an iterative process. The system must be exposed to training examples or words of a particular speaker&apos;s voice. A training word is analyzed to generate a framed sequence of acoustic parameters or statistical models. A valid or &ldquo;good&rdquo; recognition occurs when the most likely path through the set of word models for the training word results in recognizing the correct training word. </paragraph>
<paragraph id="P-0237" lvl="0"><number>&lsqb;0237&rsqb;</number> Some useful references discussing the principles of Hidden Markov Models are: </paragraph>
<paragraph id="P-0238" lvl="1"><number>&lsqb;0238&rsqb;</number> Rabiner, L. R., &ldquo;A tutorial on hidden Markov models and selected applications in speech recognition&rdquo;, <highlight><italic>Proceedings of the IEEE, </italic></highlight>volume 77, number 2, 1989, pages 257-286. </paragraph>
<paragraph id="P-0239" lvl="1"><number>&lsqb;0239&rsqb;</number> Rabiner, L. R. and Juang, B. H., &ldquo;An introduction to hidden Markov models&rdquo;, <highlight><italic>IEEE ASSP Magazine, </italic></highlight>January 1986, pages 4-15. </paragraph>
<paragraph id="P-0240" lvl="1"><number>&lsqb;0240&rsqb;</number> Fraser, Andrew M. and Dimitriadis, Alexis, &ldquo;Forecasting Probability Densities by Using Hidden Markov Models with Mixed States&rdquo;, <highlight><italic>Time Series Prediction: Forecasting the Future and Understanding the Past, </italic></highlight>Addison-Wesley, editor Weigend, Andreas S. and Gershenfeld, Neil A., 1994. </paragraph>
<paragraph id="P-0241" lvl="1"><number>&lsqb;0241&rsqb;</number> Charniak, Eugene, <highlight><italic>Statistical Language Learning, </italic></highlight>MIT Press, Cambridge, Mass., 1993. </paragraph>
<paragraph id="P-0242" lvl="0"><number>&lsqb;0242&rsqb;</number> To illustrate how Hidden Markov Modeling (HMM) can be extended beyond speech recognition, an example is given here for touch recognition. In the training stage for touch recognition, tactile sensor signals are input from touching a tactile transducer to a rough texture, such as for example sandpaper. The tactile sensor signals are transformed into a statistical model of the input signal. The statistical model is stored as a standard in a computer memory under the handle &ldquo;rough_texture&rdquo;. To expand the range of sensor signals that are included in the model for &ldquo;rough_texture&rdquo;, several training sessions can be conducted, each with a different direction or pressure for touching the sandpaper, resulting in several different samples of the statistical model. The set of samples of the statistical model are stored as a standard under the handle &ldquo;rough_texture&rdquo;. Other training sessions are conducted with a smooth texture, such as glass. The tactile sensor signals input from touching the tactile transducer to the smooth texture are transformed into a statistical model of the input signal and stored as a standard under the handle &ldquo;smooth_texture&rdquo;. Later, in the recognition mode, an unknown object is touched by the tactile transducer resulting in a sample tactile sensor signal. Recognition of unknown touch signals requires sampling and digitizing the touch transducer&apos;s signals. These digitized sensor signals are then processed into metadata. The metadata is then compared with the standard statistical models of &ldquo;rough_texture&rdquo; and &ldquo;smooth_texture&rdquo;. The most likely match is then the inferred touch recognition result. </paragraph>
<paragraph id="P-0243" lvl="0"><number>&lsqb;0243&rsqb;</number> Combinations of two or more types of sensors can have their signals combined into an input metadata vector that characterizes a composite sampling event. The composite sampling event can be recognized using the principles of Hidden Markov Modeling (HMM). An example composite sampling event can be the state of the health and fatigue of the user of a wireless device <highlight><bold>100</bold></highlight>. For example, a wireless device <highlight><bold>100</bold></highlight> can be equipped with a tactile transducer which outputs tactile sensor signals in response to the hand force and pulse rate of the user who is gripping the wireless device <highlight><bold>100</bold></highlight>. The wireless device <highlight><bold>100</bold></highlight> can be equipped with a temperature sensor which outputs body temperature signals in response to the user gripping the wireless device <highlight><bold>100</bold></highlight>. Hidden Markov Modeling (HMM) can be used to recognize a force/temperature input metadata vector that characterizes the combination of the hand force and the temperature sensor signals resulting from a sampling event. A composite sampling event in this example can have an extended duration so that the force sensor can transduce the pulse rate of the user over a period of time. </paragraph>
<paragraph id="P-0244" lvl="0"><number>&lsqb;0244&rsqb;</number> In the training stage, the tactile sensor signals and the force sensor signals are output while the user is in a condition of good health and resting normally. The tactile sensor signals and the force sensor signals are combined into a force/temperature input metadata vector which is transformed into a statistical model of the input signals. The statistical model is stored as a standard in the computer memory of the wireless device <highlight><bold>100</bold></highlight> under the handle &ldquo;good_health_resting_normally&rdquo;. Other training sessions are conducted with the user in different states of health and fatigue. For example, the user may be training the wireless device <highlight><bold>100</bold></highlight> while working late at night at the office. The tactile sensor signals and the force sensor signals resulting from holding the wireless device <highlight><bold>100</bold></highlight>, are combined into a force/temperature input metadata vector for the user in the condition of being in good health but fatigued. The force/temperature input metadata vector is transformed into a statistical model of the input signals and stored as a standard under the handle &ldquo;good_health_fatigued&rdquo;. </paragraph>
<paragraph id="P-0245" lvl="0"><number>&lsqb;0245&rsqb;</number> Later, in the recognition mode, as the user holds the wireless device <highlight><bold>100</bold></highlight>, the tactile sensor signals and the force sensor signals are sampled. The Health/Fatigue_State recognition consists of sampling and digitizing the touch transducer&apos;s signals. These digitized sensor signals are then processed into a metadata vector. The metadata vector is then compared with the standard statistical models of handle &ldquo;good_health_resting_normally&rdquo; and &ldquo;good_health_fatigued&rdquo;. The most likely match is then the inferred touch recognition result. </paragraph>
<paragraph id="P-0246" lvl="0"><number>&lsqb;0246&rsqb;</number> In accordance with the feature, this recognition result can be used by a health maintenance application program in the wireless device <highlight><bold>100</bold></highlight>, to provide useful and appropriate information to the user. For example, a health maintenance program can process the recognition result, and in response, signal an alarm to the user and provide suggestions for medications to palliate the sensed fatigue. One problem with automatic recognition programs is that they are either relatively large or they call databases that are relatively large in comparison to the memory capacity of the wireless device <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0247" lvl="0"><number>&lsqb;0247&rsqb;</number> Another aspect of the feature is the recognition result can be used by a supplementary application program in a remote server, to provide additional and more detailed useful and appropriate information to the user. For example, the server can access a large database of suggestions for medications to palliate the sensed fatigue of the user. The results of the search of the database can be returned to the wireless device <highlight><bold>100</bold></highlight>. The server can also maintain a personal profile of the user&apos;s characteristics and preferences and it can use that profile in automatically formulate its query to the database. For example, the user&apos;s drug allergies can be stored in the server&apos;s database, to insure that recommendations are not made that will result in an allergic reaction by the user to the suggested medication. </paragraph>
<paragraph id="P-0248" lvl="0"><number>&lsqb;0248&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> is a functional block diagram of the wireless device <highlight><bold>100</bold></highlight>, the server <highlight><bold>140</bold></highlight>, and the web server <highlight><bold>160</bold></highlight>, and their interaction when exchanging the metadata vector <highlight><bold>138</bold></highlight> and the privacy control data <highlight><bold>150</bold></highlight>&prime;. These exchanges are bulk encrypted with a symmetric session key, such as a Data Encryption Standard (DES) key, to protect the privacy of the data. To insure the integrity of the metadata vector <highlight><bold>138</bold></highlight> and the privacy control data <highlight><bold>150</bold></highlight>&prime;, a message authentication code (MAC) can be computed and appended to the data, as described in the above referenced book by Stephen Thomas entitled <highlight><italic>SSL and TLS, </italic></highlight>published by John Wiley and Sons, <highlight><bold>2000</bold></highlight>. To insure that the source of the metadata vector <highlight><bold>138</bold></highlight> and the privacy control data <highlight><bold>150</bold></highlight>&prime; cannot be repudiated, a digital signature can be appended to the data, as described in the above referenced book by Richard E. Smith entitled <highlight><italic>Internet Cryptography, </italic></highlight>published by Addison Wesley, 1997. </paragraph>
<paragraph id="P-0249" lvl="0"><number>&lsqb;0249&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> shows the scope of the distributed context awareness implementation. The wireless device <highlight><bold>100</bold></highlight> has context sensitive applications A, B, X, and Y either downloaded or in firmware. The wireless device <highlight><bold>100</bold></highlight> may locally preprocess part of the context information in the metadata vector <highlight><bold>138</bold></highlight> before sending it to the context inference engine <highlight><bold>142</bold></highlight> in the network server <highlight><bold>140</bold></highlight> which is capable of processing the data and responding back with the resulting current context. The wireless device <highlight><bold>100</bold></highlight> may run application programs that require accessing the web service server <highlight><bold>160</bold></highlight> to provide context sensitive services to the mobile user. </paragraph>
<paragraph id="P-0250" lvl="0"><number>&lsqb;0250&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> shows how processing of sensor data from the sensors in the wireless device <highlight><bold>100</bold></highlight>, can be distributed between the wireless device and the network server <highlight><bold>140</bold></highlight>. The operation in <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> is as follows: </paragraph>
<paragraph id="P-0251" lvl="1"><number>&lsqb;0251&rsqb;</number> 1. The sensors continuously provide the sensor data to the Context Inference Engine <highlight><bold>136</bold></highlight> in the wireless device <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0252" lvl="1"><number>&lsqb;0252&rsqb;</number> 2. An application program that utilizes the context awareness APIs <highlight><bold>154</bold></highlight> may request the latest context information, or the application program may be registered to receive any changes to specific context information. </paragraph>
<paragraph id="P-0253" lvl="1"><number>&lsqb;0253&rsqb;</number> 3. The Context Inference Engine <highlight><bold>136</bold></highlight> securely contacts the Context Inference Engine <highlight><bold>142</bold></highlight> of the network server <highlight><bold>140</bold></highlight> and sends the metadata vector <highlight><bold>138</bold></highlight> to the server <highlight><bold>140</bold></highlight>. Depending on the sensors and the implementation details, Context Inference Engine <highlight><bold>136</bold></highlight> may preprocess part of the sensor data in the metadata vector <highlight><bold>138</bold></highlight> prior to sending it. Depending on the sensors and the interval for processing, there may be virtual connection open between Context Inference Engine <highlight><bold>136</bold></highlight> and Context Inference Engine <highlight><bold>142</bold></highlight> for frequent data exchanges. Context Inference Engine <highlight><bold>142</bold></highlight> at the network server <highlight><bold>140</bold></highlight>, has the processing power and memory capacity to handle computationally intensive and/or memory intensive processing of the preprocessed sensor data in the metadata vector <highlight><bold>138</bold></highlight> to produce the current context result information. </paragraph>
<paragraph id="P-0254" lvl="1"><number>&lsqb;0254&rsqb;</number> 4. Context Inference Engine <highlight><bold>142</bold></highlight> at the network server <highlight><bold>140</bold></highlight> may utilize local user information (history information, customer details) stored in the user database <highlight><bold>146</bold></highlight> for making a more accurate determination of the mobile user&apos;s current context. </paragraph>
<paragraph id="P-0255" lvl="1"><number>&lsqb;0255&rsqb;</number> 5. Context Inference Engine <highlight><bold>142</bold></highlight> at the network server <highlight><bold>140</bold></highlight> then securely returns the current context awareness information to Context Inference Engine <highlight><bold>136</bold></highlight> in the wireless device <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0256" lvl="1"><number>&lsqb;0256&rsqb;</number> 6. Context Inference Engine <highlight><bold>136</bold></highlight> in the wireless device <highlight><bold>100</bold></highlight> then provides the current context awareness information through Context Awareness APIs <highlight><bold>154</bold></highlight> to the application programs registered for to receive that information. </paragraph>
<paragraph id="P-0257" lvl="0"><number>&lsqb;0257&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3A</cross-reference> shows how Web Services in Web Service Server <highlight><bold>160</bold></highlight> are enabled to receive current context results of the wireless device <highlight><bold>100</bold></highlight>. Web Services Server <highlight><bold>160</bold></highlight> has a software system for server application program A and an execution environment for server application programs X and Y that are similar to the software system SS1 and execution environment (Exec. Env.) in the wireless device <highlight><bold>100</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. Server Application programs A, X, and Y in Web Service Server <highlight><bold>160</bold></highlight> may require access through the Context Awareness APIs <highlight><bold>178</bold></highlight> to provide Web Services with the current context of the wireless device <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0258" lvl="0"><number>&lsqb;0258&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 3</cross-reference>A, Web Service Server <highlight><bold>160</bold></highlight> uses the Context Inference Client <highlight><bold>176</bold></highlight> to contact the Context Inference Server <highlight><bold>174</bold></highlight> in the network server <highlight><bold>140</bold></highlight>. Context Inference Client <highlight><bold>176</bold></highlight> may utilize customer database information in database <highlight><bold>184</bold></highlight> to enhance the context sensitivity capabilities of the web server <highlight><bold>160</bold></highlight>. The contact to the network server <highlight><bold>140</bold></highlight> is done through a context awareness interface <highlight><bold>186</bold></highlight> to the Context Inference Server <highlight><bold>174</bold></highlight> in the network server <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0259" lvl="0"><number>&lsqb;0259&rsqb;</number> Context Inference Server <highlight><bold>174</bold></highlight> registers the Web Services of the web server <highlight><bold>160</bold></highlight> through the privacy control <highlight><bold>164</bold></highlight> of the network server <highlight><bold>140</bold></highlight> to the Context Inference Engine <highlight><bold>142</bold></highlight>. Privacy control <highlight><bold>164</bold></highlight> has a cached copy <highlight><bold>144</bold></highlight> of the Privacy Profile <highlight><bold>152</bold></highlight> of the wireless device <highlight><bold>100</bold></highlight>. This enables processing of the privacy check in the network Server <highlight><bold>140</bold></highlight> for access requests from web server <highlight><bold>160</bold></highlight>. The communication between web server <highlight><bold>160</bold></highlight> and network server <highlight><bold>140</bold></highlight> is secured using the Internet secure protocols such as HTTPS or SSL. The Context Inference Server <highlight><bold>174</bold></highlight> can publish its own service as a Web Service to other Web Services on the Internet, in which case the implementation of the interface <highlight><bold>186</bold></highlight> between web server <highlight><bold>160</bold></highlight> and network server <highlight><bold>140</bold></highlight> can be Extensible Markup Language (XML) messages carried in the Simple Object Access Protocol (SOAP) messaging protocol. </paragraph>
<paragraph id="P-0260" lvl="0"><number>&lsqb;0260&rsqb;</number> The Context inference Engine <highlight><bold>142</bold></highlight> in the network server <highlight><bold>140</bold></highlight> will receive processed sensor metadata vector <highlight><bold>138</bold></highlight> information and possibly some application API information originated from the Context Inference Engine <highlight><bold>136</bold></highlight> of the wireless device <highlight><bold>100</bold></highlight>. The Context inference Engine <highlight><bold>142</bold></highlight> of the network server has user database <highlight><bold>146</bold></highlight> information of the behavior of the user and of the past usage of the wireless device. The Context inference Engine <highlight><bold>142</bold></highlight> of the network server may also have third party services available (such as instances offering content and/or services) to be offered to potential users. What is offered to the user can also depend on the user profile <highlight><bold>144</bold></highlight>. The nature of the Context inference Engine <highlight><bold>136</bold></highlight> information of the wireless device <highlight><bold>100</bold></highlight> that is conveyed to the Context inference Engine <highlight><bold>142</bold></highlight> of the network can be controlled with the privacy control <highlight><bold>150</bold></highlight> that is managed by the user of the wireless device <highlight><bold>100</bold></highlight>. The user may thus fully or partly disable the Context inference Engine <highlight><bold>142</bold></highlight> of the network to control the amount of his/her information that can be used by third party services. The privacy control <highlight><bold>150</bold></highlight> enables the user to control access by anyone to his/her private information. </paragraph>
<paragraph id="P-0261" lvl="0"><number>&lsqb;0261&rsqb;</number> The Context inference Engine <highlight><bold>136</bold></highlight> of the wireless device receives an input from the API interface <highlight><bold>154</bold></highlight> from the applications A, B, X, or Y located in the wireless device <highlight><bold>100</bold></highlight>. An example would be from a calendar application program indicating that a meeting is starting in 25 minutes time. As another example the calendar application program indicates that Lisa is having a birthday tomorrow into which you are participating. The Context inference Engine <highlight><bold>136</bold></highlight> of the wireless device can convey processed result information to the Context inference Engine <highlight><bold>142</bold></highlight> of the network server. Now in addition to the sensor information, information from the application programs A, B, X, or Y can also be used in the decision making of the Context inference Engine <highlight><bold>136</bold></highlight> of the wireless device. A combination of the sensor information and information coming from the application programs A, B, X, or Y can be processed by the Context inference Engine <highlight><bold>136</bold></highlight>. The user&apos;s behavior or usage patterns can be detected from the sensor and recorded in a the user database, concerning the usage of the application programs. As previously discussed, the processing of this combined information from the sensors and from the application programs can be shared between the Context inference Engine <highlight><bold>136</bold></highlight> and the Context inference Engine <highlight><bold>142</bold></highlight>. </paragraph>
<paragraph id="P-0262" lvl="0"><number>&lsqb;0262&rsqb;</number> The information transfer from the Context inference Engine <highlight><bold>136</bold></highlight> of the wireless device to the Context inference Engine <highlight><bold>142</bold></highlight> of the network server can be done in alternative ways. The system can be managed so that the current consumption and transfer capacity between the wireless device <highlight><bold>100</bold></highlight> and the network server <highlight><bold>140</bold></highlight> is taken into account. The context information does not always have to be collected so frequently that it would have to be periodically transferred to the network side <highlight><bold>140</bold></highlight> every few seconds. Depending on the application, the timing window applied to information transfer from the Context inference Engine <highlight><bold>136</bold></highlight> of the wireless device <highlight><bold>100</bold></highlight> to the Context inference Engine <highlight><bold>142</bold></highlight> of the server <highlight><bold>140</bold></highlight> can vary from seconds to minutes. If there were no event change or condition change in the environment of the wireless device <highlight><bold>100</bold></highlight>, there would be no need to transfer information to the Context inference Engine <highlight><bold>142</bold></highlight> of the server <highlight><bold>140</bold></highlight>. Additionally information can be temporarily stored in a buffer in the wireless device <highlight><bold>100</bold></highlight>, which can then transferred less frequently to the network Context inference Engine <highlight><bold>142</bold></highlight>. Packet based GPRS and UMTS can support the less frequent information transfer rates. Also, it is advantageous to send the network Context inference Engine <highlight><bold>142</bold></highlight> information from the wireless device <highlight><bold>100</bold></highlight> as an attachment, immediately subsequent to other signaling made to in the network direction from the wireless device <highlight><bold>100</bold></highlight>, thus saving the radio transmitter of the wireless device <highlight><bold>100</bold></highlight> from having to be switched on again for transferring the Context inference Engine <highlight><bold>136</bold></highlight> information separately to the network server <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0263" lvl="0"><number>&lsqb;0263&rsqb;</number> Returning to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the relationship is shown between the network server <highlight><bold>140</bold></highlight>, the Universal Description, Discovery and Integration (UDDI) registry <highlight><bold>170</bold></highlight>, and a plurality of web site servers <highlight><bold>160</bold></highlight>. UDDI is a defacto standard for an Internet-based registry. The UDDI registry <highlight><bold>170</bold></highlight> enables the network server <highlight><bold>140</bold></highlight> to discover new web sites for services and businesses on the Internet. Once such services and businesses are identified by the UDDI registry <highlight><bold>170</bold></highlight> to the network server <highlight><bold>140</bold></highlight>, then the server <highlight><bold>140</bold></highlight> must apply the mobile user&apos;s cached privacy profile <highlight><bold>144</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>A, in order to prevent unauthorized access of the user&apos;s private data by application programs on the newly discovered web sites. </paragraph>
<paragraph id="P-0264" lvl="0"><number>&lsqb;0264&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3B</cross-reference> is a network process flow diagram of the interaction of the wireless device <highlight><bold>100</bold></highlight> I the first column, network server <highlight><bold>140</bold></highlight> in the middle column, and web server <highlight><bold>160</bold></highlight> in the right column, when they carry out the determination of the current context of the wireless device <highlight><bold>100</bold></highlight>. The process begins with the wireless device <highlight><bold>100</bold></highlight> in step <highlight><bold>302</bold></highlight>: </paragraph>
<paragraph id="P-0265" lvl="2"><number>&lsqb;0265&rsqb;</number> Step <highlight><bold>302</bold></highlight>: PRIVACY CONTROL <highlight><bold>150</bold></highlight> IN WIRELESS DEVICE <highlight><bold>100</bold></highlight> SENDS UPDATED PRIVACY PROFILE TO NETWORK SERVER <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0266" lvl="0"><number>&lsqb;0266&rsqb;</number> Then the network server <highlight><bold>140</bold></highlight> continues with step <highlight><bold>304</bold></highlight>: </paragraph>
<paragraph id="P-0267" lvl="2"><number>&lsqb;0267&rsqb;</number> Step <highlight><bold>304</bold></highlight>: NETWORK SERVER <highlight><bold>140</bold></highlight> UPDATES CACHED PRIVACY PROFILE <highlight><bold>144</bold></highlight>. </paragraph>
<paragraph id="P-0268" lvl="0"><number>&lsqb;0268&rsqb;</number> The wireless device <highlight><bold>100</bold></highlight> continues with the following steps <highlight><bold>306</bold></highlight>, <highlight><bold>308</bold></highlight>, and <highlight><bold>310</bold></highlight>: </paragraph>
<paragraph id="P-0269" lvl="2"><number>&lsqb;0269&rsqb;</number> Step <highlight><bold>306</bold></highlight>: SENSORS CONTINUOUSLY PROVIDE SENSOR DATA TO CONTEXT INFERENCE ENGINE <highlight><bold>136</bold></highlight> IN WIRELESS DEVICE <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0270" lvl="2"><number>&lsqb;0270&rsqb;</number> Step <highlight><bold>308</bold></highlight>: APPLICATION PROGRAM THAT USES CONTEXT AWARENESS API <highlight><bold>154</bold></highlight> REQUESTS LATEST CONTEXT INFORMATION. </paragraph>
<paragraph id="P-0271" lvl="2"><number>&lsqb;0271&rsqb;</number> Step <highlight><bold>310</bold></highlight>: CONTEXT INFERENCE ENGINE <highlight><bold>136</bold></highlight> CONTACTS CONTEXT INFERENCE ENGINE <highlight><bold>142</bold></highlight> OF THE NETWORK SERVER <highlight><bold>140</bold></highlight> AND SENDS THE METADATA VECTOR <highlight><bold>138</bold></highlight> TO SERVER <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0272" lvl="0"><number>&lsqb;0272&rsqb;</number> Then the network server <highlight><bold>140</bold></highlight> continues with steps <highlight><bold>312</bold></highlight> and <highlight><bold>314</bold></highlight>: </paragraph>
<paragraph id="P-0273" lvl="2"><number>&lsqb;0273&rsqb;</number> Step <highlight><bold>312</bold></highlight>: CONTEXT INFERENCE ENGINE <highlight><bold>142</bold></highlight> AT NETWORK SERVER <highlight><bold>140</bold></highlight> USES LOCAL USER INFORMATION STORED IN USER DATABASE <highlight><bold>146</bold></highlight> TO MAKE A MORE ACCURATE DETERMINATION OF THE MOBILE USER&apos;S CURRENT CONTEXT. </paragraph>
<paragraph id="P-0274" lvl="2"><number>&lsqb;0274&rsqb;</number> Step <highlight><bold>314</bold></highlight>: NETWORK SERVER <highlight><bold>140</bold></highlight> REQUESTS DATA FROM WEB SERVER <highlight><bold>160</bold></highlight>. </paragraph>
<paragraph id="P-0275" lvl="0"><number>&lsqb;0275&rsqb;</number> THE NETWORK SERVER&apos;S ACCESS IS AUTHORIZED BY CACHED PRIVACY PROFILE <highlight><bold>144</bold></highlight> IN NETWORK SERVER. </paragraph>
<paragraph id="P-0276" lvl="0"><number>&lsqb;0276&rsqb;</number> Then the web server <highlight><bold>160</bold></highlight> continues with step <highlight><bold>316</bold></highlight>: </paragraph>
<paragraph id="P-0277" lvl="2"><number>&lsqb;0277&rsqb;</number> Step <highlight><bold>316</bold></highlight>: WEB SERVER PROVIDES USER INFORMATION STORED IN DATABASE <highlight><bold>184</bold></highlight> TO NETWORK SERVER <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0278" lvl="0"><number>&lsqb;0278&rsqb;</number> Then the network server <highlight><bold>140</bold></highlight> continues with step <highlight><bold>318</bold></highlight>: </paragraph>
<paragraph id="P-0279" lvl="2"><number>&lsqb;0279&rsqb;</number> Step <highlight><bold>318</bold></highlight>: CONTEXT INFERENCE ENGINE <highlight><bold>142</bold></highlight> AT THE NETWORK SERVER <highlight><bold>140</bold></highlight> THEN SECURELY RETURNS THE CURRENT CONTEXT AWARENESS INFORMATION TO CONTEXT INFERENCE ENGINE <highlight><bold>136</bold></highlight> IN THE WIRELESS DEVICE <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0280" lvl="0"><number>&lsqb;0280&rsqb;</number> Then the wireless device <highlight><bold>100</bold></highlight> finishes with step <highlight><bold>320</bold></highlight>: </paragraph>
<paragraph id="P-0281" lvl="2"><number>&lsqb;0281&rsqb;</number> Step <highlight><bold>318</bold></highlight>: CONTEXT INFERENCE ENGINE <highlight><bold>136</bold></highlight> IN THE WIRELESS DEVICE <highlight><bold>100</bold></highlight> THEN PROVIDES THE CURRENT CONTEXT AWARENESS INFORMATION THROUGH CONTEXT AWARENESS APIs <highlight><bold>154</bold></highlight> TO THE APPLICATION PROGRAMS REGISTERED TO RECEIVE THAT INFORMATION. </paragraph>
<paragraph id="P-0282" lvl="0"><number>&lsqb;0282&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a functional block diagram of the network server <highlight><bold>140</bold></highlight>, showing the memory <highlight><bold>402</bold></highlight> storing the application services software programs needed to perform the operations of the feature. The memory is connected by the bus <highlight><bold>404</bold></highlight> to the cache <highlight><bold>144</bold></highlight>, user database <highlight><bold>146</bold></highlight>, TCP/IP network adapter <highlight><bold>406</bold></highlight>, and central processor <highlight><bold>410</bold></highlight>. The memory <highlight><bold>402</bold></highlight> stores programs which are sequences of executable instructions which, when executed by the processor <highlight><bold>410</bold></highlight>, carry out the methods of the feature. </paragraph>
<paragraph id="P-0283" lvl="0"><number>&lsqb;0283&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a functional block diagram of the network server, showing the memory storing the application services software programs needed to perform the operations of an embodiment of the feature. <cross-reference target="DRAWINGS">FIG. 4</cross-reference> discloses the functional components of an exemplary network server <highlight><bold>140</bold></highlight> arranged as an object model. The object model groups the object oriented software programs into components that perform the major functions and applications in network server <highlight><bold>140</bold></highlight>. The object model for memory <highlight><bold>402</bold></highlight> of network server <highlight><bold>140</bold></highlight> employs a three-tier architecture that includes presentation tier <highlight><bold>415</bold></highlight>, infrastructure objects partition <highlight><bold>422</bold></highlight>, and business logic tier <highlight><bold>414</bold></highlight>. The object model further divides business logic tier <highlight><bold>414</bold></highlight> into two partitions, application objects partition <highlight><bold>422</bold></highlight> and data objects partition <highlight><bold>426</bold></highlight>. </paragraph>
<paragraph id="P-0284" lvl="0"><number>&lsqb;0284&rsqb;</number> Presentation tier <highlight><bold>415</bold></highlight> retains the programs that manage the device interfaces to network server <highlight><bold>140</bold></highlight>. In <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, presentation tier <highlight><bold>415</bold></highlight> includes network interface <highlight><bold>420</bold></highlight>. A suitable implementation of presentation tier <highlight><bold>415</bold></highlight> may use Java servlets to interact with WAP protocol gateway <highlight><bold>120</bold></highlight> via the hypertext transfer protocol (&ldquo;HTTP&rdquo;). The Java servlets ran within a request/response server that manages the exchange of messages between WAP protocol gateway <highlight><bold>120</bold></highlight> and network server <highlight><bold>140</bold></highlight>. A Java servlet is a Java program that runs within a Web server environment. A Java servlet takes a request as input, parses the data, performs logic operations, and issues a response back to WAP protocol gateway <highlight><bold>120</bold></highlight>. The Java runtime platform pools the Java servlets to simultaneously service many requests. Network interface <highlight><bold>420</bold></highlight> accepts request messages from WAP protocol gateway <highlight><bold>120</bold></highlight> and passes the information in the request to visit object <highlight><bold>428</bold></highlight> for further processing. Visit object <highlight><bold>428</bold></highlight> passes the result of that processing to network interface <highlight><bold>420</bold></highlight> for transmission back to the WAP protocol gateway <highlight><bold>120</bold></highlight>. Network interface <highlight><bold>420</bold></highlight> may also use network adapter <highlight><bold>406</bold></highlight> to exchange data with another user device. </paragraph>
<paragraph id="P-0285" lvl="0"><number>&lsqb;0285&rsqb;</number> Infrastructure objects partition <highlight><bold>422</bold></highlight> retains the programs that perform administrative and system functions on behalf of business logic tier <highlight><bold>414</bold></highlight>. Infrastructure objects partition <highlight><bold>422</bold></highlight> includes operating system <highlight><bold>425</bold></highlight>, and an object oriented software program component for database server interface <highlight><bold>430</bold></highlight>, and system administrator interface <highlight><bold>432</bold></highlight>. </paragraph>
<paragraph id="P-0286" lvl="0"><number>&lsqb;0286&rsqb;</number> Business logic tier <highlight><bold>414</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> includes multiple instances of visit object <highlight><bold>428</bold></highlight>, <highlight><bold>428</bold></highlight>&prime;, <highlight><bold>428</bold></highlight>&Prime;. A separate instance of visit object <highlight><bold>428</bold></highlight> exists for each network interface <highlight><bold>420</bold></highlight> session. Each visit object <highlight><bold>428</bold></highlight> is a stateful session object that includes a persistent storage area from initiation through termination of the session, not just during a single interaction or method call. The persistent storage area retains information associated with the session. </paragraph>
<paragraph id="P-0287" lvl="0"><number>&lsqb;0287&rsqb;</number> When WAP protocol gateway <highlight><bold>120</bold></highlight> sends a metadata vector <highlight><bold>138</bold></highlight> message to network server <highlight><bold>140</bold></highlight>, the message is sent to network interface <highlight><bold>420</bold></highlight> to invoke a method that creates visit object <highlight><bold>428</bold></highlight> and stores connection information as a state in visit object <highlight><bold>428</bold></highlight>. Visit object <highlight><bold>428</bold></highlight> may, in turn, invoke a method in context inference engine <highlight><bold>142</bold></highlight> application <highlight><bold>440</bold></highlight> to perform a context inference on the metadata vector and return a current context result. </paragraph>
<paragraph id="P-0288" lvl="0"><number>&lsqb;0288&rsqb;</number> When WAP protocol gateway <highlight><bold>120</bold></highlight> sends a privacy control data <highlight><bold>150</bold></highlight>&prime; message to network server <highlight><bold>140</bold></highlight>, the message is sent to network interface <highlight><bold>420</bold></highlight> to invoke a method that creates visit object <highlight><bold>428</bold></highlight> and stores connection information as a state in visit object <highlight><bold>428</bold></highlight>. Visit object <highlight><bold>428</bold></highlight> may, in turn, invoke a method in privacy control <highlight><bold>164</bold></highlight> application <highlight><bold>442</bold></highlight> to update the cached privacy profile <highlight><bold>144</bold></highlight>. </paragraph>
<paragraph id="P-0289" lvl="0"><number>&lsqb;0289&rsqb;</number> When WAP protocol gateway <highlight><bold>120</bold></highlight> sends a context-activity pair message <highlight><bold>190</bold></highlight> to network server <highlight><bold>140</bold></highlight>, the message is sent to network interface <highlight><bold>420</bold></highlight> to invoke a method that creates visit object <highlight><bold>428</bold></highlight> and stores connection information as a state in visit object <highlight><bold>428</bold></highlight>. Visit object <highlight><bold>428</bold></highlight> may, in turn, invoke a method in context-activity pair recommendations application <highlight><bold>446</bold></highlight>. Application <highlight><bold>446</bold></highlight> compares four types of activities in the context-activity pairs received from the wireless device <highlight><bold>100</bold></highlight>, with the recommendations in the database <highlight><bold>192</bold></highlight>: &lsqb;1&rsqb; past recommendations, &lsqb;2&rsqb; past services used, &lsqb;3&rsqb; prestored service preferences, and &lsqb;4&rsqb; special requested service requirements. Application <highlight><bold>446</bold></highlight> may, in turn make a method call to context-activity recommendations usage statistics application <highlight><bold>448</bold></highlight>. </paragraph>
<paragraph id="P-0290" lvl="0"><number>&lsqb;0290&rsqb;</number> A description of server programming applications developed with Enterprise Java Beans is provided in the book by Ed Roman entitled <highlight><italic>Mastering Enterprise Java Beans, </italic></highlight>published by John Wiley and Sons, 1999. A description of the use of an object model in the design of server applications is provided in the book by Matthew Reynolds entitled <highlight><italic>Beginning E</italic></highlight>-<highlight><italic>Commerce, </italic></highlight>Wrox Press Inc., 2000, (ISBN: 1861003986). Java servlets and the development of web site servers is described in the book by Duane K. Fields, et al. entitled <highlight><italic>Web Development with Java Server Pages, </italic></highlight>published by Manning Publications Co., 2000. </paragraph>
<paragraph id="P-0291" lvl="0"><number>&lsqb;0291&rsqb;</number> Example Wireless Application Protocol (WAP) Embodiment of the Invention </paragraph>
<paragraph id="P-0292" lvl="0"><number>&lsqb;0292&rsqb;</number> The user&apos;s Wireless Application Protocol (WAP)-enabled portable wireless device <highlight><bold>100</bold></highlight> accesses a small file called a deck which is composed of several smaller pages called cards which are small enough to fit into the display area of the device&apos;s microbrowser <highlight><bold>102</bold></highlight>. The small size of the microbrowser <highlight><bold>102</bold></highlight> and the small file sizes accommodate the low memory constraints of the portable wireless device <highlight><bold>100</bold></highlight> and the low-bandwidth constraints of a wireless network <highlight><bold>116</bold></highlight>. The cards are written in the Wireless Markup Language (WML) which is specifically devised for small screens and one-hand navigation without a keyboard. The WML language is scaleable from two-line text displays on the microbrowser <highlight><bold>102</bold></highlight> of a cellular telephone, up through large LCD screens found on smart phones and personal communicators. The cards written in the WML language can include programs written in WMLScript, which is similar to JavaScript, but makes minimal demands on memory and CPU power of the device <highlight><bold>100</bold></highlight> because it does not contain many of the unnecessary functions found in other scripting languages. </paragraph>
<paragraph id="P-0293" lvl="0"><number>&lsqb;0293&rsqb;</number> The Nokia WAP Client Version 2.0 is a software product containing the components necessary to implement the WAP client on the wireless device <highlight><bold>100</bold></highlight>. These components include a Wireless Markup Language (WML) Browser, WMLScript engine, Push Subsystem, and Wireless Protocol Stack. The Nokia WAP Client is a source-code product that can port and integrate into wireless devices such as mobile phones and wireless PDAs. Application programs <highlight><bold>106</bold></highlight> stored in the wireless device <highlight><bold>100</bold></highlight> interact with the WAP Client to implement a variety of communications applications. Details of the Nokia WAP Client Version 2.0 can be found in the online paper: <highlight><italic>Nokia WAP Client Version </italic></highlight>2.0<highlight><italic>, Product Overview, </italic></highlight>Nokia Internet Communications, 2000, www.nokia.com/corporate/wap. </paragraph>
<paragraph id="P-0294" lvl="0"><number>&lsqb;0294&rsqb;</number> The WAP Client includes the Wireless Public Key infrastructure (PKI) feature, providing the infrastructure and the procedures required for authentication and digital signatures for servers and mobile clients. Wireless PKI is a certificate-based system that utilizes public/private key pairs associated with each party involved in a mobile transaction. Wireless Identity Module (WIM) is a security token feature of the WAP Client, which includes security features, such as the public and private keys and service certificates, needed for user authentication and digital signatures. Additionally, it has the ability to perform cryptographic operations to encrypt and decrypt messages. </paragraph>
<paragraph id="P-0295" lvl="0"><number>&lsqb;0295&rsqb;</number> The WAP protocol gateway <highlight><bold>120</bold></highlight> links the Internet <highlight><bold>130</bold></highlight> and the wireless network <highlight><bold>116</bold></highlight>. The WAP protocol gateway <highlight><bold>120</bold></highlight> includes the Wireless Public Key infrastructure (PKI) feature to help provide a secure Internet connection to the wireless device <highlight><bold>100</bold></highlight>. The WAP protocol gateway <highlight><bold>120</bold></highlight> enables the WAP-enabled wireless device <highlight><bold>100</bold></highlight> to access Internet applications such as headline news, exchange rates, sports results, stock quotes, online travel and banking services, or to download distinctive ringing tones. </paragraph>
<paragraph id="P-0296" lvl="0"><number>&lsqb;0296&rsqb;</number> The user&apos;s WAP-enabled portable wireless device <highlight><bold>100</bold></highlight> communicates with the wireless access point <highlight><bold>114</bold></highlight> and can exchange messages for distances up to several kilometers. The types of wireless networks <highlight><bold>116</bold></highlight> supported by the WAP standard include Cellular Digital Packet Data (CDPD), Code-Division Multiple Access (CDMA), Global System for Mobile Communications (GSM), Time Division Multiple Access (TDMA), GPRS, 3G-Broadband, and the like. </paragraph>
<paragraph id="P-0297" lvl="0"><number>&lsqb;0297&rsqb;</number> The overall process of communication between the user&apos;s WAP-enabled wireless device (the client) <highlight><bold>100</bold></highlight>, through the WAP protocol gateway <highlight><bold>120</bold></highlight>, to the server <highlight><bold>140</bold></highlight> resembles the way Web pages are served on the Internet using the HyperText Transfer Protocol (HTTP) or World Wide Web protocol: </paragraph>
<paragraph id="P-0298" lvl="1"><number>&lsqb;0298&rsqb;</number> &lsqb;1&rsqb; The user presses a phone key on the user&apos;s device <highlight><bold>100</bold></highlight> related to the Uniform Resource Locator (URL) of the server <highlight><bold>140</bold></highlight>. </paragraph>
<paragraph id="P-0299" lvl="1"><number>&lsqb;0299&rsqb;</number> &lsqb;2&rsqb; The user&apos;s device <highlight><bold>100</bold></highlight> sends the URL, via the wireless access point <highlight><bold>114</bold></highlight> and the wireless network <highlight><bold>116</bold></highlight>, to the gateway <highlight><bold>120</bold></highlight> using WAP protocols. </paragraph>
<paragraph id="P-0300" lvl="1"><number>&lsqb;0300&rsqb;</number> &lsqb;3&rsqb; The gateway <highlight><bold>120</bold></highlight> translates the WAP request into an HTTP request and sends it over the Internet <highlight><bold>130</bold></highlight> to the server <highlight><bold>140</bold></highlight>, via Transmission Control Protocol/Internet Protocol (TCP/IP) interfaces. </paragraph>
<paragraph id="P-0301" lvl="1"><number>&lsqb;0301&rsqb;</number> &lsqb;4&rsqb; The server <highlight><bold>140</bold></highlight> handles the request just like any other HTTP request received over the Internet. The server <highlight><bold>140</bold></highlight> either returns a WML deck or a HyperText Markup Language (HTML) page back to the gateway <highlight><bold>120</bold></highlight> using standard server programs written, for example in Common Gateway Interface (CGI) programs, Java servlets, or the like. </paragraph>
<paragraph id="P-0302" lvl="1"><number>&lsqb;0302&rsqb;</number> &lsqb;5&rsqb; The gateway <highlight><bold>120</bold></highlight> receives the response from the server <highlight><bold>140</bold></highlight> on behalf of the user&apos;s device <highlight><bold>100</bold></highlight>. If the response is an HTML page, it gets transcoded into WML if necessary. Then the WML and WMLScript coding is encoded into a byte code that is then sent to the user&apos;s device <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0303" lvl="1"><number>&lsqb;0303&rsqb;</number> &lsqb;6&rsqb; The user&apos;s device <highlight><bold>100</bold></highlight> receives the response in the WML byte code and displays the first card in the deck on the microbrowser <highlight><bold>102</bold></highlight> to the user. </paragraph>
<paragraph id="P-0304" lvl="0"><number>&lsqb;0304&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the protocol gateway <highlight><bold>120</bold></highlight> includes a WAP protocol stack organized into five different layers. An application layer is the wireless application environment, which executes portable applications and services. A session layer is the wireless session protocol, which supplies methods for the organized exchange of content between client/server applications. A transaction layer is the wireless transaction protocol, which provides methods for performing reliable transactions. A security layer is the wireless transport layer security, which provides authentication, privacy, and secure connections between applications. The transport layer is the wireless datagram protocol, which shelters the upper layers from the unique requirements of the diverse wireless network protocols, such as CDPD, CDMA, GSM, etc. Additional information about the WAP standard and the WAP protocol stack can be found in the book by Charles Arehart, et al. entitled, <highlight><italic>Professional WAP, </italic></highlight>published by Wrox Press Ltd., 2000 (ISBN 1-861004-04-1). </paragraph>
<paragraph id="P-0305" lvl="0"><number>&lsqb;0305&rsqb;</number> Alternate Embodiment of the Invention </paragraph>
<paragraph id="P-0306" lvl="0"><number>&lsqb;0306&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 5A and 5B</cross-reference> show an alternate embodiment of the user&apos;s wireless device with the UPDATE PRIVACY FEATURES sub menu of the recommendation web services menu. <cross-reference target="DRAWINGS">FIGS. 5A and 5B</cross-reference> will be discussed further below. <cross-reference target="DRAWINGS">FIGS. 5C and 5D</cross-reference> show the user&apos;s wireless device with the MANAGE CONTEXT-ACTIVITY PROFILE sub menu of the recommendation web services menu. The MANAGE CONTEXT-ACTIVITY PROFILE sub menu offers the user the option of managing preference values for the following categories: </paragraph>
<paragraph id="P-0307" lvl="2"><number>&lsqb;0307&rsqb;</number> (1) AUTOMOBILE </paragraph>
<paragraph id="P-0308" lvl="3"><number>&lsqb;0308&rsqb;</number> (a) day time radio preferences </paragraph>
<paragraph id="P-0309" lvl="3"><number>&lsqb;0309&rsqb;</number> (b) night time radio preferences </paragraph>
<paragraph id="P-0310" lvl="3"><number>&lsqb;0310&rsqb;</number> (c) map display preferences </paragraph>
<paragraph id="P-0311" lvl="3"><number>&lsqb;0311&rsqb;</number> (d) service station preferences </paragraph>
<paragraph id="P-0312" lvl="2"><number>&lsqb;0312&rsqb;</number> (2) DINING </paragraph>
<paragraph id="P-0313" lvl="3"><number>&lsqb;0313&rsqb;</number> (a) restaurant preferences </paragraph>
<paragraph id="P-0314" lvl="3"><number>&lsqb;0314&rsqb;</number> (b) food preferences </paragraph>
<paragraph id="P-0315" lvl="2"><number>&lsqb;0315&rsqb;</number> (3) ENTERTAINMENT </paragraph>
<paragraph id="P-0316" lvl="3"><number>&lsqb;0316&rsqb;</number> (a) movie preferences </paragraph>
<paragraph id="P-0317" lvl="3"><number>&lsqb;0317&rsqb;</number> (b) sports preferences </paragraph>
<paragraph id="P-0318" lvl="2"><number>&lsqb;0318&rsqb;</number> (4) TRAVEL </paragraph>
<paragraph id="P-0319" lvl="3"><number>&lsqb;0319&rsqb;</number> (a) weather forecasts </paragraph>
<paragraph id="P-0320" lvl="3"><number>&lsqb;0320&rsqb;</number> (b) airline preferences </paragraph>
<paragraph id="P-0321" lvl="3"><number>&lsqb;0321&rsqb;</number> (c) hotel preferences </paragraph>
<paragraph id="P-0322" lvl="3"><number>&lsqb;0322&rsqb;</number> (d) car rental preferences </paragraph>
<paragraph id="P-0323" lvl="0"><number>&lsqb;0323&rsqb;</number> If the user selects the option of (c) REQUEST A RECOMMENDATION, from the recommendation web services menu of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, then the REQUEST A RECOMMENDATION sub menu is displayed on the wireless device, as is shown in <cross-reference target="DRAWINGS">FIGS. 5E and 5F</cross-reference>. The options presented to the user in the REQUEST A RECOMMENDATION sub menu are activity categories. The activity categories are displayed as follows: </paragraph>
<paragraph id="P-0324" lvl="2"><number>&lsqb;0324&rsqb;</number> (1) AUTOMOBILE ACTIVITIES </paragraph>
<paragraph id="P-0325" lvl="3"><number>&lsqb;0325&rsqb;</number> (a) request day time radio recommendation </paragraph>
<paragraph id="P-0326" lvl="3"><number>&lsqb;0326&rsqb;</number> (b) request night time radio recommendation </paragraph>
<paragraph id="P-0327" lvl="3"><number>&lsqb;0327&rsqb;</number> (c) request map recommendation </paragraph>
<paragraph id="P-0328" lvl="3"><number>&lsqb;0328&rsqb;</number> (d) request service station recommendation </paragraph>
<paragraph id="P-0329" lvl="2"><number>&lsqb;0329&rsqb;</number> (2) DINING ACTIVITIES </paragraph>
<paragraph id="P-0330" lvl="3"><number>&lsqb;0330&rsqb;</number> (a) request restaurant recommendation </paragraph>
<paragraph id="P-0331" lvl="3"><number>&lsqb;0331&rsqb;</number> (b) request food recommendation </paragraph>
<paragraph id="P-0332" lvl="2"><number>&lsqb;0332&rsqb;</number> (3) ENTERTAINMENT ACTIVITIES </paragraph>
<paragraph id="P-0333" lvl="3"><number>&lsqb;0333&rsqb;</number> (a) request movie recommendation </paragraph>
<paragraph id="P-0334" lvl="3"><number>&lsqb;0334&rsqb;</number> (b) request sports recommendation </paragraph>
<paragraph id="P-0335" lvl="2"><number>&lsqb;0335&rsqb;</number> (4) TRAVEL ACTIVITIES </paragraph>
<paragraph id="P-0336" lvl="3"><number>&lsqb;0336&rsqb;</number> (a) request weather forecasts </paragraph>
<paragraph id="P-0337" lvl="3"><number>&lsqb;0337&rsqb;</number> (b) request airline recommendation </paragraph>
<paragraph id="P-0338" lvl="3"><number>&lsqb;0338&rsqb;</number> (c) request hotel recommendation </paragraph>
<paragraph id="P-0339" lvl="3"><number>&lsqb;0339&rsqb;</number> (d) request car rental recommendation </paragraph>
<paragraph id="P-0340" lvl="0"><number>&lsqb;0340&rsqb;</number> If the user selects the option of DINING ACTIVITIES and specifically &ldquo;request restaurant recommendation&rdquo; in the browser <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>E, then the wireless device <highlight><bold>100</bold></highlight> proceeds to interact with the network server <highlight><bold>140</bold></highlight>, to produce the result of the browser <highlight><bold>102</bold></highlight> displaying the page shown in <cross-reference target="DRAWINGS">FIG. 5G</cross-reference>. As is seen in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>G, the user selected activity of &ldquo;DINING-restaurant&rdquo; is coupled with the context that the wireless device <highlight><bold>100</bold></highlight> determines to exist at the present time in the vicinity of the wireless device <highlight><bold>100</bold></highlight>. The activity coupled with a description of the current context, is transmitted from the wireless device <highlight><bold>100</bold></highlight> to the network server <highlight><bold>140</bold></highlight>. There at the server <highlight><bold>140</bold></highlight>, context-activity pairs in the database <highlight><bold>192</bold></highlight> are approximately matched to the current context-activity pair received from the device <highlight><bold>100</bold></highlight>, and the server accesses associated recommendations that are stored in the database <highlight><bold>192</bold></highlight>. The associated recommendations are then transmitted back to the device <highlight><bold>100</bold></highlight>. This operation will be discussed in greater detail in connection with <cross-reference target="DRAWINGS">FIG. 3C</cross-reference> below. </paragraph>
<paragraph id="P-0341" lvl="0"><number>&lsqb;0341&rsqb;</number> The resulting invention provides a distributed recommendation system having greater privacy for the user&apos;s private data. The invention distributes the tasks of a recommendation system between wireless devices and network servers, so as to protect the privacy of end users. The invention provides greater privacy for context-sensitive, adaptive, user interfaces for Internet service usage by wireless devices. </paragraph>
<paragraph id="P-0342" lvl="0"><number>&lsqb;0342&rsqb;</number> Although a specific embodiment of the feature has been disclosed, it will be understood by those having skill in the art that changes can be made to the specific embodiment without departing from the spirit and the scope of the feature. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method to enable a wireless device to provide recommendations to its user that are appropriate to the device&apos;s current environment, comprising: 
<claim-text>receiving sensor signals characterizing a current environment of the wireless device; </claim-text>
<claim-text>processing the sensor signals with a context inference engine; </claim-text>
<claim-text>outputting a current context result from the processing by the context inference engine; </claim-text>
<claim-text>forming a context-activity pair by selecting an activity and pairing it with the current context result; </claim-text>
<claim-text>searching a database of recommendations using the context-activity pair; and </claim-text>
<claim-text>providing recommendations to the user in response to the searching step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the processing of the sensor signals with a context inference engine is embodied as programmed instructions executed within the user&apos;s wireless device. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the processing of the sensor signals with a context inference engine is embodied as programmed instructions executed within a separate network server in response to signals from the user&apos;s wireless device. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the sensor signals are selected from the group consisting of positioning signals, touch signals, audio signals, compass signals, ambient light signals, ambient temperature signals, three-axis acceleration signals, time signals, and the device&apos;s operational mode signals. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the wireless device offloads a portion of the processing of the sensor signals to a context inference engine to the server. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the selecting of an activity is automatically performed in the wireless device, the steps comprising: 
<claim-text>accessing past recommendations from a service history log. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the selecting of an activity is automatically performed in the wireless device, the steps comprising: 
<claim-text>accessing past services used from a service history log. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the signals from the user&apos;s wireless device are sent to the server without any user identification. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, which further comprises: 
<claim-text>providing the recommendation in a separate server in response to context-activity pair information received at the server from the user&apos;s wireless device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, which further comprises: 
<claim-text>maintaining the database as a context-activity pair database by the server; </claim-text>
<claim-text>associating in the database the context-activity pair information with appropriate recommendations made in the past to many users. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, which further comprises: 
<claim-text>making new recommendations to the user in response to the context-activity pair information submitted by the wireless device; and </claim-text>
<claim-text>gathering the new recommendations and adding them to the database; </claim-text>
<claim-text>whereby the variety, quality and pertinence of the recommendations in the database grows as the recommendation system is used. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, which further comprises: </claim-text>
<claim-text>compiling statistical usage information about the recommendations and storing the usage information in the database. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, which further comprises: 
<claim-text>providing the statistical usage information to the wireless device accompanying the recommendations. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, which further comprises: 
<claim-text>filtering the recommendations received at the wireless device by using the statistical usage information accompanying the recommendations. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said providing step further comprises: </claim-text>
<claim-text>filtering the recommendations at the wireless device using statistical usage information associated with the recommendations. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said providing step further comprises: 
<claim-text>accessing a history log of previous recommendations provided to the user; </claim-text>
<claim-text>filtering new recommendations from the previous recommendations and providing the new recommendations to the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said providing step further comprises: 
<claim-text>accessing a history log of previous recommendations provided to the user, including ratings of the previous recommendations; </claim-text>
<claim-text>filtering recommendations using the ratings and providing the filtered recommendations to the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, which further comprises: 
<claim-text>providing the recommendations to an application program. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, which further comprises: 
<claim-text>providing to the user control over the privacy of the user&apos;s information within the network server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, which further comprises: 
<claim-text>maintaining the database as a context-activity pair database by the server, which contains no personal information about the user; </claim-text>
<claim-text>associating in the database the context-activity pair information with appropriate recommendations made in the past to many users. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, which further comprises: 
<claim-text>making new recommendations to the user in response to the context-activity pair information submitted by the wireless device; and </claim-text>
<claim-text>gathering the new recommendations and adding them to the database without any personal information about the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. An apparatus to enable a wireless device to provide recommendations to its user that are appropriate to the device&apos;s current environment, comprising: 
<claim-text>a processor; </claim-text>
<claim-text>a memory coupled to the processor, programmed to perform the steps of: 
<claim-text>receiving sensor signals characterizing a current environment of the wireless device; </claim-text>
<claim-text>processing the sensor signals with a context inference engine; </claim-text>
<claim-text>outputting a current context result from the processing by the context inference engine; </claim-text>
<claim-text>forming a context-activity pair by selecting an activity and pairing it with the current context result; </claim-text>
<claim-text>causing a database of recommendations to be searched using the context-activity pair; and </claim-text>
<claim-text>providing recommendations to the user in response to the searching step. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein the processing of the sensor signals with a context inference engine is embodied as programmed instructions executed within the user&apos;s wireless device. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein the processing of the sensor signals with a context inference engine is embodied as programmed instructions executed within a separate network server in response to signals from the user&apos;s wireless device. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A wireless device to provide recommendations to its user that are appropriate to the device&apos;s current environment, comprising: 
<claim-text>a sensor for providing sensor signals characterizing a current environment of the wireless device; </claim-text>
<claim-text>a context inference engine coupled to the sensor, for processing the sensor signals; </claim-text>
<claim-text>said context inference engine providing a current context result from the processing; </claim-text>
<claim-text>a processor coupled to the context inference engine, for forming a context-activity pair by selecting an activity and pairing it with the current context result; </claim-text>
<claim-text>a database coupled to the processor, for providing recommendations using the context-activity pair; and </claim-text>
<claim-text>an output device coupled to the database, for providing the recommendations to the user in response to the context-activity pair. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. A business method to enable a wireless device to provide recommendations to its user that are appropriate to the device&apos;s current environment, comprising: 
<claim-text>characterizing a current environment of the wireless device with a current context result; forming a context-activity pair by selecting an activity and pairing it with the current context result; </claim-text>
<claim-text>accessing a database of recommendations using the context-activity pair without including any user personal data; and </claim-text>
<claim-text>providing recommendations to the wireless device from the database. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The business method of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, which further comprises: 
<claim-text>gathering the new recommendations and adding them to the database without including any user personal data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The business method of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, which further comprises: 
<claim-text>compiling statistical usage information about the recommendations and storing the usage information in the database. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The business method of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, which further comprises: 
<claim-text>providing the statistical usage information to the wireless device accompanying the recommendations. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The business method of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, which further comprises: 
<claim-text>filtering the recommendations received at the wireless device by using the statistical usage information accompanying the recommendations. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The business method of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, which further comprises: 
<claim-text>accessing a history log of previous recommendations provided to the user; </claim-text>
<claim-text>filtering new recommendations from the previous recommendations and providing the new recommendations to the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The business method of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, which further comprises: 
<claim-text>accessing a history log of previous recommendations provided to the user, including ratings of the previous recommendations; </claim-text>
<claim-text>filtering recommendations using the ratings and providing the filtered recommendations to the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The business method of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, which further comprises: 
<claim-text>providing the recommendations to an application program. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The business method of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, which further comprises: 
<claim-text>providing at least portions of the database to a third party service provider. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. A method to enable a wireless device to provide recommendations to its user that are appropriate to the device&apos;s current environment, comprising: 
<claim-text>receiving sensor signals characterizing a current environment of the wireless device; processing the sensor signals with a context inference engine to produce a set of current context results; </claim-text>
<claim-text>forming a set of context-activity pairs by selecting an activity and pairing it with the set of current context results; </claim-text>
<claim-text>accessing a set of related service history items from a history log; </claim-text>
<claim-text>forming context-activity pair information from the set of current context results and the set of related service history items; </claim-text>
<claim-text>searching a database of recommendations using the context-activity pair information; and providing recommendations to the user in response to the searching step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 35</dependent-claim-reference>, which further comprises: 
<claim-text>providing the recommendation in a separate server in response to context-activity pair information received at the server from the user&apos;s wireless device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 36</dependent-claim-reference>, which further comprises: 
<claim-text>maintaining the database as a context-activity pair database by the server; </claim-text>
<claim-text>associating in the database the context-activity pair information with appropriate recommendations made in the past to many users. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference>, which further comprises: </claim-text>
<claim-text>making new recommendations to the user in response to the context-activity pair information submitted by the wireless device; and 
<claim-text>gathering the new recommendations and adding them to the database; </claim-text>
<claim-text>whereby the variety, quality and pertinence of the recommendations in the database grows as the recommendation system is used. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, which further comprises: 
<claim-text>compiling statistical usage information about the recommendations and storing the usage information in the database. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, which further comprises: 
<claim-text>providing the statistical usage information to the wireless device accompanying the recommendations. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference>, which further comprises: 
<claim-text>filtering the recommendations received at the wireless device by using the statistical usage information accompanying the recommendations. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference>, wherein said providing step further comprises: 
<claim-text>filtering the recommendations at the wireless device using statistical usage information associated with the recommendations. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 42</dependent-claim-reference>, wherein said providing step further comprises: 
<claim-text>accessing a history log of previous recommendations provided to the user; </claim-text>
<claim-text>filtering new recommendations from the previous recommendations and providing the new recommendations to the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 43</dependent-claim-reference>, wherein said providing step further comprises: 
<claim-text>accessing a history log of previous recommendations provided to the user, including ratings of the previous recommendations; </claim-text>
<claim-text>filtering recommendations using the ratings and providing the filtered recommendations to the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. A system to provide recommendations to the user of a wireless device that are appropriate to the device&apos;s current environment, comprising: 
<claim-text>a sensor in the wireless device for providing sensor signals characterizing a current environment of the wireless device; </claim-text>
<claim-text>a processor coupled to the sensor, for selecting an activity and pairing it with current sensor information derived from said sensor signals, said processor sending the activity and current sensor information to a server; </claim-text>
<claim-text>a context inference engine in the server coupled to the processor, for processing the current sensor information, said context inference engine providing a current context result from the processing; </claim-text>
<claim-text>a database coupled to the context inference engine, for providing recommendations in response to the activity and current context result; and </claim-text>
<claim-text>an output device in the wireless device and coupled to the database, for providing the recommendations to the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. A computer program product to enable a wireless device to provide recommendations to its user that are appropriate to the device&apos;s current environment, comprising: 
<claim-text>a computer readable medium; </claim-text>
<claim-text>program code in said computer readable medium for characterizing a current environment of the wireless device with a current context result; </claim-text>
<claim-text>program code in said computer readable medium for forming a context-activity pair by selecting an activity and pairing it with the current context result; </claim-text>
<claim-text>program code in said computer readable medium for accessing a database of recommendations using the context-activity pair without including any user personal data; and </claim-text>
<claim-text>program code in said computer readable medium for providing recommendations to the wireless device from the database. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. The product of <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference>, further comprising: 
<claim-text>program code for receiving sensor signals characterizing a current environment of the wireless device; </claim-text>
<claim-text>program code for processing the sensor signals with a context inference engine to produce a current context result; </claim-text>
<claim-text>program code for accessing related service history items from a history log; </claim-text>
<claim-text>program code for forming context-activity pair information from the current context result and the related service history items; </claim-text>
<claim-text>program code for searching a database of recommendations using the context-activity pair information; and </claim-text>
<claim-text>program code for providing recommendations to the user in response to the searching step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. The product of <dependent-claim-reference depends_on="CLM-00044">claim 47</dependent-claim-reference>, wherein said related service history items from a history log comprises: 
<claim-text>past recommendations received by the wireless device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. The product of <dependent-claim-reference depends_on="CLM-00044">claim 47</dependent-claim-reference>, wherein said related service history items from a history log comprises: 
<claim-text>past services used by the user of the wireless device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. The product of <dependent-claim-reference depends_on="CLM-00044">claim 47</dependent-claim-reference>, wherein said related service history items from a history log comprises: 
<claim-text>prestored service preferences entered by the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. The product of <dependent-claim-reference depends_on="CLM-00044">claim 47</dependent-claim-reference>, wherein said related service history items from a history log comprises: 
<claim-text>special requested service requirements entered by the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. A system to enable a wireless device to provide recommendations to its user that are appropriate to the device&apos;s current environment, comprising: 
<claim-text>a sensor for providing sensor signals characterizing a current environment of the wireless device; </claim-text>
<claim-text>a context inference engine for processing the sensor signals to produce a current context result; </claim-text>
<claim-text>a history log for storing related service history items; </claim-text>
<claim-text>a processor for forming context-activity pair information from the current context result and the related service history items; </claim-text>
<claim-text>a database for providing recommendations using the context-activity pair information; and </claim-text>
<claim-text>a user interface for providing recommendations to the user in response to the searching step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference>, wherein said related service history items from a history log comprises: 
<claim-text>past recommendations received by the wireless device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference>, wherein said related service history items from a history log comprises: 
<claim-text>past services used by the user of the wireless device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00055">
<claim-text><highlight><bold>55</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference>, wherein said related service history items from a history log comprises: 
<claim-text>prestored service preferences entered by the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference>, wherein said related service history items from a history log comprises: 
<claim-text>special requested service requirements entered by the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00057">
<claim-text><highlight><bold>57</bold></highlight>. A computer program product to enable a wireless device to provide recommendations to its user that are appropriate to the device&apos;s current environment, comprising: </claim-text>
<claim-text>a computer readable medium; 
<claim-text>program code in said computer readable medium for receiving sensor signals characterizing a current environment of the wireless device; </claim-text>
<claim-text>program code in said computer readable medium for processing the sensor signals with a context inference engine to produce a current context result; </claim-text>
<claim-text>program code in said computer readable medium for accessing related service history items from a history log; </claim-text>
<claim-text>program code in said computer readable medium for forming context-activity pair information from the current context result and the related service history items; </claim-text>
<claim-text>program code in said computer readable medium for searching a database of recommendations using the context-activity pair information; and </claim-text>
<claim-text>program code in said computer readable medium for providing recommendations to the user in response to the searching step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00058">
<claim-text><highlight><bold>58</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00055">claim 57</dependent-claim-reference>, wherein said related service history items from a history log comprises: 
<claim-text>past recommendations received by the wireless device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00059">
<claim-text><highlight><bold>59</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00055">claim 57</dependent-claim-reference>, wherein said related service history items from a history log comprises: 
<claim-text>past services used by the user of the wireless device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00060">
<claim-text><highlight><bold>60</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00055">claim 57</dependent-claim-reference>, wherein said related service history items from a history log comprises: 
<claim-text>prestored service preferences entered by the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00061">
<claim-text><highlight><bold>61</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00055">claim 57</dependent-claim-reference>, wherein said related service history items from a history log comprises: 
<claim-text>special requested service requirements entered by the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00062">
<claim-text><highlight><bold>62</bold></highlight>. A method to enable a wireless device to automatically provide recommendations to its user that are appropriate to the device&apos;s current environment, comprising: 
<claim-text>automatically processing sensor signals characterizing a current environment of the wireless device to produce a current context result; </claim-text>
<claim-text>accessing related service history items from a history log, including past recommendations received by the wireless device and past services used by the user of the wireless device; </claim-text>
<claim-text>forming context-activity pair information from the current context result and the related service history items; </claim-text>
<claim-text>searching a database of recommendations using the context-activity pair information; and providing recommendations to the user in response to the searching step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00063">
<claim-text><highlight><bold>63</bold></highlight>. A system to enable a wireless device to automatically provide recommendations to its user that are appropriate to the device&apos;s current environment, comprising: 
<claim-text>a mobile wireless device for automatically processing sensor signals characterizing a current environment of the wireless device to produce a current context result; </claim-text>
<claim-text>a history log in the wireless device, for storing related service history items, including past recommendations received by the wireless device and past services used by the user of the wireless device; </claim-text>
<claim-text>a processor coupled to the history log in the wireless device, for forming context-activity pair information from the current context result and the related service history items; </claim-text>
<claim-text>a database server wirelessly coupled to the processor, for searching recommendations using the context-activity pair information; and </claim-text>
<claim-text>a user interface coupled to the processor in the wireless device, for providing recommendations to the user in response to the searching step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00064">
<claim-text><highlight><bold>64</bold></highlight>. A method to enable a wireless device to automatically provide recommendations to its user that are appropriate to the device&apos;s current environment, comprising: 
<claim-text>automatically processing in a mobile wireless device, sensor signals characterizing a current environment, to produce a current context result; </claim-text>
<claim-text>storing in a history log in the wireless device, related service history items, including past recommendations received by the wireless device and past services used by the user of the wireless device; </claim-text>
<claim-text>forming context-activity pair information in the wireless device, from the current context result and the related service history items; </claim-text>
<claim-text>transmitting the context-activity pair information to a database server, for searching recommendations related to the current context and the related service history items; and receiving the related recommendations at the wireless device for presentation to the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00065">
<claim-text><highlight><bold>65</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 64</dependent-claim-reference>, wherein said transmitting step further comprises: automatically transmitting the current context in a message over a wireless network to the network server; 
<claim-text>including in the message, a unique code to enable the database server to respond with information corresponding to the code, the information being similar recommendations in its database related to said past recommendations received by the wireless device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00066">
<claim-text><highlight><bold>66</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 64</dependent-claim-reference>, wherein said transmitting step further comprises: automatically transmitting the current context in a message over a wireless network to the network server; 
<claim-text>including in the message, a unique code to enable the database server to respond with information corresponding to the code, the information being similar recommendations in its database related to said past services used by the user of the wireless device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00067">
<claim-text><highlight><bold>67</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 64</dependent-claim-reference>, wherein said transmitting step further comprises: automatically transmitting the current context in a message over a wireless network to the network server; 
<claim-text>including in the message, a unique code to enable the database server to respond with information corresponding to the code, the information being similar recommendations in its database related to both said past recommendations received by the wireless device and said past services used by the user of the wireless device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00068">
<claim-text><highlight><bold>68</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 64</dependent-claim-reference>, wherein said receiving step further comprises: receiving information customized to the user&apos;s perceived interests, the information being related to the current context. </claim-text>
</claim>
<claim id="CLM-00069">
<claim-text><highlight><bold>69</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 64</dependent-claim-reference>, wherein said receiving step further comprises: receiving recommendations that have been made in the past to other users in similar contexts. </claim-text>
</claim>
<claim id="CLM-00070">
<claim-text><highlight><bold>70</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00066">claim 64</dependent-claim-reference>, wherein said receiving step further comprises: receiving recommendations based on past services used by other users. </claim-text>
</claim>
<claim id="CLM-00071">
<claim-text><highlight><bold>71</bold></highlight>. A method to enable a network server coupled to a wireless device to automatically provide recommendations to the user of the device that are appropriate to the device&apos;s current environment, comprising: 
<claim-text>storing in a network server, prior recommendations that have been made to other users in past contexts; </claim-text>
<claim-text>storing in the network server, prior services used by other users in past contexts; receiving in the network server, context-activity pair information from a wireless device, including a current context and related service history items, the related service history items including past recommendations received by the wireless device and past services used by the user of the wireless device; </claim-text>
<claim-text>searching in the network server, for selected ones of said prior recommendations and prior services as new recommendations related to the current context and the related service history items; and </claim-text>
<claim-text>sending the new recommendations to the wireless device for presentation to the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00072">
<claim-text><highlight><bold>72</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference>, wherein said receiving step further comprises: </claim-text>
<claim-text>receiving in the network server the current context in a message over a wireless network from the wireless device, said message including a unique code; 
<claim-text>sending from the network server, information corresponding to the code, the information being similar recommendations related to said past recommendations received by the wireless device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00073">
<claim-text><highlight><bold>73</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference>, wherein said receiving step further comprises: 
<claim-text>receiving in the network server the current context in a message over a wireless network from the wireless device, said message including a unique code; </claim-text>
<claim-text>sending from the network server, information corresponding to the code, the information being similar recommendations related to said past services used by the user of the wireless device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00074">
<claim-text><highlight><bold>74</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference>, wherein said receiving step further comprises: 
<claim-text>receiving in the network server the current context in a message over a wireless network from the wireless device, said message including a unique code; </claim-text>
<claim-text>sending from the network server, information corresponding to the code, the information being similar recommendations related to both said past recommendations received by the wireless device and said past services used by the user of the wireless device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00075">
<claim-text><highlight><bold>75</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference>, wherein said sending step further comprises: 
<claim-text>sending information customized to the user&apos;s perceived interests, the information being related to the current context. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00076">
<claim-text><highlight><bold>76</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference>, wherein said sending step further comprises: 
<claim-text>sending recommendations that have been made in the past to other users in similar contexts. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00077">
<claim-text><highlight><bold>77</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference>, wherein said sending step further comprises: 
<claim-text>sending recommendations based on past services used by other users.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>4</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004937A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004937A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004937A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004937A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004937A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004937A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004937A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004937A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004937A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004937A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004937A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030004937A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030004937A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030004937A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030004937A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030004937A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030004937A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030004937A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030004937A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030004937A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030004937A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030004937A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030004937A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030004937A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030004937A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030004937A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
