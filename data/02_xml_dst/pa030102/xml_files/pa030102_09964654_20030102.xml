<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030003978A1-20030102-D00000.TIF SYSTEM "US20030003978A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030003978A1-20030102-D00001.TIF SYSTEM "US20030003978A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030003978A1-20030102-D00002.TIF SYSTEM "US20030003978A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030003978A1-20030102-D00003.TIF SYSTEM "US20030003978A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030003978A1-20030102-D00004.TIF SYSTEM "US20030003978A1-20030102-D00004.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030003978</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09964654</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20010928</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-199107</doc-number>
</priority-application-number>
<filing-date>20010629</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>A63F013/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>463</class>
<subclass>007000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Video game with distinctive attributes for enemy characters, predetermined characters, and candidate characters</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Toshiro</given-name>
<family-name>Tsuchida</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>SQUARE CO., Ltd.</organization-name>
<address>
<city>Tokyo</city>
<country>
<country-code>JP</country-code>
</country>
</address>
<assignee-type>03</assignee-type>
</assignee>
<correspondence-address>
<name-1>GREENBLUM &amp; BERNSTEIN, P.L.C.</name-1>
<name-2></name-2>
<address>
<address-1>1941 ROLAND CLARKE PLACE</address-1>
<city>RESTON</city>
<state>VA</state>
<postalcode>20191</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A computer-readable recording medium with a video game program recorded thereon; a video game program; a video game processing method; and a video game processing apparatus, with which it is possible to understand easily which of a number of displayed characters is to be the object of an action of a player character and it is possible to make a player character execute an intended action exactly. The input of an action to be performed by a predetermined character is accepted and the input of a candidate character intended to be an object of the action is accepted, and the display color of a cursor pointing at the candidate character is made to be different when the action accepted as input is an attack action and the candidate character is an enemy character from when the action accepted as input is an attack action and the candidate character is not an enemy character. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">CROSS-REFERENCE TO RELATED APPLICATION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present disclosure relates to subject matter contained in Japanese Patent Application No. 2001-199107, filed on Jun. 29, 2001, the disclosure of which is expressly incorporated herein by reference in its entirety. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The present invention relates to video games. More specifically, the present invention relates to a video game capable of displaying multiple characters including player characters and enemy characters on a screen and controlling actions of the displayed characters in accordance with control operations of a player. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> 2. Background Information </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> There has been a genre of computer video games, known as the role-playing games (RPG). In an RPG, generally, a character performs a role in a game in place of a player, and by controlling this character (hereinafter, the player character) the player experiences a virtual adventure while causing a story involving the player character to unfold. In most cases, a character which opposes the player character (hereinafter, an enemy character) is provided in each of a number of set zones formed in a virtual space. The story is then caused to unfold by the player character proceeding from one zone to the next and fighting with and defeating enemy characters seeking to prevent the player character from achieving a certain objective in the story. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The player character is controlled by buttons on a keypad, or a joystick or the like. In response to control operations performed on this keypad, the player character moves and carries out predetermined actions. In the course of the story, numerous events such as battle scenes are provided. In these events, the game proceeds on the basis of selection operations being carried out by the player. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Although in battle scenes of video games of related art in many cases a player character and an enemy character fight one-on-one. Video games have also been proposed which make the game more interesting allowing a number of player characters and a number of enemy characters to fight. The present invention includes a video game with which multiple player characters and multiple enemy characters can fight and, furthermore, it is possible as necessary to replace a player character taking part in a battle. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> However, in video games of the related art, there has been the problem that the greater the number of characters taking part in a battle, and the more complicated the actions that the player characters perform, the more difficult it becomes to keep track of their state. Furthermore, in worst cases, sometimes the player performs an erroneous control operation and a character does not carry out the action that the player intended, and the enjoyment of the game is reduced. Because of this, a video game is desired in which it is possible to understand easily which character is to be the object of an action of a player character and it is possible to make a player character execute an intended action exactly. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> It is therefore an object of the present invention to provide a computer-readable recording medium with a video game program recorded thereon; a video game program; a video game processing method; and a video game processing apparatus, with which it is possible to understand easily which character is to be the object of an action of a player character and it is possible to make a player character execute an intended action exactly. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> To achieve this object and other objects, a first aspect of the invention provides a computer-readable recording medium on which is recorded a video game program capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player. The program executes input-accepting that accepts the input to a computer of a candidate character intended to be the object of an action to be performed by a predetermined character in accordance with a control operation of a player. The program determines whether the candidate character accepted as input is an enemy character. In accordance with a determination result, the program displays the vicinity of the candidate character differently depending on whether the candidate character is an enemy character. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> According to this first aspect, because the vicinity of the candidate character is displayed differently depending on whether or not the candidate character is an enemy character, it is possible to provide a recording medium including a program with which the player can easily make out the candidate character and the enjoyment of the game can be maintained. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> In this first aspect, also, a program for executing displaying a predetermined character vicinity differently from a candidate character vicinity may be recorded on the recording medium. By this, it is possible to provide a recording medium with a program in which the relationships between multiple characters can be understood more exactly and the enjoyment of the game can be maintained. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> A second aspect of the invention provides a computer-readable recording medium on which is recorded a video game program capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player. The program accepts the input to a computer of an action to be performed by a predetermined character in accordance with a control operation of a player. The program also accepts the input to the computer of a candidate character intended to be an object of the action to be performed by the predetermined character in accordance with a control operation of a player. The program additionally in accordance with the type of the action accepted as input and the type of the candidate character accepted as input displays the vicinity of the candidate character differently depending on whether or not the candidate character is an enemy character. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> According to this second aspect, because the vicinity of the candidate character is displayed differently depending on the type of the player character action and the type of the candidate character intended to be an object of the action, it is possible to provide a recording medium including a program with which the player can easily make out the candidate character and the enjoyability of the game can be maintained. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> In this second aspect, preferably, when the action accepted as input is an attack action and the candidate character is an enemy character, a cursor pointing at the candidate character is displayed in a first display form, and when the action accepted as input is an attack action and the candidate character is not an enemy character, the cursor pointing at the candidate character is displayed in a second display form. By this, the function for distinguishing the candidate character is added to a cursor necessary for character selection, and because, with the help of the display form of the cursor attack action control, operations can be carried out more exactly, it is possible to provide a recording medium including a program with which the enjoyment of the game can be maintained. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> And, in this second aspect, preferably, when the action accepted as input is a defense action and the candidate character is not an enemy character, a cursor pointing at the candidate character is displayed in a first display form. When the accepted action input is a defense action and the candidate character is an enemy character, the cursor pointing at the candidate character is displayed in a second display form. By this means, the function for distinguishing the candidate character is added to a cursor necessary for character selection. Because defense action control operations can be carried out more exactly with the help of the display form of the cursor, it is possible to provide a recording medium including a program with which the enjoyment of the game can be maintained. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> And, with this second aspect, a program for displaying the vicinity of the predetermined character differently from the vicinity of the candidate character may also be recorded on the recording medium. By this, it is possible to provide a recording medium including a program with which the relationships between multiple characters can be understood more exactly and the enjoyability of the game can be maintained. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> A third aspect of the invention provides a video game program capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player. The program that accepts the input to a computer of a candidate character intended to be an object of an action to be performed by a predetermined character in accordance with a control operation of a player. The program also determines whether or not the candidate character accepted as input is an enemy character. The program also, in accordance with a determination result obtained in the determining step, displays the vicinity of the candidate character differently depending on whether or not the candidate character is an enemy character. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> According to this third aspect, because the vicinity of the candidate character is displayed differently depending on whether or not the candidate character is an enemy character, the player can easily make out the candidate character and the enjoyability of the game can be maintained. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> With this third aspect, also, the program may display a vicinity of the predetermined character differently from the vicinity of the candidate character. This makes it possible for the relationships between multiple characters to be understood more exactly and for the enjoyability of the game to be maintained. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> A fourth aspect of the invention provides a video game program capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player. The program accepts the input to a computer of an action to be performed by a predetermined character in accordance with a control operation of a player. The program also accepts the input to the computer of a candidate character intended to be the object of the action to be performed by the predetermined character in accordance with a control operation of a player. The program also, in accordance with the type of the action accepted as input and the type of the candidate character accepted as input, displays the vicinity of the candidate character differently depending on whether or not the candidate character is an enemy character. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> According to this fourth aspect, because the vicinity of the candidate character is displayed differently depending on the type of the player character action and the type of the candidate character intended to be an object of the action, the player can easily make out the candidate character and the enjoyability of the game can be maintained. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> With this fourth aspect, preferably, when the action accepted as input in the first step is an attack action and the candidate character is an enemy character, a cursor pointing at the candidate character is displayed in a first display form in the displaying step. When the action accepted as input in the first step is an attack action and the candidate character is not an enemy character, the cursor pointing at the candidate character is displayed in a second display form in the displaying step. By this means, the function for distinguishing the candidate character is added to a cursor necessary for character selection, and because attack action control operations can be carried out exactly with the help of the display form of the cursor, the enjoyability of the game can be maintained. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> With this fourth aspect, preferably, when the action accepted as input in the first step is a defense action and the candidate character is not an enemy character, a cursor pointing at the candidate character is displayed in a first display form in the displaying step. When the action accepted as input in the first step is a defense action and the candidate character is an enemy character, the cursor pointing at the candidate character is displayed in a second display form in the displaying step. By this means, the function for distinguishing the candidate character is added to a cursor necessary for character selection. Because defense action control operations can be carried out more exactly with the help of the display form of the cursor, the enjoyability of the game can be maintained. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> With this fourth aspect, also, the program may execute a step of displaying the vicinity of the predetermined character differently from the vicinity of the candidate character. This makes it possible for the relationships between multiple characters to be understood more exactly and for the enjoyability of the game to be maintained. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> A fifth aspect of the invention provides a video game processing method of a video game capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player, the method including an input-accepting that accepts the input to a computer of a candidate character intended to be an object of an action to be performed by a predetermined character in accordance with a control operation of a player. The method also includes a determining that determines whether or not the candidate character accepted as input in the input-accepting is an enemy character. The method additionally includes a displaying that in accordance with a determination result obtained in the determining, displays the vicinity of the candidate character differently depending on whether or not the candidate character is an enemy character. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> According to this fifth aspect, because the vicinity of the candidate character is displayed differently depending on whether or not the candidate character is an enemy character, the player can easily make out the candidate character and the enjoyability of the game can be maintained. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> With this fifth aspect, the method may further include displaying the vicinity of the predetermined character differently from the vicinity of the candidate character. This makes it possible for the relationships between multiple characters to be understood more exactly and for the enjoyability of the game to be maintained. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> A sixth aspect of the invention provides a video game processing method of a video game capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player, the method includes accepting a first input to a computer of an action to be performed by a predetermined character in accordance with a control operation of a player. The method also includes a accepting a second input to the computer of a candidate character intended to be an object of the action to be performed by the predetermined character in accordance with a control operation of a player. The method also includes a displaying that in accordance with the type of the action accepted as the first input and the type of the candidate character accepted as the second input, displays the vicinity of the candidate character differently depending on whether or not the candidate character is an enemy character. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> According to this sixth aspect, because the vicinity of the candidate character is displayed differently depending on the type of the player character action and the type of the candidate character intended to be the object of the action, the player can easily make out the candidate character and the enjoyability of the game can be maintained. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> With this sixth aspect, preferably, when the action accepted as the first input is an attack action and the candidate character is an enemy character, a cursor pointing at the candidate character is displayed in a first display form in the displaying. When the action input-accepted in the first input is an attack action and the candidate character is not an enemy character, the cursor pointing at the candidate character is displayed in a second display form in the displaying. By this means the function for distinguishing the candidate character is added to a cursor necessary for character selection. Because attack action control operations can be carried out exactly with the help of the display form of the cursor, the enjoyability of the game can be maintained. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> With this sixth aspect, preferably, when the action accepted as the first input is a defense action and the candidate character is not an enemy character, a cursor pointing at the candidate character is displayed in a first display form in the displaying. When the action accepted as the first input is a defense action and the candidate character is an enemy character, the cursor pointing at the candidate character is displayed in a second display form in the displaying. By this means the function for distinguishing the candidate character is added to a cursor necessary for character selection. Because defense action control operations can be carried out more exactly with the help of the display form of the cursor, the enjoyability of the game can be maintained. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> And with this sixth aspect, also, the method may be further provided with displaying of the vicinity of the predetermined character differently from the vicinity of the candidate character. This makes it possible for the relationships between multiple characters to be understood more exactly and for the enjoyability of the game to be maintained. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> A seventh aspect of the invention provides a video game apparatus, including a storing system that stores a video game program capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player. The apparatus also includes a computer for reading from the storing system and executing the program. The apparatus also includes a display apparatus for picture display, provided as an output of the computer, wherein the computer, by executing the program, accepts the input of a candidate character intended to be an object of an action to be performed by a predetermined character in accordance with a control operation of a player. The apparatus also determines whether or not the input accepted for the candidate character is for an enemy character. The apparatus also displays the vicinity of the candidate character differently depending on whether or not the candidate character is an enemy character. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> According to this seventh aspect, because the vicinity of the candidate character is displayed differently depending on whether or not the candidate character is an enemy character, the player can easily make out the candidate character and the enjoyability of the game can be maintained. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> With this seventh aspect, also the computer may display the vicinity of the predetermined character differently from the vicinity of the candidate character. This makes it possible for the relationships between multiple characters to be understood more exactly and for the enjoyability of the game to be maintained. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> An eighth aspect of the invention provides a video game apparatus, including a storing system that stores a video game program capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player. The apparatus also includes a computer for reading from the storing system and executing the program. The apparatus additionally includes a display apparatus for picture display, provided as output system of the computer, wherein the computer, by executing the program, accepts the input of an action to be performed by a player character in accordance with a control operation of a player. The apparatus also accepts the input of a candidate character intended to be an object of the action to be performed by the predetermined character. The apparatus, additionally, in accordance with the type of the action accepted as input and the type of the candidate character accepted as input, displays the vicinity of the candidate character differently depending on whether or not the candidate character is an enemy character. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> According to this eighth aspect, because the vicinity of the candidate character is displayed differently depending on the type of the player character action and the type of the candidate character intended to be an object of the action, the player can easily make out the candidate character and the enjoyability of the game can be maintained. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> With this eighth aspect, preferably, when the action accepted as input is an attack action and the candidate character is an enemy character, a cursor pointing at the candidate character is displayed in a first display form. When the action input-accepted is an attack action and the candidate character is not an enemy character, the cursor pointing at the candidate character is displayed in a second display form. By this means the function for distinguishing the candidate character is added to a cursor necessary anyway for character selection, and because attack action control operations can be carried out exactly with the help of the display form of the cursor, the enjoyability of the game can be maintained. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> And with this eighth aspect, preferably, when the action input-accepted is a defense action and the candidate character is not an enemy character, a cursor pointing at the candidate character is displayed in a first display form. When the action input-accepted is a defense action and the candidate character is an enemy character, the cursor pointing at the candidate character is displayed in a second display form. By this means the function for distinguishing the candidate character is added to a cursor necessary for selecting characters. Because defense action control operations can be carried out more exactly with the help of the display form of the cursor, the enjoyability of the game can be maintained. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> And, with this eighth aspect, also, the computer may display the vicinity of the predetermined character differently from the vicinity of the candidate character. This makes it possible for the relationships between multiple characters to be understood more exactly and for the enjoyability of the game to be maintained.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram showing an exemplary overall construction of a preferred embodiment of the invention; </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a flow chart used in an exemplary explanation of the overall operation of a preferred embodiment; </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a flow chart used in an exemplary explanation of battle control input-acceptance processing in a preferred embodiment; </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4A</cross-reference> is a view illustrating an example of a display picture in a preferred embodiment; and </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4B</cross-reference> is another view illustrating an example of a display picture in a preferred embodiment.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> A preferred embodiment of the invention will now be described with reference to the accompanying drawings. <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram showing the overall construction of this preferred embodiment. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> First, a video game machine pertaining to this preferred embodiment of the invention is described. This game machine <highlight><bold>10</bold></highlight> is made up of a game unit proper <highlight><bold>11</bold></highlight> and a keypad <highlight><bold>50</bold></highlight> connected to an input side of the game unit proper <highlight><bold>11</bold></highlight>, and a television set <highlight><bold>100</bold></highlight> having a CRT (Cathode Ray Tube) and speakers are connected to an output side of the game unit proper <highlight><bold>11</bold></highlight>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The game unit proper <highlight><bold>11</bold></highlight> has a CPU (Central Processing Unit) <highlight><bold>12</bold></highlight>, a ROM (Read Only Memory) <highlight><bold>13</bold></highlight>, a RAM (Random Access Memory) <highlight><bold>14</bold></highlight>, a hard disc drive <highlight><bold>15</bold></highlight>, a graphics processing part <highlight><bold>16</bold></highlight>, an audio processing part <highlight><bold>17</bold></highlight>, a disk drive <highlight><bold>18</bold></highlight>, a communications interface <highlight><bold>19</bold></highlight>, a memory card reader/writer <highlight><bold>20</bold></highlight> and an input interface <highlight><bold>21</bold></highlight>, and a bus <highlight><bold>22</bold></highlight> connecting these elements. The game unit proper <highlight><bold>11</bold></highlight> is connected via the input interface <highlight><bold>21</bold></highlight> to the keypad <highlight><bold>50</bold></highlight>, which serves as a control input part. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> A &plus;-key <highlight><bold>51</bold></highlight> and a group of buttons <highlight><bold>52</bold></highlight> are provided on the top of the keypad <highlight><bold>50</bold></highlight>. The button group <highlight><bold>52</bold></highlight> includes a O-button <highlight><bold>52</bold></highlight><highlight><italic>a</italic></highlight>, a x-button <highlight><bold>52</bold></highlight><highlight><italic>b</italic></highlight>, a &Dgr;-button <highlight><bold>52</bold></highlight><highlight><italic>c </italic></highlight>and a &square;-button <highlight><bold>52</bold></highlight><highlight><italic>d</italic></highlight>. A select button <highlight><bold>55</bold></highlight> is provided on a connecting part linking a base part on which the &plus;-key <highlight><bold>51</bold></highlight> is provided to a base part on which the button group <highlight><bold>52</bold></highlight> is provided. Other buttons, such as an R1-button <highlight><bold>56</bold></highlight> and an L1-button <highlight><bold>53</bold></highlight>, are provided on the side of the keypad <highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The keypad <highlight><bold>50</bold></highlight> has switches linked respectively to the &plus;-key <highlight><bold>51</bold></highlight>, the O-button <highlight><bold>52</bold></highlight><highlight><italic>a</italic></highlight>, the x-button <highlight><bold>52</bold></highlight><highlight><italic>b</italic></highlight>, the &Dgr;-button <highlight><bold>52</bold></highlight><highlight><italic>c</italic></highlight>, the &square;-button <highlight><bold>52</bold></highlight><highlight><italic>d</italic></highlight>, the select button <highlight><bold>55</bold></highlight>, the R1-button <highlight><bold>56</bold></highlight> and the L1-button <highlight><bold>53</bold></highlight>, and when a pushing force is applied to one of the buttons the corresponding switch turns on. A detection signal corresponding to this on/off state of the switch is generated in the keypad <highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> The detection signals generated in the keypad <highlight><bold>50</bold></highlight> are supplied to the input interface <highlight><bold>21</bold></highlight>, and by a detection signal from the keypad <highlight><bold>50</bold></highlight> being passed through the input interface <highlight><bold>21</bold></highlight> it becomes detection information indicating which button on the keypad <highlight><bold>50</bold></highlight> has been turned on. In this way, control operation commands keyed in to the keypad <highlight><bold>50</bold></highlight> by a user are supplied to the game unit proper <highlight><bold>11</bold></highlight>. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> The CPU <highlight><bold>12</bold></highlight> centrally controls the apparatus as a whole by executing an operating system stored in the ROM <highlight><bold>13</bold></highlight>, and executes video game programs stored in a program area of the RAM <highlight><bold>14</bold></highlight>. Also, the CPU <highlight><bold>12</bold></highlight> monitors the state of the keypad <highlight><bold>50</bold></highlight> by way of the input interface <highlight><bold>21</bold></highlight>, executes video game programs stored in the program area of the RAM <highlight><bold>14</bold></highlight> as necessary, and as necessary stores in a predetermined area of the RAM <highlight><bold>14</bold></highlight> various data derived in the course of a game. The ROM <highlight><bold>13</bold></highlight> includes EEPROM (Electrically Erasable and Programmable Read Only Memory), and predetermined data in the RAM <highlight><bold>14</bold></highlight> which must be held even when the power supply is cut are stored in the EEPROM at a stage before power supply cut-off. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> The RAM <highlight><bold>14</bold></highlight> has mainly a program area, a picture data area, and an audio data area, and also has an area for holding other data. Program data, picture data, audio data and other data read from a disc <highlight><bold>30</bold></highlight> such as a DVD or a CD-ROM by the disk drive <highlight><bold>18</bold></highlight> are respectively held in these areas. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> The RAM <highlight><bold>14</bold></highlight> is also used as a work area, and various data derived in the course of the game are further held in the area for holding other data. Program data, picture data, audio data and other data read from the disc <highlight><bold>30</bold></highlight> can also be held in the hard disc drive <highlight><bold>15</bold></highlight>; program data, picture data, audio data and other data held in the hard disc drive <highlight><bold>15</bold></highlight> may be transferred to the RAM <highlight><bold>14</bold></highlight> as necessary; and various data derived in the course of the game and held in the RAM <highlight><bold>14</bold></highlight> may be transferred to and held in the hard disc drive <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> The graphics processing part <highlight><bold>16</bold></highlight> includes in a VRAM <highlight><bold>23</bold></highlight> a frame buffer which constitutes a buffer memory for holding picture data; using control information from the CPU <highlight><bold>12</bold></highlight> arising along with program execution it generates a video signal on the basis of picture data held in the frame buffer and outputs the video signal to the television set <highlight><bold>100</bold></highlight>. As a result, a picture based on picture data held in the frame buffer is displayed on the display screen <highlight><bold>101</bold></highlight> of the television set <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> The audio processing part <highlight><bold>17</bold></highlight> has the function of generating audio signals such as BGM (Background Music), conversations between characters, and sound effects. The audio processing part <highlight><bold>17</bold></highlight> outputs to a speaker <highlight><bold>102</bold></highlight> of the television set <highlight><bold>100</bold></highlight> a sound signal including audio signals on the basis of data stored in the RAM <highlight><bold>14</bold></highlight> using control information from the CPU <highlight><bold>12</bold></highlight> arising along with program execution. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> The television set <highlight><bold>100</bold></highlight> has the display screen <highlight><bold>101</bold></highlight> and the speaker <highlight><bold>102</bold></highlight> and performs picture (image) and audio output according to the content of the video game on the basis of the video signal (picture signal) and sound signal from the game unit proper <highlight><bold>11</bold></highlight>. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> The disk drive <highlight><bold>18</bold></highlight> is so constructed that a disc (DVD or CD-ROM) <highlight><bold>30</bold></highlight>, which is a recording medium, can be removably loaded into it, and reads video game program data, picture data, audio data and other data held on the disc <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> The communications interface <highlight><bold>19</bold></highlight> is connected to a network <highlight><bold>110</bold></highlight>, and acquires various kinds of data by performing data communications with data storage devices and information processing devices such as servers installed in other locations. The video game program data, picture data, audio data and other data held in the RAM <highlight><bold>14</bold></highlight> may alternatively be acquired by way of the network <highlight><bold>110</bold></highlight> and the communications interface <highlight><bold>19</bold></highlight>. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> The memory card reader/writer <highlight><bold>20</bold></highlight> is so constructed that a memory card <highlight><bold>31</bold></highlight> can be removably loaded into it, and writes save data of a relatively low volume, such as mid-way progress data of video games and video game environment setting data, to a memory card. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> On a recording medium pertaining to this preferred embodiment of the invention, that is, the disc <highlight><bold>30</bold></highlight>, is recorded a video game program capable of displaying multiple characters including player characters and enemy characters on a screen and controlling actions of the displayed characters in accordance with control operations of a player, and this can be read by a computer (the CPU <highlight><bold>12</bold></highlight> and its peripheral devices). This computer can execute accepting first input of an action to be performed by a predetermined character in accordance with control operations of a player; accepting second input of a candidate character intended to be the object of an action to be performed by the predetermined character in accordance with control operations of the player; and a displaying of the vicinity of the candidate character differently depending on whether the candidate character is an enemy character or is other than an enemy character, in accordance with the type of the action accepted as the first input and the type of the candidate character accepted as the second input, and this computer also can execute displaying of the vicinity of the predetermined character and the vicinity of the candidate character differently. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> Accordingly, the game unit proper <highlight><bold>11</bold></highlight> has, besides the functions necessary for carrying out a related art video game by software processing based on data held in the CPU <highlight><bold>12</bold></highlight> and the various memories, as special functions, a first function of accepting the input of an action to be performed by a predetermined character in accordance with control operations of a player; a second function of accepting the input of a candidate character intended to be the object of the action to be performed by the predetermined character in accordance with control operations of the player; and a function of, in accordance with the type of the action accepted as input by the first function and the type of the candidate character accepted as input by the second function, displaying the vicinity of the candidate character differently depending on whether the candidate character is an enemy character or is other than an enemy character. The game unit proper <highlight><bold>11</bold></highlight> also has a function of displaying the vicinity of the predetermined character and the vicinity of the candidate character differently. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> As a result it is possible to realize a video game with which a character to be the object of an action of a player character can be made out easily and a player character can be made to execute an intended action exactly. Instead of being realized by software processing, these functions may alternatively be realized by the provision of appropriate dedicated hardware. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> Next, the operation of this preferred embodiment will be explained. <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a flow chart showing an example of a processing routine of the overall operation of the preferred embodiment described above. The operations in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> have been assigned the reference numerals S<highlight><bold>1</bold></highlight> through S<highlight><bold>13</bold></highlight>. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> First, when a power supply (not shown) is turned on, a boot program is read out; the different parts are initialized; and processing for starting a game is carried out. That is, by the disk drive <highlight><bold>18</bold></highlight>, video game program data, picture data, audio data and other data held in the disc (DVD, CD-ROM or the like) <highlight><bold>30</bold></highlight> are read out and stored in the RAM <highlight><bold>14</bold></highlight>, and as necessary data held in nonvolatile memory such as the EEPROM of the ROM <highlight><bold>13</bold></highlight>, the hard disc drive <highlight><bold>15</bold></highlight>, or the memory card <highlight><bold>31</bold></highlight> are read out and stored in the RAM <highlight><bold>14</bold></highlight>. Before the start of an actual game, various settings are carried out to reach a state from which a game can proceed. Then, when a game is started from this state, a scene such as a movement scene, a battle scene or some other scene is set, and processing proceeds to step S<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> In step S<highlight><bold>1</bold></highlight> it is determined whether or not the present scene is a movement scene, and if it is not a movement scene processing proceeds to step S<highlight><bold>2</bold></highlight> and determines whether or not it is a battle scene. When in step S<highlight><bold>2</bold></highlight> it is determined that the scene is not a battle scene, processing moves on to step S<highlight><bold>3</bold></highlight> and it is determined whether or not the scene is another scene (conversation, shopping or picking up). When in step S<highlight><bold>3</bold></highlight> it is determined that the scene is not another scene, processing returns to step S<highlight><bold>1</bold></highlight> and the processing of steps S<highlight><bold>1</bold></highlight> through S<highlight><bold>3</bold></highlight> is repeated so that a standby state is assumed. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> When in this state it is determined in step S<highlight><bold>1</bold></highlight> that the present scene is a movement scene, processing moves on to step S<highlight><bold>4</bold></highlight> and a movement control input-accepting state is assumed. And in step S<highlight><bold>5</bold></highlight>, movement processing corresponding to an accepted movement control input is carried out. When the movement processing ends, processing moves on to step S<highlight><bold>6</bold></highlight> and movement information is generated on the basis of player character position information derived successively along with the movement processing. The movement information includes information showing a set zone in a virtual space in which the present player character is positioned. When the movement information has been generated, processing moves on to step S<highlight><bold>11</bold></highlight>. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> When in step S<highlight><bold>2</bold></highlight> it is determined that the present scene is a battle scene, processing moves on to step S<highlight><bold>7</bold></highlight> and a battle control input-accepting state is assumed. Then, in step S<highlight><bold>8</bold></highlight>, battle processing corresponding to battle control operations accepted as input is carried out; a battle is fought between multiple player characters and multiple enemy characters in a combination freely selected by the player; and processing proceeds to step S<highlight><bold>9</bold></highlight>. In step S<highlight><bold>9</bold></highlight>, battle information is generated which shows, for example, names of the player characters and enemy characters which fought; the progress of the battle; the result of the battle; and parameters stipulating the capabilities of the player characters. When the battle information has been generated, processing moves on to step S<highlight><bold>11</bold></highlight>. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> When in step S<highlight><bold>3</bold></highlight> it is determined that the present scene is some other scene (conversation, shopping or picking up or the like), the routine proceeds to step S<highlight><bold>10</bold></highlight> and processing according to the scene is carried out, other information corresponding to that processing is generated, and the routine proceeds to step S<highlight><bold>11</bold></highlight>. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> When processing reaches step S<highlight><bold>11</bold></highlight>, the present position of the player character is successively updated by movement information being stored in a predetermined data area of the RAM <highlight><bold>14</bold></highlight>. Additionally, battle zone information for each set zone and other information are stored in a predetermined data area of the RAM <highlight><bold>14</bold></highlight>. That is, an action history of the player character is stored for each set zone. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> Then, in step S<highlight><bold>12</bold></highlight>, action evaluation processing is carried out on the basis of the information showing the action history of the player character stored in the RAM <highlight><bold>14</bold></highlight>. Specifically, for information where numbering is necessary, numbering is carried out using a pre-prepared conversion table; for information of which weighting is necessary, predetermined coefficients are applied; and these figures are totalled to calculate a score. The calculated score is added to a previous score held in a predetermined data area of the RAM <highlight><bold>14</bold></highlight>, and by this being stored again in a predetermined data area of the RAM <highlight><bold>14</bold></highlight> a score constituting evaluation information is successively updated. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> When action evaluation processing ends, processing moves on to step S<highlight><bold>13</bold></highlight> and determines whether or not the game is over. When the game is not over, processing returns to step S<highlight><bold>1</bold></highlight> and the processing of step S<highlight><bold>1</bold></highlight> through step S<highlight><bold>3</bold></highlight> described above is repeated. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> When in step S<highlight><bold>13</bold></highlight> it is determined that the game is over, although this is not shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the information showing the action history of characters, the evaluation information, and the player character capability settings information held in a predetermined area of the RAM <highlight><bold>14</bold></highlight> are each read from the RAM <highlight><bold>14</bold></highlight> and transferred to and stored together with other data in rewritable nonvolatile memory such as the EEPROM of the ROM <highlight><bold>13</bold></highlight>, the hard disc drive <highlight><bold>15</bold></highlight>, or the memory card <highlight><bold>31</bold></highlight>. After other kinds of processing accompanying the ending of a game are carried out, the power supply is cut off and the game ends. When the power supply is switched on again, the various information and other data thus held in nonvolatile memory by data save processing before power supply cut-off are read out from the nonvolatile memory to which they were saved and stored again in the same data area of the RAM <highlight><bold>14</bold></highlight> in which they were held before the power supply was cut off. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a flow chart showing an example of a processing procedure for the battle control operation input-acceptance processing (step S<highlight><bold>7</bold></highlight>) of the preferred embodiment described above, and <cross-reference target="DRAWINGS">FIGS. 4A and 4B</cross-reference> show an example of a specific display picture pertaining to battle control operation input-acceptance. With reference to <cross-reference target="DRAWINGS">FIG. 3</cross-reference> and <cross-reference target="DRAWINGS">FIGS. 4A and 4B</cross-reference>, battle control operation input-acceptance processing in the preferred embodiment described above is now explained. The steps in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> have been assigned the reference numerals S<highlight><bold>21</bold></highlight> through S<highlight><bold>40</bold></highlight>. In <cross-reference target="DRAWINGS">FIG. 4</cross-reference>A and <cross-reference target="DRAWINGS">FIG. 4B</cross-reference> the reference numbers <highlight><bold>401</bold></highlight> through <highlight><bold>403</bold></highlight> denote player characters taking part in a battle and the reference numbers <highlight><bold>404</bold></highlight> through <highlight><bold>406</bold></highlight> denote enemy characters, and it will be assumed that a battle can be fought with any combination of these characters. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> First, when the battle control operation input-acceptance processing is reached in the routine of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, in step S<highlight><bold>21</bold></highlight>, an initial battle picture is displayed, as shown in <cross-reference target="DRAWINGS">FIG. 4A</cross-reference>. In this initial battle picture, player characters <highlight><bold>401</bold></highlight> through <highlight><bold>403</bold></highlight> and enemy characters <highlight><bold>404</bold></highlight> through <highlight><bold>406</bold></highlight> are displayed confronting each other. In <cross-reference target="DRAWINGS">FIG. 4</cross-reference>A, the reference number <highlight><bold>410</bold></highlight> denotes a marker indicating a character which is to be the object of input-accepting of an action (command input) or character replacement, and this marker points to a certain character decided upon by internal processing. In <cross-reference target="DRAWINGS">FIG. 4</cross-reference>A, the reference number <highlight><bold>420</bold></highlight> denotes a cursor for pointing to a candidate character intended to be the object of an action. However, this cursor is not displayed at this stage. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> In step S<highlight><bold>22</bold></highlight> it is determined whether or not the L1-button <highlight><bold>53</bold></highlight> has been pressed, and when it is determined that the L1-button <highlight><bold>53</bold></highlight> has been pressed processing proceeds to step S<highlight><bold>23</bold></highlight>. When processing proceeds to step S<highlight><bold>23</bold></highlight>, a state is assumed wherein the character indicated by the marker <highlight><bold>410</bold></highlight> can be replaced with a substitute character. That is, a substitute character is selected by a control operation of the player, and character substitution processing is carried out as necessary between the selected substitute character and the character indicated by the marker <highlight><bold>410</bold></highlight>. When the character substitution processing ends, processing returns to step S<highlight><bold>21</bold></highlight> and the initial battle picture is displayed. And also when character substitution is canceled part-way through, processing returns to step S<highlight><bold>21</bold></highlight> and the initial battle picture is displayed. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> When in step S<highlight><bold>22</bold></highlight> it is determined that the L1-button <highlight><bold>53</bold></highlight> has not been pressed, processing moves on to step S<highlight><bold>24</bold></highlight>. A state for accepting the input of an action (command input) to be executed by the character pointed to by the marker <highlight><bold>410</bold></highlight> is assumed and an action is selected in accordance with an operation of the &plus;-key <highlight><bold>51</bold></highlight>. In <cross-reference target="DRAWINGS">FIG. 4A, a</cross-reference> display region for action selection is omitted. Then, in step S<highlight><bold>25</bold></highlight>, it is determined whether or not the O-button <highlight><bold>52</bold></highlight><highlight><italic>a </italic></highlight>has been pressed. When it is determined that the O-button <highlight><bold>52</bold></highlight><highlight><italic>a </italic></highlight>has not been pressed, processing returns to step S<highlight><bold>22</bold></highlight>. The processing of step S<highlight><bold>22</bold></highlight>, step S<highlight><bold>24</bold></highlight> and step S<highlight><bold>25</bold></highlight> is also repeated so that a standby state is assumed until either the L1-button <highlight><bold>53</bold></highlight> is pressed or the O-button <highlight><bold>52</bold></highlight><highlight><italic>a </italic></highlight>is pressed. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> When in step S<highlight><bold>25</bold></highlight> it is determined that the O-button <highlight><bold>52</bold></highlight><highlight><italic>a </italic></highlight>has been pressed, processing moves on to step S<highlight><bold>26</bold></highlight>, selection of the action selected at that time is confirmed, various associated processing is carried out, and the displayed picture changes to a battle execution picture. At this time, the cursor <highlight><bold>420</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 4A</cross-reference> is displayed for the first time, and a candidate character intended to be the object of an action determined by internal processing is indicated. As shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>A, the marker <highlight><bold>410</bold></highlight> and the cursor <highlight><bold>420</bold></highlight> are displayed differently. When the various processing associated with action determination ends and the displayed picture changes to a battle execution picture, processing moves on to step S<highlight><bold>27</bold></highlight> and it is determined whether or not the action of which selection has been confirmed is an attack action. When it is determined that the action selected is an attack action, processing moves on to step S<highlight><bold>28</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> When processing reaches step S<highlight><bold>28</bold></highlight>, a state for accepting the input of a candidate character intended to be the object of the attack action of the character indicated by the marker <highlight><bold>410</bold></highlight> is assumed, and a candidate character is selected in accordance with a number of times the &plus;-key <highlight><bold>51</bold></highlight> is pressed. Then, in step S<highlight><bold>29</bold></highlight>, it is determined whether or not the selected character is an enemy character. When it is determined that the selected character is an enemy character, processing moves on to step S<highlight><bold>30</bold></highlight>; the display color of the cursor <highlight><bold>420</bold></highlight> is set to A; the selected candidate character is indicated by the cursor <highlight><bold>420</bold></highlight>; and processing proceeds to step S<highlight><bold>32</bold></highlight>. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> When, on the other hand, in step S<highlight><bold>29</bold></highlight> it is determined that the selected character is not an enemy character, processing moves on to step S<highlight><bold>31</bold></highlight>; the display color of the cursor <highlight><bold>420</bold></highlight> is set to B; the selected candidate character is indicated by the cursor <highlight><bold>420</bold></highlight>; and processing proceeds to step S<highlight><bold>32</bold></highlight>. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> In step S<highlight><bold>32</bold></highlight> it is determined whether or not the O-button <highlight><bold>52</bold></highlight><highlight><italic>a </italic></highlight>has been pressed, and when it is determined that the O-button <highlight><bold>52</bold></highlight><highlight><italic>a </italic></highlight>has not been pressed processing proceeds to step S<highlight><bold>33</bold></highlight> and it is determined whether or not the x-button <highlight><bold>52</bold></highlight><highlight><italic>b </italic></highlight>has been pressed. When it is determined that the x-button <highlight><bold>52</bold></highlight><highlight><italic>b </italic></highlight>has not been pressed, processing returns to step S<highlight><bold>28</bold></highlight> and the processing of step S<highlight><bold>28</bold></highlight> through step S<highlight><bold>33</bold></highlight> is repeated so that a standby state wherein candidate character selection input is accepted is assumed until either the O-button <highlight><bold>52</bold></highlight><highlight><italic>a </italic></highlight>is pressed or the x-button <highlight><bold>52</bold></highlight><highlight><italic>b </italic></highlight>is pressed. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> That is, each time the &plus;-key <highlight><bold>51</bold></highlight> is pressed once the cursor <highlight><bold>420</bold></highlight> moves from one displayed character to the next to indicate a selected candidate character. When the candidate character is an enemy character the cursor <highlight><bold>420</bold></highlight> is displayed with the color A and when the candidate character is not an enemy character the cursor <highlight><bold>420</bold></highlight> is displayed with the color B. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> For example, it will be assumed that an attack action has been selected and this selection confirmed and a battle execution picture is displayed as shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>A, and that first the enemy character <highlight><bold>406</bold></highlight> is indicated by the cursor <highlight><bold>420</bold></highlight> in the display color A. Also, it will be assumed that each time the &plus;-key <highlight><bold>51</bold></highlight> is pressed once the cursor <highlight><bold>420</bold></highlight> moves from character to character in the order of <highlight><bold>406</bold></highlight>&rarr;<highlight><bold>405</bold></highlight> <highlight><bold>404</bold></highlight>&rarr;<highlight><bold>403</bold></highlight>&rarr;<highlight><bold>402</bold></highlight>&rarr;<highlight><bold>401</bold></highlight>&rarr;<highlight><bold>406</bold></highlight>. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> In this case, among the enemy characters <highlight><bold>404</bold></highlight> through <highlight><bold>406</bold></highlight>, the cursor <highlight><bold>420</bold></highlight> moves between and points to the characters while still displayed in the color A. And among the player characters <highlight><bold>401</bold></highlight> through <highlight><bold>403</bold></highlight>, the cursor <highlight><bold>420</bold></highlight> moves between and points to the characters while being displayed in the color B, as shown in <cross-reference target="DRAWINGS">FIG. 4B</cross-reference>. <cross-reference target="DRAWINGS">FIG. 4B</cross-reference> shows a state wherein the player (supporter) character <highlight><bold>403</bold></highlight> is selected as the object of an attack and the cursor <highlight><bold>420</bold></highlight> is shown in the vicinity of the character <highlight><bold>403</bold></highlight> in the display color B. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> When in step S<highlight><bold>32</bold></highlight> it is determined that the O-button <highlight><bold>52</bold></highlight><highlight><italic>a </italic></highlight>has been pressed, processing moves on to step S<highlight><bold>40</bold></highlight> and the selected attack action is executed and this sequence of battle control operation input-acceptance processing ends. When in step S<highlight><bold>32</bold></highlight> it is determined that the x-button <highlight><bold>52</bold></highlight><highlight><italic>b </italic></highlight>has been pressed, processing returns to step S<highlight><bold>21</bold></highlight> and the initial battle picture in which the cursor <highlight><bold>420</bold></highlight> does not appear is displayed. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> When in step S<highlight><bold>27</bold></highlight> it is determined that the selected action is not an attack action, processing moves on to step S<highlight><bold>34</bold></highlight> and it is determined whether or not the selected action is a defense action. When it is determined that the selected action is a defense action, processing moves on to step S<highlight><bold>35</bold></highlight>. When processing reaches step S<highlight><bold>35</bold></highlight>, a state for accepting the input of a candidate character intended to be the object of the defense action of the character indicated by the marker <highlight><bold>410</bold></highlight> is assumed, and a candidate character is selected in accordance with a number of times the &plus;-key <highlight><bold>51</bold></highlight> is pressed. Then, in step S<highlight><bold>36</bold></highlight>, it is determined whether or not the selected candidate character is an enemy character. When it is determined that the selected character is an enemy character, processing moves on to step S<highlight><bold>31</bold></highlight>; the display color of the cursor <highlight><bold>420</bold></highlight> is set to B; the selected candidate character is indicated by the cursor <highlight><bold>420</bold></highlight>; and processing proceeds to step S<highlight><bold>38</bold></highlight>. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> When, on the other hand, in step S<highlight><bold>36</bold></highlight> it is determined that the selected character is not an enemy character, processing moves on to step S<highlight><bold>37</bold></highlight>; the display color of the cursor <highlight><bold>420</bold></highlight> is set to A; the selected candidate character is indicated by the cursor <highlight><bold>420</bold></highlight>; and processing proceeds to step S<highlight><bold>38</bold></highlight>. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> In step S<highlight><bold>38</bold></highlight>, it is determined whether or not the O-button <highlight><bold>52</bold></highlight><highlight><italic>a </italic></highlight>has been pressed. When it is determined that the O-button <highlight><bold>52</bold></highlight><highlight><italic>a </italic></highlight>has not been pressed processing proceeds to step S<highlight><bold>39</bold></highlight> and it is determined whether or not the x-button <highlight><bold>52</bold></highlight><highlight><italic>b </italic></highlight>has been pressed. When it is determined that the x-button <highlight><bold>52</bold></highlight><highlight><italic>b </italic></highlight>has not been pressed, processing returns to step S<highlight><bold>35</bold></highlight> and the processing of step S<highlight><bold>35</bold></highlight> through step S<highlight><bold>39</bold></highlight> is repeated so that a standby state wherein candidate character selection input is accepted is assumed until either the O-button <highlight><bold>52</bold></highlight><highlight><italic>a </italic></highlight>is pressed or the x-button <highlight><bold>52</bold></highlight><highlight><italic>b </italic></highlight>is pressed. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> Each time the &plus;-key <highlight><bold>51</bold></highlight> is pressed once, the cursor <highlight><bold>420</bold></highlight> moves in a predetermined order between the displayed characters and points to a selected candidate character. When the candidate character is an enemy character, reversely from when the action is an attack action, the cursor <highlight><bold>420</bold></highlight> is displayed in the color B, and when the candidate character is not an enemy character the cursor <highlight><bold>420</bold></highlight> is displayed in the color A. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> When in step S<highlight><bold>38</bold></highlight> it is determined that the O-button <highlight><bold>52</bold></highlight><highlight><italic>a </italic></highlight>has been pressed, processing moves on to step S<highlight><bold>40</bold></highlight> and the selected attack action is executed and this sequence of battle control operation input-acceptance processing ends. When in step S<highlight><bold>32</bold></highlight> it is determined that the x-button <highlight><bold>52</bold></highlight><highlight><italic>b </italic></highlight>has been pressed, processing returns to step S<highlight><bold>21</bold></highlight> and an initial battle picture in which the cursor <highlight><bold>420</bold></highlight> does not appear is displayed. When in step S<highlight><bold>34</bold></highlight> the selected action is not a defense action, processing moves on directly to step S<highlight><bold>40</bold></highlight> and an action which is neither an attack action nor a defense action is executed and this sequence of battle control operation input-acceptance processing ends. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> Thus the preferred embodiment described above provides the following effects. A first effect is that because the vicinity of a candidate character is displayed differently depending on the type of the action of the player character and the type of the candidate character intended to be the object of the action of the player character, the player can easily make out the candidate character and the enjoyability of the game can be maintained. A second effect is that because the function for distinguishing the candidate character is added to a cursor necessary for character selection, and attack action control operations and defense action control operations can be carried out exactly with the help of the display form of the cursor, the enjoyability of the game can be maintained. A third effect is that because the vicinity of a predetermined character to perform an action can be displayed differently from the vicinity of a candidate character intended to be the object of the action, the relationships between multiple characters in the picture can be understood more exactly and the enjoyability of the game can be maintained. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> Next, other preferred embodiments are described. In the preferred embodiment described above, in the battle control input-acceptance processing, a case wherein control commands relating to battle control operations are accepted using the L1-button <highlight><bold>53</bold></highlight>, the &plus;-key <highlight><bold>51</bold></highlight>, the O-button <highlight><bold>52</bold></highlight><highlight><italic>a </italic></highlight>and the x-button <highlight><bold>52</bold></highlight><highlight><italic>b </italic></highlight>was described; however, other buttons may alternatively be used. And whereas a case was described in which only the timing at which a switch is turned on after its respective button is pressed is monitored in the input-accepting of operation commands, alternatively operation commands may be accepted using the timing at which the switch linked to the respective button is turned off, or both the on and the off timing of the switch linked to a respective button can be monitored and both combined to input-accept operation commands. Also, the time for which a switch linked to a respective button is on or off can be combined to input-accept operation commands. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> In the preferred embodiment described above a case was described wherein display is effected so that it is possible to distinguish between a case wherein a candidate character is an enemy character and a case wherein the candidate character is not an enemy character by making the display color of a cursor different. Alternatively the vicinity of the candidate character other than the cursor may alternatively be made different. Instead of the distinction made with the color of the cursor, alternatively, its shape can be made different or it may be made to flash or to undergo some other periodic change. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> In the preferred embodiment described above, a case was also explained wherein display colors A and B were used for a cursor and the relationship of the display color of the cursor was made opposite in the case of an action being an attack action from the case of it being a defense action. Alternatively, the relationship of the display color of the cursor may be made the same in the case of an attack action as it is in the case of a defense action. Simply one display color may be used when the candidate character is an enemy character and the other display color used when the candidate character is not an enemy character, irrespective of the action. Or, display colors A, B, C and D may be provided and display colors mutually different in each case may be used. That is, it is only necessary that the display form be made different depending on whether the candidate character is or is not an enemy character so that the difference can be distinguished, and there is no limitation on the display colors used. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> The present invention is not limited to the preferred embodiments described above, and it will be clear that various changes and modifications are possible within the spirit and scope of the invention. For example, the order of the steps of a method according to the invention can be changed within the spirit and scope of the invention. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> As described above, with the present invention it is possible to understand easily which character is to be the object of an action of a player character, and it is possible to make a player character execute an intended action exactly. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A computer-readable recording medium on which is recorded a video game program capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player, which program comprises: 
<claim-text>accepting an input to a computer of a candidate character intended to be an object of an action to be performed by a predetermined character in accordance with a control operation of a player; </claim-text>
<claim-text>determining whether the input accepted for the candidate character is for an enemy character; and </claim-text>
<claim-text>displaying, in accordance with a determination result, a vicinity of the candidate character differently depending on whether or not the candidate character is an enemy character. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A computer-readable recording medium on which is recorded a video game program capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player, which program comprises: 
<claim-text>accepting input to a computer of an action to be performed by a predetermined character in accordance with a control operation of a player; </claim-text>
<claim-text>accepting the input to the computer of a candidate character intended to be the object of the action to be performed by the predetermined character in accordance with a control operation of a player; and </claim-text>
<claim-text>displaying, in accordance with the type of the action accepted as input and the type of the candidate character accepted as input, the vicinity of the candidate character differently depending on whether or not the candidate character is an enemy character. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The computer-readable recording medium according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein when the action accepted as input is an attack action and the candidate character is an enemy character, a cursor pointing at the candidate character is displayed in a first display form, and when the action accepted as input is an attack action and the candidate character is not an enemy character, the cursor pointing at the candidate character is displayed in a second display form. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The computer-readable recording medium according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein when the action accepted as input is a defense action and the candidate character is not an enemy character, a cursor pointing at the candidate character is displayed in a first display form, and when the action accepted as input is a defense action and the candidate character is an enemy character, the cursor pointing at the candidate character is displayed in a second display form. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The computer-readable recording medium according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, on which is recorded a program for displaying a predetermined character vicinity differently from a candidate character vicinity. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A video game program capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player, which program comprises: 
<claim-text>accepting an input to a computer of a candidate character intended to be any object of an action to be performed by a predetermined character in accordance with a control operation of a player; </claim-text>
<claim-text>a determining that determines whether or not the input accepted for the candidate character in the input-accepting step is for an enemy character; and </claim-text>
<claim-text>a displaying that, in accordance with a determination result obtained in the determining, displays a vicinity of the candidate character differently depending on whether or not the candidate character is an enemy character. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A video game program capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player, which program comprises: 
<claim-text>accepting a first input to a computer of an action to be performed by a predetermined character in accordance with a control operation of a player; </claim-text>
<claim-text>accepting a second input to the computer of a candidate character intended to be an object of the action to be performed by the predetermined character in accordance with a control operation of a player; and </claim-text>
<claim-text>a displaying that, in accordance with the type of the action accepted as the first input and the type of the candidate character accepted as input in the second input, displays the vicinity of the candidate character differently depending on whether or not the candidate character is an enemy character. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The program according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein when the action accepted as the first input is an attack action and the candidate character is an enemy character a cursor pointing at the candidate character is displayed in a first display form in the displaying and when the action accepted as input in the first input is an attack action and the candidate character is not an enemy character, the cursor pointing at the candidate character is displayed in a second display form in the displaying. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The program according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein when the action accepted as input in the first input is a defense action and the candidate character is not an enemy character a cursor pointing at the candidate character is displayed in a first display form in the displaying and when the action accepted as the first input is a defense action and the candidate character is an enemy character, the cursor pointing at the candidate character is displayed in a second display form in the displaying. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The program according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, further displaying a predetermined character vicinity differently from a candidate character vicinity. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A video game processing method of a video game capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player, the method comprising: 
<claim-text>accepting an input to a computer of a candidate character intended to be an object of an action to be performed by a predetermined character in accordance with a control operation of a player; </claim-text>
<claim-text>determining whether the input accepted for the candidate character in the accepting is for an enemy character; and </claim-text>
<claim-text>displaying, in accordance with a determination result obtained in the determining, a vicinity of the candidate character differently depending on whether or not the candidate character is an enemy character. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A video game processing method of a video game capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player, the method comprising: 
<claim-text>accepting a first input to a computer of an action to be performed by a predetermined character in accordance with a control operation of a player; </claim-text>
<claim-text>accepting a second input to the computer of a candidate character intended to be an object of the action to be performed by the predetermined character in accordance with a control operation of a player; and </claim-text>
<claim-text>displaying, in accordance with the type of the action accepted as the first input and the type of the candidate character accepted as the second input, a vicinity of the candidate character differently depending on whether or not the candidate character is an enemy character. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The video game processing method according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein when the action accepted in the first input is an attack action and the candidate character is an enemy character, a cursor pointing at the candidate character is displayed in a first display form in the displaying and when the action accepted as the first input is an attack action and the candidate character is not an enemy character, the cursor pointing at the candidate character is displayed in a second display form in the displaying. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The video game processing method according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein when the action accepted as the first input is a defense action and the candidate character is not an enemy character, a cursor pointing at the candidate character is displayed in a first display form in the displaying, and when the action accepted as the first input is a defense action and the candidate character is an enemy character, the cursor pointing at the candidate character is displayed in a second display form in the displaying. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The video game processing method according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, further comprising a displaying of the predetermined character vicinity differently from the candidate character vicinity. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A video game apparatus, comprising: 
<claim-text>a storing system that stores a video game program capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player; </claim-text>
<claim-text>a computer for reading from the storing system and executing the program; and </claim-text>
<claim-text>a display apparatus for picture display, provided as output system of the computer, </claim-text>
<claim-text>wherein the computer, by executing the program, accepts the input of a candidate character intended to be an object of an action to be performed by a predetermined character in accordance with a control operation of a player; determines whether or not the input accepted for the candidate character is an enemy character; and displays the vicinity of the candidate character differently depending on whether or not the candidate character is an enemy character. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A video game apparatus, comprising: 
<claim-text>a storing system that stores a video game program capable of displaying multiple characters including a player character and an enemy character on a screen and controlling actions of the displayed characters in accordance with control operations of a player; </claim-text>
<claim-text>a computer for reading from the storing system and executing the program; and </claim-text>
<claim-text>a display apparatus for picture display, provided as an output system of the computer, </claim-text>
<claim-text>wherein the computer, by executing the program, accepts the input of an action to be performed by a player character in accordance with a control operation of a player; accepts the input of a candidate character intended to be an object of the action to be performed by the predetermined character; and in accordance with the type of the action accepted as input and the type of the candidate character accepted as input, displays the vicinity of the candidate character differently depending on whether or not the candidate character is an enemy character. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The video game apparatus according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein when the action accepted as input is an attack action and the candidate character is an enemy character, a cursor pointing at the candidate character is displayed in a first display form, and when the action accepted as input is an attack action and the candidate character is not an enemy character, the cursor pointing at the candidate character is displayed in a second display form. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The video game apparatus according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein when the action accepted as input is a defense action and the candidate character is not an enemy character, a cursor pointing at the candidate character is displayed in a first display form and when the action input-accepted is a defense action and the candidate character is an enemy character the cursor pointing at the candidate character is displayed in a second display form. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The video game apparatus according <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the computer displays a predetermined character vicinity differently from a candidate character vicinity.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>3</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030003978A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030003978A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030003978A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030003978A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030003978A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
