<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002189A1-20030102-D00000.TIF SYSTEM "US20030002189A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00001.TIF SYSTEM "US20030002189A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00002.TIF SYSTEM "US20030002189A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00003.TIF SYSTEM "US20030002189A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00004.TIF SYSTEM "US20030002189A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00005.TIF SYSTEM "US20030002189A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00006.TIF SYSTEM "US20030002189A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00007.TIF SYSTEM "US20030002189A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00008.TIF SYSTEM "US20030002189A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00009.TIF SYSTEM "US20030002189A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00010.TIF SYSTEM "US20030002189A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00011.TIF SYSTEM "US20030002189A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00012.TIF SYSTEM "US20030002189A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00013.TIF SYSTEM "US20030002189A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00014.TIF SYSTEM "US20030002189A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00015.TIF SYSTEM "US20030002189A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030002189A1-20030102-D00016.TIF SYSTEM "US20030002189A1-20030102-D00016.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002189</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09993869</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20011105</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G11B005/09</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>G11B005/596</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>360</class>
<subclass>051000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>360</class>
<subclass>078040</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Circuit and method for detecting a spin-up wedge and a corresponding servo wedge on spin up of a data-storage disk</title-of-invention>
</technical-information>
<continuity-data>
<non-provisional-of-provisional>
<document-id>
<doc-number>60301469</doc-number>
<document-date>20010628</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Hakan</given-name>
<family-name>Ozdemir</family-name>
</name>
<residence>
<residence-us>
<city>San Jose</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>STMicroelectronics, Inc</organization-name>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>STMICROELECTRONICS, INC.</name-1>
<name-2></name-2>
<address>
<address-1>MAIL STATION 2346</address-1>
<address-2>1310 ELECTRONICS DRIVE</address-2>
<city>CARROLLTON</city>
<state>TX</state>
<postalcode>75006</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A servo circuit includes a servo channel and a processor. The servo channel recovers servo data from servo wedges that identify respective data sectors on a data-storage disk. On spin up of the disk, the processor detects a spin-up wedge associated with one of the servo wedges and then detects the servo wedge. Once the servo wedge is detected, a head-position circuit can read the location data from the servo wedge to determine an initial position of the read-write head. By detecting a both a spin-up wedge and a servo wedge to determine an initial head position on disk spin up, such a servo circuit often allows one to increase the disk&apos;s storage capacity by reducing the lengths of the spin-up wedges. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS-REFERENCE TO RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is related to commonly owned U.S. patent application Ser. Nos. ______ (Atty. Docket No. 99-S-190 (1678-22-1)) entitled &ldquo;DATA-STORAGE DISK HAVING FEW OR NO SPIN-UP WEDGES AND METHOD FOR WRITING SERVO WEDGES ONTO THE DISK,&rdquo; ______ (Atty. Docket No. 01-S-044 (1678-22-2)) entitled &ldquo;CIRCUIT AND METHOD FOR DETECTING A SERVO WEDGE ON SPIN UP OF A DATA-STORAGE DISK&rdquo;, ______ (Atty. Docket No. 01-S-023 (1678-39)) entitled &ldquo;A DATA CODE AND METHOD FOR CODING DATA&rdquo;, ______ (Atty. Docket No. 01-S-045 (1678-47)) entitled &ldquo;CIRCUIT AND METHOD FOR DEMODULATING A SERVO POSITION BURST&rdquo;, ______ (Atty. Docket No. 01-S-046 (1678-48)) entitled &ldquo;CIRCUIT AND METHOD FOR DETECTING THE PHASE OF A SERVO SIGNAL&rdquo;, ______ (Atty. Docket No. 01-S-054 (1678-49)) entitled &ldquo;SERVO CIRCUIT HAVING A SYNCHRONOUS SERVO CHANNEL AND METHOD FOR SYNCHRONOUSLY RECOVERING SERVO DATA&rdquo;, which were filed on the same day as the present application and which are incorporated by reference.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
</section>
<section>
<heading lvl="1">Field of the Invention </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The invention is related generally to electronic circuits, and more particularly to a servo circuit and method for detecting a spin-up wedge and a corresponding servo wedge on spin up of a data-storage disk. Such a servo circuit allows a head-position circuit to determine an initial position of a read-write head over a disk having shorter spin-up wedges than prior disks. Using shorter spin-up wedges often allows one to increase the disk area that is available for storing data, and to thus increase the disk&apos;s storage capacity. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> As computer-software applications become larger and more data intensive, disk-drive manufacturers are continuing their efforts to develop technologies and techniques for increasing the data-storage capacities of data-storage disks. Although manufacturers have significantly increased the data-storage density (bits/inch) of disks over the years, further increasing the data-storage density is often difficult because of the accompanying increases in noise and intersymbol interference (ISI). In addition, because disks are typically constrained to industry-standard sizes, manufacturers often do not have the option of increasing a disk&apos;s storage capacity by increasing its size. Moreover, because most non-application data (e.g., servo wedges, spin-up wedges, file-allocation tables (FAT)) is necessary for proper operation of a disk drive, the manufacturers often cannot remove this data from a disk to make more room for storing application data. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a plan view of a conventional magnetic data-storage disk <highlight><bold>10</bold></highlight>. The disk <highlight><bold>10</bold></highlight> is partitioned into a number&mdash;here eight&mdash;of disk sectors <highlight><bold>12</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>12</bold></highlight><highlight><italic>h, </italic></highlight>and includes a number&mdash;typically in the tens or hundreds of thousands&mdash;of concentric data tracks <highlight><bold>14</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>14</bold></highlight><highlight><italic>n. </italic></highlight>Readable-writable application data is stored in respective data sectors (not shown) within each track <highlight><bold>14</bold></highlight>. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, data servo wedges <highlight><bold>16</bold></highlight>&mdash;only servo wedges <highlight><bold>16</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>16</bold></highlight><highlight><italic>c </italic></highlight>are shown for clarity&mdash;include servo data that allows a head-position circuit (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) to accurately position a read-write head (<cross-reference target="DRAWINGS">FIGS. 5 and 20</cross-reference>) during a data read or write operation. The servo wedges <highlight><bold>16</bold></highlight> are located within each track <highlight><bold>14</bold></highlight> at the beginning&mdash;the disk <highlight><bold>10</bold></highlight> spins counterclockwise in this example&mdash;of data fields that may contain one or more data sectors <highlight><bold>12</bold></highlight>. Each servo wedge <highlight><bold>16</bold></highlight> includes respective servo data that indentifies the location (track <highlight><bold>14</bold></highlight> and sector <highlight><bold>12</bold></highlight>) of the servo wedge. Thus, the head-position circuit uses this servo data to position the head over the track <highlight><bold>14</bold></highlight> to be read from or written to. The manufacturer of a disk drive (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) that incorporates the disk <highlight><bold>10</bold></highlight> typically writes the servo wedges <highlight><bold>16</bold></highlight> onto the disk before shipping the disk drive to a customer; neither the disk drive nor the customer alters the servo wedges <highlight><bold>16</bold></highlight> thereafter. Servo wedges like the servo wedges <highlight><bold>16</bold></highlight> are further discussed below in conjunction with <cross-reference target="DRAWINGS">FIG. 6</cross-reference> and in commonly owned U.S. patent application Ser. No. 09/783,801, filed Feb. 14, 2001, entitled &ldquo;VITERBI DETECTOR AND METHOD FOR RECOVERING A BINARY SEQUENCE FROM A READ SIGNAL,&rdquo; which is incorporated by reference. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, spin-up servo wedges <highlight><bold>18</bold></highlight>&mdash;only spin-up wedges <highlight><bold>18</bold></highlight><highlight><italic>a </italic></highlight>-<highlight><bold>18</bold></highlight><highlight><italic>c </italic></highlight>are shown for clarity&mdash;include spin-up data that allows the head-position circuit (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) to accurately determine an initial position of the read-write head (<cross-reference target="DRAWINGS">FIGS. 5 and 20</cross-reference>) on spin up of the disk <highlight><bold>10</bold></highlight>. Typically, the spin-up wedges <highlight><bold>18</bold></highlight> are respectively located within each track <highlight><bold>14</bold></highlight> a known distance from a portion (e.g., beginning, preamble, sector or track identifier) of a servo wedge <highlight><bold>16</bold></highlight> within the same track. For example, the spin-up wedges <highlight><bold>18</bold></highlight> may be located at the end of the sector <highlight><bold>12</bold></highlight><highlight><italic>h </italic></highlight>as illustrated, or may be located within a respective servo wedge <highlight><bold>16</bold></highlight>. While or after the disk <highlight><bold>10</bold></highlight> spins up to normal speed following a disk-inactive mode such as a power-down or sleep mode, the head-position circuit moves the head from a parked position to an arbritary position over the disk <highlight><bold>10</bold></highlight>. But the head-position circuit does not &ldquo;know&rdquo; the position of the head with respect to the tracks <highlight><bold>14</bold></highlight> and sectors <highlight><bold>12</bold></highlight>. Therefore, a servo circuit (not shown in FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>3</bold></highlight>) attempts to detect one of the spin-up wedges <highlight><bold>18</bold></highlight>. Because the spin-up wedges <highlight><bold>18</bold></highlight> are each a known distance from a portion of a respective servo wedge <highlight><bold>16</bold></highlight>, the head-position circuit &ldquo;knows&rdquo; the relative circumferential position of the head over the disk <highlight><bold>10</bold></highlight> once the servo circuit detects a spin-up wedge <highlight><bold>18</bold></highlight>. To determine the actual position of the head (i.e., the sector <highlight><bold>12</bold></highlight> and track <highlight><bold>14</bold></highlight> that the head is over), the servo circuit can read sector and track identifiers from the respective servo wedge <highlight><bold>16</bold></highlight>. Once the head-position circuit determines the initial position of the head, the spin-up wedges <highlight><bold>18</bold></highlight> serve no further purpose, and thus are unused, until the next spin up of the disk <highlight><bold>10</bold></highlight>. Additional details of the spin-up wedges <highlight><bold>18</bold></highlight> are known, and are thus omitted for clarity. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Furthermore, the spin-up wedges are relatively long to reduce the chance that the servo circuit (not shown in FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>3</bold></highlight>) will mistake a sequence of application data as a spin-up wedge. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Unfortunately, because the spin-up wedges <highlight><bold>18</bold></highlight> are relatively long, they occupy a significant area of the disk that could otherwise store application data. But shortening the spin-up wedges <highlight><bold>18</bold></highlight> may decrease the accuracy with which the servo circuit detects a spin-up wedge <highlight><bold>18</bold></highlight> on spin up of the disk <highlight><bold>10</bold></highlight>. This decrease in accuracy may delay the head-position circuit&apos;s determination of the read-write head&apos;s initial position. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> In accordance with an embodiment of the invention, a servo circuit includes a servo channel and a processor. The servo channel recovers servo data from servo wedges that identify respective data sectors on a data-storage disk. The processor detects a spin-up wedge associated with one of the servo wedges and then detects the servo wedge while the disk is attaining or after the disk attains an operating speed. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> By detecting a both a spin-up wedge and a servo wedge to determine an initial head position on disk spin up, such a servo circuit often allows one to increase the disk&apos;s storage capacity by reducing the lengths of the spin-up wedges.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a plan view of a conventional magnetic data-storage disk having disk sectors and data tracks. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a close-up view of the servo wedges of the <cross-reference target="DRAWINGS">FIG. 1</cross-reference> disk. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a close-up view of the servo wedges and the spin-up wedges of the <cross-reference target="DRAWINGS">FIG. 1</cross-reference> disk. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a plan view of a magnetic data-storage disk having no spin-up wedges according to an embodiment of the invention. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram of a servo circuit for detecting a servo wedge, or both a spin-up wedge and a servo wedge, on disk spin up and for recovering servo data from servo wedges according to an embodiment of the invention. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a diagram of a servo wedge of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> according to an embodiment of the invention. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a servo signal that the read-write head generates while reading the servo preamble of <cross-reference target="DRAWINGS">FIG. 6</cross-reference> on disk spin up according to an embodiment of the invention. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a timing diagram of signals that are relevant to the operation of the servo circuit of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> during disk spin up according to an embodiment of the invention where the servo circuit need not detect a spin-up wedge. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a timing diagram of the signals of <cross-reference target="DRAWINGS">FIG. 8</cross-reference> after disk spin up according to an embodiment of the invention. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a block diagram of the sample-interpolator loop of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> according to an embodiment of the invention. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a phase diagram used to explain how the initial-phase-difference-calculation circuit of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> calculates an initial phase angle between the sample clock and the peak of the preamble sinusoid according to an embodiment of the invention. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a phase diagram used to explain how the initial-gain determinator of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> calculates an initial amplitude of the preamble sinusoid according to an embodiment of the invention. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a trellis diagram for the Viterbi detector of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> according to an embodiment of the invention. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is the respective bit patterns of the preamble and servo synchronization mark of <cross-reference target="DRAWINGS">FIG. 6</cross-reference> according to an embodiment of the invention. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a plan view of a magnetic data-storage disk having spin-up wedges according to an embodiment of the invention. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a diagram of a servo wedge that includes a spin-up wedge according to an embodiment of the invention. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a servo signal that the read-write head generates while reading the servo wedge and preamble of <cross-reference target="DRAWINGS">FIG. 16</cross-reference> on disk spin up according to an embodiment of the invention. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a timing diagram of signals that are relevant to the operation of the servo circuit of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> during disk spin up according to an embodiment of the invention where the servo circuit detects a spin-up wedge. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a top-level block diagram of the servo circuit of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> according to an embodiment of the invention. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a block diagram of a disk-drive system that incorporates the servo circuit of <cross-reference target="DRAWINGS">FIG. 19</cross-reference> according to an embodiment of the invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a plan view of a magnetic data-storage disk <highlight><bold>20</bold></highlight>, which has no spin-up wedges and which stores servo data within the servo wedges <highlight><bold>22</bold></highlight> at a higher density than does the conventional disk <highlight><bold>10</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 1</cross-reference>) according to an embodiment of the invention. Omitting the spin-up wedges and increasing the density of the servo data increase the disk area available to store application data, and thus increase the data-storage capacity of the disk <highlight><bold>20</bold></highlight>. Like the disk <highlight><bold>10</bold></highlight>, the disk <highlight><bold>20</bold></highlight> is partitioned into a number&mdash;here eight&mdash;of disk sectors <highlight><bold>12</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>12</bold></highlight><highlight><italic>h, </italic></highlight>and includes a number of concentric data tracks <highlight><bold>14</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>14</bold></highlight><highlight><italic>n. </italic></highlight>The disk <highlight><bold>20</bold></highlight> also has servo wedges <highlight><bold>22</bold></highlight>&mdash;for clarity, only servo wedges <highlight><bold>22</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>22</bold></highlight><highlight><italic>c </italic></highlight>are shown&mdash;which may be similar to the servo wedges <highlight><bold>16</bold></highlight> of the disk <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a partial block diagram of a servo circuit <highlight><bold>30</bold></highlight>, which can detect a servo wedge <highlight><bold>22</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 4</cross-reference>) on spin up of the disk <highlight><bold>20</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 4</cross-reference>) without first detecting a spin-up wedge (<cross-reference target="DRAWINGS">FIG. 3</cross-reference>) according to an embodiment of the invention. Thus, the circuit <highlight><bold>30</bold></highlight> can be used with a disk, such as the disk <highlight><bold>20</bold></highlight>, that omits spin-up wedges to increase its data-storage capacity. But as discussed below in conjunction with FIGS. <highlight><bold>15</bold></highlight>-<highlight><bold>18</bold></highlight>, the circuit <highlight><bold>30</bold></highlight> can also be used with a disk that includes spin-up wedges. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> Furthermore, the servo circuit <highlight><bold>30</bold></highlight> is synchronous, and thus can accurately recover high-density servo data such as the servo data stored on the disk <highlight><bold>20</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 4</cross-reference>). But the circuit <highlight><bold>30</bold></highlight> can also recover low-density servo data such as the servo data stored on the conventional disk <highlight><bold>10</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 1</cross-reference>). </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> Still referring to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the servo circuit <highlight><bold>30</bold></highlight> includes a read-write head <highlight><bold>32</bold></highlight> for generating a servo signal that represents a servo wedge <highlight><bold>22</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 4</cross-reference>) being read. The circuit <highlight><bold>30</bold></highlight> also includes a servo channel <highlight><bold>34</bold></highlight> for processing the servo signal, a circuit <highlight><bold>36</bold></highlight> for calculating an initial phase difference between servo samples and the servo signal, a circuit <highlight><bold>38</bold></highlight> for controlling the overall gain of the servo channel <highlight><bold>34</bold></highlight>, and a processor <highlight><bold>40</bold></highlight> for controlling the servo channel <highlight><bold>34</bold></highlight>, the phase-calculation circuit <highlight><bold>36</bold></highlight>, and the gain-control circuit <highlight><bold>38</bold></highlight>. Alternatively, the processor <highlight><bold>40</bold></highlight> may be replaced with a state machine or other control circuit (not shown). </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The processor <highlight><bold>40</bold></highlight> causes the servo channel <highlight><bold>34</bold></highlight> to detect a servo wedge <highlight><bold>22</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 1</cross-reference>) on spin up of the disk <highlight><bold>20</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 4</cross-reference>), and to recover servo data from the servo wedge <highlight><bold>22</bold></highlight> on disk spin up and during a disk read or write operation. The channel <highlight><bold>34</bold></highlight> may also function as a read channel to recover application data from a disk data sector (not shown) during a disk read operation. Alternatively, a separate read channel (not shown) may recover the application data during a disk read operation. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> The servo channel <highlight><bold>34</bold></highlight> includes a preamplifier <highlight><bold>42</bold></highlight>, a continous lowpass filter (LPF) <highlight><bold>44</bold></highlight>, a gain circuit <highlight><bold>46</bold></highlight>, an analog filter <highlight><bold>48</bold></highlight>, an analog-to-digital converter (ADC) <highlight><bold>50</bold></highlight>, a finite-impulse-response (FIR) filter <highlight><bold>52</bold></highlight>, a sample-interpolator loop <highlight><bold>54</bold></highlight>, and a Viterbi detector <highlight><bold>56</bold></highlight>. The preamplifier <highlight><bold>42</bold></highlight> amplifies the servo signal generated by the read-write head <highlight><bold>32</bold></highlight> as it reads the disk <highlight><bold>20</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 4</cross-reference>), and the LPF <highlight><bold>44</bold></highlight> equalizes the servo signal. The gain circuit <highlight><bold>46</bold></highlight> amplifies the equalized servo signal so as to set the amplitude of the equalized servo signal to a desired level, and the ADC <highlight><bold>50</bold></highlight> samples and digitizes the amplified servo signal in response to a sample clock. The FIR filter <highlight><bold>52</bold></highlight> is used to provide addtitional boost to better equalize consecutive digitized samples&mdash;here two consecutive samples at a time&mdash;to the target power spectrum of the channel <highlight><bold>34</bold></highlight>. The sample-interpolator loop <highlight><bold>54</bold></highlight> effectively synchronizes the sample clock to the servo signal by interpolating the values of the FIR samples to the values they would have had if the sample clock were synchronized to the servo signal. The Viterbi detector <highlight><bold>56</bold></highlight>, which is designed for the target polynomial, recovers the servo-data bit sequence from the servo signal by processing the interpolated samples&mdash;here two samples at a time. As discussed below in conjunction with <cross-reference target="DRAWINGS">FIG. 6, a</cross-reference> portion of the recovered bit sequence identifies the track <highlight><bold>14</bold></highlight> and sector <highlight><bold>12</bold></highlight> that hold the servo wedge <highlight><bold>22</bold></highlight> from which the bit sequence is recovered. Therefore, the Viterbi detector provides this portion of the recovered bit sequence to the head-position circuit (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>). In one embodiment, the FIR filter <highlight><bold>52</bold></highlight> equalizes the servo-signal samples to a PR4 power spectrum, and the Viterbi detector <highlight><bold>56</bold></highlight> is constructed according to a PR4 polynomial. The benefits of a servo channel designed for a PR4 polynominal are discussed in commonly owned U.S. patent application Ser. No. 09/783,801, filed Feb. 14, 2001, entitled &ldquo;VITERBI DETECTOR AND METHOD FOR RECOVERING A BINARY SEQUENCE FROM A READ SIGNAL,&rdquo; which is heretofore incorporated by reference. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> The phase-calculation circuit <highlight><bold>36</bold></highlight> determines an initial phase difference between the sample clock and the servo signal. The sample-interpolator loop <highlight><bold>54</bold></highlight> uses this initial phase difference to capture, i.e., acquire, the phase of the sample clock with respect to the servo signal. Although the loop <highlight><bold>54</bold></highlight> can acquire the phase of the sample clock without this initial phase difference, it would take a significantly longer time, and thus a significantly longer servo wedge <highlight><bold>22</bold></highlight>, to do so. Therefore, the circuit <highlight><bold>36</bold></highlight> often allows the disk <highlight><bold>20</bold></highlight> to have a higher data-storage capacity by allowing the servo wedges <highlight><bold>22</bold></highlight> to be shorter. The circuit <highlight><bold>36</bold></highlight> is further discussed in conjunction with <cross-reference target="DRAWINGS">FIG. 11</cross-reference> below, in commonly owned U.S. patent application Ser. No. 09/503,453, filed Feb. 14, 2000, entitled &ldquo;CIRCUIT AND METHOD FOR DETERMINING THE PHASE DIFFERENCE BETWEEN A SAMPLE CLOCK AND A SAMPLED SIGNAL&rdquo;, and in commonly owned U.S. patent application Ser. No. 09/503,929, filed Feb. 14, 2000, entitled &ldquo;CIRCUIT AND METHOD FOR DETERMINING THE PHASE DIFFERENCE BETWEEN A SAMPLE CLOCK AND A SAMPLED SIGNAL BY LINEAR APPROXIMATION&rdquo;, which are incorporated by reference. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The gain circuit <highlight><bold>38</bold></highlight> includes an initial-gain determinator <highlight><bold>58</bold></highlight>, a tracking-gain determinator <highlight><bold>60</bold></highlight>, and a digital-to-analog converter (DAC) <highlight><bold>62</bold></highlight>. The initial-gain determinator <highlight><bold>58</bold></highlight> determines an initial amplitude of the servo signal from the interpolated servo-signal samples. The DAC <highlight><bold>62</bold></highlight> uses this initial amplitude to generate a gain-control signal that causes the gain circuit <highlight><bold>46</bold></highlight> to set the overall gain of the servo channel <highlight><bold>34</bold></highlight> to a desired level. Although the circuits <highlight><bold>38</bold></highlight> and <highlight><bold>46</bold></highlight> can set the gain without the benefit of this initial amplitude, it would take a significantly longer time, and thus a significantly longer servo wedge <highlight><bold>22</bold></highlight>, to do so. Therefore, like the phase-calculation circuit <highlight><bold>36</bold></highlight>, the initial-gain determinator <highlight><bold>58</bold></highlight> often allows the disk <highlight><bold>20</bold></highlight> to have a higher data-storage capacity by allowing the servo wedges <highlight><bold>22</bold></highlight> to be shorter. After the circuit <highlight><bold>58</bold></highlight> determines the initial amplitude, the tracking-gain determinator <highlight><bold>60</bold></highlight> acquires and locks onto, i.e., tracks, the amplitude of the servo signal for the remainder of the servo wedge <highlight><bold>22</bold></highlight>. As with the circuit <highlight><bold>58</bold></highlight>, the DAC <highlight><bold>62</bold></highlight> converts the amplitude from the circuit <highlight><bold>60</bold></highlight> into a gain-control signal for the gain circuit <highlight><bold>46</bold></highlight>. In one embodiment, the DAC <highlight><bold>62</bold></highlight> generates a logarithmically scaled gain-control signal. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Still referring to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the initial-gain determinator <highlight><bold>58</bold></highlight> is further discussed in conjunction with <cross-reference target="DRAWINGS">FIG. 12</cross-reference> below and in commonly owned U.S. patent application Ser. Nos. 09/503,949, filed Feb. 14, 2000, entitled &ldquo;A CIRCUIT AND METHOD FOR CONTROLLING THE GAIN OF AN AMPLIFIER BASED ON THE SUM OF SAMPLES OF THE AMPLIFIED SIGNAL&rdquo;, and 09/503,399, filed Feb. 14, 2000, entitled &ldquo;A CIRCUIT AND METHOD FOR CONTROLLING THE GAIN OF AN AMPLIFIER&rdquo;, which are incorporated by reference. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a diagram of the servo wedge <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the other servo wedges <highlight><bold>22</bold></highlight> being similar. Write splices <highlight><bold>70</bold></highlight><highlight><italic>a </italic></highlight>and <highlight><bold>70</bold></highlight><highlight><italic>b </italic></highlight>respectively separate the servo wedge <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>from adjacent data sectors (not shown). A servo address mark (SAM) <highlight><bold>72</bold></highlight> indicates to the head-position circuit (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) that the read-write head <highlight><bold>32</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) is at the beginning of the servo wedge <highlight><bold>22</bold></highlight><highlight><italic>a. </italic></highlight>A servo preamble <highlight><bold>74</bold></highlight> allows the sample-interpolator loop <highlight><bold>54</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) to synchronize the sample clock (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>), and a servo synchronization mark (SSM) <highlight><bold>76</bold></highlight> identifies the beginning of a head-location identifier <highlight><bold>78</bold></highlight>. The preamble <highlight><bold>74</bold></highlight> and SSM <highlight><bold>76</bold></highlight> are further discussed below in conjunction with <cross-reference target="DRAWINGS">FIG. 14</cross-reference>. The location identifier <highlight><bold>78</bold></highlight> allows the head-position circuit to coarsely determine and adjust the position of the head <highlight><bold>32</bold></highlight> with respect to the surface of the disk <highlight><bold>20</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 4</cross-reference>). More specifically, the location identifier <highlight><bold>78</bold></highlight> includes a sector identifier <highlight><bold>80</bold></highlight> and a track identifier <highlight><bold>82</bold></highlight>, which respectively identify the disk sector <highlight><bold>12</bold></highlight> and the data track <highlight><bold>14</bold></highlight>&mdash;here the sector <highlight><bold>12</bold></highlight><highlight><italic>a </italic></highlight>and the track <highlight><bold>14</bold></highlight><highlight><italic>a&mdash;</italic></highlight>that contain the servo wedge <highlight><bold>22</bold></highlight><highlight><italic>a. </italic></highlight>Because the head <highlight><bold>32</bold></highlight> may read the location identifier <highlight><bold>78</bold></highlight> even if the head is not directly over the track <highlight><bold>14</bold></highlight><highlight><italic>a</italic></highlight>, the servo wedge <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>also includes bursts <highlight><bold>84</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>84</bold></highlight><highlight><italic>n, </italic></highlight>which allow the head-position circuit to finely determine and adjust the position of the head <highlight><bold>32</bold></highlight>. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a diagram of the sinusoidal servo signal generated by the read-write head <highlight><bold>32</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) while it is over the preamble <highlight><bold>74</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 6</cross-reference>) of the servo wedge <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>(<cross-reference target="DRAWINGS">FIGS. 4 and 6</cross-reference>), the sample clock (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>), and the even samples <highlight><bold>90</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>90</bold></highlight><highlight><italic>d </italic></highlight>and odd samples <highlight><bold>91</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>91</bold></highlight><highlight><italic>c </italic></highlight>taken by the ADC <highlight><bold>50</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>). Although in this embodiment the even and odd samples respectively correspond to the rising and falling edges of the sample clock, in other embodiments the even and odd samples may respectively correspond to the falling and rising edges of the sample clock. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a timing diagram of some of the signals associated with the servo circuit <highlight><bold>30</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) on disk spin up according to an embodiment of the invention. For clarity, these signals are omitted from <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. A disk-drive controller (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) transitions SEARCH and Servo Gate SG to active levels&mdash;here a logic 1&mdash;to cause the processor <highlight><bold>40</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) to begin searching for a servo wedge <highlight><bold>22</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 4</cross-reference>) on spin up of the disk <highlight><bold>20</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 4</cross-reference>). The processor <highlight><bold>40</bold></highlight> transitions PDETECT to an active level&mdash;here a logic 1&mdash;to indicate that it has detected the preamble <highlight><bold>74</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 6</cross-reference>) of a servo wedge <highlight><bold>22</bold></highlight> as discussed below. After the processor <highlight><bold>40</bold></highlight> detects the preamble <highlight><bold>74</bold></highlight> of a servo wedge <highlight><bold>22</bold></highlight>, it transitions ACQ_TRK to an active level&mdash;here logic 1&mdash;to cause the sample interpolater loop <highlight><bold>54</bold></highlight> track the phase of the samples to the phase of the servo signal as described below. When the processor <highlight><bold>40</bold></highlight> detects the servo sync mark (SSM <highlight><bold>76</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>) that follows the detected preamble <highlight><bold>74</bold></highlight>, it transitions SRV_SMD to an active level&mdash;here logic 1&mdash;to inform the disk-drive controller that it has detected the sync mark <highlight><bold>76</bold></highlight>. If the disk-drive controller is programmed to require the processor <highlight><bold>40</bold></highlight> to detect multiple consecutive sync marks <highlight><bold>76</bold></highlight> before determining an initial position of the head <highlight><bold>32</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>), then the processor <highlight><bold>40</bold></highlight> or the controller increments a counter SMD_CNT to keep track of the number of consecutive sync marks <highlight><bold>76</bold></highlight> detected during spin up. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> Referring to FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>8</bold></highlight>, the operation of the servo circuit <highlight><bold>30</bold></highlight> on spin-up of the disk <highlight><bold>20</bold></highlight> is discussed according to an embodiment of the invention. For clarity, the operation is explained for the circuit <highlight><bold>30</bold></highlight> detecting the servo wedge <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>first on disk spin up, it being understood that the operation is similar if the circuit <highlight><bold>30</bold></highlight> detects another servo wedge <highlight><bold>22</bold></highlight> first. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> First, the disk <highlight><bold>20</bold></highlight> spins up from an inactive speed, typically &Oslash; rotations per minute (rpm), to an operating speed such as 5100 rpm. The disk <highlight><bold>20</bold></highlight> may be at the inactive speed during a period when the disk-drive system (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) that incorporates the disk is powered down or is in a power-savings, i.e., sleep, mode. While or after the disk <highlight><bold>20</bold></highlight> spins up to the operating speed, the head-position circuit (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) moves the read-write head <highlight><bold>32</bold></highlight> from a parked position to a position over the disk. But the head-position circuit does not &ldquo;know&rdquo; the position of the head <highlight><bold>32</bold></highlight> until the servo circuit <highlight><bold>30</bold></highlight> detects the servo wedge <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>and recovers the location identifier <highlight><bold>78</bold></highlight> therefrom. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> Next, at times t<highlight><subscript>0 </subscript></highlight>and t<highlight><subscript>1</subscript></highlight>, the disk-drive controller (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) respectively transistions SEARCH and SG to active levels, which cause the servo circuit <highlight><bold>30</bold></highlight> to &ldquo;look for&rdquo; and detect a servo wedge <highlight><bold>22</bold></highlight>, here the servo wedge <highlight><bold>22</bold></highlight><highlight><italic>a. </italic></highlight>Specifically, the circuit <highlight><bold>30</bold></highlight> &ldquo;looks for&rdquo; and detects the preamble <highlight><bold>74</bold></highlight> of the servo wedge <highlight><bold>22</bold></highlight><highlight><italic>a. </italic></highlight>Referring to <cross-reference target="DRAWINGS">FIG. 7</cross-reference> and as discussed above, the read-write head <highlight><bold>32</bold></highlight> generates a sinusoidal servo signal, i.e., a preamble sinusoid, while over the preamble <highlight><bold>74</bold></highlight>. As discussed below, the circuit <highlight><bold>30</bold></highlight> exploits the properties of a sinusoid to detect the preamble <highlight><bold>74</bold></highlight>. The servo circuit <highlight><bold>30</bold></highlight> may execute this spin-up detection algorithm before or after the disk <highlight><bold>20</bold></highlight> attains operating speed, or may begin executing this algorithm before the disk <highlight><bold>20</bold></highlight> attains the operating speed and continue executing the algorithm after the disk <highlight><bold>20</bold></highlight> attains operating speed. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> More specifically, to detect the preamble <highlight><bold>74</bold></highlight> of the servo wedge <highlight><bold>22</bold></highlight><highlight><italic>a, </italic></highlight>the processor <highlight><bold>40</bold></highlight> stores a number of consecutive samples of the preamble sinusoid, for example three even samples <highlight><bold>90</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>90</bold></highlight><highlight><italic>c </italic></highlight>and three odd samples <highlight><bold>91</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>91</bold></highlight><highlight><italic>c </italic></highlight>(a total of six consecutive samples). Consecutive edges of the sample clock, and thus consecutive samples <highlight><bold>90</bold></highlight> and <highlight><bold>91</bold></highlight>, are approximately 90&deg; apart with respect to the preamble sinusoid. Therefore, consecutive clock edges of the same polarity, and thus consecutive even samples <highlight><bold>90</bold></highlight> and consecutive odd samples <highlight><bold>91</bold></highlight>, are approximately 180&deg; apart. For a sinusoid, the sum of consecutive points spaced 180&deg; apart equals zero. Therefore, to detect the preamble <highlight><bold>74</bold></highlight>, the processor <highlight><bold>40</bold></highlight> sums each consecutive pair of even samples and each consecutive pair of odd samples of the preamble sinusoid according to the following equations:</paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>E</italic></highlight><highlight><bold>1</bold></highlight>&equals;<highlight><bold>90</bold></highlight><highlight><italic>a&plus;</italic></highlight><highlight><bold>90</bold></highlight><highlight><italic>b</italic></highlight>&emsp;&emsp;(1)</in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>E</italic></highlight><highlight><bold>2</bold></highlight>&equals;<highlight><bold>90</bold></highlight><highlight><italic>b&plus;</italic></highlight><highlight><bold>90</bold></highlight><highlight><italic>c</italic></highlight>&emsp;&emsp;(2)</in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>O</italic></highlight><highlight><bold>1</bold></highlight>&equals;<highlight><bold>91</bold></highlight><highlight><italic>a&plus;</italic></highlight><highlight><bold>91</bold></highlight><highlight><italic>b</italic></highlight>&emsp;&emsp;(3)</in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>O</italic></highlight><highlight><bold>2</bold></highlight>&equals;<highlight><bold>91</bold></highlight><highlight><italic>b&plus;</italic></highlight><highlight><bold>91</bold></highlight><highlight><italic>c</italic></highlight>&emsp;&emsp;(4)</in-line-formula></paragraph>
<paragraph id="P-0047" lvl="7"><number>&lsqb;0047&rsqb;</number> If E<highlight><bold>1</bold></highlight>&equals;E<highlight><bold>2</bold></highlight>&equals;O<highlight><bold>1</bold></highlight>&equals;O<highlight><bold>2</bold></highlight>&equals;0, then the processor <highlight><bold>40</bold></highlight> determines that the samples <highlight><bold>90</bold></highlight> and <highlight><bold>91</bold></highlight> could represent a preamble sinusoid. But E<highlight><bold>1</bold></highlight>&equals;E<highlight><bold>2</bold></highlight>&equals;O<highlight><bold>1</bold></highlight>&equals;O<highlight><bold>2</bold></highlight>&equals;0 is also true if the servo signal is merely a zero-frequency, i.e., DC signal. Therefore, to distinguish a DC signal from a preamble sinusoid, the processor <highlight><bold>40</bold></highlight> averages the magnitudes of the even samples <highlight><bold>90</bold></highlight><highlight><italic>a </italic></highlight>and <highlight><bold>90</bold></highlight><highlight><italic>b </italic></highlight>to generate a first average even sample AE, and averages the magnitudes of the odd samples <highlight><bold>91</bold></highlight><highlight><italic>a </italic></highlight>and <highlight><bold>91</bold></highlight><highlight><italic>b </italic></highlight>to generate a first average odd sample AO according to the following equations:</paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>AE&equals;</italic></highlight>(&verbar;<highlight><bold>90</bold></highlight><highlight><italic>a&verbar;&plus;&verbar;</italic></highlight><highlight><bold>90</bold></highlight><highlight><italic>b&verbar;</italic></highlight>)&divide;2&emsp;&emsp;(5)</in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>AO&equals;</italic></highlight>(&verbar;<highlight><bold>91</bold></highlight><highlight><italic>a&verbar;&plus;&verbar;</italic></highlight><highlight><bold>91</bold></highlight><highlight><italic>b&verbar;</italic></highlight>)&divide;2&emsp;&emsp;(6)</in-line-formula></paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> Furthermore, according to a known trigonemetric identity of sinusoids, (Ysin&agr;<highlight><subscript>1</subscript></highlight>)<highlight><superscript>2</superscript></highlight>&plus;(YCos&agr;<highlight><subscript>1</subscript></highlight>)<highlight><superscript>2</superscript></highlight>&equals;y<highlight><superscript>2</superscript></highlight>. Therefore, this identity holds for the preamble sinusoid. Furthermore, according to known mathematical principles that are omitted for clarity, AE&equals;Ycos&agr;<highlight><subscript>1 </subscript></highlight>and AO&equals;YSin&agr;<highlight><subscript>1</subscript></highlight>. Therefore, to further determine whether the head <highlight><bold>32</bold></highlight> is over the preamble <highlight><bold>74</bold></highlight>, the processor <highlight><bold>40</bold></highlight> calculates the following equation:</paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>AMP&equals;</italic></highlight>sqrt(<highlight><italic>AE</italic></highlight><highlight><superscript>2</superscript></highlight><highlight><italic>&plus;AO</italic></highlight><highlight><superscript>2</superscript></highlight>)&emsp;&emsp;(7)</in-line-formula></paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> Because of noise and intersymbol interference (ISI), E<highlight><bold>1</bold></highlight>, E<highlight><bold>2</bold></highlight>, O<highlight><bold>1</bold></highlight>, and O<highlight><bold>2</bold></highlight> may not equal exactly zero when the head <highlight><bold>32</bold></highlight> is over the preamble <highlight><bold>74</bold></highlight>. Furthermore, the value of AMP may vary because the gain circuit <highlight><bold>46</bold></highlight> has not yet had a chance to adjust the gain of the servo channel <highlight><bold>34</bold></highlight>. Therefore, the processor <highlight><bold>40</bold></highlight> determines whether the following comparisons are true:</paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>E</italic></highlight><highlight><bold>1</bold></highlight>&lt;Threshold_low&emsp;&emsp;(8)</in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>E</italic></highlight><highlight><bold>2</bold></highlight>&lt;Threshold_low&emsp;&emsp;(9)</in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>O</italic></highlight><highlight><bold>1</bold></highlight>&lt;Threshold_low&emsp;&emsp;(10)</in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>O</italic></highlight><highlight><bold>2</bold></highlight>&lt;Threshold_low&emsp;&emsp;(11)</in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>AMP&gt;</italic></highlight>Threshold_high&emsp;&emsp;(12)</in-line-formula></paragraph>
<paragraph id="P-0050" lvl="7"><number>&lsqb;0050&rsqb;</number> where Threshold_low and Threshold_high are determined based on the expected gain of the servo channel <highlight><bold>34</bold></highlight> and the noise and interference present on the servo signal, and Threshold_high is also determined based on the expected amplitude Y of the preamble sinusoid. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> If equations (8)-(12) are all true, then the processor <highlight><bold>40</bold></highlight> increments a first counter (not shown) to a nonzero value. If not all of equations (8)-(12) are true, then the processor <highlight><bold>40</bold></highlight> resets the counter to zero. The processor <highlight><bold>40</bold></highlight> continues calculating equations (1)-(12) and incrementing or resetting the counter for subsequent even and odd samples <highlight><bold>90</bold></highlight> and <highlight><bold>91</bold></highlight>. A C-language software routine used to model the spin-up detection algorithm is included in Appendix A. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> As long as the first counter (not shown) has a nonzero value, the processor <highlight><bold>40</bold></highlight> causes the circuit <highlight><bold>36</bold></highlight> to calculate an initial value for the phase difference &agr;<highlight><subscript>1 </subscript></highlight>between the sample clock and the servo signal, and causes the determinator <highlight><bold>58</bold></highlight> to determine an initial value for the amplitude Y of the servo signal. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> When the first counter (not shown) reaches a predetermined nonzero value, for example eight, at time t<highlight><subscript>2</subscript></highlight>, the processor <highlight><bold>40</bold></highlight> detects a servo preamble, here the preamble <highlight><bold>74</bold></highlight> of the servo wedge <highlight><bold>22</bold></highlight><highlight><italic>a, </italic></highlight>transitions PDETECT to an active level, and institues a predetermined delay. During this delay, the processor causes the sample-interpolator loop <highlight><bold>54</bold></highlight> to begin synchronizing the samples <highlight><bold>90</bold></highlight> and <highlight><bold>91</bold></highlight> to the servo signal_the samples <highlight><bold>90</bold></highlight> and <highlight><bold>91</bold></highlight> are synchronized to the servo signal when &agr;<highlight><subscript>1</subscript></highlight>&equals;0&mdash;using the initial value of &agr;<highlight><subscript>1 </subscript></highlight>from the circuit <highlight><bold>36</bold></highlight>, and causes the gain circuit <highlight><bold>46</bold></highlight> to begin setting the overall gain of the servo channel <highlight><bold>34</bold></highlight> to a desired level using the initial value of Y from the circuit <highlight><bold>38</bold></highlight> (via the DAC <highlight><bold>62</bold></highlight>). This mode is called the acquistion mode, and is similar to the capture mode of a conventional phase-locked loop (PLL, not shown). That is, during the acquisition mode, the sample-interpolator loop <highlight><bold>54</bold></highlight> is relatively &ldquo;fast&rdquo; so that it can drive &agr;<highlight><subscript>1 </subscript></highlight>to or nearly to 0&deg; relatively quickly. Likewise, the gain circuit <highlight><bold>38</bold></highlight> is relatively fast so that it can set the gain of the servo channel <highlight><bold>34</bold></highlight> to the desired level relatively quickly. This predetermined delay, and thus the length of the acquisition mode, is measured with a second counter (not shown) and typically equals the latency of the sample-interpoloator loop <highlight><bold>54</bold></highlight>, which is twenty three samples in one embodiment. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> When the predetermined delay has elapsed at time t<highlight><subscript>3</subscript></highlight>, the processor <highlight><bold>40</bold></highlight> transitions ACQ_TRK to an active level and causes the sample-interpolator loop <highlight><bold>54</bold></highlight> to begin tracking the servo signal. That is, the processor <highlight><bold>40</bold></highlight> causes the loop <highlight><bold>54</bold></highlight> to maintain a minimum, preferably zero, value for the phase difference &agr;<highlight><subscript>1 </subscript></highlight>between the samples and the servo signal, and to maintain the gain of the servo circuit <highlight><bold>30</bold></highlight> at a desired level. The tracking mode is similar to the lock mode of a conventional PLL. A difference between the acquiring and tracking modes is that in the tracking mode, the loop <highlight><bold>54</bold></highlight> and gain circuit <highlight><bold>38</bold></highlight> are slower than they are in the acquiring mode. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> In one embodiment, to insure accurate tracking of the servo signal, the loop <highlight><bold>54</bold></highlight> must receive a predetermined number&mdash;eight in one embodiment&mdash;of consecutive preamble samples <highlight><bold>90</bold></highlight> and <highlight><bold>91</bold></highlight> after entering the tracking mode or the processor <highlight><bold>40</bold></highlight> aborts the current spin-up detection cycle. Specifically, after entering the tracking mode, the processor <highlight><bold>40</bold></highlight> executes the preamble-detect procedure described above in conjunction with equations (1)-(12). If the processor <highlight><bold>40</bold></highlight> does not detect the preamble <highlight><bold>74</bold></highlight> for at least the predetermined number of samples, it transitions ACQ_TRK to an inactive level (transition not shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>), resets the first and second counters (not shown) and the initial phase and amplitude values for &agr;<highlight><subscript>1 </subscript></highlight>and Y, and re-executes the above-described spin-up detection algorithm from the beginning. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Once the loop <highlight><bold>54</bold></highlight> is tracking the servo signal, the processor <highlight><bold>40</bold></highlight> examines the output of the Viterbi detector <highlight><bold>56</bold></highlight> to determine if and when the detector <highlight><bold>56</bold></highlight> recovers the servo synchronization mark (SSM) <highlight><bold>76</bold></highlight>. Because the processor <highlight><bold>40</bold></highlight> may erroneously detect a burst <highlight><bold>84</bold></highlight> as the preamble <highlight><bold>74</bold></highlight>, the processor <highlight><bold>40</bold></highlight> searches for the SSM <highlight><bold>76</bold></highlight> within a predetermined time window after the loop <highlight><bold>54</bold></highlight> begins tracking the servo signal. If the processor <highlight><bold>40</bold></highlight> finds the SSM <highlight><bold>76</bold></highlight> within this time window, then at time t<highlight><subscript>4 </subscript></highlight>it transitions SRV_SMD to an active level and allows the Viterbi detector <highlight><bold>56</bold></highlight> to recover the location identifier <highlight><bold>78</bold></highlight>, which the head-position circuit (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) uses to determine an initial position of the head <highlight><bold>32</bold></highlight>. If the processor <highlight><bold>40</bold></highlight> does not find the SSM <highlight><bold>76</bold></highlight> within this time window, then it does not transition SRV_SMD to an active level and re-executes the above-described spin-up detection algorithm from the beginning. In one embodiment, the predetermined time window has a programmable length of between 80-200 clock cycles (equivalent to 80-200 samples if there is one sample per clock cycle). </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> In response to the detection of the SSM <highlight><bold>76</bold></highlight>, the disk-drive controller (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) transitions SEARCH to an inactive level (this transition of SEARCH shown in dashed line at time t<highlight><subscript>4</subscript></highlight>). After time t<highlight><subscript>4</subscript></highlight>, SG and ACQ_TRK remain at active levels for a predetermined time (t<highlight><subscript>5</subscript></highlight>-t<highlight><subscript>4</subscript></highlight>) that is sufficient for the servo channel <highlight><bold>34</bold></highlight> to finish reading the servo wedge <highlight><bold>22</bold></highlight><highlight><italic>a. </italic></highlight>At time t<highlight><subscript>5</subscript></highlight>, SG and ACQ_TRK transition to inactive levels, and the processor <highlight><bold>40</bold></highlight> locks the servo channel <highlight><bold>34</bold></highlight> in the tracking mode or in a coasting mode where the phase of the samples and the gain of the servo channel <highlight><bold>34</bold></highlight> are held at their respective current values. Typically, the programming of the processor <highlight><bold>40</bold></highlight> determines the mode, tracking or coasting, in which it locks the servo channel <highlight><bold>34</bold></highlight>. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> Still referring to FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>8</bold></highlight>, in one embodiment one can program the processor <highlight><bold>40</bold></highlight> to recover multiple SSMs <highlight><bold>76</bold></highlight>&mdash;here three consecutive SSMs&mdash;before the disk-drive controller (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) allows the head-position circuit (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) to determine an initial position of the head <highlight><bold>32</bold></highlight>. Recovering multiple SSMs <highlight><bold>76</bold></highlight> makes the spin-up detection algorithm more robust by increasing the probability that none of the recovered SSMs <highlight><bold>76</bold></highlight> were falsely recovered. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> More specifically, when the processor <highlight><bold>40</bold></highlight> recovers the first SSM <highlight><bold>76</bold></highlight>, it transitions SRV_SMD to an active level at time t<highlight><subscript>4 </subscript></highlight>as described above, and it also increments SMD_CNT, or causes the disk-drive controller (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) to increment SMD_CNT at time t<highlight><subscript>4</subscript></highlight>. After time t<highlight><subscript>4</subscript></highlight>, SEARCH remains at an active level (solid line at time t<highlight><subscript>4</subscript></highlight>), and SG and ACQ_TRK remain at active levels for the predetermined time t<highlight><subscript>5</subscript></highlight>-t<highlight><subscript>4</subscript></highlight>. At time t<highlight><subscript>5</subscript></highlight>, SG and ACQ_TRK transition to inactive levels to lock the servo channel <highlight><bold>34</bold></highlight> in the tracking or coasting mode. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> Next, the head-position circuit (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) determines a tentative initial position of the read-write head (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) based on the recovery of the first SSM <highlight><bold>76</bold></highlight>. Then, based on this tentative position, the disk-drive controller (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) transitions SG to an active level at a time t<highlight><subscript>6 </subscript></highlight>when the controller anticipates that the head is aligned with the beginning of the next servo wedge <highlight><bold>22</bold></highlight>. The controller can determine the beginning of the next servo wedge <highlight><bold>22</bold></highlight> by counting the number of sample-clock cycles after it transitions SG to an inactive level at time t<highlight><subscript>5 </subscript></highlight>or by other conventional techniques. The processor <highlight><bold>40</bold></highlight> then implements the preamble-detection algorithm to detect the preamble at time t<highlight><subscript>7</subscript></highlight>, put the sample-interpolator loop <highlight><bold>54</bold></highlight> and gain circuit <highlight><bold>38</bold></highlight> in tracking mode at time t<highlight><subscript>8</subscript></highlight>, and recover the second SSM <highlight><bold>76</bold></highlight> at time t<highlight><subscript>9 </subscript></highlight>in a manner similar to that described above for the recovery of the first SSM <highlight><bold>76</bold></highlight>. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> If the processor <highlight><bold>40</bold></highlight> recovers the second SSM <highlight><bold>76</bold></highlight>, it transitions SRV_SMD to an active level at time t<highlight><subscript>9</subscript></highlight>, and it or the disk-drive controller (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) increments SMD_CNT also at time t<highlight><subscript>9</subscript></highlight>. SEARCH remains at an active level and SG and ACQ_TRK remain at active levels for the predetermined time (t<highlight><subscript>10</subscript></highlight>&minus;t<highlight><subscript>9</subscript></highlight>&equals;t<highlight><subscript>5</subscript></highlight>&minus;t<highlight><subscript>4</subscript></highlight>), after which SG and ACQ_TRK transition to inactive levels at time t<highlight><subscript>10 </subscript></highlight>to lock the servo channel <highlight><bold>34</bold></highlight> in the tracking or coasting mode. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> Next, the head-position circuit (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) determines a tentative initial position of the read-write head (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) based on the recovery of the second SSM <highlight><bold>76</bold></highlight>. Then, based on this tentative position, the disk-drive controller (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) transitions SG to an active level at time t<highlight><subscript>11 </subscript></highlight>when the controller anticipates that the read-write head is aligned with the beginning of the next servo wedge <highlight><bold>22</bold></highlight>. The processor <highlight><bold>40</bold></highlight> then implements the preamble-detection algorithm and attempts to recover the third SSM <highlight><bold>76</bold></highlight> in a manner similar to that described above for the recovery of the second SSM <highlight><bold>76</bold></highlight>. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> The processor <highlight><bold>40</bold></highlight> repeats this procedure until it recovers the desired number&mdash;here three&mdash;of consecutive SSMs <highlight><bold>76</bold></highlight>. If this procedure is unsuccessful, then SEARCH remains at an active level, and the processor <highlight><bold>40</bold></highlight> resets SMD_CNT and re-executes the spin-up detection procedure from the beginning until it recovers the desired number of consecutive SSMs <highlight><bold>76</bold></highlight>. Furthermore, although the recovered consecutive SSMs <highlight><bold>76</bold></highlight> are typically within the same track <highlight><bold>14</bold></highlight>, this is not required. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a timing diagram of the signals of <cross-reference target="DRAWINGS">FIG. 8</cross-reference> during post-spin-up, i.e., normal, operation of the servo circuit <highlight><bold>30</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> according to an embodiment of the invention. SEARCH, PDETECT, and SMD_CNT are inactive during normal operation. A major difference between spin-up and normal operation is that the preamble detection algorithm is not used during normal operation because the disk-drive controller (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) &ldquo;knows&rdquo; the position of the read-write head (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>). </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> Referring to FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>7</bold></highlight> and <highlight><bold>9</bold></highlight>, during normal operation the disk-drive controller (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>), transitions SG to an active level at time T<highlight><subscript>12</subscript></highlight>, which is when the controller determines that the read-write head (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) is at the beginning of a servo wedge <highlight><bold>22</bold></highlight>. In response to SG having an active level, the processor <highlight><bold>40</bold></highlight> causes the circuits <highlight><bold>36</bold></highlight> and <highlight><bold>58</bold></highlight> to calculate initial phase and gain values for &agr;<highlight><subscript>1 </subscript></highlight>and Y as described above. After a first predetermined delay, which is ______ in one embodiment, the processor <highlight><bold>40</bold></highlight> causes the sample-interpolator loop <highlight><bold>54</bold></highlight> and gain circuit <highlight><bold>38</bold></highlight> to enter the acquistion mode as described above. Then, after a second predetermined delay that in one embodiment equals the latency of the loop <highlight><bold>54</bold></highlight>, the processor <highlight><bold>40</bold></highlight> transistions ACQ_TRK to an active level at time t<highlight><subscript>13 </subscript></highlight>and causes the loop <highlight><bold>54</bold></highlight> and circuit <highlight><bold>38</bold></highlight> to enter the tracking mode as described above. The processor <highlight><bold>40</bold></highlight> recovers the SSM <highlight><bold>76</bold></highlight> at time t<highlight><subscript>14</subscript></highlight>, and in response transistions SRV_SMD to an active level SG and ACQ_TRK remain active from time t<highlight><subscript>4 </subscript></highlight>until time t<highlight><subscript>5</subscript></highlight>, which is long enough for the servo channel <highlight><bold>34</bold></highlight> to read the servo data in the servo wedge <highlight><bold>22</bold></highlight>. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a block diagram of the sample-interpolator loop <highlight><bold>54</bold></highlight>&mdash;which is sometimes called a digital-baud-rate-timing-recovery circuit&mdash;of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> according to an embodiment of the invention. Although details of the circuit <highlight><bold>54</bold></highlight> are discussed below, further details are disclosed in commonly owned U.S. patent application Ser. No. 09/387,146, filed Aug. 31, 1999, entitled &ldquo;DIGITAL TIMING RECOVERY USING BAUD RATE SAMPLING&rdquo;, which is incorporated by reference. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> Still referring to <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the FIR <highlight><bold>52</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) provides equalized even and odd samples <highlight><bold>90</bold></highlight> and <highlight><bold>91</bold></highlight> on data paths <highlight><bold>104</bold></highlight> and <highlight><bold>105</bold></highlight>, respectively. From the equalized samples, a sample interpolator <highlight><bold>106</bold></highlight> calculates interpolated samples at an interpolation interval provided by an accumulator <highlight><bold>108</bold></highlight>. The sample interpolator <highlight><bold>106</bold></highlight> has three output paths. Two of the output paths provide the two interpolated samples S1 and S2, which are derived in parallel by the interpolator <highlight><bold>106</bold></highlight>. The third output path provides an uninterpolated sample S3, which may be needed in an undersampling condition. The interpolator <highlight><bold>106</bold></highlight> provides all three samples S1, S2, and S3 to an elastic buffer <highlight><bold>110</bold></highlight> and to a mini-elastic buffer <highlight><bold>112</bold></highlight>, which provides the correct stream of data to a phase detector <highlight><bold>114</bold></highlight> (described below). In embodiments where the loop <highlight><bold>54</bold></highlight> is designed to operate on EPR4 samples but the servo channel <highlight><bold>34</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) is designed to generate PR4 samples, a PR4-to-EPR4 converter <highlight><bold>116</bold></highlight> converts the PR4 samples from the mini-elastic buffer <highlight><bold>112</bold></highlight> into EPR4 samples. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> Note that because of the parallel sampling paths throughout the system, the sample interpolator <highlight><bold>106</bold></highlight> outputs two interpolated samples S1 and S2 during each cycle of normal operation. During an oversample condition, the interpolator <highlight><bold>106</bold></highlight> provides one valid interpolated sample and one bogus interpolated sample. In an undersample condition, the interpolator <highlight><bold>106</bold></highlight> outputs three samples: the interpolated sample S1, the interpolated sample S2, and the uninterpolated sample S3, which is provided by the interpolator <highlight><bold>106</bold></highlight> to compensate for the fact that the interpolator <highlight><bold>106</bold></highlight> cannot interpolate two samples in one (half-rate) cycle. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> The interpolator <highlight><bold>106</bold></highlight> also provides the interpolated samples S1 and S2 to the phase detector <highlight><bold>114</bold></highlight>, which determines the phase difference between the interpolated samples S1 and S2 and the expected values of the samples S1 and S2, and which generates a corresponding phase-error signal. The phase detector <highlight><bold>114</bold></highlight> provides this phase-error signal to a proportional-integral filter <highlight><bold>118</bold></highlight>, which provides the filtered error signal to the accumulator <highlight><bold>108</bold></highlight>. The accumulator <highlight><bold>108</bold></highlight> derives the fractional delay, also known as the interpolation value tau (&tgr;), from the filtered error signal. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> The interpolation value &tgr; is used to select a set of coefficients employed by the sample interpolator <highlight><bold>106</bold></highlight> to derive the interpolation samples S1 and S2. These coefficient values are stored in a read only memory (ROM) <highlight><bold>120</bold></highlight>, which receives the &tgr; value from the accumulator <highlight><bold>108</bold></highlight> and provides to the sample interpolator <highlight><bold>106</bold></highlight> the appropriate coefficient values corresponding to the desired interpolation interval. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> Still referring to <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, as discussed above in conjunction with FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>8</bold></highlight> and as discussed below in conjunction with <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, the phase calculation circuit <highlight><bold>36</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) calculates a gain-independent 7-bit initial value for the phase angle &agr;<highlight><subscript>1 </subscript></highlight>(<cross-reference target="DRAWINGS">FIGS. 7, 11</cross-reference>), which represents the phase lead of the sample clock (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) with respect to the zero crossings and peaks of the preamble sinusoid (<cross-reference target="DRAWINGS">FIG. 7</cross-reference>). The circuit <highlight><bold>36</bold></highlight> provides bits A<highlight><bold>5</bold></highlight>:A<highlight><bold>0</bold></highlight> of &agr;<highlight><subscript>1 </subscript></highlight>to the accumulator <highlight><bold>108</bold></highlight> and to the ROM <highlight><bold>120</bold></highlight>. This portion of &agr;<highlight><subscript>1 </subscript></highlight>is used to select the initial set of coefficients that is input to the sample interpolator <highlight><bold>106</bold></highlight> at the start of a read cycle. Furthermore, the circuit <highlight><bold>36</bold></highlight> provides the bit A<highlight><bold>6</bold></highlight> of &agr;<highlight><subscript>1 </subscript></highlight>to the elastic buffer <highlight><bold>110</bold></highlight> and to the phase detector <highlight><bold>114</bold></highlight>. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a phase diagram of a positive half of the preamble sinusoid of <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, and illustrates how the phase calculation circuit <highlight><bold>36</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) can use a tangent function to obtain a gain-independent initial value for the phase angle &agr;<highlight><subscript>1 </subscript></highlight>between the preamble sinusoid and the sample clock. Specifically, the first sample <highlight><bold>130</bold></highlight>, which in one embodiment corresponds to a rising edge of the sample clock, leads the sinusoid peak <highlight><bold>132</bold></highlight> by the phase angle &agr;<highlight><subscript>1</subscript></highlight>, which is &lt;45&deg; here. From well-known trigonometric identities, &agr;<highlight><subscript>1 </subscript></highlight>is calculated according to the following equations:</paragraph>
<paragraph lvl="0"><in-line-formula>Tan &agr;<highlight><subscript>1</subscript></highlight>&equals;Sin &agr;<highlight><subscript>1</subscript></highlight>/Cos &agr;<highlight><subscript>1</subscript></highlight>&equals;(second sample <highlight><bold>134</bold></highlight>)&divide;(first sample <highlight><bold>130</bold></highlight>),&emsp;&emsp;(13)</in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula>&agr;<highlight><subscript>1</subscript></highlight>&equals;Arctan &agr;<highlight><subscript>1</subscript></highlight>&equals;Arctan &lsqb;(second sample <highlight><bold>134</bold></highlight>)&divide;(first sample <highlight><bold>130</bold></highlight>)&rsqb;.&emsp;&emsp;(14)</in-line-formula></paragraph>
<paragraph id="P-0073" lvl="7"><number>&lsqb;0073&rsqb;</number> Further details of the circuit <highlight><bold>36</bold></highlight>, techniques for calculating an initial value for &agr;<highlight><subscript>1</subscript></highlight>&gt;45&deg;, and other techniques for calculating a gain-independent value for the initial phase angle &agr;<highlight><subscript>1 </subscript></highlight>between the preamble sinusoid and the sample clock are discussed in commonly owned U.S. patent application Ser. No. 09/503,453, filed Feb. 14, 2000, entitled &ldquo;CIRCUIT AND METHOD FOR DETERMINING THE PHASE DIFFERENCE BETWEEN A SAMPLE CLOCK AND A SAMPLED SIGNAL&rdquo;, and U.S. patent application Ser. No. 09/503,929, filed Feb. 14, 2000, entitled &ldquo;CIRCUIT AND METHOD FOR DETERMINING THE PHASE DIFFERENCE BETWEEN A SAMPLE CLOCK AND A SAMPLED SIGNAL BY LINEAR APPROXIMATION&rdquo;, which are incorporated by reference. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a phase diagram of a positive half period of the preamble sinusoid of <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, and illustrates how the initial-gain determinator <highlight><bold>58</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) calculates a gain-independent initial value for the peak amplitude Y of the preamble sinusoid. Specifically, samples <highlight><bold>140</bold></highlight> and <highlight><bold>142</bold></highlight> are 90&deg; apart with respect to the preamble sinusoid. Therefore, the determinator <highlight><bold>58</bold></highlight> calculates the amplitude Y according to the following equations, which follow from the trigonemetric identity Sin<highlight><superscript>2</superscript></highlight>&agr;<highlight><subscript>2</subscript></highlight>&plus;Cos<highlight><superscript>2</superscript></highlight>&agr;<highlight><subscript>2</subscript></highlight>&equals;1:</paragraph>
<paragraph lvl="0"><in-line-formula>(<highlight><italic>Y </italic></highlight>Sin &agr;<highlight><subscript>2</subscript></highlight>)<highlight><superscript>2</superscript></highlight>&plus;(<highlight><italic>Y </italic></highlight>Cos &agr;<highlight><subscript>2</subscript></highlight>)<highlight><superscript>2</superscript></highlight><highlight><italic>&equals;Y</italic></highlight><highlight><superscript>2 </superscript></highlight>Sin<highlight><superscript>2 </superscript></highlight>&agr;<highlight><subscript>2</subscript></highlight><highlight><italic>&plus;Y</italic></highlight><highlight><superscript>2 </superscript></highlight>Cos<highlight><superscript>2 </superscript></highlight>&agr;<highlight><subscript>2</subscript></highlight><highlight><italic>&equals;Y</italic></highlight><highlight><superscript>2</superscript></highlight>(Sin<highlight><superscript>2 </superscript></highlight>&agr;<highlight><subscript>2</subscript></highlight>&plus;Cos<highlight><superscript>2 </superscript></highlight>&agr;<highlight><subscript>2</subscript></highlight>)<highlight><italic>&equals;Y</italic></highlight><highlight><superscript>2</superscript></highlight>&emsp;&emsp;(15)</in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula>Sample <highlight><bold>140</bold></highlight>&equals;<highlight><italic>Y </italic></highlight>Sin &agr;<highlight><subscript>2</subscript></highlight>&emsp;&emsp;(16)</in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula>Sample <highlight><bold>142</bold></highlight>&equals;<highlight><italic>Y </italic></highlight>Cos &agr;<highlight><subscript>2</subscript></highlight>&emsp;&emsp;(17)</in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>Y</italic></highlight><highlight><superscript>2</superscript></highlight>&equals;(sample <highlight><bold>140</bold></highlight>)<highlight><superscript>2</superscript></highlight>&plus;(sample <highlight><bold>142</bold></highlight>)<highlight><superscript>2</superscript></highlight>&emsp;&emsp;(18)</in-line-formula></paragraph>
<paragraph id="P-0075" lvl="7"><number>&lsqb;0075&rsqb;</number> From the initial value for the amplitude Y, the determinator <highlight><bold>58</bold></highlight> generates an initial gain adjustment so as to change the gain of the gain circuit <highlight><bold>46</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) such that the peak magnitude of the samples <highlight><bold>140</bold></highlight> and <highlight><bold>142</bold></highlight> at the input to the Viterbi detector <highlight><bold>56</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) will thereafter be nearer or equal to the desired peak magnitude. Further details of the determinator <highlight><bold>58</bold></highlight> are discussed in commonly owned U.S. patent app. Ser. No. 09/503,949, filed Feb. 14, 2000, entitled &ldquo;A CIRCUIT AND METHOD FOR CONTROLLING THE GAIN OF AN AMPLIFIER BASED ON THE SUM OF SAMPLES OF THE AMPLIFIED SIGNAL&rdquo;, and U.S. patent app. Ser. No. 09/503,399, filed Feb. 14, 2000, entitled &ldquo;A CIRCUIT AND METHOD FOR CONTROLLING THE GAIN OF AN AMPLIFIER&rdquo;, which are incorporated by reference. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a pruned trellis diagram that illustrates the operation of the Viterbi detector <highlight><bold>56</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) according to an embodiment of the invention. The Viterbi detector <highlight><bold>56</bold></highlight> is constructed for a PR4 target polynomial B<highlight><subscript>k</subscript></highlight>&equals;A<highlight><subscript>k</subscript></highlight>&minus;A<highlight><subscript>k&minus;2</subscript></highlight>, where B<highlight><subscript>k </subscript></highlight>is the interpolated sample of the servo signal at sample time k, A<highlight><subscript>k </subscript></highlight>is the logic value (0 or 1) of the sampled bit of the servo data at sample time k, and A<highlight><subscript>k&minus;2 </subscript></highlight>is the logic value of the sampled bit of the servo data at sample time k&minus;2. Therefore, the trellis has four states that represent four possible states of the coded sequence: S0 (00 or &minus;&minus;), S1 (01 or &minus;&plus;), S2 (10 or &plus;&minus;), and S3 (11 or &plus;&plus;). Furthermore, in one embodiment the servo data is coded&mdash;Gray coded in one embodiment&mdash;as a 4:12 run-length-limited (RLL) code having d&equals;2, k&equals;10, and having single pairs and only single pairs of logic 1&apos;s. Because the servo data is so constrained, the Viterbi detector <highlight><bold>56</bold></highlight> can be &ldquo;pruned&rdquo; such that the number of branches between the states S0-S3 at consecutive sample times k is reduced from eight branches (two incoming branches per state S0-S3) to five branches. Thus, only the state S0 has more than one&mdash;here two&mdash;incoming branches. The combination of the servo data being constrained according to the above-described code and the Viterbi detector <highlight><bold>56</bold></highlight> being pruned to match the code increases the minimum squared distance error by a factor of two compared to a combination of uncoded servo data and a full-state (eight branches) Viterbi detector. This increase in the minimum squared distance reduces by 6 dB the minimum servo-signal SNR required by the detector <highlight><bold>54</bold></highlight>, and thus makes recovery of the servo data more reliable for a given servo-signal SNR. The two solid-line paths depict two possible sequences that constitute the minimum-distance closed-error event. The Viterbi detector <highlight><bold>56</bold></highlight> and the servo-data coding scheme are further discussed in commonly owned U.S. patent application Ser. No. 09/783,801, filed Feb. 14, 2001, entitled &ldquo;VITERBI DETECTOR AND METHOD FOR RECOVERING A BINARY SEQUENCE FROM A READ SIGNAL&rdquo;, which is incorporated by reference. Viterbi detectors and trellis diagrams are further discussed in commonly owned U.S. patent application Ser. Nos. 09/409,923, filed Sep. 30, 1999, entitled &ldquo;PARITY-SENSITIVE VITERBI DETECTOR AND METHOD FOR RECOVERING INFORMATION FROM A READ SIGNAL&rdquo;, and 09/410,274, filed Sep. 30, 1999, entitled &ldquo;CIRCUIT AND METHOD FOR RECOVERING SYNCHRONIZATION INFORMATION FROM A SIGNAL&rdquo;, which are incorporated by reference. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> shows the preamble <highlight><bold>74</bold></highlight> and SSM <highlight><bold>76</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 6</cross-reference> according to an embodiment of the invention. In this embodiment, the bit sequences that compose the preamble <highlight><bold>74</bold></highlight> and SSM <highlight><bold>76</bold></highlight> are coded according to the coding scheme described above in conjunction with <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a plan view of a magnetic data-storage disk <highlight><bold>150</bold></highlight>, which is similar to the disk <highlight><bold>20</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 4</cross-reference>) except that it includes spin-up wedges <highlight><bold>152</bold></highlight> according to an embodiment of the invention. Although including the the spin-up wedges <highlight><bold>152</bold></highlight> may cause the disk <highlight><bold>150</bold></highlight> to have a smaller data-storage capacity than the disk <highlight><bold>20</bold></highlight>, it allows one to increase the robustness of the spin-up detection algorithm as discussed below. Furthermore, because the servo data on the disk <highlight><bold>150</bold></highlight> has a higher density than the servo data on the conventional disk <highlight><bold>10</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 1</cross-reference>), the disk <highlight><bold>150</bold></highlight> can have a larger data-storage capacity than the disk <highlight><bold>10</bold></highlight> even though both the disks <highlight><bold>10</bold></highlight> and <highlight><bold>150</bold></highlight> include spin-up wedges. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> Like the disk <highlight><bold>20</bold></highlight>, the disk <highlight><bold>150</bold></highlight> is partitioned into a number&mdash;here eight&mdash;of disk sectors <highlight><bold>12</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>12</bold></highlight><highlight><italic>h </italic></highlight>and includes a number of concentric data tracks <highlight><bold>14</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>14</bold></highlight><highlight><italic>n. </italic></highlight>The disk <highlight><bold>150</bold></highlight> also includes servo wedges <highlight><bold>154</bold></highlight>, which incorporate the spin-up wedges <highlight><bold>152</bold></highlight>. But other than incorporating the spin-up wedges <highlight><bold>152</bold></highlight>, the servo wedges <highlight><bold>154</bold></highlight> are similar to the servo wedges <highlight><bold>22</bold></highlight> of the disk <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a diagram of the servo wedge <highlight><bold>154</bold></highlight><highlight><italic>a </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 15</cross-reference> according to an embodiment of the invention. The servo wedge <highlight><bold>154</bold></highlight><highlight><italic>a </italic></highlight>includes the spin-up wedge <highlight><bold>152</bold></highlight><highlight><italic>a </italic></highlight>and is otherwise similar to the servo wedge <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, and the other servo wedges <highlight><bold>154</bold></highlight> are similar to the wedge <highlight><bold>154</bold></highlight><highlight><italic>a. </italic></highlight>Although the spin-up wedge <highlight><bold>152</bold></highlight><highlight><italic>a </italic></highlight>is shown between the servo address mark (SAM) <highlight><bold>72</bold></highlight> and the preamble <highlight><bold>74</bold></highlight>, the wedge <highlight><bold>152</bold></highlight><highlight><italic>a </italic></highlight>may occupy another position within the wedge <highlight><bold>154</bold></highlight><highlight><italic>a, </italic></highlight>or may be located in front of or in another location outside of the wedge <highlight><bold>154</bold></highlight><highlight><italic>a. </italic></highlight></paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a diagram of the servo signal when the read-write head <highlight><bold>32</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) reads the spin-up wedge <highlight><bold>152</bold></highlight><highlight><italic>a </italic></highlight>and the preamble <highlight><bold>74</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 16</cross-reference> according to an embodiment of the invention. The wedge <highlight><bold>152</bold></highlight><highlight><italic>a </italic></highlight>includes an introductory portion <highlight><bold>156</bold></highlight>, which is a two-cycle sinusoid here, and a zero-frequency, i.e., DC-erase, field <highlight><bold>158</bold></highlight>. As discussed below, the processor <highlight><bold>40</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) detects the spin-up wedge <highlight><bold>152</bold></highlight><highlight><italic>a </italic></highlight>by detecting the DC-erase field <highlight><bold>158</bold></highlight> and then detecting the beginning of the preamble <highlight><bold>74</bold></highlight> within a qualifying window <highlight><bold>160</bold></highlight>. Ideally, the window <highlight><bold>160</bold></highlight> is centered about the end of the DC-erase field <highlight><bold>158</bold></highlight>, which is also the beginning of the preamble <highlight><bold>74</bold></highlight>. Furthermore, the lengths of the sinusoid <highlight><bold>156</bold></highlight>, DC-erase field <highlight><bold>158</bold></highlight>, and qualifying window <highlight><bold>160</bold></highlight> may be different from the illustrated lengths of eight, twenty two, and eight samples/bits (here one sample per bit), respectively. For example, in one embodiment the processor <highlight><bold>40</bold></highlight> allows one to program the DC-erase field <highlight><bold>158</bold></highlight> to a length of twenty, twenty eight, thirty six, or forty four samples/bits and the qualifying window to a length of four or eight samples/bits. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a timing diagram of some of the signals associated with the servo circuit <highlight><bold>30</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> on spin up of the disk <highlight><bold>150</bold></highlight> according to an embodiment of the invention where, as discussed above, the circuit <highlight><bold>30</bold></highlight> detects both a spin-up wedge <highlight><bold>152</bold></highlight> and the following preamble <highlight><bold>74</bold></highlight> on disk spin up. For clarity, these signals are omitted from <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. Furthermore, although active levels for all these signals are described as being logic 1, some or all of these signals may have active levels of logic 0 in other embodiments. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> Still referring to <cross-reference target="DRAWINGS">FIG. 18</cross-reference>, the disk-drive controller (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) transitions SEARCH, SG, and DC-ERASE ENABLE to active levels to cause the processor <highlight><bold>40</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) to begin searching for a servo wedge <highlight><bold>154</bold></highlight> on spin up of the disk <highlight><bold>150</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 15</cross-reference>). The active DC-ERASE ENABLE causes the processor <highlight><bold>40</bold></highlight> to detect the servo wedge <highlight><bold>154</bold></highlight> by first detecting a spin-up wedge <highlight><bold>152</bold></highlight> and then the following preamble <highlight><bold>74</bold></highlight>. The processor <highlight><bold>40</bold></highlight> transitions DC-ERASE DETECT to an active level for as long as it detects the DC-erase field <highlight><bold>158</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 17</cross-reference>). The processor <highlight><bold>40</bold></highlight> transitions DC-ERASE QUALIFYING WINDOW to an active level for the length of the qualifying window <highlight><bold>160</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 17</cross-reference>). Then, the processor <highlight><bold>40</bold></highlight> executes the preamble-detection algorithm as discussed above in conjunction with FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>8</bold></highlight>. If the processor <highlight><bold>40</bold></highlight> detects the preamble <highlight><bold>74</bold></highlight> within the window <highlight><bold>160</bold></highlight>, i.e., while DC-ERASE QUALIFYING WINDOW is active, then it transitions PREAMBLE-DETECT ENABLE to an active level. In response to the active PREAMBLE-DETECT ENABLE, the processor <highlight><bold>40</bold></highlight> attempts to detect the preamble <highlight><bold>74</bold></highlight> and to recover one or more sync marks <highlight><bold>76</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 16</cross-reference>) in the manner discussed above in conjunction with FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>8</bold></highlight>. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIGS. 5 and 15</cross-reference>-<highlight><bold>18</bold></highlight>, the operation of the servo circuit <highlight><bold>30</bold></highlight> is discussed for detecting a servo wedge <highlight><bold>154</bold></highlight> on spin up of the disk <highlight><bold>150</bold></highlight>. This procedure is similar to the spin-up-detection procedure described above in conjunction with FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>8</bold></highlight> except that here, the circuit <highlight><bold>30</bold></highlight> detects a spin-up wedge <highlight><bold>152</bold></highlight> associated with the servo wedge <highlight><bold>154</bold></highlight> before it detects the preamble <highlight><bold>74</bold></highlight> of the wedge <highlight><bold>154</bold></highlight>. Because it detects both the spin-up wedge and the preamble instead of detecting only the preamble, this spin-up detection algorithm is typically more robust than the spin-up detection algorithm described above in conjunction with FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>8</bold></highlight>. For clarity, this procedure is discussed for detecting the spin-up wedge <highlight><bold>152</bold></highlight><highlight><italic>a </italic></highlight>and preamble <highlight><bold>74</bold></highlight> of the servo wedge <highlight><bold>154</bold></highlight><highlight><italic>a, </italic></highlight>the procedure being the same for the other servo wedges <highlight><bold>154</bold></highlight>. Furthermore, in this example the DC-erase field is twenty-two samples/bits long, the qualifying window <highlight><bold>160</bold></highlight> is eight samples/bits long, and the servo circuit <highlight><bold>30</bold></highlight> takes one sample per bit of servo data. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> First, the disk <highlight><bold>150</bold></highlight> spins up from an inactive speed, typically 0 rotations per minute (rpm), to an operating speed such as 5100 rpm. The disk <highlight><bold>150</bold></highlight> may be at the inactive speed during a period when the disk-drive system (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) that incorporates the disk is powered down or is in a power-savings, i.e., sleep, mode. During or after the spin up of the disk <highlight><bold>150</bold></highlight>, the head-position circuit (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) moves the read-write head <highlight><bold>32</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) from a parked position to a position over the disk. But the head-position circuit does not &ldquo;know&rdquo; the position of the head <highlight><bold>32</bold></highlight> until the servo circuit <highlight><bold>30</bold></highlight> detects the servo wedge <highlight><bold>154</bold></highlight><highlight><italic>a </italic></highlight>and recovers the location identifier <highlight><bold>78</bold></highlight> therefrom. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> Next, at times t<highlight><subscript>0 </subscript></highlight>and t<highlight><subscript>1</subscript></highlight>, respectively, the disk-drive controller (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) transistions SEARCH, DC-ERASE ENABLE, and SG to active levels, which cause the servo circuit <highlight><bold>30</bold></highlight> to &ldquo;look for&rdquo; and detect a servo wedge <highlight><bold>154</bold></highlight>, here the servo wedge <highlight><bold>154</bold></highlight><highlight><italic>a. </italic></highlight>Specifically, the circuit <highlight><bold>30</bold></highlight> &ldquo;looks for&rdquo; and detects the DC-erase field <highlight><bold>158</bold></highlight> of the servo wedge <highlight><bold>154</bold></highlight><highlight><italic>a, </italic></highlight>and then looks for and detects the preamble <highlight><bold>74</bold></highlight> of the servo wedge <highlight><bold>154</bold></highlight><highlight><italic>a. </italic></highlight></paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> To detect the DC-erase field <highlight><bold>158</bold></highlight>, the processor <highlight><bold>40</bold></highlight> compares the samples from the ADC <highlight><bold>50</bold></highlight> to a predetermined threshold. Alternately, a conventional slicer (not shown) may compare the samples to the threshold under the control of the processor <highlight><bold>40</bold></highlight>. If a sample is above the threshold, the processor <highlight><bold>40</bold></highlight> determines that the sample has a non-zero, i.e., non-DC, value, and resets a DC-erase counter (not shown) and DC-ERASE DETECT. Conversely, if the sample is below the threshold, the processor <highlight><bold>40</bold></highlight> determines that the sample has a zero, i.e., DC, value, and increments the counter. When the counter reaches a predetermined value, for example two, the processor <highlight><bold>40</bold></highlight> transitions DC-ERASE DETECT to an active level at time t<highlight><subscript>2</subscript></highlight>. The introductory sinusoid <highlight><bold>156</bold></highlight> insures that the processor <highlight><bold>40</bold></highlight> will reset the counter before the read-write head <highlight><bold>32</bold></highlight> begins reading the field <highlight><bold>158</bold></highlight>, and the length of the field <highlight><bold>158</bold></highlight> is typically longer than the expected lengths of other strings of DC samples on the disk <highlight><bold>150</bold></highlight> so that the processor <highlight><bold>40</bold></highlight> does not mistake one of these strings for the field <highlight><bold>158</bold></highlight>. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> Once the DC-erase counter (not shown) reaches a value that indicates the beginning of the qualifying window <highlight><bold>160</bold></highlight>, the processor <highlight><bold>40</bold></highlight> transitions DC-ERASE QUALIFYING WINDOW to an active level at time t<highlight><subscript>3 </subscript></highlight>and begins searching for the preamble <highlight><bold>74</bold></highlight>. The window <highlight><bold>160</bold></highlight> allows for noise or interference that may cause uncertainty in detecting the beginning of, and thus predicting the end of, the field <highlight><bold>158</bold></highlight>. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> More specifically, the processor <highlight><bold>40</bold></highlight> centers the window <highlight><bold>160</bold></highlight> about the expected end of the DC-erase field <highlight><bold>158</bold></highlight>. Therefore, when the counter stores a nine&mdash;this is equivalent to eighteen samples because there are two samples per count cycle&mdash;the processor <highlight><bold>40</bold></highlight> transitions DC-ERASE QUALIFYING WINDOW at time t<highlight><subscript>3 </subscript></highlight>to begin the window <highlight><bold>160</bold></highlight> four samples before the expected end of the twenty-two-sample field <highlight><bold>158</bold></highlight>. That is, the window <highlight><bold>160</bold></highlight> begins after the processor <highlight><bold>40</bold></highlight> detects eighteen consecutive DC samples. At time t<highlight><subscript>4</subscript></highlight>, the window <highlight><bold>160</bold></highlight>&mdash;here eight samples/bits long&mdash;ends, and thus the processor <highlight><bold>40</bold></highlight> transitions DC-ERASE QUALIFYING WINDOW to an inactive level. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> During the qualifying window <highlight><bold>160</bold></highlight> while DC-ERASE QUALIFYING WINDOW is active, the processor <highlight><bold>40</bold></highlight> searches for the beginning of the preamble <highlight><bold>74</bold></highlight> using the same preamble-detection algorithm as discussed above in conjunction with FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>8</bold></highlight>. For example, when executing the software routine in Appendix A, the processor <highlight><bold>40</bold></highlight> must process three consecutive samples of the preamble <highlight><bold>74</bold></highlight> before it can detect the preamble. Therefore, the processor <highlight><bold>40</bold></highlight> can detect the preamble <highlight><bold>74</bold></highlight> only if at least three samples of the preamble are within the window <highlight><bold>160</bold></highlight>. Consequently, because four preamble samples are within the window <highlight><bold>160</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, the processor <highlight><bold>40</bold></highlight> would detect the preamble <highlight><bold>74</bold></highlight> within the window <highlight><bold>160</bold></highlight> in this example. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> If the processor <highlight><bold>40</bold></highlight> finds the beginning of the preamble <highlight><bold>74</bold></highlight> within the window <highlight><bold>160</bold></highlight>, then it transitions PREAMBLE-DETECT ENABLE to an active level at time t<highlight><subscript>4 </subscript></highlight>to indicate detection of the DC-erase field <highlight><bold>158</bold></highlight>, and thus detection of the spin-up wedge <highlight><bold>152</bold></highlight><highlight><italic>a. </italic></highlight>In response to active PREAMBLE-DETECT ENABLE, the processor <highlight><bold>40</bold></highlight> implements the preamble-detection and sync-mark-recovery algorithm discussed above in conjunction with FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>8</bold></highlight>. After it has detected the preamble <highlight><bold>74</bold></highlight>, the processor <highlight><bold>40</bold></highlight> transitions PREAMBLE-DETECT ENABLE to an inactive level at time t<highlight><subscript>5</subscript></highlight>. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> If the processor <highlight><bold>40</bold></highlight> does not detect the (i.e., after it transitions PDETECT to an active level) beginning of the preamble <highlight><bold>74</bold></highlight> within the window <highlight><bold>160</bold></highlight>, then it resets the DC-erase counter (not shown) and continues searching for the DC-erase field <highlight><bold>158</bold></highlight> as discussed above. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> Still referring to <cross-reference target="DRAWINGS">FIGS. 5 and 15</cross-reference>-<highlight><bold>18</bold></highlight>, as discussed above, one can program the processor <highlight><bold>40</bold></highlight> to recover a single or multiple SSMs <highlight><bold>76</bold></highlight> before the disk-drive controller (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) allows the head-position circuit (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>) to determine an initial position of the head <highlight><bold>32</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>). In the latter case, the processor <highlight><bold>40</bold></highlight> repeats the above-described algorithm for detecting the DC-erase field <highlight><bold>158</bold></highlight> before it detects each preamble <highlight><bold>74</bold></highlight> according to the algorithm discussed above in conjunction with FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>8</bold></highlight>. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is block diagram of the servo circuit <highlight><bold>30</bold></highlight> according to an embodiment of the invention, and includes circuitry not shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. As discussed above, because the servo circuit <highlight><bold>30</bold></highlight> recovers servo data in a synchronous manner, it allows the density of the servo data on the disks <highlight><bold>20</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 4</cross-reference>) and <highlight><bold>150</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 15</cross-reference>) to be higher than other servo circuits, such as peak-detecting servo circuits, allow. For clarity, the preamp <highlight><bold>42</bold></highlight>, LPF <highlight><bold>44</bold></highlight>, gain circuit <highlight><bold>46</bold></highlight>, and filter <highlight><bold>48</bold></highlight> are included in gain and filter circuit <highlight><bold>170</bold></highlight>, and the phase and gain circuits <highlight><bold>36</bold></highlight> and <highlight><bold>38</bold></highlight> and interpolator loop <highlight><bold>54</bold></highlight> are included in the timing and gain recovery loops <highlight><bold>172</bold></highlight>. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> Still referring to <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, in addition to the circuit blocks of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the servo circuit <highlight><bold>30</bold></highlight> includes a sync-mark detector <highlight><bold>174</bold></highlight>, which is separate from the Viterbi detector <highlight><bold>56</bold></highlight>, and a decoder <highlight><bold>176</bold></highlight> for decoding the data recovered by the detectors <highlight><bold>56</bold></highlight> and <highlight><bold>174</bold></highlight>. The circuit <highlight><bold>30</bold></highlight> also includes a position-burst demodulator <highlight><bold>178</bold></highlight>, which demodulates the head-position bursts <highlight><bold>84</bold></highlight> (<cross-reference target="DRAWINGS">FIGS. 6 and 16</cross-reference>), and an interface <highlight><bold>180</bold></highlight>, which couples servo data and signals from the processor <highlight><bold>40</bold></highlight>, decoder <highlight><bold>176</bold></highlight>, and demodulator <highlight><bold>178</bold></highlight> to the disk-drive controller (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>). The sync-mark detector <highlight><bold>174</bold></highlight> and burst demodulator <highlight><bold>178</bold></highlight> are respectively discussed further in commonly owned U.S. patent application Ser. Nos. ______ (Atty. Docket No. 01-S-046 (1678-48)) entitled &ldquo;CIRCUIT AND METHOD FOR DETECTING THE PHASE OF A SERVO SIGNAL&rdquo; and ______ (Atty. Docket No. 01-S-045 (1678-47)) entitled &ldquo;CIRCUIT AND METHOD FOR DEMODULATING A SERVO POSITION BURST&rdquo;, both filed the same day as the present application, which are incorporated by reference. The decoder <highlight><bold>176</bold></highlight> may be constructed to decode servo data that is encoded according to the scheme discussed in commonly owned U.S. patent application Ser. Nos. 09/783,801, filed Feb. 14, 2001, entitled &ldquo;VITERBI DETECTOR AND METHOD FOR RECOVERING A BINARY SEQUENCE FROM A READ SIGNAL&rdquo;, or ______ (Atty. Docket No. 01-S-023 (1678-39)), entitled &ldquo;A DATA CODE AND METHOD FOR CODING DATA&rdquo;, which are incorporated by reference. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> In one embodiment the ADC <highlight><bold>50</bold></highlight>, the FIR <highlight><bold>52</bold></highlight>, and the timing and gain recovery loops <highlight><bold>172</bold></highlight> are shared with the circuitry (not shown) used to read and write application data to the disk <highlight><bold>20</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 4</cross-reference>) or disk <highlight><bold>150</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 15</cross-reference>). In another embodiment, the sync mark detector <highlight><bold>174</bold></highlight> is omitted, and the Viterbi detector <highlight><bold>56</bold></highlight> detects the SSM <highlight><bold>76</bold></highlight> (<cross-reference target="DRAWINGS">FIGS. 6 and 16</cross-reference>). </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> The servo circuit <highlight><bold>30</bold></highlight> operates as discussed above in conjunction with FIGS. <highlight><bold>4</bold></highlight>-<highlight><bold>9</bold></highlight> and <highlight><bold>15</bold></highlight>-<highlight><bold>18</bold></highlight>. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a block diagram of a disk-drive system <highlight><bold>200</bold></highlight> according to an embodiment of the invention. The disk-drive system <highlight><bold>200</bold></highlight> includes a disk drive <highlight><bold>202</bold></highlight>, which incorporates the servo circuit <highlight><bold>30</bold></highlight> of <cross-reference target="DRAWINGS">FIGS. 5 and 19</cross-reference>. The disk drive <highlight><bold>202</bold></highlight> includes the read-write head <highlight><bold>32</bold></highlight>, a write channel <highlight><bold>206</bold></highlight> for generating and driving the head <highlight><bold>32</bold></highlight> with a write signal, and a write controller <highlight><bold>208</bold></highlight> for interfacing the write data to the write channel <highlight><bold>206</bold></highlight>. The disk drive <highlight><bold>202</bold></highlight> also includes a read channel <highlight><bold>210</bold></highlight> for receiving servo and application-data read signals from the head <highlight><bold>32</bold></highlight> and for recovering data from these read signals, and includes a read controller <highlight><bold>212</bold></highlight> for organizing the read data. Together, the write and read controllers <highlight><bold>208</bold></highlight> and <highlight><bold>212</bold></highlight> compose a disk-drive controller <highlight><bold>213</bold></highlight>. The read channel <highlight><bold>210</bold></highlight> includes the servo circuit <highlight><bold>30</bold></highlight>, which receives the servo signal from the head <highlight><bold>32</bold></highlight>, detects a servo wedge&mdash;or alternatively, both a spin-up wedge and a servo wedge&mdash;on disk spin up, recovers the servo data from the servo signal, and provides the recovered servo data to a head-position circuit <highlight><bold>214</bold></highlight>. The disk drive <highlight><bold>202</bold></highlight> further includes a storage medium such as one or more disks <highlight><bold>215</bold></highlight>, each of which may contain data on one or both sides and which may be magnetic, optical, or another type of storage disk. For example, the disks <highlight><bold>215</bold></highlight> may be similar to the disk <highlight><bold>20</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> or the disk <highlight><bold>150</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 15</cross-reference>. The head <highlight><bold>32</bold></highlight> writes/reads the data stored on the disks <highlight><bold>215</bold></highlight>, and is connected to a movable support arm <highlight><bold>216</bold></highlight>. The head-position circuit <highlight><bold>214</bold></highlight> determines the position of the head <highlight><bold>32</bold></highlight> as discussed above and in U.S. patent application Ser. Nos. 09/783,801, filed Feb. 14, 2001, entitled &ldquo;VITERBI DETECTOR AND METHOD FOR RECOVERING A BINARY SEQUENCE FROM A READ SIGNAL&rdquo;, and ______ (Atty. Docket No. 01-S-045 (1678-47)), entitled &ldquo;CIRCUIT AND METHOD FOR DEMODULATING A SERVO POSITION BURST&rdquo; filed the same day as the present application, which are incorporated by reference. The head-position circuit <highlight><bold>214</bold></highlight> provides a control signal to a voice-coil motor (VCM) <highlight><bold>218</bold></highlight>, which positionally maintains/radially moves the arm <highlight><bold>216</bold></highlight> so as to positionally maintain/radially move the head <highlight><bold>32</bold></highlight> over the desired data tracks on the disks <highlight><bold>215</bold></highlight>. A spindle motor (SPM) <highlight><bold>220</bold></highlight> and a SPM control circuit <highlight><bold>222</bold></highlight> respectively rotate the disks <highlight><bold>215</bold></highlight> and maintain them at the proper rotational speed. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> The disk-drive system <highlight><bold>200</bold></highlight> also includes write and read interface adapters <highlight><bold>224</bold></highlight> and <highlight><bold>226</bold></highlight> for respectively interfacing the disk-drive controller <highlight><bold>213</bold></highlight> to a system bus <highlight><bold>228</bold></highlight>, which is specific to the system used. Typical system busses include ISA, PCI, S-Bus, Nu-Bus, etc. The system <highlight><bold>200</bold></highlight> typically has other devices, such as a random access memory (RAM) <highlight><bold>230</bold></highlight> and a central processing unit (CPU) <highlight><bold>232</bold></highlight> coupled to the bus <highlight><bold>228</bold></highlight>. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> From the foregoing it will be appreciated that, although specific embodiments of the invention have been described herein for purposes of illustration, various modifications may be made without deviating from the spirit and scope of the invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A servo circuit, comprising: 
<claim-text>a servo channel operable to recover servo data from servo wedges that identify respective data sectors on a data-storage disk; and </claim-text>
<claim-text>a processor coupled to the servo channel and operable to detect a first spin-up wedge associated with a first one of the servo wedges and then to detect the first servo wedge while the disk is attaining or after the disk attains an operating speed and before the servo channel recovers servo data from any other servo wedge. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the processor is operable to cause the servo channel to recover servo data from the first servo wedge after the processor detects the first servo wedge and before the servo channel recovers servo data from any other servo wedge. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein: 
<claim-text>the first spin-up wedge comprises a zero-frequency field; and </claim-text>
<claim-text>the processor is operable to detect the first spin-up wedge by detecting the zero-frequency field. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein: 
<claim-text>the first servo wedge comprises a preamble; and </claim-text>
<claim-text>the processor is operable to dectect the first servo wedge by detecting the preamble. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein: 
<claim-text>the first spin-up wedge comprises a zero-frequency field; </claim-text>
<claim-text>the first servo wedge comprises a preamble that follows and that is contiguous with the zero-frequency field; and </claim-text>
<claim-text>the processor is operable to dectect the first spin-up wedge by detecting the zero-frequency field and is operable to detect the first servo wedge by detecting the preamble after detecting the zero-frequency field. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein: 
<claim-text>the first servo wedge comprises a preamble and a servo synchronization mark following the preamble; </claim-text>
<claim-text>the processor is operable to dectect the first servo wedge by detecting the preamble; and </claim-text>
<claim-text>the servo channel is operable to recover the synchronization mark in response to the processor detecting the preamble. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>the first servo wedge and a second servo wedge following the first servo wedge each comprise a preamble and a servo synchronization mark following the preamble; </claim-text>
<claim-text>the processor is operable to dectect the first servo wedge by detecting the preamble of the first servo wedge; </claim-text>
<claim-text>the servo channel is operable to recover the synchronization mark of the first servo wedge in response to the processor detecting the preamble of the first servo wedge; </claim-text>
<claim-text>after detecting the first servo wedge, the processor is operable to detect the second servo wedge by detecting the preamble of the second servo wedge; and </claim-text>
<claim-text>the servo channel is operable to recover the synchronization mark of the second servo wedge in response to the processor detecting the preamble of the second servo wedge. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>the first spin-up wedge and a second spin-up wedge following the first spin-up wedge each comprise a zero-frequency field; </claim-text>
<claim-text>the first servo wedge and a second servo wedge following the one servo wedge each comprise a preamble and a servo synchronization mark following the preamble; </claim-text>
<claim-text>the processor is operable to detect the first spin-up wedge by detecting the zero-frequency field of the first spin-up wedge; </claim-text>
<claim-text>the processor is operable to dectect the first servo wedge by detecting the preamble of the first servo wedge after detecting the first spin-up wedge; </claim-text>
<claim-text>the servo channel is operable to recover the synchronization mark of the first servo wedge in response to the processor detecting the preamble of the first servo wedge; </claim-text>
<claim-text>after recovering the synchronization mark of the first servo wedge, the processor is operable to detect the second spin-up wedge by detecting the zero-frequency field of the second spin-up wedge; </claim-text>
<claim-text>the processor is operable to detect the second servo wedge by detecting the preamble of the second servo wedge after detecting the second spin-up wedge; and </claim-text>
<claim-text>the servo channel is operable to recover the synchronization mark of the second servo wedge in response to the processor detecting the preamble of the second servo wedge. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>the first spin-up wedge comprises a zero-frequency field; </claim-text>
<claim-text>the servo channel is operable to generate a zero-frequency or approximately zero-frequency read signal that represents the zero-frequency field and to sample the read signal; and </claim-text>
<claim-text>the processor is operable to, 
<claim-text>compare samples of the read signal to a threshold, and </claim-text>
<claim-text>detect the first spin-up wedge if a predetermined number of consecutive samples each have a predetermined relationship to the threshold. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>the first spin-up wedge comprises a zero-frequency field; </claim-text>
<claim-text>the servo channel is operable to generate a zero-frequency or approximately zero-frequency read signal that represents the zero-frequency field and to sample the read signal; and </claim-text>
<claim-text>the processor is operable to, 
<claim-text>compare samples of the read signal to a threshold, and </claim-text>
<claim-text>search for the first spin-up wedge until a predetermined number of consecutive samples each have a predetermined relationship to the threshold. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the first spin-up wedge is disposed within the first servo wedge. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein: 
<claim-text>the first spin-up wedge comprises a zero-frequency field; </claim-text>
<claim-text>the first servo wedge comprises a preamble; </claim-text>
<claim-text>the servo channel is operable to generate a zero-frequency or approximately zero-frequency read signal that represents the zero-frequency field and to sample the read signal; and </claim-text>
<claim-text>the processor is operable to, 
<claim-text>compare samples of the read signal to a threshold, and </claim-text>
<claim-text>detect the first spin-up wedge if the processor detects the preamble of the first servo wedge within a predetermined range of consecutive samples that have a predetermined relationship to the threshold. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein: 
<claim-text>the first spin-up wedge comprises a zero-frequency field; </claim-text>
<claim-text>the first servo wedge comprises a preamble; </claim-text>
<claim-text>the servo channel is operable to generate a zero-frequency or approximately zero-frequency read signal that represents the zero-frequency field and to sample the read signal; and </claim-text>
<claim-text>the processor is operable to, 
<claim-text>compare samples of the read signal to a threshold, and </claim-text>
<claim-text>detect the first spin-up wedge if the processor detects the preamble of the first servo wedge within a predetermined range of consecutive samples that are less than the threshold. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein: 
<claim-text>the first spin-up wedge comprises a zero-frequency field; </claim-text>
<claim-text>the first servo wedge comprises a preamble; </claim-text>
<claim-text>the servo channel is operable to generate a zero-frequency or approximately zero-frequency read signal that represents the zero-frequency field and to sample the read signal; and </claim-text>
<claim-text>the processor is operable to, 
<claim-text>compare samples of the read signal to a threshold, and </claim-text>
<claim-text>detect the first spin-up wedge if the processor detects the preamble of the first servo wedge within a predetermined window of consecutive samples that are less than or equal to the threshold. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein: 
<claim-text>the first spin-up wedge comprises a zero-frequency field; </claim-text>
<claim-text>the first servo wedge comprises a preamble; </claim-text>
<claim-text>the servo channel is operable to generate a zero-frequency or approximately zero-frequency read signal that represents the zero-frequency field and to sample the read signal; and </claim-text>
<claim-text>the processor is operable to, 
<claim-text>compare samples of the read signal to a threshold, </claim-text>
<claim-text>search for the preamble of the first servo wedge in response to a first predetermined number of consecutive samples that each have a predetermined relationship to the threshold, and </claim-text>
<claim-text>detect the first spin-up wedge if the processor detects the preamble within a second predetermined number of consecutive samples that follow the first predetermined number of consecutive samples. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein: 
<claim-text>the first spin-up wedge comprises a zero-frequency field; </claim-text>
<claim-text>the first servo wedge comprises a preamble; </claim-text>
<claim-text>the servo channel is operable to generate a zero-frequency or approximately zero-frequency read signal that represents the zero-frequency field and to sample the read signal; and </claim-text>
<claim-text>the processor is operable to, 
<claim-text>compare samples of the read signal to a threshold, </claim-text>
<claim-text>search for the preamble of the first servo wedge in response to a first predetermined number of consecutive samples that have a predetermined relationship to the threshold, and </claim-text>
<claim-text>detect the first spin-up wedge if the processor detects the preamble within a second predetermined number of consecutive samples that immediately follow the first predetermined number of consecutive samples. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein: 
<claim-text>the first spin-up wedge comprises a zero-frequency field; </claim-text>
<claim-text>the first servo wedge comprises a preamble; </claim-text>
<claim-text>the servo channel is operable to generate a zero-frequency or approximately zero-frequency read signal that represents the zero-frequency field and to sample the read signal; and </claim-text>
<claim-text>the processor is operable to, 
<claim-text>compare samples of the read signal to a threshold, </claim-text>
<claim-text>search for the preamble of the first servo wedge in response to a first predetermined number of consecutive samples that have a predetermined relationship to the threshold, and </claim-text>
<claim-text>abort the search for the preamble of the first servo wedge if the processor does not detect the preamble within a second predetermined number of consecutive samples that immediately follow the first predetermined number of consecutive samples. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein: 
<claim-text>the first servo wedge comprises a preamble; </claim-text>
<claim-text>the servo channel is operable to generate a read signal that represents the preamble and to sample the read signal; </claim-text>
<claim-text>the processor is operable to detect the first servo wedge by detecting the preamble from the samples; </claim-text>
<claim-text>the servo channel comprises an interpolator loop that acquires the timing of the samples with respect to the read signal while the processor is detecting the preamble and that begins tracking the timing of the samples a predetermined time after the processor detects the preamble; and </claim-text>
<claim-text>the processor is operable to stop the interpolator loop from tracking the timing of the samples if the processor fails to detect the preamble for at least a predetermined number of samples after the interpolator loop begins tracking the timing of the samples. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the one servo wedge comprises a binary sequence having groups of no more and no fewer than a predetermined number of consecutive bits each having a first logic level, the groups separated from each other by respective bits having a second logic level. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A servo circuit, comprising: 
<claim-text>a servo channel operable to recover servo data from servo wedges that identify respective data sectors on a data-storage disk; and </claim-text>
<claim-text>a processor coupled to the servo channel and operable to detect first and second portions of one of the servo wedges while the disk is attaining or after the disk attains an operating speed and before the servo channel recovers servo data from any other servo wedge. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference> wherein: 
<claim-text>the first portion of the one servo wedge comprises a spin-up wedge; and </claim-text>
<claim-text>the second portion of the servo wedge comprises a preamble. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The servo circuit of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference> wherein the processor is operable to detect the first portion of the one servo wedge before detecting the second portion. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A disk-drive system, comprising: 
<claim-text>a data-storage disk having a surface, data sectors at respective locations of the surface, servo wedges that each include respective servo data that identifies the location of a respective data sector, and spin-up wedges that each include spin-up data and that are respectively associated with some or all of the servo wedges; </claim-text>
<claim-text>a motor coupled to and operable to rotate the disk; </claim-text>
<claim-text>a read head operable to generate a read signal that represents the servo data and and the spin-up data, the read head having a position with respect to the surface of the data-storage disk; </claim-text>
<claim-text>a read-head positioning circuit operable to move the read head over the surface of the disk; and </claim-text>
<claim-text>a servo circuit coupled to the read head and to the read-head positioning system, the servo circuit including, 
<claim-text>a servo channel operable to recover the servo data from the servo wedges and the spin-up data from the spin-up wedges; and </claim-text>
<claim-text>a processor coupled to the servo channel and operable to detect a spin-up wedge associated with one of the servo wedges and then to detect the servo wedge while the disk is attaining or after the disk attains an operating speed and before the servo channel recovers servo data from any other servo wedge. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The disk-drive system of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference> wherein: 
<claim-text>the servo channel is operable to recover the servo data from the detected servo wedge; and </claim-text>
<claim-text>the servo circuit is operable to, 
<claim-text>determine an initial position of the read head from the recovered servo data, and </claim-text>
<claim-text>provide the initial position to the read-head positioning circuit. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The disk-drive system of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference> wherein the servo channel is operable to recover the servo data from the detected servo wedge and to provide the location of the respective data sector to the read-head positioning circuit. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The disk-drive system of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference> wherein: 
<claim-text>the servo channel is operable to recover the servo data from the detected servo wedge and to provide the location of the respective data sector to the read-head positioning circuit; and </claim-text>
<claim-text>the read-head positioning circuit is operable to determine an initial position of the read head from the location of the respective data sector. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The disk-drive system of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference> wherein the read-head position circuit and the servo circuit are unable to determine the position of the read head before the processor detects the one servo wedge. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The disk-drive system of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference> wherein the read head comprises a read-write head. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. A disk-drive system, comprising: 
<claim-text>a data-storage disk having a surface, a data sector at a location of the surface, and a servo wedge including servo data that identifies the location of the data sector; </claim-text>
<claim-text>a motor coupled to and operable to rotate the disk; </claim-text>
<claim-text>a read head operable to generate a read signal that represents the servo data and having a position with respect to the surface of the data-storage disk; </claim-text>
<claim-text>a read-head positioning system operable to move the read head over the surface of the disk; and </claim-text>
<claim-text>a servo circuit coupled to the read head and to the read-head positioning system, the servo circuit including, 
<claim-text>a servo channel operable to recover the servo data from the servo wedges; and </claim-text>
<claim-text>a processor coupled to the servo channel and operable to detect first and second portions of one of the servo wedges while the disk is attaining or after the disk attains an operating speed and before the servo channel recovers servo data from any other servo wedge. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A method, comprising: 
<claim-text>rotating a data-storage disk having a surface from a first rotational speed to a second rotational speed over a first time period, the cirumferential position of a read head relative to a location of the disk surface being unknown for at least a portion of the first time period; </claim-text>
<claim-text>during or after the first time period and while the circumferential position of the read head is unknown, 
<claim-text>detecting spin-up data, and </claim-text>
<claim-text>after detecting the spin-up data, detecting servo data that identifies a sector of the data-storage disk; and </claim-text>
</claim-text>
<claim-text>determining the circumferential position of the read head from the detected servo data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference> wherein the second rotational speed is higher than the first rotational speed. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference> wherein detecting the spin-up data comprises: 
<claim-text>sampling data from the disk surface; </claim-text>
<claim-text>counting the number of consecutive samples that have a predetermined relationship to a threshold; and </claim-text>
<claim-text>detecting the spin-up data if the number of consecutive samples equals a predetermined number. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference> wherein: 
<claim-text>detecting the spin-up data comprises, 
<claim-text>sampling data from the disk surface, and </claim-text>
<claim-text>counting the number of consecutive samples that have a predetermined relationship to a threshold; and </claim-text>
</claim-text>
<claim-text>detecting the servo data comprises, 
<claim-text>searching for the servo data if the number of consecutive samples equals a predetermined number; and </claim-text>
<claim-text>detecting the servo data if a portion of the servo data is within a predetermined sampling window following the predetermined number of consecutive samples. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference> wherein: 
<claim-text>detecting the spin-up data comprises, 
<claim-text>sampling data from the disk surface, and </claim-text>
<claim-text>counting the number of consecutive samples that have a predetermined relationship to a threshold; and </claim-text>
</claim-text>
<claim-text>detecting the servo data comprises, 
<claim-text>searching for the servo data if the number of consecutive samples equals a predetermined number; and </claim-text>
<claim-text>detecting the servo data if a portion of a servo-data preamble is within a predetermined sampling window following the predetermined number of consecutive samples. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference> wherein detecting the spin-up data and servo data comprises accurately detecting a predetermined number of spin-up wedges and servo wedges before determining the circumferential position of the read head.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>20</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002189A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002189A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002189A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002189A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002189A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002189A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002189A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002189A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002189A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002189A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002189A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002189A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002189A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030002189A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030002189A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030002189A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030002189A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
