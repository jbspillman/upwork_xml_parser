<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004925A1-20030102-D00000.TIF SYSTEM "US20030004925A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00001.TIF SYSTEM "US20030004925A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00002.TIF SYSTEM "US20030004925A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00003.TIF SYSTEM "US20030004925A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00004.TIF SYSTEM "US20030004925A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00005.TIF SYSTEM "US20030004925A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00006.TIF SYSTEM "US20030004925A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00007.TIF SYSTEM "US20030004925A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00008.TIF SYSTEM "US20030004925A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00009.TIF SYSTEM "US20030004925A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00010.TIF SYSTEM "US20030004925A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00011.TIF SYSTEM "US20030004925A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00012.TIF SYSTEM "US20030004925A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00013.TIF SYSTEM "US20030004925A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00014.TIF SYSTEM "US20030004925A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00015.TIF SYSTEM "US20030004925A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00016.TIF SYSTEM "US20030004925A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00017.TIF SYSTEM "US20030004925A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00018.TIF SYSTEM "US20030004925A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00019.TIF SYSTEM "US20030004925A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00020.TIF SYSTEM "US20030004925A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00021.TIF SYSTEM "US20030004925A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00022.TIF SYSTEM "US20030004925A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00023.TIF SYSTEM "US20030004925A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00024.TIF SYSTEM "US20030004925A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00025.TIF SYSTEM "US20030004925A1-20030102-D00025.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00026.TIF SYSTEM "US20030004925A1-20030102-D00026.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00027.TIF SYSTEM "US20030004925A1-20030102-D00027.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00028.TIF SYSTEM "US20030004925A1-20030102-D00028.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00029.TIF SYSTEM "US20030004925A1-20030102-D00029.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00030.TIF SYSTEM "US20030004925A1-20030102-D00030.TIF" NDATA TIF>
<!ENTITY US20030004925A1-20030102-D00031.TIF SYSTEM "US20030004925A1-20030102-D00031.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004925</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09995193</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20011127</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F007/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>707</class>
<subclass>001000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method, system and program product that utilize a hierarchical conceptual framework to model an environment containing a collection of items</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>09995193</doc-number>
<kind-code>A1</kind-code>
<document-date>20011127</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09702184</doc-number>
<document-date>20001031</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6473762</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-in-part-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Terry</given-name>
<family-name>Knoblock</family-name>
</name>
<residence>
<residence-us>
<city>Wylie</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Gregory</given-name>
<middle-name>G.</middle-name>
<family-name>Carlson</family-name>
</name>
<residence>
<residence-us>
<city>Plano</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Mike</given-name>
<family-name>Golobay</family-name>
</name>
<residence>
<residence-us>
<city>Dallas</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Willis</given-name>
<family-name>Mason</family-name>
</name>
<residence>
<residence-us>
<city>Rowlett</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>WORLDCOM, INC.</name-1>
<name-2>TECHNOLOGY LAW DEPARTMENT</name-2>
<address>
<address-1>1133 19TH STREET NW</address-1>
<city>WASHINGTON</city>
<state>DC</state>
<postalcode>20036</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method, system and program product for modeling an environment containing a collection of items are disclosed. In accordance with the method, an environmental hierarchy describing a model environment, a product catalog containing data describing a plurality of items that may be utilized to populate the modeled environment, and a configuration library containing data describing a spatial relationship between first and second items among the plurality of items in the product catalog are created. The modeled environment is then populated by storing, in a database, data representative of the spatial relationship between the environmental hierarchy and a collection of items including the first item. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS-REFERENCE </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present application is a continuation-in-part of U.S. patent application Ser. No. 09/702,184, filed on Oct. 31, 2000, and entitled &ldquo;System and Method to Automate Equipment Placement at Remote Sites.&rdquo; The present application is also related to the following U.S. patents, which are assigned to the assignee of the present application and incorporated herein by reference in their entireties: U.S. Pat. Nos. 5,930,779, 5,991,759, 6,098,050, 6,169,987, and 6,023,699.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> 1. Technical Field: </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The present invention relates in general to data processing and in particular to a data processing system, method and program product that utilize a hierarchical conceptual framework to model an environment containing a collection of items. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> 2. Description of the Related Art: </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Affordable technology, and in particular the availability of powerful, commercially affordable computer systems and associated data storage, has revolutionized business practices and management over the preceding decades. This revolution has affected all aspects of business, including data management in accounting, payroll, and human resources systems; business communication; business forecasting and market modeling; warehouse, supply chain and product distribution management; and facility management. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The above-referenced patents represent a significant advance in facility management by disclosing a software tool (referred to herein as SiteVu) that can be utilized not only for general site planning of an organization&apos;s physical plant, but also to specifically record, maintain and view the placement of, and information of interest associated with, specific physical assets within the physical plant. SiteVu provides these features through a hierarchical conceptual framework that enables a user to intuitively create and maintain a detailed data model of an organization&apos;s physical assets. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Although SiteVu has definite applicability to the design and management of telecommunications field sites as discussed above, the present invention recognizes that its use is by no means limited to such applications. Rather, the hierarchical conceptual framework employed by SiteVu is broadly applicable to the creation, display and management of a collection of items in a modeled environment. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The present invention provides a method, system and program product for modeling an environment containing a collection of items. In accordance with a preferred embodiment of the method of the present invention, an environmental hierarchy describing a model environment, a product catalog containing data describing a plurality of items that may be utilized to populate the modeled environment, and a configuration library containing data describing a spatial relationship between first and second items among the plurality of items in the product catalog are created. The modeled environment is then populated by storing, in a database, data representative of the spatial relationship between the environmental hierarchy and a collection of items including the first item. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself however, as well as a preferred mode of use, further objects and advantages thereof, will best be understood by reference to the following detailed description of an illustrative embodiment when read in conjunction with the accompanying drawings, wherein: </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1A</cross-reference> is a block diagram depicting an operational environment according to a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> FIGS. <highlight><bold>1</bold></highlight>B-<highlight><bold>1</bold></highlight>G are block diagrams depicting various functional components according to a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1H</cross-reference> is a block diagram depicting the components of a database according to a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram depicting a rack, shelves and modules forming a portion of an item hierarchy in one application of the present invention; </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram depicting a graphical representation of a site hierarchy in one application of the present invention; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 4A and 4B</cross-reference> together form a flowchart of a process for creating a configured shelf, according to a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a flowchart depicting a process that can be used to create a configured rack in the item hierarchy of a telecommunications environment, according to a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flowchart depicting a process that can be used to create components in the product catalog, according to a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a flowchart depicting a process that can be used to create an environmental hierarchy, according to a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a flowchart depicting a process that can be used for uniting an item from the product catalog with a level of the environmental hierarchy to create a footprint, according to a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a block diagram of a computer useful for implementing components of the present invention; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> FIGS. <highlight><bold>10</bold></highlight>A-<highlight><bold>10</bold></highlight>N are block diagrams illustrating a plurality of database tables that can be used to implement the database depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>A, according to a preferred embodiment of the present invention; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> In the figures, like reference numbers generally indicate identical, functionally similar, and/or structurally similar elements. The figure in which an element first appears is indicated by the leftmost digit(s) in the reference number. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF A PREFERRED EMBODIMENT </heading>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The present invention is directed to a data processing system, method, and program product that allow a user to construct a conceptual hierarchical framework representing a virtual or physical environment and then populate the environment with a collection of items. The present invention permits users to graphically and intuitively view and manipulate various subsets of the environment&apos;s space as well as items placed within the modeled environment. The user is also able to create and store tabular information describing the configuration of the graphical objects and the items represented by the graphical objects. The detailed description is arranged as follows: </paragraph>
<paragraph id="P-0024" lvl="1"><number>&lsqb;0024&rsqb;</number> Section I explains an exemplary embodiment of the present invention; </paragraph>
<paragraph id="P-0025" lvl="1"><number>&lsqb;0025&rsqb;</number> Section II provides an operational overview of an exemplary embodiment of the present invention; </paragraph>
<paragraph id="P-0026" lvl="1"><number>&lsqb;0026&rsqb;</number> Section III presents the architecture of the SiteVu tool suite, including an overview of the database and the software components of SiteVu; </paragraph>
<paragraph id="P-0027" lvl="1"><number>&lsqb;0027&rsqb;</number> Section IV describes an exemplary item hierarchy (i.e., an equipment rack in a telecommunications application); </paragraph>
<paragraph id="P-0028" lvl="1"><number>&lsqb;0028&rsqb;</number> Section V describes an exemplary environmental hierarchy (i.e., a site hierarchy); </paragraph>
<paragraph id="P-0029" lvl="1"><number>&lsqb;0029&rsqb;</number> Section VI describes the creation of a configured rack, including creation of a product catalog component (e.g., module, shelf or rail), creation of a shelf configuration, and the addition of modules to the shelf; </paragraph>
<paragraph id="P-0030" lvl="1"><number>&lsqb;0030&rsqb;</number> Section VII discusses the site hierarchy database; </paragraph>
<paragraph id="P-0031" lvl="1"><number>&lsqb;0031&rsqb;</number> Section VIII describes the creation of graphical objects representing components of the site hierarchy; </paragraph>
<paragraph id="P-0032" lvl="1"><number>&lsqb;0032&rsqb;</number> Section IX describes an exemplary implementation of the present invention in a computer system; </paragraph>
<paragraph id="P-0033" lvl="1"><number>&lsqb;0033&rsqb;</number> Section X provides a detailed discussion of an exemplary site hierarchy; </paragraph>
<paragraph id="P-0034" lvl="1"><number>&lsqb;0034&rsqb;</number> Section XI describes a number of additional exemplary applications of the present invention; and </paragraph>
<paragraph id="P-0035" lvl="1"><number>&lsqb;0035&rsqb;</number> Section XII is a brief conclusion. </paragraph>
<paragraph id="P-0036" lvl="7"><number>&lsqb;0036&rsqb;</number> I. Exemplary Embodiment </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> The present invention is described herein with reference to an exemplary embodiment in which a software application suite named SiteVu is executed by a data processing system having an input device and display to provide all of the features of the present invention. The description in such terms is provided for convenience only and is not intended to limit the present invention. In addition, the present invention is principally described herein as applied to the telecommunications industry. However, as made clear by the range of exemplary applications set forth in Section XI, the present invention is not limited to application within the telecommunications industry, but is instead applicable to other industries and environments. In fact, after reading the following description, other embodiments and applications of the present invention will become apparent to persons skilled in the relevant art(s). </paragraph>
<paragraph id="P-0038" lvl="7"><number>&lsqb;0038&rsqb;</number> II. Operational Environment </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1A</cross-reference> is a block diagram depicting a typical operational environment according to a preferred embodiment of the present invention. A network <highlight><bold>102</bold></highlight> is depicted in the center of <cross-reference target="DRAWINGS">FIG. 1A</cross-reference>. Network <highlight><bold>102</bold></highlight> represents any type of computer and/or telecommunications network or combination thereof, which can be used to couple a plurality of workstations <highlight><bold>104</bold></highlight> with a relational database <highlight><bold>108</bold></highlight>. In this example, each workstation <highlight><bold>104</bold></highlight> is a general-purpose computer system that executes software (referred to herein as SiteVu) that causes computer systems <highlight><bold>104</bold></highlight> to perform the functions described herein. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> In some embodiments of the present invention, network <highlight><bold>102</bold></highlight> can be a company wide intranet. In other embodiments, local area networks (LANs), or wide area networks (WANs), such as multiple LANs linked together with bridges, routers or the like, can be used as network <highlight><bold>102</bold></highlight>. In addition, network <highlight><bold>102</bold></highlight> can include switched networks and other forms of common carrier transmission lines and equipment that can link remote computers, such as the remote workstations <highlight><bold>104</bold></highlight>, to relational database <highlight><bold>108</bold></highlight>. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Also depicted in <cross-reference target="DRAWINGS">FIG. 1A</cross-reference> are file server log <highlight><bold>103</bold></highlight> and a storage device <highlight><bold>101</bold></highlight> storing architectural drawings. In a preferred embodiment, each computer system <highlight><bold>104</bold></highlight> executes software that performs computer-aided drafting and design (CADD) functions. As described below, the CADD software is controlled by the SiteVu program in a preferred embodiment of the present invention. In this example, architectural drawings may be stored on local storage devices in each of workstations <highlight><bold>104</bold></highlight> or in a central file server, such as file server <highlight><bold>103</bold></highlight>. This aspect of the present invention is described below. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> In this example, relational database <highlight><bold>108</bold></highlight> is coupled to a database server <highlight><bold>106</bold></highlight>. Relational database <highlight><bold>108</bold></highlight> can be implemented, for example, with an Oracle relational database, supplied by Oracle Corporation. Further, Microsoft Windows&reg; (available from Microsoft Corporation of Redmond, Wash.) can be used as the operating system for computer systems <highlight><bold>104</bold></highlight> used to execute the SiteVu suite (including the SiteVu placement tool) and the CADD programs. Finally, in a preferred embodiment, the CADD program used is Microstation CADD, manufactured by Bentley Systems, Inc. </paragraph>
<paragraph id="P-0043" lvl="7"><number>&lsqb;0043&rsqb;</number> III. SiteVu Architecture </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> FIGS. <highlight><bold>1</bold></highlight>B-<highlight><bold>1</bold></highlight>H depict an example of an architecture of the SiteVu program and associated database, according to a preferred embodiment of the present invention. Specifically, <cross-reference target="DRAWINGS">FIG. 1H</cross-reference> illustrates logical database components, and FIGS. <highlight><bold>1</bold></highlight>B-<highlight><bold>1</bold></highlight>G depict exemplary SiteVu components and their associated inputs and outputs. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> A. Logical Database Components </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> Referring first to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>H, the logical components of database <highlight><bold>108</bold></highlight> are depicted according to a preferred embodiment of the present invention. Specifically, in this example, database <highlight><bold>108</bold></highlight> comprises a site hierarchy repository <highlight><bold>124</bold></highlight>; a product catalog <highlight><bold>126</bold></highlight>; a configuration library <highlight><bold>128</bold></highlight>; a placement library <highlight><bold>130</bold></highlight>; user security <highlight><bold>132</bold></highlight>; pick lists <highlight><bold>134</bold></highlight>; connections <highlight><bold>136</bold></highlight>; and power tables <highlight><bold>138</bold></highlight>. A more detailed description of a database <highlight><bold>108</bold></highlight> for telecommunications applications is subsequently described below in section VIII with reference to FIGS. <highlight><bold>10</bold></highlight>A-<highlight><bold>10</bold></highlight>N. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> B. SiteVu Components </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> Referring now to FIGS. <highlight><bold>1</bold></highlight>B-<highlight><bold>1</bold></highlight>G exemplary SiteVu components and their associated inputs and outputs are illustrated. </paragraph>
<paragraph id="P-0049" lvl="2"><number>&lsqb;0049&rsqb;</number> 1. Overview of the Components </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> As indicated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>B, SiteVu central database <highlight><bold>108</bold></highlight> is preferably a relational database management system. The SiteVu tool (<cross-reference target="DRAWINGS">FIG. 1B</cross-reference>) comprises the following components: SiteVu Power Pages (SVPP) <highlight><bold>110</bold></highlight>; SiteVu Rackface tool (SVRF) <highlight><bold>112</bold></highlight>; SiteVu Administrative tool (SVAD) <highlight><bold>114</bold></highlight>; SiteVu Placement tool (SVPL) <highlight><bold>116</bold></highlight>, and SiteVu Report Generator (SVRP) <highlight><bold>119</bold></highlight>. </paragraph>
<paragraph id="P-0051" lvl="2"><number>&lsqb;0051&rsqb;</number> 2. Power Page Tool </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>C, power page <highlight><bold>110</bold></highlight> reads data from and stores data in database <highlight><bold>108</bold></highlight>. Power page <highlight><bold>110</bold></highlight> provides power estimates for remote field sites. In a preferred embodiment, a web browser <highlight><bold>111</bold></highlight> is used to input data into power page <highlight><bold>110</bold></highlight> from workstation <highlight><bold>104</bold></highlight> and to output data from power page <highlight><bold>110</bold></highlight> to workstation <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0053" lvl="2"><number>&lsqb;0053&rsqb;</number> 3. The Rackface Tool </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> As depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>D, rackface tool <highlight><bold>112</bold></highlight> reads data from and stores data in database <highlight><bold>108</bold></highlight>. Rackface tool <highlight><bold>112</bold></highlight> is used to define components for product catalog <highlight><bold>126</bold></highlight>. Further, rackface tool <highlight><bold>112</bold></highlight> is used to define configured shelves using empty shelves and modules from product catalog <highlight><bold>126</bold></highlight> and store configured shelves in the configuration library <highlight><bold>128</bold></highlight>. In addition, rackface tool <highlight><bold>112</bold></highlight> is used to define configured racks from rails and configured shelves from the product catalog <highlight><bold>126</bold></highlight> and configuration library <highlight><bold>128</bold></highlight>, respectively. Such configured racks (also referred to as racks), are stored in configuration library <highlight><bold>128</bold></highlight>. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> In addition, rackface tool <highlight><bold>112</bold></highlight> is used to operate on footprints. As stated, footprints are racks that have been placed in remote sites via placement tool <highlight><bold>116</bold></highlight> (described below). Specifically, in a preferred embodiment, rackface tool <highlight><bold>112</bold></highlight> is used to display information about footprints and to replace one footprint with another footprint, as described below. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> In a preferred embodiment, rackface tool <highlight><bold>112</bold></highlight> is implemented using the Microsoft Windows operating system. Thus, Windows Application Programming Interface <highlight><bold>113</bold></highlight> is used to implement the functions provided by the rackface tool <highlight><bold>112</bold></highlight> on a workstation <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1D</cross-reference> depicts various types of data used by rackface tool <highlight><bold>112</bold></highlight>, according to a preferred embodiment of the present invention. As indicated by the data-in list <highlight><bold>120</bold></highlight>, rackface tool <highlight><bold>112</bold></highlight> reads pick lists <highlight><bold>134</bold></highlight> from database <highlight><bold>108</bold></highlight>. As described in further detail below, a pick list is a database table that comprises a list of valid values for particular data fields within database <highlight><bold>108</bold></highlight>. Preferably, pick list tables are used during a data entry process to provide users with a drop-down list box, or the like, comprising textual representations of predefined values that can be specified for particular data fields. Note that the term &ldquo;pick list&rdquo; is used herein to describe a pick list table in database <highlight><bold>108</bold></highlight>. However, the term is also used herein to describe the drop-down list box that is associated with a pick list table and used during a data entry process, as described above. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> In addition, rackface tool <highlight><bold>112</bold></highlight> reads data from the product catalog <highlight><bold>126</bold></highlight> to create shelf configurations that are stored in the configuration library <highlight><bold>128</bold></highlight>. Further, configured shelf data from configuration library <highlight><bold>128</bold></highlight> is used to create rack configurations that are also stored in configuration library <highlight><bold>128</bold></highlight>. Site hierarchy data are read from the site hierarchy repository <highlight><bold>124</bold></highlight> and used to replace generic footprints with manufacturer-specific footprints. Further, placement data are read from the placement library and used to display footprint information and replace generic and manufacturer-specific footprints, as described below. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> User and security data <highlight><bold>132</bold></highlight> are read by rackface tool <highlight><bold>112</bold></highlight> to determine access rights and the like for particular users. In addition, placement data are read from the placement library <highlight><bold>130</bold></highlight> when rackface tool <highlight><bold>112</bold></highlight> replaces generic footprints, as described below. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> Examples of data output from rackface tool <highlight><bold>112</bold></highlight>, as indicated by data-out list <highlight><bold>122</bold></highlight>, include product catalog data, configured shelves data and configured rack data. For example, rackface tool <highlight><bold>112</bold></highlight> is used to create components for product catalog <highlight><bold>126</bold></highlight>. An example of a process that can be used to create components in product catalog <highlight><bold>126</bold></highlight> is described below with reference to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Similarly, rackface tool <highlight><bold>112</bold></highlight> is used to create entries in the configuration library <highlight><bold>128</bold></highlight>. An example of a process that can be used to create data entries for configuration library <highlight><bold>128</bold></highlight> is described below with reference to <cross-reference target="DRAWINGS">FIGS. 4A, 4B</cross-reference> and <highlight><bold>6</bold></highlight>. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> Another example of data output from rackface tool <highlight><bold>112</bold></highlight> includes data used to update placement library <highlight><bold>130</bold></highlight>. For example, placement library <highlight><bold>130</bold></highlight> is updated when a generic footprint is replaced with a manufacturer-specific footprint, as described below. </paragraph>
<paragraph id="P-0063" lvl="2"><number>&lsqb;0063&rsqb;</number> 4. Administrative Tool </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>E, administrative tool <highlight><bold>114</bold></highlight> reads data from and stores data in database <highlight><bold>108</bold></highlight>. Administrative tool <highlight><bold>114</bold></highlight> is used to create and update pick lists <highlight><bold>134</bold></highlight>, user security data <highlight><bold>132</bold></highlight>, and site hierarchy repository <highlight><bold>124</bold></highlight>. In a preferred embodiment, administrative tool <highlight><bold>114</bold></highlight> is implemented using the Windows operating system. Thus, Windows Application Programming Interface <highlight><bold>115</bold></highlight> is used to implement the functions provided by administration tool <highlight><bold>114</bold></highlight> on a workstation <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1E</cross-reference> depicts various types of data used by administrative tool <highlight><bold>114</bold></highlight> according to a preferred embodiment of the present invention. As indicated by data-in list <highlight><bold>120</bold></highlight>, administrative tool <highlight><bold>114</bold></highlight> reads pick lists <highlight><bold>114</bold></highlight> and user security data <highlight><bold>132</bold></highlight> from database <highlight><bold>108</bold></highlight>. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> As indicated by data-out list <highlight><bold>126</bold></highlight>, administrative tool <highlight><bold>114</bold></highlight> creates and updates pick lists <highlight><bold>134</bold></highlight> and user security data <highlight><bold>132</bold></highlight>. In addition, this tool can be used to create part of the site hierarchy that is stored in site hierarchy repository <highlight><bold>124</bold></highlight>, as described below. Specifically, the sites, buildings (or structures) and the non-graphical portion of the floor level hierarchies, if any, can be created utilizing administrative tool <highlight><bold>114</bold></highlight>. </paragraph>
<paragraph id="P-0067" lvl="2"><number>&lsqb;0067&rsqb;</number> 5. Placement Tool </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> As indicated by <cross-reference target="DRAWINGS">FIG. 1</cross-reference>F, placement tool <highlight><bold>116</bold></highlight> reads data from and stores data to database <highlight><bold>108</bold></highlight>. Specifically, placement tool <highlight><bold>116</bold></highlight> can be used to create footprints (i.e., equipment placed on the floor space) by placing racks in remote sites. Such data are stored in placement library <highlight><bold>130</bold></highlight>. In a preferred embodiment, placement tool <highlight><bold>116</bold></highlight> is also implemented using the Windows operating system. In addition, graphics are provided by a CADD program, such as Microstation CADD <highlight><bold>117</bold></highlight>, as previously described. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1F</cross-reference> depicts the various types of data used by placement tool <highlight><bold>116</bold></highlight>, according ling to a preferred embodiment of the present invention. As indicated by data-in list <highlight><bold>128</bold></highlight>, placement tool reads pick lists <highlight><bold>134</bold></highlight>, user and security data <highlight><bold>132</bold></highlight>, site hierarchy data <highlight><bold>124</bold></highlight>, placement data <highlight><bold>130</bold></highlight>, configured rack data <highlight><bold>128</bold></highlight>, and power plant definition data <highlight><bold>138</bold></highlight> from database <highlight><bold>108</bold></highlight>. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> As indicated by data-out list <highlight><bold>130</bold></highlight>, placement tool <highlight><bold>116</bold></highlight> uses a site hierarchy (e.g., from a site down to a floor) established by administrative tool <highlight><bold>114</bold></highlight> to create graphical and database representations of remote sites, buildings, floor, zones, rows (specifically row segments), and footprints. Placement tool <highlight><bold>116</bold></highlight> can also be used to update both the graphical representations and the database data associated with these objects. Therefore, the tool can be used to update site hierarchy data <highlight><bold>124</bold></highlight>, configuration data <highlight><bold>128</bold></highlight>, pick list data <highlight><bold>134</bold></highlight>, and placement data <highlight><bold>130</bold></highlight>. </paragraph>
<paragraph id="P-0071" lvl="2"><number>&lsqb;0071&rsqb;</number> 6. Report Generator </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> As indicated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>G, report generator <highlight><bold>119</bold></highlight> reads data from database <highlight><bold>108</bold></highlight> to generate reports. In the illustrated embodiment, report generator <highlight><bold>119</bold></highlight> is implemented using Microsoft Access <highlight><bold>121</bold></highlight>. Reports can be printed on a printer <highlight><bold>123</bold></highlight>. </paragraph>
<paragraph id="P-0073" lvl="7"><number>&lsqb;0073&rsqb;</number> IV. Equipment Rack </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> As noted above, in telecommunications applications of SiteVu, network equipment to be managed within remote sites is typically arranged and mounted in equipment racks. <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is an illustration depicting a typical equipment rack <highlight><bold>202</bold></highlight>. Equipment rack <highlight><bold>202</bold></highlight> comprises a plurality of shelves <highlight><bold>204</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>204</bold></highlight><highlight><italic>f </italic></highlight>(generally <highlight><bold>204</bold></highlight>). In this example, shelf <highlight><bold>204</bold></highlight><highlight><italic>a </italic></highlight>comprises a plurality of vertically positioned slots <highlight><bold>208</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><bold>208</bold></highlight><highlight><italic>o </italic></highlight>(generally <highlight><bold>208</bold></highlight>). Typically circuit cards, such as circuit card <highlight><bold>214</bold></highlight>, are installed in slots <highlight><bold>208</bold></highlight>. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> As described below with reference to <cross-reference target="DRAWINGS">FIGS. 4A and 4B</cross-reference>, data related to particular modules that can be used to configure shelves <highlight><bold>208</bold></highlight>, according to a preferred embodiment of the present invention, are stored in product catalog <highlight><bold>126</bold></highlight>. For example, circuit card <highlight><bold>214</bold></highlight> is an example of a type of module that is preferably represented in product catalog <highlight><bold>126</bold></highlight>. Other examples of modules can be represented in product catalog <highlight><bold>126</bold></highlight> are workstation <highlight><bold>210</bold></highlight> and modem <highlight><bold>206</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, modules <highlight><bold>206</bold></highlight>, <highlight><bold>210</bold></highlight> and <highlight><bold>214</bold></highlight> belong to the configuration of shelves <highlight><bold>208</bold></highlight>, according to a preferred embodiment of the present invention. </paragraph>
<paragraph id="P-0076" lvl="7"><number>&lsqb;0076&rsqb;</number> V. Environmental Hierarchy </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram that graphically illustrates an example of an environmental hierarchy (in this case site hierarchy) that can be utilized to represent a virtual or physical environment, as previously described. The site hierarchy shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> comprises a floor (e.g., of a building) <highlight><bold>302</bold></highlight>, three zones <highlight><bold>304</bold></highlight> within floor <highlight><bold>302</bold></highlight>, four planning units <highlight><bold>306</bold></highlight> within various zones <highlight><bold>304</bold></highlight>, and a plurality of row segments <highlight><bold>308</bold></highlight> within each planning unit <highlight><bold>306</bold></highlight>. As previously described, each site hierarchy level shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is preferably represented as a polygonal graphical shape that completely encloses the lower site hierarchy level(s), if any, contained therein. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> In the illustrated exemplary embodiment, zones typically represent physical locations in which equipment of a particular class is placed. In a preferred embodiment, racks cannot be placed unless the equipment class of the rack matches the equipment class of the zone in which the rack is being placed. This restriction can be overridden, however, by a user with &ldquo;superuser&rdquo; permissions. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> In this example, planning units <highlight><bold>306</bold></highlight> are specified so that multiple users can define row segments <highlight><bold>308</bold></highlight>, in the same zone <highlight><bold>304</bold></highlight>, at the same time. In a preferred embodiment, database <highlight><bold>108</bold></highlight> is shared by multiple users. However, in order to maintain data integrity, certain precautions must be taken. In this example, when a user is in the process of defining rows and placing row segments <highlight><bold>308</bold></highlight>, via placement tool <highlight><bold>116</bold></highlight>, as described below, other users are prevented from accessing certain portions of site hierarchy repository <highlight><bold>124</bold></highlight>. In particular, the site hierarchy level immediately above the row level being defined is preferably locked. Because of this locking, planning units <highlight><bold>306</bold></highlight> are implemented in the site hierarchy between row levels <highlight><bold>308</bold></highlight> and zone levels <highlight><bold>304</bold></highlight>. As a result, planning unit <highlight><bold>306</bold></highlight> is locked from other users instead of the zone level <highlight><bold>304</bold></highlight>. In this manner, several users can work simultaneously to define row segments <highlight><bold>308</bold></highlight> within the same zone <highlight><bold>304</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> Further, in this example, footprints can only be created in row segments <highlight><bold>308</bold></highlight>. As described below, a physical row in a site may comprise one or more row segments <highlight><bold>308</bold></highlight>. In the simple example shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, there is a one-to-one correspondence between physical rows and row segments <highlight><bold>308</bold></highlight>. However, a site hierarchy level called a row segment <highlight><bold>308</bold></highlight> is used in a preferred embodiment of the present invention to prevent users from placing racks in areas that have physical obstructions. For example, suppose a physical obstruction, such as a building support column, is present within a particular row in a field site. In this case, the physical row is represented by two row segments that are placed to avoid the obstruction. In this fashion, since racks can only be placed within row segments <highlight><bold>308</bold></highlight>, a user cannot inadvertently place a rack in the same position as the obstruction. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> As noted above, an implementation of the present invention provides a means for defining components, including modules, shelves and rails, which are stored in product catalog <highlight><bold>126</bold></highlight>. Preferably, detailed information pertaining to each component within the product catalog <highlight><bold>126</bold></highlight> is defined during a data entry process. </paragraph>
<paragraph id="P-0082" lvl="7"><number>&lsqb;0082&rsqb;</number> VI. Creating Configured Racks From Product Catalog Components </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> A. Creating a Product Catalog Item </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flowchart depicting an example of a data entry process that can be used to create items in product catalog <highlight><bold>126</bold></highlight> according to a preferred embodiment of the present invention. Specifically, in a preferred embodiment, this process is performed via rackface tool <highlight><bold>112</bold></highlight> of SiteVu. The process begins with step <highlight><bold>602</bold></highlight>. In step <highlight><bold>602</bold></highlight>, a user selects the component type. In this example, component types include modules, shelves and racks. Once a component type is selected, control passes to step <highlight><bold>604</bold></highlight>. In step <highlight><bold>604</bold></highlight>, the user specifies values for each attribute presented in a predefined list of attributes that are applicable to the selected component type. Preferably, a different predefined list of attributes is presented for each component type. Thus, a particular list of attributes is presented to the user, depending on the type of component selected in step <highlight><bold>602</bold></highlight>. Generally, values for attributes are specified by either typing data directly into data entry fields or by selecting one or more predefined items from a pick list associated with the data attribute. It should also be noted that enhanced flexibility is provided by supporting definition of component attributes by a user. The user may also create appropriate predefined attribute values and constraints for attribute values. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> Examples of attributes that can be specified in step <highlight><bold>604</bold></highlight> include identifying attributes, physical attributes, electrical and connection attributes and status attributes. Identifying attributes include, for example, manufacturer&apos;s name, manufacturer&apos;s model number, service provider&apos;s identifier, bar code identifier, manufacturer&apos;s part number, manufacturer&apos;s description, face label, equipment class code and equipment subclass code. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> Physical attributes generally include height, width, depth, and weight. Typical electrical attributes include voltage type, a voltage quantity, current and current quantity. Further, in a preferred embodiment, additional data fields are included that indicate whether or not the attributes have been completely specified. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> In step <highlight><bold>606</bold></highlight>, the user specifies a unique identifier for the newly created component. Next, step <highlight><bold>608</bold></highlight> indicates the component is stored in product catalog <highlight><bold>126</bold></highlight>. The process ends with step <highlight><bold>610</bold></highlight>. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> B. Creating a Shelf Configuration </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4A</cross-reference> is a flowchart depicting a process that can be used to create a shelf configuration, according to a preferred embodiment of the present invention. Specifically, this process is performed by rackface tool <highlight><bold>112</bold></highlight>, according to a preferred embodiment of the present invention. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> The process begins with step <highlight><bold>401</bold></highlight>. In step <highlight><bold>404</bold></highlight>, the user specifies a unique name for the new shelf configuration. Typically, this name must be unique in database <highlight><bold>108</bold></highlight>. In addition, values are specified for required fields. For example, in a preferred embodiment, required fields include a manufacturer, an equipment class and an equipment subclass. Note that in a preferred embodiment, a value for manufacturer or &ldquo;generic&rdquo; is used for generic racks as previously described. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> Next, in step <highlight><bold>406</bold></highlight>, a pick list comprising a list of predefined components from product catalog <highlight><bold>126</bold></highlight> is displayed to the user. Thus, components that have been created according to the process depicted in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> are listed in step <highlight><bold>406</bold></highlight>. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> Specifically, in this example, a list of shelf components is presented to the user. In a preferred embodiment, sort, find and filter options are provided to assist the user in finding a particular component listed in product catalog <highlight><bold>126</bold></highlight>. In any case, the user is prompted to select a particular shelf from the pick list presented in step <highlight><bold>406</bold></highlight>. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> Next, as step <highlight><bold>408</bold></highlight> indicates, if a desired shelf cannot be found in product catalog <highlight><bold>126</bold></highlight>, control passes to step <highlight><bold>410</bold></highlight>. This can occur for example, if a user desires to use a particular shelf that has not yet been created via the data entry process depicted in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. Accordingly, the user has the option to create a new product catalog component as indicated by step <highlight><bold>410</bold></highlight>. Process steps that can be used to create a product catalog component <highlight><bold>410</bold></highlight> are presented in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, as previously described. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> On the other hand, as indicated by step <highlight><bold>408</bold></highlight>, if the pick list in step <highlight><bold>406</bold></highlight> contains the desired shelf component, the user selects the shelf component in step <highlight><bold>412</bold></highlight>. Control then passes to step <highlight><bold>418</bold></highlight>. In step <highlight><bold>418</bold></highlight>, the user adds modules to the selected shelf. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> C. Adding Modules to a Shelf </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> A process that can be used to add modules to a selected shelf is presented in <cross-reference target="DRAWINGS">FIG. 4B</cross-reference>. The process begins with step <highlight><bold>420</bold></highlight>. In step <highlight><bold>420</bold></highlight> the user is presented with a pick list that contains a list of predefined modules from product catalog <highlight><bold>126</bold></highlight>. In a preferred embodiment, sort, find and filter options are provided to assist the user in finding a particular module from product catalog <highlight><bold>126</bold></highlight>. Examples of predefined module types include circuit cards <highlight><bold>214</bold></highlight>, computer terminals <highlight><bold>210</bold></highlight>, and other equipment, such as modem <highlight><bold>206</bold></highlight>. Modules are components that are generally installed on shelves <highlight><bold>208</bold></highlight>. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> As step <highlight><bold>422</bold></highlight> indicates, if the desired module is included in the list presented in step <highlight><bold>420</bold></highlight> control passes to step <highlight><bold>424</bold></highlight>, where the user selects the module. If not, once again the user has the option to create a product catalog component, as indicated by step <highlight><bold>410</bold></highlight>. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> After a module has been selected in step <highlight><bold>424</bold></highlight>, control passes to step <highlight><bold>426</bold></highlight>. In step <highlight><bold>426</bold></highlight>, the selected module is placed in the first available slot <highlight><bold>208</bold></highlight> on the configured shelf <highlight><bold>204</bold></highlight>. Next, as step <highlight><bold>428</bold></highlight> indicates, the user is presented with a graphical representation of the shelf and the module as selected from steps <highlight><bold>412</bold></highlight> and <highlight><bold>424</bold></highlight>, respectively. Control then passes to step <highlight><bold>430</bold></highlight>. In step <highlight><bold>430</bold></highlight>, the user has the option to modify the shelf. As step <highlight><bold>434</bold></highlight> indicates, this includes for example, adding, moving and deleting modules. In addition, the user can list information about the configured shelf. As indicated by step <highlight><bold>434</bold></highlight>, if the user chooses to add more modules to the shelf, control passes to step <highlight><bold>420</bold></highlight>, and steps <highlight><bold>420</bold></highlight>-<highlight><bold>430</bold></highlight> are repeated. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> As stated above, in a preferred embodiment, users edit a configured shelf in step <highlight><bold>434</bold></highlight> by directly manipulating graphical representations of the selected modules from step <highlight><bold>428</bold></highlight>. For example, in one implementation, users &ldquo;drag&rdquo; graphical representations of the selected modules to particular locations within the graphical representation of the selected shelf. Preferably, a mouse or other pointing device is used to accomplish this task. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> After the user has completed modifying the shelf, control passes to step <highlight><bold>438</bold></highlight>. In step <highlight><bold>438</bold></highlight>, the configured shelf is stored in configuration library <highlight><bold>128</bold></highlight>, and the process ends at step <highlight><bold>440</bold></highlight>. In a preferred embodiment, the user also has the option to store the shelf as a &ldquo;work-in-progress&rdquo; to be completed later. In addition, other status such as &ldquo;pending approval,&rdquo; &ldquo;standard,&rdquo; or &ldquo;special&rdquo; can be specified. Preferably, only configured shelves with a status of &ldquo;approved standard&rdquo; (i.e., standard configured shelves that have been approved) or &ldquo;special&rdquo; can be used in a configured rack. After one or more shelves have been configured and stored in the configuration library <highlight><bold>128</bold></highlight>, according to the process in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>A, the configured shelves can be used to create configured racks. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> D. Creating a Configured Rack </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a flowchart illustrating a process that can be used to create a configured rack according to a preferred embodiment of the present invention. The process begins with step <highlight><bold>501</bold></highlight>. In step <highlight><bold>501</bold></highlight>, the user specifies a name for the configured rack. In addition, required fields such as a description, a manufacturer, a class and a subclass are preferably specified in step <highlight><bold>501</bold></highlight>. In step <highlight><bold>502</bold></highlight>, a list of predefined rails from product catalog <highlight><bold>126</bold></highlight> is presented to the user. In a preferred embodiment, sort, find and filter options are provided to assist the user in finding a particular rail within product catalog <highlight><bold>126</bold></highlight>. In any case, the user is prompted to select a rail from the pick list presented in step <highlight><bold>502</bold></highlight>. As step <highlight><bold>504</bold></highlight> indicates, if the desired rail is included in the list presented in step <highlight><bold>504</bold></highlight>, control passes to step <highlight><bold>506</bold></highlight>, where the user selects the rail. If not, once again the user has the option to create a rail for the product catalog <highlight><bold>126</bold></highlight> as indicated by step <highlight><bold>410</bold></highlight>. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> If a rail is selected in step <highlight><bold>506</bold></highlight>, control passes to step <highlight><bold>508</bold></highlight>. In step <highlight><bold>508</bold></highlight>, the user is presented with a list of the available configured shelves from configuration library <highlight><bold>128</bold></highlight>. In a preferred embodiment, only shelves that are compatible with the selected rail are presented. Further, as previously noted, in a preferred embodiment, only configured shelves having a status of &ldquo;approved standard&rdquo; or &ldquo;special&rdquo; will be presented in the list in step <highlight><bold>508</bold></highlight>. Note that the configured shelves presented in the pick list in step <highlight><bold>508</bold></highlight> are shelves that have been configured according to the process depicted in <cross-reference target="DRAWINGS">FIGS. 4A and 4B</cross-reference>, as previously described. In step <highlight><bold>510</bold></highlight>, the user selects a configured shelf from the pick list presented in step <highlight><bold>508</bold></highlight>. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> In step <highlight><bold>512</bold></highlight>, a graphical representation of the selected shelf and rail is presented to the user. This graphical representation is presented to allow the user to directly manipulate and modify the configured rack as described below with reference to step <highlight><bold>518</bold></highlight>. In step <highlight><bold>514</bold></highlight>, the user has the option to modify the rack. As step <highlight><bold>518</bold></highlight> indicates, this includes for example, adding, moving and deleting shelves. In addition, the user can list information about the configured rack. As indicated by step <highlight><bold>518</bold></highlight>, if the user wishes to add additional shelves to the rack, control passes to step <highlight><bold>508</bold></highlight>, and steps <highlight><bold>508</bold></highlight>-<highlight><bold>514</bold></highlight> are repeated. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> As stated above, in a preferred embodiment, users modify a configured rack in step <highlight><bold>518</bold></highlight> by directly manipulating the graphical representations of the selected shelves from step <highlight><bold>512</bold></highlight>. For example, in one implementation, users &ldquo;drag&rdquo; graphical representations of the selected shelves to particular locations within the graphical representation of the selected rail. After racks have been configured, for example, by using the process depicted by the flowchart in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the racks can be placed within a site. The explanation of how an environment hierarchy (e.g., a site hierarchy) is built and how graphical objects (such as racks) are placed within the environmental hierarchy is presented in sections VIII and X below. </paragraph>
<paragraph id="P-0106" lvl="7"><number>&lsqb;0106&rsqb;</number> VII. Database </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> A. Overall View of the Database </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10A</cross-reference> is a block diagram illustrating a plurality of database tables that can be used to implement database <highlight><bold>108</bold></highlight> in a telecommunications application according to a preferred embodiment of the present invention. In this exemplary application of a preferred embodiment, a relational database is used to implement database <highlight><bold>108</bold></highlight>. However, in other embodiments, different types of databases can be used. An expanded version of the block diagram depicted in <cross-reference target="DRAWINGS">FIG. 10A</cross-reference> is also depicted in FIGS. <highlight><bold>10</bold></highlight>C-<highlight><bold>10</bold></highlight>N. <cross-reference target="DRAWINGS">FIG. 10B</cross-reference> shows how FIGS. <highlight><bold>10</bold></highlight>C-<highlight><bold>10</bold></highlight>N are related to each other to form the block diagram depicted in <cross-reference target="DRAWINGS">FIG. 10A</cross-reference>. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> B. Remote Sites, Power Plants, Responsible Departments, and States </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 10</cross-reference>C, there are illustrated a number of boxes that each represent a specific database table. Accordingly, each database table comprises the names of specific data fields that are defined for each table according to a preferred embodiment of the present invention. For example, table <highlight><bold>1004</bold></highlight> represents remote sites in a portion of database <highlight><bold>108</bold></highlight> referred to above as site hierarchy repository <highlight><bold>124</bold></highlight>. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> In this example, the name of each data field is descriptive of the type of data it represents. For example, the first three data fields in site table <highlight><bold>1004</bold></highlight> are named SITE ID, SITE_CD and SITE_TYP_CD, respectively. These three data fields hold information related to a site identification number, a site code and a site-type code for each site stored in site table <highlight><bold>1004</bold></highlight>. As such, for the most part, by reading the descriptive names of the data fields illustrated in FIGS. <highlight><bold>10</bold></highlight>C-<highlight><bold>10</bold></highlight>N, the function and purpose of each data field will be apparent to those skilled in the relevant arts. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> Typically, data fields in a relational database <highlight><bold>108</bold></highlight> are conceptualized as columns in a database table. Likewise, data entries stored therein are conceptualized as rows in a database table. Thus, the term row is used herein to describe a single data entry within a database table. Accordingly, the term row and the term entry are synonymous. For example, a single row (or entry) in the site database table <highlight><bold>1004</bold></highlight> represents data describing the details of a single remote site. A complete description of the remote site comprises specific values for each of the data fields associated with database table <highlight><bold>1004</bold></highlight>. However, it is generally not necessary to provide values for every data field associated with a database table. This choice generally depends on each specific implementation of the present invention, which will typically define data fields as being either required or optional. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> The lines interconnecting database tables shown in FIGS. <highlight><bold>10</bold></highlight>C-<highlight><bold>10</bold></highlight>N represent relationships among tables. It should be noted that for the most part, the database tables shown in FIGS. <highlight><bold>10</bold></highlight>C-<highlight><bold>10</bold></highlight>N are self-explanatory to those skilled in the relevant art(s). Accordingly, after reading the brief description below and examining FIGS. <highlight><bold>10</bold></highlight>C-<highlight><bold>10</bold></highlight>N, it would be apparent to those skilled in the relevant art(s) how to implement database <highlight><bold>108</bold></highlight> for various application of SiteVu. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> As stated, interconnections between database tables shown in FIGS. <highlight><bold>10</bold></highlight>C-<highlight><bold>10</bold></highlight>N represent relationships among the tables in database <highlight><bold>108</bold></highlight>. For example, a line <highlight><bold>1003</bold></highlight> is shown connecting site table <highlight><bold>1004</bold></highlight> to plant table <highlight><bold>1002</bold></highlight>. In this example, plant table <highlight><bold>1002</bold></highlight> represents power plants that are installed in each site. The circle at the end of line <highlight><bold>1003</bold></highlight> represents a one-to-many relationship between the rows of site table <highlight><bold>1004</bold></highlight> and the rows of plant table <highlight><bold>1006</bold></highlight>. Accordingly, each entry in the site table <highlight><bold>1004</bold></highlight> may be associated with more than one entry in plant table <highlight><bold>1006</bold></highlight>. In other words, each site may have more than one power plant installed therein. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> Tables <highlight><bold>1006</bold></highlight> and <highlight><bold>1008</bold></highlight> represents pick list tables for specific data fields within site table <highlight><bold>1004</bold></highlight>. Specifically, pick list tables <highlight><bold>1006</bold></highlight> are associated with data fields used to define a responsible department and a geographical state for a particular site listed in the table <highlight><bold>1004</bold></highlight>. In this example, pick list tables comprise a list of valid values that are used to fill in particular data fields. A pick list table, such as the pick list table <highlight><bold>1008</bold></highlight>, is used to assist in the data entry process. Typically, a pick list table is associated with one or more data fields. For example, pick list table <highlight><bold>1008</bold></highlight> is associated with a data field STATE_CD within table <highlight><bold>1004</bold></highlight> (as depicted by dotted line <highlight><bold>1005</bold></highlight>). Preferably, pick list tables are used during data entry to provide users with a drop-down list box, or the like, comprising textual representations of predefined values that can be specified for the row or rows, associated with the pick list table. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> Accordingly, using the example described above, a pick list comprising states containing remote sites is presented to the user during a data entry phase. Preferably, after the user selects an item from the pick list (in this case the name of a state), the associated value is automatically stored in the associated row within the database table. Typically, in such cases, users are restricted to values contained in the pick list tables. That is, for such data fields that have pick lists associated with them, values other than those contained in the pick list maybe considered invalid. However, this choice depends on particular implementations of the present invention. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> C. Sites Types, Structures (Buildings), Floors, and Zones </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 10</cross-reference>D, table <highlight><bold>1009</bold></highlight> is a pick list table associated with the site table <highlight><bold>1004</bold></highlight> for providing valid values for the data field used to store site types. Table <highlight><bold>1010</bold></highlight> represents structures or buildings within sites. Typically, each site (represented by a single entry or row in the site table <highlight><bold>1004</bold></highlight>) comprises multiple buildings that are each represented by a single entry in the building table <highlight><bold>1010</bold></highlight>. Therefore, building table <highlight><bold>1010</bold></highlight> typically comprises multiple rows for each row in site table <highlight><bold>1004</bold></highlight>. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> Table <highlight><bold>1011</bold></highlight> represents floors within structures represented by table <highlight><bold>1010</bold></highlight>. Typically, floor table <highlight><bold>1011</bold></highlight> comprises multiple entries for each entry in structure table <highlight><bold>1010</bold></highlight>. Table <highlight><bold>1012</bold></highlight> represents floor points for the floors represented by floor table <highlight><bold>1010</bold></highlight>. This information is used in a preferred embodiment of the present invention for rendering graphical representations of floors, as described above. In one embodiment, each entry in the floor point table <highlight><bold>1012</bold></highlight> contains the x-y coordinates of a portion of a polygon that is used to graphically represent the associated floor. Typically, floor point table <highlight><bold>1012</bold></highlight> comprises multiple rows for each entry in floor table <highlight><bold>1011</bold></highlight>. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> Table <highlight><bold>1013</bold></highlight> represents zones within floors represented by floor table <highlight><bold>1011</bold></highlight>. Typically, zone table <highlight><bold>1013</bold></highlight> comprises multiple entries for each entry in floor table <highlight><bold>1011</bold></highlight>. Table <highlight><bold>1014</bold></highlight> represents zone points for the zones represented by zone table <highlight><bold>1013</bold></highlight>. This information is used in a preferred embodiment of the present invention for rendering graphical representations of zones. In one embodiment, each row in zone point table <highlight><bold>1014</bold></highlight> contains x-y coordinates for a portion of a polygon that is used to graphically represent the associated zone. Typically, zone point table <highlight><bold>1014</bold></highlight> comprises multiple entries for each entry in zone table <highlight><bold>1013</bold></highlight>. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> D. Planning Units, Rows, and Row Segments </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 10</cross-reference>E, table <highlight><bold>1015</bold></highlight> represents planning units within zones represented by zone table <highlight><bold>1013</bold></highlight>. Typically, planning unit table <highlight><bold>1015</bold></highlight> comprises multiple entries for each entry in zone table <highlight><bold>1013</bold></highlight>. Table <highlight><bold>1016</bold></highlight> represents points for planning unit table <highlight><bold>1015</bold></highlight>. This information is typically used for rendering graphical representations of planning units. In one embodiment, each row in planning unit point table <highlight><bold>1016</bold></highlight> contains x-y coordinates for a portion of a polygon that is used to graphically represent the associated planning unit. Typically, planning unit point table <highlight><bold>1016</bold></highlight> contains multiple entries for each entry in the planning unit table <highlight><bold>1015</bold></highlight>. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> Table <highlight><bold>1017</bold></highlight> represents rows within planning units. Typically, row table <highlight><bold>1017</bold></highlight> comprises multiple entries for each entry in planning unit table <highlight><bold>1015</bold></highlight>. Table <highlight><bold>1018</bold></highlight> represents row segments within rows. Typically, row segment table <highlight><bold>1018</bold></highlight> comprises multiple entries for each entry in the row table <highlight><bold>1017</bold></highlight>. As will be shown below, configured racks are placed within row segments. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> E. Product Catalogs, Shelves, Cards (Modules) and Rails </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 10F, a</cross-reference> number of tables <highlight><bold>1019</bold></highlight>-<highlight><bold>1023</bold></highlight> are depicted that form a portion of database <highlight><bold>108</bold></highlight> referred to herein as product catalog <highlight><bold>126</bold></highlight>. Specifically, table <highlight><bold>1019</bold></highlight> represents components, such as modules, shelves and racks, as previously described. Data fields within the product catalog table <highlight><bold>1019</bold></highlight> preferably contain detailed information about each component stored therein, such as a part number, a classification, and physical dimensions of the component. In a preferred embodiment, information common to all types of components is stored in product catalog table <highlight><bold>1019</bold></highlight>, and information specific to predefined component types are stored in database tables <highlight><bold>1020</bold></highlight>-<highlight><bold>1023</bold></highlight>. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> For example, shelf table <highlight><bold>1020</bold></highlight> represents additional information particular to shelf components, such as the quantity of wire, coaxial and fiber connectors. Card table <highlight><bold>1021</bold></highlight> represents additional information particular to cards or module components. In this example, information such as actual and nominal electrical and power input and output requirements are stored in shelf table <highlight><bold>1020</bold></highlight>. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> Likewise, rail table <highlight><bold>1022</bold></highlight> represents additional information particular to racks, such as the dimensions of the rack header and rack footer areas. In addition, the HVAC rack table <highlight><bold>1023</bold></highlight> represents additional information about HVAC (heating, ventilation and air conditioning) racks. In this example, such additional information includes quantities for airflow, BTUs per hour, airflow capacity and coolant specifications. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> F. Placement Data for Racks Shelves, and Cards (Modules) and Configuration Racks </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> Tables depicted in <cross-reference target="DRAWINGS">FIGS. 10G, 10H</cross-reference>, <highlight><bold>10</bold></highlight>J, and <highlight><bold>10</bold></highlight>K represent portions of the database <highlight><bold>108</bold></highlight> referred to herein as configuration library <highlight><bold>128</bold></highlight> and portions of the database used to store footprint information as described above. Specifically, the portion of database <highlight><bold>108</bold></highlight> referred to herein as configuration library <highlight><bold>128</bold></highlight> is primarily represented by configured racks table <highlight><bold>1062</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 10J</cross-reference>) and configured shelves table <highlight><bold>1026</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 10K</cross-reference>). </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> As shown by interconnecting lines, both the configured racks and the configured shelves table <highlight><bold>1062</bold></highlight> and <highlight><bold>1026</bold></highlight>, respectively, are related to product catalog table <highlight><bold>1019</bold></highlight>. Specifically, as previously stated, configured racks and configured shelves include components (e.g. modules, shelves and racks), from product catalog <highlight><bold>1019</bold></highlight> that have been interrelated. In a preferred embodiment, the interrelationships for configured racks and shelves are defined utilizing rackface tool <highlight><bold>112</bold></highlight>. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> Configured rack item table <highlight><bold>1025</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 10K</cross-reference>) represents individual rack positions used to hold shelves, for each rack defined in configured rack table <highlight><bold>1062</bold></highlight>. In a preferred embodiment, configured shelves that are installed in particular rack positions are defined by configured shelves table <highlight><bold>1026</bold></highlight>. Accordingly, each entry in configured shelves table <highlight><bold>1026</bold></highlight> can correspond with a single entry in configured rack item table <highlight><bold>1025</bold></highlight>. Note, however, that entries within configured shelves table <highlight><bold>1026</bold></highlight> can be associated with multiple entries in configured rack item table <highlight><bold>1025</bold></highlight>. This would be the case, for example, if the same configured shelf is used in multiple rack positions in a single rack or used in multiple racks. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> Configured shelves item table <highlight><bold>1027</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 10K</cross-reference>) represents individual shelf positions that are used to hold modules for each shelf defined in configured shelves table <highlight><bold>1026</bold></highlight>. In a preferred embodiment, modules that are installed in particular shelf positions are defined by product catalog table <highlight><bold>1019</bold></highlight>. Accordingly, each entry in product catalog table <highlight><bold>1019</bold></highlight> can correspond with an entry in configured shelf item table <highlight><bold>1027</bold></highlight>. It should be noted, however, that in a preferred embodiment, each entry within product catalog <highlight><bold>1019</bold></highlight> is typically associated with multiple entries in configured shelf item table <highlight><bold>1027</bold></highlight>. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> A particularly novel and advantageous feature of a preferred embodiment of the present invention is provided by placement library <highlight><bold>130</bold></highlight>. Specifically, placement library <highlight><bold>130</bold></highlight> contains placement data for racks table <highlight><bold>1061</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 10G</cross-reference>), placement data for cards table <highlight><bold>1024</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 10H</cross-reference>), and placement data for shelves table <highlight><bold>1063</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 10H</cross-reference>). Placement data for racks table <highlight><bold>1061</bold></highlight> is used to place configured racks from configured racks table <highlight><bold>1062</bold></highlight> in particular row segments within row segment table <highlight><bold>1018</bold></highlight>. In this example, one or more racks can be placed in a particular row segment. This feature is preferably implemented by creating a footprint using a placement tool <highlight><bold>116</bold></highlight> as previously described above. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> Preferably, specific data fields within the placement data for racks table <highlight><bold>1061</bold></highlight> are used for planning purposes. Such data fields are used to define specific time-related events, such as planned and actual installation, activation, decommission and removal dates. This allows site planners to view data related to the configuration and placement of equipment in remote sites on a time-dependent basis. Moreover, in a preferred embodiment of the present invention such information is provided at the rack, shelf and module level. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> As described above, placement data for rack tables <highlight><bold>1061</bold></highlight> provides such time-dependent data for field equipment at the rack level. Similarly, placement data for shelves table <highlight><bold>1063</bold></highlight> provides such time-dependent data for field equipment at the shelf level. Likewise, placement data for modules table <highlight><bold>1024</bold></highlight> provides time-dependent data for field equipment at the module level. Using this feature of the present invention, site planners and other groups can view data related to field sites on a time-dependent basis. Preferably, each card (or module), shelf and rack that is placed within a remote site will have associated planned and actual installation, activation, decommission and removal dates. In this manner, users for example, can view the configuration and placement of equipment within remote field sites at a particular past, present or future date. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> G. Additional Pick List Tables </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10I</cross-reference> comprises additional pick list tables from pick list <highlight><bold>134</bold></highlight> within database <highlight><bold>108</bold></highlight>. Specifically, vendor information pick list table <highlight><bold>1028</bold></highlight> comprises valid values used to describe predefined manufacturers. In this example, vendor information pick list table <highlight><bold>1028</bold></highlight> is associated with product catalog table <highlight><bold>1019</bold></highlight>, configuration racks table <highlight><bold>1062</bold></highlight> and the configuration shelves table <highlight><bold>1026</bold></highlight>. Similarly, class pick list table <highlight><bold>1030</bold></highlight> is used to store predefined values describing equipment classes. In this example, class pick list table <highlight><bold>1030</bold></highlight> is associated with the zone table <highlight><bold>1013</bold></highlight>, configuration shelves table <highlight><bold>1026</bold></highlight>, configuration racks table <highlight><bold>1062</bold></highlight>. Likewise, sub-class pick list table <highlight><bold>1029</bold></highlight> comprises predefined valid values used to describe equipment sub-classes. In this example, sub-class pick list table <highlight><bold>1029</bold></highlight> is associated with product catalog <highlight><bold>1019</bold></highlight>, configuration shelves table <highlight><bold>1026</bold></highlight>, and configuration racks table <highlight><bold>1062</bold></highlight>. In addition, in this example, pick list tables <highlight><bold>1028</bold></highlight>, <highlight><bold>1029</bold></highlight> and <highlight><bold>1030</bold></highlight> are associated with connection tables <highlight><bold>136</bold></highlight>, as described below with reference to <cross-reference target="DRAWINGS">FIG. 10L</cross-reference>. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> H. Connection Tables </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10L</cross-reference> depicts an embodiment of connection portion <highlight><bold>136</bold></highlight> of database <highlight><bold>108</bold></highlight>. Specifically, connection tables <highlight><bold>1031</bold></highlight>-<highlight><bold>1035</bold></highlight> are used to logically or physically connect one database entity with another database entity without providing the details of the connection. For example, connection portion <highlight><bold>136</bold></highlight> of database <highlight><bold>108</bold></highlight> can be used to provide a logical connection between a power plant site hierarchy level and a particular footprint that draws power therefrom. In another example, connection portion <highlight><bold>136</bold></highlight> of the database <highlight><bold>108</bold></highlight> can be used to provide a physical connection between a main power distribution bay and a particular footprint. Connection tables <highlight><bold>1031</bold></highlight>-<highlight><bold>1035</bold></highlight> are used in a preferred embodiment to define rules for connecting objects within database <highlight><bold>108</bold></highlight> to one another. For example, connection rules table <highlight><bold>1032</bold></highlight> defines what types of objects can be connected together. Similarly, the connection rules sub-class table <highlight><bold>1036</bold></highlight> defines what sub-classes of equipment can be connected together. Connection table <highlight><bold>1034</bold></highlight> is used to define what objects are connected together. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> I. User Security Tables </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10M</cross-reference> illustrates user security tables <highlight><bold>1037</bold></highlight>-<highlight><bold>1043</bold></highlight>, which form user security portion <highlight><bold>132</bold></highlight> of database <highlight><bold>108</bold></highlight>. Tables <highlight><bold>1037</bold></highlight>-<highlight><bold>1043</bold></highlight> are preferably used to control database access and the access to specific functions within SiteVu based on user identification. In the depicted embodiment, tables <highlight><bold>1037</bold></highlight>-<highlight><bold>1043</bold></highlight> describe which functions particular users are allowed to performs. For example, in one embodiment, only users with a transmission rating are permitted to place transmission equipment in remote sites. Such control may be implemented with user security tables <highlight><bold>1037</bold></highlight>-<highlight><bold>1043</bold></highlight>. The power tables portion <highlight><bold>138</bold></highlight> of database <highlight><bold>108</bold></highlight>, which comprises tables <highlight><bold>1044</bold></highlight>-<highlight><bold>1052</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>N, are used for power planning as described below.&prime;</paragraph>
<paragraph id="P-0142" lvl="7"><number>&lsqb;0142&rsqb;</number> VIII. Creating Graphical Objects to Represent Levels of an Environmental Hierarchy </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> A. Definition of a Footprint </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> A footprint is the union of an object, such as a configured rack described above, and a specific location on the floor space. In other words, a footprint refers to the space or area occupied by a configured rack at a site. As will become apparent from the discussion presented below, the primary purpose of placement tool <highlight><bold>116</bold></highlight> is to create a plan, e.g. a five-year plan, that describes a physical and environmental map of configured racks at a given site. The primary product of the placement tool <highlight><bold>116</bold></highlight> is the placement of footprints on the floor space. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> B. The Administrative Tool Function in Establishing a Hierarchy </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>E, in the preferred embodiment, administrative tool <highlight><bold>114</bold></highlight> is software written in C&plus;&plus; that runs on a Windows&reg; operating system and uses a Windows Application Programming Interface <highlight><bold>115</bold></highlight> to implement its functions on workstation <highlight><bold>104</bold></highlight>. Before the placement of any graphical objects, such as floor graphical objects, zone graphical objects, planning unit graphical objects, row segment graphical objects, and footprint graphical objects, it is necessary to use administrative tool <highlight><bold>114</bold></highlight> to establish a base site-structure-floor hierarchy in database <highlight><bold>108</bold></highlight>. In this manner, at least a minimum amount of non-graphical (tabular) information must be established regarding the site-structure-floor hierarchy before any structures can be graphically represented. For example, in one embodiment the user must name a site (if the site does not exist), name a structure within the site, and name a floor within the structure. Administrative tool <highlight><bold>114</bold></highlight> (1) creates site table <highlight><bold>1004</bold></highlight>, structure table <highlight><bold>1010</bold></highlight>, and floor table <highlight><bold>1011</bold></highlight> in database <highlight><bold>108</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIGS. 10C and 10D</cross-reference>, and (2) fills in the first fields for these tables, corresponding to the names of the tables, as described in Sections X.A, X.B and X.C. The user can also fill in numerous other database fields, as described in these sections. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> In addition, while using administrative tool <highlight><bold>114</bold></highlight>, the user can associate with a site-structure-floor an accompanying architectural (also known as civil) drawing. An architectural drawing provides the architectural layout of the floor from a plan (top) view, including the existence of columns that support the building, fire escapes, air vents, doorways and other entrances. In addition, the architectural drawings detail the location of power cables and HVAC units. Referring to section X.C.4, the name of the file containing the architectural drawing is stored in floor table <highlight><bold>1011</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 10D</cross-reference>. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> C. Placement Tool Functional Overview </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> In the preferred embodiment, placement tool <highlight><bold>116</bold></highlight> is implemented as application software running on a Windows operating system. In a preferred embodiment, placement tool <highlight><bold>116</bold></highlight> is implemented using the Microstation Development Language (MDL). MDL is a high-level host language that Microstation incorporates for developing programs that interface with the CADD functions provided by the Microstation CADD program. For example, to allow a user to trace out a floor, or a zone, or some other type of graphical object, placement tool <highlight><bold>116</bold></highlight> submits a corresponding MDL command to instruct Microstation <highlight><bold>117</bold></highlight> to allow the user to render a graphical representation of the traced object on the display or other device. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> In addition, placement tool <highlight><bold>116</bold></highlight> comprises software written for interfacing with database <highlight><bold>108</bold></highlight>. Hence, when a graphical object is created and drawn by Microstation <highlight><bold>117</bold></highlight>, placement tool <highlight><bold>116</bold></highlight> can update database <highlight><bold>108</bold></highlight> with specific information pertaining to the dimensions of the graphical object. For example, when a user creates or updates the graphical representation of a floor, placement tool <highlight><bold>116</bold></highlight> creates or updates non-graphical (logical) information in floor points table <highlight><bold>1012</bold></highlight>, which is described in section X.D and shown in <cross-reference target="DRAWINGS">FIG. 10D</cross-reference>. Therefore, the graphical information is stored in non-graphical (tabular) form, which is used to recreate the graphical representation of that information, so that a user can bring up and modify the floor at a future date. </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> In addition, placement tool <highlight><bold>116</bold></highlight> allows the user to add numerous other pieces of information to database <highlight><bold>108</bold></highlight> that are generally not represented graphically. For example, as discussed in section X.C.6, floor table <highlight><bold>1011</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 10D</cross-reference>) stores the date the floor object was created, the user who created the floor object, the last user who updated the floor object, and the last date the floor object was updated. As described below, all information in the site hierarchy is readily accessible to the user while using placement tool <highlight><bold>116</bold></highlight>. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> There are also functions performed by the placement tool <highlight><bold>116</bold></highlight> that combine the function of CADD program <highlight><bold>117</bold></highlight> and database <highlight><bold>108</bold></highlight>. For example, when a user uses the mouse to graphically layout a floor, placement tool <highlight><bold>116</bold></highlight> uses Microstation <highlight><bold>117</bold></highlight> to calculate the area of the floor and further uses database <highlight><bold>108</bold></highlight> to store this information. As described in section X.C.5, this information is stored in floor table <highlight><bold>1011</bold></highlight> as area quantity field <highlight><bold>1011</bold></highlight><highlight><italic>f. </italic></highlight>The details of placement tool <highlight><bold>116</bold></highlight> will become more apparent from the detailed discussion below. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> D. Creation of Graphical Objects </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a flowchart illustrating a process that can be used to define the graphical portions of a site hierarchy, according to a preferred embodiment of the present invention. This process is performed by placement tool <highlight><bold>116</bold></highlight> according to a preferred embodiment of the present invention. </paragraph>
<paragraph id="P-0155" lvl="2"><number>&lsqb;0155&rsqb;</number> 1. Selecting a Site </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> The process begins with step <highlight><bold>702</bold></highlight>. In step <highlight><bold>702</bold></highlight>, a user specifies a predefined site. This is preferably accomplished by selecting a site from a pick list of sites that have been defined via the administrative tool <highlight><bold>114</bold></highlight>. The data related to the site is stored by administrative tool <highlight><bold>114</bold></highlight> in site hierarchy repository <highlight><bold>124</bold></highlight> of database <highlight><bold>108</bold></highlight>. The data is specifically stored in site table <highlight><bold>1004</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>C and explained in section X.A. </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> In should be noted that placement tool <highlight><bold>116</bold></highlight> can provide a security feature to prevent unauthorized individuals from creating and updating any type of graphical or non-graphical information. For example, when a user desires to add a graphical object to a site and selects a site from the pick list of sites, placement tool <highlight><bold>116</bold></highlight> can ensure that the user is authorized to access information about the site, for example, by matching a user&apos;s department with the department responsible for the site. Use of the security measure is also available for determining whether an individual is authorized to create or update any other level in the hierarchy as well. For example, should a user desire to create a new floor object (as described below), placement tool <highlight><bold>116</bold></highlight> can require the user to be an authorized facilities planner responsible for creating the initial graphical site hierarchy. The placement tool <highlight><bold>116</bold></highlight> can also be configured to permit or deny users the ability to use certain functions of the tool. These functions are described below in detail. </paragraph>
<paragraph id="P-0158" lvl="2"><number>&lsqb;0158&rsqb;</number> 2. Selecting a Structure </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> After a site is selected in step <highlight><bold>702</bold></highlight>, control passes to step <highlight><bold>704</bold></highlight>. In step <highlight><bold>704</bold></highlight>, the user specifies a particular building. Again, this is preferably accomplished by having the user select a particular building that corresponds with the particular site selected from step <highlight><bold>702</bold></highlight>, according to the site hierarchy repository <highlight><bold>124</bold></highlight>. The data are stored in structure table <highlight><bold>1010</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>D and explained in section X.B. </paragraph>
<paragraph id="P-0160" lvl="2"><number>&lsqb;0160&rsqb;</number> 3. Selecting a Floor </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> After a building is selected in step <highlight><bold>704</bold></highlight>, control passes to step <highlight><bold>706</bold></highlight>. In step <highlight><bold>706</bold></highlight>, the user selects a particular floor corresponding to the building selected in step <highlight><bold>704</bold></highlight>. Again, this is preferably accomplished by having the user select a floor that corresponds with the particular building selected from step <highlight><bold>704</bold></highlight>, according to the site hierarchy repository <highlight><bold>124</bold></highlight>. The data are specifically stored in floor table <highlight><bold>1011</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>D and explained in section X.C. Control then passes to step <highlight><bold>708</bold></highlight>. </paragraph>
<paragraph id="P-0162" lvl="2"><number>&lsqb;0162&rsqb;</number> 4. Displaying an Architectural Drawing </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> In a preferred embodiment, as indicated by step <highlight><bold>708</bold></highlight>, the user is presented with a graphical display of an architectural drawing of the floor that is selected in step <highlight><bold>706</bold></highlight>. The architectural drawing is used as a guide to assist the user with creation of the site hierarchy. Preferably, the CADD software (e.g., Microstation <highlight><bold>117</bold></highlight>) renders the architectural drawing of the floor. For example, in a preferred embodiment, after the user selects a particular floor, placement tool <highlight><bold>116</bold></highlight> reads the name of the architectural drawing from floor plan drawing file name field <highlight><bold>1011</bold></highlight><highlight><italic>e, </italic></highlight>which is a field of floor table <highlight><bold>1011</bold></highlight>, as described in section X.C.4 and shown in <cross-reference target="DRAWINGS">FIG. 10D</cross-reference>. Placement tool <highlight><bold>116</bold></highlight> then directs CADD program <highlight><bold>117</bold></highlight> to display the architectural drawing corresponding with the name fetched from database <highlight><bold>108</bold></highlight>. </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> It should be noted, however, that the use of architectural drawings as a guide and backdrop is optional. Users can define the floor, zones, planning units, rows and row segment, as described with reference to the steps below, without the use of an architectural drawing. For example, if the structure is a simple shed for storing telecommunications equipment such as light wave regenerators, the use of an architectural drawing may be unnecessary for a facility planner who desires to create a floor object. However, if the structure is a large brick-and-mortar (e.g., conventional building) facility for storing many rows of computing equipment, a facility planner can find the architectural drawing quite helpful. The architectural drawing can provide the facilities planner with necessary information, including the locations of columns that support the building, fire escapes, air vents, doorways and other entrances, power cables for providing electricity, and HVAC units, etc. The architectural drawing is also useful for the facilities planner for &ldquo;tracing out&rdquo; a useable floor space, as explained below. </paragraph>
<paragraph id="P-0165" lvl="2"><number>&lsqb;0165&rsqb;</number> 5. Placing a Floor Object </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> As step <highlight><bold>710</bold></highlight> indicates, the user places a floor, which simply means that the user creates the graphical floor object in the site-structure-floor hierarchy. In the preferred embodiment, whether or not the architectural drawing is displayed, the user uses an input device (such as a mouse) to trace out a usable area in the floor space. The user, who is most likely a facilities planner, attempts to maximize the usable floor space to be allocated for placing equipment, while concurrently determining real-life limiting factors, such as the location of power cables for supplying power to the equipment, supplying sufficient ventilation to equipment, and providing ready human access to the equipment with sufficient entrance ways. </paragraph>
<paragraph id="P-0167" lvl="0"><number>&lsqb;0167&rsqb;</number> When the user traces out the usable space, placement tool <highlight><bold>116</bold></highlight> directs Microstation CADD <highlight><bold>117</bold></highlight> to show the floor space to the user graphically. In addition, placement tool <highlight><bold>116</bold></highlight> stores the traced out floor space in a non-graphical format as a sequence of points in database <highlight><bold>108</bold></highlight>, specifically in floor points table <highlight><bold>1012</bold></highlight>, described in section X.D and shown in <cross-reference target="DRAWINGS">FIG. 10D</cross-reference>. </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> Placement tool <highlight><bold>116</bold></highlight> performs other important functions as well. It directs Microstation CADD <highlight><bold>117</bold></highlight> to calculate the area of the usable floor space and stores it in database <highlight><bold>108</bold></highlight>, specifically in the area quantity field <highlight><bold>1011</bold></highlight><highlight><italic>f, </italic></highlight>described in section X.C.4 and shown in <cross-reference target="DRAWINGS">FIG. 10D</cross-reference>. Placement tool <highlight><bold>116</bold></highlight> also stores the identification of the user and the date the user created the floor object in database <highlight><bold>108</bold></highlight>, as described in section X.C.6 and also shown in <cross-reference target="DRAWINGS">FIG. 10D</cross-reference>. Placement tool <highlight><bold>116</bold></highlight> also provides the user the ability to store additional information regarding the floor object or even to change existing information regarding the floor object, including the remaining fields of floor table <highlight><bold>1011</bold></highlight>, as described in section X.C. </paragraph>
<paragraph id="P-0169" lvl="2"><number>&lsqb;0169&rsqb;</number> 6. Placing a Zone Object </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> As step <highlight><bold>712</bold></highlight> indicates, the user places a zone (i.e., places a zone object in the site hierarchy), which is the next level in the hierarchy. Zones provide an important functional distinction between classes of equipment, meaning that a facilities planner can restrict a zone to one class of several possible classes of equipment. The classes available are restricted only by the imagination of the facilities planner. In some applications, a facilities planner may provide very narrowly tailored zones such as restrictions between particular pieces of telecommunications equipment, while in other applications a facilities planner can distinguish between widely tailored classes such as between computer racks and pieces of furniture. At this level, the ability of the facilities planner to provide a proper balance between providing a maximum amount of usable floor space and taking into consideration limiting real-life considerations pertaining to the architecture of the building are even more important. As a crude example, if a facilities planner has to place furniture equipment in furniture equipment zones and functioning processors in processor zones, the planner would be concerned with providing adequate power supplies to the latter and not the former. Consequently, the processor zones can be located within adequate reach of power supply cables. The allowed class of equipment is stored in equipment class code field <highlight><bold>1013</bold></highlight><highlight><italic>d </italic></highlight>of zone table <highlight><bold>1013</bold></highlight>, which is described in section X.E.4 and shown in <cross-reference target="DRAWINGS">FIG. 10D</cross-reference>. It should be noted that in a preferred embodiment the class of equipment must be a permitted class, as defined and stored in table <highlight><bold>1030</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 10</cross-reference>I); otherwise, the class is not permitted. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> As with floor objects, the user traces out zones using placement tool <highlight><bold>116</bold></highlight>, which in turn directs Microstation CADD <highlight><bold>117</bold></highlight> to display the zones on the display of workstation <highlight><bold>104</bold></highlight>. Placement tool <highlight><bold>116</bold></highlight> stores the traced out zone space in a non-graphical format as a sequence of points in database <highlight><bold>108</bold></highlight>, specifically in zone points table <highlight><bold>1014</bold></highlight>, described in section X.F and shown in <cross-reference target="DRAWINGS">FIG. 10D</cross-reference>. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> Placement tool <highlight><bold>116</bold></highlight> directs Microstation CADD <highlight><bold>117</bold></highlight> to calculate the area of the usable zone space and stores the area in database <highlight><bold>108</bold></highlight>, specifically in the area quantity field <highlight><bold>1013</bold></highlight><highlight><italic>e, </italic></highlight>described in section X.E.4 and shown in <cross-reference target="DRAWINGS">FIG. 10D</cross-reference>. Placement tool <highlight><bold>116</bold></highlight> stores the identification of the user and the date the user created the zone object in database <highlight><bold>108</bold></highlight>, as described in section X.E.6 and also shown in <cross-reference target="DRAWINGS">FIG. 10D</cross-reference>. Placement tool <highlight><bold>116</bold></highlight> also provides the user the ability to store additional information regarding the zone object or even to change existing information regarding the zone object, including the remaining fields of zone table <highlight><bold>1013</bold></highlight>, as described in section X.E. </paragraph>
<paragraph id="P-0173" lvl="2"><number>&lsqb;0173&rsqb;</number> 7. Placing a Planning Unit Object </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> As step <highlight><bold>714</bold></highlight> indicates, the user places a planning unit (i.e., places a planning unit object in the hierarchy), which is the next level in the hierarchy. In a preferred embodiment, planning units provide the opportunity for more than one facility planner to place row segments in a given zone. In this embodiment, when a user is in the process of defining rows and placing row segments <highlight><bold>308</bold></highlight>, via the placement tool, other users are prevented from accessing certain portions of site hierarchy repository <highlight><bold>124</bold></highlight>. In particular, when users are defining rows, the site hierarchy level just above the row level must be locked. Thus, a site hierarchy level of planning unit <highlight><bold>306</bold></highlight> is used between row level <highlight><bold>308</bold></highlight> and zone level <highlight><bold>304</bold></highlight>. Accordingly, planning unit <highlight><bold>306</bold></highlight> is locked from other users instead of zone level <highlight><bold>304</bold></highlight>. In this manner, several users can work simultaneously to define row segments <highlight><bold>308</bold></highlight> within the same zone <highlight><bold>304</bold></highlight>. Planning units are optional, however, and as a result a zone need not contain more than one planning unit. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> As with other objects, the user traces out planning units using placement tool <highlight><bold>116</bold></highlight>, which in turn directs Microstation CADD <highlight><bold>117</bold></highlight> to display the planning units on the display of workstation <highlight><bold>104</bold></highlight>. Placement tool <highlight><bold>116</bold></highlight> stores the traced out planning unit space in a non-graphical format as a sequence of points in database <highlight><bold>108</bold></highlight>, specifically in the planning unit points table <highlight><bold>1016</bold></highlight>, described in section X.H and shown in <cross-reference target="DRAWINGS">FIG. 10E</cross-reference>. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> Preferably, placement tool <highlight><bold>116</bold></highlight> is used so that the user can identify the maximum amount of weight a floor can withstand, specifically in the floor load limit quantity field <highlight><bold>1015</bold></highlight><highlight><italic>g, </italic></highlight>described in section X.G and shown in <cross-reference target="DRAWINGS">FIG. 10E</cross-reference>. In this manner, it is possible to prevent floor damage by preventing the placement of equipment weighing more than a given amount in a planning unit. Placement tool <highlight><bold>116</bold></highlight> directs Microstation CADD <highlight><bold>117</bold></highlight> to calculate the area of the planning unit and stores it in database <highlight><bold>108</bold></highlight>, specifically in the area quantity field <highlight><bold>1015</bold></highlight><highlight><italic>e, </italic></highlight>described in section X.G.4 and shown in <cross-reference target="DRAWINGS">FIG. 10E</cross-reference>. Placement tool <highlight><bold>116</bold></highlight> stores the identification of the user and the date the user created the planning unit object in database <highlight><bold>108</bold></highlight>, as described in section X.G.6 and also shown in <cross-reference target="DRAWINGS">FIG. 10E</cross-reference>. Placement tool <highlight><bold>116</bold></highlight> also provides the user the ability to store additional information regarding the planning unit object or even to change existing information regarding the planning unit object, including the remaining fields of planning unit table <highlight><bold>1015</bold></highlight>, as described in section X.G. </paragraph>
<paragraph id="P-0177" lvl="2"><number>&lsqb;0177&rsqb;</number> 8. Placing a Row and Row Segment Object </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> As step <highlight><bold>716</bold></highlight> indicates, the user places a row in the hierarchy. A row is a designation of a physical row. Rows are not represented graphically, but are instead represented logically (non-graphically). The reason for this is that physical rows may be discontinuous because of physical separations between the row, such as support columns. As described in section X.I and shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>E, placement tool <highlight><bold>116</bold></highlight> stores in database <highlight><bold>108</bold></highlight> an identification for the row, a textual name of the row, which can simply be a number, and information relating to who created the row and when the row was created. </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> The user can place a row segment object, which is the next level in the graphical hierarchy. The row segment, as its name implies, breaks up the physical row into segments so that one or more row segments comprise a physical row. </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> As with the other objects, the user traces out row segments using placement tool <highlight><bold>116</bold></highlight>, which in turn directs Microstation CADD <highlight><bold>117</bold></highlight> to display the row segments on the display of workstation <highlight><bold>104</bold></highlight>. Placement tool <highlight><bold>116</bold></highlight> stores the traced out row segment space in a non-graphical format as a sequence of points in database <highlight><bold>108</bold></highlight>, specifically in the row segment table <highlight><bold>1018</bold></highlight>, described in section X.J and shown in <cross-reference target="DRAWINGS">FIG. 10E</cross-reference>. </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> The user can identify, via placement tool <highlight><bold>116</bold></highlight>, the maximum height of equipment placed in a row segment in the height limit quantity field <highlight><bold>1018</bold></highlight><highlight><italic>l, </italic></highlight>described in section X.J and shown in <cross-reference target="DRAWINGS">FIG. 10E</cross-reference>. Placement tool <highlight><bold>116</bold></highlight> directs Microstation CADD <highlight><bold>117</bold></highlight> to calculate the length of the row segment and stores it in length quantity field <highlight><bold>1018</bold></highlight><highlight><italic>k, </italic></highlight>which is described in section X.J.7. Placement tool <highlight><bold>116</bold></highlight> also stores the identification of the user and the date the user created the row segment object in database <highlight><bold>108</bold></highlight>, as described in section X.J.9. Placement tool <highlight><bold>116</bold></highlight> also provides the user the ability to store additional information regarding the row segment object or even to change existing information regarding the row segment object, including the remaining fields of row segment table <highlight><bold>1018</bold></highlight>, as described in section X.J. </paragraph>
<paragraph id="P-0182" lvl="2"><number>&lsqb;0182&rsqb;</number> 9. Placing a Footprint </paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> After the site, structure, floor, zone, planning unit, row and row segments have been established in the hierarchy, the user can place a footprint, which is the union of a piece of physical equipment with floor space. Footprints represent the lowest level of the site hierarchy and provide the greatest level of detail. </paragraph>
<paragraph id="P-0184" lvl="0"><number>&lsqb;0184&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a flowchart illustrating a process that can be used for placing footprints, according to a preferred embodiment of the present invention. The process begins with step <highlight><bold>802</bold></highlight>. In step <highlight><bold>804</bold></highlight> the user (1) creates a footprint, if a footprint does not already exist, or alternatively (2) updates a footprint, if a footprint already exists. A user can place either a generic footprint or a specific footprint. </paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> A generic footprint is a placeholder for a footprint that will likely later be designated a specific footprint. A generic footprint is a footprint for a configured rack that has an unspecified manufacturer&apos;s identification field. For example, the manufacturer&apos;s identification field (found in product catalog table <highlight><bold>1019</bold></highlight>, shown in <cross-reference target="DRAWINGS">FIG. 10F</cross-reference>) for the configured rack (found in configured rack table <highlight><bold>1062</bold></highlight>, shown in <cross-reference target="DRAWINGS">FIG. 10J</cross-reference>) can be set to &ldquo;generic.&rdquo; On the other hand, a specific footprint is a footprint for a configured rack that specifies a valid manufacturer&apos;s identification field. U.S. Pat. No. 6,098,050 referenced above provides a detailed discussion of generic and specific footprints. </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> Placement tool <highlight><bold>116</bold></highlight> automatically determines the size of the footprint that Microstation <highlight><bold>117</bold></highlight> is directed to display. As described below in detail, placement tool <highlight><bold>116</bold></highlight> provides the user a list of configured racks from which to choose. When a user selects a configured rack that is to be placed, placement tool <highlight><bold>116</bold></highlight> accesses the configured racks table <highlight><bold>1062</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 10J</cross-reference>), which in turn accesses other tables (e.g., product catalog table <highlight><bold>1019</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10</cross-reference>F and configured shelves table <highlight><bold>1026</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 10K</cross-reference>) to determine the dimensions of the footprint that is to be placed. </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> If an existing footprint is being updated, most likely by an individual having placement responsibility at a facility, the user can first fetch all of the graphical objects that are higher in level. For example, the user can select a site, followed by a building (or structure), followed by a floor <highlight><bold>302</bold></highlight>, followed by a zone <highlight><bold>304</bold></highlight>, and followed by a planning unit <highlight><bold>306</bold></highlight>. Placement tool <highlight><bold>116</bold></highlight> also allows the user to bring up all these levels simultaneously when the user performs a &ldquo;fetch all&rdquo; function. </paragraph>
<paragraph id="P-0188" lvl="0"><number>&lsqb;0188&rsqb;</number> Preferably, the user is provided with an option to display particular site hierarchies or all site hierarchies that are defined for a particular floor. In addition, in a preferred embodiment, once the site hierarchies are graphically displayed, the user can directly zoom-in to a particular portion of the graphical representation and select a particular row therein. Accordingly, the steps of selecting a zone and planning unit, as specified above are effectively bypassed using this method. However, many other methods can also be used without departing from the spirit and principle of the present invention. </paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> In any case, once a particular row is identified, control passes to step <highlight><bold>806</bold></highlight>. In step <highlight><bold>806</bold></highlight> a build equipment pick list is presented to the user. This pick list comprises a list of configured racks <highlight><bold>202</bold></highlight>, as described above with reference to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. The configured racks are stored in the configured racks table <highlight><bold>1062</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>J and are referenced in rack configuration identification field <highlight><bold>1061</bold></highlight><highlight><italic>e, </italic></highlight>which is described in section X.K.5 and shown in <cross-reference target="DRAWINGS">FIG. 10G</cross-reference>. In addition, as previously described, generic racks can also be displayed in the equipment pick list. The user selects a rack from the list of racks presented in step <highlight><bold>806</bold></highlight>. Preferably, a configured rack can be a rack holding electrical equipment as particularly laid out in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> or instead any other physical object, such as a piece of furniture, as will be appreciated by those of ordinary skill. The user is provided great flexibility in how the configured racks fields are filled out in configured racks table <highlight><bold>1062</bold></highlight>. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> Next, in step <highlight><bold>808</bold></highlight>, the user places the selected configured rack from step <highlight><bold>806</bold></highlight> in a particular location within the row selected in step <highlight><bold>804</bold></highlight>. At this point, placement tool <highlight><bold>116</bold></highlight> stores the identity of the configured rack in the rack configuration identification field <highlight><bold>1061</bold></highlight><highlight><italic>e. </italic></highlight>Again, this is preferably accomplished by directly manipulating a graphical representation of the rack on top of the graphical representation of the selected row segment. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> Once the rack is placed in step <highlight><bold>808</bold></highlight>, control passes to step <highlight><bold>810</bold></highlight>. In step <highlight><bold>810</bold></highlight> the user specifies particular values for attributes that are associated with footprints. As mentioned, the footprint can be a generic footprint or a manufacturer specific footprint. As described in section X.K and shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>G, there are many fields that a user can specify for the equipment occupying the footprint, including how the equipment is configured, the envelope of distances surrounding the equipment, and numerous dates. Examples of important dates are when the facilities planners plan to install the equipment, when an individual responsible for installation plans to install the equipment, the actual installation date, when the equipment will be turned on (for equipment requiring a power supply), when the equipment will be decommissioned, etc. Section X.K provides a detailed explanation of the footprint fields in great detail. The user can also update the values in the footprint fields at any time after the values are initially established. The footprint fields can also be viewed or deleted, as described below in further detail. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> E. Fetching Objects </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> After placement tool <highlight><bold>116</bold></highlight> has directed Microstation <highlight><bold>117</bold></highlight> to create graphical objects, these objects are stored as non-graphical data in database <highlight><bold>108</bold></highlight>. Any time a user desires to view a previously created object, the user uses the fetch command to view one or more layers of the hierarchy. For example, after identifying the floor (located at a particular building at a particular site), the user can ask placement tool <highlight><bold>116</bold></highlight> to fetch the floor object, followed by the zone objects, followed by the planning unit objects, followed by the row segment objects, followed by the footprint objects. Here, the placement tool <highlight><bold>116</bold></highlight> reads the appropriate tabular representation of graphical points from database <highlight><bold>108</bold></highlight> and uses Microstation <highlight><bold>117</bold></highlight> to draw the objects on the workstation output device. In one embodiment, the user uses the &ldquo;fetch all&rdquo; function to have the placement tool display all of the graphical objects on a floor. As recognized by those of ordinary skill, placement tool <highlight><bold>116</bold></highlight> can recall the graphical objects in any order, as desired for an application. </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> F. Deleting Objects </paragraph>
<paragraph id="P-0195" lvl="0"><number>&lsqb;0195&rsqb;</number> Placement tool <highlight><bold>116</bold></highlight> permits the user to quickly and easily delete any graphical object, including floor objects, zone objects, planning unit objects, row segment objects, and footprint objects. Placement tool <highlight><bold>116</bold></highlight> erases the graphical points from the appropriate points tables in database <highlight><bold>108</bold></highlight> and provides appropriate commands to Microstation CADD <highlight><bold>117</bold></highlight> to eliminate the on-screen display of an object for the user. In one embodiment, placement tool <highlight><bold>116</bold></highlight> can prevent a user from deleting a graphical object if an ancestral graphical object is present. For example, a user can be forbidden from deleting a row segment if a row segment is occupied with footprints. </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> G. Object Detail </paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> Placement tool <highlight><bold>116</bold></highlight> permits the user to obtain specific details for any object. As shown throughout section X, there is a tremendous amount of information stored for the objects of the hierarchy (e.g., the hierarchy of site, structure, floor, zone, planning unit, row, row segment, and footprint) in the tables shown in FIGS. <highlight><bold>10</bold></highlight>C-<highlight><bold>10</bold></highlight>E, <highlight><bold>10</bold></highlight>G and <highlight><bold>10</bold></highlight>J. Much of this information is in the form of tabular (non-graphical) data, which is not necessarily presented graphically, but can have enormous importance to an organization. For example, a user may desire to view the planned installation date for a piece of equipment occupying a given footprint. When a user selects the object detail function, placement tool <highlight><bold>116</bold></highlight> can immediately read any desired information from database <highlight><bold>108</bold></highlight> and use Microstation CADD <highlight><bold>117</bold></highlight> to output the information to the viewer&apos;s display. For the above example, placement tool <highlight><bold>116</bold></highlight> reads planned installation date <highlight><bold>1061</bold></highlight><highlight><italic>n </italic></highlight>(described in section X.K, and shown in <cross-reference target="DRAWINGS">FIG. 10G</cross-reference>) and displays the information for the user. </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> H. Object Locate </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> Placement tool <highlight><bold>116</bold></highlight> permits user to quickly and easily locate objects by keying in on specific information stored as tabular information in database <highlight><bold>108</bold></highlight>. For example, placement tool <highlight><bold>108</bold></highlight> can almost instantaneously allow the user to determine all footprints storing a particular type of equipment, such as an M13 multiplexer. When a user selects the object locate function, placement tool <highlight><bold>116</bold></highlight> can immediately read any desired information from database <highlight><bold>108</bold></highlight> and use Microstation CADD <highlight><bold>117</bold></highlight> to show the graphical objects associated with the desired information on the viewer&apos;s display. This information can be provided to the user in a report, using the report generator tool <highlight><bold>119</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1G</cross-reference>. </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> I. Power Plant Associations </paragraph>
<paragraph id="P-0201" lvl="0"><number>&lsqb;0201&rsqb;</number> Placement tool <highlight><bold>116</bold></highlight> allows the user to associate a specific source of power, called a power plant, with a footprint. The user can use an input device, such as a mouse, to easily effect the association on the workstation <highlight><bold>104</bold></highlight>. The main portions of the above description of footprint placement refers to the placement of &ldquo;power consuming footprints,&rdquo; i.e., the placement of footprints of power consuming devices, such as multiplexers, for example. However, placement tool <highlight><bold>116</bold></highlight> also permits the user to place &ldquo;power producing&rdquo; footprints. For example, in one embodiment a describe plant function allows a user to graphically select footprints representing, for example, batteries and rectifiers, for inclusion in a power plant&apos;s power producing footprint definition. Since both power producing and power consuming footprints are associated with the power plant definition (plants table <highlight><bold>1002</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10C</cross-reference>), an appropriate power association is established there between. </paragraph>
<paragraph id="P-0202" lvl="0"><number>&lsqb;0202&rsqb;</number> Plants table <highlight><bold>1002</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 10C</cross-reference>) lists the power plants available at a site. Plants table <highlight><bold>1002</bold></highlight> includes a unique serial number for identification (PLANT_ID), the name of the site associated with the plant (SITE_ID), a name field (PLANT NM_TXT) that stores a plant name (e.g., &ldquo;battery<highlight><subscript>&mdash;</subscript></highlight>1&rdquo;), the measured load quantity of power (MSRD_LOAD_QTY) and the minimum reserve quantity of power (MIN_RESV_QTY). Placement tool <highlight><bold>116</bold></highlight> can read these power plant definitions. </paragraph>
<paragraph id="P-0203" lvl="0"><number>&lsqb;0203&rsqb;</number> Before a connection can be established between a power plant and a footprint, however, it must be determined whether the desired connection is a valid connection. The connection tables shown in <cross-reference target="DRAWINGS">FIG. 10L</cross-reference> are used make this determination. Connection table <highlight><bold>1034</bold></highlight> is used to determine the type of connections between the left object and the right object, which are to be connected together, by determining the connection rules. For example, the left object can be the plant, and the right object can be the footprint. Connection rules table <highlight><bold>1032</bold></highlight>, which has a pointer to the left object type (LEFT_OTP_ID) and a pointer to the right object type (RIGHT_OTP_ID), is used in combination with tables <highlight><bold>1033</bold></highlight>, <highlight><bold>1035</bold></highlight> and <highlight><bold>1036</bold></highlight> to determine whether the connection type is allowed. Table <highlight><bold>1033</bold></highlight> describes the types of connections allowed, including for example physical connections such as power, data, and alarm connections, as well as logical connections. The connection rules sub-class table provides subclasses of object types, such as the subclass of battery type plants. In this manner, placement tool <highlight><bold>116</bold></highlight> provides a mechanism to check whether the connection is valid. </paragraph>
<paragraph id="P-0204" lvl="0"><number>&lsqb;0204&rsqb;</number> J. Changing Views </paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> Placement tool <highlight><bold>116</bold></highlight> permits the user to obtain specific information about objects in graphical form as well. Here, placement tool <highlight><bold>116</bold></highlight> applies a graphical filter to the objects displayed, specifically applying a graphical filter to the non-graphical information stored in database <highlight><bold>108</bold></highlight>. For example, suppose a user is viewing a floor plan and desires to know which footprints will be occupied by M13 multiplexers five years in the future. After using the fetch object command to locate these footprint graphical objects, placement tool <highlight><bold>116</bold></highlight> can be used to display only these desired footprints. (When the footprint is created, placement tool <highlight><bold>116</bold></highlight> can, for example, use footprint date fields <highlight><bold>1061</bold></highlight><highlight><italic>m</italic></highlight>-<highlight><bold>1061</bold></highlight><highlight><italic>y </italic></highlight>and footprint identification field <highlight><bold>1061</bold></highlight><highlight><italic>a </italic></highlight>to uniquely distinguish M13 multiplexers existing five years in the future by a specific color.) In this manner, placement tool <highlight><bold>116</bold></highlight> can provide detail on any graphical object in the hierarchy in a graphical format. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> K. Other Microstation Functions </paragraph>
<paragraph id="P-0207" lvl="0"><number>&lsqb;0207&rsqb;</number> For the advanced CADD user, placement tool <highlight><bold>116</bold></highlight> permits the user direct access to any desired CADD functions, bypassing the more user-friendly functions of the placement tool itself. </paragraph>
<paragraph id="P-0208" lvl="7"><number>&lsqb;0208&rsqb;</number> IX. Exemplary Implementation of the Invention </paragraph>
<paragraph id="P-0209" lvl="0"><number>&lsqb;0209&rsqb;</number> The present invention may be implemented using hardware, software or a combination thereof and may be implemented in a computer system or other processing system. In fact, in one embodiment, the invention is directed toward a computer system capable of carrying out the functionality described herein. </paragraph>
<paragraph id="P-0210" lvl="0"><number>&lsqb;0210&rsqb;</number> An exemplary computer system <highlight><bold>901</bold></highlight> is shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. The computer system <highlight><bold>901</bold></highlight> includes one or more processors, such as processor <highlight><bold>904</bold></highlight>. Processor <highlight><bold>904</bold></highlight> is connected to a communication bus <highlight><bold>902</bold></highlight>. Various software embodiments are described in terms of this exemplary computer system. After reading this description, it will become apparent to a person skilled in the relevant art how to implement the invention using other computer systems and/or computer architectures. </paragraph>
<paragraph id="P-0211" lvl="0"><number>&lsqb;0211&rsqb;</number> Computer system <highlight><bold>902</bold></highlight> also includes a main memory <highlight><bold>906</bold></highlight>, preferably random access memory (RAM), and can also include a secondary memory <highlight><bold>908</bold></highlight>. The secondary memory <highlight><bold>908</bold></highlight> can include, for example, a hard disk drive <highlight><bold>910</bold></highlight> and/or a removable storage drive <highlight><bold>912</bold></highlight>, representing a floppy disk drive, a magnetic tape drive, an optical disk drive, etc. Removable storage drive <highlight><bold>912</bold></highlight> reads from and/or writes to a removable storage unit <highlight><bold>914</bold></highlight> in a well-known manner. Removable storage unit <highlight><bold>914</bold></highlight> represents a floppy disk, magnetic tape, optical disk, etc., which is read by and written to by removable storage drive <highlight><bold>912</bold></highlight>. As will be appreciated, removable storage unit <highlight><bold>914</bold></highlight> includes a computer usable storage medium having stored therein computer software and/or data. </paragraph>
<paragraph id="P-0212" lvl="0"><number>&lsqb;0212&rsqb;</number> In alternative embodiments, secondary memory <highlight><bold>908</bold></highlight> may include other similar means for allowing computer programs or other instructions to be loaded into computer system <highlight><bold>901</bold></highlight>. Such means can include, for example, a removable storage unit <highlight><bold>922</bold></highlight> and an interface <highlight><bold>920</bold></highlight>. Examples of such can include a program cartridge and cartridge interface (such as that found in video game devices), a removable memory chip (such as an EPROM, or PROM) and associated socket, and other removable storage units <highlight><bold>922</bold></highlight> and interfaces <highlight><bold>920</bold></highlight> that allow software and data to be transferred from the removable storage unit <highlight><bold>922</bold></highlight> to computer system <highlight><bold>901</bold></highlight>. </paragraph>
<paragraph id="P-0213" lvl="0"><number>&lsqb;0213&rsqb;</number> Computer system <highlight><bold>901</bold></highlight> can also include a communications interface <highlight><bold>924</bold></highlight>. Communications interface <highlight><bold>924</bold></highlight> allows software and data to be transferred between computer system <highlight><bold>901</bold></highlight> and external devices. Examples of communications interface <highlight><bold>924</bold></highlight> can include a modem, a network interface (such as an Ethernet card), a communications port, a PCMCIA slot and card, etc. Software and data transferred via communications interface <highlight><bold>924</bold></highlight> are in the form of signals, which can be electronic, electromagnetic, optical or other signals capable of being received by communications interface <highlight><bold>924</bold></highlight>. These signals <highlight><bold>926</bold></highlight> are provided to communications interface via a channel <highlight><bold>928</bold></highlight>. Channel <highlight><bold>928</bold></highlight> carries signals <highlight><bold>926</bold></highlight> and can be implemented using wire or cable, fiber optics, a phone line, a cellular phone link, an RF link and/or other communications channels. In this document, the terms &ldquo;computer program medium&rdquo; and &ldquo;computer usable medium&rdquo; are used to generally refer to media such as removable storage device <highlight><bold>912</bold></highlight>, a hard disk installed in hard disk drive <highlight><bold>910</bold></highlight>, and signals <highlight><bold>926</bold></highlight>. These computer program products are means for providing software to computer system <highlight><bold>901</bold></highlight>. </paragraph>
<paragraph id="P-0214" lvl="0"><number>&lsqb;0214&rsqb;</number> Computer programs (also called computer control logic) are stored in main memory and/or secondary memory <highlight><bold>908</bold></highlight>. Computer programs can also be received via communications interface <highlight><bold>924</bold></highlight>. Such computer programs, when executed, enable computer system <highlight><bold>901</bold></highlight> to perform the features of the present invention as discussed herein. In particular, the computer programs, when executed, enable processor <highlight><bold>904</bold></highlight> to perform the features of the present invention. Accordingly, such computer programs represent controllers of the computer system <highlight><bold>901</bold></highlight>. </paragraph>
<paragraph id="P-0215" lvl="0"><number>&lsqb;0215&rsqb;</number> In an embodiment where the invention is implemented using software, the software may be stored in a computer program product and loaded into computer system <highlight><bold>901</bold></highlight> using removable storage drive <highlight><bold>912</bold></highlight>, hard drive <highlight><bold>910</bold></highlight> or communications interface <highlight><bold>924</bold></highlight>. The control logic (software), when executed by the processor <highlight><bold>904</bold></highlight>, causes processor <highlight><bold>904</bold></highlight> to perform the functions of the invention as described herein. In another embodiment, the invention is implemented primarily in hardware using, for example, hardware components such as application specific integrated circuits (ASICs). Implementation of the hardware state machine able to perform the functions described herein will be apparent to persons skilled in the relevant art(s). </paragraph>
<paragraph id="P-0216" lvl="0"><number>&lsqb;0216&rsqb;</number> In yet other embodiments, the invention may be implemented using a combination of both hardware and software. </paragraph>
<paragraph id="P-0217" lvl="7"><number>&lsqb;0217&rsqb;</number> X. Detailed View of Environmental Hierarchy </paragraph>
<paragraph id="P-0218" lvl="0"><number>&lsqb;0218&rsqb;</number> In this section, the layers of an exemplary environmental hierarchy from the site down to the footprint (located in database <highlight><bold>108</bold></highlight>) are described in detail. Database <highlight><bold>108</bold></highlight> stores non-graphical (logical) data, which are used to interrelate the data tables. These data are also viewable to users in a tabular form. Database <highlight><bold>108</bold></highlight> also stores graphical data, which is used to illustrate graphically the levels of the hierarchy as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0219" lvl="0"><number>&lsqb;0219&rsqb;</number> A. Sites </paragraph>
<paragraph id="P-0220" lvl="0"><number>&lsqb;0220&rsqb;</number> As depicted in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>C, site table <highlight><bold>1004</bold></highlight> represents a site. A site is the physical location (e.g., the Dallas-Fort Worth site) where one or more buildings that store equipment, such as racks, are located. Site designates the highest logical layer in the conceptual framework provided by the exemplary environmental hierarchy. As shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>C, sites have the following associated fields. </paragraph>
<paragraph id="P-0221" lvl="2"><number>&lsqb;0221&rsqb;</number> 1. Site identification <highlight><bold>1004</bold></highlight><highlight><italic>a </italic></highlight>is the unique serial number that identifies a site. </paragraph>
<paragraph id="P-0222" lvl="2"><number>&lsqb;0222&rsqb;</number> 2. Site code <highlight><bold>1004</bold></highlight><highlight><italic>b </italic></highlight>is a 6-character identification for the site. </paragraph>
<paragraph id="P-0223" lvl="2"><number>&lsqb;0223&rsqb;</number> 3. Site type code <highlight><bold>1004</bold></highlight><highlight><italic>c </italic></highlight>is a code that identifies the type of the site, as determined by site type table <highlight><bold>1009</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 10D</cross-reference>). These are the valid types of sites that the system will allow for input into site type code <highlight><bold>1004</bold></highlight><highlight><italic>c. </italic></highlight>Information cannot be entered for a site unless it is a valid site. Where there is a direct connection from one table into another table, as here, (e.g., site type code <highlight><bold>1004</bold></highlight><highlight><italic>c</italic></highlight>) the term is referred to as a &ldquo;foreign key&rdquo; (FK) into another table. </paragraph>
<paragraph id="P-0224" lvl="2"><number>&lsqb;0224&rsqb;</number> 4. Site name text <highlight><bold>1004</bold></highlight><highlight><italic>d </italic></highlight>is a name for the site, i.e., for colloquial, every day usage (e.g., the &ldquo;Dallas-Fort Worth site&rdquo;). </paragraph>
<paragraph id="P-0225" lvl="2"><number>&lsqb;0225&rsqb;</number> 5. Site short code <highlight><bold>1004</bold></highlight><highlight><italic>e </italic></highlight>is a three-character site code that provides an alternative method of referring to the site. </paragraph>
<paragraph id="P-0226" lvl="2"><number>&lsqb;0226&rsqb;</number> 6. Responsible department identification <highlight><bold>1004</bold></highlight><highlight><italic>f </italic></highlight>is a 10-character identification that designates a department responsible for the site. In a large organization, different departments of the organization may be responsible for different sites. This field is a foreign key into the responsible department table <highlight><bold>1006</bold></highlight>. </paragraph>
<paragraph id="P-0227" lvl="2"><number>&lsqb;0227&rsqb;</number> 7. Physical address lines <highlight><bold>1004</bold></highlight><highlight><italic>g, </italic></highlight><highlight><bold>1004</bold></highlight><highlight><italic>h, </italic></highlight>physical city name <highlight><bold>1004</bold></highlight><highlight><italic>i, </italic></highlight>physical zip code <highlight><bold>1004</bold></highlight><highlight><italic>j, </italic></highlight>and physical state code <highlight><bold>1004</bold></highlight><highlight><italic>k </italic></highlight>are fields used to store the complete address of the site. Physical state code <highlight><bold>1004</bold></highlight><highlight><italic>k </italic></highlight>is a foreign key into state table <highlight><bold>1008</bold></highlight>, where valid state codes are stored. </paragraph>
<paragraph id="P-0228" lvl="2"><number>&lsqb;0228&rsqb;</number> 8. Create user identification <highlight><bold>1004</bold></highlight><highlight><italic>l, </italic></highlight>create date <highlight><bold>1004</bold></highlight><highlight><italic>m, </italic></highlight>last update identification <highlight><bold>1004</bold></highlight><highlight><italic>n, </italic></highlight>and last update date <highlight><bold>1004</bold></highlight><highlight><italic>o </italic></highlight>are fields that respectively identify (1) the user that entered the record into the database, (2) the date the user inserted the identification, (3) the last user who updated the record, and (4) the last date the record was updated. </paragraph>
<paragraph id="P-0229" lvl="2"><number>&lsqb;0229&rsqb;</number> 9. Lease code <highlight><bold>1004</bold></highlight><highlight><italic>p </italic></highlight>identifies whether the site is leased or owned by the organization. </paragraph>
<paragraph id="P-0230" lvl="0"><number>&lsqb;0230&rsqb;</number> B. Structures </paragraph>
<paragraph id="P-0231" lvl="0"><number>&lsqb;0231&rsqb;</number> As depicted in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>D, structure table <highlight><bold>1010</bold></highlight> represents a physical structure, which is also referred to herein as a building or a facility. A facility can be a brick-and-mortar building that houses many different types of equipment, or instead a specialized building, such as a telecommunications shelter. As recognized by those of ordinary skill, the function of the structure is not limited by the invention. Examples of specialized structures in the telecommunications industry are a telecommunications shelter used for light wave regeneration, a multiplexer facility, a termination facility where long distance traffic is switched into local telephone network traffic, or a node information center (NIC) housing mainframe computers. Each site can have one or more structures. As shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>D, structures have the following associated fields. </paragraph>
<paragraph id="P-0232" lvl="2"><number>&lsqb;0232&rsqb;</number> 1. Structure identification <highlight><bold>1010</bold></highlight><highlight><italic>a </italic></highlight>is the unique serial number that identifies a structure. </paragraph>
<paragraph id="P-0233" lvl="2"><number>&lsqb;0233&rsqb;</number> 2. Site identification <highlight><bold>1010</bold></highlight><highlight><italic>b </italic></highlight>is a foreign key back to the parent site associated with the structure. Hence, this field identifies the parent site for the building. </paragraph>
<paragraph id="P-0234" lvl="2"><number>&lsqb;0234&rsqb;</number> 3. Structure name text <highlight><bold>1010</bold></highlight><highlight><italic>c </italic></highlight>and descriptive text <highlight><bold>1010</bold></highlight><highlight><italic>d </italic></highlight>respectively identify and describe the building. Structure name text <highlight><bold>1010</bold></highlight><highlight><italic>c </italic></highlight>is a name associated with the site, i.e., for common usage. For example, at a certain site, there may be a building dedicated for storing radios, a building dedicated for storing generators, and a building dedicated for storing switches, respectively called &ldquo;radio,&rdquo; &ldquo;generator,&rdquo; and &ldquo;switch.&rdquo; Descriptive text <highlight><bold>1010</bold></highlight><highlight><italic>d </italic></highlight>describes the building in greater detail. </paragraph>
<paragraph id="P-0235" lvl="2"><number>&lsqb;0235&rsqb;</number> 4. Create user identification <highlight><bold>1010</bold></highlight><highlight><italic>e, </italic></highlight>create date <highlight><bold>1010</bold></highlight><highlight><italic>f, </italic></highlight>last update identification <highlight><bold>1010</bold></highlight><highlight><italic>g, </italic></highlight>and last update date <highlight><bold>1010</bold></highlight><highlight><italic>h </italic></highlight>are fields that respectively identify (1) the user that entered the record into the database, (2) the date the user inserted the identification, (3) the last user who updated the record, and (4) the last date the record was updated. </paragraph>
<paragraph id="P-0236" lvl="0"><number>&lsqb;0236&rsqb;</number> C. Floor </paragraph>
<paragraph id="P-0237" lvl="0"><number>&lsqb;0237&rsqb;</number> As depicted in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>D, floor table <highlight><bold>1011</bold></highlight> is a logical representation of the floors within the facility where the equipment is to be placed. Each structure has one or more floors. As shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>D, floors have the following associated fields. </paragraph>
<paragraph id="P-0238" lvl="2"><number>&lsqb;0238&rsqb;</number> 1. Floor identification <highlight><bold>1011</bold></highlight><highlight><italic>a </italic></highlight>is the unique serial number that identifies a floor. </paragraph>
<paragraph id="P-0239" lvl="2"><number>&lsqb;0239&rsqb;</number> 2. Structure identification <highlight><bold>1011</bold></highlight><highlight><italic>b </italic></highlight>is a foreign key back to the parent structure associated with the floor. Hence, this field identifies the parent building for the floor. </paragraph>
<paragraph id="P-0240" lvl="2"><number>&lsqb;0240&rsqb;</number> 3. Floor name text <highlight><bold>1011</bold></highlight><highlight><italic>c </italic></highlight>and descriptive text <highlight><bold>1011</bold></highlight><highlight><italic>d </italic></highlight>respectively identify and describe the floor. Floor name text <highlight><bold>1011</bold></highlight><highlight><italic>c </italic></highlight>is a name associated with the particular floor, i.e., for common usage. Typically, the floor name text <highlight><bold>1011</bold></highlight><highlight><italic>c </italic></highlight>identifies the floor by a number. Descriptive text <highlight><bold>1011</bold></highlight><highlight><italic>d </italic></highlight>can be used to describe the floor in greater detail. </paragraph>
<paragraph id="P-0241" lvl="2"><number>&lsqb;0241&rsqb;</number> 4. Floor plan drawing file name <highlight><bold>1011</bold></highlight><highlight><italic>a </italic></highlight>is the name of an optional architectural (civil) file that governs the physical outlay of the floor. The architectural file is produced by a CADD, such as for example Microstation CADD <highlight><bold>117</bold></highlight>. The architectural file can, for example, represent the locations of fire escapes, physical columns for plumbing, wiring that provide electricity, etc. </paragraph>
<paragraph id="P-0242" lvl="2"><number>&lsqb;0242&rsqb;</number> 5. Area quantity <highlight><bold>1011</bold></highlight><highlight><italic>f </italic></highlight>is the area associated with the floor. Placement tool <highlight><bold>116</bold></highlight> allows a user to use a mouse (or other input device) to graphically trace the layout of the floor. When the floor area is traced out, the CADD software or equivalent device can calculate the area associated with the floor in, for example, square inches, and store the information in this field. </paragraph>
<paragraph id="P-0243" lvl="2"><number>&lsqb;0243&rsqb;</number> 6. Create user identification <highlight><bold>1011</bold></highlight><highlight><italic>h, </italic></highlight>create date <highlight><bold>1011</bold></highlight><highlight><italic>i, </italic></highlight>last update identification <highlight><bold>1011</bold></highlight><highlight><italic>j, </italic></highlight>and last update date <highlight><bold>1011</bold></highlight><highlight><italic>k </italic></highlight>are fields that respectively identify (1) the user that entered the record into the database, (2) the date the user inserted the identification, (3) the last user who updated the record, and (4) the last date the record was updated. </paragraph>
<paragraph id="P-0244" lvl="0"><number>&lsqb;0244&rsqb;</number> D. Floor points </paragraph>
<paragraph id="P-0245" lvl="0"><number>&lsqb;0245&rsqb;</number> As depicted in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>D, floor points table <highlight><bold>1012</bold></highlight> is where graphical data regarding the floor are stored. A user can use the SiteVu placement tool application <highlight><bold>116</bold></highlight> to create a floor object. Placement tool <highlight><bold>116</bold></highlight> sends a command to Microstation <highlight><bold>117</bold></highlight> to set up a dialog (or session) with the user. Using the mouse or other input device, the user traces out the shape of the object, which Microstation <highlight><bold>117</bold></highlight> displays on workstation <highlight><bold>104</bold></highlight>. When the user is finished the operation, Microstation <highlight><bold>117</bold></highlight> informs placement tool <highlight><bold>116</bold></highlight> that the user has completed making a graphical representation of the object. Placement tool <highlight><bold>116</bold></highlight> then translates the graphical information into non-graphical information, specifically as tabular point data in the floor points table <highlight><bold>1012</bold></highlight> in database <highlight><bold>108</bold></highlight>. </paragraph>
<paragraph id="P-0246" lvl="0"><number>&lsqb;0246&rsqb;</number> When a user later uses the SiteVu placement tool <highlight><bold>116</bold></highlight> to view a graphical floor object, SiteVu placement tool <highlight><bold>116</bold></highlight> retrieves non-graphical information (representing the graphical floor objects) from the floor points table <highlight><bold>1012</bold></highlight> and directs Microstation CADD <highlight><bold>117</bold></highlight> to draw the floor. As shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>D, floor points have the following associated fields. </paragraph>
<paragraph id="P-0247" lvl="2"><number>&lsqb;0247&rsqb;</number> 1. Floor identification <highlight><bold>1012</bold></highlight><highlight><italic>a </italic></highlight>is a 9-digit unique serial number that identifies the floor. </paragraph>
<paragraph id="P-0248" lvl="2"><number>&lsqb;0248&rsqb;</number> 2. Point sequence number <highlight><bold>1012</bold></highlight><highlight><italic>b </italic></highlight>is a sequencing number for the points, identifying the order of the sequence of points that make up the floor area. </paragraph>
<paragraph id="P-0249" lvl="2"><number>&lsqb;0249&rsqb;</number> 3. Horizontal coordinate number <highlight><bold>1012</bold></highlight><highlight><italic>c </italic></highlight>and vertical coordinate number <highlight><bold>1012</bold></highlight><highlight><italic>d </italic></highlight>are the coordinates of each of the points provided by the CADD software <highlight><bold>117</bold></highlight>. </paragraph>
<paragraph id="P-0250" lvl="2"><number>&lsqb;0250&rsqb;</number> 4. Create user identification <highlight><bold>1012</bold></highlight><highlight><italic>f, </italic></highlight>create date <highlight><bold>1012</bold></highlight><highlight><italic>g, </italic></highlight>last update identification <highlight><bold>1012</bold></highlight><highlight><italic>h, </italic></highlight>and last update date <highlight><bold>1012</bold></highlight><highlight><italic>i </italic></highlight>are fields that respectively identify (1) the user that entered the record into the database, (2) the date the user inserted the identification, (3) the last user who updated the record, and (4) the last date the record was updated. </paragraph>
<paragraph id="P-0251" lvl="0"><number>&lsqb;0251&rsqb;</number> E. Zone </paragraph>
<paragraph id="P-0252" lvl="0"><number>&lsqb;0252&rsqb;</number> As depicted in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>D, zone table <highlight><bold>1013</bold></highlight> restricts floor space based on an equipment type, which is also called a class type. For example, if telecommunications switches are identified by the user as an equipment class, then all equipment of the class labeled &ldquo;telecommunications switch&rdquo; can be restricted to a &ldquo;telecommunications switch zone&rdquo; on the floor. As one of ordinary skill will recognize, zones are limited only by the user&apos;s imagination. Examples of zones include collocation zones (where space for equipment owned by other vendors can be leased), furniture zones, multiplexer zones, computer zones, building support (e.g., HVAC) zones, etc. As shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>D, zones have the following associated fields. </paragraph>
<paragraph id="P-0253" lvl="2"><number>&lsqb;0253&rsqb;</number> 1. Zone identification <highlight><bold>1013</bold></highlight><highlight><italic>a </italic></highlight>is the unique serial number that identifies a zone. </paragraph>
<paragraph id="P-0254" lvl="2"><number>&lsqb;0254&rsqb;</number> 2. Floor identification <highlight><bold>1013</bold></highlight><highlight><italic>b </italic></highlight>is a foreign key back to the parent floor associated with the zone. Hence, this field identifies the parent floor for the zone. </paragraph>
<paragraph id="P-0255" lvl="2"><number>&lsqb;0255&rsqb;</number> 3. Zone name text <highlight><bold>1013</bold></highlight><highlight><italic>c </italic></highlight>is a name associated with the zone, i.e., for common usage. </paragraph>
<paragraph id="P-0256" lvl="2"><number>&lsqb;0256&rsqb;</number> 4. Equipment class code <highlight><bold>1013</bold></highlight><highlight><italic>d </italic></highlight>is a foreign key into the class table <highlight><bold>1030</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 10I</cross-reference>), which identifies the type or class of equipment that can be placed and stored in the zone. For example, a zone can be designated for storage of only switches, only transmission type equipment, only collocation type equipment, or any other type of equipment desired. This feature can be overridden by a user with special access, such as a &ldquo;superuser.&rdquo; The field makes the zone an intelligent type of container in that a user can predesignate, very specifically, what type of equipment, or more generally, what class of equipment is allowed to be stored within a given zone. </paragraph>
<paragraph id="P-0257" lvl="2"><number>&lsqb;0257&rsqb;</number> 5. Area quantity <highlight><bold>1013</bold></highlight><highlight><italic>e </italic></highlight>is the area associated with the zone. Placement tool <highlight><bold>116</bold></highlight> allows a user to use a mouse (or other input device) to graphically trace the outlay of the zone. When the zone area is traced out, the CADD software or equivalent device can calculate the area associated with the zone in, for example, square inches, and store the information in this field. </paragraph>
<paragraph id="P-0258" lvl="2"><number>&lsqb;0258&rsqb;</number> 6. Create user identification <highlight><bold>1013</bold></highlight><highlight><italic>g, </italic></highlight>create date <highlight><bold>1013</bold></highlight><highlight><italic>h, </italic></highlight>last update identification <highlight><bold>1013</bold></highlight><highlight><italic>i, </italic></highlight>and last update date <highlight><bold>1013</bold></highlight><highlight><italic>j </italic></highlight>are fields that respectively identify (1) the user that entered the record into the database, (2) the date the user inserted the identification, (3) the last user who updated the record, and (4) the last date the record was updated. </paragraph>
<paragraph id="P-0259" lvl="0"><number>&lsqb;0259&rsqb;</number> F. Zone Points </paragraph>
<paragraph id="P-0260" lvl="0"><number>&lsqb;0260&rsqb;</number> As depicted in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>D, zone points table <highlight><bold>1014</bold></highlight> is where graphical data regarding the zone is stored. A user can use the SiteVu placement tool <highlight><bold>116</bold></highlight> to create a zone object. Placement tool <highlight><bold>116</bold></highlight> sends a command to Microstation <highlight><bold>117</bold></highlight> to set up a dialog (or session) with the user. Using the mouse or other input device, the user traces out the shape of the object, which Microstation <highlight><bold>117</bold></highlight> displays on workstation <highlight><bold>104</bold></highlight>. When the user is finished the operation, Microstation <highlight><bold>117</bold></highlight> informs placement tool <highlight><bold>116</bold></highlight> that the user has completed making a graphical representation of the object. Placement tool <highlight><bold>116</bold></highlight> then translates the graphical information into non-graphical information, specifically as tabular point data in the zone points table <highlight><bold>1014</bold></highlight> in database <highlight><bold>108</bold></highlight>. </paragraph>
<paragraph id="P-0261" lvl="0"><number>&lsqb;0261&rsqb;</number> When a user later uses the SiteVu placement tool <highlight><bold>116</bold></highlight> to view a graphical zone object, SiteVu placement tool <highlight><bold>116</bold></highlight> retrieves non-graphical information (representing the graphical zone objects) from zone points table <highlight><bold>1014</bold></highlight> and directs Microstation CADD <highlight><bold>117</bold></highlight> to draw the zone. As shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>D, zone points have the following associated fields. </paragraph>
<paragraph id="P-0262" lvl="2"><number>&lsqb;0262&rsqb;</number> 1. Zone identification <highlight><bold>1014</bold></highlight><highlight><italic>a </italic></highlight>is a 9-digit unique serial number that identifies the zone. </paragraph>
<paragraph id="P-0263" lvl="2"><number>&lsqb;0263&rsqb;</number> 2. Point sequence number <highlight><bold>1014</bold></highlight><highlight><italic>b </italic></highlight>is a sequencing number for the points, identifying the order of the sequence of points that make up the zone area. </paragraph>
<paragraph id="P-0264" lvl="2"><number>&lsqb;0264&rsqb;</number> 3. Horizontal coordinate number <highlight><bold>1014</bold></highlight><highlight><italic>c, </italic></highlight>vertical coordinate number <highlight><bold>1014</bold></highlight><highlight><italic>d </italic></highlight>are the coordinates of the area calculated by the CADD software. </paragraph>
<paragraph id="P-0265" lvl="2"><number>&lsqb;0265&rsqb;</number> 4. Create user identification <highlight><bold>1014</bold></highlight><highlight><italic>f, </italic></highlight>create date <highlight><bold>1014</bold></highlight><highlight><italic>g, </italic></highlight>last update identification <highlight><bold>1014</bold></highlight><highlight><italic>h, </italic></highlight>and last update date <highlight><bold>1013</bold></highlight><highlight><italic>i </italic></highlight>are fields that respectively identify (1) the user that entered the record into the database, (2) the date the user inserted the identification, (3) the last user who updated the record, and (4) the last date the record was updated. </paragraph>
<paragraph id="P-0266" lvl="0"><number>&lsqb;0266&rsqb;</number> G. Planning Unit </paragraph>
<paragraph id="P-0267" lvl="0"><number>&lsqb;0267&rsqb;</number> As depicted in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>E, planning unit table <highlight><bold>1015</bold></highlight> logically represents a planning unit. Planning units are divisions within a single zone. Planning units allow for multiple individuals to concurrently place rows, as represented graphically by Microstation CADD tool <highlight><bold>117</bold></highlight>, into a single zone. The SiteVu placement tool <highlight><bold>116</bold></highlight> allows a single planner to work in a single planning unit, thereby locking out other planners from the planning unit. As shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>E, planning units have the following associated fields. </paragraph>
<paragraph id="P-0268" lvl="2"><number>&lsqb;0268&rsqb;</number> 1. Planning unit identification <highlight><bold>1015</bold></highlight><highlight><italic>a </italic></highlight>is the unique serial number that identifies a planning unit. </paragraph>
<paragraph id="P-0269" lvl="2"><number>&lsqb;0269&rsqb;</number> 2. Zone identification <highlight><bold>1015</bold></highlight><highlight><italic>b </italic></highlight>is a foreign key back to the parent zone associated with the planning unit. Hence, this field identifies the parent zone for the planning unit. </paragraph>
<paragraph id="P-0270" lvl="2"><number>&lsqb;0270&rsqb;</number> 3. Planning unit name text <highlight><bold>1015</bold></highlight><highlight><italic>c </italic></highlight>and descriptive text <highlight><bold>1015</bold></highlight><highlight><italic>d </italic></highlight>respectively identify and describe the floor. Planning unit name text <highlight><bold>1015</bold></highlight><highlight><italic>c </italic></highlight>is a name associated with the planning unit, which is a subset of the zone name. Descriptive text <highlight><bold>1015</bold></highlight><highlight><italic>d </italic></highlight>can be used to describe the floor in greater detail. </paragraph>
<paragraph id="P-0271" lvl="2"><number>&lsqb;0271&rsqb;</number> 4. Area quantity <highlight><bold>1015</bold></highlight><highlight><italic>e </italic></highlight>is the area associated with the planning unit, which is determined by placement tool <highlight><bold>116</bold></highlight>. </paragraph>
<paragraph id="P-0272" lvl="2"><number>&lsqb;0272&rsqb;</number> 5. Floor identification <highlight><bold>1015</bold></highlight><highlight><italic>f </italic></highlight>is a foreign key back to the floor associated with the planning unit. Hence, this field identifies the parent floor for the planning unit. </paragraph>
<paragraph id="P-0273" lvl="2"><number>&lsqb;0273&rsqb;</number> 6. Floor load limit quantity <highlight><bold>1015</bold></highlight><highlight><italic>g </italic></highlight>indicates the amount of weight (e.g., per square inch) that the floor can withstand in the planning unit. </paragraph>
<paragraph id="P-0274" lvl="2"><number>&lsqb;0274&rsqb;</number> 7. Create user identification <highlight><bold>1015</bold></highlight><highlight><italic>i, </italic></highlight>create date <highlight><bold>1015</bold></highlight><highlight><italic>j, </italic></highlight>last update identification <highlight><bold>1015</bold></highlight><highlight><italic>k, </italic></highlight>and last update date <highlight><bold>1015</bold></highlight><highlight><italic>l </italic></highlight>are fields that respectively identify (1) the user that entered the record into the database, (2) the date the user inserted the identification, (3) the last user who updated the record, and (4) the last date the record was updated. </paragraph>
<paragraph id="P-0275" lvl="0"><number>&lsqb;0275&rsqb;</number> H. Planning Unit Points </paragraph>
<paragraph id="P-0276" lvl="0"><number>&lsqb;0276&rsqb;</number> As depicted in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>E, planning unit points table <highlight><bold>1016</bold></highlight> is where graphical data regarding the planning unit are stored. A user can use SiteVu placement tool <highlight><bold>116</bold></highlight> to create a planning unit object. Placement tool <highlight><bold>116</bold></highlight> sends a command to Microstation <highlight><bold>117</bold></highlight> to set up a dialog (or session) with the user. Using the mouse or other input device, the user traces out the shape of the object, which Microstation <highlight><bold>117</bold></highlight> displays on workstation <highlight><bold>104</bold></highlight>. When the user is finished the operation, Microstation <highlight><bold>117</bold></highlight> informs placement tool <highlight><bold>116</bold></highlight> that the user has completed making a graphical representation of the object. Placement tool <highlight><bold>116</bold></highlight> then translates the graphical information into non-graphical information, specifically as tabular point data in the planning unit points table <highlight><bold>1016</bold></highlight> in database <highlight><bold>108</bold></highlight>. </paragraph>
<paragraph id="P-0277" lvl="0"><number>&lsqb;0277&rsqb;</number> When a user later uses SiteVu placement tool <highlight><bold>116</bold></highlight> to view a graphical planning unit object, SiteVu placement tool <highlight><bold>116</bold></highlight> retrieves the non-graphical information (representing the graphical planning unit objects) from planning unit points table <highlight><bold>1016</bold></highlight> and directs Microstation CADD <highlight><bold>117</bold></highlight> to draw the planning unit. As shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>E, planning unit points have the following associated fields. </paragraph>
<paragraph id="P-0278" lvl="2"><number>&lsqb;0278&rsqb;</number> 1. Planning unit identification <highlight><bold>1016</bold></highlight><highlight><italic>a </italic></highlight>is a 9-digit unique serial number that identifies the planning unit. </paragraph>
<paragraph id="P-0279" lvl="2"><number>&lsqb;0279&rsqb;</number> 2. Point sequence number <highlight><bold>1016</bold></highlight><highlight><italic>b </italic></highlight>is a sequencing number for the points, identifying the order of the sequence of points that make up the planning unit area. </paragraph>
<paragraph id="P-0280" lvl="2"><number>&lsqb;0280&rsqb;</number> 3. Horizontal coordinate number <highlight><bold>1016</bold></highlight><highlight><italic>c </italic></highlight>and vertical coordinate number <highlight><bold>1016</bold></highlight><highlight><italic>d </italic></highlight>are the coordinates of the area calculated by the CADD software. </paragraph>
<paragraph id="P-0281" lvl="2"><number>&lsqb;0281&rsqb;</number> 4. Create user identification <highlight><bold>1016</bold></highlight><highlight><italic>f, </italic></highlight>create date <highlight><bold>1016</bold></highlight><highlight><italic>g, </italic></highlight>last update identification <highlight><bold>1016</bold></highlight><highlight><italic>h, </italic></highlight>and last update date <highlight><bold>1016</bold></highlight><highlight><italic>i </italic></highlight>are fields that respectively identify (1) the user that entered the record into the database, (2) the date the user inserted the identification, (3) the last user who updated the record, and (4) the last date the record was updated. </paragraph>
<paragraph id="P-0282" lvl="0"><number>&lsqb;0282&rsqb;</number> I. Rows </paragraph>
<paragraph id="P-0283" lvl="0"><number>&lsqb;0283&rsqb;</number> As depicted in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>E, rows table <highlight><bold>1017</bold></highlight> logically represents a physical row where equipment is to be placed. Physical obstructions can make a row discontinuous, meaning that the row can stop at a column (indicated by an architectural diagram), and continue on the other side of the obstruction. For this reason, the row table is a logical (non-graphical) entity, storing information on the row without providing a graphical object. As shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>E, rows have the following associated fields. </paragraph>
<paragraph id="P-0284" lvl="2"><number>&lsqb;0284&rsqb;</number> 1. Row identification <highlight><bold>1017</bold></highlight><highlight><italic>a </italic></highlight>is the unique serial number that identifies a row. </paragraph>
<paragraph id="P-0285" lvl="2"><number>&lsqb;0285&rsqb;</number> 2. Planning unit identification <highlight><bold>1017</bold></highlight><highlight><italic>b </italic></highlight>is a foreign key back to the parent planning unit associated with the row. Hence, this field identifies the parent planning unit for the row. </paragraph>
<paragraph id="P-0286" lvl="2"><number>&lsqb;0286&rsqb;</number> 3. Row name text <highlight><bold>1015</bold></highlight><highlight><italic>c </italic></highlight>is a name associated with the planning unit, i.e., for common usage. The row is typically represented as a number, although it can be identified by a descriptive name, such as the &ldquo;radio&rdquo; row, or &ldquo;switch&rdquo; row. </paragraph>
<paragraph id="P-0287" lvl="2"><number>&lsqb;0287&rsqb;</number> 4. Create user identification <highlight><bold>1017</bold></highlight><highlight><italic>d, </italic></highlight>create date <highlight><bold>1017</bold></highlight><highlight><italic>e, </italic></highlight>last update identification <highlight><bold>1017</bold></highlight><highlight><italic>f, </italic></highlight>and last update date <highlight><bold>1017</bold></highlight><highlight><italic>g </italic></highlight>are fields that respectively identify (1) the user that entered the record into the database, (2) the date the user inserted the identification, (3) the last user who updated the record, and (4) the last date the record was updated. </paragraph>
<paragraph id="P-0288" lvl="0"><number>&lsqb;0288&rsqb;</number> J. Row Segments </paragraph>
<paragraph id="P-0289" lvl="0"><number>&lsqb;0289&rsqb;</number> As depicted in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>E, rows segments table <highlight><bold>1018</bold></highlight> represents graphical information for segments of the rows that are logically represented by row table <highlight><bold>1017</bold></highlight>. Row segments are provided so that the floor space in a planning unit can be effectively utilized, despite the presence of physical obstructions (such as columns) indicated by an architectural diagram. </paragraph>
<paragraph id="P-0290" lvl="0"><number>&lsqb;0290&rsqb;</number> As with floor points table <highlight><bold>1012</bold></highlight>, zone points table <highlight><bold>1014</bold></highlight>, and planning units points table <highlight><bold>1016</bold></highlight>, row segment table <highlight><bold>1018</bold></highlight> comprises graphical data regarding the row segments. A user can use SiteVu placement tool <highlight><bold>116</bold></highlight> to create a row segment object. Placement tool <highlight><bold>116</bold></highlight> sends a command to Microstation <highlight><bold>117</bold></highlight> to set up a dialog (or session) with the user. Using the mouse or other input device, the user traces out the shape of the object, which Microstation <highlight><bold>117</bold></highlight> displays on workstation <highlight><bold>104</bold></highlight>. When the user is finished the operation, Microstation <highlight><bold>117</bold></highlight> informs placement tool <highlight><bold>116</bold></highlight> that the user has completed making a graphical representation of the object. Placement tool <highlight><bold>116</bold></highlight> then translates the graphical information into non-graphical information, specifically as tabular point data in row segment table <highlight><bold>1018</bold></highlight> in database <highlight><bold>108</bold></highlight>. </paragraph>
<paragraph id="P-0291" lvl="0"><number>&lsqb;0291&rsqb;</number> When a user later uses SiteVu placement tool <highlight><bold>116</bold></highlight> to view a graphical row segment object, SiteVu placement tool <highlight><bold>116</bold></highlight> retrieves non-graphical information (representing the graphical row segment objects) from row segment table <highlight><bold>1018</bold></highlight> and directs Microstation CADD <highlight><bold>117</bold></highlight> to draw the row segment. As shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>E, row segment points have the following associated fields. </paragraph>
<paragraph id="P-0292" lvl="0"><number>&lsqb;0292&rsqb;</number> 1. Row identification <highlight><bold>1018</bold></highlight><highlight><italic>a </italic></highlight>is a foreign key back to the logical parent, which is the row associated with the row segment. Hence, this field identifies the parent row for the row segment. </paragraph>
<paragraph id="P-0293" lvl="2"><number>&lsqb;0293&rsqb;</number> 2. Row segment sequence number <highlight><bold>1018</bold></highlight><highlight><italic>b </italic></highlight>uniquely identifies the row segment within the parent row, using a 3-digit serialization quantity. </paragraph>
<paragraph id="P-0294" lvl="2"><number>&lsqb;0294&rsqb;</number> 3. Floor identification <highlight><bold>1018</bold></highlight><highlight><italic>d </italic></highlight>is a foreign key back to the floor associated with the ancestor planning unit. Hence, this field identifies the ancestor floor for the row segment. </paragraph>
<paragraph id="P-0295" lvl="2"><number>&lsqb;0295&rsqb;</number> 4. Zone identification <highlight><bold>1018</bold></highlight><highlight><italic>e </italic></highlight>is a foreign key back to the ancestor zone associated with the row segment. Hence, this field identifies the ancestor zone for the row segment. </paragraph>
<paragraph id="P-0296" lvl="2"><number>&lsqb;0296&rsqb;</number> 5. Planning unit identification <highlight><bold>1018</bold></highlight><highlight><italic>f </italic></highlight>is a foreign key back to the ancestor planning unit associated with the row segment. Hence, this field identifies the ancestor planning unit for the row segment. </paragraph>
<paragraph id="P-0297" lvl="2"><number>&lsqb;0297&rsqb;</number> 6. Start horizontal coordinate number <highlight><bold>1018</bold></highlight><highlight><italic>g, </italic></highlight>start vertical coordinate number <highlight><bold>1018</bold></highlight><highlight><italic>h, </italic></highlight>end horizontal coordinate number <highlight><bold>1018</bold></highlight><highlight><italic>i, </italic></highlight>and end vertical coordinate number <highlight><bold>1018</bold></highlight><highlight><italic>j </italic></highlight>are the coordinates of the non-graphical points representing the graphical row segment object to be drawn by the CADD software. </paragraph>
<paragraph id="P-0298" lvl="2"><number>&lsqb;0298&rsqb;</number> 7. Length quantity <highlight><bold>1018</bold></highlight><highlight><italic>k </italic></highlight>identifies the length of the row segment. </paragraph>
<paragraph id="P-0299" lvl="2"><number>&lsqb;0299&rsqb;</number> 8. Height limit quantity <highlight><bold>1018</bold></highlight><highlight><italic>l </italic></highlight>indicates the greatest possible height of equipment placed in the row segment. </paragraph>
<paragraph id="P-0300" lvl="2"><number>&lsqb;0300&rsqb;</number> 9. Create user identification <highlight><bold>1018</bold></highlight><highlight><italic>m, </italic></highlight>create date <highlight><bold>1018</bold></highlight><highlight><italic>n, </italic></highlight>last update identification <highlight><bold>1018</bold></highlight><highlight><italic>o, </italic></highlight>and last update date <highlight><bold>1018</bold></highlight><highlight><italic>p </italic></highlight>are fields that respectively identify (1) the user that entered the record into the database, (2) the date the user inserted the identification, (3) the last user who updated the record, and (4) the last date the record was updated. </paragraph>
<paragraph id="P-0301" lvl="0"><number>&lsqb;0301&rsqb;</number> K. Footprints </paragraph>
<paragraph id="P-0302" lvl="0"><number>&lsqb;0302&rsqb;</number> As depicted in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>G, placement data for racks table <highlight><bold>1061</bold></highlight> represent footprints both graphically and logically. In the exemplary embodiment, a footprint is the union of a configured rack, which can be an article of manufacture or a piece of equipment, for example, and a space on the floor, specifically a row segment on the floor. Hence, the footprint refers to a space actually occupied by a piece of equipment in the site hierarchy, containing the most specific and abundant information in the hierarchy. </paragraph>
<paragraph id="P-0303" lvl="0"><number>&lsqb;0303&rsqb;</number> As per the graphical function, as described in section VIII.D.9 (step <highlight><bold>804</bold></highlight>) the footprint graphical object is automatically placed once the user selects a row segment graphical object (or creates a row segment graphical object) and selects a configured rack from database <highlight><bold>108</bold></highlight>. When a user later uses placement tool <highlight><bold>116</bold></highlight> to retrieve a graphical floor object, placement tool <highlight><bold>116</bold></highlight> retrieves the appropriate non-graphical information representing the graphical object from database <highlight><bold>108</bold></highlight> and directs Microstation CADD <highlight><bold>117</bold></highlight> to draw the footprint object. Logically, the footprint stores a great deal of non-graphical information regarding the equipment placed therein, including relevant dates. Specifically, as shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>G, footprints have the following associated fields. </paragraph>
<paragraph id="P-0304" lvl="2"><number>&lsqb;0304&rsqb;</number> 1. Footprint instance identification <highlight><bold>1061</bold></highlight><highlight><italic>a </italic></highlight>is the unique number that identifies a footprint. </paragraph>
<paragraph id="P-0305" lvl="2"><number>&lsqb;0305&rsqb;</number> 2. Row identification <highlight><bold>1061</bold></highlight><highlight><italic>b </italic></highlight>is a foreign key back to the parent row associated with the footprint. Hence, this field identifies the parent row for the footprint. </paragraph>
<paragraph id="P-0306" lvl="2"><number>&lsqb;0306&rsqb;</number> 3. Row segment sequence number <highlight><bold>1061</bold></highlight><highlight><italic>c </italic></highlight>uniquely identifies the row segment within the parent row. Hence, this field identifies the parent row segment for the footprint. </paragraph>
<paragraph id="P-0307" lvl="2"><number>&lsqb;0307&rsqb;</number> 4. Row segment position code <highlight><bold>1061</bold></highlight><highlight><italic>d </italic></highlight>is a name given to the position within the parent row segment within which the footprint resides. </paragraph>
<paragraph id="P-0308" lvl="2"><number>&lsqb;0308&rsqb;</number> 5. Rack configuration identification <highlight><bold>1061</bold></highlight><highlight><italic>e </italic></highlight>is a foreign key into configured racks table <highlight><bold>1062</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 10J</cross-reference>), which identifies the list of configured racks that are available for placement at the footprint. It should be noted that the configured racks need not be limited to storing modules on shelves, especially where footprints are concerned. For example, a piece of furniture can be stored as a configured rack and have its own footprint. SiteVu placement tool <highlight><bold>116</bold></highlight> can take a configured rack that has already been built and logically attach it to a footprint in a row segment by placing it in this field. </paragraph>
<paragraph id="P-0309" lvl="2"><number>&lsqb;0309&rsqb;</number> 6. Bayface direction indicator <highlight><bold>1061</bold></highlight><highlight><italic>f </italic></highlight>indicates whether the equipment faces the front or the back of the row. </paragraph>
<paragraph id="P-0310" lvl="2"><number>&lsqb;0310&rsqb;</number> 7. Offset quantity <highlight><bold>1061</bold></highlight><highlight><italic>g </italic></highlight>is an offset in length from the row segment. </paragraph>
<paragraph id="P-0311" lvl="2"><number>&lsqb;0311&rsqb;</number> 8. Start gap quantity <highlight><bold>1061</bold></highlight><highlight><italic>h, </italic></highlight>end gap quantity <highlight><bold>1061</bold></highlight><highlight><italic>i, </italic></highlight>and back gap quantity <highlight><bold>1061</bold></highlight><highlight><italic>k </italic></highlight>respectively represent the amount of room (in a distance measure) that is to be permitted to the left, to the right, and behind the equipment. This &ldquo;envelope&rdquo; provides room for cable, heat dissipation, and other necessities. </paragraph>
<paragraph id="P-0312" lvl="2"><number>&lsqb;0312&rsqb;</number> 9. Back-to-back indicator <highlight><bold>1061</bold></highlight><highlight><italic>j </italic></highlight>indicates whether the piece of equipment is back-to-back with another piece of equipment in the same footprint. </paragraph>
<paragraph id="P-0313" lvl="2"><number>&lsqb;0313&rsqb;</number> 10. Anchor point quantity <highlight><bold>1061</bold></highlight> indicates the length from the front of the row segment that the equipment is to be placed. In some circumstances, the equipment is bolted (affixed) to the floor space at this distance from the front of the row segment. </paragraph>
<paragraph id="P-0314" lvl="2"><number>&lsqb;0314&rsqb;</number> 11. Facilities planned installation date <highlight><bold>1061</bold></highlight><highlight><italic>m </italic></highlight>stores the planned installation date when a generic footprint is to be replaced with a specific footprint as described below. </paragraph>
<paragraph id="P-0315" lvl="2"><number>&lsqb;0315&rsqb;</number> 12. Planned installation date <highlight><bold>1061</bold></highlight><highlight><italic>n </italic></highlight>stores the date when a configured rack is going to be placed on the floor. When the engineers determine that an actual piece of equipment is to be placed, i.e., a generic footprint is to be replaced with a specific footprint, then this field is stored in the facilities planned installation date field <highlight><bold>1061</bold></highlight><highlight><italic>m</italic></highlight>. In other words, at the time, rackface tool <highlight><bold>112</bold></highlight> replaces the facilities planned installation date field <highlight><bold>1061</bold></highlight><highlight><italic>m </italic></highlight>with planned installation date field <highlight><bold>1061</bold></highlight><highlight><italic>n. </italic></highlight></paragraph>
<paragraph id="P-0316" lvl="2"><number>&lsqb;0316&rsqb;</number> 13. Actual installation date <highlight><bold>1061</bold></highlight><highlight><italic>o </italic></highlight>is the date that the equipment is actually installed onto the floor. </paragraph>
<paragraph id="P-0317" lvl="2"><number>&lsqb;0317&rsqb;</number> 14. Installation project identification <highlight><bold>1061</bold></highlight><highlight><italic>p </italic></highlight>is the work project for which the equipment is installed. </paragraph>
<paragraph id="P-0318" lvl="2"><number>&lsqb;0318&rsqb;</number> 15. Planned activation date <highlight><bold>1061</bold></highlight><highlight><italic>q </italic></highlight>is the date when the equipment (i.e., the configured rack) is made functional. For example, for telecommunications equipment, this refers to when traffic flows through the device. For some equipment, this date refers to when the equipment is simply supplied power. For other types of equipment, e.g., a piece of furniture, the equipment is never activated. </paragraph>
<paragraph id="P-0319" lvl="2"><number>&lsqb;0319&rsqb;</number> 16. Actual activation date <highlight><bold>1061</bold></highlight><highlight><italic>r </italic></highlight>is when the equipment is actually turned on. </paragraph>
<paragraph id="P-0320" lvl="2"><number>&lsqb;0320&rsqb;</number> 17. Planned decommission date <highlight><bold>1061</bold></highlight><highlight><italic>s </italic></highlight>is when the equipment is planned to be turned off. </paragraph>
<paragraph id="P-0321" lvl="2"><number>&lsqb;0321&rsqb;</number> 18. Actual decommission date <highlight><bold>1061</bold></highlight><highlight><italic>t </italic></highlight>is when the equipment is actually turned off. </paragraph>
<paragraph id="P-0322" lvl="2"><number>&lsqb;0322&rsqb;</number> 19. Planned removal date <highlight><bold>1061</bold></highlight><highlight><italic>u </italic></highlight>is when the equipment is to be physically removed from the floor. </paragraph>
<paragraph id="P-0323" lvl="2"><number>&lsqb;0323&rsqb;</number> 20. Actual removal date <highlight><bold>1061</bold></highlight><highlight><italic>v </italic></highlight>indicates when the equipment is actually physically removed from the floor, such that the floor space is left open. </paragraph>
<paragraph id="P-0324" lvl="2"><number>&lsqb;0324&rsqb;</number> 21. Removal project identification <highlight><bold>1061</bold></highlight><highlight><italic>w </italic></highlight>is the work project for which the equipment is removed. </paragraph>
<paragraph id="P-0325" lvl="2"><number>&lsqb;0325&rsqb;</number> 22. Create user identification <highlight><bold>1061</bold></highlight><highlight><italic>y, </italic></highlight>create date <highlight><bold>1061</bold></highlight><highlight><italic>z, </italic></highlight>last update identification <highlight><bold>1061</bold></highlight><highlight><italic>aa, </italic></highlight>and last update date <highlight><bold>1061</bold></highlight><highlight><italic>bb </italic></highlight>are fields that respectively identify (1) the user that entered the record into the database, (2) the date the user inserted the identification, (3) the last user who updated the record, and (4) the last date the record was updated. </paragraph>
<paragraph id="P-0326" lvl="2"><number>&lsqb;0326&rsqb;</number> 23. Floor identification <highlight><bold>1061</bold></highlight><highlight><italic>cc </italic></highlight>is a foreign key back to the floor associated with the footprint. Hence, this field identifies the ancestor floor for the footprint. </paragraph>
<paragraph id="P-0327" lvl="2"><number>&lsqb;0327&rsqb;</number> 24. Zone identification <highlight><bold>1061</bold></highlight><highlight><italic>dd </italic></highlight>is a foreign key back to the ancestor zone associated with the footprint. Hence, this field identifies the ancestor zone for the footprint. </paragraph>
<paragraph id="P-0328" lvl="2"><number>&lsqb;0328&rsqb;</number> 25. Planning unit identification <highlight><bold>1061</bold></highlight><highlight><italic>ee </italic></highlight>is a foreign key back to the ancestor planning unit associated with the footprint. Hence, this field identifies the ancestor planning unit for the footprint. </paragraph>
<paragraph id="P-0329" lvl="7"><number>&lsqb;0329&rsqb;</number> XI. Additional Applications of the Present Invention </paragraph>
<paragraph id="P-0330" lvl="0"><number>&lsqb;0330&rsqb;</number> The foregoing discussion has principally focused on the application of the present invention to site planning and facilities management in the telecommunications industry. However, as noted above in section I, the present invention is not limited to such applications, but is instead broadly applicable to the management of a collection of physical or virtual items in a modeled environment utilizing a hierarchical conceptual framework. Accordingly, the following discussion elaborates on additional applications of the present invention. </paragraph>
<paragraph id="P-0331" lvl="0"><number>&lsqb;0331&rsqb;</number> As would be expected, in the following discussion some different terms from those used above in the exemplary telecommunications application are employed to describe the various levels within the hierarchical conceptual framework. In particular, instead of a site hierarchy (i.e., site, building, floor, zone, planning unit, row segment, footprint) and a rack hierarchy (i.e., rack, rail, shelf, component), the hierarchical conceptual framework described below includes elements from an environmental hierarchy (of which a site hierarchy is an example), which the user can utilize to define regions of varying sizes within a physical or virtual environment of interest, and an item hierarchy specifying the hierarchical relationships, if any, that can exist between items from the product catalog that are located within the environment. </paragraph>
<paragraph id="P-0332" lvl="0"><number>&lsqb;0332&rsqb;</number> As will be appreciated by those skilled in the art, an environmental hierarchy can contain any number of environmental levels (EL<highlight><subscript>1</subscript></highlight>-EL<highlight><subscript>M</subscript></highlight>, where M&gE;2) that are deemed necessary or convenient to describe the environment of interest. Thus, when the present invention is applied to differing environments, it is expected that differing numbers of environmental levels may be defined. As discussed above, administrative tool <highlight><bold>114</bold></highlight> and placement tool <highlight><bold>116</bold></highlight> may be utilized to create and update information describing the environmental hierarchy. Such data are preferably stored in database <highlight><bold>108</bold></highlight> in tables, where each table contains graphical and non-graphical data describing a respective level of the environment, as discussed above with respect to the site tables, building tables, floor tables, etc., illustrated in FIGS. <highlight><bold>10</bold></highlight>D-<highlight><bold>10</bold></highlight>E. </paragraph>
<paragraph id="P-0333" lvl="0"><number>&lsqb;0333&rsqb;</number> The item hierarchy can similarly include as many item levels (IL<highlight><subscript>1</subscript></highlight>-IL<highlight><subscript>N</subscript></highlight>, N&gE;1) as is deemed necessary or convenient to describe the spatial or logical relationship between items from product catalog <highlight><bold>126</bold></highlight> that are located within the modeled environment. Each type of item preferably has an associated table within database <highlight><bold>108</bold></highlight> that records graphical and non-graphical data relevant to that type of item, as discussed above with respect to tables <highlight><bold>1020</bold></highlight>-<highlight><bold>1023</bold></highlight>. The user can construct instances of hierarchically configured items utilizing a SiteVu item hierarchy tool, such as the rackface tool <highlight><bold>112</bold></highlight> described above with reference to <cross-reference target="DRAWINGS">FIGS. 1D and 6</cross-reference>. The resulting configured items are preferably stored in configuration library <highlight><bold>128</bold></highlight>. As discussed above, after creating items in product catalog <highlight><bold>126</bold></highlight> and hierarchically configured items in configuration library <highlight><bold>128</bold></highlight>, the user can model the environment of interest by placing one or more items at the highest level of the item hierarchy IL<highlight><subscript>1 </subscript></highlight>at specified locations within the regions defined at the lowest level of the environmental hierarchy EL<highlight><subscript>M</subscript></highlight>. </paragraph>
<paragraph id="P-0334" lvl="0"><number>&lsqb;0334&rsqb;</number> Given this introduction, several additional applications of the present invention will now be presented. </paragraph>
<paragraph id="P-0335" lvl="0"><number>&lsqb;0335&rsqb;</number> A. Retail Store </paragraph>
<paragraph id="P-0336" lvl="0"><number>&lsqb;0336&rsqb;</number> The SiteVu software of the present invention can advantageously be applied to the design and management of a retail store, such as department store or grocery store. In such an embodiment, the environmental hierarchy may be implemented as a site hierarchy similar to that utilized in telecommunications applications. For example, in a department store application, the highest environmental level EL<highlight><subscript>1 </subscript></highlight>may be defined as the building or portion of the building occupied by the department store. Successive environmental levels EL<highlight><subscript>2</subscript></highlight>-EL<highlight><subscript>5 </subscript></highlight>may be defined as floors, departments (e.g., misses, juniors, sportswear, women&apos;s shoes, men&apos;s suits, housewares, etc.), planning units (e.g., in which goods may be grouped by manufacturer or type), and footprints (e.g., that contain display fixtures, counters, etc.). </paragraph>
<paragraph id="P-0337" lvl="0"><number>&lsqb;0337&rsqb;</number> The items populating product catalog <highlight><bold>126</bold></highlight> that may be placed in the environment can include both items for sale (i.e., retail goods such as clothing, housewares, furniture, etc.) and items not for sale (e.g., store fixtures, HVAC equipment and ducting, power cables and equipment, cash registers, dollies, etc.). The number of levels of item hierarchy associated with each type of item in product catalog <highlight><bold>126</bold></highlight> can be independently defined. Examples of items having multiple hierarchical layers (and therefore having entries in configuration library <highlight><bold>128</bold></highlight>) include a suit (IL<highlight><subscript>1</subscript></highlight>), which at a second level of item hierarchy (IL<highlight><subscript>2</subscript></highlight>) may include a coat, a vest and a pair of trousers, or a counter (IL<highlight><subscript>1</subscript></highlight>), which at one or more lower levels of the item hierarchy may include a display case for goods, a cash register, a machine to remove security tags, etc. As described above, items at IL<highlight><subscript>1</subscript></highlight>, the highest level of the item hierarchy, can be united with a footprint (i.e., the lowest level in the environmental hierarchy) utilizing placement tool <highlight><bold>116</bold></highlight>. </paragraph>
<paragraph id="P-0338" lvl="0"><number>&lsqb;0338&rsqb;</number> Thus, as discussed above, after constructing the environmental hierarchy, product catalog <highlight><bold>126</bold></highlight>, and configuration library <highlight><bold>128</bold></highlight>, a user is able to add items from product catalog <highlight><bold>126</bold></highlight> and configuration library <highlight><bold>128</bold></highlight> to particular locations within the environment modeled by the environmental hierarchy to create a graphical and intuitive view of an actual or proposed arrangement of items within the retail store. As described above in section X, each of the elements from the environmental hierarchy and items from product catalog <highlight><bold>126</bold></highlight> and configuration library <highlight><bold>128</bold></highlight> placed within the modeled environment have associated graphical and non-graphical data that can be created, stored in database <highlight><bold>108</bold></highlight>, modified, and viewed by the user. These data describe various characteristics of interest that can be utilized not only for site planning and management, but also, by tracking the placement and movement of merchandise, for inventory control, loss management, sales forecasting, and profit optimization, among other uses. </paragraph>
<paragraph id="P-0339" lvl="0"><number>&lsqb;0339&rsqb;</number> For example, if an HVAC unit is one of the items placed within a modeled retail environment, the associated table in database <highlight><bold>108</bold></highlight> can be utilized to track installation, repair and planned replacement dates, power requirements, thermal capacity, efficiency rating, operating costs, etc. This information could be used, for example, by a building superintendent to accurately forecast maintenance and operating costs or to schedule selective maintenance and/or replacement of equipment. On the other hand, for items in the modeled environment that represent retail merchandise, the associated data in database <highlight><bold>108</bold></highlight> may specify a wholesale cost, projected profit margin, actual sale price, date of display, date of sale, associated footprint at time of sale, total number of units, etc. A store manager can periodically utilize report generator <highlight><bold>119</bold></highlight> or the graphical view filtering described above in section VIII.J to identify how well goods are selling (e.g., to determine a need to cancel orders or order additional merchandise), determine which locations and presentations of goods result in highest gross sales or profit, calculate total profit per square foot, improve loss control, etc. </paragraph>
<paragraph id="P-0340" lvl="0"><number>&lsqb;0340&rsqb;</number> To facilitate entry of data describing an environment and the placement of items within the environment, it is advantageous to employ automation to avoid manually entering each piece of data utilizing a keyboard or mouse of a workstation <highlight><bold>104</bold></highlight>. In one preferred embodiment, such automation may be provided by a handheld scanner, such as that described in U.S. Pat. No. 5,959,275, which is incorporated herein by reference. Using such a scanner, which may communicate with the SiteVu tool running on exemplary computer system <highlight><bold>901</bold></highlight> via a wireless communication interface <highlight><bold>924</bold></highlight>, the user may first specify a particular footprint by scanning a corresponding barcode either printed in a hardcopy printout of the floor layout or physically affixed to a display (e.g., hanging rack or shelving system) occupying that footprint. The user can then enter data specifying which goods are located within the specified footprint (or being added to the footprint from a stock room) by scanning the SKU barcodes typically utilized to identify goods. In this manner, a user can quickly perform the necessary data entry without engaging in the tedious task of manually keying in (or using a pointing device to enter) all of the information. </paragraph>
<paragraph id="P-0341" lvl="0"><number>&lsqb;0341&rsqb;</number> Also, as customers select goods off the floor for purchase, a scanner is often utilized as an input device to enter into a cash register the SKU barcode identifying the item being sold. This product identification information, which identifies an item being removed from a footprint, can also be provided to the SiteVu software to automatically update database <highlight><bold>108</bold></highlight> by removing one of the items having that SKU barcode from the modeled environment. In this manner, a real-time view of the goods presented for sale on the floor of the retail store (as well as goods in stock rooms) may be maintained. </paragraph>
<paragraph id="P-0342" lvl="0"><number>&lsqb;0342&rsqb;</number> As will be appreciated, this technique of data entry is applicable not only to the entry of data describing a retail environment, but also to the entry of numerous other types of data, as is clear from the descriptions of other applications provided below. </paragraph>
<paragraph id="P-0343" lvl="0"><number>&lsqb;0343&rsqb;</number> B. Warehouse </paragraph>
<paragraph id="P-0344" lvl="0"><number>&lsqb;0344&rsqb;</number> SiteVu can similarly be applied to a warehouse environment. A typical warehouse environment may include a plurality of rows of storage units (e.g., pallets, fixed or movable racks, refrigeration units) in which goods are temporarily stored. </paragraph>
<paragraph id="P-0345" lvl="0"><number>&lsqb;0345&rsqb;</number> In an exemplary warehouse application, the highest environmental level EL<highlight><subscript>1 </subscript></highlight>may be defined as the building or portion of the building occupied by the warehouse. Successive environmental levels EL<highlight><subscript>2</subscript></highlight>-EL<highlight><subscript>5 </subscript></highlight>may be defined as floor, zone (e.g., perishables, durables, etc.), planning unit (e.g., in which goods may be grouped by manufacturer or type), row segment, and footprint (e.g., of a pallet, movable rack, fixed rack, bin, refrigeration unit, etc.). </paragraph>
<paragraph id="P-0346" lvl="0"><number>&lsqb;0346&rsqb;</number> As with the retail environment, the items populating product catalog <highlight><bold>126</bold></highlight> and configuration library <highlight><bold>128</bold></highlight> that may be placed in the modeled environment can include both warehoused items (e.g., wholesale goods) and warehouse fixtures (e.g., rack units, HVAC equipment and ducting, refrigeration units, power cables and equipment, packaging and loading equipment, etc.). The number of levels in the item hierarchy associated with each type of item can be defined independently. For example, a movable rack unit may be defined at the highest level of the item hierarchy (IL<highlight><subscript>1</subscript></highlight>), with additional levels of item hierarchy (IL<highlight><subscript>2</subscript></highlight>-IL<highlight><subscript>4</subscript></highlight>) being respectively defined by shelves of the rack unit, bins supported by the shelves, and individual goods in the bins. Two layers of item hierarchy, on the other hand, may be utilized to define a pallet of goods: a pallet at IL<highlight><subscript>1 </subscript></highlight>and individual goods at IL<highlight><subscript>2</subscript></highlight>. As described above, items at IL<highlight><subscript>1</subscript></highlight>, the highest level of the item hierarchy, can be united with a footprint (i.e., the lowest level in the environmental hierarchy) utilizing placement tool <highlight><bold>116</bold></highlight>. </paragraph>
<paragraph id="P-0347" lvl="0"><number>&lsqb;0347&rsqb;</number> As discussed above, after constructing the environmental hierarchy, product catalog <highlight><bold>126</bold></highlight>, and configuration library <highlight><bold>128</bold></highlight>, a user is able to add items from product catalog <highlight><bold>126</bold></highlight> and configured items from configuration library <highlight><bold>128</bold></highlight> to particular locations within the modeled warehouse environment (optionally utilizing the scanning technology discussed above) to create a graphical view and associated database representation of an actual or proposed arrangement of a collection of items within the warehouse. The data within database <highlight><bold>108</bold></highlight> have a number of different uses for warehouse management in addition to site planning. For example, the data within database <highlight><bold>108</bold></highlight> and the graphical representation thereof can be utilized by humans or robots to identify a location in the warehouse at which to stock incoming items or remove outgoing items while maintaining a real-time inventory of the warehouse. In addition, database <highlight><bold>108</bold></highlight> may store in association with each warehoused item a date-in and a date-out, which together indicate duration of storage. This information may be utilized to fairly attribute warehousing fees to particular suppliers or retailers. </paragraph>
<paragraph id="P-0348" lvl="0"><number>&lsqb;0348&rsqb;</number> A specialized &ldquo;warehouse&rdquo; environment in which SiteVu may be utilized is a library. A library, at least conceptually, is an information warehouse of an inventory including books, periodicals, microfiche, electronic data, etc. Utilizing the techniques outlined above, SiteVu may be utilized to track the location of inventory lent to subscribers or other institutions, calculate and record fines, manage periodical subscriptions, plan floor layouts (e.g., to avoid exceeding the loading limits of shelving units or floors), record sources of rare materials, and many other uses. SiteVu may similarly be applied to other specialized &ldquo;warehouse&rdquo; environments such as police impound and towing yards for holding automobiles. </paragraph>
<paragraph id="P-0349" lvl="0"><number>&lsqb;0349&rsqb;</number> C. Offshore Platform </paragraph>
<paragraph id="P-0350" lvl="0"><number>&lsqb;0350&rsqb;</number> Another environment to which the SiteVu tool of the present invention may advantageously be applied is an offshore drilling or production platform. On offshore platforms, space is at a premium; accordingly, the SiteVu tool of the present invention can be utilized to perform both &ldquo;floor&rdquo; planning and vertical space planning (as well as many other functions) utilizing the principles set forth above. </paragraph>
<paragraph id="P-0351" lvl="0"><number>&lsqb;0351&rsqb;</number> The environmental hierarchy in platform applications can have at EL<highlight><subscript>1 </subscript></highlight>the platform itself, with various types of platforms (e.g., fixed, floating, jack-up, etc.) being selectable from a picklist. Lower levels of the environmental hierarchy (i.e., EL<highlight><subscript>2</subscript></highlight>-EL<highlight><subscript>M</subscript></highlight>) can be defined as decks, bays, zones, row segments, footprints, etc., as is convenient. The items defined in product catalog <highlight><bold>126</bold></highlight> that can be placed in the modeled environment can include permanent and semi-permanent fixtures, such as generators and motors, a control room, living quarters, galley, piping, compressors, separators, etc., as well as movable equipment such as drill pipe, drill bits, down hole tools, drill rigs, work over equipment, etc. </paragraph>
<paragraph id="P-0352" lvl="0"><number>&lsqb;0352&rsqb;</number> The data in database <highlight><bold>108</bold></highlight> associated with the items from product catalog <highlight><bold>126</bold></highlight> that are placed within the modeled environment can be utilized in a number of ways. First, as noted above, the data may be utilized for floor and vertical space planning and design. Second, equipment managers can track scheduling and availability data for movable equipment such as downhole tools, workover equipment, platform rigs, test separators, and so on. The scheduling data for movable equipment may include, for example, request date, planned use date(s), in use indication, expected date of completion, and cumulative time in service. Third, for movable equipment as well as more permanent fixtures, it may also be helpful to track scheduling and completion of preventive maintenance and servicing (e.g., for separators, valves, motors and power generators) or safety inspections (e.g., ultrasonic testing of pipes for wall thickness). Fourth, data maintained in database <highlight><bold>108</bold></highlight> can be utilized to track dimensions of both movable and non-movable equipment placed in the modeled platform such as drill pipe, conductors on the production deck through which drilling is performed, tubing, casing, etc. This dimensional data can be accessed, for example, by on-shore drilling engineers to determine whether equipment required for upcoming procedures is available on the platform. </paragraph>
<paragraph id="P-0353" lvl="0"><number>&lsqb;0353&rsqb;</number> As will be appreciated from the foregoing, SiteVu has similar applicability to petroleum refineries, chemical processing plants, oil field services organizations and the like. </paragraph>
<paragraph id="P-0354" lvl="0"><number>&lsqb;0354&rsqb;</number> D. Manufacturing, Processing, and Power Plants </paragraph>
<paragraph id="P-0355" lvl="0"><number>&lsqb;0355&rsqb;</number> SiteVu can also be advantageously applied to the design, planning, and operation of manufacturing plants (e.g., aircraft or automobile), processing plants (e.g., ore, food or beverage processing) and power generation and transmission plants. In such environments, as with many of the other applications of SiteVu, optimization of the placement of tools, equipment and parts in the finite amount of available space in the plant environment is an important advantage of the present invention. As described above, SiteVu database <highlight><bold>108</bold></highlight> can also be utilized to conveniently record and display information about plant infrastructure and production equipment such as installation date, service and maintenance scheduling and history, scheduled replacement date, equipment sizes and capacities, etc. This information can be utilized, for example, not only by maintenance and engineering personnel, but also by financial and accounting personnel needing to compute depreciation on fixed assets, cost estimation, etc. </paragraph>
<paragraph id="P-0356" lvl="0"><number>&lsqb;0356&rsqb;</number> In addition, SiteVu can be utilized to track the incorporation of component parts into an assembled product. For example, in the context of aircraft manufacturer, multiple aircraft are typically in production concurrently. Each of these aircraft can be represented in configuration library <highlight><bold>128</bold></highlight> of SiteVu database <highlight><bold>108</bold></highlight> by a corresponding &ldquo;generic&rdquo; aircraft object at the highest level of the item hierarchy (IL<highlight><subscript>1</subscript></highlight>) that can be placed at a particular footprint on the production floor. Similarly, generic objects representing other important components such as wings, engines, tails, avionics, etc., can be placed at other footprints at which these major components are pre-assembled. Then, as each component occupying a lower level of the item hierarchy (i.e., IL<highlight><subscript>2</subscript></highlight>-IL<highlight><subscript>N</subscript></highlight>) is assembled with a component at a higher level of the item hierarchy (i.e., IL<highlight><subscript>1</subscript></highlight>-IL<highlight><subscript>N&minus;1</subscript></highlight>), details regarding the component and its installation can be tracked in SiteVu database <highlight><bold>108</bold></highlight>. </paragraph>
<paragraph id="P-0357" lvl="0"><number>&lsqb;0357&rsqb;</number> For example, a wing, which may be defined as an item at item hierarchy level IL<highlight><subscript>2</subscript></highlight>, may have a number of component systems, such as engines, flaps, lights and deicers, modeled at lower levels of the item hierarchy. As these components are added to the wing, a wing table within database <highlight><bold>108</bold></highlight> can be linked via pointers (referred to above as a &ldquo;foreign keys&rdquo;) to other tables in database <highlight><bold>108</bold></highlight> that each describe a respective one of the installed components. Each of the tables representing a component can detail such information as the manufacturer, assembly information (e.g., planned assembly date, actual assembly date, employee ID of assembler), and quality control verification. Thus, with SiteVu a user can readily obtain very detailed information about an assembled or partially assembled aircraft by selecting graphical objects representing various components of interest, which causes SiteVu to display non-graphical data associated with the objects, as detailed above. In addition, by requesting reports summarizing actual and planned assembly dates from report generator <highlight><bold>119</bold></highlight>, a project manager can readily detect, project and address production delays on the aircraft assembly or portions thereof. </paragraph>
<paragraph id="P-0358" lvl="0"><number>&lsqb;0358&rsqb;</number> E. Construction </paragraph>
<paragraph id="P-0359" lvl="0"><number>&lsqb;0359&rsqb;</number> As will be appreciated upon reference to the foregoing description of the application of SiteVu to manufacturing, SiteVu can also be applied to the design, planning, and construction of buildings and other structures (e.g., office complexes, malls, bridges, dams, hospitals, airports, housing developments, spacecraft, etc.). </paragraph>
<paragraph id="P-0360" lvl="0"><number>&lsqb;0360&rsqb;</number> In construction applications, it is typical that the highest level of the environmental hierarchy (EL<highlight><subscript>1</subscript></highlight>) represents the parcel of land on which construction will occur, the second level of the environmental hierarchy (EL<highlight><subscript>2</subscript></highlight>) represents various subdivisions of the parcel, the third level EL<highlight><subscript>3 </subscript></highlight>represents construction site(s) within the subdivisions, and so on until the lowest level of the environmental hierarchy (EL<highlight><subscript>M</subscript></highlight>) is reached. As noted above, electronic data files, such as CADD files containing architectural drawings and electronic governmental deed records, can be utilized to provide graphical and non-graphical data to the SiteVu tool to facilitate accurate development of the environmental hierarchy. Importantly, the tabular data within database <highlight><bold>108</bold></highlight> associated with the various objects in the environmental hierarchy can include not only dimensional information (e.g., a legal description of the parcel and/or dimensions of buildings), but also additional information, such as the location of easements and utilities, applicable building codes (e.g., setback requirements), and environmental protection information (e.g., required protective measures, use restrictions, and required remediation). In this manner, a user can determine all information relevant to the construction site through an intuitive graphical interface. </paragraph>
<paragraph id="P-0361" lvl="0"><number>&lsqb;0361&rsqb;</number> The items defined in product catalog <highlight><bold>126</bold></highlight> and configuration library <highlight><bold>128</bold></highlight> can represent construction equipment (e.g., bulldozers, cranes, on-site trailers, etc.) and construction materials (e.g., rebar, masonry, bridge supports, HVAC equipment, building fixtures, landscape plants and materials, etc.), as well as one or more structures to be constructed and their component parts. For example, a building may be defined as one of the items at the highest level in the item hierarchy (IL<highlight><subscript>1</subscript></highlight>) that can be united with the lowest level of the environmental hierarchy (EL<highlight><subscript>M</subscript></highlight>). Successively lower levels of the item hierarchy can be utilized to represent building wings, floors, suites, rooms, fixtures, etc. The tabular data in database <highlight><bold>108</bold></highlight> associated with these items can include dimensions, weight/mass, projected construction/installation date, man-hours or hours required to perform construction/installation, cost, and other information of interest. </paragraph>
<paragraph id="P-0362" lvl="0"><number>&lsqb;0362&rsqb;</number> With the SiteVu tool applied in this manner, a construction firm can not only prepare a detailed proposal for a construction project that includes cost, time, staffing and materials estimates, but also can track construction progress and scheduling as described above with respect to the manufacturing environment. In this manner, the construction management firm can anticipate delays, improve scheduling of subcontractors and materials delivery, verify that loading limitations are not exceeded by requesting appropriate reports from report generator <highlight><bold>119</bold></highlight>, track damaged goods and equipment, record change orders, and perform many other useful functions utilizing a single software tool. </paragraph>
<paragraph id="P-0363" lvl="0"><number>&lsqb;0363&rsqb;</number> F. Staffing and Provisioning </paragraph>
<paragraph id="P-0364" lvl="0"><number>&lsqb;0364&rsqb;</number> In some environments to which SiteVu is applicable, staffing and provisioning are important concerns. For example, in a health care facility or amusement park, it may be crucial for safety or efficient operation that different locations within the facility have appropriate equipment or provisions and/or appropriate staffing. </paragraph>
<paragraph id="P-0365" lvl="0"><number>&lsqb;0365&rsqb;</number> SiteVu can be applied to such environments to ensure adequate provisioning and/or staffing. For example, to efficiently provision a new hospital (the construction of which may be managed utilizing SiteVu as discussed above), certain equipment and/or personnel may be associated with selected levels of the environmental or item hierarchy. Assume that hospital policy (or government regulation) requires that each floor be equipped with two external cardiac defibrillators, each patient room have a thermometer and sphygmomanometer, and that the cardiac care unit (CCU) be staffed with at least ten nurses. If, for instance, successively lower levels of the environmental or item hierarchy describing the hospital are utilized to represent a building, wing, floor, unit, and room, a user can utilize placement tool <highlight><bold>116</bold></highlight> to place at least two objects representing cardiac defibrillators within one or more rooms of each floor and to place thermometers and sphygmomanometer in each room designated by an attribute in database <highlight><bold>108</bold></highlight> as a patient room. The tabular data within database <highlight><bold>108</bold></highlight> associated with each of these objects preferably has a &ldquo;present&rdquo; field indicating whether or not the item is inventoried as being physically present at the designated location. In this manner, a report by report generator <highlight><bold>119</bold></highlight> or graphical view based upon the value of the &ldquo;present&rdquo; field can be generated to ascertain the additional equipment needed, if any. Of course, as equipment is moved or removed, database <highlight><bold>108</bold></highlight> is preferably updated so that an accurate picture of available equipment is given. </paragraph>
<paragraph id="P-0366" lvl="0"><number>&lsqb;0366&rsqb;</number> Staffing levels may similarly be managed by defining personnel as objects within product catalog <highlight><bold>126</bold></highlight> and placing graphical objects representing personnel at appropriate locations within the modeled environment. Staffing levels can be monitored in real time by providing inputs to SiteVu from an electronic time stamp system to monitor the arrival and departure of employees. In addition, prospective staffing levels may be projected through defining calendaring fields in the tables within database <highlight><bold>108</bold></highlight> associated with each personnel object. The calendaring fields can specify each date (and, if appropriate, hours) for which a person is needed at the associated location and the employee name(s) or ID(s) scheduled to staff each such date. Thus, an employer can ensure adequate staffing (and project hiring needs) by recording in the calendaring fields in database <highlight><bold>108</bold></highlight> the work schedules of employees assigned to the various staff positions. This is particularly useful in situations in which multiple part-time or seasonal employees are utilized to fill individual staff positions. </paragraph>
<paragraph id="P-0367" lvl="0"><number>&lsqb;0367&rsqb;</number> G. Waste Removal </paragraph>
<paragraph id="P-0368" lvl="0"><number>&lsqb;0368&rsqb;</number> In remediation of hazardous waste sites, such as Superfund cleanup sites, offshore oil spills, or buildings having asbestos tiles, the cleanup process typically entails developing a cleanup strategy for the site and then tracking progress as waste is removed and remediation activities are performed. SiteVu is an ideal tool for both development of a cleanup strategy and tracking removal or cleanup of hazardous waste. </paragraph>
<paragraph id="P-0369" lvl="0"><number>&lsqb;0369&rsqb;</number> When SiteVu is applied to hazardous waste removal, the environmental hierarchy may be implemented as a site hierarchy similar to that utilized in telecommunications applications. For example, the highest environmental level EL<highlight><subscript>1 </subscript></highlight>may be defined to represent a cleanup site, and the second highest environment level EL<highlight><subscript>2 </subscript></highlight>may be utilized to define equal area tracts of land, which may conveniently be arranged in a grid. Lower levels of the environmental hierarchy EL<highlight><subscript>3</subscript></highlight>-EL<highlight><subscript>M </subscript></highlight>may be utilized to represent specific treatment areas in the tracts. Of course, if the hazardous waste site includes buildings or other structures, natural subdivisions of the structures (e.g., floor, room, etc.) may also be defined in the environmental hierarchy. </paragraph>
<paragraph id="P-0370" lvl="0"><number>&lsqb;0370&rsqb;</number> The items populating product catalog <highlight><bold>126</bold></highlight> that may be placed in the modeled environment can include waste to be removed (e.g., crude oil, lead-acid batteries, asbestos or contaminated soil) and equipment (e.g., earth moving machinery) or personnel utilized to perform the waste removal. As described above, items at IL<highlight><subscript>1</subscript></highlight>, the highest level of the item hierarchy, can be united with the lowest level of the environmental hierarchy utilizing placement tool <highlight><bold>116</bold></highlight>. </paragraph>
<paragraph id="P-0371" lvl="0"><number>&lsqb;0371&rsqb;</number> As described above, each of the levels of the environmental hierarchy and items from product catalog <highlight><bold>126</bold></highlight> placed within the modeled environment have associated graphical and non-graphical data that can be created, stored in database <highlight><bold>108</bold></highlight>, modified, and viewed by the user. These data describe various characteristics of interest such as the type of waste, associated safety precautions, governmental regulations governing the handling and disposal of the waste, waste removal date, remediation measures, and estimated removal time. By requesting reports from report generator <highlight><bold>119</bold></highlight> and/or filtered graphical views based upon selected data within database <highlight><bold>108</bold></highlight>, a logical waste removal plan including cost and time estimates can be developed, and progress toward remediation can be tracked. </paragraph>
<paragraph id="P-0372" lvl="0"><number>&lsqb;0372&rsqb;</number> H. Agriculture/Logging </paragraph>
<paragraph id="P-0373" lvl="0"><number>&lsqb;0373&rsqb;</number> SiteVu can also be utilized to great advantage in the management of resources such as farmland, crops, timber, and livestock. In such applications, the levels in the environmental hierarchy can be utilized, for example, to represent a regional operation (e.g., the north Texas operation) at EL<highlight><subscript>1</subscript></highlight>, various tracts of land belonging to the regional operation at EL<highlight><subscript>2</subscript></highlight>, and footprints of plantings or structures (e.g., barns, silos, etc.) within the tracts at EL<highlight><subscript>3</subscript></highlight>. The tabular data within database <highlight><bold>108</bold></highlight> associated with the various levels of the environmental hierarchy can indicate legal descriptions of the property, whether the property is leased or owned, rents (if leased), previous yields (e.g., bushels, board-feet, or pounds of meat per acre), current and previous usage (e.g., type of planting and number of years planted, type of livestock and duration of grazing, etc.), land use incentives (e.g., tax and subsidy information) and other pertinent information. </paragraph>
<paragraph id="P-0374" lvl="0"><number>&lsqb;0374&rsqb;</number> As will be appreciated, the items in product catalog <highlight><bold>126</bold></highlight> that may be graphically placed in the environment modeled utilizing the environmental hierarchy can include standing or harvested crops, livestock, farming equipment (e.g., trucks, combines, tractors, etc.), and structures (e.g., silos, barns, sheds, living quarters and processing facilities), among others. The tabular data within database <highlight><bold>108</bold></highlight> associated with the items in the item hierarchy can include total and current capacities of storage facilities, current and prospective estimated sale price per unit for crops and livestock, maintenance, price and ownership information for farming equipment, and descriptions and schedules of prior and planned cultivation and processing regimens (e.g., the use of fertilizers, insecticides, inoculations, feed supplementation, cutting undergrowth from managed forests, etc.). </paragraph>
<paragraph id="P-0375" lvl="0"><number>&lsqb;0375&rsqb;</number> Through appropriate use of report generator <highlight><bold>119</bold></highlight> to generate reports from database <highlight><bold>108</bold></highlight>, a user can determine optimum times to harvest and sell crops based upon the availability of storage and projected pricing, ensure that crop and grazing rotation plans are followed, analyze yields based on location and/or cultivation regimen, manage use of storage facilities, manage expense and servicing of equipment, etc. </paragraph>
<paragraph id="P-0376" lvl="0"><number>&lsqb;0376&rsqb;</number> I. Community and Regional Planning </paragraph>
<paragraph id="P-0377" lvl="0"><number>&lsqb;0377&rsqb;</number> SiteVu may also be utilized in the development, implementation and management of community and regional plans and infrastructure. In community and regional planning (CRP), a governmental entity, for example, a city council or a county commissioner&apos;s court, is often tasked with developing and implementing a &ldquo;smart growth&rdquo; plan to ensure that future growth is directed in a way that enhances (or at least does not diminish) the quality of life of the community and does not outstrip the growth of infrastructure (e.g., roadways, utilities, public recreation areas, public transportation, school, etc.). Utilizing the techniques outlined above, SiteVu can simplify these tasks. </paragraph>
<paragraph id="P-0378" lvl="0"><number>&lsqb;0378&rsqb;</number> As an example, an environmental hierarchy can be defined that has as its highest level (EL<highlight><subscript>1</subscript></highlight>) a geographic region (e.g., a state, county or city) for which a plan is to be developed and has at lower levels (EL<highlight><subscript>2</subscript></highlight>-EL<highlight><subscript>M</subscript></highlight>) logical or governmental subdivisions of the larger geographic region. Each of these levels of the environmental hierarchy preferably has associated tabular and graphical data within database <highlight><bold>108</bold></highlight>, which may include legal or geographic descriptions, area, current and/or planned uses, current and/or planned development restrictions (e.g., zoning or environmental restrictions), ownership, tax valuation (if privately held), estimated fair market value for purposes of condemnation and so on. </paragraph>
<paragraph id="P-0379" lvl="0"><number>&lsqb;0379&rsqb;</number> Items from product catalog <highlight><bold>126</bold></highlight> that may be graphically and logically placed within areas defined at the lowest level of the environmental hierarchy (EL<highlight><subscript>M</subscript></highlight>) can represent utilities and the like (e.g., telephone and data cables, gas, water, sewer and power lines, etc.), transportation infrastructure (e.g., sidewalks, bike paths, roadways, rail lines and airports), residential and commercial zones, public parks, schools, cultural centers, government buildings, hospitals, etc. SiteVu database <highlight><bold>108</bold></highlight> can be utilized to store and display a myriad of useful data associated with these items. Such data may include whether an item presently exists or is planned, planned installation dates, code and zoning compliance for items representing structures, planned and past maintenance dates for utility lines, whether an item complies with a planned use, ownership, distances from city centers, airports, nearest similar item or other locations of interest, etc. </paragraph>
<paragraph id="P-0380" lvl="0"><number>&lsqb;0380&rsqb;</number> Because SiteVu provides a conceptual framework in which all these data can be logically arranged, viewed (especially on a time-dependent basis), and easily updated, SiteVu is an ideal tool for CRP applications. </paragraph>
<paragraph id="P-0381" lvl="0"><number>&lsqb;0381&rsqb;</number> J. Data Networks </paragraph>
<paragraph id="P-0382" lvl="0"><number>&lsqb;0382&rsqb;</number> SiteVu may also be advantageously applied to the design, modeling and maintenance of data networks, including data storage environments. Much like the telecommunications application discussed above, SiteVu can be utilized for space planning and the placement of equipment (e.g., servers, network equipment such as routers and bridges, network interface cards, or disk farms) in particular physical footprints on a floorplan or as components of items so placed. In addition, SiteVu can be utilized to graphically place particular data (e.g., executable software such as SiteVu components <highlight><bold>110</bold></highlight>, <highlight><bold>112</bold></highlight>, <highlight><bold>114</bold></highlight> and <highlight><bold>116</bold></highlight> or a database such as database <highlight><bold>108</bold></highlight>), logical drives, and the like within equipment connected to the network. Thus, with SiteVu, a network administrator can easily create, view and modify a model of not only the physical components of the network, but also data and software constructs within the network. </paragraph>
<paragraph id="P-0383" lvl="0"><number>&lsqb;0383&rsqb;</number> L. Virtual Reality </paragraph>
<paragraph id="P-0384" lvl="0"><number>&lsqb;0384&rsqb;</number> As a final note, those skilled in the art will appreciate from the foregoing that SiteVu is not limited in application to the modeling of physical environments, but also is also applicable to modeling the two or three-dimensional virtual reality environments and virtual objects located therein. By employing such modeling, for example, in a gaming or simulation context, the effects of time and other variables on items in the virtual environment can be easily and accurately depicted. </paragraph>
<paragraph id="P-0385" lvl="0"><number>&lsqb;0385&rsqb;</number> For example, in a gaming context, an environmental hierarchy can be defined that has at its highest level (EL<highlight><subscript>1</subscript></highlight>) an environment representing a simulated structure (e.g., as utilized in many &ldquo;first person&rdquo; adventure games) or a simulated geographic region (e.g., as utilized in many role-playing and societal simulation games). Depending upon the type of game, lower levels of the environmental hierarchy (EL<highlight><subscript>2</subscript></highlight>-EL<highlight><subscript>M</subscript></highlight>) may be utilized to represent structures, floors of a structure, rooms in a structure, and footprints at which simulated objects may be placed. The items populating product catalog <highlight><bold>126</bold></highlight> and configuration library <highlight><bold>128</bold></highlight> that may be placed in the model environment of a &ldquo;first person&rdquo; game include articles that may be retrieved by the game&apos;s protagonist, pre-programmed opponents of the protagonist, hazards to the protagonist, etc. </paragraph>
<paragraph id="P-0386" lvl="0"><number>&lsqb;0386&rsqb;</number> Alternatively, in a simulation context, the highest level (EL<highlight><subscript>1</subscript></highlight>) of the environmental hierarchy may comprise, for example, a vehicle control station (e.g., aircraft cockpit or automobile dashboard) and the next lower level EL<highlight><subscript>2 </subscript></highlight>may comprise footprints for individual indicators or controls. Accordingly, the simulated items populating product catalog <highlight><bold>126</bold></highlight> and configuration library <highlight><bold>128</bold></highlight> that may be placed in the model environment may include steering and other controls as well gauges and other indicators. </paragraph>
<paragraph id="P-0387" lvl="0"><number>&lsqb;0387&rsqb;</number> As described above, SiteVu database <highlight><bold>108</bold></highlight> can be utilized to organize and store useful data associated with the items placed within the modeled enviromnent. For example, the data associated with hazards, opponent, and other items placed within the modeled environment for a &ldquo;first person&rdquo; game can indicate the effect of the items on the protagonist&apos;s &ldquo;health&rdquo; or abilities. Alternatively, for a simulation, the data may include a life cycle and/or cost of a component, so that equipment failure and expense over time can be realistically modeled and trainee response to failures and other problem situations can be assessed. </paragraph>
<paragraph id="P-0388" lvl="7"><number>&lsqb;0388&rsqb;</number> XII. Conclusion </paragraph>
<paragraph id="P-0389" lvl="0"><number>&lsqb;0389&rsqb;</number> While various embodiments of the present invention have been described above, it should be understood that they have been presented by way of example only, and not limitation. Thus, the breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of modeling an environment containing a collection of items, said method comprising: 
<claim-text>providing an environmental hierarchy describing a modeled environment; </claim-text>
<claim-text>providing a product catalog that includes data describing a plurality of items that may be utilized to populate the modeled environment; </claim-text>
<claim-text>providing a configuration library that includes data describing a spatial relationship between first and second items among said plurality of items in said product catalog; and </claim-text>
<claim-text>permitting population of said modeled environment by storing, in a database, data representative of the spatial relationship between said environmental hierarchy and a collection of items including said first item. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said step of providing a product catalog comprises specifying values for attributes associated with said plurality of items and storing said values in said product catalog. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein said step of permitting a user to define at least one of said attributes. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein said step of providing a configuration library comprises selecting said first and second items from said product catalog, specifying said spatial relationship between said first and second items in which said second item is within an area defined by said first item, and storing an indication of said spatial relationship in said configuration library. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein providing said environmental hierarchy comprises providing an environmental hierarchy including at least higher and lower levels each having an associated dataset describing a respective one of first and second regions, wherein the second region is within the first region. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein at least one of said higher level and said lower level represents an area of land. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein said area of land comprises one of a construction site, hazardous waste site, and agricultural site. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein said area of land comprises a jurisdiction of a governmental entity. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein at least one of said higher level and said lower level represents at least a portion of a structure. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein said structure comprises one of a retail sales facility and a warehouse facility. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein said structure comprises one of a manufacturing facility, a processing facility, and a production facility. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein said structure comprises a structure under construction. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein providing a product catalog comprises storing non-graphical data describing one or more attributes of said plurality of items and graphical data specifying a graphical representation of at least one of said plurality of items. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein at least one of said one or more attributes is time-dependent. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, and further comprising displaying within a display of a data processing system a graphical representation of said modeled environment, said graphical representation including at least a first graphical object representing said first item and at least a second graphical object representing said environmental hierarchy. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein displaying comprises displaying graphical object representing fewer than all items in said collection of items populating said modeled environment. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein permitting population of said modeled environment comprises allowing entry of at least a portion of said data representative of the spatial relationship utilizing a scanner. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein providing a product catalog comprises storing non-graphical data describing one or more attributes of said plurality of items and graphical data specifying a graphical representation of at least one of said plurality of items. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>said modeled environment comprises a retail environment; </claim-text>
<claim-text>said product catalog includes data describing at least one item for sale; and </claim-text>
<claim-text>said method further comprises permitting removal of said item for sale from said modeled environment by removing data representative of a spatial relationship between said at least one item for sale and said environmental hierarchy or another item in said product catalog. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, and further comprising permitting generation of a report reflecting correlation of sales of items with subsets of said modeled environment for which spatial relationships with said items have been defined. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein at least one item in said product catalog represents a human belonging to an organization, wherein providing a product catalog includes associating said item representing a human with a calendaring attribute representing a schedule of the human. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said modeled environment comprises a data network and providing a product catalog comprises providing a product catalog including at least one item representing a dataset. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein at least one attribute associated with a particular item among said plurality of items comprises a procedure attribute, and an attribute value of said procedure attribute tracks performance of a procedure associated with the particular item. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, and further comprising permitting generation of a time-dependent view of items from said product catalog populating said modeled environment. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A data processing system, comprising: 
<claim-text>a processor; </claim-text>
<claim-text>data storage coupled to the processor; </claim-text>
<claim-text>a modeling tool stored in said data storage and executable by said processor, said modeling tool including: 
<claim-text>means for creating an environmental hierarchy describing a modeled environment; </claim-text>
<claim-text>means for creating a product catalog for containing data describing a plurality of items that may be utilized to populate the modeled environment; </claim-text>
<claim-text>means for creating a configuration library for containing data describing a spatial relationship between first and second items among said plurality of items in said product catalog; and </claim-text>
<claim-text>means for populating said modeled environment by storing, in a database, data representative of the spatial relationship between said environmental hierarchy and a collection of items including said first item. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein said means for creating a product catalog comprises means for specifying values for attributes associated with said plurality of items and storing said values in said product catalog. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, wherein said means for creating comprises means for permitting a user to define at least one of said attributes. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, wherein said means for creating a configuration library comprises: 
<claim-text>means for selecting said first and second items from said product catalog; </claim-text>
<claim-text>means for specifying said spatial relationship between said first and second items in which said second item is within an area defined by said first item; and </claim-text>
<claim-text>means for storing an indication of said spatial relationship in said configuration library. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein said means for creating said environmental hierarchy comprises means for creating an environmental hierarchy including at least higher and lower levels each having an associated dataset describing a respective one of first and second regions, wherein the second region is within the first region. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, wherein at least one of said higher level and said lower level represents an area of land. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein said area of land comprises one of a construction site, hazardous waste site, and agricultural site. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein said area of land comprises a jurisdiction of a governmental entity. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, wherein at least one of said higher level and said lower level represents at least a portion of a structure. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference> wherein said structure comprises one of a retail sales facility and a warehouse facility. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, wherein said structure comprises one of a manufacturing facility, a processing facility, and a production facility. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, wherein said structure comprises a structure under construction. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein said means for creating a product catalog comprises means for storing non-graphical data describing one or more attributes of said plurality of items and graphical data specifying a graphical representation of at least one of said plurality of items. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference>, wherein at least one of said one or more attributes is time-dependent. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, and further comprising: 
<claim-text>a display; and </claim-text>
<claim-text>means for displaying within the display a graphical representation of said modeled environment, said graphical representation including at least a first graphical object representing said first item and at least a second graphical object representing said environmental hierarchy. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, wherein said means for displaying comprises means for displaying graphical object representing fewer than all items in said collection of items populating said modeled environment. </claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein said means for populating comprises means for receiving from a scanner and entering into the database at least a portion of said data representative of the spatial relationship. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein: 
<claim-text>said modeled environment comprises a retail environment; </claim-text>
<claim-text>said product catalog includes data describing at least one item for sale; and </claim-text>
<claim-text>said modeling tool further comprising means for removing said item for sale from said modeled environment by removing data representative of a spatial relationship between said at least one item for sale and said environmental hierarchy or another item in said product catalog. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00044">claim 42</dependent-claim-reference>, said modeling tool further comprising means for generating a report reflecting correlation of sales of items with subsets of said modeled environment for which spatial relationships with said items have been defined. </claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein said means for creating a product catalog comprises means for creating a product catalog including at least one human item representing a human belonging to an organization, said human item having a calendaring attribute representing a schedule of the human. </claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein said means for creating a product catalog comprises means for creating a product catalog representing a data network, said product catalog including at least one item representing a dataset. </claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, wherein at least one attribute associated with a particular item among said plurality of items comprises a procedure attribute, and an attribute value of said procedure attribute tracks performance of a procedure associated with the particular item. </claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. The data processing system of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, said modeling tool further comprising means for generating of a time-dependent view of items from said product catalog populating said modeled environment. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. A program product, comprising: 
<claim-text>a computer usable medium; and </claim-text>
<claim-text>a modeling tool encoded within said computer usable medium and executable by a computer system, said modeling tool including: 
<claim-text>means for creating an environmental hierarchy describing a modeled environment; </claim-text>
<claim-text>means for creating a product catalog that contains data describing a plurality of items that may be utilized to populate the modeled environment; </claim-text>
<claim-text>means for creating a configuration library that contains data describing a spatial relationship between first and second items among said plurality of items in said product catalog; and </claim-text>
<claim-text>means for populating said modeled environment by storing, in a database, data representative of the spatial relationship between said environmental hierarchy and a collection of items including said first item. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference>, wherein said means for creating a product catalog comprises means for specifying values for predefined attributes associated with said plurality of items and storing said values in said product catalog. </claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein said means for creating a product catalog comprises means for permitting a user to define at least one of said attributes. </claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein said means for creating a configuration library comprises: 
<claim-text>means for selecting said first and second items from said product catalog; </claim-text>
<claim-text>means for specifying said spatial relationship between said first and second items in which said second item is within an area defined by said first item; and </claim-text>
<claim-text>means for storing an indication of said spatial relationship in said configuration library. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference>, wherein said means for creating said environmental hierarchy comprises means for creating an environmental hierarchy including at least higher and lower levels each having an associated dataset describing a respective one of first and second regions, wherein the second region is within the first region. </claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference>, wherein at least one of said higher level and said lower level represents an area of land. </claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00055">claim 53</dependent-claim-reference>, wherein said area of land comprises one of a construction site, hazardous waste site, and agricultural site. </claim-text>
</claim>
<claim id="CLM-00055">
<claim-text><highlight><bold>55</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00055">claim 53</dependent-claim-reference>, wherein said area of land comprises a jurisdiction of a governmental entity. </claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference>, wherein at least one of said higher level and said lower level represents at least a portion of a structure. </claim-text>
</claim>
<claim id="CLM-00057">
<claim-text><highlight><bold>57</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00055">claim 56</dependent-claim-reference>, wherein said structure comprises one of a retail sales facility and a warehouse facility. </claim-text>
</claim>
<claim id="CLM-00058">
<claim-text><highlight><bold>58</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00055">claim 56</dependent-claim-reference>, wherein said structure comprises one of a manufacturing facility, a processing facility, and a production facility. </claim-text>
</claim>
<claim id="CLM-00059">
<claim-text><highlight><bold>59</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00055">claim 56</dependent-claim-reference>, wherein said structure comprises a structure under construction. </claim-text>
</claim>
<claim id="CLM-00060">
<claim-text><highlight><bold>60</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference>, wherein said means for creating a product catalog comprises means for storing non-graphical data describing one or more attributes of said plurality of items and graphical data specifying a graphical representation of at least one of said plurality of items. </claim-text>
</claim>
<claim id="CLM-00061">
<claim-text><highlight><bold>61</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00066">claim 60</dependent-claim-reference>, wherein at least one of said one or more attributes is time-dependent. </claim-text>
</claim>
<claim id="CLM-00062">
<claim-text><highlight><bold>62</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference>, and further comprising means for displaying within a display of a computer system a graphical representation of said modeled environment, said graphical representation including at least a first graphical object representing said first item and at least a second graphical object representing said environmental hierarchy. </claim-text>
</claim>
<claim id="CLM-00063">
<claim-text><highlight><bold>63</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00066">claim 62</dependent-claim-reference>, wherein said means for displaying comprises means for displaying graphical object representing fewer than all items in said collection of items populating said modeled environment. </claim-text>
</claim>
<claim id="CLM-00064">
<claim-text><highlight><bold>64</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference>, wherein said means for populating comprises means for receiving from a scanner and entering into the database at least a portion of said data representative of the spatial relationship. </claim-text>
</claim>
<claim id="CLM-00065">
<claim-text><highlight><bold>65</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference>, wherein: 
<claim-text>said modeled environment comprises a retail environment; </claim-text>
<claim-text>said product catalog includes data describing at least one item for sale; and </claim-text>
<claim-text>said modeling tool further comprising means for removing said item for sale from said modeled environment by removing data representative of a spatial relationship between said at least one item for sale and said environmental hierarchy or another item in said product catalog. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00066">
<claim-text><highlight><bold>66</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00055">claim 55</dependent-claim-reference>, said modeling tool further comprising means for generating a report reflecting correlation of sales of items with subsets of said modeled environment for which spatial relationships with said items have been defined. </claim-text>
</claim>
<claim id="CLM-00067">
<claim-text><highlight><bold>67</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference>, wherein said means for creating a product catalog comprises means for creating a product catalog including at least one human item representing a human belonging to an organization, said human item having a calendaring attribute representing a schedule of the human. </claim-text>
</claim>
<claim id="CLM-00068">
<claim-text><highlight><bold>68</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference>, wherein said means for creating a product catalog comprises means for creating a product catalog representing a data network, said product catalog including at least one item representing a dataset. </claim-text>
</claim>
<claim id="CLM-00069">
<claim-text><highlight><bold>69</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein at least one attribute associated with a particular item among said plurality of items comprises a procedure attribute, and an attribute value of said procedure attribute tracks performance of a procedure associated with the particular item. </claim-text>
</claim>
<claim id="CLM-00070">
<claim-text><highlight><bold>70</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00066">claim 61</dependent-claim-reference>, said modeling tool further comprising means for generating of a time-dependent view of items from said product catalog populating said modeled environment.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004925A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004925A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004925A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004925A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004925A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004925A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004925A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004925A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004925A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004925A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004925A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030004925A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030004925A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030004925A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030004925A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030004925A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030004925A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030004925A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030004925A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030004925A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030004925A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030004925A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030004925A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030004925A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030004925A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030004925A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00026">
<image id="EMI-D00026" file="US20030004925A1-20030102-D00026.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00027">
<image id="EMI-D00027" file="US20030004925A1-20030102-D00027.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00028">
<image id="EMI-D00028" file="US20030004925A1-20030102-D00028.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00029">
<image id="EMI-D00029" file="US20030004925A1-20030102-D00029.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00030">
<image id="EMI-D00030" file="US20030004925A1-20030102-D00030.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00031">
<image id="EMI-D00031" file="US20030004925A1-20030102-D00031.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
