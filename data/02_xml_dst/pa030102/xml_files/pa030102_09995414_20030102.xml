<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004964A1-20030102-C00001.CDX SYSTEM "US20030004964A1-20030102-C00001.CDX" NDATA CDX>
<!ENTITY US20030004964A1-20030102-C00001.MOL SYSTEM "US20030004964A1-20030102-C00001.MOL" NDATA MOL>
<!ENTITY US20030004964A1-20030102-C00001.TIF SYSTEM "US20030004964A1-20030102-C00001.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-C00002.CDX SYSTEM "US20030004964A1-20030102-C00002.CDX" NDATA CDX>
<!ENTITY US20030004964A1-20030102-C00002.MOL SYSTEM "US20030004964A1-20030102-C00002.MOL" NDATA MOL>
<!ENTITY US20030004964A1-20030102-C00002.TIF SYSTEM "US20030004964A1-20030102-C00002.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-C00003.CDX SYSTEM "US20030004964A1-20030102-C00003.CDX" NDATA CDX>
<!ENTITY US20030004964A1-20030102-C00003.MOL SYSTEM "US20030004964A1-20030102-C00003.MOL" NDATA MOL>
<!ENTITY US20030004964A1-20030102-C00003.TIF SYSTEM "US20030004964A1-20030102-C00003.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-C00004.CDX SYSTEM "US20030004964A1-20030102-C00004.CDX" NDATA CDX>
<!ENTITY US20030004964A1-20030102-C00004.MOL SYSTEM "US20030004964A1-20030102-C00004.MOL" NDATA MOL>
<!ENTITY US20030004964A1-20030102-C00004.TIF SYSTEM "US20030004964A1-20030102-C00004.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-C00005.CDX SYSTEM "US20030004964A1-20030102-C00005.CDX" NDATA CDX>
<!ENTITY US20030004964A1-20030102-C00005.MOL SYSTEM "US20030004964A1-20030102-C00005.MOL" NDATA MOL>
<!ENTITY US20030004964A1-20030102-C00005.TIF SYSTEM "US20030004964A1-20030102-C00005.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-C00006.CDX SYSTEM "US20030004964A1-20030102-C00006.CDX" NDATA CDX>
<!ENTITY US20030004964A1-20030102-C00006.MOL SYSTEM "US20030004964A1-20030102-C00006.MOL" NDATA MOL>
<!ENTITY US20030004964A1-20030102-C00006.TIF SYSTEM "US20030004964A1-20030102-C00006.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-C00007.CDX SYSTEM "US20030004964A1-20030102-C00007.CDX" NDATA CDX>
<!ENTITY US20030004964A1-20030102-C00007.MOL SYSTEM "US20030004964A1-20030102-C00007.MOL" NDATA MOL>
<!ENTITY US20030004964A1-20030102-C00007.TIF SYSTEM "US20030004964A1-20030102-C00007.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-C00008.CDX SYSTEM "US20030004964A1-20030102-C00008.CDX" NDATA CDX>
<!ENTITY US20030004964A1-20030102-C00008.MOL SYSTEM "US20030004964A1-20030102-C00008.MOL" NDATA MOL>
<!ENTITY US20030004964A1-20030102-C00008.TIF SYSTEM "US20030004964A1-20030102-C00008.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-C00009.CDX SYSTEM "US20030004964A1-20030102-C00009.CDX" NDATA CDX>
<!ENTITY US20030004964A1-20030102-C00009.MOL SYSTEM "US20030004964A1-20030102-C00009.MOL" NDATA MOL>
<!ENTITY US20030004964A1-20030102-C00009.TIF SYSTEM "US20030004964A1-20030102-C00009.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-C00010.CDX SYSTEM "US20030004964A1-20030102-C00010.CDX" NDATA CDX>
<!ENTITY US20030004964A1-20030102-C00010.MOL SYSTEM "US20030004964A1-20030102-C00010.MOL" NDATA MOL>
<!ENTITY US20030004964A1-20030102-C00010.TIF SYSTEM "US20030004964A1-20030102-C00010.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-C00011.CDX SYSTEM "US20030004964A1-20030102-C00011.CDX" NDATA CDX>
<!ENTITY US20030004964A1-20030102-C00011.MOL SYSTEM "US20030004964A1-20030102-C00011.MOL" NDATA MOL>
<!ENTITY US20030004964A1-20030102-C00011.TIF SYSTEM "US20030004964A1-20030102-C00011.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-C00012.CDX SYSTEM "US20030004964A1-20030102-C00012.CDX" NDATA CDX>
<!ENTITY US20030004964A1-20030102-C00012.MOL SYSTEM "US20030004964A1-20030102-C00012.MOL" NDATA MOL>
<!ENTITY US20030004964A1-20030102-C00012.TIF SYSTEM "US20030004964A1-20030102-C00012.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-C00013.CDX SYSTEM "US20030004964A1-20030102-C00013.CDX" NDATA CDX>
<!ENTITY US20030004964A1-20030102-C00013.MOL SYSTEM "US20030004964A1-20030102-C00013.MOL" NDATA MOL>
<!ENTITY US20030004964A1-20030102-C00013.TIF SYSTEM "US20030004964A1-20030102-C00013.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-C00014.CDX SYSTEM "US20030004964A1-20030102-C00014.CDX" NDATA CDX>
<!ENTITY US20030004964A1-20030102-C00014.MOL SYSTEM "US20030004964A1-20030102-C00014.MOL" NDATA MOL>
<!ENTITY US20030004964A1-20030102-C00014.TIF SYSTEM "US20030004964A1-20030102-C00014.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-D00000.TIF SYSTEM "US20030004964A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-D00001.TIF SYSTEM "US20030004964A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-D00002.TIF SYSTEM "US20030004964A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-D00003.TIF SYSTEM "US20030004964A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-D00004.TIF SYSTEM "US20030004964A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-D00005.TIF SYSTEM "US20030004964A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-D00006.TIF SYSTEM "US20030004964A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-D00007.TIF SYSTEM "US20030004964A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-D00008.TIF SYSTEM "US20030004964A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-D00009.TIF SYSTEM "US20030004964A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-D00010.TIF SYSTEM "US20030004964A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-D00011.TIF SYSTEM "US20030004964A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-D00012.TIF SYSTEM "US20030004964A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-D00013.TIF SYSTEM "US20030004964A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030004964A1-20030102-D00014.TIF SYSTEM "US20030004964A1-20030102-D00014.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004964</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>09995414</doc-number>
</application-number>
<application-number-series-code>09</application-number-series-code>
<filing-date>20011126</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F007/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>707</class>
<subclass>10300R</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Dynamically generating multiple hierarchies of inter-object relationships based on object attribute values</title-of-invention>
</technical-information>
<continuity-data>
<non-provisional-of-provisional>
<document-id>
<doc-number>60250344</doc-number>
<document-date>20001130</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Kim</given-name>
<family-name>Cameron</family-name>
</name>
<residence>
<residence-us>
<city>Bellevue</city>
<state>WA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>George</given-name>
<middle-name>G.</middle-name>
<family-name>Robertson</family-name>
</name>
<residence>
<residence-us>
<city>Seattle</city>
<state>WA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Mark</given-name>
<middle-name>R.</middle-name>
<family-name>Brown</family-name>
</name>
<residence>
<residence-us>
<city>Seattle</city>
<state>WA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>LEE &amp; HAYES PLLC</name-1>
<name-2></name-2>
<address>
<address-1>421 W RIVERSIDE AVENUE SUITE 500</address-1>
<city>SPOKANE</city>
<state>WA</state>
<postalcode>99201</postalcode>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The described arrangements and procedures dynamically generate a data polyarchy from information received from a data store (e.g., a directory or database). The data polyarchy represents multiple hierarchies of inter-object relationships based on values of attributes of the objects. These multiple hierarchies are generated and represented in a manner that is independent of object naming and predetermined hierarchical data structures. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application claims benefit of U.S. Provisional Application serial No. 60/250,344 filed on Nov. 30, 2000, which is hereby incorporated by reference.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">TECHNICAL FIELD </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The described subject matter relates to inter-object relationships. More particularly, the subject matter pertains to dynamically generating multiple hierarchies of inter-object relationships based on values of attributes of the objects. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Any object can be linked, correlated, associated, differentiated, or in some manner categorized with respect to a different object to form implicit or explicit inter-object relationships. For instance, in an organization, a person typically has implicit and explicit relationships with other people in the organization, organizational resources (e.g., printers, facilities, etc.), geographical locations, business units, club memberships, and so on. Each implicit and/or explicit relationship between respective objects (i.e., the person, the other people, a resource, etc.) represents a respective hierarchical data relationship. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> For example, one hierarchical data relationship is represented by each person within the company that has access to a specific resource (e.g., a building on the company campus, a room, a printer, etc); the resource being the root node of the hierarchy and the individuals with access to the resource being the leaves. Another hierarchical data relationship is represented by individuals that make up the management structure of the company. Other inter-object data relationships may represent a hierarchy of individuals within a particular business unit, all employees of the company that have specialized training, and so on. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Unfortunately, even though a data store can be configured to some extent by a network administrator to represent inter-object relationships within hierarchies of other data, complex inter-object relationships (e.g., such as those representing a single object within more that one hierarchy) are not simply and adequately represented using conventional data store (e.g., directory, database, etc.) systems and technologies. (Traditional directories include those based on the well-known X.500 standard and the Lightweight Directory Access Protocol (LDAP). </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> To illustrate this limitation of traditional data store systems and technologies, consider that a directory typically represents inter-object relationships using rigid data naming and inflexible directory schemas. Objects or nodes in the directory are organized within a single hierarchy with a root node at the top of the hierarchy. The root node has a name. Each other node in the directory is named based on its direct naming relationship to the root node and also with respect to each intervening node in the respective node&apos;s hierarchy. As a result, if a parent object is renamed in a single operation, any objects that are subordinate or children of the parent object are also renamed in that same single operation. This is because an object&apos;s full &ldquo;distinguished name&rdquo; includes the name of each parent object(s) all the way down the line to the root node&apos;s name. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> It is the full distinguished name of an object that also represents its static location or data relationship with respect to each other object in the data store. Thus, an object&apos;s distinguished name inflexibly inter-tangles object naming within a single hierarchy with inter-object relationships in that hierarchy. Because of this, any navigation of the data store must be performed from top-to-bottom to determine and subsequently present any inter-object relationships&mdash;that is from the root object, to a parent object to any subordinate child object(s). </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Because traditional data stores (e.g., directories, databases, and so on) rely on a carefully specified and inflexible object naming scheme to identify inter-object relationships, an administrator configuring the data store requires a-priori knowledge of the inter-object relationships when configuring the data store. Additionally, any configuration of the data store must consider not only the proper representation of inter-object relationships in the data store, but must also consider the heuristics that a search engine requires to navigate the data store. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> To make matters worse, elastic data relationships are not easily described, represented, or navigated using conventional data store systems and techniques. An elastic data relationship is one wherein the relationship is derived from data that defines an object at any point in time. This means that over time elastic data relationships can be dynamic. For instance, consider the following non-obvious and potentially elastic data relationships: a Web site and the Web pages that make up the Web site, a customer and the individuated services that the customer purchases from a merchant, a personal computer (PC) and peripheral devices that are coupled to the PC, a city and the districts within the city, a business and the business&apos; contacts, an employee and the employee&apos;s dependents, and the like. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> These non-obvious and potentially elastic data relationships are not easily represented because whenever a one-to-one correspondence between a surface object and corresponding sub-objects needs to be represented in the data store, an irreversible design choice must be made. (Conventional practice is to strictly control directory schema updates due to the serious nature of directory schema modification). A network administrator can opt for &ldquo;total incorporation&rdquo; of the sub-objects into the particular object by representing the sub-objects as attributes of the surface object in the directory schema. Or the network administrator can opt for &ldquo;total distinction&rdquo; of each object, by creating separate objects in the schema for sub-object components, and positioning the separate objects subordinate to the surface object. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> To illustrate this irreversible design choice, consider that a particular network router includes multiple router modules plugged into the router&apos;s backplane. Information about the router and the router modules are typically stored in a directory in one or two different fashions&mdash;each of which may be equally unsatisfactory depending on how entities and their respective relationships to other entities are represented. One design choice is to characterize a router and its corresponding router modules as a single hierarchical data structure representing the network router as a parent object, and the corresponding router modules as child objects that are subordinate to the parent object. A different design choice is to characterize the router and the router&apos;s associated router modules as a single parent object with complex attributes. The parent object represents the router (backplane), and the complex attributes represent the respective router modules that are hosted by the router. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> In consideration of the first design choice, depending how the router and the modules are configured, collapsing information about the router modules, or boards onto the backplane may prove unwieldy. This is because the functionality of the router&apos;s backplane may be small as compared to the functionality of the network router modules hosted by the router. Whereas considering the second design choice, completely separating the boards from the backplane may be equally unsatisfactory because the router is still a single physical router box that generally includes a number of router modules. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Both of the described solutions to representing data relationships with an inflexible directory schema are time consuming to implement and counter-intuitive. The semantics of shape and naming in the directory must be agreed on in advance to solve the simplest design problem. Thus, whenever a one-to-one correspondence between an entity and corresponding sub-entities needs to be represented in a traditional directory, an irreversible and inflexible design choice must be made within the directory schema. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> Whichever design choice is selected, the data store and tools used to navigate, search and present objects within the data store with respect to inter-object relationships have been substantially limited. This is because the data store itself can not represent all of the possible implicit and explicit inter-object relationships of an object. This is considered by many computer programmers to be one of the most intractable problems of directory schema in traditional directories. This is also deemed to be the reason that computer program applications are not typically portable across directory platforms or even directory instances. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> To further worsen matters, recent developments in information technology provide network administrators with opportunities to tie disparate data stores (e.g., databases, directories, and so on) of data together into a single logical directory or &ldquo;metadirectory&rdquo;. Such disparate databases and directories include, for example, information corresponding to enterprise users, tangible and intangible resources, financial information, corporate e-mail systems, network operating systems, and so on. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Metadirectories present network administrators with complex and often elastic object data relationships that cannot be simply or adequately described, represented, navigated, or presented using traditional systems and procedures to configure and manage data stores. Considerable efforts are required on the part of the administrator (or a staff of administrators) to configure a data store. Manually determining and implementing such inter-object relationships (whether they be dynamic or not) is fraught with the potential for human error and oversight. Furthermore, database administrators with an appropriate level of such knowledge to perform such a directory configuration are expensive. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The following described subject matter addresses these and other problems of representing inter-object relationships. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY </heading>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The described arrangements and procedures dynamically generate a data polyarchy from information received from a data store (e.g., a directory or database). The data polyarchy represents multiple hierarchies of inter-object relationships based on values of attributes of the objects. These multiple hierarchies are generated and represented in a manner that is independent of object naming and predetermined static hierarchical data structures.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows an exemplary system for dynamically generating and managing multiple hierarchies of inter-object relationships based on the values of attributes of the objects. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates an exemplary polyarchy data structure to represent multiple hierarchies of dynamically generated inter-object relationships that are based on the values of attributes of the objects. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows an exemplary schema data structure to indicate how a data polyarchy of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> can be created, accessed, and manipulated in a meaningful manner. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows an exemplary procedure to generate multiple hierarchies of inter-object relationships based on the values of attributes of the objects. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows an exemplary polyarchical query language (PQL) request used by a client to request a server to return information (a PQL response) from a data polyarchy. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows a user interface (UI) displaying an exemplary PQL query and a corresponding exemplary PQL response. Specifically, the PQL query includes a modifier parameter based on a data polyarchy schema to specify a particular attribute with which to perform a search of a polyarchical data set. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a block diagram of a UI displaying an exemplary PQL query and a corresponding exemplary PQL response. Specifically, the PQL query includes a modifier parameter based on an elements-of-interest schema; the parameter specifies a limiting attribute with which to modify a result of a search. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a block diagram of a UI displaying an exemplary PQL query and a corresponding exemplary PQL response. Specifically, the PQL query includes a Boolean modifier parameter to perform a mathematical operation with respect to polyarchies of data relationships. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a block diagram of a UI showing an exemplary PQL query and a corresponding exemplary PQL response. Specifically, the PQL query includes a dimension information indicator parameter for specifying a dimension within which to view an object stored in a data store. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a UI showing an exemplary PQL query and a corresponding exemplary PQL response. Specifically, the PQL query includes a dimension information modifier parameter, which specifies a particular hierarchical direction and a particular hierarchical depth for a server process to present a data relationship between a complex object of a polyarchical data set and one or more other objects. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a UI showing use of a locating element in an exemplary PQL query with respect to a particular attribute and a subsequent intersection between two corresponding polyarchies of data relationships to form an exemplary PQL response. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is UI showing an exemplary PQL query and a corresponding exemplary PQL response. Specifically, the PQL query illustrates use of filter and union parameters with respect to two polyarchies of data relationships. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> illustrates aspects of an exemplary procedure to manage data (e.g., to access, present, provide, and/or manipulate objects, etc.) in a data polyarchy (i.e., multiple hierarchies of dynamically generated inter-object relationships that are based on the values of attributes of the objects). </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> shows aspects of an exemplary operating environment for managing a data polyarchy. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0033" lvl="7"><number>&lsqb;0033&rsqb;</number> Overview </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The following subject matter replaces traditional notions of complex real-world object presentation within a single static hierarchy, wherein directory object naming and inter-object relationships are inter-tangled and unwieldy for representing complex data relationships. More specifically, traditional notions of distinguished names for representing inter-object relationships within a single directory of static inter-object relationships are replaced with graphs of elastic (non-static) inter-object connections in multiple dimensions of data relationships (e.g., mono and/or bi-directional relationships) based on attributes of the objects. In other words, the data relationships establish that one or more data objects participate in one or more respective dimensions, or polyarchies of inter-object relationships. One or more of these hierarchies can intersect creating intersecting hierarchies of inter-object relationships. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Dynamically generated multiple hierarchies of data relationships based on object attributes are represented in a data polyarchy. Specifically, the data polyarchy is generated using each object&apos;s respective data attributes or data values and multifarious interrelationships of those values with attributes that correspond to other objects in the polyarchical data set. The inter-object relationships in the data polyarchy can be elastic because inter-object relationships are derived from data defined by an object at any point in time. Patterns of relationships between objects emerge by presenting an object in one or more &ldquo;dimensions&rdquo; or polyarchies of data relationships. Such relationships are presented using inter-object connections between virtual entities representing the objects. A virtual entity corresponds to an object of interest and includes and organizes information about an object of interest&mdash;including information about how to get more information about the object of interest. Such objects can be presented to people or computer programs that embody that interest. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> In contrast to traditional systems and procedures to represent inter-object relationships in a data store, the following described arrangements and procedures are dynamic, in that they are automated and do not require any manual intervention from a network administrator to configure inter-object relationships. By dynamically generating a data polyarchy complex inter-object relationships based on object data are automatically determined without presenting any inflexible design choice to a schema designer. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> This means that the network administrator or computer program (e.g., a search engine) is not required to have any a-priori knowledge of complex inter-object relationships to generate, navigate, or search a data store. This also means that each object in a data store can be viewed from as many different dimensional inter-object hierarchies as apply to the respective object. Furthermore, as an object&apos;s elastic data relationships change, the data polyarchy automatically detects and reflects those changes. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The following description sets forth arrangements and procedures based on a directory schema for representing polyarchies of inter-object relationships that incorporates elements recited in the appended claims. The subject matter is described with specificity to meet statutory requirements. However, the description itself is not intended to limit the scope of this patent. Rather, the inventors have contemplated that the claimed subject matter might also be embodied in other ways, to include different elements or combinations of elements similar to the ones described in this document, in conjunction with other present or future technologies. </paragraph>
<paragraph id="P-0039" lvl="7"><number>&lsqb;0039&rsqb;</number> Exemplary System </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows an exemplary system <highlight><bold>100</bold></highlight> to dynamically generate and manage multiple hierarchies of inter-object relationships based on the values of attributes of the objects. The system represents a distributed computing environment including a data polyarchy server <highlight><bold>102</bold></highlight> operatively coupled across a network <highlight><bold>104</bold></highlight> to one or more other optional data servers <highlight><bold>106</bold></highlight>, one or more databases <highlight><bold>108</bold></highlight>, and one or more client computers <highlight><bold>110</bold></highlight>. The operative coupling of the data polyarchy server to the network can be made in any number of different ways such as through one or more server appliances (e.g., a server appliance on the outside of a Web farm-server farm), a corporate portal (intranet), a local area network (LAN), co-located a data store (e.g., a database <highlight><bold>108</bold></highlight>), and so on. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The data polyarchy server <highlight><bold>102</bold></highlight> includes a processor <highlight><bold>112</bold></highlight> operatively coupled to a memory <highlight><bold>114</bold></highlight> that includes computer-executable instructions <highlight><bold>116</bold></highlight> and data <highlight><bold>118</bold></highlight>. The processor is configured to fetch and execute the computer-executable instructions and fetch the data during such execution. Such computer-executable instructions include an operating system (not shown), and a data polyarchy management module <highlight><bold>120</bold></highlight> to dynamically generate and manage multiple hierarchies of inter-object relationships based on the values of attributes of the objects. These dynamically generated multiple hierarchies of inter-object relationships are stored in the polyarchical data set <highlight><bold>122</bold></highlight>, which is also referred to as the data polyarchy. To generate the data polyarchy <highlight><bold>118</bold></highlight>, the data polyarchy management module <highlight><bold>120</bold></highlight> uses data (e.g., Extensible Markup Language (XML) data) from any number of different data sources such as from one or more other optional servers <highlight><bold>106</bold></highlight> and/or databases <highlight><bold>108</bold></highlight>. For instance, a server <highlight><bold>106</bold></highlight> provides data (e.g., directories of enterprise users, resources, financial information, corporate e-mail systems, network operating systems, etc.) to the data polyarchy server from any number of various data stores&mdash;databases, directories, metadirectories, and so on. A database <highlight><bold>108</bold></highlight> is a structured or unstructured data store, including an object-oriented database such as an XML database, a Hypertext Markup Language (HTML) database, an SQL server database, and so on. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> Responsive to generating and managing the data polyarchy <highlight><bold>122</bold></highlight>, the management module <highlight><bold>120</bold></highlight> respectively generates and updates the elements of interest schema <highlight><bold>124</bold></highlight>. The elements-of-interest schema indicates how an optional client computer <highlight><bold>110</bold></highlight> can manipulate and display the objects in the data polyarchy with respect to their respective polyarchies of inter-object relationships. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> For instance, the elements-of-interest schema <highlight><bold>124</bold></highlight> identifies each object in the data polyarchy <highlight><bold>122</bold></highlight> as an address referencing a virtual entity (e.g., see the virtual object <highlight><bold>210</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) that represents the respective object. These virtual entities are stored as vectors or arrays of addresses in the schema. Each different type of attribute that an object in the data polyarchy could have is also identified in the schema as well as what kinds of indexes are to be used on the various attribute types. (A data index provides for object access). For each attribute type it is convenient to store with its definition, its corresponding index. In this manner, for example, if somebody requests for an attribute, the index is readily available and all of the values assumed by the attribute can be determined very quickly. (An elements-of-interest schema is described in greater detail below in reference to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>). </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The data polyarchy server <highlight><bold>102</bold></highlight> can generate any number of schemas <highlight><bold>124</bold></highlight>. Each generated schema can provide access to various subsets of the objects in the data polyarchy <highlight><bold>122</bold></highlight> independent of the objects represented by other schemas <highlight><bold>124</bold></highlight>. For example, a first schema <highlight><bold>124</bold></highlight> can be distributed to network administrators to provide access to resources and attributes such as printers and access lists that are otherwise protected or hidden from other employees. In the same manner, a second schema can be distributed to the president of human resources. While the second schema may provide the president with access to certain privileged employee records, the second schema could be completely silent with respect to the resources that are available to the network administrators group via the first schema. In this manner, schemas <highlight><bold>124</bold></highlight> can be designed to provide access control to organizational resources. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The data polyarchy server <highlight><bold>102</bold></highlight> communicates the elements-of-interest schema <highlight><bold>124</bold></highlight> to one or more optional clients <highlight><bold>110</bold></highlight>. The client computer supports a graphical user interface (not shown) for displaying inter-object relationships in the data polyarchy <highlight><bold>122</bold></highlight> as described by the elements of interest schema. Exemplary arrangements and procedures to display objects within polyarchies of data relationships are described in related U.S. patent application Ser. No. 09/728,935, titled &ldquo;Hierarchy Polyarchy Visualization&rdquo;, filed on Nov. 29, 2000, which is assigned to the assignee hereof, and which is incorporated by reference. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The data polyarchy <highlight><bold>122</bold></highlight> and the elements of interest schema <highlight><bold>124</bold></highlight> can be replicated one or more times in a memory cache <highlight><bold>114</bold></highlight> by the data polyarchy server <highlight><bold>102</bold></highlight>. An exemplary memory cache is described in greater detail below in reference to <cross-reference target="DRAWINGS">FIG. 14</cross-reference>. Since the polyarchical server can operate either data set from a corresponding memory cache, there can be as many copies of the respective data sets as necessary. Thus no matter how demanding a client <highlight><bold>110</bold></highlight>, the data polyarchy server can satisfy the demand. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> When data polyarchy <highlight><bold>122</bold></highlight> and the elements of interest schema <highlight><bold>124</bold></highlight> are replicated in a memory cache <highlight><bold>114</bold></highlight> by the data polyarchy server <highlight><bold>102</bold></highlight>, the server can maintain an authoritative store (not shown) in the memory <highlight><bold>114</bold></highlight> to represent the most recent, or current representation of the inter-object relationships. Such an authoritative store is beneficial because caches by their very nature are always out of date to some degree&mdash;meaning that data in a cache is only as &ldquo;fresh&rdquo;, or timely as the most recent cache update. In light of this, a client requesting information from the data polyarchy <highlight><bold>122</bold></highlight> can indicate the level of data reliability or timeliness required by the client. If a high timeliness is required, the server <highlight><bold>102</bold></highlight> can access the data polyarchy from the authoritative store, rather than from more out of data caches. The speed of access to an authoritative cache depends on its respective implementation (e.g., implemented in internally to the server in random access memory or externally to the server in a data storage device). </paragraph>
<paragraph id="P-0048" lvl="7"><number>&lsqb;0048&rsqb;</number> Exemplary Data Polyarchy </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows an exemplary polyarchical data set <highlight><bold>122</bold></highlight> to represent multiple dimensions of inter-object relationships based on attributes within the data. The data is anything that can be differentiated (e.g., anything that is an object of interest represented in a directory, database, etc., can be an object). The data set <highlight><bold>122</bold></highlight> is formatted to allow designers to create their own customized tags, enabling the definition, transmission, validation, and interpretation of data between applications and between organizations. For example, the data format can be an XML data format. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> The data polyarchy <highlight><bold>122</bold></highlight> includes multiple virtual object data fields <highlight><bold>210</bold></highlight>. Each virtual object data field includes and organizes information about a respective object, including, for example, information about how to get more information about the respective object. Specifically, the virtual object includes a globally unique identifier (GUID) data field <highlight><bold>212</bold></highlight> and if appropriate for the particular object, one or more attribute data fields <highlight><bold>214</bold></highlight>. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> A GUID <highlight><bold>212</bold></highlight> uniquely identifies the virtual object (which in turn represents a respective object) with respect to this or any other object in this or any other data polyarchy <highlight><bold>122</bold></highlight>. As already noted, these objects can be represented in one or more physically distributed data stores that are in turn logically centralized by one or more directory services as well as by one or more data polyarchies. The attribute data field <highlight><bold>214</bold></highlight> defines any data attributes or data values of the virtual object <highlight><bold>210</bold></highlight>. Each attribute corresponds to the attributes that an actual instance of the virtual object may include. Such attributes include, for example, one or more predicate data fields <highlight><bold>216</bold></highlight>, multiple domain property data fields <highlight><bold>218</bold></highlight>, and zero or more sub-object entity references <highlight><bold>220</bold></highlight>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> Each predicate data field <highlight><bold>216</bold></highlight> indicates a respective operation to access or present a particular object with respect to one or more hierarchies of other objects (each object being represented by virtual objects <highlight><bold>210</bold></highlight> in the polyarchical data set <highlight><bold>122</bold></highlight>). Such operations indicate one or more diverse types of searches (e.g., a linear search and a recursive search), data transformations (e.g., from one hierarchical relationship to another different hierarchical relationship), and so on. (See, block <highlight><bold>1318</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 13</cross-reference>). </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> If an object is a simple object, meaning that it does not reference to a sub-object entity <highlight><bold>220</bold></highlight>, a predicate <highlight><bold>216</bold></highlight> operation (e.g., a search, modification, data transformation&mdash;from one structure such as from a virtual object <highlight><bold>210</bold></highlight> to an object within a hierarchy of other objects) will correspond to the respective object of interest. However, if the object is a complex object, meaning that it has a data relationship to one or more sub-objects, then the predicate operation will correspond to a combination of the object and/or the one or more sub-objects. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> The domain property data field <highlight><bold>218</bold></highlight> includes a physical domain property and a logical domain property. The physical domain property indicates one or more sets of values used to index a data object. The physical domain property is selected from a group of physical domain properties including a data type, a data precision indication, a scale indication, and a nullability indication). The logical domain property aspect of the domain property <highlight><bold>218</bold></highlight> facilitates searching and navigation of the data polyarchy <highlight><bold>122</bold></highlight> by allowing object data values to be assigned to particular domains. Specifically, the logical domain indicates a strategy to access and/or present the corresponding object with respect to the other objects in the data polyarchy. For instance, the logical domain property includes a unique domain property, a locating domain property, and a classifying domain property. The particular one logical domain property that the polyarchical data relationship management module <highlight><bold>116</bold></highlight> assigns to an attribute of an object is based on the attribute&apos;s relative distribution of its value in the data polyarchy with respect to other values of the same attribute of other objects in the data polyarchy. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> We now describe: (a) the relative distribution of the values assumed by an attribute within the data polyarchy <highlight><bold>122</bold></highlight>; and (b) how data distribution determines which objects represent respective dimensions (hierarchies), up-nodes, and down-nodes. </paragraph>
<paragraph id="P-0056" lvl="7"><number>&lsqb;0056&rsqb;</number> Relative Attribute Value Distribution </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> The set of values that an attribute has is part of that attribute&apos;s logical domain. Any information that is collected about the actual distribution of the values (in terms of the number of potential objects that contain each potential value) in a data polyarchy <highlight><bold>111</bold></highlight> is also a property of the attribute&apos;s logical domain. To determine the relative distribution of attribute values, one or more thresholds (e.g., a low threshold and a high threshold) are defined to determine the attribute&apos;s relative distribution in a data polyarchy <highlight><bold>122</bold></highlight> with respect to other attributes of other objects in the polyarchy. The thresholds are based on the assumption that the data may have a certain percentage of error within it (e.g., one (1) percent error). (Other statistical analysis techniques can be used in combination with or in place of the thresholds to determine object attribute distributions). </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> For instance, as objects are loaded into the data polyarchy <highlight><bold>122</bold></highlight> (e.g., from one or more directory and/or database servers <highlight><bold>106</bold></highlight>), the data polyarchy management module <highlight><bold>120</bold></highlight> examines each object&apos;s respective attributes values based on the thresholds to determine: (a) which attributes are substantially unique with respect to their distributions in objects in the data set; (b) which attributes are distributed across a substantially large set of objects; and (c) which attributes are distributed across a substantially small set of objects in the data set. These determinations are made based on assuming that the data has that certain percentage of error. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> With this assumption of some data error in mind, consider that a substantially unique attribute is not necessarily the only attribute of its kind in the data polyarchy <highlight><bold>122</bold></highlight>. Rather, an attribute may be absolutely unique, or the attribute may belong to a relatively sparse distribution of similar attributes in the data set. Attributes that are determined to be substantially unique with respect to their distributions across objects in the data set have a unique logical domain property illustrating that they are distinguishing as compared to other attributes. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> Attributes that are distinguishing may identify respective unique dimensions in the polyarchical data set <highlight><bold>122</bold></highlight>, which are represented as up-nodes of an interconnected graph that in turn represents a hierarchical dimension. Inside this model, the default polyarchy is flat. Attributes that are not distinguishing are distributed either across a substantially large set of objects in the data set, or alternatively distributed across a substantially small set of objects. Non-distinguising attributes are not good candidates for attributes that define dimensions. Instead, such distributions indicate that non-distinguishing attributes belong to one or more of the identified dimensions. Accordingly, a non-distinguishing attribute is represented as a down-node in at least one dimension that is identified by the attributes distribution. Up-node polyarchies are also discovered when all the values of a down-node object are located in a substantially unique up-node object. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Attributes that are distributed across a substantially large set of objects have a locating domain property (e.g., a surname may be a locating domain property). Attributes with locating domain properties are used to narrow a search for particular ones of the data objects in the data polyarchy <highlight><bold>122</bold></highlight>. Attributes that are distributed across a substantially small set of objects have a classifying domain property. Attributes with the classifying domain property are used to filter out unwanted objects from a search or navigation procedure. </paragraph>
<paragraph id="P-0062" lvl="7"><number>&lsqb;0062&rsqb;</number> Jump Gates </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> A sub-object entity reference <highlight><bold>220</bold></highlight> such as a GUID not only indicates whether a virtual object <highlight><bold>210</bold></highlight> (i.e., a respective object) has a relationship to a different object in the data polyarchy <highlight><bold>122</bold></highlight>, but it also references the different object (i.e., via the different object&apos;s corresponding virtual object). Specifically, a sub-object reference uniquely identifies the different object of interest as a sub-object of the virtual object data field. The sub-object reference uniquely identifies the different object of interest across one or more data stores. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> A virtual object <highlight><bold>210</bold></highlight> that references a sub-object (via a corresponding sub-object entity reference <highlight><bold>220</bold></highlight>) is a &ldquo;jump gate&rdquo;. A jump gate represents an elastic data relationship between a complex object and related sub-objects within the polyarchical data set <highlight><bold>122</bold></highlight>. Inter-object data relationships in the data polyarchy are modeled with one or more simple objects <highlight><bold>210</bold></highlight> and/or complex objects <highlight><bold>210</bold></highlight>. If an object has one or more sub-data relationships, such relationships are either represented as referenced sub-objects <highlight><bold>220</bold></highlight> in the object (or &ldquo;surface entity&rdquo;), or as separate objects <highlight><bold>210</bold></highlight> linked to another object <highlight><bold>210</bold></highlight> in some dimension. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> To illustrate this, consider that an employee and the employee&apos;s dependents are people represented as objects in a directory store. The data store administrators may want to maintain fine-grained information about various aspects of each. To represent sub-world information (about the dependents) in the surface entity (the employee), one can use the following representation shown in TABLE 1.  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 1</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>EXAMPLE OF STORING SUB-WORLD INFORMATION IN A</entry>
</row>
<row>
<entry>SINGLE SURFACE ENTITY</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="175PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;person type&equals;&ldquo;employee&rdquo; GlueID&equals;&ldquo;13399&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="49PT" align="left"/>
<colspec colname="1" colwidth="168PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;name&gt; John Doe &lt;/name&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;age&gt; 31 &lt;/age&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;sex&gt; male &lt;/sex&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;dependents&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="56PT" align="left"/>
<colspec colname="1" colwidth="161PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;person type&equals; &ldquo;spouse&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="63PT" align="left"/>
<colspec colname="1" colwidth="154PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;name&gt; Alice Doe &lt;/name&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;age&gt; 31 &lt;/age&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;sex&gt; female &lt;/sex&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="56PT" align="left"/>
<colspec colname="1" colwidth="161PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/person&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;person type&equals; &ldquo;child&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="63PT" align="left"/>
<colspec colname="1" colwidth="154PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;name&gt; Sigmund Doe &lt;/name&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;age&gt; 8 &lt;/age&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;sex&gt; male &lt;/sex&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="56PT" align="left"/>
<colspec colname="1" colwidth="161PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/person&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="49PT" align="left"/>
<colspec colname="1" colwidth="168PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/dependents&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;occupation&gt; forester &lt;/occupation&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="175PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/person&gt;</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> To represent sub-world information about the dependents in totally distinct entities, Alice Doe and Sigmund Doe would be split off into separate entities, having their own Glue IDs (GUIDs <highlight><bold>212</bold></highlight>), as illustrated, for example, in TABLE 2.  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 2</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>EXAMPLE OF SEPARATE OBJECT/ENTITY REPRESENTATIONS</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="182PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;person type&equals; &ldquo;spouse&rdquo; GlueID&equals; &ldquo;24889&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="175PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;relatedEmployee&gt; 13399 &lt;/relatedEmployee&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;name&gt; Alice Doe &lt;/name&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;age&gt; 31 &lt;/age&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;sex&gt; female &lt;/sex&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="182PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/person&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;person type&equals; &ldquo;child&rdquo; GlueID&equals;&ldquo;24890&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="175PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/relatedEmployee&gt; 13399 &lt;/relatedEmployee&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;name&gt; Sigmund Doe &lt;/name&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;age&gt; 8 &lt;/age&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;sex&gt; male &lt;/sex&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="182PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/person&gt; </entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> Note that the &ldquo;person&rdquo; elements are identical whether they exist as sub elements in John&apos;s virtual entity or as root elements in their own independent virtual entities. In this context, John Doe&apos;s entity can be reduced as illustrated in TABLE 3.  
<table-cwu id="TABLE-US-00003">
<number>3</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 3</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>EXAMPLE OF A SINGLE ENTITY REPRESENTATION</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="175PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;person type&equals;&ldquo;employee&rdquo; GlueID&equals;&ldquo;13399&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="49PT" align="left"/>
<colspec colname="1" colwidth="168PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;name&gt; John Doe &lt;/name&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;age&gt; 31 &lt;/age&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;sex&gt; male &lt;/sex&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;occupation&gt; forester &lt;/occupation&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="175PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/person&gt;</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> The entity illustrated in TABLE 2 is related to John&apos;s dependents along the &ldquo;dependents&rdquo; dimension, where &ldquo;relatedEmployee&rdquo; is joined to Glue ID to &ldquo;pass through the jump gate&rdquo;. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> Between these two extremes, we can imagine representing John&apos;s node internally as illustrated in TABLE 4.  
<table-cwu id="TABLE-US-00004">
<number>4</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 4</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>EXAMPLE OF AN ENTITY REFERENCING ONE OR MORE</entry>
</row>
<row>
<entry>OTHER ENTITIES</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="175PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;person type&equals;&ldquo;employee&rdquo; GlueID&equals;&ldquo;13399&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="49PT" align="left"/>
<colspec colname="1" colwidth="168PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;name&gt; John Doe &lt;/name&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;age&gt; 31 &lt;/age&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;sex&gt; male &lt;/sex&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;dependents&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="56PT" align="left"/>
<colspec colname="1" colwidth="161PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;person GlueID&equals; &ldquo;24889&rdquo;/&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;person GlueID&equals; &ldquo;24890&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="49PT" align="left"/>
<colspec colname="1" colwidth="168PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/dependents&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;occupation&gt; forester &lt;/occupation&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="175PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/person&gt;</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> The entity of TABLE 4 could be returned to a client as is allowing the client to add to this information by expanding the related Glue IDs. Or a server such as a data polyarchy server <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> could itself de-reference the Glue IDs, returning the following amalgam (shown below in TABLE 5), and demonstrating the elasticity of the solution to the jump gate problem evident in traditional directory implementations.  
<table-cwu id="TABLE-US-00005">
<number>5</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 5</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>EXAMPLE OF DE-REFERNCED IDENTITY INFORMATION</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="182PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;person type&equals;&ldquo;employee&rdquo; GlueID&equals;&ldquo;13399&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="175PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;name&gt; John Doe &lt;/name&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;age&gt; 31 &lt;/age&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;sex&gt; male &lt;/sex&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;dependents&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="49PT" align="left"/>
<colspec colname="1" colwidth="168PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;person type&equals; &ldquo;spouse&rdquo; GlueID&equals; &ldquo;24889&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="56PT" align="left"/>
<colspec colname="1" colwidth="161PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;name&gt; Alice Doe &lt;/name&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;age&gt; 31 &lt;/age&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;sex&gt; female &lt;/sex&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="49PT" align="left"/>
<colspec colname="1" colwidth="168PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/person&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;person type&equals; &ldquo;child&rdquo; GlueID&equals; &ldquo;24890&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="56PT" align="left"/>
<colspec colname="1" colwidth="161PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;name&gt; Sigmund Doe &lt;/name&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;age&gt; 8 &lt;/age&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;sex&gt; male &lt;/sex&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="49PT" align="left"/>
<colspec colname="1" colwidth="168PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/person&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="175PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/dependents&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;occupation&gt; archeologist &lt;/occupation&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="182PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/person&gt; </entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> In other words, a virtual object <highlight><bold>210</bold></highlight> can be modeled as either: (a) a simple object (often referred to as a &ldquo;simple element&rdquo;) such as a character string, an integer, and so on, that does not reference any other element; or (b) a complex object (often referred to as a &ldquo;complex element&rdquo;) that references one or more other simple elements or complex elements. In this manner, the polyarchical data set <highlight><bold>122</bold></highlight> provides for elastic inter-object data relationships that can be defined at any time with any one of a number of different relational representations. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> Thus, in sharp contrast to traditional rigid directory implementations that have an intractable schema problem, wherein semantics of shape and naming in a directory must be agreed on in advance to solve the simplest design problem, no fundamental design decision is required when encountering an inter-object data relationship that is modeled as a jump gate. The shape and naming of the directory tree based on the polyarchical data set <highlight><bold>122</bold></highlight> is not affected by representing various and elastic inter-object relationships even after a polyarchical data set has been designed. Moreover, an update/modification to a complex object may also result in corresponding updates to one or more related sub-objects that in turn may be represented in one or more different dimensions as compared to a particular dimension that represents the complex object. </paragraph>
<paragraph id="P-0073" lvl="7"><number>&lsqb;0073&rsqb;</number> Optimizing the Data Polyarchy Schema for De-referenced Operations </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> Two or more objects can be related to a third object for de-referenced dimensional group, or many-to-many object searching and navigation operations. For example, membership in a group is represented by a membership entity containing information about the relationship between a member and a group. A membership entity includes a memberOf data field to identify a group, and a memberIs data field to identify a group member. In this implementation such unique identification is accomplished by using respective GUIDs <highlight><bold>212</bold></highlight>. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> To determine if an entity is a member of a group, we search for a relationship entity where memberIs is the GUID of the entity, and memberOf is the GUID of the group. A membership dimension is defined as shown in TABLE 6.  
<table-cwu id="TABLE-US-00006">
<number>6</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 6</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>EXAMPLE OF A MEMBERSHIP DIMENSION IN SCHEMA</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;dimension dereferenceElement&equals;&rdquo;memberIs&rdquo;&gt;</entry>
</row>
<row>
<entry>&emsp;&lt;name&gt; membership &lt;/name&gt;</entry>
</row>
<row>
<entry>&emsp;&lt;displayName lang&equals;&Prime;en&Prime;&gt; Membership &lt;/displayName&gt;</entry>
</row>
<row>
<entry>&emsp;&lt;upnodeReferenceElement&gt; memberOf &lt;/upnodeReferenceElement&gt;</entry>
</row>
<row>
<entry>&emsp;&lt;upnodeNamingElement&gt; GlueID &lt;/upnodeNamingElement&gt;</entry>
</row>
<row>
<entry>&lt;/dimension&gt;</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> In this example, the group&apos;s GUID (represented in TABLE 6 as &ldquo;GlueID&rdquo;) identifies the group as an upnode because the GUID is substantially unique, and the children are identified as membership entities with a memberOf element set to the group&apos;s GUID. A conventional &ldquo;down&rdquo; navigation through the data set enumerates the membership entities&mdash;which may provide useful information about the nature of each individual membership (e.g. when a particular membership expires). </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> It is also possible to perform an &ldquo;indirect&rdquo; enumeration using the memberIs association to get information about the actual group members. To do so, issue a &ldquo;down&rdquo; enumeration on the group in the membership dimension with de-referencing set to memberIs. In this case, the membership entity&apos;s memberIs element is used to de-reference the actual entity belonging to the group. Thus, it is simple to construct an inverse dimension that list all groups belonged to by an entity. In this case, one may also either list the membership entities, or de-reference them to get information about the groups themselves. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> Accordingly, no special schema design is required to represent a group&apos;s inverse polyarchies or other many-to-many inter-object relationships in the elements-of-interest schema <highlight><bold>124</bold></highlight>. </paragraph>
<paragraph id="P-0079" lvl="7"><number>&lsqb;0079&rsqb;</number> An Exemplary Data Polyarchy Schema </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows further aspects of an exemplary data polyarchy schema <highlight><bold>124</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> to indicate how a client can manipulate the data polyarchy <highlight><bold>122</bold></highlight> in a meaningful manner. The data polyarchy schema is also referred to as an &ldquo;elements-of-interest&rdquo; schema. An element is an object attribute or data value. The elements-of-interest schema <highlight><bold>124</bold></highlight> includes a plurality of data fields <highlight><bold>310</bold></highlight> to limit a client <highlight><bold>110</bold></highlight> query on the data polyarchy. Such a query is communicated to the data polyarchy server <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. More specifically, such a query is communicated to the polyarchy data management module <highlight><bold>120</bold></highlight> for processing. The query is limited to at least one subset of objects represented by the schema <highlight><bold>124</bold></highlight>. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> The elements <highlight><bold>310</bold></highlight> are not the objects themselves, but rather object representations (i.e., virtual objects <highlight><bold>210</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) that indicate the relative scope of object data with respect to its distribution in the data polyarchy <highlight><bold>122</bold></highlight>. As noted above, these virtual entities are stored as vectors or arrays of addresses in the schema. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> Each different type of attribute <highlight><bold>214</bold></highlight> that an object <highlight><bold>210</bold></highlight> in the data polyarchy <highlight><bold>122</bold></highlight> could have is also identified in the schema as well as what kinds of indexes are to be used on the various attribute types. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> The elements <highlight><bold>310</bold></highlight> (i.e., index types) are selected based on the relative distribution of the values assumed by an attribute within the data polyarchy <highlight><bold>122</bold></highlight>. (The relative distribution of the values assumed by an attribute was discussed above in reference to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). The elements <highlight><bold>310</bold></highlight> include at least one subset of the logical domain properties corresponding to all of the objects in the data polyarchy <highlight><bold>122</bold></highlight>. (Logical domain properties are discussed above in reference to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). The elements <highlight><bold>310</bold></highlight> represent attributes that have a substantially unique or &ldquo;distinguishing&rdquo; logical property index type, a locating, logical property index type, and/or a classifying logical property index type. Accordingly, the elements <highlight><bold>310</bold></highlight> include distinguishing elements <highlight><bold>310</bold></highlight>-<highlight><bold>1</bold></highlight>, locating elements <highlight><bold>310</bold></highlight>-<highlight><bold>2</bold></highlight>, and classifying elements <highlight><bold>310</bold></highlight>-<highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> A distinguishing element <highlight><bold>310</bold></highlight>-<highlight><bold>1</bold></highlight> (i.e., distinguishing index type) is a good candidate for a dimensional relationship between attributes in the data polyarchy <highlight><bold>122</bold></highlight> and is represented, for example, by a unique object (i.e., an object that has an attribute that is indexed by the distinguishing element) representing an up-node in a dimension or hierarchy (e.g., a GUID, a location, an employee number, a cost center, and so on). The locating index type <highlight><bold>310</bold></highlight>-<highlight><bold>3</bold></highlight> or selecting index type is a good candidate for locating objects within the data polyarchy and is represented, for example, by the following attributes: a surname, a building name, a title, a room number, and/or the like. An attribute having a classifying index type such as an indication of gender (e.g., male or female) is a good candidate to filter objects in a search of objects in the data set because classifying objects are relatively small in number in the data polyarchy as compared to the relative distribution of objects with attributes that correspond to other index types. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> The elements-of-interest schema <highlight><bold>124</bold></highlight> is highly customizable. For instance, a network administrator can assign natural language names such as names in English, French, Chinese, etc., to the elements, or objects in the elements-of-interest data set <highlight><bold>124</bold></highlight>. Moreover, the administrator can designate sub-objects for storage as linked but discreet entities, as described in greater detail with respect to jump gates and TABLES 1 through 4. In this manner, objects in the polyarchical data set <highlight><bold>122</bold></highlight> of <cross-reference target="DRAWINGS">FIGS. 1 and 2</cross-reference> that would not otherwise be immediately subordinate to a root object become eligible for promotion in the schema. This mechanism is used in conjunction with multiple dimensions (polyarchy) to produce elastic jump gates. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> TABLE 7 shows an exemplary elements-of-interest schema <highlight><bold>124</bold></highlight> in an XML data format. Other data format representations besides XML representations (e.g., an extended version of XML, which has at least a subset or more of the features of XML) of elements <highlight><bold>310</bold></highlight> are contemplated. In this schema representation, boxed text (i.e., text boxed-in or surrounded with lines) and text preceded by a semi-colon &ldquo;;&rdquo; represent corresponding comments. Generally comments of more than a single line are placed in a box.  
<table-cwu id="TABLE-US-00007">
<number>7</number>
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="273PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 7</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>EXAMPLE ELEMENTS OF INTEREST SCHEMA</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="273PT" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;WellKnownEntities GlueID&equals;&ldquo;d7a5fla9-6ba9-48a2-a464-660d82c24b5c&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="21PT" align="left"/>
<colspec colname="1" colwidth="252PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>; The &ldquo;WellKnownEntities GlueID&rdquo; tag is a unique schema ID.</entry>
</row>
<row>
<entry></entry>
<entry>&lt;ElementsOfInterest&gt;&emsp;&emsp;&emsp;&emsp;; the beginning of the schema</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;objectType&rdquo;&gt;&emsp;&emsp;; name of the attribute</entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&lt;displayName lang&equals;&ldquo;en&rdquo; value&equals;&ldquo;Object Type&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry>
<chemistry-cwu id="CHEM-US-00001">
<number>1</number>
<image id="EMI-C00001" he="70.56315" wi="181.69515" file="US20030004964A1-20030102-C00001.TIF"/>
<chemistry-chemdraw-file id="CHEMCDX-00001" file="US20030004964A1-20030102-C00001.CDX"/>
<chemistry-mol-file id="CHEMMOL-00001" file="US20030004964A1-20030102-C00001.MOL"/>
</chemistry-cwu>
</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;GlueID&rdquo; indexType&equals;&ldquo;Distinguishing&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry>
<chemistry-cwu id="CHEM-US-00002">
<number>2</number>
<image id="EMI-C00002" he="36.0045" wi="177.61275" file="US20030004964A1-20030102-C00002.TIF"/>
<chemistry-chemdraw-file id="CHEMCDX-00002" file="US20030004964A1-20030102-C00002.CDX"/>
<chemistry-mol-file id="CHEMMOL-00002" file="US20030004964A1-20030102-C00002.MOL"/>
</chemistry-cwu>
</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;displayName lang&equals;&ldquo;en&rdquo; value &ldquo;Glue ID&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;cn&rdquo;&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&lt;displayName lang&equals;&ldquo;en&rdquo; value&equals;&ldquo;Name&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;telephoneNumber&rdquo;&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&lt;displayName lang&equals;&ldquo;en&rdquo; value&equals;&ldquo;Phone Number&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;roomNumber&rdquo;&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&lt;displayName lang&equals;&ldquo;en&rdquo; value&equals;&ldquo;Room Number&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;uid&rdquo;&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&lt;displayName lang&equals;&ldquo;en&rdquo; value&equals;&ldquo;E-mail Alias&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;description&rdquo;&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&lt;displayName lang&equals;&ldquo;en&rdquo; value&equals;&ldquo;Description&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;sn&rdquo; indexType&equals;&ldquo;selecting&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&ensp;&lt;displayName&equals;&ldquo;en&rdquo; value&equals;&ldquo;Surname&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element&emsp;&emsp;&emsp;name&equals;&ldquo;givenName&rdquo;&emsp;&emsp;&emsp;indexType&equals;&ldquo;locating&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="273PT" align="left"/>
<tbody valign="top">
<row>
<entry>startingSize&equals;&ldquo;20000&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;displayName lang&equals;&ldquo;en&rdquo; value&equals;&ldquo;Given Name&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element&emsp;&emsp;&emsp;name&equals;&ldquo;mail&rdquo;&emsp;&emsp;&emsp;indexType&equals;&ldquo;distinguishing&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="273PT" align="left"/>
<tbody valign="top">
<row>
<entry>indexStartingSize&equals;&ldquo;20000&rdquo; indexGrowBy&equals;&rdquo;20000&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;displayName lang&equals;&ldquo;en&rdquo; value&equals;&ldquo;E-mail Address&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;buildingName&rdquo; indexType&equals;&ldquo;classifying&rdquo;&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&lt;displayName lang&equals;&ldquo;en&rdquo; value&equals;&ldquo;Building Name&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;title&rdquo; indexType&equals;&ldquo;classifying&rdquo;&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&lt;displayName lang&equals;&ldquo;en&rdquo; value&equals;&ldquo;Title&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;location&rdquo; indexType&equals;&ldquo;distinguishing&rdquo;&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&lt;displayName lang&equals;&ldquo;en&rdquo; value&equals;&ldquo;Location&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;locationUpnode&rdquo;/&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;uniqueIdentifier&rdquo; indexType&equals;&ldquo;distinguishing&rdquo;&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&lt;displayName lang&equals;&ldquo;en&rdquo; value&equals;&ldquo;Employee Number&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;manager&rdquo;&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&lt;displayName lang&equals;&ldquo;en&rdquo; value&equals;&ldquo;Manager&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;costCenter&rdquo; indexType&equals;&ldquo;distinguishing&rdquo;&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&lt;displayName lang&equals;&ldquo;en&rdquo; value&equals;&ldquo;Cost Center&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element name&equals;&ldquo;costCenterUpnode&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="21PT" align="left"/>
<colspec colname="1" colwidth="252PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/ElementsOfInterest&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;Dimensions&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry>
<chemistry-cwu id="CHEM-US-00003">
<number>3</number>
<image id="EMI-C00003" he="28.5768" wi="166.32945" file="US20030004964A1-20030102-C00003.TIF"/>
<chemistry-chemdraw-file id="CHEMCDX-00003" file="US20030004964A1-20030102-C00003.CDX"/>
<chemistry-mol-file id="CHEMMOL-00003" file="US20030004964A1-20030102-C00003.MOL"/>
</chemistry-cwu>
</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;dimension&gt;&emsp;&emsp;&emsp;; indicates a dimension</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;name&gt;costCenter&lt;/name&gt;&emsp;&emsp;&emsp;; name of the dimension</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="21PT" align="left"/>
<colspec colname="1" colwidth="252PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;upnodeReferenceElement&gt;costCenterUpnode&lt;/upnodeReferenceElement&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry>
<chemistry-cwu id="CHEM-US-00004">
<number>4</number>
<image id="EMI-C00004" he="28.09485" wi="176.19525" file="US20030004964A1-20030102-C00004.TIF"/>
<chemistry-chemdraw-file id="CHEMCDX-00004" file="US20030004964A1-20030102-C00004.CDX"/>
<chemistry-mol-file id="CHEMMOL-00004" file="US20030004964A1-20030102-C00004.MOL"/>
</chemistry-cwu>
</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
<row>
<entry></entry>
<entry>&lt;dimensionNamingElement&gt;costCenter&lt;/dimensionNaming</entry>
</row>
<row>
<entry></entry>
<entry>Element&gt;</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
<row>
<entry></entry>
<entry>
<chemistry-cwu id="CHEM-US-00005">
<number>5</number>
<image id="EMI-C00005" he="20.89395" wi="168.5124" file="US20030004964A1-20030102-C00005.TIF"/>
<chemistry-chemdraw-file id="CHEMCDX-00005" file="US20030004964A1-20030102-C00005.CDX"/>
<chemistry-mol-file id="CHEMMOL-00005" file="US20030004964A1-20030102-C00005.MOL"/>
</chemistry-cwu>
</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
<row>
<entry></entry>
<entry>&lt;view&gt;</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
<row>
<entry></entry>
<entry>
<chemistry-cwu id="CHEM-US-00006">
<number>6</number>
<image id="EMI-C00006" he="20.6388" wi="172.5948" file="US20030004964A1-20030102-C00006.TIF"/>
<chemistry-chemdraw-file id="CHEMCDX-00006" file="US20030004964A1-20030102-C00006.CDX"/>
<chemistry-mol-file id="CHEMMOL-00006" file="US20030004964A1-20030102-C00006.MOL"/>
</chemistry-cwu>
</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;displayName lang&equals;&ldquo;en&rdquo;&gt;Business Units&lt;/displayName&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;SearchType&gt;nodeQuery&lt;/SearchType&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="49PT" align="left"/>
<colspec colname="1" colwidth="224PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry>
<chemistry-cwu id="CHEM-US-00007">
<number>7</number>
<image id="EMI-C00007" he="119.77875" wi="144.2448" file="US20030004964A1-20030102-C00007.TIF"/>
<chemistry-chemdraw-file id="CHEMCDX-00007" file="US20030004964A1-20030102-C00007.CDX"/>
<chemistry-mol-file id="CHEMMOL-00007" file="US20030004964A1-20030102-C00007.MOL"/>
</chemistry-cwu>
</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;up&gt;*&lt;/up&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="49PT" align="left"/>
<colspec colname="1" colwidth="224PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry>
<chemistry-cwu id="CHEM-US-00008">
<number>8</number>
<image id="EMI-C00008" he="44.65125" wi="132.5079" file="US20030004964A1-20030102-C00008.TIF"/>
<chemistry-chemdraw-file id="CHEMCDX-00008" file="US20030004964A1-20030102-C00008.CDX"/>
<chemistry-mol-file id="CHEMMOL-00008" file="US20030004964A1-20030102-C00008.MOL"/>
</chemistry-cwu>
</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;ElementsList&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="49PT" align="left"/>
<colspec colname="1" colwidth="224PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry>
<chemistry-cwu id="CHEM-US-00009">
<number>9</number>
<image id="EMI-C00009" he="28.8036" wi="125.05185" file="US20030004964A1-20030102-C00009.TIF"/>
<chemistry-chemdraw-file id="CHEMCDX-00009" file="US20030004964A1-20030102-C00009.CDX"/>
<chemistry-mol-file id="CHEMMOL-00009" file="US20030004964A1-20030102-C00009.MOL"/>
</chemistry-cwu>
</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;cn&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;uid&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;telephoneNumber&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;title&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;buildingName&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;roomNumber&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;description&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;companyCode&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;costCenter&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;/ElementsList&gt;&emsp;&emsp;&emsp;&emsp;&emsp;&lt;/view&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="21PT" align="left"/>
<colspec colname="1" colwidth="252PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/dimension&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;dimension&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;name&gt;Management&lt;/name&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;upnodeReferenceElement&gt;manager&lt;/upnodeReferenceElement&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;dimensionNamingElement&gt;uniqueIdentifier&lt;/dimensionNamingElement&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;view&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;displayNamelang&equals;&ldquo;en&rdquo;&gt;Management&lt;/displayName&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;displayName lang&equals;&ldquo;fr&rdquo;&gt;Gestion&lt;/displayName&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;SearchType&gt;nodeQuery&lt;/SearchType&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;up&gt;*&lt;/up&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;ElementsList&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element&gt;cn&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;uid&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;telephoneNumber&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;title&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;buildingName&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;roomNumber&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/ElementsList&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;selected&gt;true&lt;/selected&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="273PT" align="left"/>
<tbody valign="top">
<row>
<entry>The &rdquo;selected&rdquo; tag indicates to the client that this view is the default (selected)</entry>
</row>
<row>
<entry>view in the client interface.&emsp;&emsp;&emsp;&emsp;&lt;/view&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;view&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;displayName&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;lang&equals;&ldquo;en&rdquo;&gt;Direct</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="273PT" align="left"/>
<tbody valign="top">
<row>
<entry>Reports&lt;/displayName&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;SearchType&gt;nodeQuery&lt;/SearchType&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;up&gt;0&lt;/up&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry>
<chemistry-cwu id="CHEM-US-00010">
<number>10</number>
<image id="EMI-C00010" he="44.1693" wi="131.544" file="US20030004964A1-20030102-C00010.TIF"/>
<chemistry-chemdraw-file id="CHEMCDX-00010" file="US20030004964A1-20030102-C00010.CDX"/>
<chemistry-mol-file id="CHEMMOL-00010" file="US20030004964A1-20030102-C00010.MOL"/>
</chemistry-cwu>
</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;down&gt;1&lt;/down&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry>
<chemistry-cwu id="CHEM-US-00011">
<number>11</number>
<image id="EMI-C00011" he="45.61515" wi="135.8532" file="US20030004964A1-20030102-C00011.TIF"/>
<chemistry-chemdraw-file id="CHEMCDX-00011" file="US20030004964A1-20030102-C00011.CDX"/>
<chemistry-mol-file id="CHEMMOL-00011" file="US20030004964A1-20030102-C00011.MOL"/>
</chemistry-cwu>
</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;ElementsList&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element&gt;cn&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;uid&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;telephoneNumber&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;title&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;buildingName&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;roomNumber&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/ElementsList&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/view&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;view&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;displayName&emsp;&emsp;&emsp;&emsp;&emsp;lang&equals;&ldquo;en&rdquo;&gt;Related</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="273PT" align="left"/>
<tbody valign="top">
<row>
<entry>People&lt;/displayName&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;SearchType&gt;nodeQuery&lt;/SearchType&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;up&gt;*&lt;/up&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;down&gt;1&lt;/down&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;siblings&gt;true&lt;/siblings&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry>
<chemistry-cwu id="CHEM-US-00012">
<number>12</number>
<image id="EMI-C00012" he="61.20765" wi="142.57215" file="US20030004964A1-20030102-C00012.TIF"/>
<chemistry-chemdraw-file id="CHEMCDX-00012" file="US20030004964A1-20030102-C00012.CDX"/>
<chemistry-mol-file id="CHEMMOL-00012" file="US20030004964A1-20030102-C00012.MOL"/>
</chemistry-cwu>
</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;ElementsList&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element&gt;cn&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;uid&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;telephoneNumber&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;title&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;buildingName&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;roomNumber&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/ElementsList&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/view&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;view&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;displayName&emsp;&emsp;lang&equals;&rdquo;en&rdquo;&gt;Same&emsp;&emsp;Title&emsp;&emsp;(in</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="273PT" align="left"/>
<tbody valign="top">
<row>
<entry>context)&lt;/displayName&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;SearchType&gt;nodeQuery&lt;/SearchType&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;up&gt;*&lt;/up&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;SearchElement&gt;title&lt;/SearchElement&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry>
<chemistry-cwu id="CHEM-US-00013">
<number>13</number>
<image id="EMI-C00013" he="60.7257" wi="138.7449" file="US20030004964A1-20030102-C00013.TIF"/>
<chemistry-chemdraw-file id="CHEMCDX-00013" file="US20030004964A1-20030102-C00013.CDX"/>
<chemistry-mol-file id="CHEMMOL-00013" file="US20030004964A1-20030102-C00013.MOL"/>
</chemistry-cwu>
</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;ElementsList&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element&gt;cn&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;uid&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;telephoneNumber&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;title&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;buildingName&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;roomNumber&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/ElementsList&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/view&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;view&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&lt;displayName lang&equals;&rdquo;en&rdquo;&gt;Same Title (list)&lt;/displayName&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;SearchType&gt;nodeSearch&lt;/SearchType&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;SearchElement&gt;title&lt;/SearchElement&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;ElementsLis&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element&gt;cn&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;uid&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;telephoneNumber&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;title&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;buildingName&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;roomNumber&lt;/element&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/ElementsLis&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/view&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="21PT" align="left"/>
<colspec colname="1" colwidth="252PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/dimension&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;dimension&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;name&gt;officeLocation&lt;/name&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;upnodeReferenceElement&gt;locationUpnode&lt;/upnodeReferenceElement&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;dimensionNamingElement&gt;location&lt;/dimensionNamingElement&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;view&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;displayName&emsp;&emsp;&emsp;lang&equals;&ldquo;en&rdquo;&gt;Location&emsp;&emsp;&emsp;of</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="273PT" align="left"/>
<tbody valign="top">
<row>
<entry>Office&lt;/displayName&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;SearchType&gt;nodeQuery&lt;/SearchType&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;up&gt;*&lt;/up&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;ElementsLis&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="231PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;element&gt;cn&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;uid&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;telephoneNumber&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;title&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;buildingName&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;roomNumber&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;element&gt;description&lt;/element&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&lt;/ElementsLis&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="238PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/view&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/dimension&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="21PT" align="left"/>
<colspec colname="1" colwidth="252PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/Dimensions&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;Inputs&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="245PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry>
<chemistry-cwu id="CHEM-US-00014">
<number>14</number>
<image id="EMI-C00014" he="37.45035" wi="173.30355" file="US20030004964A1-20030102-C00014.TIF"/>
<chemistry-chemdraw-file id="CHEMCDX-00014" file="US20030004964A1-20030102-C00014.CDX"/>
<chemistry-mol-file id="CHEMMOL-00014" file="US20030004964A1-20030102-C00014.MOL"/>
</chemistry-cwu>
</entry>
</row>
<row>
<entry></entry>
<entry> </entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&lt;Input name&equals;&ldquo;base&rdquo; path&equals;&ldquo;input.xml&rdquo; anchor&equals;&ldquo;GlueID&rdquo;/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="259PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lt;/Inputs&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="273PT" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;/WellKnownEntities&gt;</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0087" lvl="7"><number>&lsqb;0087&rsqb;</number> Exemplary Procedure to Dynamically Generate a Data Polyarchy p <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates an exemplary procedure <highlight><bold>400</bold></highlight> to generate multiple hierarchies of inter-object relationships based on the values of attributes of the objects. The data polyarchy <highlight><bold>122</bold></highlight> includes multiple objects. The procedure may be implemented in software as computer-executable instructions stored in a computer-readable medium such that when executed by a processor that is operatively coupled to the medium, the instructions perform the operations described in the blocks of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> At block <highlight><bold>410</bold></highlight>, the data polyarchy server <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> receives data from any number of data sources such as from a conventional directory service based on X-500 and LDAP, metadirectory service, a database, and so on. The data is received in any one of a number of different data formats such as the XML data format. The server <highlight><bold>102</bold></highlight> communicates the received data to the data polyarchy management module <highlight><bold>120</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> At block <highlight><bold>412</bold></highlight>, responsive to receiving the data (block <highlight><bold>410</bold></highlight>), the data polyarchy management module <highlight><bold>120</bold></highlight> generates or updates the data polyarchy <highlight><bold>122</bold></highlight> to reflect any inter-object relationships (e.g., mono-directional and/or bi-directional relationships) between the received data and the data (if any) already in the polyarchy <highlight><bold>122</bold></highlight>. As already discussed, these inter-object relationships are determined based on the attributes of the received data with respect to the attributes of the other objects in the polyarchy. Specifically, to generate, configure, or update the data polyarchy, the management module analyzes the relative distributions of the attributes of the objects in the data polyarchy to determine which of zero, one, or more dimensions within which each object participates in inter-object relationships with other objects in the polyarchy. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> These operations <highlight><bold>412</bold></highlight> are automatic or dynamic responsive to receipt of the data (block <highlight><bold>410</bold></highlight>) and do not require any intervention of any human operators such as network administrators. Because inter-object relationships in the data polyarchy <highlight><bold>122</bold></highlight> are determined and expressed based on the values of attributes of the objects in the polyarchy, these inter-object data relationships can be elastic&mdash;meaning that they can change over time. As values of attributes change, the inter-object relationships based in the new values are dynamically or automatically represented in the polyarchy by the management module <highlight><bold>120</bold></highlight> upon receipt. These operations <highlight><bold>412</bold></highlight> are performed independent of a-priori knowledge of data relationships between respective ones of the data objects in the data polyarchy. Additionally, because inter-object relationships in the data polyarchy are determined and expressed based on the values of attributes of the objects in the polyarchy, these relationships are determined and expressed completely independent of a distinguished name of an object. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> At block <highlight><bold>414</bold></highlight>, the data polyarchy management module <highlight><bold>120</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> generates, configures, or updates the elements-of-interest schema <highlight><bold>124</bold></highlight> (e.g., see <cross-reference target="DRAWINGS">FIGS. 1 and 3</cross-reference>) to indicate how the data polyarchy <highlight><bold>122</bold></highlight> can be manipulated, presented, and navigated in a meaningful manner. Specifically, as discussed above in reference to <cross-reference target="DRAWINGS">FIGS. 2 and 3</cross-reference>, and Table 7, the schema indicates the elements, or attributes in the data polyarchy along with any corresponding distinguishing, locating, or classifying characteristics of each attribute. The schema also indicates the dimensions in the polyarchy along with each attribute or element of interest contained by objects in the dimension. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> An exemplary set of polyarchical query language (PQL) commands (based on the elements-of-interest schema <highlight><bold>124</bold></highlight>) used by a browser to search, navigate, or display portions of the polyarchical data set <highlight><bold>122</bold></highlight> are described in greater detail below in reference to <cross-reference target="DRAWINGS">FIGS. 6 through 12</cross-reference>. An exemplary procedure to use the elements-of-interest schema <highlight><bold>124</bold></highlight> to formulate PQL requests and responses is described in greater detail below in reference to <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. </paragraph>
<paragraph id="P-0093" lvl="7"><number>&lsqb;0093&rsqb;</number> Exemplary Polyarchical Query Language Request </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows an exemplary polyarchical query language (PQL) query used by a client <highlight><bold>110</bold></highlight> to request a data polyarchy server <highlight><bold>102</bold></highlight> to return information (a PQL response) corresponding to information in the data polyarchy. Responsive to receiving such a query, the data polyarchy management module <highlight><bold>120</bold></highlight> identifies and retrieves a set of information corresponding to objects in the polyarchy. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> Queries <highlight><bold>500</bold></highlight> and corresponding server <highlight><bold>102</bold></highlight> responses are implemented using a text markup language such as XML. In this configuration, the queries and server responses are packaged in a Simple Object Access Protocol (SOAP) and posted over the network <highlight><bold>104</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> using the Hypertext Transfer Protocol (HTTP). SOAP and HTTP are communication protocols that are well known to those skilled in the art of network communication protocols. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> The message <highlight><bold>500</bold></highlight> includes a schema ID <highlight><bold>502</bold></highlight> and one or more object transformation parameters <highlight><bold>510</bold></highlight> (hereinafter, a parameter is also referred to as a data field) for specifying one or more attributes <highlight><bold>214</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. The schema ID is used to identify a particular elements-of-interest schema <highlight><bold>124</bold></highlight>. It can be appreciated that this data field is optional if there is a default schema or only one schema. The attributes <highlight><bold>510</bold></highlight> correspond to the virtual objects <highlight><bold>210</bold></highlight> of the data polyarchy <highlight><bold>122</bold></highlight>. (The attribute(s) include distinguishing attributes, locating attributes, or classifying attributes, each of which is discussed in greater detail above with respect to logical domain properties of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> A parameter <highlight><bold>510</bold></highlight>, or data field is classified according to its type, which is selected from types that include a specific element of interest type <highlight><bold>510</bold></highlight>-<highlight><bold>1</bold></highlight>; an elements-of-interest modifier to limit a response <highlight><bold>510</bold></highlight>-<highlight><bold>2</bold></highlight>; a Boolean modifier <highlight><bold>510</bold></highlight>-<highlight><bold>3</bold></highlight>; a dimension indicator <highlight><bold>510</bold></highlight>-<highlight><bold>4</bold></highlight>; and/or a dimension information modifier <highlight><bold>510</bold></highlight>-<highlight><bold>5</bold></highlight>. The number and types of data fields that are represented in the message <highlight><bold>500</bold></highlight> are based on the message&apos;s design, or purpose. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows a user interface (UI) <highlight><bold>600</bold></highlight> displaying an exemplary PQL query <highlight><bold>500</bold></highlight> message and a corresponding exemplary PQL response <highlight><bold>620</bold></highlight>. Specifically, the PQL query includes a modifier parameter <highlight><bold>510</bold></highlight>-<highlight><bold>1</bold></highlight> based on a data polyarchy schema <highlight><bold>124</bold></highlight> to specify a particular attribute <highlight><bold>510</bold></highlight> with which to perform a search of the data polyarchy <highlight><bold>122</bold></highlight>. The UI includes a first area <highlight><bold>610</bold></highlight> to type in a PQL message <highlight><bold>500</bold></highlight>, a second area <highlight><bold>612</bold></highlight> to show the PQL message packaged in a SOAP envelope <highlight><bold>618</bold></highlight> and posted over HTTP, and a third area <highlight><bold>614</bold></highlight> to show the data polyarchy management module <highlight><bold>120</bold></highlight> PQL response <highlight><bold>620</bold></highlight>. Although the PQL response is shown as being returned in a SOAP envelope, the response can be returned in a variety of other data packaging formats. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> In this example, the specific element of interest parameter <highlight><bold>510</bold></highlight>-<highlight><bold>1</bold></highlight> specifies a surname attribute &ldquo;Doe&rdquo;. The PQL response <highlight><bold>620</bold></highlight> returned at least two objects and corresponding elements of interest. A respective Glue ID identifies each respective object, which is a distinguishing element. The first object pertains to &ldquo;John Doe&rdquo;. The second object pertains to &ldquo;Jim Doe&rdquo;. Each object was returned with a number of elements-of-interest such as a room number, a user id (&ldquo;uid&rdquo;), a surname (&ldquo;sn&rdquo;), a given name, a building name, a title, an indication of a related dimension (&ldquo;locationUpnode&rdquo;), the entities manager (&ldquo;manager&rdquo;), cost center id, and the like. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> If the specific element of interest specified an absolutely unique distinguishing attribute such as a GUID that corresponds to a particular object stored in a data polyarchy <highlight><bold>122</bold></highlight>, the server <highlight><bold>102</bold></highlight> will return all of the information stored in the data polyarchy <highlight><bold>122</bold></highlight> with respect to the particular object. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows user interface <highlight><bold>600</bold></highlight> displaying an exemplary PQL query with an elements-of-interest modifier data field <highlight><bold>510</bold></highlight>-<highlight><bold>2</bold></highlight> that specifies a limiting attribute with which to modify a result of a search. The limiting attribute corresponds to a set of objects represented by a polyarchical data schema <highlight><bold>124</bold></highlight>. The elements-of-interest modifier data field indicates to a server that a response to a search operation is limited to presenting any identified data polyarchy <highlight><bold>122</bold></highlight> objects with respect to the limiting attribute. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> In this example, the limiting attributes <highlight><bold>510</bold></highlight>-<highlight><bold>2</bold></highlight> are a common name (&ldquo;cn&rdquo;) attribute and a unique identifier attribute. Thus, the various person objects <highlight><bold>620</bold></highlight> returned by the server indicate only those limiting attributes. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> illustrates a user interface for an exemplary PQL query <highlight><bold>500</bold></highlight> that includes a Boolean modifier parameter <highlight><bold>510</bold></highlight>-<highlight><bold>3</bold></highlight> to perform a mathematical operation with respect to polyarchies of data relationships. A Boolean modifier is used to perform a filtering operation (&ldquo;and&rdquo;), a union operation (&ldquo;or&rdquo;), or an exclusion operation (&ldquo;not&rdquo;) on one or more hierarchies of data relationships based on variable. The variable includes an object represented by the data polyarchy schema <highlight><bold>124</bold></highlight> of <cross-reference target="DRAWINGS">FIGS. 1 and 3</cross-reference>, and Table 7, a hierarchy of objects represented by the schema, or polyarchies of objects represented by the schema, and so on. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> For example, the &ldquo;and&rdquo; Boolean modifier <highlight><bold>510</bold></highlight>-<highlight><bold>3</bold></highlight> is used to filter the results of two data store searches based on specific elements-of-interest data fields <highlight><bold>510</bold></highlight>-<highlight><bold>1</bold></highlight>. A first specific elements-of-interest data field specifies a surname (&ldquo;sn&rdquo;) attribute with a value of &ldquo;Smith&rdquo;. A second specific elements-of-interest data field specifies a &ldquo;title&rdquo; attribute with a value of &ldquo;vice president&rdquo;. Thus, the Boolean modifier is used to narrow, or filter the results based on the respective search results. The result is a single object in the PQL response <highlight><bold>620</bold></highlight> that corresponds to vice president John Smith. If there were more than one set of entity information stored in a directory that matched this query <highlight><bold>500</bold></highlight>, then each of the entities would be presented in the result. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows a user interface <highlight><bold>600</bold></highlight> that in turn illustrates an exemplary PQL query <highlight><bold>500</bold></highlight> that includes a dimension information indicator data field <highlight><bold>510</bold></highlight>-<highlight><bold>4</bold></highlight> for specifying a dimension within which to present a response that corresponds to a search operation for an object stored in a data store. In this example, the &ldquo;under&rdquo; parameter <highlight><bold>510</bold></highlight>-<highlight><bold>4</bold></highlight> (or &ldquo;clause&rdquo;) is combined with a filter <highlight><bold>510</bold></highlight>-<highlight><bold>3</bold></highlight> (&ldquo;&lt;and&gt;&rdquo;) to find &ldquo;architects&rdquo; under John Smith, which as indicated has a corresponding &ldquo;unique identifier&rdquo; of &ldquo;1234567898&rdquo;. (See, also John Smith&apos;s unique identifier of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>). Information corresponding to the architects under John Smith is presented in the PQL response <highlight><bold>620</bold></highlight> from the server <highlight><bold>102</bold></highlight>. (Note how an elements-of-interest data field <highlight><bold>510</bold></highlight>-<highlight><bold>2</bold></highlight> was used to limit the number of elements presented in the results of the search). </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows user interface <highlight><bold>600</bold></highlight> for illustrating a PQL query <highlight><bold>500</bold></highlight> with a dimension information modifier data field <highlight><bold>510</bold></highlight>-<highlight><bold>5</bold></highlight>. The dimension information modifier specifies a particular direction and a particular depth to present a data relationship between a complex object in a polyarchical schema and one or more different represented objects. The direction indicates whether the one or more (all objects with the use of a wildcard indication such as &ldquo;*&rdquo;) different objects are sub-objects of the complex object. The dimension information modifier can also specify SIBLINGS&equals;&lsquo;true&rsquo; to indicate that all objects with the same parent as the current object should be returned. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> In this example, the dimension information modifier <highlight><bold>510</bold></highlight>-<highlight><bold>5</bold></highlight> is used to retrieve information <highlight><bold>620</bold></highlight> corresponding to a first level of subordinates <highlight><bold>1010</bold></highlight> from a data store. This is a jump gate because John Smith&apos;s subordinates <highlight><bold>1010</bold></highlight> are presented as aspects of John Smith&apos;s object definition <highlight><bold>620</bold></highlight>. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a block diagram of a user interface <highlight><bold>600</bold></highlight> showing use of a filter parameter in a PQL query <highlight><bold>500</bold></highlight> with respect to a particular attribute and a subsequent intersection between two polyarchies of data relationships. In this example, two dimensions <highlight><bold>510</bold></highlight>-<highlight><bold>4</bold></highlight> (e.g., a &ldquo;management&rdquo; dimension and an &ldquo;office location&rdquo; dimension) are intersected and filtered <highlight><bold>510</bold></highlight>-<highlight><bold>3</bold></highlight> based on a &ldquo;title&rdquo; attribute of &ldquo;architect&rdquo;. The search results <highlight><bold>620</bold></highlight> show the particular objects in the data store that match that query. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> shows the user interface <highlight><bold>600</bold></highlight> for illustrating a PQL <highlight><bold>500</bold></highlight> that specifies a filter (&ldquo;and&rdquo;) <highlight><bold>510</bold></highlight>-<highlight><bold>3</bold></highlight> and a union (&ldquo;or&rdquo;) <highlight><bold>510</bold></highlight>-<highlight><bold>3</bold></highlight> between two polyarchies <highlight><bold>510</bold></highlight>-<highlight><bold>4</bold></highlight> of data relationships. In this example, the filter and the union are Boolean modifiers. The union attribute is applied to the &ldquo;management&rdquo; dimension and the &ldquo;office location&rdquo; dimension. The filter specifies a &ldquo;title&rdquo; attribute of &ldquo;architect&rdquo;, which is then applied to the union of the two hierarchies. The search results <highlight><bold>620</bold></highlight> show the particular objects in the data store that match that query. </paragraph>
<paragraph id="P-0110" lvl="7"><number>&lsqb;0110&rsqb;</number> Exemplary Procedure to Manage a Polyarchical Data Set </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> shows an exemplary procedure <highlight><bold>1300</bold></highlight> to manage data in a data polyarchy <highlight><bold>122</bold></highlight>. At block <highlight><bold>1310</bold></highlight>, the polyarchical data management module <highlight><bold>120</bold></highlight> communicates an elements-of-interest schema <highlight><bold>124</bold></highlight> to a client <highlight><bold>110</bold></highlight>. The elements-of-interest schema <highlight><bold>124</bold></highlight> indicates to the client how objects in the data polyarchy can be accessed, manipulated, and presented by the client in a meaningful manner. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> At block <highlight><bold>1312</bold></highlight>, the polyarchical data management module <highlight><bold>120</bold></highlight> receives a PQL message <highlight><bold>500</bold></highlight> that is based on the communicated data polyarchy schema (block <highlight><bold>1310</bold></highlight>). The request not only identifies one or more attributes of interest but also identifies the data relationships of interest. The request corresponds to a data object of the data objects in the polyarchical data set <highlight><bold>122</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> The received PQL message <highlight><bold>500</bold></highlight> may correspond to one or more operations including any combination of: (a) an operation to find a default search object of the data objects; (b) an operation to locate an object of the data objects that corresponds to a particular name; (c) an operation to obtain a default hierarchy of data relationships that correspond to a particular object of the data objects; (d) an operation to obtain a particular hierarchy of data relationships that correspond to a particular object of the data objects; (e) an operation to identify at least one subset of a plurality of hierarchies of data relationships that correspond to a particular object of the data objects; (f) an operation to obtain multiple hierarchies of data relationships that correspond to a particular object of the data objects; and so on. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> At block <highlight><bold>1314</bold></highlight>, the data polyarchy management module <highlight><bold>120</bold></highlight> determines a physical access strategy (eg., a simple scan, a recursive scan, and so on) to identify data corresponding to the request from the data polyarchy <highlight><bold>122</bold></highlight>. This determination is based on the request (block <highlight><bold>1312</bold></highlight>), which in turn is based on the schema <highlight><bold>124</bold></highlight> that was communicated to the client <highlight><bold>110</bold></highlight> (block <highlight><bold>1310</bold></highlight>). As already noted, the schema provides the client not only with information that corresponds to the possible contents of the data polyarchy, but also with includes information describing the possible polyarchies of data relationships that may pertain to any one object of interest (e.g., see the &ldquo;&lt;Dimension&gt;&rdquo; indicators shown in Table 7). </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> For instance, consider that if a client request (i.e., a PQL message <highlight><bold>500</bold></highlight>) is designed to filter out all elements-of-interest that pertain to an object with the exception of an absolutely unique distinguishing attribute (e.g., a GUID and a common name that corresponds to the GUID), a simple scan of the data polyarchy <highlight><bold>122</bold></highlight> is an efficient technique to search for information regarding the distinguishing object of interest. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> The request <highlight><bold>500</bold></highlight>, however, may also indicate that a number of sub-objects should be presented with respect to a complex object (i.e., a jump gate) and then the results are to be subsequently modified by a union of a dimension of information that corresponds to the complex object that is orthogonal to one or more of the sub-objects. In this case, a recursive scan of the data polyarchy <highlight><bold>122</bold></highlight> is an efficient technique to search for information regarding the objects and inter-object relationships of interest. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> In this manner, a PQL request message <highlight><bold>500</bold></highlight> identifying attributes and data relationships of interest also provides an optimized physical access strategy to search the data polyarchy <highlight><bold>122</bold></highlight> for such attributes and data relationships. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> At block <highlight><bold>1316</bold></highlight>, the data polyarchy management module <highlight><bold>120</bold></highlight> accesses the data from the polyarchy based on the determined physical access strategy (block <highlight><bold>1314</bold></highlight>). The accessed data may take a number of different forms. For instance, the accessed data may be independent of any inter-object relationship between the data object and any other object in the polyarchy. Additionally, the accessed object(s) may participate in one or more hierarchies of inter-object relationships with one or more different data objects in the polyarchy. In this case, the accessed object(s) and the one or more different objects comprise a similar attribute. As discussed above, these inter-object relationships may be orthogonal with respect to one another in one or more dimensions. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> At block <highlight><bold>1318</bold></highlight>, the polyarchical data management module <highlight><bold>120</bold></highlight> transforms the accessed data for issuing to the client <highlight><bold>110</bold></highlight>. Specifically, accessed data is transformed based on the requirements of the specific PQL message <highlight><bold>500</bold></highlight> that was used to request the data (block <highlight><bold>1312</bold></highlight>). For instance, if the message indicates an object with respect to a particular dimension, the implicit and explicit inter-object relationships of the accessed data are assembled into a hierarchy based on the particular dimension. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> For example, an accessed data object represents a jump gate when the accessed data includes a complex object of the data objects that is related to one or more sub-objects of the data objects. In this case the complex object is transformed or represented as an independent surface entity. Each of the one or more sub-objects is described as a respective separate entity in a manner that is independent of the surface entity. The one or more sub-objects are then transformed or referenced in the surface entity to indicate a relationship between the complex object and the one or more sub-objects. The referencing is independent of any object naming or hierarchical data relationship between the complex object and the one or more sub-objects. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> In another example, accessed data includes a first object of the data objects in the polyarchy that is related to one or more sub-objects. The first object is transformed or represented as an independent surface entity. Each of the one or more sub-objects is described as respective separate entities in a manner that is independent of the surface entity. Then, a respective link is included in each of the one or more sub-objects to reference the first object. In this manner, as in the previous example, the data is transformed to express the relationship of interest as indicated in the corresponding PQL message <highlight><bold>500</bold></highlight>. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> At block <highlight><bold>1320</bold></highlight>, data polyarchy management module <highlight><bold>120</bold></highlight> issues, or communicates the transformed data (block <highlight><bold>1318</bold></highlight>) to the client. </paragraph>
<paragraph id="P-0123" lvl="7"><number>&lsqb;0123&rsqb;</number> Exemplary Computing Environment </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> illustrates an example of a suitable computing environment <highlight><bold>1400</bold></highlight> on which an exemplary data polyarchy server <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> may be implemented. The exemplary computing environment is only one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of an exemplary data polyarchy server <highlight><bold>102</bold></highlight>, a server <highlight><bold>106</bold></highlight>, or a client <highlight><bold>110</bold></highlight>. Neither should the computing environment <highlight><bold>1400</bold></highlight> be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary computing environment <highlight><bold>1400</bold></highlight>. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> The computer <highlight><bold>1402</bold></highlight> is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and/or configurations that may be suitable for use with an exemplary computer <highlight><bold>1402</bold></highlight> include, but are not limited to, personal computers, server computers, thin clients, thick clients, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> An exemplary computer <highlight><bold>1402</bold></highlight> may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, and so on, that performs particular tasks or implements particular abstract data types. An exemplary computer <highlight><bold>1402</bold></highlight> may be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, the computing environment <highlight><bold>1400</bold></highlight> includes a general-purpose computing device in the form of a computer <highlight><bold>1402</bold></highlight>. The components of computer <highlight><bold>1402</bold></highlight> may include, by are not limited to, one or more processors or processing units <highlight><bold>1412</bold></highlight>, a system memory <highlight><bold>1414</bold></highlight>, and a bus <highlight><bold>1416</bold></highlight> that couples various system components including the system memory <highlight><bold>1414</bold></highlight> to the processor <highlight><bold>1412</bold></highlight>. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> Bus <highlight><bold>1416</bold></highlight> represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnects (PCI) bus also known as Mezzanine bus. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> Server <highlight><bold>1402</bold></highlight> typically includes a variety of computer readable media. Such media may be any available media that is accessible by computer <highlight><bold>1402</bold></highlight>, and it includes both volatile and non-volatile media, removable and non-removable media. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, the system memory <highlight><bold>1414</bold></highlight> includes computer readable media in the form of volatile memory, such as random access memory (RAM) <highlight><bold>1420</bold></highlight>, and/or non-volatile memory, such as read only memory (ROM) <highlight><bold>1418</bold></highlight>. A basic input/output system (BIOS) <highlight><bold>1422</bold></highlight>, containing the basic routines that help to transfer information between elements within computer <highlight><bold>1402</bold></highlight>, such as during start-up, is stored in ROM <highlight><bold>1418</bold></highlight>. RAM <highlight><bold>1420</bold></highlight> typically contains data and/or program modules that are immediately accessible to and/or presently be operated on by processor <highlight><bold>1412</bold></highlight>. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> Computer <highlight><bold>1402</bold></highlight> may further include other removable/non-removable, volatile/non-volatile computer storage media. By way of example only, <cross-reference target="DRAWINGS">FIG. 14</cross-reference> illustrates a hard disk drive <highlight><bold>1424</bold></highlight> for reading from and writing to a non-removable, non-volatile magnetic media (not shown and typically called a &ldquo;hard drive&rdquo;), a magnetic disk drive <highlight><bold>1426</bold></highlight> for reading from and writing to a removable, non-volatile magnetic disk <highlight><bold>1428</bold></highlight> (e.g., a &ldquo;floppy disk&rdquo;), and an optical disk drive <highlight><bold>1430</bold></highlight> for reading from or writing to a removable, non-volatile optical disk <highlight><bold>1432</bold></highlight> such as a CD-ROM, DVD-ROM or other optical media. The hard disk drive <highlight><bold>1424</bold></highlight>, magnetic disk drive <highlight><bold>1426</bold></highlight>, and optical disk drive <highlight><bold>1430</bold></highlight> are each connected to bus <highlight><bold>1416</bold></highlight> by one or more interfaces <highlight><bold>1434</bold></highlight>. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> The drives and their associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules, and other data for computer <highlight><bold>1402</bold></highlight>. Although the exemplary environment described herein employs a hard disk, a removable magnetic disk <highlight><bold>1428</bold></highlight> and a removable optical disk <highlight><bold>1432</bold></highlight>, it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, random access memories (RAMs), read only memories (ROM), and the like, may also be used in the exemplary operating environment. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> A number of program modules <highlight><bold>1440</bold></highlight> may be stored on the hard disk, magnetic disk <highlight><bold>1428</bold></highlight>, optical disk <highlight><bold>1432</bold></highlight>, ROM <highlight><bold>1418</bold></highlight>, or RAM <highlight><bold>1420</bold></highlight>, including, by way of example, and not limitation, an operating system <highlight><bold>1438</bold></highlight>, one or more application programs <highlight><bold>1440</bold></highlight>, other program modules <highlight><bold>1442</bold></highlight>, and program data <highlight><bold>1444</bold></highlight>. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> Each of such operating system <highlight><bold>1438</bold></highlight>, one or more application programs <highlight><bold>1440</bold></highlight> (e.g., a polyarchy data management module <highlight><bold>120</bold></highlight>), other program modules <highlight><bold>1442</bold></highlight>, and program data <highlight><bold>1444</bold></highlight> (e.g., the data polyarchy <highlight><bold>122</bold></highlight> and the elements-of-interest schema <highlight><bold>124</bold></highlight>)&mdash;or some combination thereof, may include an implementation of an exemplary data polyarchy server <highlight><bold>102</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Specifically, each may include an implementation of a data polyarchy server <highlight><bold>102</bold></highlight> to: </paragraph>
<paragraph id="P-0135" lvl="2"><number>&lsqb;0135&rsqb;</number> (a) dynamically generate, manage, and update a data polyarchy <highlight><bold>122</bold></highlight> based on attribute values of the objects; </paragraph>
<paragraph id="P-0136" lvl="2"><number>&lsqb;0136&rsqb;</number> (b) analyze the data polyarchy based on relative distribution of attributes to generate an elements of interest schema indicating how objects in the data polyarchy can be meaningfully presented and manipulated within various inter-object relationships; </paragraph>
<paragraph id="P-0137" lvl="2"><number>&lsqb;0137&rsqb;</number> (c) communicate the elements-of-interest schema <highlight><bold>124</bold></highlight> to a client <highlight><bold>110</bold></highlight>; </paragraph>
<paragraph id="P-0138" lvl="2"><number>&lsqb;0138&rsqb;</number> (d) responsive to receiving a query (e.g., a PQL message <highlight><bold>500</bold></highlight>) based on the schema, determine a physical access strategy to access the requested data from a polyarchical data set <highlight><bold>122</bold></highlight>; </paragraph>
<paragraph id="P-0139" lvl="2"><number>&lsqb;0139&rsqb;</number> (e) access and transform the data based on the query request; and, </paragraph>
<paragraph id="P-0140" lvl="2"><number>&lsqb;0140&rsqb;</number> (f) issue the transformed data to the client as a response. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> A user may enter commands and information into computer <highlight><bold>1402</bold></highlight> through optional input devices such as keyboard <highlight><bold>1446</bold></highlight> and pointing device <highlight><bold>1448</bold></highlight> (such as a &ldquo;mouse&rdquo;). Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, serial port, scanner, or the like. These and other input devices are connected to the processing unit <highlight><bold>1412</bold></highlight> through a user input interface <highlight><bold>1450</bold></highlight> that is coupled to bus <highlight><bold>1416</bold></highlight>, but may be connected by other interface and bus structures, such as a parallel port, game port, or a universal serial bus (USB). </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> An optional monitor <highlight><bold>1452</bold></highlight> or other type of display device is also connected to bus <highlight><bold>1416</bold></highlight> via an interface, such as a video adapter <highlight><bold>1454</bold></highlight>. In addition to the monitor, personal computers typically include other peripheral output devices (not shown), such as speakers and printers, which may be connected through output peripheral interface <highlight><bold>1455</bold></highlight>. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> Computer <highlight><bold>1402</bold></highlight> may operate in a networked environment using logical connections to one or more remote computers, such as a remote server/computer <highlight><bold>1462</bold></highlight> (e.g., data servers <highlight><bold>106</bold></highlight>). Remote computer <highlight><bold>1462</bold></highlight> may include many or all of the elements and features described herein relative to computer <highlight><bold>1402</bold></highlight>. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> Logical connections shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference> are a local area network (LAN) <highlight><bold>1457</bold></highlight> and a general wide area network (WAN) <highlight><bold>1459</bold></highlight>. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet. When used in a LAN networking environment, the computer <highlight><bold>1402</bold></highlight> is connected to LAN <highlight><bold>1457</bold></highlight> via network interface or adapter <highlight><bold>1466</bold></highlight>. When used in a WAN networking environment, the computer typically includes a modem <highlight><bold>1458</bold></highlight> or other means for establishing communications over the WAN <highlight><bold>1459</bold></highlight>. The modem, which may be internal or external, may be connected to the system bus <highlight><bold>1416</bold></highlight> via the user input interface <highlight><bold>1450</bold></highlight> or other appropriate mechanism. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> Depicted in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, is a specific implementation of a WAN via the Internet. Computer <highlight><bold>1402</bold></highlight> typically includes a modem <highlight><bold>1458</bold></highlight> or other means for establishing communications over the Internet <highlight><bold>1460</bold></highlight>. Modem, which may be internal or external, is connected to bus <highlight><bold>1416</bold></highlight> via interface <highlight><bold>1450</bold></highlight>. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> In a networked environment, program modules depicted relative to the personal computer <highlight><bold>1402</bold></highlight>, or portions thereof, may be stored in a remote memory storage device. By way of example, and not limitation, <cross-reference target="DRAWINGS">FIG. 14</cross-reference> illustrates remote application programs <highlight><bold>1469</bold></highlight> as residing on a memory device of remote computer <highlight><bold>1462</bold></highlight>. It will be appreciated that the network connections shown and described are exemplary and other means of establishing a communications link between the computers may be used. </paragraph>
<paragraph id="P-0147" lvl="7"><number>&lsqb;0147&rsqb;</number> Computer Readable Media </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> An implementation of an exemplary computer <highlight><bold>102</bold></highlight> may be stored on or transmitted across some form of computer readable media. Computer readable media can be any available media that can be accessed by a computer. By way of example, and not limitation, computer readable media may comprise &ldquo;computer storage media&rdquo; and &ldquo;communications media.&rdquo;</paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> &ldquo;Computer storage media&rdquo; include volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules, or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by a computer. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> &ldquo;Communication media&rdquo; typically embodies computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as carrier wave or other transport mechanism. Communication media also includes any information delivery media. </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> The term &ldquo;modulated data signal&rdquo; means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared, and other wireless media. Combinations of any of the above are also included within the scope of computer readable media. </paragraph>
<paragraph id="P-0152" lvl="7"><number>&lsqb;0152&rsqb;</number> Conclusion </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> The described arrangements and procedures replace traditional notions of distinguished names that represent inter-object relationships within a single static hierarchy. More specifically, the described arrangements and procedures replace these traditional notions with dynamically generated graphs of inter-object connections in multiple dimensions of data relationships based on attributes of the objects. In this manner, complex real-world objects are represented with respect to the particular objects themselves, with respect to any set of decomposed sub-entities, or sub-objects that are related to the particular objects. These inter-object relationships are managed and navigated using a data polyarchy schema <highlight><bold>124</bold></highlight> that has been generated to access elements of interest in the data polyarchy <highlight><bold>122</bold></highlight>. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> Although the described subject matter to generate and manage polyarchies of data relationships has been described in language specific to structural features and/or methodological operations, it is to be understood that the subject defined in the appended claims is not necessarily limited to the specific features or operations described. Rather, the specific features and steps are disclosed as preferred forms of implementing the claimed present invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. In a distributed computing environment, a method comprising: 
<claim-text>receiving data from a data store, the data corresponding to a plurality of objects; and </claim-text>
<claim-text>responsive to receiving the data, dynamically generating multiple hierarchies of inter-object relationships based on values of attributes of the objects, the multiple hierarchies of inter-object relationships being a data polyarchy. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the data store comprises a directory or a database. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the data polyarchy comprises intersecting hierarchies of inter-object relationships. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the data polyarchy comprises an elastic inter-object relationship. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein dynamically generating multiple hierarchies of inter-object relationships further comprises: 
<claim-text>identifying a dimensional relationship of one or more dimensional relationships between a first and second object of the objects; and </claim-text>
<claim-text>inserting the first object into the second object such that the first object is represented in the second object with respect to the dimensional relationship. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein first and second objects of the objects are respectively represented in the data polyarchy as separate entities, and wherein dynamically generating multiple hierarchies of inter-object relationships further comprises: 
<claim-text>identifying a dimensional relationship of one or more dimensional relationships between the first object and the second object; and </claim-text>
<claim-text>inserting a link to the first object in the second object with respect to the dimensional relationship. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein the link is a jump gate. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the multiple hierarchies of inter-object relationships are represented independent of object naming and independent of a predetermined hierarchical data structure. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the inter-object relationships represent mono-directional object relationships and bi-directional object relationships. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein is the data polyarchy comprises a membership hierarchy that provides for de-referenced dimensional navigation of a many-to-many object relationship. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein generating the data polyarchy further comprises: 
<claim-text>relating a first and a second object of the objects to a third object of the objects to facilitate de-referenced dimensional navigation of a many-to-many object relationship between the first, second, and third objects. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising naming an inter-object relationship in the data polyarchy with a natural language. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein generating the data polyarchy further comprises establishing, for individual ones of the objects, a plurality of predicates to indicate how to access the individual ones of the objects. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein generating the data polyarchy further comprises establishing for individual ones of the objects a plurality of domain properties to index the individual ones of the objects. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the domain properties comprise a data type, a data precision indication, a scale indication, and a nullability indication. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein generating the data polyarchy further comprises determining the relative distribution of attributes of the objects to establish a strategy to present or search for objects that comprise the attributes. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein generating the data polyarchy further comprises: 
<claim-text>determining the relative distribution of attributes of the objects to establish a strategy to present or search for objects that comprise the attributes, and wherein the strategy comprises one or more of the following operations: </claim-text>
<claim-text>a first operation to find a default search object of the objects; </claim-text>
<claim-text>a second operation to locate a particular object of the objects; </claim-text>
<claim-text>a third operation to obtain a default hierarchy of data relationships that correspond to a particular object of the objects; </claim-text>
<claim-text>a fourth operation to obtain a particular hierarchy of data relationships that correspond to a particular object of the objects; </claim-text>
<claim-text>a fifth operation to identify at least one subset of a plurality of hierarchies of data relationships that correspond to a particular object of the objects; and </claim-text>
<claim-text>a sixth operation to obtain multiple hierarchies of data relationships that correspond to a particular object of the objects. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the strategy comprises a recursive access strategy or a linear scan access strategy. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the domain properties comprise a logical domain property comprising a distinguishing domain, a locating domain, or a classifying domain. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A method as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein each object further comprises one or more respective attributes, and wherein generating the data polyarchy further comprises: 
<claim-text>identifying a plurality of distinguishing attributes, each distinguishing attribute representing a respective object of the objects that is a root of a hierarchy, each distinguishing attribute being from a substantially unique distribution of similar attributes across the objects; </claim-text>
<claim-text>identifying one or more locating attributes for narrowing a search for an object of the objects; each locating attribute being from a relatively large distribution of similar attributes across the objects; and </claim-text>
<claim-text>identifying one or more classifying attributes for filtering out objects from a search for an object, each classifying attribute being from a relatively small distribution of similar attributes across the objects. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. A computer for representing directory-based object inter-object relationships, the computer comprising: 
<claim-text>a processor; and </claim-text>
<claim-text>a memory coupled to the processor, the memory comprising computer-executable instructions and data, the processor for fetching and executing the computer-executable instructions, the computer-executable instructions comprising instructions for: 
<claim-text>receiving data from a data store, the data corresponding to a plurality of objects; and </claim-text>
<claim-text>responsive to receiving the data, dynamically generating multiple hierarchies of inter-object relationships based on values of attributes of the objects, the multiple hierarchies of inter-object relationships being a data polyarchy. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the data store comprises a directory or a database. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the data polyarchy comprises intersecting hierarchies of inter-object relationships. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the data polyarchy comprises an elastic inter-object relationship. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the computer-executable instructions for dynamically generating multiple hierarchies of inter-object relationships further comprise instructions for: 
<claim-text>identifying a dimensional relationship of one or more dimensional relationships between a first and second object of the objects; and </claim-text>
<claim-text>inserting the first object into the second object such that the first object is represented in the second object with respect to the dimensional relationship. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein first and second objects of the objects are respectively represented in the data polyarchy as separate entities, and wherein the computer-executable instructions for dynamically generating multiple hierarchies of inter-object relationships further comprise instructions for: 
<claim-text>identifying a dimensional relationship of one or more dimensional relationships between the first object and the second object; and </claim-text>
<claim-text>inserting a link to the first object in the second object with respect to the dimensional relationship. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, wherein the link is a jump gate. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the multiple hierarchies of inter-object relationships are represented independent of object naming and independent of a predetermined hierarchical data structure. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the inter-object relationships represent mono-directional object relationships and bi-directional object relationships. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein is the data polyarchy comprises a membership hierarchy that provides for de-referenced dimensional navigation of a many-to-many object relationship. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the computer-executable instructions for generating the data polyarchy further comprise instructions for: 
<claim-text>relating a first and a second object of the objects to a third object of the objects to facilitate de-referenced dimensional navigation of a many-to-many object relationship between the first, second, and third objects. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the computer-executable instructions for generating the data polyarchy further comprises instructions for establishing, for individual ones of the objects, a plurality of predicates to indicate how to access the individual ones of the objects. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the computer-executable instructions for generating the data polyarchy further comprise instructions for establishing for individual ones of the objects a plurality of domain properties identify to index the individual ones of the objects. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, wherein the domain properties comprise a data type, a data precision indication, a scale indication, and a nullability indication. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the computer-executable instructions for generating the data polyarchy further comprise instructions for determining the relative distribution of attributes of the objects to establish a strategy to present or search for objects that comprise the attributes. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the computer-executable instructions for generating the data polyarchy further comprise instructions for: 
<claim-text>determining the relative distribution of attributes of the objects to establish a strategy to present or search for objects that comprise the attributes, and wherein the strategy comprises one or more of the following operations: 
<claim-text>a first operation to find a default search object of the objects; </claim-text>
<claim-text>a second operation to locate a particular object of the objects; </claim-text>
<claim-text>a third operation to obtain a default hierarchy of data relationships that correspond to a particular object of the objects; </claim-text>
<claim-text>a fourth operation to obtain a particular hierarchy of data relationships that correspond to a particular object of the objects; </claim-text>
<claim-text>a fifth operation to identify at least one subset of a plurality of hierarchies of data relationships that correspond to a particular object of the objects; and </claim-text>
<claim-text>a sixth operation to obtain multiple hierarchies of data relationships that correspond to a particular object of the objects. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00033">claim 36</dependent-claim-reference>, wherein the strategy comprises a recursive access strategy or a linear scan access strategy. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00033">claim 36</dependent-claim-reference>, wherein the domain properties comprise a logical domain property comprising a distinguishing domain, a locating domain, or a classifying domain. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein each object further comprises one or more respective attributes, and wherein the computer-executable instructions for generating the data polyarchy further comprise instructions for: 
<claim-text>identifying a plurality of distinguishing attributes, each distinguishing attribute representing a respective object of the objects that is a root of a hierarchy, each distinguishing attribute being from a substantially unique distribution of similar attributes across the objects; </claim-text>
<claim-text>identifying one or more locating attributes for narrowing a search for an object of the objects; each locating attribute being from a relatively large distribution of similar attributes across the objects; and </claim-text>
<claim-text>identifying one or more classifying attributes for filtering out objects from a search for an object, each classifying attribute being from a relatively small distribution of similar attributes across the objects. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. A data structure comprising: 
<claim-text>a plurality of virtual object data fields, each virtual object data field corresponding to a respective object of a plurality of objects in a data store, the virtual object data fields indicating multiple hierarchies of inter-object relationships based on attributes of the objects. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. A data structure as recited in <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference>, wherein the data store is a directory or a database. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. A data structure as recited in <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference>, wherein each virtual object data field further comprises: 
<claim-text>a first globally unique identifier (GUID) data field to uniquely identify a corresponding object in the data store. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. A data structure as recited in <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference>, wherein a virtual object data field corresponds to a first object of the objects, and wherein the virtual object data field further comprises an entity reference data field to uniquely identify a second object of the objects as a sub-element of the first object, the entity reference data field uniquely identifying the second object in the data store. </claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. A data structure as recited in <dependent-claim-reference depends_on="CLM-00044">claim 43</dependent-claim-reference>, wherein the entity reference is a GUID. </claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. A data structure as recited in <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference>, wherein each virtual data object data field further comprises one or more predicate data fields, each predicate data field indicating a respective operation to present a particular object with respect to one or more hierarchies of inter-object relationships. </claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. A data structure as recited in <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference>, wherein each virtual data object data field further comprises: 
<claim-text>a domain property data field to index a corresponding object of the objects with respect to one or more hierarchies of inter-object relationships. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. A data structure as recited in <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference>, wherein the domain property data field further comprises: 
<claim-text>a physical domain comprising a data type, a data precision indication, a scale indication, or a nullability indication; and </claim-text>
<claim-text>a logical domain comprising a unique domain, a locating domain, or a classifying domain. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. A computer-readable medium having stored thereon a data structure as recited in <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference>. </claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. A computer-readable medium comprising computer-executable instructions for: 
<claim-text>receiving data from a data store, the data corresponding to a plurality of objects; and </claim-text>
<claim-text>responsive to receiving the data, dynamically generating multiple hierarchies of inter-object relationships based on values of attributes of the objects, the multiple hierarchies of inter-object relationships being a data polyarchy. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the data store comprises a directory or a database. </claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the data polyarchy comprises intersecting hierarchies of inter-object relationships. </claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the data polyarchy comprises an elastic inter-object relationship. </claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the data polyarchy comprises a complex object that is related to one or more sub-objects in the data polyarchy, and wherein the computer-executable instructions for determining inter-object relationships further comprise instructions for: 
<claim-text>representing the complex object as an independent surface entity; and </claim-text>
<claim-text>referencing the one or more sub-objects in the independent surface entity as separate entities, the one or more sub-objects being referenced independent of object naming and independent of a hierarchical data relationship between the surface entity and the one or more sub-objects. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the data polyarchy comprises a first object that is related to one or more sub-objects in the data polyarchy, and wherein the computer-executable instructions for determining the inter-object relationships further comprise instructions for: 
<claim-text>representing the first object as a surface entity; </claim-text>
<claim-text>representing each of the one or more sub-objects as respective separate entities that are independent of the surface entity; and </claim-text>
<claim-text>referencing the surface object in each of the one or more sub-objects independent of any object naming or hierarchical relationship. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00055">
<claim-text><highlight><bold>55</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the multiple hierarchies of inter-object relationships are represented independent of object naming and independent of a predetermined hierarchical data structure. </claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the inter-object relationships represent mono-directional object relationships and bi-directional object relationships. </claim-text>
</claim>
<claim id="CLM-00057">
<claim-text><highlight><bold>57</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein is the data polyarchy comprises a membership hierarchy that provides for de-referenced dimensional navigation of a many-to-many object relationship. </claim-text>
</claim>
<claim id="CLM-00058">
<claim-text><highlight><bold>58</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the computer-executable instructions for generating the data polyarchy further comprise instructions for: 
<claim-text>relating a first and a second object of the objects to a third object of the objects to facilitate de-referenced dimensional navigation of a many-to-many object relationship between the first, second, and third objects. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00059">
<claim-text><highlight><bold>59</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the computer-executable instructions for generating the data polyarchy further comprises instructions for establishing, for individual ones of the objects, a plurality of predicates to indicate how to access the individual ones of the objects. </claim-text>
</claim>
<claim id="CLM-00060">
<claim-text><highlight><bold>60</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the computer-executable instructions for generating the data polyarchy further comprise instructions for determining the relative distribution of attributes of the objects to establish a strategy to present or search for objects that comprise the attributes. </claim-text>
</claim>
<claim id="CLM-00061">
<claim-text><highlight><bold>61</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein each object further comprises one or more respective attributes, and wherein the computer-executable instructions for generating the data polyarchy further comprise instructions for: 
<claim-text>identifying a plurality of distinguishing attributes, each distinguishing attribute representing a respective object of the objects that is a root of a hierarchy, each distinguishing attribute being from a substantially unique distribution of similar attributes across the objects; </claim-text>
<claim-text>identifying one or more locating attributes for narrowing a search for an object of the objects; each locating attribute being from a relatively large distribution of similar attributes across the objects; and </claim-text>
<claim-text>identifying one or more classifying attributes for filtering out objects from a search for an object, each classifying attribute being from a relatively small distribution of similar attributes across the objects. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00062">
<claim-text><highlight><bold>62</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the computer-executable instructions for generating the data polyarchy further comprise instructions for establishing for individual ones of the objects a plurality of domain properties identify to index the individual ones of the objects. </claim-text>
</claim>
<claim id="CLM-00063">
<claim-text><highlight><bold>63</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00066">claim 62</dependent-claim-reference>, wherein the domain properties comprise a data type, a data precision indication, a scale indication, and a nullability indication. </claim-text>
</claim>
<claim id="CLM-00064">
<claim-text><highlight><bold>64</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the computer-executable instructions for generating the data polyarchy further comprise instructions for: 
<claim-text>determining the relative distribution of attributes of the objects to establish a strategy to present or search for objects that comprise the attributes, and wherein the strategy comprises one or more of the following operations: </claim-text>
<claim-text>a first operation to find a default search object of the objects; </claim-text>
<claim-text>a second operation to locate a particular object of the objects; </claim-text>
<claim-text>a third operation to obtain a default hierarchy of data relationships that correspond to a particular object of the objects; </claim-text>
<claim-text>a fourth operation to obtain a particular hierarchy of data relationships that correspond to a particular object of the objects; </claim-text>
<claim-text>a fifth operation to identify at least one subset of a plurality of hierarchies of data relationships that correspond to a particular object of the objects; and </claim-text>
<claim-text>a sixth operation to obtain multiple hierarchies of data relationships that correspond to a particular object of the objects. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00065">
<claim-text><highlight><bold>65</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00066">claim 64</dependent-claim-reference>, wherein the strategy comprises a recursive access strategy or a linear scan access strategy. </claim-text>
</claim>
<claim id="CLM-00066">
<claim-text><highlight><bold>66</bold></highlight>. A computer-readable medium as recited in <dependent-claim-reference depends_on="CLM-00066">claim 64</dependent-claim-reference>, wherein the domain properties comprise a logical domain property comprising a distinguishing domain, a locating domain, or a classifying domain. </claim-text>
</claim>
<claim id="CLM-00067">
<claim-text><highlight><bold>67</bold></highlight>. A computer for representing directory-based object inter-object relationships, the computer comprising processing means for: 
<claim-text>receiving data from a data store, the data corresponding to a plurality of objects; and </claim-text>
<claim-text>responsive to receiving the data, dynamically generating multiple hierarchies of inter-object relationships based on values of attributes of the objects, the multiple hierarchies of inter-object relationships being a data polyarchy. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00068">
<claim-text><highlight><bold>68</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00066">claim 67</dependent-claim-reference>, wherein the data polyarchy comprises intersecting hierarchies of inter-object relationships. </claim-text>
</claim>
<claim id="CLM-00069">
<claim-text><highlight><bold>69</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00066">claim 67</dependent-claim-reference>, wherein the data polyarchy comprises an elastic inter-object relationship. </claim-text>
</claim>
<claim id="CLM-00070">
<claim-text><highlight><bold>70</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00066">claim 67</dependent-claim-reference>, wherein the means for dynamically generating multiple hierarchies of inter-object relationships further comprise means for: 
<claim-text>identifying a dimensional relationship of one or more dimensional relationships between a first and second object of the objects; and </claim-text>
<claim-text>inserting the first object into the second object such that the first object is represented in the second object with respect to the dimensional relationship. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00071">
<claim-text><highlight><bold>71</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00066">claim 67</dependent-claim-reference>, wherein first and second objects of the objects are respectively represented in the data polyarchy as separate entities, and wherein the means for dynamically generating multiple hierarchies of inter-object relationships further comprise means for: 
<claim-text>identifying a dimensional relationship of one or more dimensional relationships between the first object and the second object; and </claim-text>
<claim-text>inserting a link to the first object in the second object with respect to the dimensional relationship. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00072">
<claim-text><highlight><bold>72</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00066">claim 68</dependent-claim-reference>, wherein the link is a jump gate. </claim-text>
</claim>
<claim id="CLM-00073">
<claim-text><highlight><bold>73</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00066">claim 67</dependent-claim-reference>, wherein the multiple hierarchies of inter-object relationships are represented independent of object naming and independent of a predetermined hierarchical data structure. </claim-text>
</claim>
<claim id="CLM-00074">
<claim-text><highlight><bold>74</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00066">claim 67</dependent-claim-reference>, wherein is the data polyarchy comprises a membership hierarchy that provides for de-referenced dimensional navigation of a many-to-many object relationship. </claim-text>
</claim>
<claim id="CLM-00075">
<claim-text><highlight><bold>75</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00066">claim 67</dependent-claim-reference>, wherein the means for generating the data polyarchy further comprise means for: 
<claim-text>relating a first and a second object of the objects to a third object of the objects to facilitate de-referenced dimensional navigation of a many-to-many object relationship between the first, second, and third objects. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00076">
<claim-text><highlight><bold>76</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00066">claim 67</dependent-claim-reference>, wherein the means for generating the data polyarchy further comprises means for establishing, for individual ones of the objects, a plurality of predicates to indicate how to access the individual ones of the objects. </claim-text>
</claim>
<claim id="CLM-00077">
<claim-text><highlight><bold>77</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00066">claim 67</dependent-claim-reference>, wherein the means for generating the data polyarchy further comprise means for establishing for individual ones of the objects a plurality of domain properties identify to index the individual ones of the objects. </claim-text>
</claim>
<claim id="CLM-00078">
<claim-text><highlight><bold>78</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00077">claim 77</dependent-claim-reference>, wherein the domain properties comprise a data type, a data precision indication, a scale indication, and a nullability indication. </claim-text>
</claim>
<claim id="CLM-00079">
<claim-text><highlight><bold>79</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00066">claim 67</dependent-claim-reference>, wherein the means for generating the data polyarchy further comprise means for determining the relative distribution of attributes of the objects to establish a strategy to present or search for objects that comprise the attributes. </claim-text>
</claim>
<claim id="CLM-00080">
<claim-text><highlight><bold>80</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00066">claim 67</dependent-claim-reference>, wherein the means for generating the data polyarchy further comprise means for: 
<claim-text>determining the relative distribution of values assumed by attributes of the objects to establish a strategy to present or search for objects that comprise the attributes, and wherein the strategy comprises one or more of the following operations: </claim-text>
<claim-text>a first operation to find a default search object of the objects; </claim-text>
<claim-text>a second operation to locate a particular object of the objects; </claim-text>
<claim-text>a third operation to obtain a default hierarchy of data relationships that correspond to a particular object of the objects; </claim-text>
<claim-text>a fourth operation to obtain a particular hierarchy of data relationships that correspond to a particular object of the objects; </claim-text>
<claim-text>a fifth operation to identify at least one subset of a plurality of hierarchies of data relationships that correspond to a particular object of the objects; and </claim-text>
<claim-text>a sixth operation to obtain multiple hierarchies of data relationships that correspond to a particular object of the objects. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00081">
<claim-text><highlight><bold>81</bold></highlight>. A computer as recited in claim <highlight><bold>80</bold></highlight>, wherein the strategy comprises a recursive access strategy or a linear scan access strategy. </claim-text>
</claim>
<claim id="CLM-00082">
<claim-text><highlight><bold>82</bold></highlight>. A computer as recited in claim <highlight><bold>80</bold></highlight>, wherein the domain properties comprise a logical domain property comprising a distinguishing domain, a locating domain, or a classifying domain. </claim-text>
</claim>
<claim id="CLM-00083">
<claim-text><highlight><bold>83</bold></highlight>. A computer as recited in <dependent-claim-reference depends_on="CLM-00066">claim 67</dependent-claim-reference>, wherein each object further comprises one or more respective attributes, and wherein the means for generating the data polyarchy further comprise means for: 
<claim-text>identifying a plurality of distinguishing attributes, each distinguishing attribute representing a respective object of the objects that is a root of a hierarchy, each distinguishing attribute being from a substantially unique distribution of similar attributes across the objects; </claim-text>
<claim-text>identifying one or more locating attributes for narrowing a search for an object of the objects; each locating attribute being from a relatively large distribution of similar attributes across the objects; and </claim-text>
<claim-text>identifying one or more classifying attributes for filtering out objects from a search for an object, each classifying attribute being from a relatively small distribution of similar attributes across the objects.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004964A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004964A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004964A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004964A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004964A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004964A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004964A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004964A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004964A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004964A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004964A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030004964A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030004964A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030004964A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030004964A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
