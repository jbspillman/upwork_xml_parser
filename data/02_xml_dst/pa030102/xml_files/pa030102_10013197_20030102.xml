<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005062A1-20030102-D00000.TIF SYSTEM "US20030005062A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00001.TIF SYSTEM "US20030005062A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00002.TIF SYSTEM "US20030005062A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00003.TIF SYSTEM "US20030005062A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00004.TIF SYSTEM "US20030005062A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00005.TIF SYSTEM "US20030005062A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00006.TIF SYSTEM "US20030005062A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00007.TIF SYSTEM "US20030005062A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00008.TIF SYSTEM "US20030005062A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00009.TIF SYSTEM "US20030005062A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00010.TIF SYSTEM "US20030005062A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00011.TIF SYSTEM "US20030005062A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00012.TIF SYSTEM "US20030005062A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00013.TIF SYSTEM "US20030005062A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00014.TIF SYSTEM "US20030005062A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00015.TIF SYSTEM "US20030005062A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00016.TIF SYSTEM "US20030005062A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00017.TIF SYSTEM "US20030005062A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00018.TIF SYSTEM "US20030005062A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00019.TIF SYSTEM "US20030005062A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00020.TIF SYSTEM "US20030005062A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00021.TIF SYSTEM "US20030005062A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00022.TIF SYSTEM "US20030005062A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00023.TIF SYSTEM "US20030005062A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00024.TIF SYSTEM "US20030005062A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00025.TIF SYSTEM "US20030005062A1-20030102-D00025.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00026.TIF SYSTEM "US20030005062A1-20030102-D00026.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00027.TIF SYSTEM "US20030005062A1-20030102-D00027.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00028.TIF SYSTEM "US20030005062A1-20030102-D00028.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00029.TIF SYSTEM "US20030005062A1-20030102-D00029.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00030.TIF SYSTEM "US20030005062A1-20030102-D00030.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00031.TIF SYSTEM "US20030005062A1-20030102-D00031.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00032.TIF SYSTEM "US20030005062A1-20030102-D00032.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00033.TIF SYSTEM "US20030005062A1-20030102-D00033.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00034.TIF SYSTEM "US20030005062A1-20030102-D00034.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00035.TIF SYSTEM "US20030005062A1-20030102-D00035.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00036.TIF SYSTEM "US20030005062A1-20030102-D00036.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00037.TIF SYSTEM "US20030005062A1-20030102-D00037.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00038.TIF SYSTEM "US20030005062A1-20030102-D00038.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00039.TIF SYSTEM "US20030005062A1-20030102-D00039.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00040.TIF SYSTEM "US20030005062A1-20030102-D00040.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00041.TIF SYSTEM "US20030005062A1-20030102-D00041.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00042.TIF SYSTEM "US20030005062A1-20030102-D00042.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00043.TIF SYSTEM "US20030005062A1-20030102-D00043.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00044.TIF SYSTEM "US20030005062A1-20030102-D00044.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00045.TIF SYSTEM "US20030005062A1-20030102-D00045.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00046.TIF SYSTEM "US20030005062A1-20030102-D00046.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00047.TIF SYSTEM "US20030005062A1-20030102-D00047.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00048.TIF SYSTEM "US20030005062A1-20030102-D00048.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00049.TIF SYSTEM "US20030005062A1-20030102-D00049.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00050.TIF SYSTEM "US20030005062A1-20030102-D00050.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00051.TIF SYSTEM "US20030005062A1-20030102-D00051.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00052.TIF SYSTEM "US20030005062A1-20030102-D00052.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00053.TIF SYSTEM "US20030005062A1-20030102-D00053.TIF" NDATA TIF>
<!ENTITY US20030005062A1-20030102-D00054.TIF SYSTEM "US20030005062A1-20030102-D00054.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005062</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10013197</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20011029</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/16</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>709</class>
<subclass>206000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method and apparatus for automatic sending of E-mail and automatic sending control program supplying medium</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10013197</doc-number>
<kind-code>A1</kind-code>
<document-date>20011029</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08992770</doc-number>
<document-date>19971217</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</continuation-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Kazuhiko</given-name>
<family-name>Hachiya</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Michio</given-name>
<family-name>Kitamura</family-name>
</name>
<residence>
<residence-non-us>
<city>Kanagawa</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Takashi</given-name>
<family-name>Koki</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Namie</given-name>
<family-name>Otaki</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>BELL, BOYD &amp; LLOYD, LLC</name-1>
<name-2></name-2>
<address>
<address-1>P. O. BOX 1135</address-1>
<city>CHICAGO</city>
<state>IL</state>
<postalcode>60690-1135</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method and apparatus for sending an E-mail, dispatching or delivering mail with an animated representation as if a pet were going in and out on a GUI picture simulating the inside of a room. In addition, the user can send an E-mail with a friendly feeling using an agent. By sending agent data which is updated responsive to experiences of an electronic pet as annexed papers to the E-mail, the animation appears as if an electronic pet were going in and out on a GUI picture simulating the inside of a room for dispatching or delivering a mail. The behavior of the animated pet is varied depending on the keeping environment. The electronic pet selects an illustrative sentence in keeping with the agent data from preset illustrative sentences for voluntary sending the sentence as an E-mail to a user who is a keeper or to a counterpart of past mailing of the user. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">RELATED APPLICATION DATA </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention is a continuation of U.S. patent application Ser. No. 08/992,770 filed on Dec. 17, 1997.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to a method and apparatus for automatic sending of an E-mail and an automatic sending program supplying medium, used in exchanging an E-mail between computer terminals of, for example, a personal computer, over a communication network. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> As a configuration of utilizing the Internet, providing a global-scale communication network environment capable of exchanging the information between mutually spaced-apart computers, an electronic mail (E-mail) is in widespread use. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> In an Internet E-mail system, mail servers are provided in a distributed fashion in each domain. The client user sends or receives an E-mail to or from a mail server of the domain to which he or she belongs. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> That is, a sender states the contents he or she desires to send and accords a required address and name by a client tool for an E-mail termed a mailer (software for sending/receiving the mail) for sending the mail to the receiver. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The mail server of a domain to which the sender belongs sends the mail for transmission to a representative mail server of an organization. The representative mail server accords an address of the server/node to be arrived at next to send the address to the network, which then refers to the address to sequentially transfer the mail to the mail server to which belongs the counterpart of the communication (receiver). </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The receiver recognizes the arrival of the E-mail in his or her post by various means such as display of a notice of arrival on starting the mailer so that he or she can read the sent mail. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> For delivery of the E-mail, the simple mail transfer protocol (SMTP), which is the upper-order protocol of the transmission control/Internet Protocol (TCP/IP), is used as the communication protocol. Usually, the format is automatically formulated by the mailer. To the leading end of the main text of the mail is appended a header made up of rows stating a date &lsqb;Date:&rsqb;, a name of mail sender &lsqb;From:&rsqb;, an address &lsqb;To:&rsqb;, a title &lsqb;Subject:&rsqb; or a carbon copy (blind carbon copy) &lsqb;Bcc:&rsqb;, in accordance with SMTP. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Although the E-mail system of the Internet is based on the text (letter information: character codes), an extension format, configured for enabling handling of languages other than English or multimedia such as pictures or speech, is also defined as multipurpose Internet mail extension (MIME). That is, still-picture information, moving picture information or speech information is compressed and converted to character codes which are assembled in the MIME system into the text and sent in this form. The receiver side automatically interprets the MIME system to check the form in which the information is assembled into the text to start a viewer/player tool for displaying/reproducing the information. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Such an E-mail system in which the picture information is annexed to the E-mail for enabling sending/reception of the E-mail made up of co-existing pictures and letters is known from the Japanese Laid-open Patent Application JP-A-5-274233 assigned to the assignee of present application. With this E-mail system, a terminal keyboard or a mouse is operated for drawing or writing main text and a picture on a letter pad displayed on a CRT and the keyboard or the mouse is further operated for issuing a send command for an E-mail. It is then determined whether or the name of the receiver is stated on an uppermost row of the text. If the receiver name is determined to be entered, an E-mail header made up of the receiver&apos;s name, sender&apos;s name and the current data is formulated. It is then checked whether a picture is drawn on the letter pad. If the picture is found to have been drawn, the picture information data made up of the page information stating the page of the letter pad having the picture, the position information specifying the position of the picture and the picture title is formulated and appended to the E-mail header. The main text is then appended and sent as the E-mail. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> Although the above-described E-mail system is highly convenient if one is accustomed to it, the system is unfriendly to a user sending or receiving the E-mail for the first time using a personal computer, because the system is significantly different from the usual letter or mail delivery system customarily used in everyday life. That is, the E-mail system can be utilized only after the user has learned and fully understood the operating method for the mailer as the E-mail exchanging software with the aid of a manual. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Recently, a set-top box, termed an Internet terminal, having assembled therein the Internet accessing function, is on the market, such that a user not in possession of a personal computer can easily utilize Internet services by connecting the Internet terminal to the television receiver in his or her home. However, the mailer operating method cannot be intuitively understood even by this Internet terminal user. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> As the graphical user interface (GUI) which takes user-friendliness into account, there is known a desk top metaphor picture imitating the desk top which is implemented by the operating system termed a Magic Cap&reg; developed by General Magic Inc. <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a typical display of the GUI picture of Magic Cap. This GUI picture images the metaphor of the every-day tools or daily life environment using a desk top picture <highlight><bold>300</bold></highlight> simulating a study. On this desk top picture <highlight><bold>300</bold></highlight> are displayed a timepiece <highlight><bold>301</bold></highlight> showing the current time, an inbox <highlight><bold>302</bold></highlight> showing the number of received E-mails, an out-box <highlight><bold>303</bold></highlight> showing the number of E-mails already sent and a file cabinet <highlight><bold>304</bold></highlight> for keeping files. In addition, a telephone <highlight><bold>305</bold></highlight>, an address book <highlight><bold>306</bold></highlight>, a postcard <highlight><bold>307</bold></highlight> for formulating a message sent by the E-mail, a notebook <highlight><bold>308</bold></highlight>, and a schedule memorandum <highlight><bold>309</bold></highlight>, are displayed as being put on a desk fitted with a drawer so that these can be actuated by a pen touch. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> However, although an image simulating an actual postcard is displayed in the GUI picture by Magic Cap, the process of receiving and delivering the postcard <highlight><bold>307</bold></highlight> or the process of arrival of the postcard from another user is not displayed, such that the user cannot intuitively comprehend the delivery process. That is, the user cannot surmise the process or the exchanging method of the E-mails or the operating method from the customary letter delivery system. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Meanwhile, there is disclosed in the Japanese Laid-Open Patent Application JP-A-3-222033, corresponding to U.S. Pat. No. 5,347,628, a technique concerning GUI which enables intuitive accessing to electronic data of a desk top metaphor picture simulating a room by a moving-picture-like icon, as an interface for a data processing device, the disclosure of which is incorporated herein by reference. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> An object of the present invention is, therefore, to provide a method and apparatus for automatic sending of an E-mail and an automatic sending program supplying medium, according to which not only a user can entrust his or her mail to a pet as an agent acting on his or her behalf to enable facilitated sending/reception of the E-mail by an intuitively comprehensible operation under utilization of the real-world-oriented GUI, but also the user or client can use the agent with a friendly feeling. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> It is another object of the present invention to provide a method and apparatus for automatic sending of an E-mail and an automatic sending program supplying medium, according to which the function of the agent can be terminated at a time when the user has lost interest in the contents of the E-mail voluntarily sent by the agent and this effect can be intimated to the user or his or her counterpart by an E-mail addressed to the user or to his or her counterpart. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> In a method and apparatus for automatic sending of an E-mail and an automatic sending program supplying medium, according to the present invention, agent parameters controlling the behavior of an agent delivering an E-mail are appended to the main mail text, having an appended mail header, responsive to a send command designating the sending of the E-mail, for sending to a counterpart of E-mailing of a user. The agent parameters are modified responsive to the contents of experiences reflecting the operating hysteresis for the agent. An E-mail of a preset illustrative sentence is sent by the agent to the user based on the agent parameters. Thus, the user (client) can send an E-mail by an intuitively comprehensible simple operation by the agent acting on his or her behalf by exploiting the real-world-oriented GUI, while the user (client) can use the agent with an amicable feeling for the agent. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> In an alternative method and apparatus for automatic sending of an E-mail and an automatic sending program supplying medium, according to the present invention, agent parameters controlling the behavior of an agent delivering an E-mail are appended to the main mail text, having an appended mail header, responsive to a sending command designating the sending of the E-mail, for sending to a counterpart of E-mailing of a user. The agent parameters are modified responsive to the contents of experiences reflecting the agent&apos;s operating hysteresis. An E-mail of a preset illustrative sentence is sent by the agent to a counterpart of E-mailing of the user based on the agent parameters. Thus, the user (client) can send an E-mail by an intuitively comprehensible simple operation by the agent acting on his or her behalf by exploiting the real-world-oriented GUI, while the counterpart of E-mailing of the user can respond to the mail with an amicable feeling for the agent, thus assuring mail exchange with a friendly feeling. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> In a still alternative method and apparatus for automatic sending of an E-mail and an automatic sending program supplying medium, according to the present invention, agent parameters controlling the behavior of an agent delivering an E-mail are appended to the main mail text, having an appended mail header, responsive to a sending command designating the sending of the E-mail, for sending to a counterpart of E-mailing of a user. The agent parameters are modified responsive to the contents of experiences reflecting the operating hysteresis for the agent. An E-mail of a preset illustrative sentence is sent by the agent to the user or to a counterpart of E-mailing of the user based on the agent parameters. Thus, both the sender and the receiver of the E-mail can have a common consciousness of keeping electronic pets, thus assuring mail exchange with a friendly feeling. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> According to the present invention, the process of exchanging an E-mail is represented as an agent behavior simulating the letter dispatching and delivery in everyday life, thus enabling the function or the operating procedure to be surmised easily, such that even a beginner can learn and utilize E-mailing easily. By the sending side sending agent data updated responsive to the experiences of the electronic pet as annexed papers to the E-mail, and by the receiving side automatically returning only pet data, the E-mail can be sent or received with animated display as though the pet were going in and out on a GUI picture simulating the insides of both the sender&apos;s room and the receiver&apos;s room. In addition, the electronic pet, displayed by animation, can be virtually kept. That is, by updating the agent data determining the character or the behavior of the pet responsive to mouse actuation by the user, such as caressing or serving refreshments, and by varying the pet behavior responsive to the keeping environment, the electronic pet, displayed by animation, can be virtually kept. In addition, the electronic pet can select one of the preset illustrative sentences in keeping with the agent data to send the selected sentence as an E-mail to the user or to his or her E-mailing counterpart. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> By exchanging the E-mail by the electronic pet virtually kept on the GUI picture simulating the insides of both the sender&apos;s room and the receiver&apos;s room, both the sender and the receiver can have a common consciousness of keeping pets thus assuring E-mailing amicable feeling. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Moreover, by having agent picture data on both the user&apos;s computer and the receiver&apos;s computer, and by actually sending agent parameters controlling the agent&apos;s behavior, the result as if the picture data of the agent were being sent is realized. By sending the agent parameters instead of the picture data, the user connection time can be reduced, such that, for a dial-up user, Internet connection charges and telephone charges can be saved. Moreover, the use of resources of the Internet in their entirety can also be reduced because a smaller volume of exchanged data suffices. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Additional features and advantages of the present invention are described in, and will be apparent from, the following Detailed Description of the Invention and the Figures.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE FIGURES </heading>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a display example of the GUI picture of Magic Capt&reg;. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a schematic block diagram showing an E-mail system according to the present invention. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows a GUI picture of &lsquo;PostPet (Room)&rsquo; displayed on starting a mailer installed on a personal computer with the E-mail system. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows the type of a PostPet prepared in the mailer. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows a GUI picture &lsquo;Write a Mail&rsquo; represented on the mailer. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows a GUI picture of a &lsquo;reception list&rsquo; represented on the mailer. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows the structure of an E-mail sent by the PostPet. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows the type of an agent parameter annexed to the main text of an E-mail sent by the PostPet. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows an example of an agent parameter annexed to the main text of an E-mail sent by the PostPet. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a flowchart showing the entire processing function of the mailer. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a flowchart showing the contents of send processing by the mailer. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a flowchart showing the contents of receive processing by the mailer. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a flowchart showing the contents of update processing for the agent parameter by the mailer. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> shows the state of instructing mail sending by a postman in the GUI picture &lsquo;Write a Mail&rsquo; represented by the mailer. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> shows the state of the GUI picture &lsquo;PostPet (Room)&rsquo; in case mail send procedure is commanded by a postman. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> similarly shows the state of the GUI picture &lsquo;PostPet (Room)&rsquo; in case mail send procedure is commanded by the postman. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> similarly shows the state of the GUI picture &lsquo;PostPet (Room)&rsquo; in case mail send procedure is commanded by the postman. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> similarly shows the state of the GUI picture &lsquo;PostPet (Room)&rsquo; in case mail send procedure is commanded by the postman. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> similarly shows the state of the GUI picture &lsquo;PostPet (Room)&rsquo; in case mail send procedure is commanded by the postman. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> shows the state of commanding mail send procedure by the PostPet on the GUI picture &lsquo;Write a Mail&rsquo; represented by the mailer. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> shows the state of a GUI picture of &lsquo;PostPet (Room)&rsquo; when mail send procedure is commanded by a post pet. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> similarly shows the state of a GUI picture of &lsquo;PostPet (Room)&rsquo; when mail send procedure is commanded by the post pet. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> similarly shows the state of a GUI picture of &lsquo;PostPet (Room)&rsquo; when mail send procedure is commanded by the post pet. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> similarly shows the state of a GUI picture of &lsquo;PostPet (Room)&rsquo; when mail send procedure is commanded by the post pet. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> shows the state of a GUI picture of &lsquo;PostPet (Room)&rsquo; when an E-mail is received by the post pet. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> similarly shows the state of a GUI picture of &lsquo;PostPet (Room)&rsquo; when an E-mail is received by the post pet. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 27</cross-reference> similarly shows the state of a GLCU picture of &lsquo;PostPet (Room)&rsquo; when an E-mail is received by the post pet. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28</cross-reference> similarly shows the state of a GUI picture of &lsquo;PostPet (Room)&rsquo; when an E-mail is received by the post pet. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29</cross-reference> shows the state of a GUI picture of &lsquo;PostPet (Room)&rsquo; when the mail has been sent by the post pet and the post pet has returned. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 30</cross-reference> similarly shows the state of a GUI picture of &lsquo;PostPet (Room)&rsquo; when the mail has been sent by the post pet and the post pet has returned. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 31</cross-reference> similarly shows the state of a GUI picture of &lsquo;PostPet (Room)&rsquo; when the mail has been sent by the post pet and the post pet has returned. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 32</cross-reference> shows the state of clicking an icon commanding looking after a post pet on the GUI picture of the &lsquo;PostPet (Room).&rsquo;</paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33</cross-reference> shows the state of clicking an icon commanding looking after the post pet on the GUI picture of the &lsquo;PostPet (Room)&rsquo; for opening a pulldown menu. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 34</cross-reference> shows the state in which an item &lsquo;refreshment&rsquo; of the pulldown menu on the GUI picture of the &lsquo;PostPet (Room)&rsquo; is selected for opening the window. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 35</cross-reference> shows the state of clicking a button &lsquo;served&rsquo; on a window opened on selecting &lsquo;refreshment&rsquo; on the pull-down menu on the GUI picture of the &lsquo;PostPet (Room).&rsquo;</paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 36</cross-reference> shows the state in which an item &lsquo;Wash&rsquo; of the pulldown menu on the GUI picture of the &lsquo;PostPet (Room)&rsquo; has been selected. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 37</cross-reference> shows the state in which the post pet on the pull-down menu on the GUI picture of the &lsquo;PostPet (Room)&rsquo; is contaminated. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 38</cross-reference> shows the state in which an item &lsquo;Re-Ordering&rsquo; of the pulldown menu on the GUI picture of the &lsquo;PostPet (Room)&rsquo; is selected. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 39</cross-reference> shows the GUI picture of the &lsquo;PostPet (Room)&rsquo; when the re-ordering is executed. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 40</cross-reference> shows the state in which an item &lsquo;State of Pet&rsquo; of the pulldown menu on the GUI picture of the &lsquo;PostPet (Room)&rsquo; is selected. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 41</cross-reference> shows the display state of a pointing cursor positioned outside of a room on the GUI picture of the &lsquo;PostPet (Room).&rsquo;</paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 42</cross-reference> shows the display state of a pointing cursor positioned within a room on the GUI picture of the &lsquo;PostPet (Room).&rsquo;</paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 43</cross-reference> shows the state of caressing the post pet on the GUI picture of the &lsquo;PostPet (Room).&rsquo;</paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 44</cross-reference> shows the state of caressing the post pet on the GUI picture of the &lsquo;PostPet (Room).&rsquo;</paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 45</cross-reference> shows the state of caressing the post pet on the GUI picture of the &lsquo;PostPet (Room).&rsquo;</paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 46</cross-reference> shows the state of hitting the post pet on the GUI picture of the &lsquo;PostPet (Room).&rsquo;</paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 47</cross-reference> is a timing chart showing the sequence of E-mail exchange in a state in which two personal computers each having installed therein the mailer are connected concurrently to the communication network. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 48</cross-reference> is a timing chart showing the sequence of E-mail exchange in a state in which two personal computers each having installed therein the mailer are connected with a time offset to the communication network. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 49</cross-reference> is a flowchart showing event processing of a feeling unit which governs the behavior of the post pet. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 50</cross-reference> illustrates the technique of determining the behavior of a post pet by an agent parameter. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 51</cross-reference> shows the basic structure of the feeling unit. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 52</cross-reference> schematically shows sending a mail A form a user A to another user B by the post pet. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 53</cross-reference> schematically shows capturing the mail A by the user B. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 54</cross-reference> schematically shows automatic mail returning of an agent parameter by the user B. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 55</cross-reference> schematically shows reception of an agent parameter automatically returned from the user B. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 56</cross-reference> shows a GUI picture for selecting the post pet. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 57</cross-reference> shows a GUI picture of the &lsquo;PostPet (Room)&rsquo; in which Hatena-kun made debut.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the present invention is applied to an electronic mail (E-mail) system in which an E-mail is exchanged between plural personal computers <highlight><bold>21</bold></highlight>, <highlight><bold>22</bold></highlight> connected respectively to Internet <highlight><bold>10</bold></highlight> via public telephone switched networks <highlight><bold>1</bold></highlight>, <highlight><bold>2</bold></highlight> and via Internet service providers <highlight><bold>11</bold></highlight>, <highlight><bold>12</bold></highlight>. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> The Internet service provider <highlight><bold>11</bold></highlight> is constituted by a router <highlight><bold>11</bold></highlight> A, a communication server <highlight><bold>11</bold></highlight> C and a mail server <highlight><bold>11</bold></highlight> D interconnected by Local Area Network (LAN) <highlight><bold>11</bold></highlight> B. There is provided in the mail server <highlight><bold>11</bold></highlight>D a mail spool <highlight><bold>11</bold></highlight>E constituted by a hard disc drive for transient storage of the E-mail. The communication server <highlight><bold>11</bold></highlight>C includes a modem <highlight><bold>11</bold></highlight>F for connection over a public telephone switched network <highlight><bold>1</bold></highlight> to the personal computer <highlight><bold>21</bold></highlight>. The Internet service provider <highlight><bold>11</bold></highlight> transfers the E-mail, sent from a personal computer <highlight><bold>21</bold></highlight> of a client user connected by dial-up IP over the public telephone switched network <highlight><bold>1</bold></highlight> to the communication server <highlight><bold>11</bold></highlight>C, to a mail server <highlight><bold>11</bold></highlight> D, which then transfers this transferred E-mail over the Internet <highlight><bold>10</bold></highlight> to a mail server (not shown) of an Internet service provider <highlight><bold>12</bold></highlight> of the domain to which the receiver (counterpart of communication) belongs. When an E-mail addressed to a client user over the Internet <highlight><bold>10</bold></highlight> is transferred to the Internet service provider <highlight><bold>11</bold></highlight>, the latter stores the mail in a mail spool <highlight><bold>11</bold></highlight>E to transfer the mail to the client user whenever a transfer request is made from the valid client user. Meanwhile, other Internet service providers <highlight><bold>12</bold></highlight>, etc., also have E-mail storage and transferring function similar to that of the Internet service provider <highlight><bold>11</bold></highlight>. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> The personal computer <highlight><bold>21</bold></highlight> of the client user of the Internet service provider <highlight><bold>11</bold></highlight> includes a main body portion <highlight><bold>21</bold></highlight>A, a CRT display device <highlight><bold>21</bold></highlight>B, a keyboard <highlight><bold>21</bold></highlight>C and a mouse <highlight><bold>21</bold></highlight>D. The main body portion <highlight><bold>21</bold></highlight>A is provided with a central processing unit (CPU) <highlight><bold>21</bold></highlight><highlight><italic>a, </italic></highlight>a read-only memory (ROM) <highlight><bold>21</bold></highlight><highlight><italic>b, </italic></highlight>a random-access memory (RAM) <highlight><bold>21</bold></highlight><highlight><italic>c, </italic></highlight>a hard disc drive (HDD) <highlight><bold>21</bold></highlight><highlight><italic>d, </italic></highlight>a floppy-disc drive (FDD) <highlight><bold>21</bold></highlight><highlight><italic>e, </italic></highlight>a CD-ROM drive <highlight><bold>21</bold></highlight><highlight><italic>f, </italic></highlight>a cathode ray tube controller (CRTC) as a display controller <highlight><bold>21</bold></highlight><highlight><italic>g, </italic></highlight>a modem <highlight><bold>21</bold></highlight><highlight><italic>h, </italic></highlight>an interfacing (I/F) unit <highlight><bold>21</bold></highlight><highlight><italic>i </italic></highlight>and a video RAM <highlight><bold>21</bold></highlight><highlight><italic>j. </italic></highlight>The CRT display device <highlight><bold>21</bold></highlight>B is connected to the display controller <highlight><bold>21</bold></highlight><highlight><italic>g, </italic></highlight>while the keyboard <highlight><bold>21</bold></highlight>C and the mouse <highlight><bold>21</bold></highlight>D are connected to the interfacing unit <highlight><bold>21</bold></highlight><highlight><italic>i. </italic></highlight></paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> The personal computer <highlight><bold>21</bold></highlight> is connected via the main body portion <highlight><bold>21</bold></highlight>A to the public telephone switched network <highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> The personal computer <highlight><bold>21</bold></highlight> operates as a mailer by reading out and installing an E-mail sending/receiving program stored in the CD-ROM drive <highlight><bold>21</bold></highlight>E. Meanwhile, the E-mail sending/receiving program may also be downloaded and installed from, for example, the following URL http://www.sonet.or.p./postpst/index.html of a World Wide Web (WWW) server on the Internet <highlight><bold>10</bold></highlight> managed by SONY COMMUNICATION NETWORK KK over the Internet service provider <highlight><bold>11</bold></highlight> and the public telephone switched network <highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> Therefore, the program purveying medium within the scope of the present invention means not only the recording medium such as CD-ROM <highlight><bold>21</bold></highlight>E but also a medium in the broad sense of the term including Internet or digital satellite data broadcast. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> In the present embodiment, other personal computers <highlight><bold>22</bold></highlight> also operate as a mailer by having installed therein the same E-mail sending/receiving programs as the above personal computer <highlight><bold>21</bold></highlight>. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> If, in the personal computer <highlight><bold>21</bold></highlight> having installed therein the above-mentioned E-mail sending/receiving program, the mailer is started, the CPU <highlight><bold>21</bold></highlight> a generates bit map data corresponding to the graphical user interface (GUI) picture simulating a room to write the bit map data on the video RAM <highlight><bold>21</bold></highlight><highlight><italic>j </italic></highlight>of the display controller <highlight><bold>21</bold></highlight><highlight><italic>g </italic></highlight>for causing the display controller <highlight><bold>21</bold></highlight><highlight><italic>g </italic></highlight>to display the GUI picture <highlight><bold>100</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> on the screen of the display device <highlight><bold>21</bold></highlight>B. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> For superposed display of a pointing cursor <highlight><bold>101</bold></highlight> on the GUI picture <highlight><bold>100</bold></highlight>, the CPU <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>writes the bit map data of the pointing cursor <highlight><bold>101</bold></highlight> at a preset position of the video RAM <highlight><bold>21</bold></highlight><highlight><italic>j. </italic></highlight>This displays the pointing cursor <highlight><bold>101</bold></highlight> at a position specified by the mouse <highlight><bold>21</bold></highlight>D on the GUI picture <highlight><bold>100</bold></highlight> displayed on the screen of the display device <highlight><bold>21</bold></highlight>B. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> On the top of the GUI picture <highlight><bold>100</bold></highlight>, its title <highlight><bold>102</bold></highlight> is displayed. On the GUI picture <highlight><bold>100</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is displayed &lsquo;PostPet (Room)&rsquo; as a title <highlight><bold>102</bold></highlight>. Meanwhile, the post pet and the post pet are trademarks of a mailer which is an Internet E-mail sending/receiving program purveyed by SONY COMMUNICATION NETWORK KK. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> For superposed display on the GUI picture <highlight><bold>100</bold></highlight> of a post pet <highlight><bold>103</bold></highlight> simulating a bear doll and a postman <highlight><bold>104</bold></highlight> simulating a robot doll as agents for performing E-mail sending/reception, the CPU <highlight><bold>21</bold></highlight><highlight><italic>e </italic></highlight>writes bit map data of the post pet <highlight><bold>103</bold></highlight> and the postman <highlight><bold>104</bold></highlight> at preset positions on the RAM <highlight><bold>21</bold></highlight><highlight><italic>j </italic></highlight>in superposition on the bit map data corresponding to the GUI picture <highlight><bold>100</bold></highlight>. This displays the post pet <highlight><bold>103</bold></highlight> and the postman <highlight><bold>104</bold></highlight> on the GUI screen <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> As characters of the post pet <highlight><bold>103</bold></highlight>, there are provided teddy bear (Momo) <highlight><bold>103</bold></highlight> simulating a bear, a tortoise (Sumiko) <highlight><bold>103</bold></highlight>B, a hybrid cat (Furo) <highlight><bold>103</bold></highlight>C, a mini-rabbit (Mippi) <highlight><bold>103</bold></highlight>D and a Hatena-kun <highlight><bold>103</bold></highlight>E, as shown, for example in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. One of these excluding Hatena-kun <highlight><bold>103</bold></highlight>E can be registered and used as the post pet <highlight><bold>103</bold></highlight>, as an agent. The post pet <highlight><bold>103</bold></highlight> has its behavior determined by agent parameters varied by the learning function as later explained. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> On the left-side portion of the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo; shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> are displayed a mail writing icon <highlight><bold>105</bold></highlight>A, a reception list icon <highlight><bold>105</bold></highlight>B, a sending list icon <highlight><bold>105</bold></highlight>C for commanding display of a GUI picture of a sending list and a mail check icon <highlight><bold>105</bold></highlight>D for commanding the connection. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> The user operates the mouse <highlight><bold>21</bold></highlight>D for moving the pointing cursor <highlight><bold>101</bold></highlight> on the mail writing icon <highlight><bold>105</bold></highlight>A on the GUI picture of the above-mentioned &lsquo;PostPet (Room)&rsquo; to click the mail writing icon <highlight><bold>105</bold></highlight>A. This causes the CPU <highlight><bold>21</bold></highlight>a to write the bit map data, corresponding to the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo; and a &lsquo;Write a Mail&rsquo; GUI picture <highlight><bold>110</bold></highlight> superposed thereon, at a preset position on the video RAM <highlight><bold>21</bold></highlight><highlight><italic>j, </italic></highlight>such that the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo; and the &lsquo;Write a Mail&rsquo; GUI picture <highlight><bold>110</bold></highlight> are displayed by multiple window representation on the screen of the display device <highlight><bold>21</bold></highlight>B. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> On top of the GUI picture <highlight><bold>110</bold></highlight> is displayed &lsquo;Write a Mail&rsquo; as a title <highlight><bold>112</bold></highlight>. The upper and lower halves of the &lsquo;Write a Mail&rsquo; GUI picture <highlight><bold>110</bold></highlight> represent a first display area <highlight><bold>113</bold></highlight> for displaying the contents of the mail header and a second display area <highlight><bold>114</bold></highlight> for displaying the mail contents, respectively. In the first display area <highlight><bold>113</bold></highlight>, there is displayed the header information, such as the address &lsqb;To:&rsqb;, name of mail sender &lsqb;From:&rsqb;, title &lsqb;Subject:&rsqb;, carbon copy &lsqb;Color conversion:&rsqb; or attachment &lsqb;Attachment:&rsqb;, entered by actuation of the keyboard <highlight><bold>2</bold></highlight> <highlight><bold>1</bold></highlight> C by the user are displayed. In the first display area <highlight><bold>113</bold></highlight>, an icon <highlight><bold>115</bold></highlight>A is displayed for handing over to a pet for instructing mail dispatch by the post pet <highlight><bold>103</bold></highlight> and an icon <highlight><bold>115</bold></highlight>B for handing over to the postman <highlight><bold>104</bold></highlight> for instructing mail dispatch by the postman <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> In the second display area <highlight><bold>114</bold></highlight> is displayed the main text of the mail entered upon keyboard actuation by the user. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> If the user actuates the mouse <highlight><bold>21</bold></highlight>D to shift the pointing cursor <highlight><bold>101</bold></highlight> over the icon <highlight><bold>115</bold></highlight>A of handing over to the pet on the GUI picture <highlight><bold>110</bold></highlight> of &lsquo;Writing a Mail&rsquo; and clicks a mouse button, the CPU <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>executes processing steps SP<highlight><bold>20</bold></highlight> to SP<highlight><bold>27</bold></highlight> of the send subroutine processing to send the pet mail, as will be explained below with reference to <cross-reference target="DRAWINGS">FIG. 11e</cross-reference>. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> Specifically, the CPU <highlight><bold>21</bold></highlight> a formulates data of an E-mail composed of a main text <highlight><bold>202</bold></highlight> with a mail header <highlight><bold>201</bold></highlight> added thereto and an agent parameter <highlight><bold>203</bold></highlight> determining the behavior of the post pet <highlight><bold>103</bold></highlight> attached to the main text, and sends the data as pet mail to the receiver. The agent parameter <highlight><bold>203</bold></highlight> is each made up of 4-byte data of the sending data information <highlight><bold>203</bold></highlight>A specifying the mail sending date, mail life information <highlight><bold>203</bold></highlight>B specifying whether or not the receiver has to modify the mail to return it to the sender, serial number information <highlight><bold>203</bold></highlight>C specifying the number of mails handled so far by the post pet, and the post pet parameter information <highlight><bold>203</bold></highlight>D, such as the information of the environment, stimulus or desire information of the post pet. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> The post pet parameter information <highlight><bold>203</bold></highlight>D is made up of the inner information and the outer information, as shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. The inner information is made up of, for example, mail count, age, sex, intelligence, vigor, friendship (with the keeper), hunger, happiness, cleanliness, bio-rhythm (indefinite element), noise (indefinite element), friendship (with the counterpart), positiveness/negativeness (&plus;/&minus;), cheerfulness/gloominess (&plus;/&minus;), gentleness/coldness (&plus;/&minus;), concentration/diffuseness (&plus;/&minus;), fashionability/rusticity, fashionability, attractiveness or taste for gourmet. The outer parameters are made up of, for example, position, comfortableness of a room, user action-number of times of hitting, guest action-called, guest action-shown friendship, guest action-shown hostility, guest action-giving items and guest action-demanding items. These parameters are entered into the feeling unit as later explained to start the behavior unit to determine the behavior of the post pet <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> The above-mentioned agent parameters <highlight><bold>203</bold></highlight> are converted into Base <highlight><bold>64</bold></highlight> format employing letters A to Z, a to z and 0 to 9 in accordance with the Multipurpose Internet Mail Extension (MIME) of the Internet mail. <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows an example of the agent parameters <highlight><bold>203</bold></highlight> annexed to the main text of the mail <highlight><bold>202</bold></highlight>. The MIME provides two types of encoding methods. In the Base <highlight><bold>64</bold></highlight> stated in Request for Comments (RFC) <highlight><bold>1512</bold></highlight>, 3 bytes are divided into four equal parts to narrow the code width to accommodate the values specified by the bytes in 64 numerical figures of from 0 to 63 to which letter codes of A to Z, a to z and 0 to 9 are accorded. Further details on RFC is disclosed in D. Comer, &ldquo;Internet working with ICP/IP TCP/IP-470154-2, 025. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> If the user actuates the mouse <highlight><bold>21</bold></highlight>D to move the pointing cursor <highlight><bold>101</bold></highlight> on the icon <highlight><bold>115</bold></highlight>B of handing over the GUI picture <highlight><bold>110</bold></highlight> of &lsquo;Writing a Mail&rsquo; to the postman to click the mouse button, the CPU <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>executes the processing from SP<highlight><bold>29</bold></highlight> to SP<highlight><bold>33</bold></highlight> in the sending subroutine processing as later explained with reference to <cross-reference target="DRAWINGS">FIG. 10</cross-reference> in order to send the usual mail. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> That is, the CPU <highlight><bold>21</bold></highlight> a simply formulates data of an E-mail made up of the main text <highlight><bold>202</bold></highlight> of the mail added to with the mail header <highlight><bold>201</bold></highlight> and sends it to the counterpart as the usual E-mail. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> Referring to FIGS. <highlight><bold>9</bold></highlight> to <highlight><bold>12</bold></highlight>, the operation of the personal computer <highlight><bold>21</bold></highlight> having installed therein the above-mentioned E-mail sending/receiving program, is hereinafter explained. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> First, steps SP <highlight><bold>1</bold></highlight> to SP <highlight><bold>13</bold></highlight> of the general flowchart, comprehensively showing the entire operation of <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, is explained. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> At step SP <highlight><bold>1</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, it is determined whether the operation by the user is the operation on a pet owned by no one other than the user. That is, if the mouse <highlight><bold>21</bold></highlight>D is actuated by the user such that the operation of superposing the pointing cursor <highlight><bold>101</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> on the post pet <highlight><bold>103</bold></highlight> (on the teddy-bear <highlight><bold>103</bold></highlight>A in the case of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>), shifting the mouse <highlight><bold>21</bold></highlight>D left or right or clicking the mouse button is carried out, or, if &lsquo;wash&rsquo; or &lsquo;refreshments&rsquo; are selected from the looking-after pulldown menu, as shown in <cross-reference target="DRAWINGS">FIG. 34</cross-reference>, such that the operation of looking after the post pet <highlight><bold>103</bold></highlight> is carried out, these operations by the user are judged to be the operation for his or her own pet (the pet owned by the user). In this case, the processing transfers to step SP<highlight><bold>2</bold></highlight>, otherwise, the processing transfers to step SP<highlight><bold>4</bold></highlight>. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> At step SP<highlight><bold>2</bold></highlight>, the agent parameters of the user&apos;s own pet, read out on startup of the E-mail sending/receiving program from HDD <highlight><bold>21</bold></highlight><highlight><italic>d </italic></highlight>and stored in RAM <highlight><bold>21</bold></highlight><highlight><italic>c, </italic></highlight>are updated. The processing for updating the agent parameters will be explained later in detail with reference to <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> At the next step SP<highlight><bold>3</bold></highlight>, the processing for animated representation of the behavior of the user&apos;s own pet in association with the updated agent parameters is executed before processing reverts to step SP<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> If, at step SP<highlight><bold>1</bold></highlight>, the operations are judged as not being the operations on the user&apos;s own pet such that the processing transfers to step SP<highlight><bold>4</bold></highlight>, it is determined at this step SP<highlight><bold>4</bold></highlight> whether the mail writing icon <highlight><bold>105</bold></highlight>A has been clicked. If the result of the determination at step SP<highlight><bold>4</bold></highlight> is affirmative, processing transfers to step SP<highlight><bold>5</bold></highlight>, and, otherwise, to step SP<highlight><bold>7</bold></highlight>. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> At step SP<highlight><bold>5</bold></highlight>, the sub-routine of entering the header of the E-mail to be sent or the main text is executed. First, the GUI picture <highlight><bold>110</bold></highlight> of &lsquo;Writing a Mail&rsquo; shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is displayed, after which the E-mail header or the main text is formulated in accordance with the text inputting command by the user before processing transfers to step SP<highlight><bold>6</bold></highlight>. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> At step SP<highlight><bold>6</bold></highlight>, the sending subroutine explained subsequently with reference to <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is executed before processing reverts to step SP <highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> At step SP<highlight><bold>7</bold></highlight>, it is determined whether the reception list icon <highlight><bold>105</bold></highlight>B has been clicked. If the result of the determination is affirmative, processing transfers to step SP<highlight><bold>8</bold></highlight>, or otherwise, to step SP<highlight><bold>9</bold></highlight>. At step SP<highlight><bold>8</bold></highlight>, the reception list display subroutine for displaying a GUI picture <highlight><bold>120</bold></highlight> of the &lsquo;reception list&rsquo; shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is executed before processing reverts to step SP <highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> At step SP<highlight><bold>9</bold></highlight>, it is determined whether or not the sending list <highlight><bold>105</bold></highlight>C has been clicked. If the result of the determination is affirmative, the processing transfers to step SP<highlight><bold>10</bold></highlight>, or otherwise, to step SP<highlight><bold>11</bold></highlight>. At step SP<highlight><bold>10</bold></highlight>, the reception list displaying subroutine for displaying the &lsquo;sending list&rsquo; GUI picture (not shown) is executed, before processing reverts to step SP<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> At step SP<highlight><bold>11</bold></highlight>, it is determined whether the mail check icon <highlight><bold>105</bold></highlight>D has been clicked. If the result of the determination is affirmative, processing transfers to step SP<highlight><bold>12</bold></highlight>, or otherwise, to step SP<highlight><bold>13</bold></highlight>. At step SP <highlight><bold>12</bold></highlight>, the reception subroutine explained subsequently with reference to <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is executed before processing reverts to step SP<highlight><bold>1</bold></highlight>. At step SP<highlight><bold>13</bold></highlight>, other processing operations are executed before processing reverts to step SP<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> Next, the steps SP<highlight><bold>20</bold></highlight> to SP<highlight><bold>33</bold></highlight> of the flowchart of the sending subroutine processing of <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is explained. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> If the user actuates the mouse <highlight><bold>21</bold></highlight>D to move the pointing cursor <highlight><bold>101</bold></highlight> on the icon <highlight><bold>115</bold></highlight>A of handing over to the pet on the GUI picture <highlight><bold>110</bold></highlight> of &lsquo;Write a Mail&rsquo; and clicks the mouse button, as shown in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>, it is determined that the icon <highlight><bold>115</bold></highlight>A of handing over to the pet has been operated, such that processing transfers from step SP<highlight><bold>20</bold></highlight> to step SP<highlight><bold>21</bold></highlight> to determine whether a pet-at-home flag stored in the RAM <highlight><bold>21</bold></highlight><highlight><italic>c </italic></highlight>is &lsquo;1&rsquo;. If the user&apos;s pet is at home, that is, if the pet-at-home flag is &lsquo;1&rsquo;, the subsequent steps SP<highlight><bold>22</bold></highlight> to SP<highlight><bold>27</bold></highlight> are executed to send the pet mail. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> In other words, E-mail data composed of the mail main text <highlight><bold>202</bold></highlight> with the mail header <highlight><bold>201</bold></highlight> appended thereto and the agent parameters <highlight><bold>203</bold></highlight> determining the behavior of the post pet S<highlight><bold>103</bold></highlight>, appended as annexed papers, is formulated and sent as a pet mail to a counterpart of communication. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> In this case, the pet mail can be sent only when the pet-at-home flag is &lsquo;1&rsquo;, that is if the user&apos;s pet is at home. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> First, if a connection is made at step SP<highlight><bold>22</bold></highlight> to the mail server <highlight><bold>11</bold></highlight>D of the service provider <highlight><bold>11</bold></highlight> for requesting mail transfer in accordance with the transfer protocol of the Simple Mail Transfer Protocol (SMTP), and connection is judged at the next step SP<highlight><bold>23</bold></highlight> to have been made, the processing transfers to step SP<highlight><bold>24</bold></highlight>. At this step SP<highlight><bold>24</bold></highlight>, the user&apos;s own pet (teddy-bear <highlight><bold>103</bold></highlight>A shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>) deems the E-mail of the keeper as being a letter, and animation display is made such that the pet opens a door <highlight><bold>107</bold></highlight> for outing for recovering the letter posted in a mail post <highlight><bold>106</bold></highlight> for delivery to the receiver. At the next step SP<highlight><bold>25</bold></highlight>, the agent parameters of the user&apos;s pet, stored in the RAM <highlight><bold>21</bold></highlight>C, is encoded by the encoding method prescribed in Base <highlight><bold>64</bold></highlight> of MIME. At the next step SP<highlight><bold>26</bold></highlight>, the encoded agent parameters are annexed to the main text <highlight><bold>202</bold></highlight> as annexed papers. This pet mail is sent to the mail server <highlight><bold>11</bold></highlight>D. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> At step SP<highlight><bold>27</bold></highlight>, the pet-at-home flag stored in the RAM <highlight><bold>21</bold></highlight><highlight><italic>c, </italic></highlight>is set to &lsquo;0&rsquo;, that is, to absence, before processing transfers to step SP<highlight><bold>28</bold></highlight> to break the connection to the mail server <highlight><bold>11</bold></highlight>D) to complete a series of the sending subroutine processing. Then, the processing reverts to step SP<highlight><bold>1</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10</cross-reference>. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> On the other hand, if the user operates the mouse <highlight><bold>21</bold></highlight>D to move the pointing cursor <highlight><bold>101</bold></highlight> on the icon <highlight><bold>115</bold></highlight><highlight><italic>b </italic></highlight>of handing over to the postman on the GUI picture <highlight><bold>110</bold></highlight> of &lsquo;Write a Mail&rsquo; to click the mouse button, it is judged that the icon <highlight><bold>115</bold></highlight>B of handing over to the postman has been actuated. Thus, the processing transfers from step SP<highlight><bold>20</bold></highlight> through step SP<highlight><bold>29</bold></highlight> to step SP<highlight><bold>30</bold></highlight> so that the processing from steps SP<highlight><bold>30</bold></highlight> to SP<highlight><bold>33</bold></highlight> is executed to send the usual E-mail. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> That is, E-mail data composed simply of the mail main text <highlight><bold>202</bold></highlight> having appended thereto the mail header <highlight><bold>201</bold></highlight> is formulated and sent to the counterpart as the usual E-mail. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> First, at step SP<highlight><bold>30</bold></highlight>, a connection is made to the mail server <highlight><bold>11</bold></highlight>D of the service provider <highlight><bold>11</bold></highlight> for requesting a mail transfer based on the SMTP transfer protocol. If, at the next step SP<highlight><bold>31</bold></highlight>, the connection is judged to have been completed, the processing transfers to step SP<highlight><bold>32</bold></highlight> to display an animation in which the postman <highlight><bold>104</bold></highlight> deems the E-mail of the keeper as being a letter to recover the letter posted in the mail post <highlight><bold>106</bold></highlight> to go out for mail delivery, as shown in FIGS. <highlight><bold>15</bold></highlight> to <highlight><bold>19</bold></highlight>. At the next step SP<highlight><bold>33</bold></highlight>, the usual E-mail is sent to the mail server <highlight><bold>11</bold></highlight>D), after which, the processing transfers to step SP<highlight><bold>28</bold></highlight> to cancel the connection to the mail server <highlight><bold>11</bold></highlight>D to complete a series of the send subroutine operations to return to the step SP<highlight><bold>1</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10</cross-reference>. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> If neither the icon <highlight><bold>115</bold></highlight>A for handing over to the pet nor the icon <highlight><bold>115</bold></highlight>B of handing over to the postman has been operated at steps SP<highlight><bold>20</bold></highlight> and SP<highlight><bold>29</bold></highlight>, with the closure box on the upper right side of the GUTI picture <highlight><bold>110</bold></highlight> of &lsquo;Write a Mail&rsquo; being clicked, the mail writing window is judged at step SP<highlight><bold>34</bold></highlight> to be closed, such that processing reverts to step SP<highlight><bold>1</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10</cross-reference> without executing the above-mentioned sending subroutine. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> Next, steps SP<highlight><bold>40</bold></highlight> to SP<highlight><bold>59</bold></highlight> of the reception subroutine of <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is explained. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> First, at step SP<highlight><bold>40</bold></highlight>, connection is made to the mail server <highlight><bold>11</bold></highlight>D of the service provider <highlight><bold>11</bold></highlight>, based on the communication protocol of the Post Office Protocol Version 3 (POP3) which is the upper order protocol of TCP/IP. If the connection has been judged at the next step SP<highlight><bold>41</bold></highlight> to have been completed, the processing transfers to step SP<highlight><bold>42</bold></highlight> to make an inquiry as to whether there is a mail addressed to the user in a mail drop of the mail server <highlight><bold>11</bold></highlight>D. This personal mail directory is an area for arriving mail for personal use, usually termed a mail drop, and has the function similar to a private box of a post office. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> If it is judged at step SP<highlight><bold>42</bold></highlight> that there is an arriving mail, the processing transfers to step SP<highlight><bold>43</bold></highlight>. If it is judged that there is no arriving mail, the processing transfers to step SP<highlight><bold>50</bold></highlight> to cancel the connection to the mail server <highlight><bold>11</bold></highlight>D to terminate a series of the reception subroutine operations before the processing reverts to step SP<highlight><bold>1</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10</cross-reference>. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> If it is determined at step SP<highlight><bold>42</bold></highlight> that there is an arriving mail in the mail drop, the E-mail addressed to the user is received at step SP<highlight><bold>43</bold></highlight> from the mail server <highlight><bold>11</bold></highlight>D. At the next step SP<highlight><bold>44</bold></highlight>, it is determined, based on data of the mail header <highlight><bold>201</bold></highlight> of the E-mail addressed to the user, whether the E-mail is the pet mail. If the received E-mail is judged at step SP<highlight><bold>44</bold></highlight> to be the pet mail, the processing transfers to step SP<highlight><bold>45</bold></highlight> to determine whether the mail received is the return mail to the pet mail dispatched by the user. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> If the pet mail sent by the user is automatically reception processed by the receiver, the mail text <highlight><bold>202</bold></highlight> is deleted and a part of the sent pet mail composed of the mail header <highlight><bold>201</bold></highlight> and the agent parameters annexed thereto as the annexed papers is returned as the return mail. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> If the received pet mail is judged at step SP<highlight><bold>45</bold></highlight> to be the return mail to the pet mail dispatched by the user, the processing transfers to step SP<highlight><bold>46</bold></highlight> to set the pet-at-home flag stored in the RAM <highlight><bold>21</bold></highlight><highlight><italic>c </italic></highlight>to &lsquo;1&rsquo;, that is to &lsquo;at home&rsquo;, before the processing transfers to step SP<highlight><bold>47</bold></highlight> to decode the annexed papers encoded by the encoding method prescribed by the Base <highlight><bold>64</bold></highlight> of MIME. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> At the next step SP<highlight><bold>48</bold></highlight>, the agent parameters of the user&apos;s pet stored in the RAM <highlight><bold>21</bold></highlight><highlight><italic>c </italic></highlight>are updated based on the decoded agent parameters. At the next step SP<highlight><bold>49</bold></highlight>, the processing of displaying an animation in which the user&apos;s pet opens the door to return home with the behavior corresponding to the updated agent parameters is executed. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> Then, the processing transfers to step SP<highlight><bold>50</bold></highlight> to cancel the connection to the mail server <highlight><bold>111</bold></highlight>) to complete a series of reception subroutine operations before the processing reverts to step SP<highlight><bold>1</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10</cross-reference>. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> Conversely, if it is judged at step SP<highlight><bold>45</bold></highlight> that the received pet mail is not the return mail to the user&apos;s pet mail, the processing transfers to step SP<highlight><bold>51</bold></highlight> to execute the updating processing accompanying the addition of newly arriving mail to the Table-of-Contents (TOC) file. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> The TOC file is a reception list file stored on a client&apos;s local disc (HDD <highlight><bold>21</bold></highlight><highlight><italic>d</italic></highlight>), and is a file composed of an extracted portion of the mail header <highlight><bold>201</bold></highlight>. Specifically, the TOC file is made up of TO, FROM, CC, Subject, priorities, attachment flags indicating the presence or absence of the annexed papers, sort flags indicating whether the mail is a pet mail, and addresses in the local disc of the mail main text <highlight><bold>202</bold></highlight> corresponding to the mail header <highlight><bold>201</bold></highlight>. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> When the reception list is first opened, a list of received mails is displayed. This list is formulated from the TOC file. If a mail is designated from the list, the main text <highlight><bold>202</bold></highlight> of the corresponding address is sliced from the mail file (collective file of the main texts of the mail <highlight><bold>202</bold></highlight>). </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> For example, if the TOC file reads: FROM: aaaaaaipd.sony.co jp, Subject:Patent for POS:Petp . . . Address (from <highlight><bold>1100</bold></highlight> to <highlight><bold>1120</bold></highlight>), and the main text of the mail <highlight><bold>202</bold></highlight> is to be displayed, the text corresponding to addresses <highlight><bold>1100</bold></highlight> to <highlight><bold>1120</bold></highlight> of the mail file is sliced and displayed. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> Next, at step SP<highlight><bold>52</bold></highlight>, the update processing accompanying the addition of newly arriving mail of the mail file is executed. After updating the mail file having stored therein the main text <highlight><bold>202</bold></highlight>, processing transfers to step SP<highlight><bold>53</bold></highlight> to decode the annexed papers encoded by the encoding method prescribed by the Base <highlight><bold>64</bold></highlight> of MIME. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> At the next step SP<highlight><bold>54</bold></highlight>, the processing of displaying the animation in which the pet of the counterpart of communication (teddy-bear <highlight><bold>103</bold></highlight>A in FIGS. <highlight><bold>25</bold></highlight> to <highlight><bold>28</bold></highlight>) opens the door <highlight><bold>107</bold></highlight> to make a call and stays for a preset time to then open the door to return home. If, during the time the counterpart pet stays indoors, the user operates the mouse <highlight><bold>21</bold></highlight>D to superpose the pointing cursor <highlight><bold>101</bold></highlight> over the counterpart pet to move the mouse <highlight><bold>21</bold></highlight>D left and right or to click the mouse button, the agent parameters of the counterpart pet are updated at step SP<highlight><bold>55</bold></highlight> based on the actuation by the user. Next, at step SP<highlight><bold>56</bold></highlight>, the agent parameters of the counterpart pet are encoded by the encoding method prescribed by Base <highlight><bold>64</bold></highlight> of MIME. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> At the next step SP<highlight><bold>57</bold></highlight>, the encoded agent parameters are annexed as annexed papers to the mail header <highlight><bold>201</bold></highlight>. The pet mail, thus formulated, is automatically returned to the mail server <highlight><bold>11</bold></highlight>D). </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> Then, the processing transfers to step SP<highlight><bold>50</bold></highlight> to cancel the connection to the mail server <highlight><bold>11</bold></highlight>D to complete a series of the reception subroutine operations before the processing reverts to step SP<highlight><bold>1</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> If it is judged at step SP<highlight><bold>44</bold></highlight>, based on the data of the mail header <highlight><bold>201</bold></highlight> of the received E-mail addressed to the user, that the received E-mail is not the pet mail, but rather is a usual E-mail, the processing transfers to step SP<highlight><bold>58</bold></highlight> to update the TOC file. Then, the processing transfers to step SP<highlight><bold>50</bold></highlight> to cancel the connection to the mail server <highlight><bold>11</bold></highlight>D) to complete a series of the reception subroutine operations before processing reverts to step SP<highlight><bold>1</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> Next, steps SP<highlight><bold>60</bold></highlight> to SP<highlight><bold>97</bold></highlight> of the agent parameter updates processing shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference> are hereinafter explained. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> Referring to the flowchart of <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, the CPU <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>monitors at step SP<highlight><bold>60</bold></highlight> whether the pointing cursor <highlight><bold>101</bold></highlight> displayed on the screen of the display device <highlight><bold>21</bold></highlight>B has moved into a window area of &lsquo;PostPet (Room)&rsquo;. If the pointing cursor <highlight><bold>101</bold></highlight> is outside the window area of &lsquo;PostPet (Room)&rsquo;, pulldown menu processing or the like processing is executed at step SP<highlight><bold>61</bold></highlight>. If the pointing cursor <highlight><bold>101</bold></highlight> goes into the window area of &lsquo;PostPet (Room)&rsquo;, that is into the room, the pointing cursor <highlight><bold>101</bold></highlight> is changed at step SP<highlight><bold>62</bold></highlight> to an open hand shape. Thus, if the pointing cursor <highlight><bold>101</bold></highlight> is positioned outside the room on the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo;, as shown in <cross-reference target="DRAWINGS">FIG. 40</cross-reference>, the pointing cursor <highlight><bold>101</bold></highlight> is represented as an arrow, whereas, if it goes into the room, as shown in <cross-reference target="DRAWINGS">FIG. 41</cross-reference>, it is displayed in an open hand shape. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> The CPU <highlight><bold>21</bold></highlight> a determines at step SP<highlight><bold>63</bold></highlight> whether the pointing cursor <highlight><bold>101</bold></highlight> has traversed the display area of the post pet image by the reciprocating movement of the mouse <highlight><bold>21</bold></highlight>D in the left and right direction. If the result of determination is YES, that is if the pointing cursor <highlight><bold>101</bold></highlight> has traversed the display area of the post pet image, the CPU <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>deems that the post pet has been caressed, and executes at step SP<highlight><bold>64</bold></highlight> an updating processing routine for the agencies A<highlight><bold>1</bold></highlight> to A<highlight><bold>18</bold></highlight> of various desires as later explained. Thus, on the GUI picture <highlight><bold>100</bold></highlight> of &lsquo;PostPet (Room)&rsquo;, the pointing cursor <highlight><bold>101</bold></highlight> represented by the open hand shape, is reciprocated in the left-and-right direction on the post pet <highlight><bold>103</bold></highlight> for caressing the post pet <highlight><bold>103</bold></highlight>, as shown in FIGS. <highlight><bold>42</bold></highlight> to <highlight><bold>44</bold></highlight>. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> The CPU <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>determines at step SP<highlight><bold>65</bold></highlight> whether the pointing cursor <highlight><bold>101</bold></highlight> has been moved into the display area of the post pet image and the mouse button of the mouse <highlight><bold>21</bold></highlight>D has been clicked. If the result of the determination is affirmative, that is, if the mouse <highlight><bold>21</bold></highlight>D has been clicked when the pointing cursor <highlight><bold>101</bold></highlight> is in the post pet image display area, the CPU <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>alters at step SP<highlight><bold>66</bold></highlight> the pointing cursor <highlight><bold>101</bold></highlight> to the shape of a clenched fist to execute update processing routines of the agencies A<highlight><bold>1</bold></highlight> to A<highlight><bold>18</bold></highlight> of various desires at step SP<highlight><bold>67</bold></highlight> on the assumption that the post pet has been struck. Thus, on the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo;, the post pet <highlight><bold>103</bold></highlight> can be struck on the pointing cursor <highlight><bold>101</bold></highlight> displayed in the shape of a clenched fist, as shown in <cross-reference target="DRAWINGS">FIG. 45</cross-reference>. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> When executing mail sending by the postman <highlight><bold>104</bold></highlight>, the CPU <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>sequentially alters bit map data of the postman <highlight><bold>104</bold></highlight> on the video RAM <highlight><bold>21</bold></highlight><highlight><italic>j </italic></highlight>to cause the display controller <highlight><bold>21</bold></highlight><highlight><italic>g </italic></highlight>to display on the display device <highlight><bold>211</bold></highlight>B an animation in which the postman <highlight><bold>104</bold></highlight> moves on the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo; to recover the mail posted into the mail post <highlight><bold>106</bold></highlight> to deliver the recovered mail. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> Specifically, if the icon <highlight><bold>110</bold></highlight>B of handing over to the postman <highlight><bold>104</bold></highlight> for commanding mail dispatch by the postman on the GUI picture <highlight><bold>110</bold></highlight> of &lsquo;Writing a Mail&rsquo; is clicked as shown in <cross-reference target="DRAWINGS">FIG. 15</cross-reference>, an animation display is made such that the postman <highlight><bold>104</bold></highlight> makes a debut from the left side on the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo; as shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference> and moves to the site of the mail post <highlight><bold>106</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 15</cross-reference>, the postman <highlight><bold>104</bold></highlight> then recovering the mail posted in the mail post <highlight><bold>106</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 16</cross-reference> and starting delivering the mail posted in the mail post <highlight><bold>106</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIGS. 18 and 19</cross-reference>. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> Also, when executing the mail send by the post pet <highlight><bold>103</bold></highlight>, the CPU <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>sequentially alters the bit map data of the post pet <highlight><bold>103</bold></highlight> on the video RAM <highlight><bold>21</bold></highlight><highlight><italic>j </italic></highlight>to cause the display controller <highlight><bold>21</bold></highlight><highlight><italic>g </italic></highlight>to display on the display device <highlight><bold>21</bold></highlight>B an animation in which the post pet <highlight><bold>103</bold></highlight> carrying the mail moves on the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo; as shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> as far as the door <highlight><bold>107</bold></highlight> on foot to open the door. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> Specifically, if the icon <highlight><bold>115</bold></highlight>A of handing over to the pet for commanding mail dispatch by the post pet <highlight><bold>103</bold></highlight> on the GUI picture <highlight><bold>110</bold></highlight> of &lsquo;Writing a Mail&rsquo; as shown in <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, is clicked, an animation display is made such that the post pet <highlight><bold>103</bold></highlight> moves on the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo; as far as the mail post <highlight><bold>106</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>, the post pet <highlight><bold>103</bold></highlight> recovers the mail posted in the mail post <highlight><bold>106</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 21</cross-reference> and the post pet <highlight><bold>103</bold></highlight> carrying the mail then moves as far as the door <highlight><bold>107</bold></highlight> to open the door as shown in <cross-reference target="DRAWINGS">FIGS. 22 and 23</cross-reference>. At this time, a message which reads: &ldquo;Momo (name of the pet) went out for mail dispatching&rdquo; specifying mail dispatching by the post pet <highlight><bold>103</bold></highlight> is displayed on the lower side of the GMI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo;. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> It should be noted that mail sending by the post pet <highlight><bold>103</bold></highlight> sends a sole E-mail by a sole post pet <highlight><bold>103</bold></highlight>, that is, by a sole agent, while mail sending cannot be executed if the post pet <highlight><bold>103</bold></highlight> is absent on the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo;, that is, if the post pet <highlight><bold>103</bold></highlight> is an outing. </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> Conversely, mail sending by the postman <highlight><bold>104</bold></highlight> sends one or more E-mails by a sole postman <highlight><bold>104</bold></highlight>, that is, by a sole agent, and can be executed at any time. If the post pet <highlight><bold>103</bold></highlight> is absent on the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo;, that is, if the post pet <highlight><bold>103</bold></highlight> is an outing, mail sending can be done by the postman <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> The above-described behavior of the post pet is determined by the agent parameters attached to the mail, such that, if, upon mail reception by the post pet there are agent parameters, the CPU <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>causes the display controller <highlight><bold>21</bold></highlight><highlight><italic>g </italic></highlight>to display on the screen of the display controller <highlight><bold>21</bold></highlight><highlight><italic>g </italic></highlight>animation to indicate that the post pet <highlight><bold>103</bold></highlight>D, for example, on the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo; opens the door <highlight><bold>107</bold></highlight> to go into the room to put the mail on the table <highlight><bold>108</bold></highlight> to then walk around in the room by way of performing post pet behavior as defined by the above-mentioned agent parameters. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> Specifically, if, upon mail reception by the post pet, there are agent parameters, animation display is made in where the door <highlight><bold>107</bold></highlight> is first opened on the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo; as shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference>, and the post pet <highlight><bold>103</bold></highlight>A then enters the room as shown in <cross-reference target="DRAWINGS">FIG. 25</cross-reference> to put the mail on the table <highlight><bold>108</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>, the post pet <highlight><bold>103</bold></highlight>A then walks around in the room to then go out to close the door <highlight><bold>107</bold></highlight> as show in <cross-reference target="DRAWINGS">FIG. 27</cross-reference>. At this time, a message reading: &ldquo;Momo of Mr.Baba has come&rdquo; is displayed on the lower side of the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo;. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> If the user operates the mouse <highlight><bold>21</bold></highlight>D to click the post pet <highlight><bold>103</bold></highlight>B on the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo; by pointing cursor <highlight><bold>101</bold></highlight> or acts on the keyboard <highlight><bold>21</bold></highlight>C, the CPU <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>executes changes pre-defined in association with the contents of the operation to process the agent parameters determining the behavior of the post pet <highlight><bold>103</bold></highlight>B. Specifically, the CPU processes the agent parameters responsive to the operating of caressing or hitting the post pet <highlight><bold>103</bold></highlight>B by the operation of the mouse <highlight><bold>21</bold></highlight>D. </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> The CPU <highlight><bold>21</bold></highlight> a automatically returns the processed agent parameters to the sending side. </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> Upon reception of the automatically returned agent parameters, the CPU <highlight><bold>21</bold></highlight> a causes the display controller <highlight><bold>21</bold></highlight><highlight><italic>g </italic></highlight>to display on the screen of the display device <highlight><bold>21</bold></highlight>B an animation in which the door <highlight><bold>107</bold></highlight> is first opened on the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo; as shown in <cross-reference target="DRAWINGS">FIG. 28</cross-reference>, the post pet <highlight><bold>103</bold></highlight> entering the room as shown in <cross-reference target="DRAWINGS">FIG. 29</cross-reference> and closing the door <highlight><bold>107</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 30</cross-reference>. At this time, a message reading: &ldquo;Momo (pet&apos;s name) has come back&rdquo; is displayed on the lower side of the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo;. </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> If the icon <highlight><bold>115</bold></highlight>E for looking after the post pet <highlight><bold>103</bold></highlight> staying in the room is clicked on the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo; as shown in <cross-reference target="DRAWINGS">FIG. 31</cross-reference>, there is opened a pulldown menu <highlight><bold>125</bold></highlight> specifying items such as &lsquo;state of the pet&rsquo;, &lsquo;wash&rsquo; or &lsquo;refreshments&rsquo; showing the contents of care as shown in <cross-reference target="DRAWINGS">FIG. 33</cross-reference>. If the item &lsquo;refreshments&rsquo; is selected, there is opened a window <highlight><bold>130</bold></highlight> showing a list of names of refreshments, remaining quantity and quality of the refreshments, as shown in <cross-reference target="DRAWINGS">FIG. 34</cross-reference>. In the window <highlight><bold>130</bold></highlight> showing the list of names of refreshments, there are a &lsquo;discard&rsquo; button for discarding of the selected refreshments and a &lsquo;serve&rsquo; button for giving the selected refreshments to the post pet <highlight><bold>103</bold></highlight>. If any of the listed refreshments is selected and the &lsquo;serve&rsquo; button <highlight><bold>122</bold></highlight> clicked, the selected refreshment, for example a candy <highlight><bold>109</bold></highlight>, is put on a table <highlight><bold>108</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 35</cross-reference>. Thus, the candy <highlight><bold>109</bold></highlight> is given to the post pet <highlight><bold>103</bold></highlight> staying in the room. Although there are provided a number of sorts of refreshments as default, an up-to-date list of refreshments may be procured, such as by downloading from the WWW server on the Internet, and appended to the &lsquo;refreshments&rsquo; folder present in the same directory as the PostPet.exe which is the execution file or the E-mail sending program by way of adding the new &lsquo;refreshments&rsquo; file. </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> If the item &lsquo;wash&rsquo; displayed on the pulldown menu shown in <cross-reference target="DRAWINGS">FIG. 32</cross-reference> is selected, the post pet <highlight><bold>103</bold></highlight> takes a bath using a pail <highlight><bold>123</bold></highlight> on the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo;, as shown in <cross-reference target="DRAWINGS">FIG. 36</cross-reference>. At this time, a message reading: &ldquo;Taking Bath&rdquo; is displayed on the lower side of the GUI picture <highlight><bold>100</bold></highlight> of the &lsquo;PostPet (Room)&rsquo;. </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> The post pet <highlight><bold>103</bold></highlight> has become dirty due to outing for mail dispatch or taking refreshments. The dirty state is shown by dots on the post pet <highlight><bold>103</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 36</cross-reference>. These dots are removed on selecting the item &lsquo;wash&rsquo; displayed on the care pulldown menu <highlight><bold>125</bold></highlight> to get the pet take a bath. </paragraph>
<paragraph id="P-0160" lvl="0"><number>&lsqb;0160&rsqb;</number> If an item &lsquo;Re-ordering&rsquo; displayed on the care pulldown menu <highlight><bold>125</bold></highlight> is selected, a &lsquo;re-ordering&rsquo; window <highlight><bold>135</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 38</cross-reference> is opened. If a desired room, such as a hybrid cat set shown netted in <cross-reference target="DRAWINGS">FIG. 38</cross-reference>, is selected, and a changed button <highlight><bold>136</bold></highlight> is pushed, the room re-ordering is performed as shown in <cross-reference target="DRAWINGS">FIG. 39</cross-reference>. Although there are provided a number of types of room re-ordering as default, an up-to-date list of refreshments may be procured, such as by downloading from the WWW server on the Internet, such as from the following URL: http.://www,so-net.orjp/postpet/ index. html, and appended to the &lsquo;plug-in&rsquo; folder present in the same directory as the PostPet.exe, which is the execution file of the E-mail sending program, by way of adding the new &lsquo;room re-ordering&rsquo; file. </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> If an item &lsquo;state of pet&rsquo; displayed on the care pulldown menu <highlight><bold>125</bold></highlight> is selected, the window <highlight><bold>138</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 40</cross-reference> is opened for displaying the state of the pet. Depending upon the state of the pet displayed on the window <highlight><bold>138</bold></highlight>, the user can recognize the sort, name, sex, age, degree of happiness, brain, condition, hungriness, slimness, pocket money and comment. The degree of happiness or brain can be variably represented by pet parameter values. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> Between personal computers <highlight><bold>22</bold></highlight> having the mailer function similar to that of the personal computer <highlight><bold>21</bold></highlight> having the above-described mailer function, E-mails can be exchanged by the post pet <highlight><bold>103</bold></highlight>. If the personal computer <highlight><bold>21</bold></highlight> executes E-mail sending by the post pet <highlight><bold>103</bold></highlight>A to send the E-mail to the personal computer <highlight><bold>22</bold></highlight>, the latter executes the reception subroutine shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference> to check the E-mail reception time by the post pet <highlight><bold>103</bold></highlight>A as shown by the time chart shown in <cross-reference target="DRAWINGS">FIG. 47</cross-reference>. If the time is within the mail life, the post pet <highlight><bold>103</bold></highlight>A is displayed on the screen of the display device <highlight><bold>21</bold></highlight>B to automatically return the processed agent parameters. </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> If the sending side personal computer <highlight><bold>21</bold></highlight> executes the E-mail sending by the post pet <highlight><bold>103</bold></highlight>A, the post pet <highlight><bold>103</bold></highlight> is absent that is outing, on the GUI picture of the &lsquo;PostPet (Room)&rsquo;, until the agent parameters of the post pet <highlight><bold>103</bold></highlight>A are returned from the receiver such that the post pet <highlight><bold>103</bold></highlight> cannot execute mail sending. However, if the agent parameters are returned automatically within the mail life, the sole post pet <highlight><bold>103</bold></highlight>A can be used repeatedly for sending the E-mails one-by-one. </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> In the sending personal computer <highlight><bold>21</bold></highlight>, the operation determined by the automatically returned agent parameters is executed by the post pet <highlight><bold>103</bold></highlight>A. Further, if a post pet <highlight><bold>103</bold></highlight>B is registered as an agent on the receiving side personal computer <highlight><bold>22</bold></highlight>, the agent parameters of the post pet <highlight><bold>103</bold></highlight>B are changed, upon reception of the E-mail by the post head <highlight><bold>103</bold></highlight>A sent from the personal computer <highlight><bold>21</bold></highlight>, by the interaction with the post pet <highlight><bold>103</bold></highlight>A performing the operation as determined by the agent parameters annexed to the E-mail. </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> If, when the personal computer <highlight><bold>21</bold></highlight> executes the E-mail sending by the post pet <highlight><bold>103</bold></highlight>A to send the E-mail to the personal computer <highlight><bold>22</bold></highlight>, the personal computer <highlight><bold>21</bold></highlight> fails to execute the reception subroutine shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, that is, if the personal computer <highlight><bold>22</bold></highlight> is not connected to the communication network, the E-mail is reserved in the mail server on the Internet service provider <highlight><bold>12</bold></highlight> such that the E-mail is received at a time point the personal computer <highlight><bold>22</bold></highlight> is connected to the communication network. In this case, the post pet <highlight><bold>103</bold></highlight>A stays in the mail server until the E-mail is received. Thus, with the sending personal computer <highlight><bold>21</bold></highlight>, mail sending by the post pet <highlight><bold>103</bold></highlight>A cannot be executed, with the post pet <highlight><bold>103</bold></highlight>A being absent, that is when the post pet <highlight><bold>103</bold></highlight>A is on an outing, on the GUI picture of the &lsquo;PostPet (Room)&rsquo;. </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> Therefore, the E-mail sent by the post pet <highlight><bold>103</bold></highlight>A is designed to have a preset life, such that, if the agent parameters of the post pet <highlight><bold>103</bold></highlight>A are not returned from the receiving side within the mail life period, the agent parameters of the post pet <highlight><bold>103</bold></highlight>A are automatically generated upon expiration of the mail life period for causing the post pet <highlight><bold>103</bold></highlight>A to appear on the GUI picture of the &lsquo;PostPet (Room)&rsquo;. </paragraph>
<paragraph id="P-0167" lvl="0"><number>&lsqb;0167&rsqb;</number> Upon connection to the communication network, the receiving side personal computer <highlight><bold>22</bold></highlight> checks the reception timing of the E-mail by the post pet <highlight><bold>103</bold></highlight>A to determine whether the time is within the mail life period based on the sending data and time information of the agent parameters annexed to the E-mail and on the mail life period information. If the time is within the mail life period, the processed parameters are automatically returned after waiting until the commencement of the above-mentioned reception subroutine. On the other hand, if the reception timing of the E-mail by the above-mentioned post pet <highlight><bold>103</bold></highlight>A is after the expiration of the mail life period, the post pet <highlight><bold>103</bold></highlight>A is not displayed since the agent parameters are not returned even if the above-mentioned reception subroutine is executed. </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> The pet arrival confirmation mail function, which is an additional function of the automatic mail return processing of the step SP<highlight><bold>57</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, is hereinafter explained. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> For making the animation display on the E-mail sending side GUI picture <highlight><bold>100</bold></highlight> for indicating the state of the post pet <highlight><bold>103</bold></highlight> returning home, the main text <highlight><bold>202</bold></highlight> of the pet mail received on the receiving side is deleted at step SP<highlight><bold>57</bold></highlight>. In addition, the agent parameters <highlight><bold>203</bold></highlight> are processed on the basis of actuation by the user so that only the processed agent parameters <highlight><bold>203</bold></highlight> are annexed to the mail header <highlight><bold>201</bold></highlight> for automatic return mail. This enables the Email sending side to make animation display on the GUI picture <highlight><bold>100</bold></highlight> showing the post pet <highlight><bold>103</bold></highlight> returning home as shown in FIGS. <highlight><bold>28</bold></highlight> to <highlight><bold>30</bold></highlight> by the above-mentioned processing at the step SP<highlight><bold>49</bold></highlight>. </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> The function of automatic return mailing to the sender for advising the effect of arrival of the post pet as a text message of the E-mail, in addition to automatic return mailing of the agent parameters <highlight><bold>203</bold></highlight>, is the pet arrival confirming function. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> Referring to FIGS. <highlight><bold>52</bold></highlight> to <highlight><bold>55</bold></highlight> showing the processing flow, an &lsquo;automatic return mail A&rsquo; is automatically returned from the receiving side personal computer <highlight><bold>22</bold></highlight> of the user B via mail server <highlight><bold>11</bold></highlight>D to the personal computer <highlight><bold>21</bold></highlight> of the sending side user A. In addition, &lsquo;automatically returned mail A&rsquo;, a &lsquo;pet arrival confirmation mail&rsquo; is automatically returned from the receiving side personal computer <highlight><bold>22</bold></highlight> of the user B via mail server <highlight><bold>11</bold></highlight>D to the personal computer <highlight><bold>21</bold></highlight> of the sending side user A. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> This &lsquo;pet arrival confirmation mail&rsquo; is automatically generated by the E-mail sending/receiving program of the receiving side personal computer <highlight><bold>22</bold></highlight> of the user B. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> It is assumed that, in a GUI picture <highlight><bold>140</bold></highlight> of a setup shown in <cross-reference target="DRAWINGS">FIG. 55</cross-reference>, the user A sets &lsquo;Momo&rsquo; as the name of his or her pet, while the user B sets &lsquo;Mippi&rsquo; as the name of his or her pet. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> The following mail is then set as the &lsquo;pet arrival confirmation mail&rsquo;. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> That is, a &lsquo;secret diary&rsquo; is automatically set as the title (Subject), and a main text reading, for example: </paragraph>
<paragraph id="P-0176" lvl="2"><number>&lsqb;0176&rsqb;</number> &ldquo;Today, I went (to the user B). </paragraph>
<paragraph id="P-0177" lvl="2"><number>&lsqb;0177&rsqb;</number> I played with Mippi. </paragraph>
<paragraph id="P-0178" lvl="2"><number>&lsqb;0178&rsqb;</number> I was hit a little. </paragraph>
<paragraph id="P-0179" lvl="2"><number>&lsqb;0179&rsqb;</number> I was hit many times. </paragraph>
<paragraph id="P-0180" lvl="2"><number>&lsqb;0180&rsqb;</number> Momo.&rdquo; is set automatically. </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> This &lsquo;pet arrival confirmation mail&rsquo;, in addition to the &lsquo;automatically returned mail A&rsquo;, is automatically returned from the receiving side personal computer <highlight><bold>22</bold></highlight> of the user B via mail server <highlight><bold>11</bold></highlight>D to the personal computer <highlight><bold>21</bold></highlight> of the sending side user A. </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> This adds the &lsquo;pet arrival confirmation mail&rsquo; entitled &lsquo;secret diary&rsquo; to the reception list of the user A, as is the usual E-mail. </paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> This &lsquo;pet arrival confirmation mail&rsquo;, automatically generated by the E-mail sending/receiving program of the personal computer <highlight><bold>22</bold></highlight> of the user B, has the main text corresponding to the act of the user B on the post pet who delivered the mail, such as the act of caressing or hitting. This gives not only the practical effect of confirming the delivery of the E-mail to the receiving side but also the psychological effect that the keeper can actually feel the fact that the post pet is serving on his or her behalf. </paragraph>
<paragraph id="P-0184" lvl="0"><number>&lsqb;0184&rsqb;</number> It is noted that the behavior of the post pet is determined by the agent parameters <highlight><bold>203</bold></highlight> as follows: </paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> Specifically, the relative intensities of the pseudo-desires are determined by the environment of the post pet and the stimuli from the user. Each desire agency has a score and sensitivity, whilst each behavior unit adds new scores with the scores of each desire agency as an input. The behavior unit having the maximum score is manifested. </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> The score of the behavior unit and the desire agency is calculated by:</paragraph>
<paragraph lvl="0"><in-line-formula>new score&equals;old score&plus;(input x sensitivity)</in-line-formula></paragraph>
<paragraph id="P-0187" lvl="7"><number>&lsqb;0187&rsqb;</number> with the sensitivity being the depth of the relation between each desire agency and the behavior unit and the input element. The sensitivity itself is also changed with input. </paragraph>
<paragraph id="P-0188" lvl="0"><number>&lsqb;0188&rsqb;</number> That is, the feeling unit determining the post pet behavior captures changed values of environmental parameters of the post pet at step A, determines the behavior based on the changed environmental parameters at step B, judges the behavior taken at step C and modifies the value of the inner parameters at step D by way of performing event processing. </paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> Specifically, the agencies A<highlight><bold>1</bold></highlight> to A<highlight><bold>18</bold></highlight> of various desires receives environmental information items E<highlight><bold>1</bold></highlight> to E<highlight><bold>7</bold></highlight>, specifying the environment of the input post pet, such as age, intellect, physical strength, vigor, intimacy, dirtiness or hungriness, and the information on stimuli, specifying the stimuli on the post pet from the user, such as hitting, kicking or dispatching an E-mail, as input, in order to check the environmental information items E<highlight><bold>1</bold></highlight> to E<highlight><bold>7</bold></highlight>, through an age checker C<highlight><bold>5</bold></highlight>, an intelligence checker C<highlight><bold>6</bold></highlight>, a physical strength checker C<highlight><bold>3</bold></highlight>, a vigor checker C<highlight><bold>4</bold></highlight>, a like-don&apos;t like checker C<highlight><bold>5</bold></highlight>, an apparel checker C<highlight><bold>6</bold></highlight> and a hungriness checker C<highlight><bold>7</bold></highlight>, while directly checking the information on stimuli, for calculating respective scores. Each of behavior units U<highlight><bold>1</bold></highlight> to U<highlight><bold>25</bold></highlight> has the scores of the desire agencies, thus calculated, as the input, and the behavior unit having the maximum score is started. That is, the feeling unit is made up of a basic agency A, a checker C and a behavior unit U, as shown in <cross-reference target="DRAWINGS">FIG. 51</cross-reference> showing the basic units for reaction. The above-mentioned desire agencies may be exemplified by a mouse searcher A<highlight><bold>1</bold></highlight> desirous to search for a mouse, a food searcher A<highlight><bold>2</bold></highlight> desirous to search for food, a toy searcher A<highlight><bold>3</bold></highlight> desirous to search a toy, a bathroom seeker A<highlight><bold>4</bold></highlight> who seeks a bathroom, a sleep liker A<highlight><bold>5</bold></highlight> desirous of sleep, a speech liker A<highlight><bold>6</bold></highlight> desirous to have a chat, a sampling liker A<highlight><bold>7</bold></highlight> desirous to make sampling, a writer A<highlight><bold>8</bold></highlight> desirous to write letters, an eater A<highlight><bold>9</bold></highlight> having strong appetite, a recollector A<highlight><bold>10</bold></highlight> desirous to recollect the past, a soothsayer A<highlight><bold>11</bold></highlight> desirous to make prophets, a rioter A<highlight><bold>12</bold></highlight> desirous to make rages, a quietness liker A<highlight><bold>13</bold></highlight> who likes quietness, a quarrel liker A<highlight><bold>14</bold></highlight> desirous to make quarrels, a caress liker A<highlight><bold>15</bold></highlight> desirous to be caressed, a searcher A<highlight><bold>16</bold></highlight> desirous to make searches, a reflection liker desirous to be reflective and an evaluation liker A<highlight><bold>18</bold></highlight> desirous to make evaluations. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> The behavior units may be exemplified by a walking unit U<highlight><bold>1</bold></highlight> for animated representation of the walking motion, a running unit U<highlight><bold>2</bold></highlight> for animated representation of the running operation, a sitting unit U<highlight><bold>3</bold></highlight> for animated representation of the sitting operation, a sit-and-raise-one-hand unit U<highlight><bold>4</bold></highlight> for animated representation of the motion for sitting and raising one hand, a sit-and-raise-both-hands unit U<highlight><bold>5</bold></highlight> for animated representation of the motion for sitting and raising both hands, a standup-and-raise-one-hand unit U<highlight><bold>6</bold></highlight> for animated representation for the motion of standing up and raising one hand, a standup-and-raise-both-hands unit U<highlight><bold>7</bold></highlight> for animated representation for the motion of standing up and raising both hands, a calling unit U<highlight><bold>8</bold></highlight> for animated representation for the calling motion, a carry-and-walk unit U<highlight><bold>9</bold></highlight> for animated representation for the carrying and walking motion, a hand-clapping unit U<highlight><bold>10</bold></highlight> for animated representation for the hand-clapping motion, a standup-and-riot unit U<highlight><bold>11</bold></highlight> for animated representation for the standing up and rioting operation, a lie-and riot unit U<highlight><bold>12</bold></highlight> for animated representation for the lying and rioting operation, an eat-and-write unit U<highlight><bold>13</bold></highlight> for animated representation for the eating and writing operation, a toilette unit U<highlight><bold>14</bold></highlight> for animated representation for the going to the bathroom, a hit unit U<highlight><bold>15</bold></highlight> for animated representation for the hitting operation, a defense unit U<highlight><bold>16</bold></highlight> for animated representation for the defending operation, a sleeping unit U<highlight><bold>17</bold></highlight> for animated representation for the sleeping operation, a fall-down unit U<highlight><bold>18</bold></highlight> for animated representation for the falling-down operation, a nodding unit U<highlight><bold>19</bold></highlight> for animated representation for the nodding operation, a dancing unit U<highlight><bold>20</bold></highlight> for animated representation for the dancing operation, a swinging unit U<highlight><bold>21</bold></highlight> for animated representation for the swinging operation, an stand-upside-down unit U<highlight><bold>22</bold></highlight> for animated representation for the stand-upside-down operation, a put-into-order unit U<highlight><bold>23</bold></highlight> for animated representation for the putting-into-order or housing operation, a special technique unit U<highlight><bold>24</bold></highlight> for animated representation for showing the special technique, and a carrying unit U<highlight><bold>25</bold></highlight> for animated representation for the carrying operation. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> In the present embodiment, about <highlight><bold>50</bold></highlight> illustrative sentences are provided for the post pet <highlight><bold>103</bold></highlight>. These sentences are ranked depending on the &lsquo;intellect&rsquo; of the post pet <highlight><bold>103</bold></highlight>. For example, if the eat-write unit U<highlight><bold>13</bold></highlight> is started, an illustrative legend belonging to a rank &lsquo;intellect&rsquo; at the time point is selected at random. The intellect of the post pet <highlight><bold>103</bold></highlight> is varied depending on the age E<highlight><bold>1</bold></highlight> of the post pet <highlight><bold>103</bold></highlight> as set by the time elapsed since registration in the user computer or the serial number information <highlight><bold>203</bold></highlight> specifying the number of mail handled by the post pet <highlight><bold>103</bold></highlight>. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> The selected sentence is sent as the E-mail on randomly selecting the counterpart of the E-mailing to whom the user has so far sent E-mails, including the user. </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> Among the illustrative sentences voluntarily sent by the post pet <highlight><bold>103</bold></highlight>, there are such sentences as &ldquo;ah-&rdquo; or &ldquo;I say-&rdquo; uttered when the pet is just installed and is at a low intellectual stage; &ldquo;I have realized the structure of mailing-it is rather simple&rdquo; uttered when the pet is at a medium intellectual stage; &ldquo;All&apos;s well for me&rdquo; uttered when the pet is at an advanced intellectual stage; and a farewell mail: &ldquo;My time seems to have come to a close- I can no longer think- I&apos;m going lest you should feel sad - I&apos;ve been happy So long&rdquo;. These sentences are provided separately or in common for different pet species. </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> The post pet <highlight><bold>103</bold></highlight>A of the present embodiment can voluntarily send to the user or to his or her counterpart an E-mail with an illustrative sentence running: &ldquo;My name is Momo-please remember me&rdquo;. The scores of the eat-write unit U<highlight><bold>13</bold></highlight> is varied with the age E<highlight><bold>1</bold></highlight>, intellect E<highlight><bold>2</bold></highlight>, bodily strength E<highlight><bold>3</bold></highlight>, or the vigor E<highlight><bold>4</bold></highlight> of the post pet <highlight><bold>103</bold></highlight>, and is automatically reset at a timing the post pet voluntarily sends an E-mail. Bodily strength E<highlight><bold>3</bold></highlight> or the vigor E<highlight><bold>4</bold></highlight> of the post pet <highlight><bold>103</bold></highlight> are varied with the stimuli from or the contents of experiences with the user or his or her E-mailing counterparts. For example, the bodily strength of the post pet <highlight><bold>103</bold></highlight> is lowered or increased upon sending an E-mail or upon eating or sleeping, respectively. On the other hand, the vigor E<highlight><bold>4</bold></highlight> of the post pet <highlight><bold>103</bold></highlight> is lowered or increased upon being persecuted or caressed by the user or his or her counterparts, respectively. This enables the post pet <highlight><bold>103</bold></highlight> to send many E-mails voluntarily to the user or his or her counterparts. </paragraph>
<paragraph id="P-0195" lvl="0"><number>&lsqb;0195&rsqb;</number> For preventing the user from disliking the post pet <highlight><bold>103</bold></highlight> as a result of the increased age E<highlight><bold>1</bold></highlight> or intellect E<highlight><bold>2</bold></highlight> of the post pet <highlight><bold>103</bold></highlight> resulting in the increased number of times of dispatching E-mails to the user or to his or her counterparts and in repeated occurrences of the same sentences, a &lsquo;life&rsquo; is set for the post pet <highlight><bold>103</bold></highlight>. </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> This &lsquo;life&rsquo; for the post pet <highlight><bold>103</bold></highlight> is two years and is varied with the physical strength E<highlight><bold>3</bold></highlight> or the vigor E<highlight><bold>4</bold></highlight>. </paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> The post pet <highlight><bold>103</bold></highlight>, whose life has come to a close, sends the final E-mail reading, for example: &ldquo;Momo now goes to an unknown place . . . Thank you for your attention to me . . . So long&rdquo; to the user or to his or her counterparts to stop the function as an agent. </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> With the above-described E-mail system, the &lsquo;post pet&rsquo; of the personal computer <highlight><bold>21</bold></highlight> of the user A encodes the agent parameters as a mail of the MIME format along with the main text of the mail carried by the pet A and sends the encoded mail A to the destination, that is, to the user B as shown in <cross-reference target="DRAWINGS">FIG. 52</cross-reference>. This eliminates the pet A from the personal computer <highlight><bold>21</bold></highlight> of the user A. </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> If next the &lsquo;post pet&rsquo; of the user B of the destination executes mail check, the mail A is captured by the &lsquo;post pet&rsquo; of the personal computer <highlight><bold>22</bold></highlight> of the user B, as shown in <cross-reference target="DRAWINGS">FIG. 53</cross-reference>. </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> Then, the &lsquo;post pet&rsquo; of the user B records changes in the state of the pet A caused by various events occurring in the pet room of the user B and sends the pet A back to the user A as the &lsquo;automatically returned mail A&rsquo;, as shown in <cross-reference target="DRAWINGS">FIG. 54</cross-reference>. </paragraph>
<paragraph id="P-0201" lvl="0"><number>&lsqb;0201&rsqb;</number> If the user A checks the mail by the &lsquo;post pet&rsquo; of the personal computer <highlight><bold>21</bold></highlight>, the &lsquo;automatically returned mail A&rsquo; is captured as shown in <cross-reference target="DRAWINGS">FIG. 55</cross-reference>. Thus, the &lsquo;post pet&rsquo; of the personal computer <highlight><bold>21</bold></highlight> of the user A uses the new agent parameters reflecting the events that occurred at the user B. </paragraph>
<paragraph id="P-0202" lvl="0"><number>&lsqb;0202&rsqb;</number> That is, by having the picture data of the agent on the personal computers of the user and the counterpart of the E-mailing of the user, and actually sending agent parameters controlling the agent&apos;s behavior, the result as though picture data of the agent were being sent is obtained. By sending the agent parameters instead of the picture data, the user connection time is shortened, such that, for a dial-up user, the Internet connection charges and telephone charges are reduced. Moreover, since the amount of exchanged data is relatively decreased, use of the resources of the Internet in their entirety may also be reduced. </paragraph>
<paragraph id="P-0203" lvl="0"><number>&lsqb;0203&rsqb;</number> Meanwhile, if the post pet is started first, the GUI picture <highlight><bold>140</bold></highlight> for selecting the pet is displayed as shown in <cross-reference target="DRAWINGS">FIG. 56</cross-reference>, such that one of the Teddy-bear <highlight><bold>103</bold></highlight>A, tortoise <highlight><bold>103</bold></highlight>B, hybrid cat <highlight><bold>103</bold></highlight>C and mini-rabbit <highlight><bold>103</bold></highlight>D can be selected. The parameters of &lsquo;condition&rsquo;, &lsquo;temper&rsquo;, &lsquo;brain&rsquo; and &lsquo;slimness&rsquo; are varying at all times and are set by the timing of selecting (clicking) the pet. It should be noted that the parameters as set by the timing of selecting (clicking) the pet are initial values, and are varied depending on the pet keeping state of the user. The items &lsquo;pet&apos;s name&rsquo; and &lsquo;your name&rsquo; can be freely entered by the user. </paragraph>
<paragraph id="P-0204" lvl="0"><number>&lsqb;0204&rsqb;</number> In the post pet, the picture data of the pet are stored in the local disc of the user, so that, if the number of pet types is increased in future, these new pets cannot be represented. Thus, picture data of a character &lsquo;hatena-kun&rsquo; (Mr. Question) shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is used. That is, if a mail is sent by a post pet of a newly defined character to a user having only picture data of Teddy bear <highlight><bold>103</bold></highlight>A, tortoise <highlight><bold>103</bold></highlight>B, a hybrid cat <highlight><bold>103</bold></highlight>C, and a mini-rabbit <highlight><bold>103</bold></highlight>D, the hatena-kun <highlight><bold>103</bold></highlight>E is displayed, as shown in <cross-reference target="DRAWINGS">FIG. 57</cross-reference>. Thus, it is possible with the post pet to cope with an increased number of the pets by using the hatena-kun <highlight><bold>103</bold></highlight>E, or adding new pets. </paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> Although the foregoing description has been made in connection with application of the present invention to the Internet, the present invention can be applied to a mail communication system exploiting a personal handy phone or other mobile communication terminals capable of supporting the mail communication on the Intranet or PHS Internet Access Forum Standard (PIAFS), in addition to mail exchange on the Internet. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> Although the present invention has been described with reference to specific embodiments, those of skill in the art will recognize that changes may be made thereto without departing from the spirit and scope of the invention as set forth in the hereafter appended claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for automatically controlling a transmission, the method comprising the steps of: 
<claim-text>appending a plurality of agent parameters controlling the behavior of an agent delivering the transmission to a main mail text having an appended mail header, the agent parameters being responsive to a send command designating the transmission to a recipient; </claim-text>
<claim-text>modifying the agent parameters responsive to the contents of experiences reflecting the operating hysteresis for the agent; and </claim-text>
<claim-text>sending a preset illustrative sentence via the agent to a user of the agent based on the agent parameters. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A method for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, the method further comprising the steps of: 
<claim-text>performing a control procedure to randomly select an illustrative sentence for the transmission from a plurality of illustrative sentences classed and preset depending on the contents of experiences acquired by the agent so that the selected sentence is in a class consistent with the contents of experiences acquired by the agent; and </claim-text>
<claim-text>voluntarily sending the selected sentence to the user of the agent. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A method for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, the method further comprising the steps of: 
<claim-text>setting an effective period of the agent; and </claim-text>
<claim-text>voluntarily sending a transmission to the user of the agent upon expiration of the effective period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A method for automatically controlling a transmission, the method comprising the steps of: 
<claim-text>appending a plurality of agent parameters controlling the behavior of an agent to a main mail text having an appended mail header, responsive to a send command designating the transmission for sending to a recipient; </claim-text>
<claim-text>modifying the agent parameters responsive to the contents of experiences reflecting the operating hysteresis for the agent; and </claim-text>
<claim-text>transmitting a preset illustrative sentence via the agent to the recipient based on the agent parameters. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A method for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, the method further comprising the steps of: 
<claim-text>performing a control procedure to randomly select an illustrative sentence from a plurality of illustrative sentences classed and preset depending on the contents of experiences acquired by the agent so that the selected sentence is in a class consistent with the contents of experiences acquired by the agent; and </claim-text>
<claim-text>voluntarily sending the selected sentence to the recipient. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A method for automatically controlling a transmission, the method comprising the steps of: 
<claim-text>appending a plurality of agent parameters controlling the behavior of an agent delivering the transmission to a main mail text having an appended mail header, responsive to a send command designating the transmission for sending to a recipient; </claim-text>
<claim-text>modifying the agent parameters responsive to the contents of experiences reflecting the operating hysteresis for the agent; </claim-text>
<claim-text>randomly selecting via the agent at least one of the user and the recipient based on the agent parameters; and </claim-text>
<claim-text>sending a preset illustrative sentence via the agent to at least one of the user and to the recipient. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A method for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, the method further comprising the steps of: 
<claim-text>randomly selecting an illustrative sentence for sending from a plurality of illustrative sentences classed and preset depending on the contents of experiences acquired by the agent so that the selected sentence is in a class consistent with the contents of experiences acquired by the agent; and </claim-text>
<claim-text>voluntarily sending the selected sentence to at least one of the user and the recipient. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A method for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, the method further comprising the steps of: 
<claim-text>setting an effective period of the agent; and </claim-text>
<claim-text>voluntarily sending a transmission to at least one of the user and to the recipient upon expiration of the effective period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. An apparatus for automatically controlling a transmission, comprising: 
<claim-text>an agent manager for displaying an agent and for managing the behavior of the agent responsive to agent parameters which determine the behavior of the agent; </claim-text>
<claim-text>send command accepting means for accepting a send command designating a transmission; and </claim-text>
<claim-text>mail transmission means controlled by the agent manager upon acceptance by the send command accepting means of a send command which designates the transmission for appending the agent parameters to a main mail text having an appended mail header for transmitting to a recipient; </claim-text>
<claim-text>wherein the agent manager modifies the agent parameters responsive to the contents of experiences reflecting the operating hysteresis for the agent to voluntarily send to the user an illustrative sentence preset by the agent based on the agent parameters. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. An apparatus for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the agent manager randomly selects an illustrative sentence for transmission from a plurality of illustrative sentences classed and preset depending on the contents of experiences acquired by the agent so that the selected sentence is in a class consistent with the contents of experiences acquired by the agent, the agent manager voluntarily transmitting the selected sentence to the user. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. An apparatus for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein an effective period of the agent is set and a transmission is voluntarily transmitted to the user upon expiration of the effective period. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. An apparatus for automatically controlling a transmission, comprising: 
<claim-text>an agent manager for displaying an agent and for managing the behavior of the agent responsive to agent parameters which determine the behavior of the agent; </claim-text>
<claim-text>sending command accepting means for accepting a send command designating the transmission; and </claim-text>
<claim-text>mail transmission means controlled by the agent manager upon acceptance by the send command accepting means of a send command which designates the transmission for appending the agent parameters to a main mail text having an appended mail header, for sending a transmission to a recipient; </claim-text>
<claim-text>wherein the agent manager modifies the agent parameters responsive to the contents of experiences reflecting the operating hysteresis for the agent to voluntarily send to the recipient an illustrative sentence preset by the agent based on the agent parameters. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. An apparatus for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the agent manager randomly selects an illustrative sentence from a plurality of illustrative sentences classed and preset depending on the contents of experiences acquired by the agent so that the selected sentence is in a class consistent with the contents of experiences acquired by the agent, the agent manager voluntarily sending a transmission to the recipient. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. An apparatus for automatically controlling a transmission, comprising: 
<claim-text>an agent manager for displaying an agent and for managing the behavior of the agent responsive to agent parameters which determine the behavior of the agent; </claim-text>
<claim-text>send command accepting means for accepting a send command designating the transmission; and </claim-text>
<claim-text>mail transmission means controlled by the agent manager on acceptance by the send command accepting means of a send command which designates the transmission, the mail sending means appending the agent parameters to a main mail text having an appended mail header for sending a transmission to a recipient; </claim-text>
<claim-text>wherein the agent manager modifies the agent parameters responsive to the contents of experiences reflecting the operating hysteresis for the agent for voluntarily sending to at least one of the user and the recipient an illustrative sentence preset by the agent based on the agent parameters. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. An apparatus for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the agent manager randomly selects an illustrative sentence for sending from a plurality of illustrative sentences classed and preset depending on the contents of experiences acquired by the agent so that the selected sentence is in a class consistent with the contents of experiences acquired by the agent, the agent manager voluntarily sending a transmission to at least one of the user and the recipient. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. An apparatus for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein an effective period of the agent is set and a transmission is voluntarily sent to the user upon expiration of the effective period. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. An automatic transmission control program supply medium for supplying an automatic transmission control program that can be read and executed by a computer, wherein, responsive to a send command for designating a transmission, a plurality of agent parameters are appended to a main mail text having an appended mail header, wherein the behavior of the agent is managed by the agent parameters, the agent parameters are modified responsive to the contents of experiences reflecting the operating hysteresis for the agent, and wherein a control procedure is performed for automatic transmission by the agent of a preset illustrative sentence based on the agent parameters to a user. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The medium of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> wherein the control procedure is performed so that an illustrative sentence for transmission randomly selected from a plurality of illustrative sentences classed and preset depending on the contents of experiences acquired by the agent so that the selected sentence is in a class consistent with the contents of experiences acquired by the agent, the selected sentence being voluntarily sent to the user. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The medium of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference> wherein the control procedure is performed so that an effective period of the agent is set and a transmission is voluntarily sent to the user upon expiration of the effective period. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. An automatic transmission control program supply medium for supplying an automatic transmission control program that can be read and executed by a computer, wherein, responsive to a send command for designating the transmission, a plurality of agent parameters are appended to a main mail text having an appended mail header, wherein the behavior of the agent is managed by the agent parameters, the agent parameters are modified responsive to the contents of experiences reflecting the operating hysteresis for the agent, and wherein a control procedure is performed for automatic transmission by the agent of a preset illustrative sentence based on the agent parameters to at least one of a user and a recipient. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The medium of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference> wherein the control procedure is performed so that an illustrative sentence is randomly selected from a plurality of illustrative sentences classed and preset depending on the contents of experiences acquired by the agent so that the selected sentence is in a class consistent with the contents of experiences acquired by the agent, the selected sentence being voluntarily sent to the recipient. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. An automatic transmission control program supply medium for providing an automatic transmission control program that can be read and executed by a computer, wherein, responsive to a send command for designating the transmission, a plurality of agent parameters are appended to a main mail text having an appended mail header, wherein the behavior of the agent is managed by the agent parameters, the agent parameters are modified responsive to the contents of experiences reflecting the operating hysteresis for the agent, and wherein the agent randomly selects at least one of a user and a recipient based on the agent parameters for voluntarily sending a preset illustrative sentence to at least one of the user and the recipient. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The medium of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference> wherein a control procedure is performed so that an illustrative sentence for transmission is randomly selected from a plurality of illustrative sentences classed and preset depending on the contents of experiences acquired by the agent so that the selected sentence is in a class consistent with the contents of experiences acquired by the agent, the selected sentence being voluntarily sent at least on of the user and the recipient. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The medium of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference> wherein the control procedure is performed so that an effective period of the agent is set and a transmission is voluntarily sent to the user upon expiration of the effective period. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A method for controlling a virtual agent, the method comprising the steps of: 
<claim-text>generating a virtual agent having a plurality of agent parameters, the agent parameters configured to determine a behavior of the virtual agent; </claim-text>
<claim-text>displaying the virtual agent on a display unit; </claim-text>
<claim-text>interacting with the virtual agent on the display unit, including positioning at least a portion of a display of an input device over the virtual agent on the display unit, detecting an input signal from the input device, and modifying the agent parameters such that the displaying step displays the virtual agent in response to the input signal; and </claim-text>
<claim-text>updating the plurality of agent parameters based on the interacting step such that the behavior of the virtual agent is continuously modified. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. A method for controlling a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the input signal includes at least one of petting the virtual agent and hitting the virtual agent. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. A method for controlling a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the virtual agent has a predetermined life span such that the behavior of the agent is continuously modified during the life span. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. A method for controlling a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, wherein the predetermined life span is two years. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. A method for controlling a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, wherein the virtual agent is capable of generating at least one message based on the updated agent parameters responsive to a state of the virtual agent. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A method for controlling a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, the method further including the step of automatically transmitting the at least one generated message from the virtual agent to a corresponding user for display on the display unit. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. A method for controlling a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein the at least one displayed message indicates the state of the virtual agent. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. A method for controlling a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the step of displaying includes the step of animating the displayed virtual agent. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. A method for automatically controlling a transmission, the method comprising the steps of: 
<claim-text>receiving a send command designating the transmission to a recipient; </claim-text>
<claim-text>appending a plurality of agent parameters to a main mail text, the agent parameters controlling the behavior of an agent delivering the transmission; </claim-text>
<claim-text>transmitting the transmission to the recipient; </claim-text>
<claim-text>automatically returning an indication when the recipient has received the transmission; and </claim-text>
<claim-text>modifying the agent parameters based on the agent interacting with the recipient. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. A method for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, wherein the agent parameters are continuously updated based on interaction of the agent such that the behavior of the agent is continuously modified. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. A method for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, wherein the transmission includes an expiration period, and, wherein the transmitting step further includes the steps of: 
<claim-text>transmitting via a mail server; and </claim-text>
<claim-text>automatically purging the transmission at the mail server when the recipient does not receive the transmission within the expiration period. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. A method for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, wherein the agent is an animated virtual pet. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. A method for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, wherein the agent is provided with a predetermined life span. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. A method for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference>, the method further including the step of generating a message when the predetermined life span expires. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. A method for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, the method further including the step of displaying the message when the predetermined life span expires. </claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. A method for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, the method further including the step of displaying at least one predetermined message selected by the agent, wherein the selected at least one predetermined message is indicative of a state of the agent. </claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. A method for automatically controlling a transmission as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference>, wherein the agent selects at least one predetermined message based on the plurality of agent parameters. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. An apparatus for controlling a virtual agent, the apparatus comprising: 
<claim-text>means for generating a virtual agent having a plurality of agent parameters, the agent parameters configured to determine a behavior of the virtual agent; </claim-text>
<claim-text>a display unit adapted to display the virtual agent; </claim-text>
<claim-text>means for interacting with the virtual agent on the display unit, the interacting means including means for positioning at least a portion of a display of an input device over the virtual agent on the display unit, means for detecting an input signal from the input device, and means for modifying the agent parameters such that the display unit displays the virtual agent in response to the input signal; and </claim-text>
<claim-text>means for updating the plurality of agent parameters using the interacting means such that the behavior of the virtual agent is continuously modified. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. An apparatus for automatically controlling a transmission, the apparatus comprising: 
<claim-text>means for receiving a send command designating the transmission to a recipient; </claim-text>
<claim-text>means for appending a plurality of agent parameters to a main mail text of the transmission, the agent parameters controlling the behavior of an agent delivering the transmission; </claim-text>
<claim-text>means for transmitting the transmission to the recipient; </claim-text>
<claim-text>means for automatically returning an indication when the recipient has received the transmission; and </claim-text>
<claim-text>means for modifying the agent parameters based on the agent interacting with the recipient. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. A computer readable medium for controlling a virtual agent, wherein the medium generates a virtual agent having a plurality of agent parameters, the agent parameters are configured to determine a behavior of the virtual agent; 
<claim-text>wherein the virtual agent is displayed on a display unit; </claim-text>
<claim-text>wherein the virtual agent interacts on the display unit including positioning at least a portion of a display of an input device over the virtual agent on the display unit, detecting an input signal from the input device, and modifying the agent parameters such that the display unit displays the agent in response to the input signal; and </claim-text>
<claim-text>wherein the plurality of agent parameters are updated based on the interaction such that the behavior of the virtual agent is continuously modified. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. A computer readable medium for automatic control of a transmission wherein the medium, on receiving a send command designating the transmission to a recipient, appends a plurality of agent parameters to a main mail text of the transmission, the agent parameters controlling the behavior of an agent delivering the transmission; 
<claim-text>wherein the transmission is transmitted to the recipient; </claim-text>
<claim-text>wherein an indicator that the recipient has received the transmission is automatically returned; and </claim-text>
<claim-text>wherein the agent parameters are modified based on the agent interacting with the recipient. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. A method for providing a virtual agent, the method comprising the steps of: 
<claim-text>storing a first agent parameter controlling a first agent kept by a first person on a first computer operated by the first person; storing a first image data of the first agent on the first computer; </claim-text>
<claim-text>storing a second image data of a second agent being kept by a second person on the first computer; </claim-text>
<claim-text>displaying the first agent on a first screen connected to the first computer based on the first image data and the first agent parameter; and </claim-text>
<claim-text>sending the first agent parameter to the first computer through a communication network. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference>, wherein the first agent is displayed as an animated character. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference>, the method further comprising the steps of: 
<claim-text>receiving a second agent parameter controlling a second agent kept by the second person through the communication network; and </claim-text>
<claim-text>displaying the second agent on the first screen connected to the first computer based on the second image data and the second agent parameter. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference>, the method further comprising the steps of: 
<claim-text>detecting a first event corresponding to the first agent; and </claim-text>
<claim-text>updating the first agent parameter with the detected first event. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference>, the method further comprising the steps of: 
<claim-text>detecting a second event corresponding to the second agent; and </claim-text>
<claim-text>updating the second agent parameter with the detected second event. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference>, wherein the first agent parameter is randomly generated. </claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. A method for providing a virtual agent, the method comprising the steps of: 
<claim-text>storing a first agent parameter in a first storage device, the first agent parameter controlling a first virtual agent kept by a first person; </claim-text>
<claim-text>transferring the first agent parameter from the first storage device to a first memory device for controlling the first agent at a first computer operated by the first person; and </claim-text>
<claim-text>sending the first agent parameter from the first memory device to a second computer remote from both the first storage device and the first computer through a communication network. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference>, wherein the first agent parameter is sent from the first memory device to a remote computer without passing through the first storage device. </claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference>, wherein the first agent parameter is sent from the first memory device to a remote computer through an Internet service provider. </claim-text>
</claim>
<claim id="CLM-00055">
<claim-text><highlight><bold>55</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference>, wherein the first storage device is a hard disk drive. </claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference>, wherein the first memory device is random access memory. </claim-text>
</claim>
<claim id="CLM-00057">
<claim-text><highlight><bold>57</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00055">claim 52</dependent-claim-reference>, wherein the first agent parameter is randomly generated. </claim-text>
</claim>
<claim id="CLM-00058">
<claim-text><highlight><bold>58</bold></highlight>. A method for providing a virtual agent, the method comprising the steps of: 
<claim-text>sending a first agent parameter at a first computer operated by a first person to a second computer remote from the first computer through a communication network, wherein the second computer is operated by a second person and the first agent parameter controls a first agent kept by the first person; </claim-text>
<claim-text>receiving the first agent parameter sent from the second computer at the first computer; </claim-text>
<claim-text>receiving a second agent parameter sent from the second computer at the first computer, the second agent parameter controlling a second virtual agent kept by the second person; and </claim-text>
<claim-text>sending the received second agent parameter to the second computer using the first computer. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00059">
<claim-text><highlight><bold>59</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00055">claim 58</dependent-claim-reference>, the method further comprising the step of processing the first agent parameter to execute the first agent at the first computer. </claim-text>
</claim>
<claim id="CLM-00060">
<claim-text><highlight><bold>60</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00055">claim 58</dependent-claim-reference>, the method further comprising the step of processing the second agent parameter to execute the second agent at the first computer. </claim-text>
</claim>
<claim id="CLM-00061">
<claim-text><highlight><bold>61</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00055">claim 58</dependent-claim-reference>, the method further comprising the steps of: 
<claim-text>detecting a first event corresponding to the first agent; and </claim-text>
<claim-text>updating the first agent parameter with the detected event. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00062">
<claim-text><highlight><bold>62</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00055">claim 58</dependent-claim-reference>, the method further comprising the steps of: 
<claim-text>detecting a second event corresponding to the second agent; and </claim-text>
<claim-text>updating the second agent parameter with the detected event. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00063">
<claim-text><highlight><bold>63</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00066">claim 61</dependent-claim-reference>, wherein the first event is a first interaction between the first agent and the second agent. </claim-text>
</claim>
<claim id="CLM-00064">
<claim-text><highlight><bold>64</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00066">claim 61</dependent-claim-reference>, wherein the first event is a second interaction between the first agent and an operation by the first person. </claim-text>
</claim>
<claim id="CLM-00065">
<claim-text><highlight><bold>65</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00066">claim 62</dependent-claim-reference>, wherein the second event is a third interaction between the second agent and the first agent. </claim-text>
</claim>
<claim id="CLM-00066">
<claim-text><highlight><bold>66</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00066">claim 62</dependent-claim-reference>, wherein the second event is a fourth interaction between the second agent and an operation by the first person. </claim-text>
</claim>
<claim id="CLM-00067">
<claim-text><highlight><bold>67</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00055">claim 58</dependent-claim-reference>, wherein the first agent parameter is randomly generated. </claim-text>
</claim>
<claim id="CLM-00068">
<claim-text><highlight><bold>68</bold></highlight>. A method for providing a virtual agent, the method comprising the steps of: 
<claim-text>detecting one or more events corresponding to a first virtual agent, wherein the behavior of the first virtual agent is determined by a plurality of first agent parameters; and </claim-text>
<claim-text>updating the plurality of first agent parameters based on a current first agent parameter with each detected event such that the behavior of the first virtual agent is continuously modified with each detected event, wherein the events include an interaction between the first virtual agent and a second virtual agent controlled by a second agent parameter and an interaction between the first virtual agent and at least one of an operation and an input by an operator. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00069">
<claim-text><highlight><bold>69</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00066">claim 68</dependent-claim-reference>, the method further comprising the step of receiving the second agent parameter through a communication network. </claim-text>
</claim>
<claim id="CLM-00070">
<claim-text><highlight><bold>70</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00066">claim 68</dependent-claim-reference>, the method further comprising the step of updating the second agent parameter. </claim-text>
</claim>
<claim id="CLM-00071">
<claim-text><highlight><bold>71</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 70</dependent-claim-reference>, the method further comprising the step of sending the updated second agent parameter through a communication network. </claim-text>
</claim>
<claim id="CLM-00072">
<claim-text><highlight><bold>72</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00066">claim 68</dependent-claim-reference>, the method further comprising the step of sending the first agent parameters through a communication network. </claim-text>
</claim>
<claim id="CLM-00073">
<claim-text><highlight><bold>73</bold></highlight>. A method for providing a virtual agent as claimed in <dependent-claim-reference depends_on="CLM-00066">claim 68</dependent-claim-reference>, wherein the first agent parameters are randomly generated. </claim-text>
</claim>
<claim id="CLM-00074">
<claim-text><highlight><bold>74</bold></highlight>. A method for providing an agent, the method comprising the steps of: 
<claim-text>randomly generating an agent parameter which is configured to determine a behavior of an agent; and </claim-text>
<claim-text>storing the agent in a memory device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00075">
<claim-text><highlight><bold>75</bold></highlight>. A method for providing an agent as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 74</dependent-claim-reference>, the method further comprising the step of sending the agent parameter through a communication network. </claim-text>
</claim>
<claim id="CLM-00076">
<claim-text><highlight><bold>76</bold></highlight>. A method for providing an agent as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 74</dependent-claim-reference>, the method further comprising the step of updating the agent parameter according to an event. </claim-text>
</claim>
<claim id="CLM-00077">
<claim-text><highlight><bold>77</bold></highlight>. A method for providing an agent as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 75</dependent-claim-reference>, the method further comprising the step of receiving the sent agent parameter. </claim-text>
</claim>
<claim id="CLM-00078">
<claim-text><highlight><bold>78</bold></highlight>. A method for providing an agent as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 74</dependent-claim-reference>, the method further comprising the step of displaying the agent o n a display unit. </claim-text>
</claim>
<claim id="CLM-00079">
<claim-text><highlight><bold>79</bold></highlight>. A method for providing an agent as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 78</dependent-claim-reference>, wherein the agent is displayed as an animated character. </claim-text>
</claim>
<claim id="CLM-00080">
<claim-text><highlight><bold>80</bold></highlight>. A method for providing an agent, the method comprising the steps of: 
<claim-text>storing a first agent software; </claim-text>
<claim-text>storing an agent parameter controlling a behavior of an agent; </claim-text>
<claim-text>executing the first agent software using the agent parameter to control the behavior of the agent; and </claim-text>
<claim-text>sending the agent parameter to a remote computer storing a second agent software which is substantially the same as the first agent software so that the second agent software can be executed using the agent parameter to control the behavior of the agent. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00081">
<claim-text><highlight><bold>81</bold></highlight>. A method for providing an agent as claimed in <dependent-claim-reference depends_on="CLM-00088">claim 80</dependent-claim-reference>, the method further comprising the step of receiving the agent parameter from the remote computer. </claim-text>
</claim>
<claim id="CLM-00082">
<claim-text><highlight><bold>82</bold></highlight>. A method for controlling a virtual agent, the method comprising the steps of: 
<claim-text>providing a virtual agent having a plurality of agent parameters, the agent parameters configured to determine the behavior of the virtual agent; </claim-text>
<claim-text>sending the agent parameters to a recipient through a network; </claim-text>
<claim-text>setting a state of the virtual agent to an absent state corresponding to the sending step; and </claim-text>
<claim-text>selectively displaying the virtual agent on the display unit according to the state, wherein the virtual agent is displayed on a display unit when the state represents other than the absent state. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00083">
<claim-text><highlight><bold>83</bold></highlight>. A method for providing an agent as claimed in <dependent-claim-reference depends_on="CLM-00088">claim 82</dependent-claim-reference>, the method further comprising the steps of: 
<claim-text>receiving the agent parameters through the network; </claim-text>
<claim-text>setting the state of the virtual agent to an existing state corresponding to the receiving step; and </claim-text>
<claim-text>selectively displaying the virtual pet on the display unit according to the state, wherein the virtual pet is displayed on a display unit when the state represents the existing state. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00084">
<claim-text><highlight><bold>84</bold></highlight>. A method for providing an agent as claimed in <dependent-claim-reference depends_on="CLM-00088">claim 83</dependent-claim-reference>, wherein the received agent parameters have been modified. </claim-text>
</claim>
<claim id="CLM-00085">
<claim-text><highlight><bold>85</bold></highlight>. A method for providing an agent as claimed in <dependent-claim-reference depends_on="CLM-00088">claim 84</dependent-claim-reference>, wherein the received agent parameters have been continuously modified. </claim-text>
</claim>
<claim id="CLM-00086">
<claim-text><highlight><bold>86</bold></highlight>. A method for providing an agent as claimed in <dependent-claim-reference depends_on="CLM-00088">claim 82</dependent-claim-reference>, wherein the agent parameters include sending date and time information, and setting the state of the virtual agent to an existing state after a lapse of preset time based on the sending date and time information. </claim-text>
</claim>
<claim id="CLM-00087">
<claim-text><highlight><bold>87</bold></highlight>. An apparatus for providing a virtual agent, the apparatus comprising: 
<claim-text>means for storing a first agent parameter controlling a first agent kept by a first person on a first computer kept by the first person; </claim-text>
<claim-text>means for storing a first image data of the first agent on the first computer; </claim-text>
<claim-text>means for storing a second image data of a second agent kept by a second person on the first computer; </claim-text>
<claim-text>a display unit connected to the first computer adapted to display the first agent on a first screen based on the first image data and the first agent parameter; and </claim-text>
<claim-text>means for sending the first agent parameter to the first computer through a communication network. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00088">
<claim-text><highlight><bold>88</bold></highlight>. An apparatus for providing a virtual agent, the apparatus comprising: 
<claim-text>means for storing a first agent parameter in a first storage device, the first agent parameter controlling a first virtual agent kept by a first person; </claim-text>
<claim-text>means for transferring the first agent parameter from the first storage device to a first memory for controlling the first agent at a first computer operated by the first person; and </claim-text>
<claim-text>means for sending the first agent parameter from the first memory to a second computer remote from both the first storage device and the first computer through a communication network. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00089">
<claim-text><highlight><bold>89</bold></highlight>. An apparatus for providing a virtual agent, the apparatus comprising: 
<claim-text>means for sending a first agent parameter at a first computer operated by a first person to a second computer remote from the first computer through a communication network, wherein the second computer is operated by a second person and the first agent parameter controls a first agent kept by the first person; </claim-text>
<claim-text>means for receiving the first agent parameter sent from the second computer using the first computer; </claim-text>
<claim-text>means for receiving a second agent parameter sent from second computer at the first computer, the second agent parameter controlling a second virtual agent kept by the second person; and </claim-text>
<claim-text>means for sending the received second agent parameter to the second computer using the first computer. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00090">
<claim-text><highlight><bold>90</bold></highlight>. An apparatus for providing a virtual agent, the apparatus comprising: 
<claim-text>means for detecting one or more events corresponding to a first virtual agent, wherein the behavior of the first virtual agent is determined by a plurality of first agent parameters; </claim-text>
<claim-text>means for updating the plurality of first agent parameters based on a current first agent parameter with each detected event such that the behavior of the first virtual agent is continuously modified with each detected event; and </claim-text>
<claim-text>means for interacting the first virtual agent with a second virtual agent controlled by a second agent parameter and the first virtual agent with at least one of an operation and an input by an operator. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00091">
<claim-text><highlight><bold>91</bold></highlight>. An apparatus for providing an agent, the apparatus comprising: 
<claim-text>means for randomly generating an agent parameter which is configured to determine a behavior of an agent; and </claim-text>
<claim-text>means for storing the agent in a memory device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00092">
<claim-text><highlight><bold>92</bold></highlight>. An apparatus for providing an agent, the apparatus comprising: 
<claim-text>means for storing a first agent software; </claim-text>
<claim-text>means for storing an agent parameter con trolling a behavior of an agent; </claim-text>
<claim-text>means for executing the first agent software using the agent parameter to control the behavior of the agent; and </claim-text>
<claim-text>means for sending the agent parameter to a remote computer storing a second agent software which is substantially the same as the first agent software so that the second software can be executed using the agent parameter to control the behavior of the agent. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00093">
<claim-text><highlight><bold>93</bold></highlight>. An apparatus for controlling a virtual agent, the apparatus comprising: 
<claim-text>means for providing a virtual agent having a plurality of agent parameters, the agent parameters configured to determine the behavior of the virtual agent; </claim-text>
<claim-text>means for sending the agent parameters to a recipient through a network; </claim-text>
<claim-text>means for setting a state of the virtual agent to an absent state corresponding to the sending means sending the agent parameters; and </claim-text>
<claim-text>means for selectively displaying the virtual agent on the display unit according to the state connected to a display unit wherein the virtual agent is displayed when the state is other than the absent state. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00094">
<claim-text><highlight><bold>94</bold></highlight>. A computer readable medium for providing a virtual agent, wherein the medium stores a first agent parameter controlling a first agent kept by a first person a first computer operated by the first person; stores a first image data of the first agent on the first computer; stores a second image data of a second agent being kept by second person on the first computer; displays the first agent on a first screen connected to the first computer based on the first image data and the first agent parameter; and wherein the first agent parameter is sent to the first computer through a communication network. </claim-text>
</claim>
<claim id="CLM-00095">
<claim-text><highlight><bold>95</bold></highlight>. A computer readable medium for of providing a virtual agent, wherein a first agent parameter is stored in a first storage device, the first agent parameter controlling a first virtual agent kept by a first person; wherein the first agent parameter is transferred from the first storage device to a first memory for controlling the first agent at a first computer operated by the first person; and wherein the first agent parameter is sent from the first memory to a second computer remote from both the first storage and the first computer through a communication network. </claim-text>
</claim>
<claim id="CLM-00096">
<claim-text><highlight><bold>96</bold></highlight>. A computer readable medium for providing a virtual agent, wherein a first agent parameter at first computer operated by a first person is sent to a second computer remote from the first computer through a communication network, wherein the second computer is operated by a second person and the first agent parameter controls a first agent kept by the first person; wherein the first agent parameter sent from the second computer is received using the first computer; wherein a second agent parameter sent from second computer is received using the first computer, the second agent parameter controlling a second virtual agent kept by the second person; and wherein the received second agent parameter is sent to the second computer using the first computer. </claim-text>
</claim>
<claim id="CLM-00097">
<claim-text><highlight><bold>97</bold></highlight>. A computer readable medium for providing a virtual agent, wherein the medium detects one or more events corresponding to a first virtual agent and the behavior of the first virtual agent is determined by a plurality of first agent parameters; the plurality of first agent parameters are updated based on a current first agent parameter with each detected event such that the behavior of the first virtual agent is continuously modified with each detected event; and wherein the events include an interaction between the first virtual agent and a second virtual agent controlled by a second agent parameter and an interaction between the first virtual agent and at least one of an operation and an input by an operator. </claim-text>
</claim>
<claim id="CLM-00098">
<claim-text><highlight><bold>98</bold></highlight>. A computer readable medium for providing an agent, wherein an agent parameter which is configured to determine a behavior of agent is randomly generated; and wherein the agent is stored in a memory device. </claim-text>
</claim>
<claim id="CLM-00099">
<claim-text><highlight><bold>99</bold></highlight>. A computer readable medium for providing an agent, wherein the medium stores a first agent software; wherein an agent parameter controlling a behavior of an agent is stored; wherein the first agent software is executed using the agent parameter to control the behavior of the agent; and wherein the agent parameter is sent to a remote computer storing a second agent software which is substantially the same as the first agent software so that the second software can be executed using the agent parameter to control the behavior of the agent. </claim-text>
</claim>
<claim id="CLM-00100">
<claim-text><highlight><bold>100</bold></highlight>. A computer readable medium for controlling a virtual agent, wherein the medium provides a virtual agent having a plurality of agent parameters, the agent parameters configured to determine the behavior of the virtual agent; wherein the agent parameters are sent to a recipient through a network; wherein a state of the virtual agent is set to an absent state corresponding to sending the agent parameters to the recipient; and wherein the virtual agent is selectively displayed on the display unit according to the state, wherein the virtual agent is displayed on a display unit when the state represents other than the absent state.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005062A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005062A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005062A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005062A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005062A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005062A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005062A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005062A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030005062A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030005062A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030005062A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030005062A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030005062A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030005062A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030005062A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030005062A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030005062A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030005062A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030005062A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030005062A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030005062A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030005062A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030005062A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030005062A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030005062A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030005062A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00026">
<image id="EMI-D00026" file="US20030005062A1-20030102-D00026.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00027">
<image id="EMI-D00027" file="US20030005062A1-20030102-D00027.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00028">
<image id="EMI-D00028" file="US20030005062A1-20030102-D00028.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00029">
<image id="EMI-D00029" file="US20030005062A1-20030102-D00029.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00030">
<image id="EMI-D00030" file="US20030005062A1-20030102-D00030.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00031">
<image id="EMI-D00031" file="US20030005062A1-20030102-D00031.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00032">
<image id="EMI-D00032" file="US20030005062A1-20030102-D00032.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00033">
<image id="EMI-D00033" file="US20030005062A1-20030102-D00033.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00034">
<image id="EMI-D00034" file="US20030005062A1-20030102-D00034.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00035">
<image id="EMI-D00035" file="US20030005062A1-20030102-D00035.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00036">
<image id="EMI-D00036" file="US20030005062A1-20030102-D00036.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00037">
<image id="EMI-D00037" file="US20030005062A1-20030102-D00037.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00038">
<image id="EMI-D00038" file="US20030005062A1-20030102-D00038.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00039">
<image id="EMI-D00039" file="US20030005062A1-20030102-D00039.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00040">
<image id="EMI-D00040" file="US20030005062A1-20030102-D00040.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00041">
<image id="EMI-D00041" file="US20030005062A1-20030102-D00041.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00042">
<image id="EMI-D00042" file="US20030005062A1-20030102-D00042.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00043">
<image id="EMI-D00043" file="US20030005062A1-20030102-D00043.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00044">
<image id="EMI-D00044" file="US20030005062A1-20030102-D00044.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00045">
<image id="EMI-D00045" file="US20030005062A1-20030102-D00045.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00046">
<image id="EMI-D00046" file="US20030005062A1-20030102-D00046.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00047">
<image id="EMI-D00047" file="US20030005062A1-20030102-D00047.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00048">
<image id="EMI-D00048" file="US20030005062A1-20030102-D00048.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00049">
<image id="EMI-D00049" file="US20030005062A1-20030102-D00049.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00050">
<image id="EMI-D00050" file="US20030005062A1-20030102-D00050.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00051">
<image id="EMI-D00051" file="US20030005062A1-20030102-D00051.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00052">
<image id="EMI-D00052" file="US20030005062A1-20030102-D00052.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00053">
<image id="EMI-D00053" file="US20030005062A1-20030102-D00053.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00054">
<image id="EMI-D00054" file="US20030005062A1-20030102-D00054.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
