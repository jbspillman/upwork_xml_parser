<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002060A1-20030102-P00001.TIF SYSTEM "US20030002060A1-20030102-P00001.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-P00002.TIF SYSTEM "US20030002060A1-20030102-P00002.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-P00003.TIF SYSTEM "US20030002060A1-20030102-P00003.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-P00004.TIF SYSTEM "US20030002060A1-20030102-P00004.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-P00005.TIF SYSTEM "US20030002060A1-20030102-P00005.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-P00006.TIF SYSTEM "US20030002060A1-20030102-P00006.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-P00007.TIF SYSTEM "US20030002060A1-20030102-P00007.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-P00008.TIF SYSTEM "US20030002060A1-20030102-P00008.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-P00009.TIF SYSTEM "US20030002060A1-20030102-P00009.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-P00010.TIF SYSTEM "US20030002060A1-20030102-P00010.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-P00011.TIF SYSTEM "US20030002060A1-20030102-P00011.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-P00012.TIF SYSTEM "US20030002060A1-20030102-P00012.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-P00013.TIF SYSTEM "US20030002060A1-20030102-P00013.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00000.TIF SYSTEM "US20030002060A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00001.TIF SYSTEM "US20030002060A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00002.TIF SYSTEM "US20030002060A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00003.TIF SYSTEM "US20030002060A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00004.TIF SYSTEM "US20030002060A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00005.TIF SYSTEM "US20030002060A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00006.TIF SYSTEM "US20030002060A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00007.TIF SYSTEM "US20030002060A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00008.TIF SYSTEM "US20030002060A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00009.TIF SYSTEM "US20030002060A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00010.TIF SYSTEM "US20030002060A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00011.TIF SYSTEM "US20030002060A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00012.TIF SYSTEM "US20030002060A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00013.TIF SYSTEM "US20030002060A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00014.TIF SYSTEM "US20030002060A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00015.TIF SYSTEM "US20030002060A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00016.TIF SYSTEM "US20030002060A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00017.TIF SYSTEM "US20030002060A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00018.TIF SYSTEM "US20030002060A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00019.TIF SYSTEM "US20030002060A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00020.TIF SYSTEM "US20030002060A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00021.TIF SYSTEM "US20030002060A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00022.TIF SYSTEM "US20030002060A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00023.TIF SYSTEM "US20030002060A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00024.TIF SYSTEM "US20030002060A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00025.TIF SYSTEM "US20030002060A1-20030102-D00025.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00026.TIF SYSTEM "US20030002060A1-20030102-D00026.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00027.TIF SYSTEM "US20030002060A1-20030102-D00027.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00028.TIF SYSTEM "US20030002060A1-20030102-D00028.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00029.TIF SYSTEM "US20030002060A1-20030102-D00029.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00030.TIF SYSTEM "US20030002060A1-20030102-D00030.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00031.TIF SYSTEM "US20030002060A1-20030102-D00031.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00032.TIF SYSTEM "US20030002060A1-20030102-D00032.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00033.TIF SYSTEM "US20030002060A1-20030102-D00033.TIF" NDATA TIF>
<!ENTITY US20030002060A1-20030102-D00034.TIF SYSTEM "US20030002060A1-20030102-D00034.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002060</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10033486</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020520</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2000-403297</doc-number>
</priority-application-number>
<filing-date>20001228</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-000671</doc-number>
</priority-application-number>
<filing-date>20010105</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-001849</doc-number>
</priority-application-number>
<filing-date>20010109</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-000672</doc-number>
</priority-application-number>
<filing-date>20010105</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/00</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>B41J001/00</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>358</class>
<subclass>001900</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Apparatus for generating two color printing data, a method for generating two color printing data and recording media</title-of-invention>
</technical-information>
<continuity-data>
<non-provisional-of-provisional>
<document-id>
<doc-number>60317918</doc-number>
<document-date>20010907</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Kazuyuki</given-name>
<family-name>Yokoyama</family-name>
</name>
<residence>
<residence-non-us>
<city>Matsumoto-shi</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Yukiharu</given-name>
<family-name>Horiuchi</family-name>
</name>
<residence>
<residence-non-us>
<city>Chino-shi</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Katsuhito</given-name>
<family-name>Kitahara</family-name>
</name>
<residence>
<residence-non-us>
<city>Kagashima-shi</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>EPSON RESEARCH AND DEVELOPMENT INC</name-1>
<name-2>INTELLECTUAL PROPERTY DEPT</name-2>
<address>
<address-1>150 RIVER OAKS PARKWAY, SUITE 225</address-1>
<city>SAN JOSE</city>
<state>CA</state>
<postalcode>95134</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">&lsqb;Problem&rsqb; To provide a two-color print data generating apparatus, two-color print data generating method, and data storage medium for generating two-color print data based on color-converted image data in which the color of each pixel in full-color data that is the print object is converted to a print color printable by means of a background color, main color, or secondary color. </paragraph>
<paragraph id="A-0002" lvl="0">&lsqb;Means for solving the problem&rsqb; color-reduced image data generator <highlight><bold>201 </bold></highlight>converts data for a full-color image that is the print object to reduced-color image data reduced to a specific number of colors. color conversion unit <highlight><bold>202 </bold></highlight>generates color-converted image data in which the specified colors to which the reduced-color image data is reduced are converted to colors that can be printed by the printer. print data conversion unit <highlight><bold>203 </bold></highlight>converts the color converted color-converted image data to two-color print data that can be printed using two colors. color conversion selection unit <highlight><bold>204 </bold></highlight>sets the color conversion method and sets specific color conversion parameters based on the selected color conversion method. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Technical Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to a two-color print data generator, two-color print data generating method, and data storage medium. More specifically, the invention relates to a two-color print data generator for generating two-color print data based on color-converted image data converting the color of each pixel in a full-color image to be printed to printable colors that can be printed using a background color, main color, and secondary color, a two-color print data generating method, and a data storage medium. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Methods and devices are available for converting full-color data to full-color print data when a print command for printing a print object comprising full-color data is issued to a printer in a POS terminal system having a full-color printer, and full-color printing is possible by inputting this full-color data to the full-color printer. The color of each pixel in the full-color data is digitized typically using either a RGB data format or CMY data format. Using the RGB data format it is possible to represent 256*256*256&equals;16,777,216 colors using the possible combinations of red, green, and blue luminance values each digitized as an integer in the range from 0 to 255. With the CMY data format, it is possible to represent 256*256*256&equals;16,777,216 colors using the possible combinations of cyan, magenta, and yellow luminance values each digitized as an integer in the range from 0 to 255. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> &lsqb;Problem to be resolved by the invention&rsqb;</paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Printers for printing two colors are mostly used as the printers in POS terminal systems rather than full-color printers for reasons including a lower printing cost. However, while it is necessary to input two-color print data converted from full-color data to the two-color printer, methods and means for converting full-color data to two-color print data have not been available. Note that the two colors printable by a two-color printer are referred to as the &ldquo;main color&rdquo; and the &ldquo;secondary color,&rdquo; and the color of the printing paper is called the &ldquo;background color.&rdquo; </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The present invention is therefore directed to a solution for the above problem and an object of the invention is to provide a two-color print data generator for generating two-color print data based on color-converted image data converting the color of each pixel in the full-color data to be printed to print colors that can be printed using the background color, main color, and secondary color, and to a two-color print data generating method and data storage medium. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> &lsqb;Means for solving the problem&rsqb;</paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> A first aspect of the two-color print data generating method according to the present invention is a method for generating two-color print data having a main color and a secondary color by means of the following steps (a) and (b), that is: </paragraph>
<paragraph id="P-0010" lvl="2"><number>&lsqb;0010&rsqb;</number> (a) a color reduction step for generating reduced-color image data in which each pixel color of full-color data is reduced to any one of the following specified colors denoted by color intensity of three primary colors, </paragraph>
<paragraph id="P-0011" lvl="3"><number>&lsqb;0011&rsqb;</number> (color 1, color 2, color 3)&equals;(i, i, j) </paragraph>
<paragraph id="P-0012" lvl="3"><number>&lsqb;0012&rsqb;</number> (color 1, color 2, color 3)&equals;(i, j, i) </paragraph>
<paragraph id="P-0013" lvl="3"><number>&lsqb;0013&rsqb;</number> (color 1, color 2, color 3)&equals;(i, j, j) </paragraph>
<paragraph id="P-0014" lvl="3"><number>&lsqb;0014&rsqb;</number> (color 1, color 2, color 3)&equals;(j, i, i) </paragraph>
<paragraph id="P-0015" lvl="3"><number>&lsqb;0015&rsqb;</number> (color 1, color 2, color 3)&equals;(j, i, j) </paragraph>
<paragraph id="P-0016" lvl="3"><number>&lsqb;0016&rsqb;</number> (color 1, color 2, color 3)&equals;(j, j, i) </paragraph>
<paragraph id="P-0017" lvl="3"><number>&lsqb;0017&rsqb;</number> (color 1, color 2, color 3)&equals;(j, j, j); and </paragraph>
<paragraph id="P-0018" lvl="2"><number>&lsqb;0018&rsqb;</number> (b) a color conversion step for generating two-color print data by converting each specified color in the reduced-color image data to a main color, secondary color, or background color according to the following conditions: </paragraph>
<paragraph id="P-0019" lvl="3"><number>&lsqb;0019&rsqb;</number> (condition 1) convert the specified color denoted as (color 1, color 2, color 3)&equals;(i, i, i) to the main color; </paragraph>
<paragraph id="P-0020" lvl="3"><number>&lsqb;0020&rsqb;</number> (condition 2) convert the specified color denoted as (color 1, color 2, color 3)&equals;(j, j, j) to the background color; </paragraph>
<paragraph id="P-0021" lvl="3"><number>&lsqb;0021&rsqb;</number> (condition 3) convert the specified colors denoted as (color 1, color 2, color 3) &ne;(j, j, j) and (color 1, color 2, color 3) &ne;(i, i, i) to the secondary color. The first color, second color, and third color are preferably, in no particular order, red, green, and blue, or in no particular order cyan, magenta, and yellow. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Preferably, each pixel of the full-color data is denoted (color 1, color 2, color 3)&equals;(k<highlight><subscript>1</subscript></highlight>-1, k<highlight><subscript>2</subscript></highlight>-1, k<highlight><subscript>3</subscript></highlight>-1) (where k<highlight><subscript>1</subscript></highlight>, k<highlight><subscript>2</subscript></highlight>, k<highlight><subscript>3 </subscript></highlight>are integers of 3 or greater), threshold values defined for the first color, second color, and third color and the values k<highlight><subscript>1</subscript></highlight>-1, k<highlight><subscript>2</subscript></highlight>-1, k<highlight><subscript>3</subscript></highlight>-1 are compared in step (a), and each pixel color of the full-color data is reduced to one of the specified colors denoted by i or j based on the result of the comparison. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> A further aspect of a two-color print data generating method according to the present invention is a two-color print data generating method having a main color and secondary color and comprising the following steps (a) to (c). That is: </paragraph>
<paragraph id="P-0024" lvl="2"><number>&lsqb;0024&rsqb;</number> (a) a color reduction step for generating reduced-color image data in which each pixel color in full-color data is reduced to one of a specified number of colors; </paragraph>
<paragraph id="P-0025" lvl="2"><number>&lsqb;0025&rsqb;</number> (b) a color conversion step for generating two-color print data by converting each specified color in the reduced-color image data to a main color, secondary color, or background color; </paragraph>
<paragraph id="P-0026" lvl="2"><number>&lsqb;0026&rsqb;</number> (c) a color conversion selection step for setting the main color and secondary color, and selecting as the color conversion method used in the color conversion step (b) one of the following steps: </paragraph>
<paragraph id="P-0027" lvl="3"><number>&lsqb;0027&rsqb;</number> (b1) a first color conversion process for uniformly converting based on predefined conditions each specified color in the reduced-color image data to the main color, secondary color, or background color; and </paragraph>
<paragraph id="P-0028" lvl="3"><number>&lsqb;0028&rsqb;</number> (b2) a second conversion process for desirably converting each specified color in the reduced-color image data to the main color, secondary color, or background color based on a changeable conversion table linking each specified color to the main color, secondary color, or background color. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> A data storage medium according to the present invention is a data storage medium recording a program of the above two-color print data generating method. A two-color print data generating apparatus according to the present invention is an apparatus achieving the items specified by the above two-color print data generating method. </paragraph>
</section>
<section>
<heading lvl="1">Description of Preferred Embodiments </heading>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> A preferred embodiment of the present invention is described below with reference to the accompanying figures. It will be noted that the following embodiments are described by way of example only and shall not limit the scope of the present invention. Therefore, it will be obvious to one with ordinary skill in the related art that alternative embodiments can be achieved by replacing some or all of the elements described below with an equivalent, and that all such variations are included in the scope of this invention. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> (Example of a two-color print data generator) </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 32</cross-reference> shows the position of a two-color print data generator. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The host <highlight><bold>102</bold></highlight> sends a print command for printing full-color data that is the print object stored in memory in the host <highlight><bold>102</bold></highlight> through a two-color print data generator <highlight><bold>101</bold></highlight> to the two-color printer <highlight><bold>103</bold></highlight>. The two-color print data generator <highlight><bold>101</bold></highlight> converts the full-color data to two-color print data, and outputs the two-color print data with the print command to the two-color printer <highlight><bold>103</bold></highlight>. Based on the received print command and two-color print data, the two-color printer <highlight><bold>103</bold></highlight> then prints to printing paper. The full-color data to be printed can be input to the two-color print data generator <highlight><bold>101</bold></highlight> from an image input device, or a function for generating or inputting full-color data can be disposed in the two-color print data generator <highlight><bold>101</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The two-color print data generator <highlight><bold>101</bold></highlight> can also be built in to the host <highlight><bold>102</bold></highlight> and/or two-color printer <highlight><bold>103</bold></highlight> as a software or a hardware function. Specific examples for achieving this functionality in software and/or hardware include a driver for converting full-color data output from an application program run on the host <highlight><bold>102</bold></highlight> to print data and sending the print data to the two-color printer <highlight><bold>103</bold></highlight>, and a dedicated interface card built in to the host for converting full-color data to print data. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> A two-color print data generator according to the present invention has a color-reduced image data generator <highlight><bold>201</bold></highlight> for reducing the color of each pixel in the full-color data that is the print object requested by the host for printing to a specific number of designated colors to generate reduced-color image data, and a print data generator <highlight><bold>205</bold></highlight> for converting the designated colors in the reduced-color image data to the main color, secondary color, or background color to generate the two-color print data. It also has a color conversion selection unit for setting the main color and secondary color, selecting the color conversion method, and inputting specific settings based on the color conversion method. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33</cross-reference> is a function block diagram of the two-color print data generator. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> The two-color print data generator <highlight><bold>101</bold></highlight> has a reduced-color image data generating unit <highlight><bold>201</bold></highlight>, print data generating unit <highlight><bold>205</bold></highlight>, and color conversion selection unit <highlight><bold>204</bold></highlight>. The print data generating unit <highlight><bold>205</bold></highlight> has a color conversion unit <highlight><bold>202</bold></highlight> and print data conversion unit <highlight><bold>203</bold></highlight>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The color-reduced image data generator <highlight><bold>201</bold></highlight> reads the full-color data print object stored in the full-color data storage <highlight><bold>211</bold></highlight>, converts the read full-color data to reduced-color image data reduced to a specific number of colors, and stores the converted reduced-color image data to reduced-color image data memory <highlight><bold>212</bold></highlight>. For example, 16-bit or 24-bit full-color data is converted by an error diffusion process or other method to RGB format reduced-color image data reduced to 8 colors. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The color conversion unit <highlight><bold>202</bold></highlight> reads the stored reduced-color image data from the reduced-color image data memory <highlight><bold>212</bold></highlight>, reads the parameters and program for running the color conversion method selected by the color conversion selection unit <highlight><bold>204</bold></highlight> (described below) from settings storage <highlight><bold>215</bold></highlight>, runs the conversion program to generate color-converted image data in which each specified color in the reduced-color image data is converted to any color printable (referred to below as &ldquo;printable colors&rdquo;) by the printer, and stores the resulting color-converted image data to color-converted image data storage <highlight><bold>213</bold></highlight>. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> The print data conversion unit <highlight><bold>203</bold></highlight> converts the color-converted image data to the two-color print data specific to the connected printer <highlight><bold>103</bold></highlight>, and stores the two-color print data in print data memory <highlight><bold>214</bold></highlight>. For example, if the printer <highlight><bold>103</bold></highlight> is a thermal line printer, data is converted to raster data; if a serial inkjet printer, data is converted to bit image data of a unit corresponding to the number of nozzles in the printer. In other words, the color-converted image data is converted to data matching the specific structure of each printer, such as the print head and buffer for receiving print data. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The color conversion selection unit <highlight><bold>204</bold></highlight> selects a color conversion method for converting each of the reduced colors to a color printable by the printer, setting the necessary color conversion parameters according to the selected method, and storing the parameters to the settings storage <highlight><bold>215</bold></highlight>. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> Color conversion methods include a fixed conversion method for converting each of the reduced colors to a fixed print color, and an adjustable conversion method for converting each specified color to a desired print color according to the print method by configuring the conversion tables relating printable colors and each specified color in the reduced-color image data so that they can be freely modified by the user. The color-converted image data is generated by converting each specified color to a printable color based on fixed conditions the user cannot change when a fixed conversion method is selected, and when an adjustable conversion method is selected color-converted image data is generated by converting each specified color to a printable color based on a conversion table that can be defined and changed by the user according to the print method. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 34</cross-reference> shows reduced-color images and color-converted images. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> If the number of reduced colors is eight, full-color data expressed by the color intensity of each RGB color is converted by a simple color reduction process to a reduced-color image of eight colors as shown in the figure. The color intensity of each pixel in full-color image data containing k<highlight><subscript>R</subscript></highlight>&times;k<highlight><subscript>G</subscript></highlight>&times;k<highlight><subscript>B </subscript></highlight>colors can be denoted as (R, G, B)&equals;(k<highlight><subscript>R</subscript></highlight>-1, k<highlight><subscript>G</subscript></highlight>-1, k<highlight><subscript>B</subscript></highlight>-1). To reduce the color of each pixel to eight colors, each color intensity value k<highlight><subscript>R</subscript></highlight>-1, k<highlight><subscript>G</subscript></highlight>-1, k<highlight><subscript>B</subscript></highlight>-1 is compared with a threshold value defined for each RGB color, and the pixel is converted to a 0 if the value of each color intensity value k<highlight><subscript>R</subscript></highlight>-1, k<highlight><subscript>G</subscript></highlight>-1, k<highlight><subscript>B</subscript></highlight>-1 is less than the threshold value and converted to a 1 if equal to or greater than the threshold value, thus generating reduced-color image data containing eight colors. The full-color data is thus converted to reduced-color image data expressed with the eight colors red, green, blue, cyan, magenta, yellow, black, and white. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The reduced-color image data thus color-reduction processed to eight colors is then converted by a fixed conversion method to color-converted image data represented by three colors, the two colors printable by the printer and the background color of the printing paper. The two colors printable by the printer are referred to herein as the main color and the secondary color. More specifically, the color of each pixel in the reduced-color image data represented by the digitized (R, G, B) color intensity values is converted to the main color, secondary color, or background color based on the following three conditions. </paragraph>
<paragraph id="P-0046" lvl="7"><number>&lsqb;0046&rsqb;</number> Condition 1: </paragraph>
<paragraph id="P-0047" lvl="2"><number>&lsqb;0047&rsqb;</number> If (R, G, B)&equals;(0, 0, 0), convert to the main color. </paragraph>
<paragraph id="P-0048" lvl="7"><number>&lsqb;0048&rsqb;</number> Condition 2: </paragraph>
<paragraph id="P-0049" lvl="2"><number>&lsqb;0049&rsqb;</number> If (R, G, B)&equals;(1, 1, 1), convert to the background color. </paragraph>
<paragraph id="P-0050" lvl="7"><number>&lsqb;0050&rsqb;</number> Condition 3: </paragraph>
<paragraph id="P-0051" lvl="2"><number>&lsqb;0051&rsqb;</number> If (R, G, B)&ne;(1, 1, 1) and </paragraph>
<paragraph id="P-0052" lvl="3"><number>&lsqb;0052&rsqb;</number> (R, G, B)&ne;(0, 0, 0), convert to the secondary color. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> For example, if the main color is black, the secondary color is red, and the background color is white, the reduced-color image data is converted to color-converted image data as shown in <cross-reference target="DRAWINGS">FIG. 34</cross-reference>. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 35</cross-reference> is used to describe an example of a conversion table used in the fixed conversion method. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Based on specific defined conditions, a fixed conversion method uniformly converts white, for example, in the reduced-color image data to the background color, and converts colors other than white in the reduced-color image data to the main color or secondary color. Therefore, if the digitized color of each pixel is color converted based on the above three conditions, the eight colors in the reduced-color image data will be converted as follows to the three colors of the main color, secondary color, and background color. Note that F(color) below is the converted color.  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="1" colwidth="70PT" align="left"/>
<colspec colname="2" colwidth="49PT" align="left"/>
<colspec colname="3" colwidth="42PT" align="left"/>
<colspec colname="4" colwidth="56PT" align="left"/>
<thead>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="4" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>main color &equals;</entry>
<entry>F(black),</entry>
<entry>black &equals;</entry>
<entry>(R,G,B) &equals; (0,0,0)</entry>
</row>
<row>
<entry>secondary color &equals;</entry>
<entry>F(blue),</entry>
<entry>blue &equals;</entry>
<entry>(R,G,B) &equals; (0,0,1)</entry>
</row>
<row>
<entry>secondary color &equals;</entry>
<entry>F(green),</entry>
<entry>green &equals;</entry>
<entry>(R,G,B) &equals; (0,1,0)</entry>
</row>
<row>
<entry>secondary color &equals;</entry>
<entry>F(cyan),</entry>
<entry>cyan &equals;</entry>
<entry>(R,G,B) &equals; (0,1,1)</entry>
</row>
<row>
<entry>secondary color &equals;</entry>
<entry>F(red),</entry>
<entry>red &equals;</entry>
<entry>(R,G,B) &equals; (1,0,0)</entry>
</row>
<row>
<entry>secondary color &equals;</entry>
<entry>F(magenta),</entry>
<entry>magenta &equals;</entry>
<entry>(R,G,B) &equals; (1,0,1)</entry>
</row>
<row>
<entry>secondary color &equals;</entry>
<entry>F(yellow),</entry>
<entry>yellow &equals;</entry>
<entry>(R,G,B) &equals; (1,1,0)</entry>
</row>
<row>
<entry>background color &equals;</entry>
<entry>F(white),</entry>
<entry>white &equals;</entry>
<entry>(R,G,B) &equals; (1,1,1)</entry>
</row>
<row><entry namest="1" nameend="4" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Therefore, if the main color is black, secondary color is red, and background color is white, for example, red, green, blue, cyan, magenta, and yellow in the reduced-color image data will also be converted to red. However, if the main color is blue, secondary color is red, and background color is white, red, green, blue, cyan, magenta, and yellow in the reduced-color image data will all be converted to red, and even blue pixels in the reduced-color image data will be converted to red. Colors not present in the reduced-color image data can also be specified as the main and secondary colors. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> (Example of a two-color print data generating method) </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> A two-color print data generating method according to the present invention has (a) a reduced-color image data generating step for generating reduced-color image data reducing the color of each pixel in the full-color data print object to one of a specified number of colors, and (b) a print data generating step for generating two-color print data by color converting the specified colors in the reduced-color image data to a main color, secondary color, or background color. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 36</cross-reference> is an example of a flow chart of this two-color print data generating process. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> First, full-color data is read from the full-color data storage <highlight><bold>211</bold></highlight> (S<highlight><bold>501</bold></highlight>). The color of each pixel in full-color data is expressed using a numerical value for the color intensity of primary colors using an RGB data format, CMY data format (CMYK data format), or other color expression method. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Next, the read full-color data is converted to reduced-color image data reduced to a specified number of colors (S<highlight><bold>502</bold></highlight>), and the converted reduced-color image data is stored to reduced-color image data memory <highlight><bold>212</bold></highlight> (S<highlight><bold>503</bold></highlight>). For example, full-color data denoted using the RGB format with R (&equals;red), G (&equals;green), and B (&equals;blue) color intensity values ranging from 0 to 255 is compared with a threshold value predefined for each color, and a value of 0 is assigned if the color intensity value is less than the threshold value and a 1 is assigned if greater than or equal to the threshold value, generating reduced-color image data containing eight colors. A simple color reduction processing method, dithering, error diffusion, or other method can be used for color reduction processing. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> Next, preset color conversion settings are read from settings storage <highlight><bold>215</bold></highlight> (S<highlight><bold>504</bold></highlight>) and which color conversion method is selected is determined from the read color conversion settings (S<highlight><bold>505</bold></highlight>). </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> If the color conversion method is a fixed conversion method (S<highlight><bold>505</bold></highlight> returns fixed conversion), color-reduced white is set to the background color (&equals;white) and colors other than the color-reduced white are uniformly converted to the main color or secondary color to generate the color-converted image data (S<highlight><bold>506</bold></highlight>), and the generated color-converted image data is stored to the color-converted image data storage <highlight><bold>213</bold></highlight> (S<highlight><bold>507</bold></highlight>). For example, the eight colors represented as digitized color intensity values based on the above-described conditions are converted to the main color (&equals;black), secondary color (&equals;red), and the background color (&equals;white). Therefore, if the color of each pixel in the color-converted image data is written with (R,G,B) notation, black&equals;(R,G,B)&equals;(0,0,0), red&equals;(R,G,B)&equals;(1,0,0), and white&equals;(R,G,B)&equals;(1,1,1). </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Next, the color of each pixel in the color-converted image data is converted to two-color print data printable by the printer using the main color and secondary color (S<highlight><bold>508</bold></highlight>), and the converted two-color print data is stored to the print data memory <highlight><bold>214</bold></highlight> (S<highlight><bold>509</bold></highlight>). More specifically, the color of each pixel in the color-converted image data is digitized by applying the following equation based on the combination (main color, secondary color) of digitized main color and secondary color values. </paragraph>
<paragraph id="P-0065" lvl="2"><number>&lsqb;0065&rsqb;</number> main color&equals;(main color, secondary color)&equals;(1,0) </paragraph>
<paragraph id="P-0066" lvl="2"><number>&lsqb;0066&rsqb;</number> secondary color&equals;(main color, secondary color)&equals;(0,1) </paragraph>
<paragraph id="P-0067" lvl="2"><number>&lsqb;0067&rsqb;</number> background color&equals;(main color, secondary color)&equals;(0,0) </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> Note that in step S<highlight><bold>508</bold></highlight> the color-converted image data is converted to print data according to the specific configuration of the printer, including the print head and buffer for receiving the print data. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> If the color conversion method is an adjustable color conversion method (S<highlight><bold>505</bold></highlight> returns adjustable conversion), each specified color in the reduced-color image data is converted to the main color, secondary color, or background color according to a user-definable and editable conversion table (S<highlight><bold>514</bold></highlight>). It is also possible at this time to display an input screen for selecting the assignment of each specified color to the main color, secondary color, or background color so that the user can set and change the conversion table according to the print method, for example. For example, if H (color) is the color converted by the conversion table, the color can be defined as follows.  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="1" colwidth="70PT" align="left"/>
<colspec colname="2" colwidth="49PT" align="left"/>
<colspec colname="3" colwidth="42PT" align="left"/>
<colspec colname="4" colwidth="56PT" align="left"/>
<thead>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="4" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>main color &equals;</entry>
<entry>H(blue),</entry>
<entry>blue &equals;</entry>
<entry>(R,G,B) &equals; (0,0,1)</entry>
</row>
<row>
<entry>secondary color &equals;</entry>
<entry>H(green),</entry>
<entry>green &equals;</entry>
<entry>(R,G,B) &equals; (0,1,0)</entry>
</row>
<row>
<entry>main color &equals;</entry>
<entry>H(cyan),</entry>
<entry>cyan &equals;</entry>
<entry>(R,G,B) &equals; (0,1,1)</entry>
</row>
<row>
<entry>secondary color &equals;</entry>
<entry>H(red),</entry>
<entry>red &equals;</entry>
<entry>(R,G,B) &equals; (1,0,0)</entry>
</row>
<row>
<entry>main color &equals;</entry>
<entry>H(magenta),</entry>
<entry>magenta &equals;</entry>
<entry>(R,G,B) &equals; (1,0,1)</entry>
</row>
<row>
<entry>secondary color &equals;</entry>
<entry>H(yellow),</entry>
<entry>yellow &equals;</entry>
<entry>(R,G,B) &equals; (1,1,0)</entry>
</row>
<row>
<entry>main color &equals;</entry>
<entry>H(black),</entry>
<entry>black &equals;</entry>
<entry>(R,G,B) &equals; (0,0,0)</entry>
</row>
<row><entry namest="1" nameend="4" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> Next, the color-converted image data generated in S<highlight><bold>514</bold></highlight> is stored to the color-converted image data storage <highlight><bold>213</bold></highlight> (S<highlight><bold>515</bold></highlight>). As in step S<highlight><bold>508</bold></highlight>, the color-converted image data is then converted to two-color print data printable by the printer (S<highlight><bold>516</bold></highlight>), and the converted two-color print data is stored to the print data memory <highlight><bold>214</bold></highlight> (S<highlight><bold>517</bold></highlight>). </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> The two-color print data generating method of the present invention also has a color conversion data setting step for setting the main colors and secondary colors, selecting the fixed conversion method or adjustable conversion method as the color conversion method, and setting the specific settings when the adjustable conversion method is selected. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 37</cross-reference> is an example of a flow chart for the color conversion data setting process. This color conversion data setting process selects the color conversion method for converting each specified color-reduction processed color to a printable color, and setting required color conversion data based on the selected color conversion method. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> First, the main colors and secondary colors are set from the colors printable by the printer (S<highlight><bold>601</bold></highlight>). For example, the main color is set to black and the secondary color is set to red, both being printable by the printer. The settings can be input by the user using a keyboard, mouse, or other input device. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> The color conversion method is set next (S<highlight><bold>602</bold></highlight>). More specifically, the user selects either the fixed conversion method or adjustable conversion method by way of an input device. The selected color conversion method is then evaluated (S<highlight><bold>603</bold></highlight>), and if the fixed conversion method is the color conversion method (S<highlight><bold>603</bold></highlight> returns fixed conversion), control moves to the next step S<highlight><bold>606</bold></highlight>. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> If the color conversion method is the adjustable conversion method (S<highlight><bold>603</bold></highlight> returns adjustable conversion), the above-noted conversion table is set or changed according to the print method, for example, (S<highlight><bold>605</bold></highlight>), and control moves to the next step S<highlight><bold>606</bold></highlight>. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> Finally, the settings set in steps S<highlight><bold>601</bold></highlight>, S<highlight><bold>603</bold></highlight>, and S<highlight><bold>605</bold></highlight> are stored to the settings storage <highlight><bold>215</bold></highlight> (S<highlight><bold>606</bold></highlight>), and the color conversion data setting process ends. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> A data storage medium according to the present invention can record a program having the steps of the above-described two-color print data generating method. In addition, the data storage medium of the present invention may be a Compact Disc, floppy disk, hard disk, magneto-optical disc, Digital Versatile Disc, magnetic tape, or memory card. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> (Application with OPOS drivers, for example) </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> The two-color print data generating method of the present invention can also be applied to a device control system such as provided by OLE for Retail POS (referred to below as OPOS), a printer driver that operates under the Windows (registered trademark) operating system. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> This is described with reference to <cross-reference target="DRAWINGS">FIG. 23</cross-reference> and <cross-reference target="DRAWINGS">FIG. 24</cross-reference>. <cross-reference target="DRAWINGS">FIG. 23</cross-reference> shows the basic configuration of OPOS. In the present example device <highlight><bold>74</bold></highlight> is a two-color printer. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> OPOS provides an interface for printers and other peripheral devices that is not model-dependent to POS application programs based on a standard specification and operating under Windows. When the POS application program <highlight><bold>70</bold></highlight> outputs from the printer <highlight><bold>74</bold></highlight>, the data is passed to the printer control object (CO) <highlight><bold>71</bold></highlight>, from there to a service object (SO) <highlight><bold>72</bold></highlight> corresponding to the model of the printer used for printing, and then through the operating system (Windows) <highlight><bold>73</bold></highlight> to the printer <highlight><bold>74</bold></highlight>. If the printer <highlight><bold>74</bold></highlight> is a printer for printing two colors, it is necessary to reduce the colors in an image with many colors for printing. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> Because the service objects <highlight><bold>72</bold></highlight> primarily handle processes specific to each device <highlight><bold>70</bold></highlight> in the device control system provided by OPOS, a color reduction function for generating the reduced-color image data from full-color data, a color conversion function for converting the reduced-color image data to two-color print data, and a function for selecting the color conversion method and enabling the user to control the settings of the selected color conversion method as desired according to the present invention is incorporated in the service object service object <highlight><bold>72</bold></highlight>, and data is sent through the OS <highlight><bold>73</bold></highlight> to the printer <highlight><bold>70</bold></highlight> after conversion to printable image data. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> In other words, when full-color print data is passed from the POS application program <highlight><bold>70</bold></highlight> to the device control system provided by OPOS, the full-color print data is converted in the service object <highlight><bold>72</bold></highlight> to print data for the POS printer based on the specified color reduction method and color conversion process, and then sent through the OS <highlight><bold>73</bold></highlight> to the printer <highlight><bold>74</bold></highlight>. By performing such conversion processes in the service object <highlight><bold>72</bold></highlight>, the individual application programs do not need to run a process for converting full-color data to print data, and application development can thus be made easier. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> The settings screen <highlight><bold>400</bold></highlight> is shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference>. An image adjustment service routine such as this color reduction from full-color data is provided in the service object <highlight><bold>72</bold></highlight>, and displaying a screen such as shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference> is enabled. If color settings <highlight><bold>401</bold></highlight> is selected, for example, a control box <highlight><bold>402</bold></highlight> is displayed so that the color conversion method can be set and the brightness values (threshold values for color reduction of the full-color data) can be set. A color selection box <highlight><bold>403</bold></highlight> also enables selecting the printable first color and second color (main color and secondary color). </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> By predefining these various settings, full-color data can be automatically converted to two-color print data and printed. The settings can also be freely changed as desired according to the image </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> (Applications with a logo data generating apparatus) </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> The two-color print data generating method of the present invention can also be applied to a logo data generating apparatus suitably used with a POS printer as described below. More specifically, a color reduction function for generating reduced-color image data from full-color data, a color conversion function for converting the reduced-color image data to two-color print data, and a function for selecting the color conversion method and enabling the user to control the settings of the selected color conversion method as desired according to the present invention are incorporated in the logo editing tool <highlight><bold>2</bold></highlight> and logo data generating apparatus <highlight><bold>4</bold></highlight> described below, which can generate two-color logo data to be saved in a two-color POS printer. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> An example of a procedure for registering a logo in a printer is described first with reference to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows the outline of a procedure for sending to registering a logo in a printer. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> To send and register logo data the logo to be registered must first be saved. This includes whether the logo to be registered is created new, whether an existing image file is used as is, and whether the file storing a logo in current use is read and edited. The color reduction method and color assignments, and the size, for example, are specified in the source data <highlight><bold>3</bold></highlight> editing process. The source data that is the basis for logo generation can be created new or an existing image file could be used. The logo editing tool <highlight><bold>2</bold></highlight> is used, for example, to create new source data <highlight><bold>3</bold></highlight> to match the logo printing objective. Logo data is often created for a particular printing purpose, including printing coupons, printing a company or store logo, or printing product advertising. The logo editing tool is used in such cases. Creating a specific logo using the logo editing tool is a process of creating text information, capturing a picture, photograph, or other image information, appropriately combining the text and image information to create the desired logo, and matching it to the model-specific conditions of the printer. The logo editing tool is described in detail further below. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> To use existing image data as is, an image file <highlight><bold>82</bold></highlight> is created using a digital camera, scanner, or other general purpose image creation tool <highlight><bold>81</bold></highlight> and used directly as the source logo data. It is not necessary to use the logo editing tool <highlight><bold>2</bold></highlight> when thus using an existing image file <highlight><bold>82</bold></highlight> as is. Data thus created as the basis for logo creation is called the source data <highlight><bold>3</bold></highlight> in this specification. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> The color and size of the source data are adjusted according to the printable colors, the print resolution, and the width of print paper used by in the target printer in which the logo data is registered. The logo data after adjusting the colors in the source data (by a color reduction process, for example), size, and resolution, for example, (this data may be referred to as the logo, logo data, logo information, or print image data) is what is registered in the printer <highlight><bold>60</bold></highlight>. Note that the printable colors are determined by such as the color of ink installed to the target printer, the thermal dye colors, or the colors of the print materials of the print medium. For example, if the printer prints to white paper using colorless (black) and colored (ink) ink, the printable colors are the black, red, and white colors that can be expressed using the print materials. If the target printer is a thermal printer for printing to thermal paper coated with plural colors of thermal dye, the printable colors are the color of the thermal paper itself and the colors that can be produced with the thermal materials. Colors that can be achieved with the ink ribbon or toner installed in the target printer are also printable colors. As further described below, printable colors can also be the intermediate colors obtained by combining the colors of the print materials. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> If a printer <highlight><bold>60</bold></highlight> is connected, such logo data is sent as is to the printer <highlight><bold>60</bold></highlight> and registered in logo memory <highlight><bold>61</bold></highlight> (nonvolatile storage) inside the printer <highlight><bold>60</bold></highlight>. If a printer <highlight><bold>60</bold></highlight> is not connected to the logo editing tool, a logo data registration file for registering the logo data (logo registration file <highlight><bold>5</bold></highlight>) is created. This logo data registration file is a command-attached image file containing the logo data and a command data set required to register the logo data. This enables the logo to be registered as a result of the host device <highlight><bold>50</bold></highlight> reading the logo data registration file without installing a registration program in the host device <highlight><bold>50</bold></highlight>. The logo data registration file (logo registration file <highlight><bold>5</bold></highlight>) is also further described below. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> When a logo is registered in the logo memory <highlight><bold>61</bold></highlight> of the printer, the logo can be printed using a print logo command. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> If a printer not having a logo memory <highlight><bold>61</bold></highlight> is used, the logo data is saved to nonvolatile storage provided in the host device <highlight><bold>50</bold></highlight> so that the logo data can be read appropriately by an application program running on the host device <highlight><bold>50</bold></highlight> and sent to the printer <highlight><bold>60</bold></highlight> for printing. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> (Logo editing tool) </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> The logo editing tool is described next. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> In order to register logo data in the printer the logo to be registered must first be defined. The logo editing tool is used when creating a new logo for a particular logo printing purpose. When creating a new logo, an existing picture, photograph, or other image <highlight><bold>80</bold></highlight> is captured using the logo editing tool <highlight><bold>2</bold></highlight> and combined with text data and/or other images to generate source data <highlight><bold>3</bold></highlight>, which is the basis for an effective logo most suitable to the advertising, announcement, or other objective and comprises image data containing plural objects. Data for gray scale processing is also generated. Logo data is created for a particular printing purpose such as printing coupons, printing a corporate or store logo, or product advertisement. The source data <highlight><bold>3</bold></highlight> is the data used as the basis for printing, and the basic structure of the logo is defined by the logo editing tool <highlight><bold>2</bold></highlight>. It should be noted that the logo editing tool <highlight><bold>2</bold></highlight> can be incorporated in the logo data generating apparatus <highlight><bold>4</bold></highlight>. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> Creating source data <highlight><bold>3</bold></highlight> with the logo editing tool <highlight><bold>2</bold></highlight> involves creating the text information, capturing the picture, photograph, or other image information, and appropriately combining the text and image information to create the data that will be the basis for creating the desired logo. Furthermore, the logo editing tool <highlight><bold>2</bold></highlight> can be configured so that text data can be written to create the source data <highlight><bold>3</bold></highlight> without bringing in an image, or so that images can be drawn. It is also possible to read and re-edit logo data already stored to a logo registration file <highlight><bold>5</bold></highlight>, logo data stored to a bitmap file <highlight><bold>83</bold></highlight>, or source data <highlight><bold>3</bold></highlight> to create the logo. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> The logo editing tool is described in further detail using <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a function block diagram of the logo editing tool <highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> The logo editing tool <highlight><bold>2</bold></highlight> is used to create the basic configuration of an effective logo most appropriate to the advertising, announcement, or other printing purpose. The logo editing tool <highlight><bold>2</bold></highlight> can be used to create source data that is the basis for a logo combining image data and text data, and the created source data can be sent as the source data to the logo data generating apparatus <highlight><bold>4</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) or saved as a source data file <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> The logo editing tool <highlight><bold>2</bold></highlight> comprises an image data capturing means <highlight><bold>31</bold></highlight>, image data storage <highlight><bold>32</bold></highlight>, image data processor <highlight><bold>33</bold></highlight>, text data editor <highlight><bold>34</bold></highlight>, image drawing unit <highlight><bold>35</bold></highlight>, data merging unit <highlight><bold>36</bold></highlight>, source data output unit <highlight><bold>37</bold></highlight>, edit input unit <highlight><bold>38</bold></highlight>, and image data display unit <highlight><bold>39</bold></highlight>. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> The image data capturing means <highlight><bold>31</bold></highlight> reads the image data or text data to obtain the basic data stored to image data storage <highlight><bold>32</bold></highlight>. Note that data for plural images can be captured. The image data can be graphic data stored as an image file to magnetic disk, DC-ROM or other recording medium from which it is read and stored to image data storage <highlight><bold>32</bold></highlight>, or an image can be captured from a digital camera or scanner, for example, and stored. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> Data such as photographic images, animation-like graphic data, geometric shapes, styled text, and various graphic shapes can be read as the graphic data. Image data storage <highlight><bold>32</bold></highlight> can store plural images separately. The image data capturing means <highlight><bold>31</bold></highlight> is also preferably compatible with different software programs for manipulating graphics and image data so that it can read different types of image files. Data for each of the read images can be stored to image data storage <highlight><bold>32</bold></highlight> as independent objects or as image data. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> The image data stored to the image data storage <highlight><bold>32</bold></highlight> is processed as necessary by the image data processor <highlight><bold>33</bold></highlight> to, for example, adjust image size. Using the text data editor <highlight><bold>34</bold></highlight>, it is also possible to create and edit text data based on input from the edit input unit <highlight><bold>38</bold></highlight> and not just image data. It is also possible to specify a particular color for the text data. By thus also enabling text data to be edited, it is also possible to include text data for the advertisement or announcement in the logo. Yet further, graphics can be drawn directly in the logo editing tool <highlight><bold>2</bold></highlight> based on input from the edit input unit <highlight><bold>38</bold></highlight>, which comprises a keyboard and mouse, for example, by also providing image drawing unit <highlight><bold>35</bold></highlight>. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> The captured image data, image-processed image data, drawings created in the logo editing tool <highlight><bold>2</bold></highlight>, and/or text data is then merged by the data merging unit <highlight><bold>36</bold></highlight> to create the desired logo. The data merging unit <highlight><bold>36</bold></highlight> combines multiple image data objects, graphics, and text data objects to create the desired source data. Elements in combining the images and text include, for example, selecting the image or text, and specifying the size and location of each image and text object relative to the overall logo. The source data merged by the data merging unit <highlight><bold>36</bold></highlight> is merged as a combination of independent image and text data objects, and is output by the source data output unit <highlight><bold>37</bold></highlight>. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> It is therefore possible to read image data stored to the image data storage <highlight><bold>32</bold></highlight> as independent image data objects that can be freely combined or layered together. It is also possible to overlay objects created with the text data editor <highlight><bold>34</bold></highlight> and/or image drawing unit <highlight><bold>35</bold></highlight> with objects stored to image data storage <highlight><bold>32</bold></highlight>. The layered objects can be processed independently by object in the image data processor <highlight><bold>33</bold></highlight> and data merging unit <highlight><bold>36</bold></highlight>. When objects overlap, it is also possible to control and change which object is displayed in front. It is also possible to change the size of individual objects. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> The image data display unit <highlight><bold>39</bold></highlight> can display read images, images stored to image data storage <highlight><bold>32</bold></highlight>, and output data from the image data processor <highlight><bold>33</bold></highlight>, data merging unit <highlight><bold>36</bold></highlight>, text data editor <highlight><bold>34</bold></highlight>, and image drawing unit <highlight><bold>35</bold></highlight>. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> The source data output unit <highlight><bold>37</bold></highlight> can send the source data directly to the logo data generating apparatus, or output it as a source logo data file. The data merging unit <highlight><bold>36</bold></highlight> merges the images and other objects combined in the source data so that they can be image processed or manipulated as independent images, for example. Furthermore, when the source data is output as a file, it is output as a metafile for other type of file enabling each of the merged elements to be handled separately. It will be further noted that the image data processor <highlight><bold>33</bold></highlight> and data merging unit <highlight><bold>36</bold></highlight> are shown as separate function blocks in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, but an image processing function can be provided in the data merging unit <highlight><bold>36</bold></highlight> so that image size can be changed as appropriate when merging the logo elements. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> In this case color reduction or other color process is not applied to the image data captured by the logo editing tool <highlight><bold>2</bold></highlight>, but if, for example, the source picture, photograph, or other image <highlight><bold>80</bold></highlight> is full color, the logo editing tool <highlight><bold>2</bold></highlight> could be configured to store the source data <highlight><bold>3</bold></highlight> after first reducing the image to a constant number of colors. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> (Logo data generating apparatus) </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> The source data <highlight><bold>3</bold></highlight> generated by the logo editing tool <highlight><bold>2</bold></highlight> is changed by the logo data generating apparatus <highlight><bold>4</bold></highlight> to a format that can be registered in a particular specific printer to obtain the final logo data. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> Note that the source data obtained by the logo data generating apparatus <highlight><bold>4</bold></highlight> is not limited to the source data <highlight><bold>3</bold></highlight> created by the logo editing tool but also includes existing image file data <highlight><bold>82</bold></highlight> created with an image processing program, and both types of data <highlight><bold>3</bold></highlight> and <highlight><bold>82</bold></highlight> are referred to herein as &ldquo;source data&rdquo;. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> As noted above POS printers are mainly color printers for printing two or three colors. Therefore, if the source data image is full-color or graphic data containing multiple colors (brightness, saturation, and hue), the colors of the source image must be reduced to the printable colors to enable printing on the POS printer. Even when the printer can print only a few colors, printing is not limited to two simple colors as subtle colors can also be printed. For example, if the colors usable on the printer are the two colors red and black and printing is to white paper, shades of black and red can be achieved in gradations by combining plural unit dots to form each pixel unit. It is also possible to express extremely subtle, detailed colors (expressions using intermediate colors) by combining red, black, and white (color of the paper). If the number of colors usable by the printer is three or more, even more complex, subtle printing is possible. To do this it is necessary to specify the color or intermediate color used to represent each color in the source data (this operation is also referred to as specifying color conversions or specifying the color assignments). The logo data generating apparatus <highlight><bold>4</bold></highlight> is used to select the color reduction method used to reduce source data colors and to specify the printable colors, and thus define the color expression of the final logo. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> It is also necessary to adjust the size of the print logo according to the printing paper used because the width of the printing paper (receipt) is different on different printers. It is also necessary to adjust the size of the logo according to the print resolution because the size of the printed logo can differ according to the print resolution of the printer. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> The logo data generating apparatus <highlight><bold>4</bold></highlight> is a device for adjusting the final image of the desired logo, determining the vertical and horizontal print resolution and the width of the paper used by the target printer storing the logo data, and specifying conversion colors as desired from among the printable colors to complete a logo enabling logo printing by the target printer. The logo data generating apparatus <highlight><bold>4</bold></highlight> can also set the connection port, transmission rate, parity check, flow control method, and other settings enabling communication with the target printer. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> The logo data generating apparatus <highlight><bold>4</bold></highlight> reads and applies a conversion process (image adjustment process) matching a source data file <highlight><bold>3</bold></highlight> created with the logo editing tool or an existing image file <highlight><bold>82</bold></highlight> to the specific conditions (specifications) of the target printer to which the logo is to be registered, thus creating a logo for registration in nonvolatile storage in the target printer (note that saving this logo to the printer is also referred to in this specification as &ldquo;registering&rdquo; the logo). The created logo data can also be output as a logo registration file in a specific format. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> (Embodiment of a logo data generating apparatus) </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> An example of logo data generating apparatus <highlight><bold>4</bold></highlight> is described with reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a function block diagram of a logo data generating apparatus according to this example. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> This logo data generating apparatus <highlight><bold>4</bold></highlight> has a source data capture unit <highlight><bold>10</bold></highlight>, source data image display <highlight><bold>11</bold></highlight>, parameter data input means <highlight><bold>12</bold></highlight>, data adjustment processor <highlight><bold>13</bold></highlight>, logo data image display <highlight><bold>15</bold></highlight>, logo data output means <highlight><bold>16</bold></highlight>, and a main controller <highlight><bold>14</bold></highlight> for controlling the other parts. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> The source data capture unit <highlight><bold>10</bold></highlight> gets the source data <highlight><bold>3</bold></highlight> or normal image file <highlight><bold>82</bold></highlight> from the logo editing tool <highlight><bold>2</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) as controlled by the main controller <highlight><bold>14</bold></highlight>. The source data is then stored in the source data capture unit <highlight><bold>10</bold></highlight>. The source data capture unit <highlight><bold>10</bold></highlight> can read different types of files using a file reader (not shown in the figure) or image capturing means (not shown in the figure), or can capture the source data. What types of files can be read can be set appropriately. More specifically, the source data capture unit <highlight><bold>10</bold></highlight> can be a magnetic storage reader (such as a floppy disk drive or hard disk drive), CD-ROM drive, CD-RW drive, DVD drive, scanner, or other type of reading device. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> Once the source data is captured, the main controller <highlight><bold>14</bold></highlight> controls the parameter data input means <highlight><bold>12</bold></highlight> to accept input of the image processing parameters for adjusting the image. This enables the printer name, the colors that can be printed on the printer, resolution, gradations, and other parameters to be input. The main controller <highlight><bold>14</bold></highlight> also controls the source data image display <highlight><bold>11</bold></highlight> at the same time to display the source data image on screen. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> This enables the user to input the required parameter settings while viewing the source data image and studying which color reduction method to use and which colors in the source image to convert to which printable colors. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> After the parameters are set, the settings are sent to the data adjustment processor <highlight><bold>13</bold></highlight> whereby the colors, resolution, size, and other aspects of the source data <highlight><bold>3</bold></highlight> are processed according to the input settings. If the image stays the same size but is printed on a lower resolution printer, the printed image will be larger. Therefore, if it is desirable to keep the size of the print image the same size as the source data image, or if the print image will be wider than the paper width because the printer resolution is low, a process to, for example, reduce the size of the print image is needed. More specifically, the size of the logo registered in the printer must be determined by adjusting the size of the source data according to both the width of the printing paper and the printer resolution. The adjusted source data <highlight><bold>3</bold></highlight> is then presented on the logo data image display <highlight><bold>15</bold></highlight> as the image after these changes are made. It is therefore possible to confirm what the print image resulting from the set parameters will be like. The image adjustment parameters can also be changed while looking at the processed image. If no parameter changes are required and the settings are confirmed, the processed logo data is sent by the main controller <highlight><bold>14</bold></highlight> to the logo data output means <highlight><bold>16</bold></highlight>. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> The logo data output means <highlight><bold>16</bold></highlight> stores the logo data or outputs the logo data as a logo registration file in a special registration format as controlled by the main controller <highlight><bold>14</bold></highlight>, or sends and registers the logo data in the printer. The logo data output means <highlight><bold>16</bold></highlight> can also output the logo data adjusted to the target printer specifications as described above as a single monochrome or color bitmap image file. Files thus produced can be stored in the logo editing tool or to an external data storage medium (such as a magnetic storage medium; not shown in the figure). </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> Note that specifying the color assignments and image processing parameters is described more specifically below using flow charts and sample display screens. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> (Data adjustment processor of the logo data generating apparatus) </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is a detailed function block diagram of the data adjustment processor <highlight><bold>13</bold></highlight> in a logo data generating apparatus. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 25</cross-reference>, the data adjustment processor <highlight><bold>13</bold></highlight> includes a temporary source data buffer <highlight><bold>6</bold></highlight>, image processing means <highlight><bold>7</bold></highlight>, object read/write controller <highlight><bold>8</bold></highlight>, and logo data storage <highlight><bold>9</bold></highlight>. Reference letter A in <cross-reference target="DRAWINGS">FIG. 25</cross-reference> represents an image of source data <highlight><bold>3</bold></highlight>, and b<highlight><bold>1</bold></highlight>, b<highlight><bold>2</bold></highlight>, b<highlight><bold>3</bold></highlight> represent the objects in the source data. Reference letter A&prime; represents the image (logo) after image processing by the data adjustment processor <highlight><bold>13</bold></highlight>, and b<highlight><bold>1</bold></highlight>&prime;, b<highlight><bold>2</bold></highlight>&prime;, b<highlight><bold>3</bold></highlight>&prime; represent the objects in the processed image A&prime;. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> The data adjustment processor is described below with particular reference to processing the objects in the source data. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> Based on the file selection input from parameter data input means <highlight><bold>12</bold></highlight>, main controller <highlight><bold>14</bold></highlight> controls reading source data A by source data capture unit <highlight><bold>10</bold></highlight> from the indicated file. Captured source data A is then stored in the source data capture unit <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> Once source data A is captured, the main controller <highlight><bold>14</bold></highlight> also stores source data A to temporary source data buffer <highlight><bold>6</bold></highlight>, and controls data adjustment processor <highlight><bold>13</bold></highlight> and parameter data input means <highlight><bold>12</bold></highlight> so that input of the parameter settings for image adjustment can be accepted. Parameter settings for selecting the target printer, selecting the printable colors of the selected printer, setting the print resolution, and setting the color reduction method can thus be input. The main controller <highlight><bold>14</bold></highlight> also controls the source data image display <highlight><bold>11</bold></highlight> to display an image of source data A on screen. Source data A is passed through the image processing means <highlight><bold>7</bold></highlight> and stored to logo data storage <highlight><bold>9</bold></highlight>. If the image processing parameters are set at this time, the source data A is first processed accordingly and then stored to logo data storage <highlight><bold>9</bold></highlight>. If no parameters are set, source data A is processed using the printable colors, print resolution, color reduction method, and other parameters initially set in the parameter data input means <highlight><bold>12</bold></highlight>, and then stored to the logo data storage <highlight><bold>9</bold></highlight>. The logo data stored to the logo data storage <highlight><bold>9</bold></highlight> is also displayed on the display screen <highlight><bold>20</bold></highlight> by the logo data image display <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> It is thus possible to input specific parameters, such as what color reduction method to use for color reduction, and what colors in the source data A to convert to what printable colors, while viewing an image of the source data A. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> When an object is selected using the parameter data input means <highlight><bold>12</bold></highlight>, main controller <highlight><bold>14</bold></highlight> controls object read/write controller <highlight><bold>8</bold></highlight> to read and send the selected object from temporary source data buffer <highlight><bold>6</bold></highlight> to image processing means <highlight><bold>7</bold></highlight>. The image processing means <highlight><bold>7</bold></highlight> then processes the image according to the input parameters, and stores it to logo data storage <highlight><bold>9</bold></highlight>. The data stored to logo data storage <highlight><bold>9</bold></highlight> is also displayed by logo data image display <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> This process is further described using <cross-reference target="DRAWINGS">FIG. 26</cross-reference> with reference to a case in which object b<highlight><bold>3</bold></highlight> is selected. FIGS. <highlight><bold>26</bold></highlight>(<highlight><italic>a</italic></highlight>) and (<highlight><italic>b</italic></highlight>) show sample displays presented on display screen <highlight><bold>20</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 26</cross-reference>(<highlight><italic>a</italic></highlight>) shows the configuration of source data A. In this example source data A consists of a square b<highlight><bold>1</bold></highlight>, triangle b<highlight><bold>2</bold></highlight>, and circle b<highlight><bold>3</bold></highlight> arranged as shown in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>(<highlight><italic>a</italic></highlight>). When the user points to and clicks on circle b<highlight><bold>3</bold></highlight> with a mouse, for example, to edit circle b<highlight><bold>3</bold></highlight>, object read/write controller <highlight><bold>8</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> reads and sends object b<highlight><bold>3</bold></highlight> from temporary logo data buffer <highlight><bold>6</bold></highlight> to image processing means <highlight><bold>7</bold></highlight>. This enables circle object b<highlight><bold>3</bold></highlight> to be image processed. The display also changes at this time as shown in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>(<highlight><italic>b</italic></highlight>) so that circle object b<highlight><bold>3</bold></highlight> is in front. To then edit the triangle, the user simply clicks on the triangle object. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> In this example the object to be edited is brought to the front for processing, but it is also possible to display only the selected object. It could also be configured to enable specifying batch processing for all objects so that all objects are batch processed. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> The process after the parameters are set by the parameter data input means <highlight><bold>12</bold></highlight> is described below. Note that this next process applies both to processing only selected objects and to image processing all of the source data <highlight><bold>3</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>). It could also be configured to simultaneously select plural objects and process all selected objects at the same time. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> (Embodiment of the gray scale processing unit) </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> The image processing part of the logo data generating apparatus <highlight><bold>4</bold></highlight> is described next with reference to <cross-reference target="DRAWINGS">FIG. 27</cross-reference>. <cross-reference target="DRAWINGS">FIG. 27</cross-reference> is a function block diagram of a preferred embodiment of a gray scale processing unit used in the logo data generating apparatus <highlight><bold>4</bold></highlight>. Note that the gray scale processor <highlight><bold>41</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 27</cross-reference> shows only the basic parts of the gray scale process. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> Based on a control signal from a controller not shown in the figure, image data storage <highlight><bold>46</bold></highlight> reads and stores the source data image or objects of the source data image. After the source data is stored, a control signal causes the gradation processor <highlight><bold>47</bold></highlight> to convert the image data to gray scale data. This gray scale conversion process converts color graphic data to monochrome graphic data with no color information, similar to a black and white photograph. Color graphics usually contain hue, saturation, and brightness data, but gray scale data only contains brightness information. In other words, color images are expressed with brightness difference (gradation) information only. The brightness of one pixel in 24-bit full-color image data, for example, can be expressed converted to a 256-level gray scale value using one byte (object read/write controller 8 bits) per pixel. The resulting gray scale data is then stored in gray scale image memory <highlight><bold>48</bold></highlight>. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> If the color assignments are have been input when the source data is converted to gray scale data, the color assignment processor <highlight><bold>49</bold></highlight> assigns the specified colors. That is, the gray scale data is related to the assigned colors. If there is no color assignment, a default color, such as black, or the color assignments used in the most recent process, are used. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> The gray scale processor <highlight><bold>41</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 27</cross-reference> can exist as a part of the image processing means <highlight><bold>7</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 25</cross-reference>. Alternatively, the functionality of image data storage <highlight><bold>46</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 27</cross-reference> can be provided in the temporary source data buffer <highlight><bold>6</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 25</cross-reference>, and the image data storage <highlight><bold>46</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 27</cross-reference> omitted. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> (Basic concept of the reduced image display </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28</cross-reference> shows an example of a reduced image display in second and third embodiments of the logo data generating apparatus further described below. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> The process for presenting a reduced display after color reduction processing applies to image processes indicated at steps (1) and (2) in <cross-reference target="DRAWINGS">FIG. 28</cross-reference>. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> Image process <highlight><bold>56</bold></highlight> such as color reduction is applied to the source data <highlight><bold>3</bold></highlight> of the multicolored image A to be processed according to the input settings from input means <highlight><bold>59</bold></highlight>. The processed image A&prime; can be printed on the printer, stored as a logo in the printer, or output to a file. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> This source data <highlight><bold>3</bold></highlight> image process <highlight><bold>56</bold></highlight> preferably displays image a of the source data <highlight><bold>3</bold></highlight> when inputting the settings determining how to process the image, and to confirm the settings preferably also displays the image a&prime; after image processing using the color assignment settings. Yet further preferably, both images a and a&prime; are reduced and displayed together on display screen <highlight><bold>20</bold></highlight> so that the two images can be compared at the same time on the same screen. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> If the image reduction process <highlight><bold>57</bold></highlight> is applied after the color reduction process <highlight><bold>56</bold></highlight> according to an actual data process operation (that is, source data A is displayed reduced as image a by steps 3 and 4, and image a&prime; of processed data A&prime; from steps 1, 7, and 8 is displayed on the same screen), a dither pattern, for example, results depending on the amount of reduction, and the processed image cannot be correctly displayed. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> A procedure for displaying image a of source data <highlight><bold>3</bold></highlight> before the color reduction process is accomplished by steps 3 and 4, but the following method is preferably used as the procedure for displaying image a&prime; after image processing. That is, reduction process <highlight><bold>57</bold></highlight> is first applied to source data <highlight><bold>3</bold></highlight> through steps 3, 5, and 6, the same image process accomplished by steps 1 and 2 is then applied to the reduced data, and the result is preferably displayed as reduced image a&prime; of the data A&prime; after processing source data <highlight><bold>3</bold></highlight>. Because the image reduction process <highlight><bold>57</bold></highlight> is run before the color reduction process <highlight><bold>56</bold></highlight>, the same color is prevented from being sampled into a pattern by the data sampling step of the image reduction process <highlight><bold>57</bold></highlight>. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> The reduced image thus obtained is not really a reduced preview of the processed image. However, the image presented by this process presents a sharper, clearer image of the processed data than does an actual reduced image obtained by reducing the actual image after color reduction. The purpose of a preview is to easily confirm an image when viewing the actual image is difficult or time-consuming. It is therefore important to accurately and clearly represent the actual image, and the process whereby the preview image is created is not important. It is therefore preferable as described above to first reduce the image for a preview display and then apply color reduction in order to achieve a sharper preview image. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> (Second embodiment of a logo data generating apparatus) </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> A second embodiment of a logo data generating apparatus is described next with reference to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a function block diagram of a logo data generating apparatus <highlight><bold>4</bold></highlight>-<highlight><bold>2</bold></highlight> according to this second embodiment. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> This embodiment differs from the first embodiment in having an image reducing means <highlight><bold>17</bold></highlight> and displaying a reduced image a of the source data after the image reduction process and the logo data image a&prime; after image processing. This enables even more efficient image processing because an image a of the source data and an image a&prime; of the logo after changes are made can be simultaneously displayed on display screen <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> (Third embodiment of a logo data generating apparatus) </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a function block diagram of logo data generating apparatus <highlight><bold>4</bold></highlight>-<highlight><bold>3</bold></highlight>. This embodiment differs from the second embodiment <highlight><bold>4</bold></highlight>-<highlight><bold>2</bold></highlight> in that when displaying a reduced image a of the logo data or a logo data object the source data A is first sent to the image reducing means <highlight><bold>17</bold></highlight> and reduced to produce reduced image a, and the color data is then reduced by the data adjustment processor <highlight><bold>13</bold></highlight> to produce and display reduced image a&prime;. By configuring the system to first reduce the image and then apply color reduction, the dithering noise and striping that appear when the image is reduced after color reduction can be prevented, and a preview even closer to the actual printed image can be displayed. </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> (Creating a logo registration file with the logo data output means) </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> As described above, the logo data output means <highlight><bold>16</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, and <cross-reference target="DRAWINGS">FIG. 25</cross-reference> can store directly to a printer or create a bitmap logo data file, and can also create a logo registration file <highlight><bold>5</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) containing embedded commands for logo registration. This logo registration file <highlight><bold>5</bold></highlight> is an image file with embedded commands, combining both the logo data and the command data set needed to store the logo data. When the POS terminal host reads this logo registration file <highlight><bold>5</bold></highlight>, the logo data can be stored directly from the logo registration file <highlight><bold>5</bold></highlight> without installing a special program on the host. The host completes logo registration by sending the logo registration command in the read logo registration file <highlight><bold>5</bold></highlight> to the printer. </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a function block diagram of the logo registration file output means <highlight><bold>18</bold></highlight> in a preferred embodiment of the logo data output means <highlight><bold>16</bold></highlight> for generating this logo registration file <highlight><bold>5</bold></highlight>. Note that <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows only the major components, and those parts not particularly important to logo file creation are omitted. </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> The logo registration file output means <highlight><bold>18</bold></highlight> has a command data set generator <highlight><bold>19</bold></highlight>, logo registration file generator <highlight><bold>20</bold></highlight>, and communication interface <highlight><bold>21</bold></highlight>. The logo registration file output means <highlight><bold>18</bold></highlight> receives and stores the logo data from the data adjustment processor <highlight><bold>13</bold></highlight>. The command data set generator <highlight><bold>19</bold></highlight> creates the set of commands needed to store the logo output from data adjustment processor <highlight><bold>13</bold></highlight> in the printer. The command data set generator <highlight><bold>19</bold></highlight> has a registration command set generator <highlight><bold>22</bold></highlight> and data transmission command set generator <highlight><bold>23</bold></highlight>. The registration command set contains executable commands sent to the printer for storing the received logo data in the target printer. </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> The data transmission command set generator <highlight><bold>23</bold></highlight> has a parameter input command set generator <highlight><bold>24</bold></highlight> for creating an executable command set for accepting input of communication parameters such as the communication port, a port detection command set generator <highlight><bold>25</bold></highlight> for producing an executable command set for detecting the communication port to which the target printer is connected, and a transmission command set generator <highlight><bold>26</bold></highlight> for producing a set of commands for sending the registration command set and logo data to the target printer. </paragraph>
<paragraph id="P-0160" lvl="0"><number>&lsqb;0160&rsqb;</number> The logo registration file generator <highlight><bold>20</bold></highlight> (called the file generator <highlight><bold>20</bold></highlight> below) combines the logo data (print image data), registration command set, and data transmission command set to produce logo registration file <highlight><bold>5</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>). This logo registration file is preferably a single file, but can be a linked set of files. Whether the transmission command set is generated, whether the parameter input command set is generated, and whether the port detection command set is generated can be specified using a controller not shown in the figure. </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> The logo registration file output by the logo registration file generator <highlight><bold>20</bold></highlight> can be sent to the host of a POS terminal to which the target printer is connected if the host is connected to the communication interface <highlight><bold>21</bold></highlight> via a communication line. The logo registration file can also be stored from the logo registration file generator <highlight><bold>20</bold></highlight> to internal memory or non-volatile (NV) memory (not shown in the figure), or can be output through an input/output interface (not shown in the figure) to floppy disk, hard disk, memory card, or other external storage device (not shown in the figure). By then causing the POS terminal host to read the logo registration file stored to floppy disk or other medium or the logo registration file sent thereto via the communication link, the host reads the command sets stored in the logo registration file and can store the logo data to the printer without installing a separate special logo registration program in the host. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> The logo editing tool <highlight><bold>2</bold></highlight> and logo data generating apparatus <highlight><bold>4</bold></highlight> are described as separately configured above, but the logo editing tool <highlight><bold>2</bold></highlight> can be incorporated in the logo data generating apparatus <highlight><bold>4</bold></highlight>, creating a logo data generating apparatus having a logo editing function. </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> It will be obvious to one with ordinary skill in the related art that the logo editing tool and logo data generating apparatus described above can be achieved using a microprocessor (CPU), ROM and RAM connected via a bus to the CPU), and an operating system (OS) and other appropriate control programs stored to the ROM and RAM. The CPU, ROM, and RAM, and the control programs stored in the ROM and RAM cooperate to function as the various function blocks. The various parts of the logo editing tool <highlight><bold>2</bold></highlight> and logo data generating apparatus <highlight><bold>4</bold></highlight> are thus achieved by integrally linking the various input devices, control programs, CPU, and storage devices. </paragraph>
<paragraph id="P-0164" lvl="7"><number>&lsqb;0164&rsqb;</number> (Logo editing process) </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> The logo editing process is described next with reference to <cross-reference target="DRAWINGS">FIG. 7</cross-reference> to <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a flow chart of a preferred embodiment of the logo editing method for generating logo data, and FIGS. <highlight><bold>8</bold></highlight> to <highlight><bold>13</bold></highlight> show examples of screens presented for inputting data as part of this logo editing process. </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> This embodiment is described first with reference to <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. </paragraph>
<paragraph id="P-0167" lvl="0"><number>&lsqb;0167&rsqb;</number> The first step when the logo editing tool <highlight><bold>2</bold></highlight> starts is to select whether to create a new logo source data file, or edit a source data file previously created with the logo editing tool <highlight><bold>2</bold></highlight>. If a new logo is created a screen such as shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference> for setting the logo size is displayed. Once the logo size is set, an editing screen is displayed according to the set size. </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> Whether to read the image data from which the source data is generated is then determined (S<highlight><bold>101</bold></highlight>). The image data is typically read from a file, but could be a source data file <highlight><bold>3</bold></highlight> previously generated by the logo editing tool <highlight><bold>2</bold></highlight>, or some other existing image file. If a file is to be read (S<highlight><bold>101</bold></highlight> returns yes), the read file is selected and read, and then stored in logo editing tool <highlight><bold>2</bold></highlight> (S<highlight><bold>102</bold></highlight>). If reading a file is not necessary (S<highlight><bold>101</bold></highlight> returns no), the procedure advances to step S<highlight><bold>103</bold></highlight>. This image reading step can be skipped when editing an existing source data file <highlight><bold>3</bold></highlight> or if a logo is created using only text, for example. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> Whether drawing or text input is necessary is then determined (S<highlight><bold>103</bold></highlight>). If it is (S<highlight><bold>103</bold></highlight> returns yes), the input routine is run (S<highlight><bold>104</bold></highlight>). If not (S<highlight><bold>103</bold></highlight> returns no), the procedure advances to step S<highlight><bold>105</bold></highlight>. In step S<highlight><bold>105</bold></highlight> the size of the read image data or text data is changed, or multiple images or text objects are combined according to user input. If input is not completed (S<highlight><bold>106</bold></highlight> returns no), steps S<highlight><bold>101</bold></highlight> to S<highlight><bold>106</bold></highlight> repeat on the editing screen until input for all drawing, text, and merging operations is completed. When input is completed (S<highlight><bold>106</bold></highlight> returns yes), the result is stored internally as source data or output as a source data file (S<highlight><bold>107</bold></highlight>). </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> The logo editing process is further described below using examples of the display screens presented during the logo editing process as shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> to <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. Note that the process described below using these sample display screens is substantially the same in content and result as the process described with reference to the flow chart in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, but not does not correspond 1:1 to the <cross-reference target="DRAWINGS">FIG. 7</cross-reference> flow chart. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> When the logo editing tool <highlight><bold>2</bold></highlight> or logo data generating apparatus <highlight><bold>4</bold></highlight> starts up, a main screen <highlight><bold>100</bold></highlight> common to both logo generation and editing and shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is presented. When the new logo button <highlight><bold>110</bold></highlight> in main screen <highlight><bold>100</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is clicked, the main editing screen <highlight><bold>120</bold></highlight> of the logo editing tool is presented as shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. This main editing screen <highlight><bold>120</bold></highlight> includes file <highlight><bold>121</bold></highlight>, edit <highlight><bold>122</bold></highlight>, display <highlight><bold>123</bold></highlight>, and tools <highlight><bold>124</bold></highlight> buttons in the top toolbar, and a logo editing area <highlight><bold>127</bold></highlight> in the middle. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> Clicking the file button <highlight><bold>121</bold></highlight> of the main editing screen <highlight><bold>120</bold></highlight> presents, for example, a pulldown menu (not shown in the figure) with selections such as new, open, close, save, save as, logo size, and quit. The &ldquo;new&rdquo; item is used to create new logo data, and selecting it presents a dialog box <highlight><bold>130</bold></highlight> such as shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference> for specifying the size of the logo (source data). The dialog box <highlight><bold>130</bold></highlight> is used to define the size of the logo for which new logo data is to be created. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> The &ldquo;open&rdquo; item (not shown in the figure) is used to open an existing file. Selecting &ldquo;open&rdquo; presents a file selection dialog box (not shown in the figure) from which a source data file previously created with the logo editing tool, for example, can be selected for use. The &ldquo;close&rdquo; item (not shown in the figure) closes the source data file being edited; if a change was made to the source data file, a prompt asking whether to save the changes is presented. The &ldquo;save&rdquo; item is selected to save the source data file being edited by overwriting the previous file. If &ldquo;save&rdquo; is selected when creating a new source data file, a dialog box asking the user to specify a name is presented. The &ldquo;save as&rdquo; item (also not shown) is used to save the source data file being edited under a different name. The &ldquo;logo size&rdquo; item (not shown in the figure) is for changing the logo size of the source data being edited, and selecting it presents the same dialog box as shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference> for changing the logo size of the source data. Selecting &ldquo;quit&rdquo; quits the logo editing tool. If a file with unsaved changes is open when quit is selected, a dialog box is presented asking whether to save the changes. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> When the edit button <highlight><bold>122</bold></highlight> is selected from the main editing screen <highlight><bold>120</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 9, a</cross-reference> dialog box with selections such as undo (for reversing the previous operation), cut, copy, paste, and select all (none of which are shown in the figure) is presented. These functions are the same as in commonly available word processors and other programs. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> Selecting the &ldquo;paste&rdquo; item pastes an object on the clipboard into the logo (source data) being edited. The types of objects that can be pasted include text, dib format, bmp format, JPEG format, and other common drawing or graphic object types, source data files created with the logo editing tool <highlight><bold>2</bold></highlight>, logo data files created with the logo data generating apparatus <highlight><bold>4</bold></highlight>, and any other type of graphic object that can be recognized by the editing tool. If the object on the clipboard is a bitmap object, it is treated as an image object. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> Selecting &ldquo;select all&rdquo; selects all objects in the source data being edited. Cut, copy, move, delete, and other operations can then be applied to the selected objects. </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> Selecting the display button <highlight><bold>123</bold></highlight> from the main editing screen <highlight><bold>120</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 9</cross-reference> presents a dialog box containing items such as &ldquo;zoom in&rdquo; for enlarging the display, &ldquo;zoom out&rdquo; for reducing the display, &ldquo;show grid,&rdquo; &ldquo;align to grid&rdquo; for selecting whether to automatically place objects on the grid, and &ldquo;define grid&rdquo; for setting the X-Y grid units and alignment (none of these selections is shown in the figures). </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> When the tools button <highlight><bold>124</bold></highlight> is selected from the main editing screen <highlight><bold>120</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 9, a</cross-reference> dialog box (not shown in the figure) with such items as insert, text properties, image properties, input coordinates, bring to front, and send to back is presented (none of these items is shown in the figures). </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> When &ldquo;insert&rdquo; is selected a submenu with &ldquo;text&rdquo; and &ldquo;image&rdquo; items is presented (not shown in the figure). Selecting &ldquo;text&rdquo; enables the user to insert a text object of a specific size and position determined by clicking and dragging in the logo editing area <highlight><bold>127</bold></highlight>. Selecting &ldquo;image&rdquo; similarly enables the user to insert an image object of a specific size and position determined by clicking and dragging in the logo editing area <highlight><bold>127</bold></highlight>. When an image object is inserted, an image properties dialog box is presented for the user to select the image file to insert. </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> If &ldquo;text properties&rdquo; (not shown in the figure) is selected a text object properties dialog box <highlight><bold>140</bold></highlight> such as shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is presented. The font selection box <highlight><bold>141</bold></highlight> enables selecting from a list of WIFE fonts or TrueType fonts, for example. The supported styles of the selected font can then be selected from a list using the style selection box <highlight><bold>142</bold></highlight>, and a supported text size can be selected from a list using the size box. Other text attributes such as underlining, color, and text object rotation can also be selected. </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> When &ldquo;image properties&rdquo; is selected an image object properties dialog box <highlight><bold>150</bold></highlight> such as shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is presented. When the file name of the image file to read is input to the file name box <highlight><bold>151</bold></highlight>, the image file is read and displayed in the preview area <highlight><bold>152</bold></highlight>. It is also possible to provide a reference button (not shown in the figure) so that files can be referenced for selection. Selecting the &ldquo;fit to page&rdquo; checkbox <highlight><bold>153</bold></highlight> changes the size of the image data to the width of the selected paper. This function automatically adjusts the image size to the width of the paper when the paper used by the printer has been defined. The image object can be set to &ldquo;opaque&rdquo; or &ldquo;transparent&rdquo; from the drawing mode <highlight><bold>154</bold></highlight> box. &ldquo;Opaque&rdquo; causes the object to print in front regardless of any background objects. &ldquo;Transparent&rdquo; draws objects using the result of a logical OR between the background and foreground objects. </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> When &ldquo;input coordinates&rdquo; (not shown in the figure) is selected, a dialog box <highlight><bold>160</bold></highlight> such as shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is presented. This dialog box enables specifying the X-Y coordinates of the top left corner of the selected object. </paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> Selecting the &ldquo;bring to front&rdquo; item displays the selected object in front of all other objects, and selecting &ldquo;send to back&rdquo; displays the selected object in the background behind all other objects. </paragraph>
<paragraph id="P-0184" lvl="0"><number>&lsqb;0184&rsqb;</number> It will be obvious that a window menu containing selections such as stack, panes, arrange icons, and version information could also be provided. </paragraph>
<paragraph id="P-0185" lvl="7"><number>&lsqb;0185&rsqb;</number> (Generating logo data) </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> A process for generating logo data is described with reference to <cross-reference target="DRAWINGS">FIG. 14</cross-reference>. <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a flow chart showing a logo data generating method according to this embodiment of the invention. </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> The first step is to read and store for processing a source data object from a source data file <highlight><bold>3</bold></highlight> prepared with the logo editing tool <highlight><bold>2</bold></highlight> or image file <highlight><bold>82</bold></highlight> as described above (S<highlight><bold>201</bold></highlight>). An image of the stored source data is then displayed on screen (such as display area <highlight><bold>225</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 15</cross-reference>) (S<highlight><bold>202</bold></highlight>). The objects in the source data can also be image processed according to the initial image processing settings and displayed simultaneously on screen (such as in display area <highlight><bold>226</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 15</cross-reference>). </paragraph>
<paragraph id="P-0188" lvl="0"><number>&lsqb;0188&rsqb;</number> Whether a particular object in the source data has been selected for image processing is then determined (S<highlight><bold>203</bold></highlight>). If no object has been selected (S<highlight><bold>203</bold></highlight> returns no), the procedure advances to processing step S<highlight><bold>208</bold></highlight>. If an object has been selected (S<highlight><bold>203</bold></highlight> returns yes), the selected object is read and input screens for setting the image processing parameters for the selected object are presented (such as areas <highlight><bold>228</bold></highlight> and <highlight><bold>229</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 15</cross-reference> and the screens shown in <cross-reference target="DRAWINGS">FIG. 16</cross-reference> and <cross-reference target="DRAWINGS">FIG. 17</cross-reference>) (S<highlight><bold>204</bold></highlight>). Input of image processing parameters is then detected (S<highlight><bold>205</bold></highlight>), and if image processing parameters were not input (S<highlight><bold>205</bold></highlight> returns no), the procedure advances to the processing step (S<highlight><bold>208</bold></highlight>) while displaying the image as processed using the initial settings. If processing parameters were input (S<highlight><bold>205</bold></highlight> returns yes), the selected object is processed using those parameters (S<highlight><bold>206</bold></highlight>) and the processed image is then displayed (S<highlight><bold>207</bold></highlight>). Note that the processed image continues to be displayed until there is a change in parameter data input (S<highlight><bold>205</bold></highlight>), and when there is a change in parameter input (S<highlight><bold>205</bold></highlight>), the image is redisplayed based on the input parameters. By thus displaying an image of the source data, the user can set parameters for the next processes, including color assignments and color reduction method, while referring to the colors, pattern, and overall impression of the source data image. </paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> Whether to output the logo data is then confirmed (S<highlight><bold>208</bold></highlight>). The data resulting from image processing is output (S<highlight><bold>210</bold></highlight>) if logo output is selected (S<highlight><bold>208</bold></highlight> returns yes). If the logo is not output (S<highlight><bold>208</bold></highlight> returns no), whether the settings are completed is determined (S<highlight><bold>209</bold></highlight>). If the user has finished adjusting the image processing parameters (S<highlight><bold>209</bold></highlight> returns yes), the logo generation process ends. If the user has not finished setting the parameters (S<highlight><bold>209</bold></highlight> returns no), the procedure loops back to S<highlight><bold>203</bold></highlight> and the same process repeats. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> Logo output and whether parameter adjustment is completed are determined from data input to the parameter data input means. Logo data output is further described below. </paragraph>
<paragraph id="P-0191" lvl="7"><number>&lsqb;0191&rsqb;</number> (Alternative logo data generating process) </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> The logo data generating procedure in the reduced image display process is described next with reference to <cross-reference target="DRAWINGS">FIG. 29</cross-reference>. <cross-reference target="DRAWINGS">FIG. 29</cross-reference> is a flow chart of a preferred embodiment of a logo data generating method according to the present invention. The images resulting from and related to the various steps in the flow chart in <cross-reference target="DRAWINGS">FIG. 29</cross-reference> are shown to the right where A is the source data image, A&prime; is the image after image processing, a is the reduced view of image A, and a&prime; is the reduced preview image of logo A&prime;. </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> Logo generation is described according to the flow chart. </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> The first step is to read and store the source data objects for processing from an existing image file or source data file created with the above-described logo editing tool <highlight><bold>2</bold></highlight> (S<highlight><bold>401</bold></highlight>). Stored source data image A is then reduced to create reduced image a (S<highlight><bold>402</bold></highlight>). The reduced image a is then displayed on screen <highlight><bold>20</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 6</cross-reference>) (S<highlight><bold>403</bold></highlight>). The user can thus set the parameters for the next processes, that is, defining the color assignment and color reduction method, while referring to the colors, pattern, and overall impression of the source data image. If confirming the source data image is not necessary, this step (S<highlight><bold>402</bold></highlight>) can be skipped and the procedure can advance directly to the next step (S<highlight><bold>403</bold></highlight>) without displaying reduced image a. </paragraph>
<paragraph id="P-0195" lvl="0"><number>&lsqb;0195&rsqb;</number> The image processing parameters are then input (S<highlight><bold>404</bold></highlight>). Parameters specific to the printer model, assigning the colors achieving the best print results according to the specific functions of the printer, and other such parameters can be input at this step. Once the parameters are set the source data image A is processed according to the defined parameters to create logo A&prime;(S<highlight><bold>405</bold></highlight>). The reduced image a is also processed according to the same image processing parameters, creating preview image a&prime; of the logo A&prime;(S<highlight><bold>406</bold></highlight>). It will be noted that because color reduction and other image processing steps are applied after image reduction, preview image a&prime; does not have the dither noise or striping that otherwise occurs. At this point both reduced image a of the source data and reduced preview a&prime; of the image A&prime; after image processing are displayed. The user can therefore compare the images before and after image processing, and easily adjust the image processing parameters at the time the logo data is generated in order to achieve the best logo. </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> Whether the settings are finalized is then confirmed (S<highlight><bold>407</bold></highlight>). If input is not completed (S<highlight><bold>407</bold></highlight> returns no), steps S<highlight><bold>404</bold></highlight> to S<highlight><bold>407</bold></highlight> repeat. The user can thus continue to adjust the image processing parameters while confirming what the processed image a&prime; will look like in order to achieve the best logo. When the parameters are finalized (S<highlight><bold>407</bold></highlight> returns yes), the logo data is output (S<highlight><bold>408</bold></highlight>). </paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> It should be noted that while the image reduction process (S<highlight><bold>402</bold></highlight>) is provided immediately after the source data is read in <cross-reference target="DRAWINGS">FIG. 29</cross-reference>, the image reduction step can be provided after the image processing step (S<highlight><bold>405</bold></highlight>) if a reduced view of the source data is not displayed. </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> The logo data generating process of this invention is further described below using the sample display screens of this logo generating process as shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, <cross-reference target="DRAWINGS">FIG. 15</cross-reference> to <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, <cross-reference target="DRAWINGS">FIG. 30</cross-reference> and <cross-reference target="DRAWINGS">FIG. 31</cross-reference>. Note that the process described below using these sample display screens is substantially the same in content and result as the process described with reference to the flow chart in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, but not does not correspond 1:1 to the <cross-reference target="DRAWINGS">FIG. 14</cross-reference> flow chart. </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> With the logo data generating apparatus of this example a main screen <highlight><bold>210</bold></highlight> identical to the main screen <highlight><bold>100</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> by the logo editing tool <highlight><bold>2</bold></highlight> is displayed first. This main screen <highlight><bold>210</bold></highlight> has a printer data input box <highlight><bold>220</bold></highlight> used to input the paper width, printable colors, print resolution, and other parameters specific to the printer model. A communication parameters input box <highlight><bold>221</bold></highlight> enables the user to specify the port, transmission speed, and other communication parameters. These printer parameters and communication parameters are preferably set automatically as much as possible by simply specifying the name of the printer in the printer data input box <highlight><bold>220</bold></highlight>. This can be enabled by storing this model-specific data inside the printer so that when the model name is specified the specific parameters are read from the printer and set automatically. </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> The source data used to create a logo can be read from a desired file by inputting a file name to the source file input box <highlight><bold>223</bold></highlight>. The reference button <highlight><bold>224</bold></highlight> can also be clicked to reference a selection of available files in a pulldown menu (not shown in the figure). An image of the source data is displayed in the first display area <highlight><bold>225</bold></highlight> and an image of the source data after it is processed according to the defined image processing parameters is displayed in a second display area <highlight><bold>226</bold></highlight>. The most commonly used files will be source data files created by the logo editing tool <highlight><bold>2</bold></highlight>, but providing the ability to read as many different file types as possible will make it possible to use images from a wider range of sources as the logo source data. </paragraph>
<paragraph id="P-0201" lvl="0"><number>&lsqb;0201&rsqb;</number> Reading the source image, parameter setting, and image processing are described next. <cross-reference target="DRAWINGS">FIG. 15</cross-reference> shows the logo editor screen <highlight><bold>210</bold></highlight> after a file has been read from the main screen <highlight><bold>100</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 8</cross-reference>) and certain parameters have been set. <cross-reference target="DRAWINGS">FIG. 15</cross-reference> shows reduced views of the source data image and the source data image after image processing, but it will be obvious that these images could alternatively be displayed without being reduced. </paragraph>
<paragraph id="P-0202" lvl="0"><number>&lsqb;0202&rsqb;</number> When the file name is input to the source file input box <highlight><bold>223</bold></highlight> of the main screen <highlight><bold>100</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 8</cross-reference>), the content of the specified file is read as the source data and stored to a particular address in memory. The stored source data is then reduced to display a reduced image a of the source data as shown in first display area <highlight><bold>225</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 15</cross-reference>) provided in the main screen <highlight><bold>210</bold></highlight>. </paragraph>
<paragraph id="P-0203" lvl="0"><number>&lsqb;0203&rsqb;</number> The name, paper width, printable colors, resolution, and other parameters specific to the target printer can be input from the printer data input box <highlight><bold>220</bold></highlight>, and communication port, transmission rate, bit length, and other model-specific data related to communicating with the printer can be input from the communication parameters input box <highlight><bold>221</bold></highlight>. It is also possible to read model-specific data for the indicated printer from a model-specific data buffer (not shown in the figure) so that the model-specific data is set automatically when the printer name is input or specified. If the target printer is connected, it is further possible to automatically read a model ID from the printer to set the corresponding model-specific data automatically. The color reduction method, color assignments for color conversion to printable colors, and other parameters can also be input using the properties input box <highlight><bold>222</bold></highlight>. When the target printer is selected from the printer data input box <highlight><bold>220</bold></highlight>, the colors used for the color conversion selected from the properties input box <highlight><bold>222</bold></highlight> can be selected from the printable colors specific to that printer (black is selected as the first color and red as the second color in the color selection menus shown in <cross-reference target="DRAWINGS">FIG. 15</cross-reference>). Selection of colors other than the printable colors from the properties input box <highlight><bold>222</bold></highlight> can be prohibited by not displaying colors other than the printable colors specific to the selected printer in the color selection menu of the printer data input box <highlight><bold>220</bold></highlight>. </paragraph>
<paragraph id="P-0204" lvl="0"><number>&lsqb;0204&rsqb;</number> Reduced image a&prime; of the data image processed according to the model-specific data and defined properties is displayed in second display area <highlight><bold>226</bold></highlight>. Until these settings are defined the data is processed using existing settings or preset values, and the processed image is then displayed in the second display area <highlight><bold>226</bold></highlight> of the main screen <highlight><bold>210</bold></highlight>. If a two-color printer is used, for example, a preview of the print image (logo) using the shades that can be achieved with three colors, that is, the two printable colors and white (a non-printing color: the color of the paper), is displayed. If the print resolution of the printer is low, the image is also displayed as a low resolution image. </paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> It should be noted that a reduced preview of the processed image is displayed in the second display area <highlight><bold>226</bold></highlight> in this embodiment, but the full-size button <highlight><bold>231</bold></highlight> can be clicked to display the print image at the same size as the actual print image (not shown in the figure). </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> Defining the image data and text data properties is described next with reference to <cross-reference target="DRAWINGS">FIG. 15</cross-reference> to <cross-reference target="DRAWINGS">FIG. 18</cross-reference>. The properties defined with reference to these sample screens are the properties used for image processing source data <highlight><bold>3</bold></highlight> created with the logo editing tool <highlight><bold>2</bold></highlight>. As described above, source data created with the logo editing tool <highlight><bold>2</bold></highlight> can contain multiple image data and/or text data objects. The first step is therefore selecting the object to edit using the object selection box <highlight><bold>227</bold></highlight> in the properties input box <highlight><bold>222</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 15</cross-reference>. If image <highlight><bold>1</bold></highlight> is selected, image <highlight><bold>1</bold></highlight> is processed according to the parameters determined with the halftone definition box <highlight><bold>228</bold></highlight> and gray scale control box <highlight><bold>229</bold></highlight>, and an image of the complete logo containing the processed image <highlight><bold>1</bold></highlight> is displayed in second display area <highlight><bold>226</bold></highlight>. Individual image or text objects can be selected and processed by selecting the specific object from the list of all objects combined in the logo from the object selection box <highlight><bold>227</bold></highlight> in the properties input box <highlight><bold>222</bold></highlight>. </paragraph>
<paragraph id="P-0207" lvl="0"><number>&lsqb;0207&rsqb;</number> The color reduction slider <highlight><bold>237</bold></highlight> in the halftone definition box <highlight><bold>228</bold></highlight> slides left to right to specify the color reduction method in varying stages from coarse to fine. For example, three levels from coarse to fine, that is, simple color reduction, dithering, error diffusion, could be used. A brightness slider <highlight><bold>236</bold></highlight> can also be moved sideways to set the image brightness on a sliding scale. Image brightness could be selected from five levels, for example. </paragraph>
<paragraph id="P-0208" lvl="0"><number>&lsqb;0208&rsqb;</number> When the gray scale control box <highlight><bold>229</bold></highlight> is on, the image can be reduced to a monochrome gray scale image; when off, the source data is reduced to all printable colors (two in this example). When reduced to a gray scale image, the monochrome color can be specified from the color input box <highlight><bold>238</bold></highlight>, or selected from a pulldown menu. </paragraph>
<paragraph id="P-0209" lvl="0"><number>&lsqb;0209&rsqb;</number> If text object <highlight><bold>2</bold></highlight> is selected from the object selection box <highlight><bold>227</bold></highlight> of the properties input box <highlight><bold>222</bold></highlight>, for example, the properties input box <highlight><bold>222</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 15</cross-reference> changes to a text object properties definition box <highlight><bold>240</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 16</cross-reference>. The user can then enter the desired text from the text input box <highlight><bold>241</bold></highlight>, and specify the color of the text in the text color box <highlight><bold>242</bold></highlight> using a pulldown menu, for example. </paragraph>
<paragraph id="P-0210" lvl="0"><number>&lsqb;0210&rsqb;</number> An example of image processing individual objects is described next with reference to <cross-reference target="DRAWINGS">FIG. 30</cross-reference>. Clicking on the menu icon of the object selection box <highlight><bold>227</bold></highlight> in the properties input box <highlight><bold>222</bold></highlight> causes a pulldown menu <highlight><bold>245</bold></highlight> to appear. The object to process, image <highlight><bold>1</bold></highlight> or image <highlight><bold>2</bold></highlight> in this example, can then be selected from the pulldown menu <highlight><bold>245</bold></highlight>. An image of the object is displayed after the desired object is selected. Color reduction and brightness are controlled from the halftone definition box <highlight><bold>228</bold></highlight>, and gray scale options are controlled, as described above. It is therefore possible to separately define how each object is processed. For example, image <highlight><bold>1</bold></highlight> could be processed using dithering for color reduction and no gray scale processing, while simple color reduction and gray scale conversion could be applied to image <highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0211" lvl="0"><number>&lsqb;0211&rsqb;</number> The gray scale conversion process is further described with reference to <cross-reference target="DRAWINGS">FIG. 31</cross-reference>. Pulldown menu <highlight><bold>245</bold></highlight> drops down when the menu icon beside the input box <highlight><bold>238</bold></highlight> in the gray scale control box <highlight><bold>229</bold></highlight> of the properties input box <highlight><bold>222</bold></highlight> is clicked. The user can select the desired color from the pulldown menu <highlight><bold>245</bold></highlight> (black in this example). When the desired color is selected, the image is converted and displayed in the second display area <highlight><bold>226</bold></highlight>. </paragraph>
<paragraph id="P-0212" lvl="0"><number>&lsqb;0212&rsqb;</number> An example of a screen enabling a variety of color assignments is described next with reference to <cross-reference target="DRAWINGS">FIG. 17</cross-reference>. <cross-reference target="DRAWINGS">FIG. 17</cross-reference> (a) shows a screen enabling settings for converting eight colors to <highlight><bold>15</bold></highlight> printable colors after reducing the source data to eight colors, and (b) shows a sample screen enabling settings for converting each color in source data reduced to eight colors to any of three printable colors. A color reduction method selected using the color reduction slider <highlight><bold>237</bold></highlight> of the above-described halftone definition box <highlight><bold>228</bold></highlight>, or a preset color reduction method, is used as the method for reducing full-color data, for example, to eight colors. </paragraph>
<paragraph id="P-0213" lvl="0"><number>&lsqb;0213&rsqb;</number> The example shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference> (a) applies to a printer with two printable colors. In this example the first color is black and the second is red. The eight colors of black, blue, red, magenta, green, cyan, yellow, and white are assigned to one of 15 colors by setting the color assignment sliders <highlight><bold>251</bold></highlight> in the assignment area <highlight><bold>250</bold></highlight> to a position from 0&minus;&gt;1&minus;&gt;2&minus;&gt;0&minus;&gt;12. An image of the source data is displayed at the top, and the image after color assignment is displayed at the bottom, on the right side in <cross-reference target="DRAWINGS">FIG. 15</cross-reference>. </paragraph>
<paragraph id="P-0214" lvl="0"><number>&lsqb;0214&rsqb;</number> To describe how fifteen colors are assigned with the color assignment sliders <highlight><bold>251</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, how a printer with two printable colors can print fifteen colors, and how the color assignment slider <highlight><bold>251</bold></highlight> specifies fifteen colors, are described referring to <cross-reference target="DRAWINGS">FIG. 18</cross-reference>. </paragraph>
<paragraph id="P-0215" lvl="0"><number>&lsqb;0215&rsqb;</number> If there is a total of three colors, that is, two colors of ink and white, the non-printing color of the paper, and each pixel is a 2&times;2 matrix of four dots per pixel, each pixel can express fifteen colors by appropriately assigning a color to each of the four dots in one pixel. The relationship between these fifteen colors and the color assignment slider <highlight><bold>251</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>. In <cross-reference target="DRAWINGS">FIG. 18 a</cross-reference> black dot (&bull;) represents black, a circle (o) represents red, and a blank represents a white dot, and the values (x,y,z) indicate the number of (white, black, red) dots in each matrix (pixel). In other words, the shade of each unit pixel is determined by the ratio of color dots in the four dots constituting each pixel. </paragraph>
<paragraph id="P-0216" lvl="0"><number>&lsqb;0216&rsqb;</number> Area a (0&minus;&gt;1) in <cross-reference target="DRAWINGS">FIG. 18</cross-reference> shows matrixes containing combinations of white and black dots and shows the range (direction) from a matrix with four white dots (0) to a matrix with four black dots (1). Area b (1&minus;&gt;2) shows matrixes containing combinations of black and red dots, and shows the range (direction) of change from four black dots to four red dots (2). Area c (2&minus;&gt;0) shows matrixes containing combinations of red and white dots, and shows the range (direction) of change from four red dots to four white dots. Area d (0&minus;&gt;12) shows the matrixes variously combining white, red, and black dots, and shows the range (direction) from four white to four black dots. </paragraph>
<paragraph id="P-0217" lvl="0"><number>&lsqb;0217&rsqb;</number> The relationship between the color assignment determined by the position of the color assignment slider <highlight><bold>251</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 17</cross-reference> and <cross-reference target="DRAWINGS">FIG. 18</cross-reference> and areas a, b, and c will be understood from the figures. That is, the pixel changes gradually from white to black as the color assignment slider <highlight><bold>251</bold></highlight> moves from 0&minus;&gt;1, from black to red as the slider moves from 1&minus;&gt;2, from red to white as the slider moves from 2&minus;&gt;0, and from white to a mixture of white, red, and black as the slider moves from 0&minus;&gt;12. </paragraph>
<paragraph id="P-0218" lvl="0"><number>&lsqb;0218&rsqb;</number> When, for example, black is selected as the first color and a specific chromatic color other than black is selected as the second color (red in the figure) using the color selection menu in the printer data input box <highlight><bold>220</bold></highlight> using the screen shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference> (a), a process for converting chromatic color parts (blue, red, magenta, green, cyan, yellow) of the source data to intermediate colors (any of areas b, c, d in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>) containing the second color (red), and achromatic parts (black) of the source data to the first color (black) or intermediate colors formed with the first color (area a in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>), is possible. </paragraph>
<paragraph id="P-0219" lvl="0"><number>&lsqb;0219&rsqb;</number> A screen for converting eight-color source data to three colors is described next with reference to <cross-reference target="DRAWINGS">FIG. 17</cross-reference> (b). In (b) black, blue, red, magenta, green, cyan, yellow, and white in the source data reduced to eight colors are assigned to white, the first color (black), or the second color (red). The source data and an image resulting from the color assignments are also both displayed on this screen. </paragraph>
<paragraph id="P-0220" lvl="0"><number>&lsqb;0220&rsqb;</number> Furthermore, when, for example, black is selected as the first color and a specific chromatic color other than black is selected as the second color (red in the figure) using the color selection menu in the printer data input box <highlight><bold>220</bold></highlight> using the screen shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference> (b), settings can be made to convert achromatic parts (black) of the source data to the first color, and chromatic color parts (blue, red, magenta, green, cyan, yellow) of the source data to the second color. </paragraph>
<paragraph id="P-0221" lvl="0"><number>&lsqb;0221&rsqb;</number> By thus enabling the user to freely select any of the colors that can be printed by the printer so that the color-reduced data of the source data image can be converted to the selected colors, expressive printing results (logo) can be achieved even with images that would be visually displeasing as a result of important color boundaries being converted to the same color with a constant, fixed color conversion process because the color assignments can be easily changed. Furthermore, by using dithering and dot gradation to increase the number of convertible colors and enabling the user to assign the printable colors as desired, logo expressiveness can be improved even with printers having little color capability (such as two color printers). </paragraph>
<paragraph id="P-0222" lvl="0"><number>&lsqb;0222&rsqb;</number> While the source data that can be selected for color processing as determined by the properties input box <highlight><bold>222</bold></highlight> is limited in the above description to source data files created by the logo editing tool <highlight><bold>2</bold></highlight>, it is also possible to design the object selection box <highlight><bold>227</bold></highlight> so that other existing image files can be selected as the source data so that source data from existing image files can be selected for color processing in the same way. </paragraph>
<paragraph id="P-0223" lvl="0"><number>&lsqb;0223&rsqb;</number> The main logo data generating screen <highlight><bold>21</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 15</cross-reference> also the following buttons: edit <highlight><bold>230</bold></highlight>, print test <highlight><bold>232</bold></highlight>, file output <highlight><bold>233</bold></highlight>, printer registration <highlight><bold>234</bold></highlight>, non-volatile memory management <highlight><bold>235</bold></highlight>, and quit <highlight><bold>246</bold></highlight>. </paragraph>
<paragraph id="P-0224" lvl="0"><number>&lsqb;0224&rsqb;</number> The edit button <highlight><bold>230</bold></highlight> starts the logo editing tool, and is used to re-edit a logo data file. When editing with the logo editing tool is finished, the logo data generating apparatus reads the content of the file being used (the edited content), and creates a logo reflecting the changes made. It is also possible to restrict editing with the edit button <highlight><bold>230</bold></highlight> to when the source data file of a logo being created is a file created with the logo editing tool <highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0225" lvl="0"><number>&lsqb;0225&rsqb;</number> The print test button <highlight><bold>232</bold></highlight> is used to actually print the created logo data on the connected target printer. The logo data is not registered in the printer at this time. </paragraph>
<paragraph id="P-0226" lvl="0"><number>&lsqb;0226&rsqb;</number> The non-volatile memory management button <highlight><bold>235</bold></highlight> enables printing or deleting NV graphics (NV: non-volatile) stored in the target printer. Pressing the non-volatile memory management button <highlight><bold>235</bold></highlight> displays a non-volatile memory management dialog box <highlight><bold>260</bold></highlight> such as shown in <cross-reference target="DRAWINGS">FIG. 19</cross-reference>. Pressing the get key codes button <highlight><bold>261</bold></highlight> reads the key codes of the NV graphics stored to the connected printer and displays them as a list in the NV graphics key code list area <highlight><bold>262</bold></highlight>. </paragraph>
<paragraph id="P-0227" lvl="0"><number>&lsqb;0227&rsqb;</number> Clicking the select all button <highlight><bold>263</bold></highlight> selects all of the key codes displayed in the NV graphics key code list area <highlight><bold>262</bold></highlight>. The selected key codes can be printed or deleted. Printing and deleting the selected key codes is selected using the print button <highlight><bold>264</bold></highlight> and delete button <highlight><bold>265</bold></highlight> at the bottom of the dialog box <highlight><bold>260</bold></highlight>. The cancel button <highlight><bold>267</bold></highlight> deselects the key codes selected in the key code list. The NV graphics corresponding to the listed key codes are stored in the logo data generating apparatus. Pressing the print button <highlight><bold>264</bold></highlight> reads and prints the graphics corresponding to the selected key codes. The key code can be printed in the header of the NV graphic. </paragraph>
<paragraph id="P-0228" lvl="0"><number>&lsqb;0228&rsqb;</number> The delete button <highlight><bold>265</bold></highlight> deletes the graphics corresponding to the selected key codes from internal memory. An alert is displayed before the file is deleted so that the user can confirm the deletion. Clicking the close button <highlight><bold>266</bold></highlight> closes the NV management dialog box <highlight><bold>260</bold></highlight> and returns to the main screen <highlight><bold>210</bold></highlight>. </paragraph>
<paragraph id="P-0229" lvl="7"><number>&lsqb;0229&rsqb;</number> (Creating the logo registration file) </paragraph>
<paragraph id="P-0230" lvl="0"><number>&lsqb;0230&rsqb;</number> The process for creating the logo registration file is described in further detail below with reference to a flow chart. <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a flow chart of the general process for creating the logo registration file <highlight><bold>5</bold></highlight> after the logo data is created. </paragraph>
<paragraph id="P-0231" lvl="0"><number>&lsqb;0231&rsqb;</number> The logo data (logo) is first created according to the procedure described with reference to <cross-reference target="DRAWINGS">FIG. 7</cross-reference> and <cross-reference target="DRAWINGS">FIG. 14</cross-reference> by the data adjustment processor <highlight><bold>13</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, <cross-reference target="DRAWINGS">FIG. 25</cross-reference>) (S<highlight><bold>310</bold></highlight>). After the logo data is completed, a command data set is generated (S<highlight><bold>330</bold></highlight>), and the logo data and command set are combined to produce the logo registration file <highlight><bold>5</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>) (S<highlight><bold>340</bold></highlight>). The resulting logo registration file <highlight><bold>5</bold></highlight> is then stored to floppy disk and/or sent to the target printer host (S<highlight><bold>350</bold></highlight>). </paragraph>
<paragraph id="P-0232" lvl="0"><number>&lsqb;0232&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> is a flow chart showing the step (S<highlight><bold>330</bold></highlight>) shown in <cross-reference target="DRAWINGS">FIG. 20</cross-reference> for creating the command data set in detail. </paragraph>
<paragraph id="P-0233" lvl="0"><number>&lsqb;0233&rsqb;</number> After the logo data is completed (<cross-reference target="DRAWINGS">FIG. 20</cross-reference>, S<highlight><bold>310</bold></highlight>), a registration command set run by the printer to register the logo data in the printer is generated (S<highlight><bold>331</bold></highlight>). The registration command set is a set of commands run by the target printer to store the logo data in non-volatile memory inside the printer. </paragraph>
<paragraph id="P-0234" lvl="0"><number>&lsqb;0234&rsqb;</number> After the registration command data set is completed (S<highlight><bold>331</bold></highlight>), whether the data transmission command set is to be added to the executable command set is determined (S<highlight><bold>332</bold></highlight>). The system can be configured so that adding the data transmission command set is optional according to the logo registration file type. </paragraph>
<paragraph id="P-0235" lvl="0"><number>&lsqb;0235&rsqb;</number> If the data transmission command set is not added (S<highlight><bold>332</bold></highlight> returns no), the procedure advances to the logo registration file generating step S<highlight><bold>340</bold></highlight>. If the data transmission command set is to be added (S<highlight><bold>332</bold></highlight> returns yes), the data transmission command set is created (S<highlight><bold>333</bold></highlight>). The data transmission command set is a set of commands for sending the logo data and registration command set from the host to the target printer. This enables the host to send the registration command set and logo data to the target printer automatically when the host reads the image data storage file or when the communication port number and other specific parameters are set. </paragraph>
<paragraph id="P-0236" lvl="0"><number>&lsqb;0236&rsqb;</number> Whether to include a port detection command set in the data transmission command set is then determined (S<highlight><bold>334</bold></highlight>). If it is necessary to include the port detection command set (S<highlight><bold>334</bold></highlight> returns yes), the port detection command set is created. If the port detection command set is unnecessary (S<highlight><bold>334</bold></highlight> returns no), the parameter input command set is created (S<highlight><bold>336</bold></highlight>). </paragraph>
<paragraph id="P-0237" lvl="0"><number>&lsqb;0237&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a detailed flow chart of the logo registration file generating step (S<highlight><bold>340</bold></highlight>, <cross-reference target="DRAWINGS">FIG. 20</cross-reference>). </paragraph>
<paragraph id="P-0238" lvl="0"><number>&lsqb;0238&rsqb;</number> After the command data set is created (S<highlight><bold>330</bold></highlight>, <cross-reference target="DRAWINGS">FIG. 20</cross-reference>), the logo registration file generating step (S<highlight><bold>340</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 22</cross-reference>) starts. The first step in this logo registration file generating routine is to create an executable command data set <highlight><bold>41</bold></highlight> containing the command set and logo data (print image data) to which the registration command set has been added (S<highlight><bold>341</bold></highlight>). This is indicated to the left of step S<highlight><bold>341</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 22</cross-reference>. The logo data can be stored in the printer by sending this file containing the registration command set and logo data from the host to the target printer. </paragraph>
<paragraph id="P-0239" lvl="0"><number>&lsqb;0239&rsqb;</number> It is then determined (S<highlight><bold>342</bold></highlight>) whether the data transmission command set was generated in the command data set generating routine (S<highlight><bold>330</bold></highlight>). If it was not (S<highlight><bold>342</bold></highlight> returns no), the executable command data set <highlight><bold>41</bold></highlight> from step S<highlight><bold>341</bold></highlight> is output as the logo registration file <highlight><bold>5</bold></highlight>. If the data transmission command set was also generated (S<highlight><bold>342</bold></highlight> returns yes), whether the port detection command set is also present is determined (S<highlight><bold>343</bold></highlight>). If the port detection command set was also created (S<highlight><bold>343</bold></highlight> returns yes), the port detection command set is combined with the data transmission command set (S<highlight><bold>344</bold></highlight>). If the port detection command set was not created (S<highlight><bold>343</bold></highlight> returns no), the parameter input command set is combined (S<highlight><bold>346</bold></highlight>). </paragraph>
<paragraph id="P-0240" lvl="0"><number>&lsqb;0240&rsqb;</number> A combined data set <highlight><bold>42</bold></highlight> (shown on the left side in <cross-reference target="DRAWINGS">FIG. 22</cross-reference>) combining a data transmission command set with the executable command data set <highlight><bold>41</bold></highlight> generated in step S<highlight><bold>341</bold></highlight> is then created (S<highlight><bold>345</bold></highlight>). </paragraph>
<paragraph id="P-0241" lvl="0"><number>&lsqb;0241&rsqb;</number> If the port detection command set is included in the data transmission command set in the combined command data set <highlight><bold>42</bold></highlight>, the port detection command is run when the logo registration file is read by the host, the communication port to which the printer is connected is automatically detected, and the registration command set and logo data are automatically sent from the host to the printer. </paragraph>
<paragraph id="P-0242" lvl="0"><number>&lsqb;0242&rsqb;</number> If the parameter input command set is included in the data transmission command set of the combined command data set <highlight><bold>42</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 22</cross-reference>), the parameter input command set is run when the host reads the logo registration file so that the communication port and other communication parameters can be specified from the host. When the communication parameters are set, the registration command set and logo data are sent to the printer from the specified communication port. </paragraph>
<paragraph id="P-0243" lvl="0"><number>&lsqb;0243&rsqb;</number> &lsqb;Effect of the invention&rsqb;</paragraph>
<paragraph id="P-0244" lvl="0"><number>&lsqb;0244&rsqb;</number> The effect of the present invention as described above is described below. Full-color data can be easily converted to two-color print data by generating reduced color image data reducing full-color data to a specific number of specified colors, such as eight colors, and converting the generated reduced-color image data to color-converted image data converted to a main color, secondary color, or background color based on a predefined color conversion method. </paragraph>
<paragraph id="P-0245" lvl="0"><number>&lsqb;0245&rsqb;</number> It is also possible to generate color-converted image data in which colors not present in the reduced-color image data are converted to the main color and/or secondary color. That is, color-converted image data having red pixels can be produced even when there are no red pixels in the reduced-color image data by setting red to the main color and/or secondary color.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0246" lvl="0"><number>&lsqb;0246&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a function block diagram of a logo data generating apparatus applying a two-color print data generating method according to a preferred embodiment of the present invention. </paragraph>
<paragraph id="P-0247" lvl="0"><number>&lsqb;0247&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> schematically illustrates the process for storing a logo using a logo editing tool and logo data generating apparatus; </paragraph>
<paragraph id="P-0248" lvl="0"><number>&lsqb;0248&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a function block diagram of a preferred embodiment of a logo editing tool; </paragraph>
<paragraph id="P-0249" lvl="0"><number>&lsqb;0249&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a function block diagram of a logo data generating apparatus; </paragraph>
<paragraph id="P-0250" lvl="0"><number>&lsqb;0250&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a function block diagram of a logo data generating apparatus; </paragraph>
<paragraph id="P-0251" lvl="0"><number>&lsqb;0251&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a function block diagram of a logo registration file output means <highlight><bold>18</bold></highlight> according to a preferred embodiment of a logo data output means <highlight><bold>16</bold></highlight> for generating a logo storage file; </paragraph>
<paragraph id="P-0252" lvl="0"><number>&lsqb;0252&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a flow chart of a preferred embodiment of a logo editing method for creating source data. </paragraph>
<paragraph id="P-0253" lvl="0"><number>&lsqb;0253&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows a preferred embodiment of the main screen of a logo editing tool or logo data generating apparatus; </paragraph>
<paragraph id="P-0254" lvl="0"><number>&lsqb;0254&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows an example of the main editing screen according to preferred embodiment of a logo editing tool. </paragraph>
<paragraph id="P-0255" lvl="0"><number>&lsqb;0255&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows an example of a size input dialog box displayed to specify the size of the logo (source data) when creating new source data using the logo editing tool; </paragraph>
<paragraph id="P-0256" lvl="0"><number>&lsqb;0256&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows an example of a text property input screen displayed to set text properties when editing the source data; </paragraph>
<paragraph id="P-0257" lvl="0"><number>&lsqb;0257&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> shows an example of an image property input screen displayed to set image properties when creating or editing source data using the logo editing tool; </paragraph>
<paragraph id="P-0258" lvl="0"><number>&lsqb;0258&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> shows an example of a position input screen displayed to specify the position of a logo using the logo editing tool; </paragraph>
<paragraph id="P-0259" lvl="0"><number>&lsqb;0259&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a flow chart showing a preferred embodiment of the logo generating method; </paragraph>
<paragraph id="P-0260" lvl="0"><number>&lsqb;0260&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> shows an example of a logo editing screen used to set the parameters for reading the source data and generating the logo data; </paragraph>
<paragraph id="P-0261" lvl="0"><number>&lsqb;0261&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> shows an example of a property input dialog box displayed by the logo data generating apparatus to input text data in the properties input box. </paragraph>
<paragraph id="P-0262" lvl="0"><number>&lsqb;0262&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> shows an example of a screen for defining numerous color assignments, (a) showing an example of a screen in which <highlight><bold>15</bold></highlight> colors can be assigned to eight colors after reducing the source data to eight colors, and (b) showing an example in which three colors are assigned to source data reduced to eight colors; </paragraph>
<paragraph id="P-0263" lvl="0"><number>&lsqb;0263&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> shows the relationship between the color assignment slider <highlight><bold>251</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 15</cross-reference> and the <highlight><bold>15</bold></highlight> colors that can be expressed using four dots per pixel in a printer that can print two colors (three colors in including the non-printing color) per dot; </paragraph>
<paragraph id="P-0264" lvl="0"><number>&lsqb;0264&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> shows an example of the selection dialog used for non-volatile memory management; </paragraph>
<paragraph id="P-0265" lvl="0"><number>&lsqb;0265&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a flow chart of the process for generating the logo registration file after creating the logo data; </paragraph>
<paragraph id="P-0266" lvl="0"><number>&lsqb;0266&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> is a flow chart showing the detailed steps of the command data set generating step (S<highlight><bold>330</bold></highlight>) in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>; </paragraph>
<paragraph id="P-0267" lvl="0"><number>&lsqb;0267&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a flow chart showing the detailed steps of the logo registration file generating step (S<highlight><bold>340</bold></highlight>) in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>; </paragraph>
<paragraph id="P-0268" lvl="0"><number>&lsqb;0268&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> shows the basic configuration of OPOS; </paragraph>
<paragraph id="P-0269" lvl="0"><number>&lsqb;0269&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> shows an example of a screen for controlling the image adjustment settings in OPOS; </paragraph>
<paragraph id="P-0270" lvl="0"><number>&lsqb;0270&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is a detailed function block diagram showing a preferred embodiment of a data adjustment processor used in a logo data generating apparatus; </paragraph>
<paragraph id="P-0271" lvl="0"><number>&lsqb;0271&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> shows displaying object images on screen; </paragraph>
<paragraph id="P-0272" lvl="0"><number>&lsqb;0272&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 27</cross-reference> is a function block diagram of a preferred embodiment of a gray scale processor used in a logo data generating apparatus; </paragraph>
<paragraph id="P-0273" lvl="0"><number>&lsqb;0273&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28</cross-reference> shows the concept of displaying reduced images in second and third embodiments of a logo data generating apparatus; </paragraph>
<paragraph id="P-0274" lvl="0"><number>&lsqb;0274&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29</cross-reference> is a flow chart of an alternative embodiment of the logo data generating method; </paragraph>
<paragraph id="P-0275" lvl="0"><number>&lsqb;0275&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 30</cross-reference> shows an example of a display when image processing is applied separately to individual objects; and </paragraph>
<paragraph id="P-0276" lvl="0"><number>&lsqb;0276&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 31</cross-reference> shows an example of a display when image processing is applied seperately to individual objects. </paragraph>
<paragraph id="P-0277" lvl="0"><number>&lsqb;0277&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 32</cross-reference> is an example of a figure showing the position of a two-color print data generating apparatus according to the present invention; </paragraph>
<paragraph id="P-0278" lvl="0"><number>&lsqb;0278&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33</cross-reference> is an example of a figure showing the configuration of a function block diagram of a two-color print data generating apparatus according to the present invention; </paragraph>
<paragraph id="P-0279" lvl="0"><number>&lsqb;0279&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 34</cross-reference> shows a reduced-color image and color-converted image in the present invention; </paragraph>
<paragraph id="P-0280" lvl="0"><number>&lsqb;0280&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 35</cross-reference> shows an example of a conversion table used in a fixed conversion method; </paragraph>
<paragraph id="P-0281" lvl="0"><number>&lsqb;0281&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 36</cross-reference> is an example of a flow chart for a two-color print data generating process according to the present invention; </paragraph>
<paragraph id="P-0282" lvl="0"><number>&lsqb;0282&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 37</cross-reference> is an example of a flow chart of the color conversion data setting process.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0283" lvl="0"><number>&lsqb;0283&rsqb;</number> 
<image file="US20030002060A1-20030102-P00001.TIF" id="EMI-00001"></image>
<image file="US20030002060A1-20030102-P00002.TIF" id="EMI-00002"></image>
<image file="US20030002060A1-20030102-P00003.TIF" id="EMI-00003"></image>
<image file="US20030002060A1-20030102-P00004.TIF" id="EMI-00004"></image>
<image file="US20030002060A1-20030102-P00005.TIF" id="EMI-00005"></image>
<image file="US20030002060A1-20030102-P00006.TIF" id="EMI-00006"></image>
<image file="US20030002060A1-20030102-P00007.TIF" id="EMI-00007"></image>
<image file="US20030002060A1-20030102-P00008.TIF" id="EMI-00008"></image>
<image file="US20030002060A1-20030102-P00009.TIF" id="EMI-00009"></image>
<image file="US20030002060A1-20030102-P00010.TIF" id="EMI-00010"></image>
<image file="US20030002060A1-20030102-P00011.TIF" id="EMI-00011"></image>
<image file="US20030002060A1-20030102-P00012.TIF" id="EMI-00012"></image>
<image file="US20030002060A1-20030102-P00013.TIF" id="EMI-00013"></image>
</paragraph>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight> &rsqb; A two-color print data generating method having a main color and secondary color and comprising the following steps: 
<claim-text>(a) a color reduction step for generating reduced-color image data in which each pixel color of full-color data is reduced to any one of the following specified colors denoted by color intensity of three primary colors, 
<claim-text>(color 1, color 2, color 3)&equals;(i, i, j) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(i, j, i) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(i, j, j) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(j, i, i) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(j, i, j) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(j, j, i) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(j, j, j); and </claim-text>
</claim-text>
<claim-text>(b) a color conversion step for generating two-color print data by converting each specified color in the reduced-color image data to a main color, secondary color, or background color according to the following conditions: 
<claim-text>(condition 1) convert the specified color denoted as (color 1, color 2, color 3) &equals;(i, i, i) to the main color; </claim-text>
<claim-text>(condition 2) convert the specified color denoted as (color 1, color 2, color 3)&equals;(j, j, j) to the background color; </claim-text>
<claim-text>(condition 3) convert the specified colors denoted as (color 1, color 2, color 3) &ne;(j, j, j) and (color 1, color 2, color 3) &ne;(i, i, i) to the secondary color. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight> &rsqb; A two-color print data generating method as described in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein each pixel of the full-color data is denoted (color 1, color 2, color 3)&equals;(k<highlight><subscript>1</subscript></highlight>-1, k<highlight><subscript>2</subscript></highlight>-1, k<highlight><subscript>3</subscript></highlight>-1) (where k<highlight><subscript>1</subscript></highlight>, k<highlight><subscript>2</subscript></highlight>, k<highlight><subscript>3 </subscript></highlight>are integers of 3 or greater), threshold values defined for the first color, second color, and third color and the values k<highlight><subscript>1</subscript></highlight>-1, k<highlight><subscript>2</subscript></highlight>-1, k<highlight><subscript>3</subscript></highlight>-1 are compared in step (a), and each pixel color of the full-color data is reduced to one of the specified colors denoted by i or j based on the result of the comparison. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight> &rsqb; A two-color print data generating method as described in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the first color, second color, and third color are, in no particular order, red, green, and blue. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight> &rsqb; A two-color print data generating method as described in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the first color, second color, and third color are, in no particular order, cyan, magenta, and yellow. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight> &rsqb; A two-color print data generating method having a main color and secondary color and comprising the following steps: 
<claim-text>(a) a color reduction step for generating reduced-color image data in which each pixel color in full-color data is reduced to one of a specified number of colors; </claim-text>
<claim-text>(b) a color conversion step for generating two-color print data by converting each specified color in the reduced-color image data to a main color, secondary color, or background color; </claim-text>
<claim-text>(c) a color conversion selection step for setting the main color and secondary color, and selecting as the color conversion method used in the color conversion step (b) one of the following steps: 
<claim-text>(b1) a first color conversion process for uniformly converting based on predefined conditions each specified color in the reduced-color image data to the main color, secondary color, or background color; and </claim-text>
<claim-text>(b2) a second conversion process for desirably converting each specified color in the reduced-color image data to the main color, secondary color, or background color based on a changeable conversion table linking each specified color to the main color, secondary color, or background color. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight> &rsqb; A two-color print data generating method as described in <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the color reduction step (a) is a color reduction step for generating reduced-color image data in which each pixel color of full-color data is reduced to any one of the following specified colors denoted by color intensity of three primary colors, 
<claim-text>(color 1, color 2, color 3)&equals;(i, i, j) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(i, j, i) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(i, j, j) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(j, i, i) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(j, i, j) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(j, j, i) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(j, j, j); and </claim-text>
<claim-text>the first color conversion method (b<highlight><bold>1</bold></highlight>) generates two-color print data by converting each specified color in the reduced-color image data to a main color, secondary color, or background color according to the following conditions: 
<claim-text>(condition 1) convert the specified color denoted as (color 1, color 2, color 3) &equals;(i, i, i) to the main color; </claim-text>
<claim-text>(condition 2) convert the specified color denoted as (color 1, color 2, color 3) &equals;(j, j, j) to the background color; </claim-text>
<claim-text>(condition 3) convert the specified colors denoted as (color 1, color 2, color 3) &ne;(j, j, j) and (color 1, color 2, color 3) &ne;(i, i, i) to the secondary color. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight> &rsqb; A two-color print data generating apparatus comprising: 
<claim-text>a reduced-color image data generating unit for generating reduced-color image data in which each pixel color of full-color data is reduced to any one of the following specified colors denoted by color intensity of three primary colors, 
<claim-text>(color 1, color 2, color 3)&equals;(i, i, j) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;i, j, i) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(i, j, j) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(j, i, i) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(j, i, j) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(j, j, i) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;j, j, j); and </claim-text>
</claim-text>
<claim-text>(b) a print data generating unit for generating two-color print data by converting each specified color in the reduced-color image data to a main color, secondary color, or background color according to the following conditions: 
<claim-text>(condition 1) convert the specified color denoted as (color 1, color 2, color 3) &equals;(i, i, i) to the main color; </claim-text>
<claim-text>(condition 2) convert the specified color denoted as (color 1, color 2, color 3) &equals;(j, j, j) to the background color; </claim-text>
<claim-text>(condition 3) convert the specified colors denoted as (color 1, color 2, color 3) &ne;(j, j, j) and (color 1, color 2, color 3) &ne;(i, i, i) to the secondary color. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight> &rsqb; A two-color print data generating apparatus as described in <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein each pixel of the full-color data is denoted (color 1, color 2, color 3)&equals;(k<highlight><subscript>1</subscript></highlight>-1, k<highlight><subscript>2</subscript></highlight>-1, k<highlight><subscript>3</subscript></highlight>-1) (where k<highlight><subscript>1</subscript></highlight>, k<highlight><subscript>2</subscript></highlight>, k<highlight><subscript>3 </subscript></highlight>are integers of 3 or greater), the reduced-color image data generating unit compares threshold values defined for the first color, second color, and third color and the values k<highlight><subscript>1</subscript></highlight>-1, k<highlight><subscript>2</subscript></highlight>-1, k<highlight><subscript>3</subscript></highlight>-1, and reduces each pixel color of the full-color data to one of the specified colors denoted by i or j based on the result of the comparison. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight> &rsqb; A two-color print data generating apparatus as described in <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein the first color, second color, and third color are, in no particular order, red, green, and blue. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight> &rsqb; A two-color print data generating apparatus as described in <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein the first color, second color, and third color are, in no particular order, cyan, magenta, and yellow. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight> &rsqb; A two-color print data generating apparatus comprising: 
<claim-text>a reduced-color image data generating unit for generating reduced-color image data in which each pixel color in full-color data is reduced to one of a specified number of colors; </claim-text>
<claim-text>a print data generating unit for generating two-color print data by converting each specified color in the reduced-color image data to a main color, secondary color, or background color; and </claim-text>
<claim-text>a color conversion selection unit for setting the main color and secondary color, and selecting as the color conversion method used by the print data generating unit one of the following methods: 
<claim-text>a first color conversion method for uniformly converting based on predefined conditions each specified color in the reduced-color image data to the main color, secondary color, or background color; and </claim-text>
<claim-text>a second conversion method for desirably converting each specified color in the reduced-color image data to the main color, secondary color, or background color based on a changeable conversion table linking each specified color to the main color, secondary color, or background color. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight> &rsqb; A two-color print data generating apparatus as described in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the reduced-color image data generating unit generates reduced-color image data in which each pixel color of full-color data is reduced to any one of the following specified colors denoted by color intensity of three primary colors, </claim-text>
<claim-text>(color 1, color 2, color 3) &equals;(i, i, j) </claim-text>
<claim-text>(color 1, color 2, color 3) &equals;(i, j, i) </claim-text>
<claim-text>(color 1, color 2, color 3) &equals;(i, j, j) </claim-text>
<claim-text>(color 1, color 2, color 3) &equals;(j, i, i) </claim-text>
<claim-text>(color 1, color 2, color 3) &equals;(j, i, j) </claim-text>
<claim-text>(color 1, color 2, color 3) &equals;(j, j, i) </claim-text>
<claim-text>(color 1, color 2, color 3) &equals;(j, j, j); and 
<claim-text>the first color conversion method generates two-color print data by converting each specified color in the reduced-color image data to a main color, secondary color, or background color according to the following conditions: </claim-text>
<claim-text>(condition 1) convert the specified color denoted as (color 1, color 2, color 3)&equals;(i, i, i) to the main color; </claim-text>
<claim-text>(condition 2) convert the specified color denoted as (color 1, color 2, color 3) &equals;(j, j, j) to the background color; </claim-text>
<claim-text>(condition 3) convert the specified colors denoted as (color 1, color 2, color 3) &ne;(j, j, j) and (color 1, color 2, color 3) &ne;(i, i, i) to the secondary color. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight> &rsqb; A data storage medium recording a program of a two-color print data generating method comprising the following steps: 
<claim-text>(a) a color reduction step for generating reduced-color image data in which each pixel color of full-color data is reduced to any one of the following specified colors denoted by color intensity of three primary colors, 
<claim-text>(color 1, color 2, color 3)&equals;(i, i, j) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(i, i, i) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(i, j, j) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(j, i, i) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(j, i, j) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(j, j, i) </claim-text>
<claim-text>(color 1, color 2, color 3)&equals;(j, j, j); and </claim-text>
</claim-text>
<claim-text>(b) a color conversion step for generating two-color print data by converting each specified color in the reduced-color image data to a main color, secondary color, or background color according to the following conditions: 
<claim-text>(condition 1) convert the specified color denoted as (color 1, color 2, color 3)&equals;(i, i, i) to the main color; </claim-text>
<claim-text>(condition 2) convert the specified color denoted as (color 1, color 2, color 3)&equals;(j, j, j) to the background color; </claim-text>
<claim-text>(condition 3) convert the specified colors denoted as (color 1, color 2, color 3) &ne;(j, j, j) and (color 1, color 2, color 3) &ne;(i, i, i) to the secondary color.</claim-text>
</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>33</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002060A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002060A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002060A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002060A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002060A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002060A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002060A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002060A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002060A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002060A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002060A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002060A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002060A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030002060A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030002060A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030002060A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030002060A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030002060A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030002060A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030002060A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030002060A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030002060A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030002060A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030002060A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030002060A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030002060A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00026">
<image id="EMI-D00026" file="US20030002060A1-20030102-D00026.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00027">
<image id="EMI-D00027" file="US20030002060A1-20030102-D00027.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00028">
<image id="EMI-D00028" file="US20030002060A1-20030102-D00028.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00029">
<image id="EMI-D00029" file="US20030002060A1-20030102-D00029.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00030">
<image id="EMI-D00030" file="US20030002060A1-20030102-D00030.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00031">
<image id="EMI-D00031" file="US20030002060A1-20030102-D00031.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00032">
<image id="EMI-D00032" file="US20030002060A1-20030102-D00032.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00033">
<image id="EMI-D00033" file="US20030002060A1-20030102-D00033.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00034">
<image id="EMI-D00034" file="US20030002060A1-20030102-D00034.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
