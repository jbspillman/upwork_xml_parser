<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005002A1-20030102-D00000.TIF SYSTEM "US20030005002A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005002A1-20030102-D00001.TIF SYSTEM "US20030005002A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005002A1-20030102-D00002.TIF SYSTEM "US20030005002A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005002A1-20030102-D00003.TIF SYSTEM "US20030005002A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005002A1-20030102-D00004.TIF SYSTEM "US20030005002A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005002A1-20030102-D00005.TIF SYSTEM "US20030005002A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005002A1-20030102-D00006.TIF SYSTEM "US20030005002A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005002A1-20030102-D00007.TIF SYSTEM "US20030005002A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030005002A1-20030102-D00008.TIF SYSTEM "US20030005002A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030005002A1-20030102-D00009.TIF SYSTEM "US20030005002A1-20030102-D00009.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005002</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10066037</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020131</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F017/24</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>707</class>
<subclass>515000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>System and method for defining and presenting a composite web page</title-of-invention>
</technical-information>
<continuity-data>
<non-provisional-of-provisional>
<document-id>
<doc-number>60265223</doc-number>
<document-date>20010131</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Kaihu</given-name>
<family-name>Chen</family-name>
</name>
<residence>
<residence-us>
<city>Lake Grove</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>George</given-name>
<middle-name>Hong Zhi</middle-name>
<family-name>Hsu</family-name>
</name>
<residence>
<residence-us>
<city>Levittown</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>COMPUTER ASSOCIATES THINK, INC.</organization-name>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>Calfee, Halter &amp; Griswold LLP</name-1>
<name-2></name-2>
<address>
<address-1>1650 Fifth Third Center</address-1>
<address-2>21 East State Street</address-2>
<city>Columbus</city>
<state>OH</state>
<postalcode>43215-4243</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method for defining a composite web page is disclosed which includes identifying a web page referencing at least one associated element. The method further includes analyzing the web page to determine a list of the associated elements and presenting the list to a user. A user selection of one or more associated elements from the list is received and registered for later retrieval. A method for presenting a composite web page is also disclosed. Systems and computer-readable storage media for defining and presenting a composite web page are also disclosed. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application claims priority to U.S. Provisional Application Serial No. 60/265,223 filed Jan. 31, 2001, which is incorporated herein by reference in its entirety. The concurrently filed U.S. Non-Provisional Application entitled &ldquo;System and Method For Isomorphic Data-Driven Web Page Generation&rdquo; is also incorporated herein by reference in its entirety.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">TECHNICAL FIELD </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present application generally relates to the field of generating and presenting information over a network. More specifically, the present application relates to a system and method for dynamically assembling and presenting selected web page content from one or more sources. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Over the last twenty years, the use of a global network of interconnected computers, commonly referred to as the &ldquo;Internet&rdquo; or the &ldquo;World Wide Web, has increased at a tremendous rate. One particularly useful aspect of the Internet is the ability to send and retrieve information to and from third parties via web pages or electronic mail (&ldquo;e-mail&rdquo;). Millions of Internet users rely on this aspect of the network on a daily basis to send and receive critical business information as well as news, advertising and other information. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> As user familiarity with web browser technology increases, such browsers are becoming the preferred graphical user interfaces (&ldquo;GUI&rdquo;) for accessing remote information stores, and/or computer programs over the Internet. Information accessed this way is displayed in the form of web pages, each page generally representing a point of access. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Presentation of web pages using a web browser may be problematical in certain circumstances. For example, the traditional GUI may be cumbersome when there is a need to see information from many web pages at the same time. Another example of circumstances under which a traditional GUI presentation is cumbersome is when there is a need to have command and control of many remote applications at the same time. The presentation approach is an issue, at least in part, because a typical web page occupies a substantial portion of the space on a computer monitor screen, and it is not possible to make many web pages completely visible on a computer monitor at the same time. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> One traditional solution to this presentation problem involves manually flipping through multiple web pages on a computer screen. This solution is inefficient, tedious and confusing for the user. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Another solution to this presentation problem is to have a computer programmer create a special program designed specifically to combine the relevant web pages. In order to create a composite view of a new set of web pages, new computer code is created by such programmers. Since an end-user has little control over this process, this effectively constitutes an &ldquo;information publication&rdquo; where the publisher of the information controls what is being seen in the resulting composite page. Consequently, such a solution is expensive, slow, and not easily repeatable. Further, such a solution has the additional disadvantage that the end user is not able to control or alter the resulting composited web page or the compositing process. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY </heading>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> This disclosure provides methods and systems for defining and presenting composite web pages in a computer processing environment. According to one aspect of the disclosure, a method for defining a composite web page is disclosed. The method includes identifying a web page which references at least one associated element, analyzing the web page to determine a list of the associated elements, presenting the list of associated elements to a user, and receiving a user selection of one or more of the associated elements from the list. The selected elements are intended to be displayed on a composite web page. The user selection is registered or stored for later reference so that a user can retrieve the composite web page without having to redefine it. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> According to a second aspect of the disclosure, a method for presenting a composite web page is disclosed. The method includes receiving a user request to present a composite web page, by, for example, identifying and retrieving the elements of the composite web page, and rendering the retrieved elements to form the composite web page. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> A system for defining a composite web page is also disclosed. In one embodiment, the system includes a processor and memory storing processor executable instructions for controlling the operation of the processor. The processor executable instructions include instructions to identify a web page, which references at least one associated element, instructions to analyze the web page to determine a list of the associated elements and to present the list to a user. The processor executable instructions further include instructions to receive a user selection of one or more associated elements from the list and register the user selection. The selected elements are the elements which are intended to comprise a composite web page for future presentation. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> A system for presenting a composite web page is also disclosed. The system includes a processor and memory storing processor executable instructions for controlling the operation of the processor. The processor executable instructions include instructions to receive a user request to present a composite web page and to identify at least one element of the composite web page. The processor executable instructions also include instructions to retrieve the identified element(s) and render them to form the composite web page. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Computer-readable storage media are also disclosed which include processing instructions for implementing certain disclosed methods. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The disclosed systems and methods enable a user to identify selected elements of one or more relevant web pages, and combine them into a single composite web page. The features and advantages of the proposed method and system are readily apparent from the following description when taken in connection with the accompanying drawings.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> For a more complete understanding of the disclosed systems and methods, reference is now made to the following description taken in conjunction with the accompanying drawings in which like reference numbers indicate like features and wherein: </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1A</cross-reference> is a block diagram of an exemplary environment of the disclosed system and method; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1B</cross-reference> is a block diagram of an alternate exemplary environment of the disclosed system and method; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is an exemplary methodology for defining a composite web page in accordance with one embodiment of the disclosed method; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is an exemplary methodology for presenting a composite web page in accordance with one embodiment of the disclosed method; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram illustrating a system for defining a composite web page in accordance with one embodiment of the disclosure; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram illustrating a system for presenting a composite web page in accordance with one embodiment of the disclosure; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a computer screen display illustrating an exemplary graphical user interface for defining a composite web page; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a computer screen display illustrating a portion of the data included in a specification; and </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a computer screen display illustrating the presentation of a composite web page.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The methods and systems according to the present application define and present composite web pages based on stored composite page definitions. Such page definitions can be stored locally in, for example, page registry <highlight><bold>160</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>A, or they be stored in a distributed storage medium, for example, page registry <highlight><bold>160</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 1B</cross-reference>. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>A, there is illustrated a block diagram of an exemplary service provider system <highlight><bold>100</bold></highlight> for defining and presenting composite web pages. The service provider system <highlight><bold>100</bold></highlight> includes an Application Integration Bus <highlight><bold>110</bold></highlight> that is capable of storing information to and retrieving information from a variety of disparate sources including, for example, application <highlight><bold>112</bold></highlight>, and data sources <highlight><bold>114</bold></highlight>, <highlight><bold>116</bold></highlight> and <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The application integration bus <highlight><bold>110</bold></highlight> is an infrastructure that facilitates communication between different computer programs in a consistent and reliable manner. An example of a suitable application integration bus is the CA Common Services application, formerly known as Jasmineii, manufactured by Computer Associates International Inc., Islandia, N.Y. <cross-reference target="DRAWINGS">FIG. 1A</cross-reference> shows the application integration bus <highlight><bold>110</bold></highlight> connected to the application <highlight><bold>112</bold></highlight>, data sources <highlight><bold>114</bold></highlight>, <highlight><bold>116</bold></highlight> and <highlight><bold>118</bold></highlight> and page registry <highlight><bold>160</bold></highlight> via local connections, such as POTS, wireless telephone networks, Local Area Networks (&ldquo;LAN&rdquo;), and Wide Area Networks (&ldquo;WAN&rdquo;). <cross-reference target="DRAWINGS">FIG. 1B</cross-reference> shows the application integration bus <highlight><bold>110</bold></highlight> connected to the application <highlight><bold>112</bold></highlight>, data sources <highlight><bold>114</bold></highlight>, <highlight><bold>116</bold></highlight> and <highlight><bold>118</bold></highlight> and page registry <highlight><bold>160</bold></highlight> via the Internet. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Application Integration Bus <highlight><bold>110</bold></highlight> delivers data from the disparate sources to Data Format Translator <highlight><bold>120</bold></highlight>, which may be a Data Format Translator or other translator providing data representation of various types of information in a standard format. For example, in one embodiment, XML is used to represent various types of information, such as documents, spreadsheets and databases. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The Data Format Translator <highlight><bold>120</bold></highlight> is capable of translating data in a format that is not suitable for representing information, e.g., data in a proprietary binary format, into a format that is suitable for representation (e.g., XML syntax (or data) which can represent information such as text documents, spread sheets, database information and web information). More particularly, the data format translator <highlight><bold>120</bold></highlight> traverses a data structure in, for example a binary form, and transforms the data structure into a format that is suitable for representation, which can be XML syntax (or data). Data Format Translator <highlight><bold>120</bold></highlight> uses data received from Application Integration Bus <highlight><bold>110</bold></highlight> to process requests and deliver data(e.g., XML data) to GUI Data Manager <highlight><bold>130</bold></highlight>. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The GUI data manager <highlight><bold>130</bold></highlight> converts the data from the data format translator <highlight><bold>120</bold></highlight> into a format suitable for presentation to a user, e.g., HTML, PDF formats. For example, if the output of the data format translator <highlight><bold>120</bold></highlight> is XML data, the GUI data manager <highlight><bold>130</bold></highlight> could convert the XML data to HTML data, which is suitable for presentation to one or more users. In addition to interfacing with Data Format Translator <highlight><bold>120</bold></highlight>, GUI Data Manager <highlight><bold>130</bold></highlight> accesses, updates and maintains web pages stored in Page Registry <highlight><bold>160</bold></highlight> via Application Integration Bus <highlight><bold>110</bold></highlight>. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> GUI Data Manager <highlight><bold>130</bold></highlight> responds to requests received from Web Server <highlight><bold>140</bold></highlight>. The Web Server presents a Uniform Resource Locator (&ldquo;URL&rdquo;) to GUI Data Manager <highlight><bold>130</bold></highlight>, and the GUI Data Manager <highlight><bold>130</bold></highlight> responds by delivering a presentation definition of the data such as, for example, Hyper-Text Markup Language (&ldquo;HTML&rdquo;) code. Generally, Web Server <highlight><bold>140</bold></highlight> provides web pages to one or more users <highlight><bold>170</bold></highlight> over the Internet <highlight><bold>150</bold></highlight>. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The operation of systems <highlight><bold>400</bold></highlight> and <highlight><bold>500</bold></highlight> within the service provider system <highlight><bold>100</bold></highlight> illustrated in <cross-reference target="DRAWINGS">FIGS. 1A and 1B</cross-reference> are described in greater detail with reference to <cross-reference target="DRAWINGS">FIGS. 4 and 5</cross-reference>, respectively. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Although the described embodiment is an Internet-based web page delivery and presentation solution, it should be understood that the methods disclosed herein may also be applied to other systems. For example, wireless telephone networks, LAN&apos;s, WAN&apos;s, Extranets and Intranets, as well as other types of networks, could all support the disclosed methods. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, there is illustrated a flowchart describing the operation of one methodology for defining a composite web page. At block <highlight><bold>205</bold></highlight>, the system identifies a web page from which one or more elements will be extracted for use in a composite web page. The set of web pages that may be used by the system includes any web page that may be parsed into it&apos;s constituent elements. Of course, plug-ins may be utilized to parse specific types of data on web pages. The system may identify the web page, for example, using a URL supplied by a user, such as through typing, copying or dragging a URL displayed in a browser and dropping it into a work area. The identified web page references at least one associated element. An elements of a web page may be, for example, a text block, a table, a digital image, or a grouping of such items from a tree structure defining the web page. For example, an element of a page http://www.msnbc.com may be a digital photograph associated with a lead news story, or a set of current headlines. The system analyzes the web page to determine a list of associated elements, as shown by block <highlight><bold>210</bold></highlight>. The analysis may include parsing HTML source code of the identified web page, although any other technique for determining an element list would be acceptable. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> At block <highlight><bold>215</bold></highlight>, the system presents the list of elements from the identified web page to a user. The list may be embodied, for example, as a textual list, a graphical set of icons or the list may be formatted to provide the appearance of the actual web page, among other things. In one embodiment, the listed elements are presented to the user in the form of a tree structure, shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. While presentation of the list in other ways, such as using icons or using a simple list, for example, would be sufficient, presentation of the list in the form of a tree structure provides a user with a view of the relationships between elements. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The system allows the user to select one or more listed elements or parts of the identified web page that the user is particularly interested in viewing as part of a composite web page. At block <highlight><bold>220</bold></highlight>, the system receives from the user a selection of one or more elements that will form at least a portion of the composite web page. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Upon the selection of one or more elements by the user, the system registers the user selection, as shown by block <highlight><bold>225</bold></highlight>. The registration of the user selection includes persistently storing the selection. Such persistent storage may be accomplished using a local registry or a registry on a remote server. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> The registration of the user selection includes creating a specification that includes data defining the composite web page including an identification of the selected elements. Registration further includes transmitting the specification over the Internet, and storing the specification in a persistent registry, such as page registry <highlight><bold>160</bold></highlight>. The specification may include information regarding how to fetch the web page in its entirety, and/or information how to extract each selected element from the web page. The specification may include data not only identifying the selected elements of the composite web page, but also data identifying the source web page for each selected element. The specification may also include information regarding how to retrieve the source web pages and extract each selected element from its associated source web page. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> It should be appreciated that while the methodology of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is described with respect to a single identified web page, the methodology may also be used to define a composite page comprising elements from multiple identified web pages. In one alternative approach, more than one web page may be identified and analyzed at blocks <highlight><bold>205</bold></highlight> and <highlight><bold>210</bold></highlight>, and the system presents a master list of elements to the user for selection. The master list may include, for example, some identification regarding the web page to which each element is associated. This may be accomplished by segmenting or sorting the list of elements, accordingly. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Alternatively, the system may present a separate list of elements for each identified web page. In such an embodiment, the user may select elements from among the plurality of element lists to define the composite web page. The graphical user interface for selecting elements according to such an embodiment is illustrated in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> It should be further appreciated that in an alternate embodiment, the methodology may include determining an identifier associated with the user. Examples of such an identifier include, the logon name of a user, a role or position of employment associated with a user, and an identifier associated with a particular network node or computer. The identifier may be stored in the registry to associate the composite web page with the user. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, there is illustrated a flowchart describing the operation of one methodology for presenting a composite web page. At block <highlight><bold>305</bold></highlight>, the system receives a user request to present a previously defined composite web page. The composite web page may have been previously defined in accordance with the methodology of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, or it could have been defined in accordance with another methodology that results in a stored composite web page definition. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The system identifies the selected elements that comprise the composite web page at block <highlight><bold>310</bold></highlight> and retrieves the selected elements at block <highlight><bold>315</bold></highlight>. In one embodiment, identification of the selected elements <highlight><bold>310</bold></highlight> is accomplished by accessing a persistent registry, such as page registry <highlight><bold>160</bold></highlight> and retrieving a specification containing data defining the composite web page. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> After a selected element has been identified, the system may retrieve it for inclusion in the composite web page. In one embodiment, the system retrieves the latest versions of each source web page that contains an element selected for presentation on the composite web page, according to information stored in the registry. Each selected element is extracted from its associated source web page, based on the specification of the composite page. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> At block <highlight><bold>320</bold></highlight>, the system renders the composite page in a web browser for presentation to the user. It should be appreciated that the rendering of the composite web page, including for example the relative placement of the selected elements, may be performed in accordance with instructions or data stored in the specification. The stored instructions or data may be defined by a user during a composite page definition process or may be automatically determined based on one or more factors, including certain characteristics of the selected elements, such as display size, data refresh requirements, frequency of use or preferred layering order (or z-order). </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> In another embodiment, the rendering of the composite web page may be automatically determined at the time of rendering. In this embodiment, the automatic determination may be based on one or more run-time variables, such as, for example, the dimensions of a window containing the composite web page. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> According to one embodiment, the methodology for presenting a composite web page to a user includes determining an identifier associated with the user and accessing the registry is based on the identifier. Determining such a user identifier enables the user to request a composite web page that has been tailored to the specific needs of the user. In addition, in embodiments in which the page registry is stored on a remote server, the user is able to request the composite page to be displayed regardless of the particular local computer the user is operating, as long as the local computer is able to access the registry on the remote server, for example, using the Internet. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 4</cross-reference> there is illustrated one embodiment of a system for defining a composite web page <highlight><bold>400</bold></highlight>. As shown, the system includes a processor <highlight><bold>410</bold></highlight> and memory <highlight><bold>415</bold></highlight>. The memory <highlight><bold>415</bold></highlight> is connected to the processor <highlight><bold>410</bold></highlight> and stores processor executable instructions for defining a composite web page. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> The memory <highlight><bold>415</bold></highlight> includes composite web page definition logic <highlight><bold>420</bold></highlight> for enabling a user to define a composite web page. The composite web page definition logic <highlight><bold>420</bold></highlight> employs a source web page identifier <highlight><bold>425</bold></highlight> to identify one or more source web page containing element(s) that the user elects to include in a composite web page. The definition logic <highlight><bold>420</bold></highlight> also employs a source web page analyzer <highlight><bold>430</bold></highlight> and list presentation logic <highlight><bold>435</bold></highlight> to respectively analyze the source web pages to identify a list of associated elements and present the list to the user. A user selection module <highlight><bold>440</bold></highlight> is used by the definition logic <highlight><bold>420</bold></highlight> to enable the user to select listed elements for inclusion in the composite web page. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The composite web page definition logic registers the user selection of elements using a selection registration module <highlight><bold>445</bold></highlight>. In one embodiment, selection registration module <highlight><bold>445</bold></highlight> creates a specification of the selected elements, transmits the specification over the Internet, and stores the specification in a persistent registry, such as page registry <highlight><bold>160</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>). Of course, in an alternate embodiment, the persistent registry may reside locally on the user&apos;s computer. The specification may include information regarding how to fetch the web page in its entirety, as well as how to extract each selected element from the web page. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 5</cross-reference> there is illustrated one embodiment of a system for presenting a previously defined composite web page <highlight><bold>500</bold></highlight>. As shown, the system includes a processor <highlight><bold>510</bold></highlight> and memory <highlight><bold>515</bold></highlight>. The memory <highlight><bold>515</bold></highlight> is connected to the processor <highlight><bold>510</bold></highlight> and stores processor executable instructions for presenting the composite web page. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The memory <highlight><bold>515</bold></highlight> includes composite web page presentation logic <highlight><bold>520</bold></highlight> for presenting the composite web page to a user. The composite web page presentation logic <highlight><bold>520</bold></highlight> employs a composite web page request receiver <highlight><bold>525</bold></highlight> to receive a request for presentation of the composite web page. The presentation logic <highlight><bold>520</bold></highlight> also employs an element identifier <highlight><bold>530</bold></highlight> to identify the elements associated with the requested composite web page. In one embodiment, element identifier <highlight><bold>530</bold></highlight> accesses a persistent registry, such as page registry <highlight><bold>160</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>) and retrieves a specification containing data defining the composite web page. The specification may include data not only identifying the selected elements of the composite web page, but also data identifying the source web page for each selected element. The specification may further include information regarding how to retrieve the source web pages and extract each selected element from its associated source web page. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> An element retriever <highlight><bold>535</bold></highlight> retrieves the element(s) identified by element identifier <highlight><bold>530</bold></highlight>. In a one embodiment, element retriever <highlight><bold>535</bold></highlight> retrieves the latest versions of each source web page that contains an element selected for presentation on the composite web page, according to information stored in the registry. Each selected element is extracted from its associated source web pages, based on the specification of the composite page. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> Composite web page presentation logic <highlight><bold>520</bold></highlight> utilizes a composite web page renderer <highlight><bold>540</bold></highlight> to display the web page for the user. In one embodiment, renderer <highlight><bold>540</bold></highlight> determines the relative placement of the selected elements, which may be performed in accordance with instructions or data stored in the specification. The stored instructions or data may be defined by a user during a composite page definition process or may be automatically determined based on one or more factors, including certain characteristics of the selected elements. In another embodiment, renderer <highlight><bold>540</bold></highlight> automatically determines the placement of elements at the time of rendering. In this embodiment, automatic determination may be based on one or more run-time variables, such as, for example, the dimensions of a window containing the composite web page. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> In alternative embodiments, the systems illustrated in <cross-reference target="DRAWINGS">FIGS. 4 and 5</cross-reference> may be embodied as computer readable code stored on a computer readable medium. The code may include one or more computer/processor executable instructions that cause the computer to act in a selected manner. The computer readable medium may be an optical storage device such as a CD-ROM or DVD-ROM, a magnetic storage device such as a hard disk or floppy disk, an electronic storage device such as a memory card, RAM, ROM, EPROM, EEPROM, or flash memory, or any other storage device capable of storing computer readable processor instructions. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, there is shown a computer screen display <highlight><bold>600</bold></highlight> illustrating an exemplary graphical user interface for defining a composite web page. Display <highlight><bold>600</bold></highlight> is a web page dialog that is presented upon user selection of a web page to include in a composite web page. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Display <highlight><bold>600</bold></highlight> includes a navigation page <highlight><bold>610</bold></highlight> that displays the constituent elements of the selected web page. In the illustrated example, the elements of the selected web page are displayed in a tree format according to the source HTML code of the selected web page. The navigation pane enables the user to select a portion of the selected web page for inclusion in the composite web page. In the illustrated example, the user has made a selection <highlight><bold>615</bold></highlight>. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> The presentation associated with the selection <highlight><bold>615</bold></highlight> is displayed in preview pane <highlight><bold>610</bold></highlight>. Preview pane <highlight><bold>620</bold></highlight> presents a graphical preview of a selected portion of the web page to provide the user with visual verification the selection <highlight><bold>615</bold></highlight> is appropriate for the user&apos;s purposes. To enlarge or reduce the scope of the selection, the user may click buttons <highlight><bold>622</bold></highlight> or <highlight><bold>624</bold></highlight>, respectively. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> Display <highlight><bold>600</bold></highlight> further includes area <highlight><bold>630</bold></highlight> for displaying the partial content selection criteria. Area <highlight><bold>630</bold></highlight> may be used to assist the presentation system <highlight><bold>500</bold></highlight> in identifying the selected elements. This is particularly useful with regard to web pages that are dynamic, such as, for example, pages that display news or other pages that may be frequently updated. The partial content selection criteria defined at <highlight><bold>630</bold></highlight>, may define at least a portion of the specification associated with the content. An example of the specification data is illustrated in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a computer screen display <highlight><bold>800</bold></highlight> illustrating the presentation of a composite web page. Display <highlight><bold>800</bold></highlight> is an exemplary result of methodology <highlight><bold>300</bold></highlight> performed by system <highlight><bold>500</bold></highlight>. The selection illustrated in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is displayed as part of a composite web page at <highlight><bold>810</bold></highlight>. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> While the disclosed systems and methods may be employed at a single enterprise to assist its users, it is also envisioned that the disclosed systems and methods could be made available by a service provider over the Internet. By accessing a web site employing an applet implementing the methods of the disclosed methods, a service provider may allow the public to create their own composite views of other web pages. Such a web site may derive its revenue from the traffic generated from such a service, for example, by charging a nominal subscription fee, or by generating revenue from advertisements. In addition, such a web site may also serve as a &ldquo;portal&rdquo; to other web sites, and derive revenue from producing pre-defined composite views available to its users, and/or charge a fee for other company&apos;s content to be included in such a composite view. In another embodiment, a service provider maintaining such a web site may accept subscriptions from other companies, so that a composite web page with content specificied by such a company may be made available, for example, to a specific group of individual users, to the general public, or to other companies, such as for business-to-business purposes. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Unlike typical web portal businesses, such as yahoo.com or msn.com, a business method employing the disclosed methods and systems enable the user to create a composite view of any web pages over the Internet, by simply connecting to a web site and using the service provided. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> Although the disclosed systems and methods have been described in terms of specific embodiments and applications, persons skilled in the art can, in light of this teaching, generate additional embodiments, including various changes, substitutions and alterations, without exceeding the scope or departing from the spirit of the disclosure. Accordingly, it is to be understood that the drawing and description in this disclosure are proffered to facilitate comprehension of the systems and methods, and should not be construed to limit the scope thereof. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for defining a composite web page, comprising: 
<claim-text>identifying a web page; </claim-text>
<claim-text>analyzing the web page to determine a list of the associated elements; </claim-text>
<claim-text>presenting the list to a user; </claim-text>
<claim-text>receiving a user selection of one or more associated elements from the list; and </claim-text>
<claim-text>registering the user selection. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein registering includes storing the user selection in a local registry. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein registering includes transmitting the user selection to a remote server for storage. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising creating a specification, the specification including data defining how to fetch at least one web page associated with the selected elements and how to extract the selected elements. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein identifying the web page includes identifying a plurality of web pages; and wherein the list includes elements associated with each of the plurality of web pages. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <highlight><bold>5</bold></highlight>, further including defining segments of the list according to each of the plurality of web pages </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference> where presenting includes presenting each of the segments of the list at separate times. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising determining an identifier associated with the user and wherein registering includes storing the identifier. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A method for presenting a composite web page, comprising: 
<claim-text>receiving a user request to present a composite web page; </claim-text>
<claim-text>identifying at least one element of the composite web page; </claim-text>
<claim-text>retrieving the at least one element; and </claim-text>
<claim-text>rendering the at least one element to form the composite web page. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein identifying includes accessing a registry. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein identifying includes: 
<claim-text>determining an identifier associated with the user; and </claim-text>
<claim-text>accessing the registry is based on the identifier. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein retrieving includes: 
<claim-text>retrieving a web page associated with an element; and </claim-text>
<claim-text>extracting the element from the associated web page. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein identifying includes: 
<claim-text>accessing a registry, the registry including data defining the position of each element; and </claim-text>
<claim-text>wherein rendering includes displaying each element according to the data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A system for defining a composite web page, comprising: 
<claim-text>a processor; </claim-text>
<claim-text>a memory coupled to the processor storing processor executable instructions to control the operation of the processor; </claim-text>
<claim-text>the processor executable instructions including: 
<claim-text>instructions to identify a web page, the web page referencing at least one associated element; </claim-text>
<claim-text>instructions to analyze the web page to determine a list of the associated elements; </claim-text>
<claim-text>instructions to present the list to a user; </claim-text>
<claim-text>instructions to receive a user selection of one or more associated elements from the list, the selected elements for display on a composite web page; and </claim-text>
<claim-text>instructions to register the user selection. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A system for presenting a composite web page, comprising: 
<claim-text>a processor; </claim-text>
<claim-text>a memory coupled to the processor storing processor executable instructions to control the operation of the processor; </claim-text>
<claim-text>the processor executable instructions including: 
<claim-text>instructions to receive a user request to present a composite web page; </claim-text>
<claim-text>instructions to identify at least one element of the composite web page; </claim-text>
<claim-text>instructions to retrieve the at least one element; and </claim-text>
<claim-text>instructions to render the at least one element to form the composite web page. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A computer-readable storage medium encoded with processing instructions for defining a composite web page, including: 
<claim-text>computer readable instructions for identifying a web page; </claim-text>
<claim-text>computer readable instructions for analyzing the web page to determine a list of the associated elements; </claim-text>
<claim-text>computer readable instructions for presenting the list to a user; </claim-text>
<claim-text>computer readable instructions for receiving a user selection of one or more associated elements from the list; and </claim-text>
<claim-text>computer readable instructions for registering the user selection. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A computer-readable storage medium encoded with processing instructions for presenting a composite web page, including: 
<claim-text>computer readable instructions for receiving a user request to present a composite web page; </claim-text>
<claim-text>computer readable instructions for identifying at least one element of the composite web page; </claim-text>
<claim-text>computer readable instructions for retrieving the at least one element; and </claim-text>
<claim-text>computer readable instructions for rendering the at least one element to form the composite web page.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005002A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005002A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005002A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005002A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005002A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005002A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005002A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005002A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030005002A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030005002A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
