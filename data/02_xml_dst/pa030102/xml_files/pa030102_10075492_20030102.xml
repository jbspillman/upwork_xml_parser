<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005278A1-20030102-D00000.TIF SYSTEM "US20030005278A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005278A1-20030102-D00001.TIF SYSTEM "US20030005278A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005278A1-20030102-D00002.TIF SYSTEM "US20030005278A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005278A1-20030102-D00003.TIF SYSTEM "US20030005278A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005278A1-20030102-D00004.TIF SYSTEM "US20030005278A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005278A1-20030102-D00005.TIF SYSTEM "US20030005278A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005278A1-20030102-D00006.TIF SYSTEM "US20030005278A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005278A1-20030102-D00007.TIF SYSTEM "US20030005278A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030005278A1-20030102-D00008.TIF SYSTEM "US20030005278A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030005278A1-20030102-D00009.TIF SYSTEM "US20030005278A1-20030102-D00009.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005278</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10075492</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020212</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>01114883.7</doc-number>
</priority-application-number>
<filing-date>20010630</filing-date>
<country-code>CN</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/177</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>713</class>
<subclass>002000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Multifunction semiconductor storage device and a method for booting-up computer host</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Guoshun</given-name>
<family-name>Deng</family-name>
</name>
<residence>
<residence-non-us>
<city>Shenzhen</city>
<country-code>CN</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Xiaohua</given-name>
<family-name>Cheng</family-name>
</name>
<residence>
<residence-non-us>
<city>Shenzhen</city>
<country-code>CN</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Feng</given-name>
<family-name>Xiang</family-name>
</name>
<residence>
<residence-non-us>
<city>Shenzhen</city>
<country-code>CN</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>PATTERSON, THUENTE, SKAAR &amp; CHRISTENSEN, P.A.</name-1>
<name-2></name-2>
<address>
<address-1>4800 IDS CENTER</address-1>
<address-2>80 SOUTH 8TH STREET</address-2>
<city>MINNEAPOLIS</city>
<state>MN</state>
<postalcode>55402-2100</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A semiconductor storage device connected to the host system through the general purpose interface, including a semiconductor storage media module (<highlight><bold>1</bold></highlight>) and a controller module (<highlight><bold>2</bold></highlight>), in which the controller module (<highlight><bold>2</bold></highlight>) consists of a general purpose interface control module (<highlight><bold>21</bold></highlight>), a microprocessor and control module (<highlight><bold>22</bold></highlight>). Various device class protocols can be realized at the interface application level of the semiconductor storage device, which makes it possible to simulate and realize the storage functions of various storage disks. One or a plurality of storage spaces are opened up in the semiconductor storage media and one or a plurality of storage disks are supported by the same device; furthermore, the device supports hot plug and play and it is removable. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to a multifunction semiconductor storage device using semiconductor storage media, in particular, a multifunction semiconductor memory device connected to the host computer via the general-purpose interface. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of the Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The semiconductor storage media is a semiconductor chip for storing data; the chip can receive writing commands and data and then write them into the memory chip. The chip can also receive external read commands and read the data stored on the chip and output the data. In addition, the chip also supports other commands such as erasure and resetting commands. These kinds of semiconductor storage devices of this kind include flash memory, EEPROM, FRAM, DRAM, SRAM, SDRAM or MRAM but not are restricted to them. Compared with conventional magnetic and optic memory devices, the present semiconductor memory device has the features of small volume, less weight, large storage capacity, and higher reliability and low power consumption. In addition, it does not require any specific mechanism to drive it. For example, in Chinese patent No. ZL 00114081.7 &ldquo;Full Electronic External Flash Memory Technique and Device&rdquo;, it discloses an external memory device using a flash memory device, wherein a semiconductor storage media and general purpose interface are used so as to realize external removable disk without external drive power supply; it supports hot dock/undock and plug-and-play function and it is not necessary to turn off the computer when doing plug and play. Furthermore, the removable memory has higher speed of data access and larger capacity than a floppy disk. In addition, it also has the advantages of small volume, easy portability, and indefectible. It can be applied to data processing systems supporting universal interface channels such as USB (universal serial bus) and IEEE1394. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Traditional floppy diskettes and floppy disk drives play less and less roles, especially after the above-mentioned external flash memory device had been invented, which makes it possible the exchange of data without floppy diskettes and floppy disk drives. However, computer users today still find that floppy diskettes and floppy disk drives are indispensable. One of the reasons is that the external flash memory disk before this invention above does not support the booting of the computer. When the computer system is infected with a virus or destroyed by the virus, an empty boot disk is needed to restart the computer through the BIOS (Basic Input and Output System). Desktop computers equip built in floppy disk drives in order to boot the system but it increases the volume and weight of the host system as well as the cost. Because of the bulkiness of the floppy disk drives, the majority of the ultra-thin laptop computers do not have built-in floppy disk drives so as to reduce the volume and weight of the computer. However, the users still have to install very expensive USB external floppy disk drives in order to boot the system and it increases the cost of the users and causes inconvenience in use. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Although the current flash memory devices such as DiskOnChip support the booting of the computer, they do not support hot plug in/out and are not removable because they are built in the computer. As a result, when the system software of the computer is destroyed by the virus, it cannot be restarted through DiskOnChip. Thus it is a restriction to the application of the device. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The current existing removable semiconductor storage devices can only be used on the driver software installed in the operating system of the computer but cannot be recognized and controlled by the BIOS of the computer, thus they cannot be used as the boot device of the system. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Most of the BIOS manufacturers have produced the BIOS capable of supporting the boot function of the external USB floppy disk drive, such as the BIOS of AWARD. Furthermore, many of the mainboard producers have adopted the above-mentioned BIOS, for example, ASUS motherboard, which lays the foundation for the large-scale use of the present invention. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> In view of the deficiencies of the conventional storage devices, an object of the present invention is to provide a semiconductor storage device capable of simulating and realizing the functions of various storage disks as well as acting as the removable boot device of the computer system. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The present invention provide a multifunction semiconductor storage device capable of hot plug in/out and being removable connected to the host system through the general purpose interface, including a semiconductor storage media module and a controller module, wherein the controller module comprises a general purpose interface control module, a microprocessor and control module, said semiconductor storage device can realize the device class protocol of the floppy disk drive, simulate and implement the storing function of the floppy diskette working on the floppy disk drive, or realize the device class protocol of the CD-ROM drive, simulate and implement the storing function of the CD-ROM working on the CD-ROM drive, or realize the device class protocol of the ZIP disk, simulate and implement the storing function of the ZIP disk, or realize the device class protocol of the MO disk, simulate and implement the storing function of the MO disk. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The present invention further provides a method for booting-up computer using the multifunction semiconductor storage device, comprising the steps of: storing the boot program of the operating system and operating system programs into the multifunction semiconductor storage device; connecting the multifunction semiconductor storage device with the computer host system through the general purpose interface; identifying the general purpose interface, and controlling and reading/writing the multifunction semiconductor storage device based on BIOS after powered up the computer host system; and loading the boot program of the operating system and operating system programs stored in the multifunction semiconductor storage device to computer host system for achieving computer booting-up. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The protocols supported by the present semiconductor storage device are UFI protocol, SFF80201 protocol, SFF80701 protocol, SCSI Transparent Command Set protocol, Reduced Block Commands (RBC) T10 Project 1240-D protocol, ZIP disk protocol and MO protocol. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The semiconductor storage media module corresponds to a storage space or it can be divided into at least two storage spaces with each corresponding to a storage disk. Preferably, each of the storage spaces can be further divided into smaller spaces such as a data area for storing data and a special information area for storing a special information, in which the special information contains information related to the storage disk, the password and the digital signature of the user, and so on. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The semiconductor storage device according to the present invention can be recognized, controlled and accessed by the BIOS of the host system. The semiconductor storage media module can store the boot program of the operating system and the operating system programs. When the BIOS of the host computer platform is powered up, the system then loads the boot program of the operating system and the operating system programs from the semiconductor storage media module so as to realize the booting of the host system. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Preferably, in the semiconductor storage device according to the present invention, the semiconductor storage media module can store the driver program of the semiconductor storage device itself so as to realize the function of storing the driver program in itself. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Preferably, the semiconductor storage device according to the present invention further includes the write protect switch capable of offering physical protection to the semiconductor storage media module so as to preventing the contents from being over rewritten or erased. The write protect switch is electrically connected to the microprocessor and control module electrically. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Preferably, the semiconductor storage device according to the present invention further includes an LED indicator, which comprises one or more indicator parts, which can show the status of the semiconductor storage device. The LED indicator is electrically connected to the microprocessor and control module electrically. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> In the semiconductor storage device according to the present invention, preferably, the controller module further comprises a buffer module, and the buffer module is a static random access memory (SRAM), and is electrically connected to the microprocessor and control module. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> In the semiconductor storage device in the present invention, preferably, the semiconductor storage media module further comprises buffer area. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> In the semiconductor storage device according to the present invention, preferably, the semiconductor storage media module further comprises a special information area for storing relevant data, password and the digital signature of the user. There can be no special information area in the device. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Preferably, the semiconductor storage device in the present invention further includes a storage disk selection switch for selecting at least a storage disk from all of the storage disks, so that the selected storage disk can be recognized, controlled and accessed by the host system. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The present invention provides a unique design so as to realize various device class protocols at the interface application level of the semiconductor storage device, and it can simulate and implement the various storage capacities of the storage disks. One or more storage spaces are provided in the semiconductor storage media, and one or more storage disk functions are supported in the same device. The present invention fully realizes the storage function of the external floppy drive and the floppy diskette using the general purpose interface, making it possible the entire substitution of floppy diskette and floppy disk drives. The semiconductor storage device in the present invention has a smaller size, light weight, a more stable performance and a higher reliability than those of the conventional semiconductor storage device, and it supports hot plug in/out and is removable. Accordingly, it is possible to make the host system being smaller in size and being portable. Furthermore, it effectively reduces the costs of the computer.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of the functions of the multi-purpose hardware used in the semiconductor storage device of the present invention; </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of the functions of the hardware using the USB interface and the flash memory in an embodiment according to the present invention; </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram of the functions of the hardware using the IEEE1394 interface and the flash memory in an embodiment according to the present invention; </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows the storage spaces allocation of the semiconductor storage device in an embodiment of the present invention; </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a working flow chart of the embodiment shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>; </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6A, B</cross-reference>, C, D shows the circuits schematics of the embodiment shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> according the present invention, respectively.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF INVENTION </heading>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of the functions of the multi-purpose hardware in an embodiment of the present invention. The semiconductor storage device is connected to the host computer via the general-purpose interface connecting cable or a connecting plug or through wireless connection mode. The semiconductor storage device comprises a semiconductor storage media module <highlight><bold>1</bold></highlight>, a controller module <highlight><bold>2</bold></highlight>, a write protect switch <highlight><bold>3</bold></highlight>, a storage disk selection switch <highlight><bold>4</bold></highlight> and a LED indicator <highlight><bold>5</bold></highlight>, wherein the controller module comprises a general purpose interface control module <highlight><bold>21</bold></highlight>, a microprocessor and control module <highlight><bold>22</bold></highlight>, and a buffer module <highlight><bold>23</bold></highlight>. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The semiconductor storage media module <highlight><bold>1</bold></highlight> consists of one or more semiconductor storage media chips, the semiconductor storage media can be a flash memory, an EEPROM, FRAM, SRAM, DRAM, SDRAM and a MRAM but be not restricted to them, which is connected through the current addressing method for storing data. The semiconductor storage media module <highlight><bold>1</bold></highlight> corresponds to either one storage space or at least two storage spaces. The semiconductor storage media module <highlight><bold>1</bold></highlight> can store the driver program of the semiconductor storage device itself so as to realize the function of storing the driver program in itself. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The controller module <highlight><bold>2</bold></highlight> executes the initialization of the device, the control of the device, the initialization and control of the general purpose interface, the reception, the interpret and implementation of the commands sent from the host computer, the storage of the data to the semiconductor storage module <highlight><bold>1</bold></highlight> or the reading of the data from the semiconductor storage module <highlight><bold>1</bold></highlight> and the return of the executing result to the host system through the general purpose interface. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The general purpose interface control module <highlight><bold>21</bold></highlight> of the controller module <highlight><bold>2</bold></highlight> executes the connection with the host system, interprets, converts, controls and transmits the general purpose interface protocol. The general purpose interface can be either wired general purpose interface, including USB interface, IEEE1394 interface, or wireless general purpose interface, including Bluetooth interface, IrDA infrared interface, HomeRF interface, IEEE802.11a interface, IEEE802.11b interface but be not restricted to them. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The microprocessor and control module <highlight><bold>22</bold></highlight> initializes the general purpose interface control module <highlight><bold>21</bold></highlight>, reads the status of the storage disk selection switch <highlight><bold>4</bold></highlight>, determines the device class protocol implementing the floppy disk drive in accordance with the status of the storage disk selection switch <highlight><bold>4</bold></highlight>, simulates and realizes the storage function of the floppy diskette working on the floppy disk drive; or it realizes the device class protocol of the hard disk, simulates and implements the storage function of the hard disk, or it realizes the device class protocol of the ZIP disk, simulates and implements the storage function of the ZIP disk, or it realizes the device class protocol of the MO disk, simulates and implements the storage function of the MO disk; furthermore, it can support hot plug in/out and is removable. The device class protocol supported by the storage disk is UFI protocol, SFF80201 protocol, SFF80701 protocol, SCSI Transparent Command Set protocol, Reduced Block Commands (RBC) T10 Project1240-D protocol, ZIP disk protocol, and MO disk protocol. The storage disk selection switch <highlight><bold>4</bold></highlight> can select one storage disk or more disks at the same time. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> One and more storage disks in the device can store other driver program for the other storage disks of the device according to the present invention and realize the function of the storing itself driver program. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The microprocessor and control module <highlight><bold>22</bold></highlight> has the functions of: </paragraph>
<paragraph id="P-0036" lvl="2"><number>&lsqb;0036&rsqb;</number> a. initializing the semiconductor storage module and detecting the capacity, the manufacturer and the quantity of the storage chip in the semiconductor storage module; </paragraph>
<paragraph id="P-0037" lvl="2"><number>&lsqb;0037&rsqb;</number> b. receiving control commands based on the general purpose interface protocol and interpreting and executing the control commands and returning the results of executions to the host system through the general purpose interface; </paragraph>
<paragraph id="P-0038" lvl="2"><number>&lsqb;0038&rsqb;</number> c. receiving the simulated storage disk device class protocol, interpreting and executing related commands and returning the results of executions to the host system through general purpose interface; the related commands include reading data, writing data, the reading device information and reading device capacity; </paragraph>
<paragraph id="P-0039" lvl="2"><number>&lsqb;0039&rsqb;</number> d. receiving customized storage disk device class protocol, interpreting and executing corresponding commands and returning the results of executions to the host system through the general purpose interface; the corresponding commands include reading data, writing data, reading device information and read devicing capacity but be not restricted to them; </paragraph>
<paragraph id="P-0040" lvl="2"><number>&lsqb;0040&rsqb;</number> e. writing data into the semiconductor storage device or reading data from the semiconductor device; when reading data, the LED indicator blinks; when executing writing operation, the status of the write protect switch will be detected, and if the switch is in the status of the write-protection, writing request will be refused and the operation failure will be informed to the host computer; </paragraph>
<paragraph id="P-0041" lvl="2"><number>&lsqb;0041&rsqb;</number> f. converting the logical addresses in the storage device defined on the host system into actual the storage chip number and physical addresses of the storage chip; </paragraph>
<paragraph id="P-0042" lvl="2"><number>&lsqb;0042&rsqb;</number> g. when the connection between the microprocessor and control module <highlight><bold>22</bold></highlight> and the host system is established, the LED indicator is lighted on. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> Since the difference between the storage modes of the semiconductor storage media, the buffer module <highlight><bold>23</bold></highlight> may be not a necessary device in certain cases; before the erasure of some data block of the semiconductor storage module, the buffer module is used to save the original data of the storage units and write the data into the buffer and finally write the data of the buffer back into the semiconductor storage media. The buffer module can be the SRAM and some part of the semiconductor storage module can also function as the buffer. As a result of the difference in the storage media, the operation of erasure can be optional. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The functions of the controller module <highlight><bold>2</bold></highlight> can be realized by using one or more integrated circuit chips, and the chips can be an ASIC, or an SOC or a monolithic processor with firmware. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is the block diagram of the flash memory with the USB interface in an embodiment according to the present invention. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> In the embodiment, the USB interface is used as the general-purpose interface and the flash memory is used as the semiconductor storage media. In the embodiment, a flash memory module <highlight><bold>11</bold></highlight>, a controller module <highlight><bold>20</bold></highlight>, a write protect switch <highlight><bold>3</bold></highlight>, a storage disk selection switch <highlight><bold>4</bold></highlight>, a LED indicator <highlight><bold>5</bold></highlight> and so on are included. The controller module includes a USB interface controller module <highlight><bold>201</bold></highlight>, a microprocessor and control module <highlight><bold>202</bold></highlight> and an SRAM buffer module <highlight><bold>203</bold></highlight>. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> The flash memory module <highlight><bold>11</bold></highlight> is formed with either one or a plurality of semiconductor flash memory chips, and is connected in accordance to the addressing method for storing data. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> The controller module <highlight><bold>20</bold></highlight> executes the initialization of the device, the control over the device, the initialization and the control of the USB interface, the reception of the commands and data from the host system, the interpretation and the execution of the commands from the host system, writing data to the flash memory module <highlight><bold>11</bold></highlight> or reading data from the flash memory module and returning the results of the execution to the host system through the USB interface. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The USB interface control module <highlight><bold>201</bold></highlight> in the controller module establishes a USB connection with the host system that interprets, converts, controls and transmits the USB protocol. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> The microprocessor and control module <highlight><bold>202</bold></highlight> initializes the USB interface control module <highlight><bold>202</bold></highlight>, reads the status of the storage disk selection switch <highlight><bold>4</bold></highlight>, and determines whether it supports the floppy disk drive device class protocol such as the UFI, the SFF80801 protocol or the large capacity storage disk device protocol such as the SFF80701, the SCSI Transparent Command Set and the Reduce Block Commands (RBC) T10 Project 1240-D protocols based on the status of the switch <highlight><bold>4</bold></highlight>. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The microprocessor and control module <highlight><bold>202</bold></highlight> have the similar functions with the above mentioned microprocessor and control module <highlight><bold>22</bold></highlight>, such as initializing the flash memory module, detecting the capacity, the manufacturer and the quantity of the flash memory chips, etc. The microprocessor and control module <highlight><bold>202</bold></highlight> receives the standard control commands based on the USB protocol, interprets and executes the control commands and returns the results of the execution to the host system through USB interface. The standard USB commands include the following: GET_STATUS, CLEAR_FEATURE, SET_FEATURE, SET_ADDRESS, GET_DESCRIPTOR, SET_DESCRIPTOR, GET_CONFIGURATION, SET_CONFIGURATION, GET_INTERFACE, SET_INTERFACE, SYNCH_FRAME, etc., but be not restricted to them. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> The embodiment as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> has two working statuses: </paragraph>
<paragraph id="P-0053" lvl="2"><number>&lsqb;0053&rsqb;</number> 1. The status of the simulated floppy disk drive and the floppy diskette </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> When the semiconductor storage device in the embodiment according to the present invention is in the status of the simulated floppy disk drive and floppy diskette, the device supports the floppy disk drive device class UFI(USB Floppy Interface) protocol. The microprocessor and control module <highlight><bold>202</bold></highlight> communicates with the host system through USB interface in conformity with the CBI (Control/Bulk/lnterrupt) transport protocol. According to the CBI protocol, the microprocessor and control module <highlight><bold>202</bold></highlight> unpacks the data packets received from the USB interface, extracts the floppy disk drive device class UFI commands from the unpacked data, then executes the related device class commands, packs the results of the execution or the status information according to the CBI protocol, and returns the results to the host system through the USB interface. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> The device class commands related to the floppy disk drive include Format Unit, Inquiry, Start/Stop, Mode Select, Mode Sense, Prevent/Allow Media Removal, Read (<highlight><bold>10</bold></highlight>), Read (<highlight><bold>12</bold></highlight>), Read Capacity, Read Format Capacity, Request Sense, Rezero track, Seek (<highlight><bold>10</bold></highlight>), Send Diagnostic, Test Unit Ready, Verify, Write (<highlight><bold>10</bold></highlight>), Write (<highlight><bold>12</bold></highlight>), Write and Verify, etc., but not restricted to them. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> The explanation of several principal commands used in the embodiment of the present invention will be described hereafter: </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> The inquiry command is used to inquire the related parameters and configuration information of the device, the host system or the driver program of the BIOS configure the device with the above related parameters and configuration information while the device is turned on or reset. The control module returns the configuration information of the device to the host computer according to the UFI protocol and sets the data bit for Peripheral Device Class in the configuration information as Direct-access device. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> The Mode Sense command is used to permit the device to notify the storage media class and the device parameters to the host computer. There is one bit of Media Class Codes in the information notified to the host computer. The code is used to determine the capacity and class of the device. As the capacity of the simulated floppy diskette is 1.44MB, the defined code is 0&times;96 (hexadecimal). </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> The Read Capacity command is used to request the device to notify the capacity of the storage disk. The data returned from the device show that the total capacity is 1.44MB. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> The Read Format Capacity command permits the host system to request the possible capacity of the storage disk to be formatted and only one answer from the device is 1.44MB. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> The Test Unit Ready command permits the host system to test whether the device is ready, and the answer from the device is ready if it is in the ready status. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> The Read <highlight><bold>10</bold></highlight> command is used to request the device to read data at a certain logical address in the storage disk and returns the read data to the host system. The control module then calculates the number of chips in which the logical address is located and the physical addresses in the chip based on the logical address and the capacities of various storage chips. Then it sends reading data command and address information to the flash memory, reads data from the flash memory, and sends the data to the host system. When the control module is reading and transmitting data, the LED indicator <highlight><bold>5</bold></highlight> flashes. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> The write <highlight><bold>10</bold></highlight> is used to request the device to receive data from the host system, then write the received data at a certain logical address in the storage disk; the control module first detects the write protection switch, the control module refuses the write operation from the host computer and reports failure of write operation when the write protect switch is in write protecting status. When the switch is not in the write protect status, the control module calculates the chip number in which the logical address is located, the physical address and the block address in the chip based on the logical address and the capacities of various storage chips. When data are written into an address in the flash memory, the block containing the address should firstly be erased, thus the original data will be lost in the block; therefore, the data stored in the block address should be read out and written into the buffer module of the SRAM. Then, the data are written into the SRAM buffer module according to the relative address in the block. Next, the corresponding block in the flash memory is erased and the data block in the SRAM buffer module is written into the corresponding block of the flash memory, and the entire write operation is completed. The control module keeps the LED indicator <highlight><bold>5</bold></highlight> flashing when receiving and writing data. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> The other working status of the embodiment as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is described hereafter: </paragraph>
<paragraph id="P-0065" lvl="2"><number>&lsqb;0065&rsqb;</number> 2. The Status of the Large Capacity Storage Disk </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> The large capacity storage disk can be a simulated hard disk, a simulated CDROM, a simulated ZIP disk and a simulated MO disk, etc. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> When the semiconductor storage device of the embodiment according to the present invention is in the working status of the large capacity storage disk, the device supports SFF80701 device class protocol, The microprocessor and control module <highlight><bold>202</bold></highlight> communicates with the host system through USB interface according to the BulkOnly transport protocol. The control module <highlight><bold>202</bold></highlight> unpack the data packet from the USB interface according to the BulkOnly transport protocol, extracts the SFF80701 class commands from the unpacked data, executes the corresponding commands, packs the results of the execution for the corresponding command, and sends them to the host system through USB interface. The SFF80701 class commands include Format Unit, Inquiry, Mode Select, Mode Sense, Prevent/Allow Media Removal, Read (<highlight><bold>10</bold></highlight>), Read (<highlight><bold>12</bold></highlight>), Read Capacity, Read Format Capacities, Request Sense, Seek, Start Stop Unit, Test Unit Ready, Verify, Write (<highlight><bold>10</bold></highlight>), Write (<highlight><bold>12</bold></highlight>), Write and Verify, etc. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> The explanation of several principal commands used in the embodiment of the present invention will be described hereafter: </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> The Read Capacity command is used to request the host system to get the capacity of the storage disk of the device. The control module calculates the total capacity of the storage module according to the model and quantity of the flash memory chips detected. The capacity of the large capacity storage disk is obtained by subtracting a 1.44MB and the capacity occupied by other special information from the total capacity. The obtained capacity value is returned to the host system. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> The Read <highlight><bold>10</bold></highlight> command is used to request the device to read data at a certain logical address in the storage disk and returns the read data to the host system. The control module firstly adds 1.44MB (floppy capacity) to the logical address, and calculates the number of the chips in where the logical address is located and the physical addresses in the chip based on the logical address and the capacities of various storage chips. Then it sends the read data command and address to the flash memory, reads data from the flash memory, and sends the data to the host system. When the control module is reading and transmitting data, the LED indicator <highlight><bold>5</bold></highlight> flashes. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> The write <highlight><bold>10</bold></highlight> is used to request the device to receive data from the host system and writes the received data at a certain logical address in the storage disk; the control module firstly detects the write protection switch. The control module refuses the write operation from the host computer and reports failure of write operation when the write protection switch is in write protection status. If the switch is not in the write protection status, the control module first add 1.44MB of floppy capacity to the logical address, and calculates the chip number in where the logical address is located, and the physical address and the block address in the chip based on the logical address and the capacities of various storage chips. When data are written in an address in the flash memory, the block containing the address should firstly be erased, thus the original data will be lost in the block; therefore, the data stored in the block address should be read out and written into the buffer module of the SRAM. Then, the data are written into the SRAM buffer module according to the relative address in the block. Next, the corresponding block in the flash memory is erased and the data block in the SRAM buffer module is written into the corresponding block in the flash memory, and the entire write operation is completed. The control module keeps the LED indicator <highlight><bold>5</bold></highlight> flashing when receiving and writing data. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> When the microprocessor and control module <highlight><bold>22</bold></highlight> establishes a connection with the host system, the LED indicator <highlight><bold>5</bold></highlight> is turned on. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows another embodiment of the semiconductor storage device of another embodiment according to the present invention. It is a block diagram of the hardware of the IEEE1394 interface and flash memory. In the embodiment, the general-purpose interface is an IEEE1394 interface and the semiconductor storage media is the flash memory. It includes a flash memory module <highlight><bold>11</bold></highlight>, a controller module <highlight><bold>200</bold></highlight>, a write protection switch <highlight><bold>3</bold></highlight>, a storage disk selection switch <highlight><bold>4</bold></highlight>, and a LED indicator <highlight><bold>5</bold></highlight>.The controller module <highlight><bold>200</bold></highlight> includes an IEEE 1394 interface control module <highlight><bold>211</bold></highlight>, a microprocessor and control module <highlight><bold>212</bold></highlight>, and an SRAM buffer module <highlight><bold>213</bold></highlight>. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> The flash memory module <highlight><bold>11</bold></highlight> is formed with one or a plurality of semiconductor flash memory chips and is connected by the conventional addressing mode so as to store data. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> The controller module <highlight><bold>200</bold></highlight> executes the initialization of the device, the control over the device, the initialization and the control of the IEEE1394 interface, the reception of the commands and data from the host system, the interpretation and the execution of the commands from the host system, writing data to the flash memory module <highlight><bold>11</bold></highlight> or reading data from the flash memory module and returning the results of the execution to the host system through the IEEE1394 interface. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> The IEEE1394 interface control module <highlight><bold>211</bold></highlight> in the controller module establishes connection with the IEEE1394 interface of the host system, and handles the interpretation, conversion, control and transport of the IEEE1394 protocol. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> The microprocessor and control module <highlight><bold>212</bold></highlight> initializes the IEEE1394 interface control module <highlight><bold>211</bold></highlight>, reads the status of the storage disk selection switch <highlight><bold>4</bold></highlight> and thereby determines whether it supports the floppy disk drive device class protocol such as SFF80701, SCSI Transparent Command Set and Reduce Block Commands (RBC) T10 Project 1240-D protocols, but not restricted to them. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> Further, the microprocessor and control module <highlight><bold>212</bold></highlight> also initializes the flash memory module, detects the capacity, the manufacturer and the quantity of the flash memory chips, etc. The microprocessor and control module <highlight><bold>212</bold></highlight> receives the standard control commands based on the IEEE1394 interface protocol, interprets and executes the control commands, and returns the results of execution for the commands to the host system through the IEEE1394 interface. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> The embodiment as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> has two working statuses: </paragraph>
<paragraph id="P-0080" lvl="2"><number>&lsqb;0080&rsqb;</number> 1. The status of the simulated floppy disk drive and the floppy diskette </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> When the semiconductor storage device is in the status of the simulated floppy disk drive and floppy diskette, the device supports the floppy disk drive device class UFI protocol. The microprocessor and control module <highlight><bold>212</bold></highlight> receives the data from the USB interface, extracts the floppy disk drive device class UFI commands from the data packets, then executes the related device class commands, and returns the results to the host system through the USB interface. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> The device class commands related to the floppy disk drive include Format Unit, Inquiry, Start/Stop, Mode Select, Mode Sense, Prevent/Allow Media Removal, Read (<highlight><bold>10</bold></highlight>), Read (<highlight><bold>12</bold></highlight>), Read Capacity, Read Format Capacity, Request Sense, Rezero track, Seek (<highlight><bold>10</bold></highlight>), Send Diagnostic, Test Unit Ready, Verify, Write (<highlight><bold>10</bold></highlight>), Write (<highlight><bold>12</bold></highlight>), Write and Verify, etc., but not restricted to them. The explanation of several principal commands used in the embodiment of the present invention will be described hereafter: </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> The inquiry command is used to inquire the related parameters and configuration information of the device, the host system or the driver program of the BIOS configure the device with the above related parameters and configuration information while the device is turned on or reset. The control module returns the configuration information of the device to the host computer according to the UFI protocol and sets the data bit for Peripheral Device Class in the configuration information as Direct-access device. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> The Mode Sense command is used to permit the device to notify the storage media type and the device parameters to the host computer. There is one bit of Media Type Codes in the information notified to the host computer. The code is used to determine the capacity and type of the device. As the capacity of the simulated floppy diskette is 1.44MB, the defined code is 0&times;96 (hexadecimal). </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> The Read Capacity command is used to request the device to notify the capacity of the storage disk. The data returned from the device show that the total capacity is 1.44MB. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> The Read Format Capacity command permits the host system to request the possible capacity of the storage disk to be formatted and only one answer from the device is 1.44MB. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> The Test Unit Ready command permits the host system to test whether the device is ready, and the answer from the device is ready if it is in the ready status. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> The Read <highlight><bold>10</bold></highlight> command is used to request the device to read data at a certain logical address in the storage disk and returns the read data to the host system. The control module then calculates the number of the chip in where the logical address is located and the physical addresses in the chip based on the logical address and the capacities of various storage chips. Then it sends the read data command and address information to the flash memory and reads data from the flash memory, and sends the data to the host system. When the control module is reading and transmitting data, the LED indicator <highlight><bold>5</bold></highlight> flashes. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> The write <highlight><bold>10</bold></highlight> is used to request the device to receive data from the host system, then write the received data at a certain logical address in the storage disk. The control module first detects the write protection switch, and the control module refuses the write operation from the host computer and reports failure of write operation when the write protection switch is in write protection status. When the switch is not in the write protection status, the control module calculates the chip number in which the logical address is located, and the physical address and the block address in the chip based on the logical address and the capacities of various storage chips. When data are written into an address in the flash memory, the block containing the address should firstly be erased, thus the original data will be lost in the block; therefore, the data stored in the block address should be read out and written into the buffer module of the SRAM. Then, the data are written into the SRAM buffer module according to the relative address in the block. Next, the corresponding block of the flash memory is erased and the data block in the SRAM buffer module is written into the corresponding block in the flash memory, and the entire write operation is completed. The control module keeps the LED indicator <highlight><bold>5</bold></highlight> flashing when receiving and writing data. The other working status of the embodiment as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is described hereafter: </paragraph>
<paragraph id="P-0090" lvl="2"><number>&lsqb;0090&rsqb;</number> 2. The Status of the Large Capacity Storage Disk </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> When the semiconductor storage device of the embodiment is in the working status of the large capacity storage disk, the device supports SFF80701 device class protocol. The microprocessor and control module <highlight><bold>212</bold></highlight> extracts the SFF80701 type commands from the received data through IEEE1394 interface, executes the related command, sends the result of the execution or a status information to the host system through IEEE1394 interface. The SFF80701 class commands include Format Unit, Inquiry, Mode Select, Mode Sense, Prevent/Allow Media Removal, Read (<highlight><bold>10</bold></highlight>), Read (<highlight><bold>12</bold></highlight>), Read Capacity, Read Format Capacities, Request Sense, Seek, Start Stop Unit, Test Unit Ready, Verify, Write (<highlight><bold>10</bold></highlight>), Write (<highlight><bold>12</bold></highlight>), Write and Verify, etc., but not restricted to them. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> The explanation of several principal commands used in the embodiment of the present invention will be described hereafter: </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> The Read Capacity command is used to request the host system to get the capacity of the storage disk of the device. The control module calculates the total capacity of the storage module according to the model and quantity of the flash memory chips detected. The capacity of the large capacity storage disk is obtained by subtracting 1.44MB and the capacity occupied by other special information from the general (total) capacity. The obtained capacity value is returned to the host system. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> The Read <highlight><bold>10</bold></highlight> command is used to request the device to read data at a certain logical address in the storage disk and returns the read data to the host system. The control module firstly adds 1.44MB (floppy capacity) to the logical address, and calculates the number of chips in which the logical address is located and the physical addresses in the chip based on the logical address and the capacities of various storage chips. Then it sends the read data command and address information to the flash memory and reads data from the flash memory, and sends the data to the host system. When the control module is reading and transmitting data, the LED indicator <highlight><bold>5</bold></highlight> flashes. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> The write <highlight><bold>10</bold></highlight> is used to request the device to receive data from the host system, then write the received data at a certain logical address in the storage disk; the control module firstly detects the write protection switch. The control module refuses the write operation from the host computer and reports failure of write operation when the write protection switch is in write protection status. If the switch is not in the write protection status, the control module first add 1.44MB of floppy capacity to the logical address, and calculates the chip number in which the logical address is located, and the physical address and the block address in the chip based on the logical address and the capacities of various storage chips. When data are written into an address of the flash memory, the block containing the address should firstly be erased, thus the original data will be lost in the block; therefore, the data stored in the block address should be read out and written into the buffer module of the SRAM. Then, the data are written into the SRAM buffer module according to the relative address in the block. Next, the corresponding block in the flash memory is erased and the data block in the SRAM buffer module is written into the corresponding block of the flash memory, and the entire write operation is completed. The control module keeps the LED indicator <highlight><bold>5</bold></highlight> flashing when receiving and writing data. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> When the microprocessor and control module <highlight><bold>212</bold></highlight> establishes a connection with the host system, the LED indicator <highlight><bold>5</bold></highlight> is turned on. <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows the allocation of the storage spaces of the semiconductor storage module. The entire storage module includes N storage spaces with each corresponding to one storage disk. Alternatively, the storage module can contain a data buffer area or not, and can contain a special information area for the entire storage device or not. Each of the storage spaces includes a data area and a special information area. Alternatively, each of the storage spaces may not include the special information area. The data buffer area functions as the buffer module <highlight><bold>23</bold></highlight> (see <cross-reference target="DRAWINGS">FIG. 1</cross-reference>). The entire special information area of the storage device can be used to store information about the storage device, such as the record of the bad blocks of the flash memory, the passwords and the digital signatures of the users, etc., but not restricted to them. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a working flow chart of the device of the embodiment in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> In step 1, it establishes connection with the USB interface of the host system from where it acquires electrical power. At this time, the microprocessor and control module <highlight><bold>202</bold></highlight> firstly initializes the microprocessor and control module <highlight><bold>202</bold></highlight>, including the setting of the different registers and of the operation frequencies. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> In step 2, the microprocessor and control module <highlight><bold>202</bold></highlight> detects the storage module of the flash memory and obtains the model, capacity, manufacturer and total number of the storage chips and saves the results of the detection. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> In step 3, the microprocessor and control module <highlight><bold>202</bold></highlight> reads the special information of the storage device, in which the bad block table is included but not restricted it. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> In step 4, the microprocessor and control module <highlight><bold>202</bold></highlight> initializes the USB interface controller. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> In step 5, the microprocessor and control module <highlight><bold>202</bold></highlight> receives the USB control commands from the host system and executes related commands and returns the results of execution. When the request device description command is executed, the control module detects the &ldquo;floppy disk drive&rdquo; and &ldquo;large capacity storage disk&rdquo; status switch and determines which status the device is in, that is, which device class protocol and transport protocol are supported by the device. The control module then informs to the host computer the device class protocol and transport protocol supported by the device. When it is in the &ldquo;floppy disk drive&rdquo; status, the device supports the UFI device class protocol and the CBI transport protocol, and when it is in the &ldquo;large capacity storage disk&rdquo; status, the device supports the SFF80701 device class protocol and the BulkOnly protocol. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> In step 6, the host computer determines whether the storage device is a &ldquo;floppy disk drive&rdquo; or a &ldquo;large capacity storage disk&rdquo; based on the returned device class protocol and transport protocol. If the device is in the &ldquo;floppy disk drive&rdquo; status, the host computer then sends UFI class device commands to the device based on the CBI transport protocol in step 7, and if the device is in the &ldquo;large capacity storage disk&rdquo;, the host computer then sends SFF80701 type device commands to the device based on the BulkOnly transport protocol in step 9. If the device is in the &ldquo;floppy disk drive&rdquo; status, the control module then receives UFI class commands from the host system according to the CBI transport protocol, interprets and executes the related commands, and returns the results of the executing or the status message to the host system in the format of the CBI transport protocol in step 8. And if the device is in the status of &ldquo;large capacity storage disk&rdquo;, the control module then receives the SFF80701 class commands from the host system according to the BulkOnly transport protocol, interprets and executes the related commands, and sends the results of the executing or the status message to the host system in the format of the BulkOnly transport protocol in step 10. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> Once the power of the host computer is off or the device is removed from the host system, the device stops working. </paragraph>
<paragraph id="P-0105" lvl="7"><number>&lsqb;0105&rsqb;</number> A description of the Use of the embodiment in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> as the system boot disk </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> The following is a description of the system boot disk using the USB interface flash memory device based on Window 98/Me/200/XP operating systems. It is noted that the device can not only be used as the system boot disk for Window98/Me/2000/XP, but also suitable for other operating systems. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> When the device is used as the system boot disk, the boot program and the system programs of the operating system should firstly be stored in the device. Here is a description about how to make a system boot disk. </paragraph>
<paragraph id="P-0108" lvl="2"><number>&lsqb;0108&rsqb;</number> 1. Start Windows98/Me/2000/XP operating systems; </paragraph>
<paragraph id="P-0109" lvl="2"><number>&lsqb;0109&rsqb;</number> 2. Set the storage disk status switch to &ldquo;floppy disk drive&rdquo;; </paragraph>
<paragraph id="P-0110" lvl="2"><number>&lsqb;0110&rsqb;</number> 3. Connect the device to the USB port of the host system; </paragraph>
<paragraph id="P-0111" lvl="2"><number>&lsqb;0111&rsqb;</number> 4. The related device driver program in the operating system will recognize and operate the storage disk and a new icon and characters &ldquo;floppy disk drive&rdquo; will appear in the icon &ldquo;My Computer&rdquo;. It is noted that the device driver program provided by the manufacturer should be used if the system is Windows98, while under Windows Me/2000/XP , default device driver programs contained in the operating system can be used; </paragraph>
<paragraph id="P-0112" lvl="2"><number>&lsqb;0112&rsqb;</number> 5. Format the floppy disk as a system boot disk and copy the corresponding files to the floppy disk, i.e., the system boot disk is produced. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> When the making of the system boot disk is finished, the device can be used as the disk to boot the system. The following is a description about how to use the boot disk. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> The use of the boot disk </paragraph>
<paragraph id="P-0115" lvl="2"><number>&lsqb;0115&rsqb;</number> 1. Turn on the power of the host computer. </paragraph>
<paragraph id="P-0116" lvl="2"><number>&lsqb;0116&rsqb;</number> 2. Enter the BIOS setting of the system and check the &ldquo;bootable system device&rdquo; item. If it is not set as the USB Floppy Disk Drive, that is, the USB external floppy disk (the initial setting of the system may be a Legacy Floppy), then it is modified to USB Floppy Disk Drive. Saving the modified setting to the BIOS and exiting from the setting of the BIOS and restart the host computer machine. </paragraph>
<paragraph id="P-0117" lvl="2"><number>&lsqb;0117&rsqb;</number> 3. Meanwhile, put the storage disk status switch of the device to a status &ldquo;floppy disk drive&rdquo; and connects the device to the USB port of the host computer machine. </paragraph>
<paragraph id="P-0118" lvl="2"><number>&lsqb;0118&rsqb;</number> 4. In the booting process of the host system, BIOS will recognize the storage disk and reads the operating system boot program and the system programs stored on the storage device. Then the corresponding programs are executed and the operating system is loaded. </paragraph>
<paragraph id="P-0119" lvl="2"><number>&lsqb;0119&rsqb;</number> 5. The booting of the system is completed. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> A description of the use of the embodiment in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> as a large capacity storage disk </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> The following is a description of the USB interface flash memory storage device used as a large capacity storage disk based on Windows 98/Me/2000/XP operating system. It is noted that the device can not only run for Windows 98/Me/2000/XP as a large capacity disk but also suitable for other operating systems as a large capacity disk. </paragraph>
<paragraph id="P-0122" lvl="2"><number>&lsqb;0122&rsqb;</number> 1. Start Windows98/Me/2000/XP operating systems. </paragraph>
<paragraph id="P-0123" lvl="2"><number>&lsqb;0123&rsqb;</number> 2. Set the storage disk status switch to the status at &ldquo;large capacity disk&rdquo;. </paragraph>
<paragraph id="P-0124" lvl="2"><number>&lsqb;0124&rsqb;</number> 3. Connect the device to the USB port of the host system. </paragraph>
<paragraph id="P-0125" lvl="2"><number>&lsqb;0125&rsqb;</number> 4. The related device driver program in the operating system will recognize and operate the storage disk and a new icon and characters &ldquo;removable disk&rdquo; will appear in the icon &ldquo;My Computer&rdquo;. It is noted that the device driver program provided by the manufacturer should be used if the operating system is Windows98, while the operating system is one of Windows Me/2000/XP, the default device driver programs contained the operating system can be used. </paragraph>
<paragraph id="P-0126" lvl="2"><number>&lsqb;0126&rsqb;</number> 5. From now on reading and writing operations of the files can be carried on the large capacity disk. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A multifunction semiconductor storage device capable of hot plug and play and being removable connected to the host system through the general purpose interface, including a semiconductor storage media module (<highlight><bold>1</bold></highlight>) and a controller module (<highlight><bold>2</bold></highlight>), wherein the controller module (<highlight><bold>2</bold></highlight>) comprises a general purpose interface control module (<highlight><bold>21</bold></highlight>), a microprocessor and control module (<highlight><bold>22</bold></highlight>), said semiconductor storage device can realize the device class protocol of the floppy disk drive, simulate and implement the storing function of the floppy diskette working on the floppy disk drive, or realize the device class protocol of the CD-ROM drive, simulate and implement the storing function of the CD-ROM working on the CD-ROM drive, or realize the device class protocol of the ZIP disk, simulate and implement the storing function of the ZIP disk, or realize the device class protocol of the MO disk, simulate and implement the storing function of the MO disk. </claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A multifunction semiconductor storage device as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the semiconductor storage media module (<highlight><bold>1</bold></highlight>) corresponds to a storage space or can be divided into at least two storage spaces. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A multifunction semiconductor storage device as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein it can be recognized, controlled and accessed by the BIOS (Basic Input and Output System) of the host computer, the semiconductor storage media module (<highlight><bold>1</bold></highlight>) stores the boot up program of the operating system and operating system programs, while the BIOS of the host computer is powered up, the boot up program of the operating system and operating system programs are loaded from the semiconductor storage media module (<highlight><bold>1</bold></highlight>) so as to boot the host computer. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A multifunction semiconductor storage device as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the driver programs of the semiconductor storage device can be stored in the semiconductor storage media module (<highlight><bold>1</bold></highlight>) so as to realize the function of storing the driver program in itself. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A multifunction semiconductor storage device as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein further includes a write protect switch (<highlight><bold>3</bold></highlight>) capable of offering physical protection to said semiconductor storage media module (<highlight><bold>1</bold></highlight>) so as to prevent the contents from being overwritten or erased, said write protect switch (<highlight><bold>3</bold></highlight>) is electrically connected to said microprocessor and control module (<highlight><bold>22</bold></highlight>). </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A multifunction semiconductor storage device as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein further includes a LED indicator (<highlight><bold>5</bold></highlight>) comprising one or a plurality of indicator devices which can show the status of the semiconductor storage device, said LED power indicator (<highlight><bold>5</bold></highlight>) is electrically connected to the microprocessor and control module (<highlight><bold>22</bold></highlight>) electrically. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A multifunction semiconductor storage device as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said controller module (<highlight><bold>2</bold></highlight>) further includes a buffer module (<highlight><bold>23</bold></highlight>), said buffer module (<highlight><bold>23</bold></highlight>) is a static random access memory (SRAM) and is electrically connected to the microprocessor and control module (<highlight><bold>22</bold></highlight>). </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A multifunction semiconductor storage device as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said semiconductor storage media module (<highlight><bold>1</bold></highlight>) has a buffer area. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A multifunction semiconductor storage device as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said semiconductor storage media module (<highlight><bold>1</bold></highlight>) has a special information area for storing the information relevant to said semiconductor storage device, the password and the digital signature of the user. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A multifunction semiconductor storage device as claimed in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein each of the storage spaces of said semiconductor storage media module (<highlight><bold>1</bold></highlight>) corresponds to a storage disk. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A multifunction semiconductor storage device as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said storage disk can be a simulated floppy disk drive and floppy diskette, a simulated CD-ROM drive and a CD-ROM, a simulated hard disk, a simulate ZIP disk, a simulated MO disk, or a customized storage disk. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A multifunction semiconductor storage device as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein further includes a storage disk selection switch (<highlight><bold>4</bold></highlight>) for selecting at least one storage disk from all storage disks, so that the selected storage disk can be recognized, controlled and accessed by the host computer. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A multifunction semiconductor storage device as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said storage disk supports the device class protocols such as UFI (USB Floppy Interface) protocol, SFF80201 protocol, SFF80701 protocol, SCSI Transparent Command Set protocol, Reduced Block Commands (RBC) T10 Project1240-D protocol, ZIP disk protocol and MO disk protocol. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A multifunction semiconductor storage device as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein each of the storage disks can be divided into smaller storage spaces including the data area and the special information area, the special information contained in said special information area includes information related to the storage disk, the password and the digital signature of the user. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A method for booting up computer using the multifunction semiconductor storage device, comprising the steps of: 
<claim-text>storing the boot program of the operating system and operating system programs into the multifunction semiconductor storage device; </claim-text>
<claim-text>connecting the multifunction semiconductor storage device with the computer host system through the general-purpose interface; </claim-text>
<claim-text>identifying the general purpose interface, and controlling and reading/writing the multifunction semiconductor storage device based on BIOS after powered up the computer host system; and </claim-text>
<claim-text>loading the boot program of the operating system and operating system programs stored in the multifunction semiconductor storage device to computer host system for achieving computer boot-up.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005278A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005278A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005278A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005278A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005278A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005278A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005278A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005278A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030005278A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030005278A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
