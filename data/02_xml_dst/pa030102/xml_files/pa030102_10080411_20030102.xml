<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002194A1-20030102-D00000.TIF SYSTEM "US20030002194A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00001.TIF SYSTEM "US20030002194A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00002.TIF SYSTEM "US20030002194A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00003.TIF SYSTEM "US20030002194A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00004.TIF SYSTEM "US20030002194A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00005.TIF SYSTEM "US20030002194A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00006.TIF SYSTEM "US20030002194A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00007.TIF SYSTEM "US20030002194A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00008.TIF SYSTEM "US20030002194A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00009.TIF SYSTEM "US20030002194A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00010.TIF SYSTEM "US20030002194A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00011.TIF SYSTEM "US20030002194A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00012.TIF SYSTEM "US20030002194A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00013.TIF SYSTEM "US20030002194A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00014.TIF SYSTEM "US20030002194A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00015.TIF SYSTEM "US20030002194A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00016.TIF SYSTEM "US20030002194A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00017.TIF SYSTEM "US20030002194A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00018.TIF SYSTEM "US20030002194A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00019.TIF SYSTEM "US20030002194A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00020.TIF SYSTEM "US20030002194A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00021.TIF SYSTEM "US20030002194A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00022.TIF SYSTEM "US20030002194A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00023.TIF SYSTEM "US20030002194A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00024.TIF SYSTEM "US20030002194A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030002194A1-20030102-D00025.TIF SYSTEM "US20030002194A1-20030102-D00025.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002194</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10080411</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020225</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-148058</doc-number>
</priority-application-number>
<filing-date>20010517</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G11B019/02</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>360</class>
<subclass>069000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Record and playback apparatus, and the method</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Tsuyoshi</given-name>
<family-name>Andoh</family-name>
</name>
<residence>
<residence-non-us>
<city>Kawasaki</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>FUJITSU LIMITED</organization-name>
<address>
<city>Kawasaki</city>
<country>
<country-code>JP</country-code>
</country>
</address>
<assignee-type>03</assignee-type>
</assignee>
<correspondence-address>
<name-1>STAAS &amp; HALSEY LLP</name-1>
<name-2></name-2>
<address>
<address-1>700 11TH STREET, NW</address-1>
<address-2>SUITE 500</address-2>
<city>WASHINGTON</city>
<state>DC</state>
<postalcode>20001</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">In a record and playback apparatus which codes information and records the information which is coded in a recording medium, the record and playback apparatus stores, in a predetermined management area provided in the recording medium, management information including at least one of time information (<highlight><bold>14</bold></highlight><highlight><italic>b</italic></highlight>) on a time when the information is coded, index information (<highlight><bold>14</bold></highlight><highlight><italic>c</italic></highlight>) which can be assigned to a recording unit, and a backward pointer (<highlight><bold>14</bold></highlight><highlight><italic>d</italic></highlight>) for connecting recording units in a backward direction. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to a record and playback apparatus. More particularly, the present invention relates to controlling a file system which manages recording of information in a record and playback apparatus which encodes information such as an image or voice by MPEG-2 and the like and records the encoded information in a recording medium. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of the Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Recently, a record and playback apparatus which encodes analog broadcast to digital data by using MPEG-2, records the digital data in a recording medium such as a hard disk which allows random access and plays back the analog broadcast is being developed. A recording medium allowing random access represented by the hard disk can be searched at higher speed than a tape medium of sequential access. Thus, high speed playback in response to a user action is available according to the recording medium which allows random access. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Recording of information is performed by using a file format, and, record and playback of information is managed by a file system. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a conventional file system. A DIR (directory) area <highlight><bold>10</bold></highlight>, a FAT (File Allocation Table) area <highlight><bold>11</bold></highlight>, and a DISK area <highlight><bold>12</bold></highlight> are provided on a recording medium. The DIR area <highlight><bold>10</bold></highlight> and the FAT area <highlight><bold>11</bold></highlight> are used for file management information. The file system performs various file management such as recording and playback of a file by using this file management information. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The DIR area <highlight><bold>10</bold></highlight> includes DIR entry tags (each having n bytes), the number of the DIR entry tags corresponds to the number of files. Each DIR entry tag has a file name, date and time of creation, a file size, a leading FAT pointer and the like. The FAT area <highlight><bold>11</bold></highlight> includes FAT entry tags (each having m bytes). A file is configured by clusters (recording units) stored in the DISK area <highlight><bold>12</bold></highlight>. Each cluster is connected with another cluster by the FAT entry tag. The size of the FAT area <highlight><bold>11</bold></highlight> can be obtained in the following way. </paragraph>
<paragraph lvl="0"><in-line-formula>FAT area size&equals;(hard disk capacity/l cluster size)&times;1 FAT entry size, </in-line-formula></paragraph>
<paragraph id="P-0008" lvl="7"><number>&lsqb;0008&rsqb;</number> For example, if hard disk capacity is 27 Gbytes, 1 cluster size is 1 Mbytes and 1 FAT entry size is 2 bytes (m&equals;2), the FAT area size is 52 kbytes. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 2, a</cross-reference> pointer to the leading FAT entry tag described in the DIR entry tag becomes the starting point, and a pointer of a cluster which is used next is stored in the FAT area <highlight><bold>11</bold></highlight> for each cluster. Each of &ldquo;1&rdquo;, &ldquo;2&rdquo;, &ldquo;3&rdquo; of the FAT entry tags is a value of a pointer <highlight><bold>14</bold></highlight><highlight><italic>a</italic></highlight>. The DIR entry tag indicates a pointer value &ldquo;1&rdquo;. A pointer of the leading FAT entry which has this pointer value includes a pointer value &ldquo;2&rdquo;. A pointer of a FAT entry tag corresponding to a last cluster becomes a terminal code (null for example). Therefore, coded MPEG-2 data can be accessed from the pointer to the leading FAT entry tag like daisy chain. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Generally, recorded data is encoded by using variable-length coding. When the data is coded by a fixed bit rate, it is possible to search for any FAT entry by using a simple calculation from the bit rate. On the other hand, information size is not fixed when the data is recorded by a variable bit rate. Thus, when locating the start of a recorded sequence by time searching, it is difficult to specify an accurate time. That is, information size does not correspond to the decoded playback image. Therefore, when the data is recorded by variable bit rate, there is a problem in that accurate time search by user instruction can not be performed. Accordingly, there is a problem in that a playback method convenient for a user other than a normal playback method is not provided conventionally. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> An object of the present invention is to provide a record and playback apparatus and the method which is provided with an easy-to-use playback system. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The above object can be achieved by a record and playback apparatus which codes information and records the information which is coded in a recording medium, wherein: </paragraph>
<paragraph id="P-0013" lvl="2"><number>&lsqb;0013&rsqb;</number> the record and playback apparatus stores, in a predetermined management area provided in the recording medium, management information including at least one of time information on a time when the information is coded, index information which can be assigned to a recording unit, and a backward pointer for connecting recording units in a backward direction. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> According to the present invention, since at least one of time information on a time when the information is coded, index information which can be assigned to a recording unit (corresponding to a cluster for example), and a backward pointer for connecting recording units in a backward direction is recorded in the predetermined management area, an usable play back method can be realized by using the stored information. For example, since the time when the data is coded into the recording unit, that is, time of recording is recorded, accurate time search can be performed even when data is recorded at variable bit rate.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Other objects, features and advantages of the present invention will become more apparent from the following detailed description when read in conjunction with the accompanying drawings, in which: </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a conventional file system; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows a state in which FAT entries are connected by pointers in the file system shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows a file system of a first embodiment of the present invention; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows a state in which FAT entries are connected by pointers in the file system shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows a file system of a second embodiment of the present invention; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows a state in which FAT entries are connected by pointers in the file system shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows a file system of a third embodiment of the present invention; </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows a state in which FAT entries are connected by pointers in the file system shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>; </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows a file system of a fourth embodiment of the present invention; </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows a state in which FAT entries are connected by pointers in the file system shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>; </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows a block diagram of a record and playback apparatus of an example of the present invention </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a block diagram showing the detailed configuration of <cross-reference target="DRAWINGS">FIG. 11</cross-reference>; </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a flowchart showing a main flow of recording operation in the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>; </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a flowchart showing a main flow for playback operation in the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>; </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a flowchart showing a generation process of a new file in the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>; </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a flowchart showing existing file open process in the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>; </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a flowchart showing an existing file close process in the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>; </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a flowchart showing a DMA process in the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>; </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a flowchart showing a file access process processed by delay interrupt in the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>; </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a flowchart showing a file write process in the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>; </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> shows a flowchart showing a write process to the FAT area <highlight><bold>34</bold></highlight> in the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>; </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> shows a flowchart indicating a file read process in the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>; </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> is a flowchart indicating a FAT read process in the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>; </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> is a flowchart showing judgment process of index search instruction in the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>; </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is a flowchart showing judgment process of time search instruction in the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> In the following, embodiments and examples of the present invention will be described. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> (First Embodiment) </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows a file system of the first embodiment of the present invention. As shown in <cross-reference target="DRAWINGS">FIG. 13, a</cross-reference> DIR (directory) area <highlight><bold>13</bold></highlight>, a FAT (File Allocation Table) area <highlight><bold>14</bold></highlight> and a DISK area <highlight><bold>15</bold></highlight> are provided on a recording medium. The DIR area <highlight><bold>13</bold></highlight> and the FAT area <highlight><bold>14</bold></highlight> are used for file management information. The file system performs various file management by using this file management information. The configuration of the FAT area <highlight><bold>14</bold></highlight> is different from that of the conventional FAT area <highlight><bold>11</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The DIR area <highlight><bold>13</bold></highlight> and the DISK area <highlight><bold>15</bold></highlight> are the same as the DIR area <highlight><bold>10</bold></highlight> and the DISK area <highlight><bold>12</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> respectively. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> Each entry tag in the FAT area <highlight><bold>14</bold></highlight> includes time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>in addition to the FAT entry tag <highlight><bold>14</bold></highlight><highlight><italic>a</italic></highlight>. The time information of the FAT entry tag is management information indicating time when coded data is recorded to a corresponding cluster. The unit of time is second for example. The time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>can be obtained by using a clock in the record and playback apparatus. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 4, a</cross-reference> pointer to a leading FAT entry tag which is described in the DIR entry tag becomes a starting point. Each FAT entry tag stores a pointer <highlight><bold>14</bold></highlight><highlight><italic>a </italic></highlight>of a cluster which is used next with the time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>of the corresponding cluster. <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows the time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>as Record Time. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> Each FAT entry tag includes, for example, 2 bytes as the pointer and 2 bytes of the time information, which are 4 bytes in total. When the time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>is 2 bytes and the unit of time is 1 second, up to 65535 second (about <highlight><bold>18</bold></highlight> hours) can be represented by the time information, which is enough length for recording one program. The size of the FAT area <highlight><bold>14</bold></highlight> can be obtained by the before-mentioned equation. For example, when hard disk capacity is 27 Gbytes, 1 cluster size is 1 Mbytes and 1 FAT entry size is 4 bytes, the FAT area size becomes 104 kbytes. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> As mentioned above, according to the first embodiment of the present invention, the pointer <highlight><bold>14</bold></highlight><highlight><italic>a </italic></highlight>and the time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>are recorded simultaneously in a FAT entry tag corresponding to each cluster. When a user instructs time search, the FAT entries are traced according to pointers of the FAT entry tags from a pointer to the leading FAT entry tag described in the DIR entry tag as the starting point. At this time, each time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>is compared with a time which is specified by the user as the instruction of time search one after another. In this way, a cluster (FAT entry) in which the time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>completely agrees with the specified time or the difference between the time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>and the specified time is within a predetermined range is searched for. In the following, the case where the time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>completely agrees with the specified time or the difference between the time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>and the specified time is within a predetermined range is defined as &ldquo;the times are the same&rdquo;. Then, playback is started from a cluster specified by the search. Therefore, even when data is recorded by variable bit rate, accurate time search by user instruction can be performed. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> Since the time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>is recorded for each corresponding cluster, it is possible to realize a function for playing back a recorded program at regular intervals by specifying an time interval, in which the specified time interval is compared with the time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>of the FAT entry tag so that clusters having time information corresponding to the specified time interval are specified, and, then, a predetermined amount of data is played back from the cluster. The data amount is determined properly according to the bit rate. For example, when realizing a function of fast-forward, a data amount which corresponds to 1-2 frame is calculated from the bit rate so that the data amount is used for playback. Accordingly, by adjusting the specified time interval, specified times&mdash;speed playback and slow playback can be realized. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> (Second Embodiment) </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 5 and 6</cross-reference> show a file system of the second embodiment of the present invention. In these figures, components same as those shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> have the same reference numbers as those shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> In the second embodiment, a FAT area <highlight><bold>24</bold></highlight> is provided in which index information <highlight><bold>14</bold></highlight><highlight><italic>c </italic></highlight>is added to each FAT entry tag of the FAT area <highlight><bold>14</bold></highlight> of the first embodiment. That is, each FAT entry tag stored in the FAT area <highlight><bold>24</bold></highlight> includes the pointer <highlight><bold>14</bold></highlight><highlight><italic>a</italic></highlight>, the time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>and the index information <highlight><bold>14</bold></highlight><highlight><italic>c</italic></highlight>. The index information <highlight><bold>14</bold></highlight><highlight><italic>c </italic></highlight>enables efficient search (search for the start of a recorded program) according to contents such as image and voice recorded in the disk. The index information <highlight><bold>14</bold></highlight><highlight><italic>c </italic></highlight>is, for example, a serial number from 1. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> For example, in a music program in which a plurality of artists perform, when recording the program, a user instructs the record and playback apparatus to input index information every time when an artist appears. The index information also may be input when playing back the program. For example, every time when the user instruct to input the index information, the index information <highlight><bold>14</bold></highlight><highlight><italic>c </italic></highlight>is incremented from 1. The index information <highlight><bold>14</bold></highlight><highlight><italic>c </italic></highlight>is recorded in a FAT entry tag of a corresponding cluster. Index information of other FAT entry tags remains blank. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> As an example, each FAT entry tag includes 2 bytes as the pointer <highlight><bold>14</bold></highlight><highlight><italic>a</italic></highlight>, 2 bytes as the time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>and 2 bytes of index information <highlight><bold>14</bold></highlight><highlight><italic>c</italic></highlight>, which are 6 bytes in total. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> (Third Embodiment) </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> and <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows a file system according to the third embodiment of the present invention. In these figures, components same as those shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> have the same reference numbers as those shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> In the third embodiment, a FAT area <highlight><bold>34</bold></highlight> is provided in which a backward pointer <highlight><bold>14</bold></highlight><highlight><italic>d </italic></highlight>is added to each FAT entry tag of the FAT area <highlight><bold>24</bold></highlight> of the second embodiment. That is, each FAT entry tag stored in the FAT area <highlight><bold>34</bold></highlight> includes the pointer <highlight><bold>14</bold></highlight><highlight><italic>a</italic></highlight>, the time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>and the index information <highlight><bold>14</bold></highlight><highlight><italic>c </italic></highlight>and the backward pointer <highlight><bold>14</bold></highlight><highlight><italic>d </italic></highlight>as management information. In the following, the pointer <highlight><bold>14</bold></highlight><highlight><italic>a </italic></highlight>will be called a forward pointer. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> The backward pointer <highlight><bold>14</bold></highlight><highlight><italic>d</italic></highlight>, when recording data, is written into each FAT entry tag corresponding to each cluster. For example, when the FAT entry tags are chained as shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, the forward pointer <highlight><bold>14</bold></highlight><highlight><italic>a </italic></highlight>of a FAT entry tag of a leading FAT entry <highlight><bold>34</bold></highlight><highlight><subscript>1 </subscript></highlight>of &ldquo;1&rdquo; indicated by the DIR entry tag has &ldquo;2&rdquo; as a pointer value indicating a next FAT entry <highlight><bold>34</bold></highlight><highlight><subscript>2</subscript></highlight>. In addition, the forward pointer <highlight><bold>14</bold></highlight><highlight><italic>a </italic></highlight>of a FAT entry tag of the FAT entry indicated by the pointer value &ldquo;2&rdquo; has &ldquo;3&rdquo; as a pointer value indicating a next FAT entry <highlight><bold>34</bold></highlight><highlight><subscript>3</subscript></highlight>. In this case, a backward pointer <highlight><bold>14</bold></highlight><highlight><italic>d </italic></highlight>of the FAT entry <highlight><bold>34</bold></highlight><highlight><subscript>3 </subscript></highlight>indicates the pointer value &ldquo;2&rdquo; (&equals;&ldquo;3&rdquo;&minus;1) indicating a previous FAT entry <highlight><bold>34</bold></highlight><highlight><subscript>2</subscript></highlight>. In the same way, the backward pointer <highlight><bold>14</bold></highlight><highlight><italic>d </italic></highlight>of the FAT entry <highlight><bold>34</bold></highlight><highlight><subscript>2 </subscript></highlight>indicates the pointer value &ldquo;1&rdquo; (&equals;&ldquo;2&rdquo;&minus;1) indicating a previous FAT entry. However, since the FAT entry <highlight><bold>34</bold></highlight><highlight><subscript>1 </subscript></highlight>is the leading FAT entry, a predetermined leading code is described instead of the pointer value &ldquo;1&rdquo;. Accordingly, in the example shown in <cross-reference target="DRAWINGS">FIG. 8, a</cross-reference> backward pointer <highlight><bold>14</bold></highlight><highlight><italic>d </italic></highlight>described in an FAT entry tag of a nth FAT entry indicates a value of a forward pointer <highlight><bold>14</bold></highlight><highlight><italic>a </italic></highlight>of a (n&minus;1)th FAT entry. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> When, a user requests backward playback for a file (program) which has been recorded, it is possible to read out the file according to the order of the backward pointers <highlight><bold>14</bold></highlight><highlight><italic>d </italic></highlight>&ldquo;3&rdquo;&rarr;&ldquo;2&rdquo;&rarr;&ldquo;1&rdquo; in the example of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. For example, there may be a case that backward playback becomes necessary from a time point when playing back the program in the forward direction. For example, when backward playback is requested while a cluster corresponding to a FAT entry <highlight><bold>34</bold></highlight><highlight><subscript>2 </subscript></highlight>indicated by a forward pointer &ldquo;2&rdquo; is being played back, clusters can be easily traced in the backward direction by referring to the backward pointer <highlight><bold>14</bold></highlight><highlight><italic>d </italic></highlight>of the FAT entry <highlight><bold>34</bold></highlight><highlight><subscript>2</subscript></highlight>. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> The FAT entry tag includes the time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>used in the first embodiment and the index information <highlight><bold>14</bold></highlight><highlight><italic>c </italic></highlight>used in the second embodiment. Therefore, by referring to the backward pointer <highlight><bold>14</bold></highlight><highlight><italic>d </italic></highlight>on backward playback, playback by specifying time or time interval described in the first embodiment, and, locating a start in a program described in the second embodiment become possible. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> (Fourth Embodiment) </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> and <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows a file system of the fourth embodiment of the present invention. In these figures, components same as those shown in <cross-reference target="DRAWINGS">FIGS. 8 and 9</cross-reference> have the same reference numbers as those shown in <cross-reference target="DRAWINGS">FIGS. 8 and 9</cross-reference>. The fourth embodiment is a modification of the third embodiment. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> In the third embodiment, each FAT entry tag has the forward pointer <highlight><bold>14</bold></highlight><highlight><italic>a</italic></highlight>, the time information <highlight><bold>14</bold></highlight><highlight><italic>b</italic></highlight>, the index information <highlight><bold>14</bold></highlight><highlight><italic>c </italic></highlight>and the backward pointer <highlight><bold>14</bold></highlight><highlight><italic>d</italic></highlight>. On the other hand, in the fourth embodiment, each FAT entry tag in a FAT area <highlight><bold>44</bold></highlight> has only the forward pointer <highlight><bold>14</bold></highlight><highlight><italic>a</italic></highlight>. The others, the time information <highlight><bold>14</bold></highlight><highlight><italic>b</italic></highlight>, the index information <highlight><bold>14</bold></highlight><highlight><italic>c </italic></highlight>and the backward pointer <highlight><bold>14</bold></highlight><highlight><italic>d </italic></highlight>are not provided in each FAT entry tag. Instead, the time information <highlight><bold>14</bold></highlight><highlight><italic>b</italic></highlight>, the index information <highlight><bold>14</bold></highlight><highlight><italic>c </italic></highlight>and the backward pointer <highlight><bold>14</bold></highlight><highlight><italic>d </italic></highlight>are recorded in a time information area <highlight><bold>41</bold></highlight>, an index area <highlight><bold>42</bold></highlight> and a backward pointer area <highlight><bold>43</bold></highlight> respectively which are provided in a recording medium. The time information area <highlight><bold>41</bold></highlight> includes time information corresponding to each FAT entry. The position of each time information on the time information area <highlight><bold>41</bold></highlight> corresponds to a position indicated by a forward pointer <highlight><bold>14</bold></highlight><highlight><italic>a </italic></highlight>of each FAT entry tag described in the FAT area <highlight><bold>44</bold></highlight>. For example, in the case shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, values of time information <highlight><bold>14</bold></highlight><highlight><italic>b </italic></highlight>of the FAT entry &ldquo;1&rdquo;, &ldquo;2&rdquo; and &ldquo;3&rdquo; are respectively recorded in areas (each of which is also called a pointer position) corresponding to value &ldquo;1&rdquo;, &ldquo;2&rdquo; and &ldquo;3&rdquo; each indicated by the forward pointer <highlight><bold>14</bold></highlight><highlight><italic>a </italic></highlight>on the time information area <highlight><bold>41</bold></highlight>. In the same way, values of index information <highlight><bold>14</bold></highlight><highlight><italic>c </italic></highlight>of the FAT entries &ldquo;1&rdquo;, &ldquo;2&rdquo; and &ldquo;3&rdquo; are respectively recorded in areas corresponding to values &ldquo;1&rdquo;, &ldquo;2&rdquo; and &ldquo;3&rdquo; each indicated by the forward pointer <highlight><bold>14</bold></highlight><highlight><italic>a </italic></highlight>on the index area <highlight><bold>42</bold></highlight>, and backward pointers <highlight><bold>14</bold></highlight><highlight><italic>d </italic></highlight>of the FAT entries &ldquo;1&rdquo;, &ldquo;2&rdquo; and &ldquo;3&rdquo; are respectively recorded in areas corresponding to values &ldquo;1&rdquo;, &ldquo;2&rdquo; and &ldquo;3&rdquo; each indicated by the forward pointer <highlight><bold>14</bold></highlight><highlight><italic>a </italic></highlight>on the backward pointer area <highlight><bold>43</bold></highlight>. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> When a FAT entry is referred to, the time information <highlight><bold>14</bold></highlight><highlight><italic>b</italic></highlight>, the index information <highlight><bold>14</bold></highlight><highlight><italic>c </italic></highlight>and the backward pointer <highlight><bold>14</bold></highlight><highlight><italic>d </italic></highlight>each located at corresponding pointer position in the time information area <highlight><bold>41</bold></highlight>, the index area <highlight><bold>42</bold></highlight> and the backward pointer area <highlight><bold>43</bold></highlight> are referred to at the same time. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Also in the first and second embodiments, the time information area <highlight><bold>41</bold></highlight> and the index area <highlight><bold>42</bold></highlight> can be provided like the fourth embodiment. </paragraph>
</section>
<section>
<heading lvl="1">EXAMPLES </heading>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows a block diagram of a record and playback apparatus of an example of the present invention. The third embodiment is applied to this record and playback apparatus. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> The record and playback apparatus includes a tuner <highlight><bold>51</bold></highlight> connected to an antenna <highlight><bold>50</bold></highlight>, an NTSC decoder <highlight><bold>52</bold></highlight>, an audio A/D converter (ADC) <highlight><bold>53</bold></highlight>, an MPEG-2 encoder <highlight><bold>54</bold></highlight>, an MPEG-2 decoder <highlight><bold>58</bold></highlight>, an NTSC encoder <highlight><bold>62</bold></highlight>, and an audio D/A converter (DAC) <highlight><bold>63</bold></highlight>. The tuner <highlight><bold>51</bold></highlight>, the NTSC decoder <highlight><bold>52</bold></highlight>, the audio A/D converter (ADC) <highlight><bold>53</bold></highlight>, and the MPEG-2 encoder <highlight><bold>54</bold></highlight> form an input system (a recording system) of the record and playback apparatus. The MPEG-2 decoder <highlight><bold>58</bold></highlight>, the NTSC encoder <highlight><bold>62</bold></highlight>, and the audio D/A converter (DAC) <highlight><bold>63</bold></highlight> form an output system (a playback system). An analog image signal from the outside or from the tuner <highlight><bold>51</bold></highlight> is provided to the NTSC decoder <highlight><bold>52</bold></highlight> via an input terminal <highlight><bold>69</bold></highlight>, and an analog audio signal is provided to the audio A/D converter <highlight><bold>53</bold></highlight> via an input terminal <highlight><bold>70</bold></highlight>. An analog image signal output by the NTSC encoder <highlight><bold>62</bold></highlight> is output to an external apparatus such as a TV via an output terminal <highlight><bold>71</bold></highlight>. An analog audio signal output by the audio D/A converter <highlight><bold>73</bold></highlight> is output to an external apparatus via an output terminal <highlight><bold>72</bold></highlight>. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> The MPEG-2 encoder <highlight><bold>54</bold></highlight> includes an video encoder <highlight><bold>55</bold></highlight>, an audio encoder <highlight><bold>56</bold></highlight> and a multiplexer <highlight><bold>57</bold></highlight>. The MPEG-2 decoder <highlight><bold>58</bold></highlight> includes a demultiplexer <highlight><bold>59</bold></highlight>, a video decoder <highlight><bold>60</bold></highlight> and an audio decoder <highlight><bold>61</bold></highlight>. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> In addition, the record and playback apparatus includes a CPU <highlight><bold>64</bold></highlight>, an FPGA (Field Programmable Gate Array: which will be called a controller hereinafter) <highlight><bold>65</bold></highlight>, SDRAM (Synchronous Dynamic Random Access Memory) <highlight><bold>66</bold></highlight>, an ATA (ATA Interface: which will be called an interface part hereinafter) <highlight><bold>67</bold></highlight>, and an HDD (Hard Disk Drive) <highlight><bold>68</bold></highlight>. The video encoder <highlight><bold>55</bold></highlight> in the MPEG-2 encoder <highlight><bold>54</bold></highlight> performs coding and compression for an image signal which is decoded by the NTSC decoder <highlight><bold>52</bold></highlight> and outputs the compressed data to the multiplexer <highlight><bold>57</bold></highlight>. In this coding and compression, compression method of MPEG2-Video is used for example. The audio encoder <highlight><bold>56</bold></highlight> performs coding and compression for a digital audio signal output from the audio A/D converter <highlight><bold>53</bold></highlight> and outputs the compressed data to the multiplexer <highlight><bold>57</bold></highlight>. In this coding and compression, compression method of MPEG-1 Audio Layer2 is used for example. The multiplexer <highlight><bold>57</bold></highlight> multiplexes input image signal and audio signal and outputs a stream. MPEG-2 system PS format, for example, is used for this multiplexing. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> The MPEG-2 encoder <highlight><bold>54</bold></highlight> of this configuration has a plurality of coding modes (which are also called as image quality modes or operation modes) used for defining bit rate for coding an image signal by a compression method such as MPEG. For example, the MPEG-2 encoder <highlight><bold>54</bold></highlight> has three modes which are a High Quality mode (HQ mode), a Standard Play mode (SP mode) and a Long Play mode (LP mode). A coding bit rate of the High Quality mode is 10 Mbps for example in which bit rate of image is 9.744 Mbps and bit rate of audio is 256 kbps. A bit rate of the Standard Play mode is 4 Mbps for example in which a bit rate of image is 3.744 Mbps and a bit rate of audio is 256 kbps. A bit rate of the Long Play mode is 2 Mbps for example in which a bit rate of image is 1.744 Mbps and a bit rate of audio is 256 kbps. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> The demultiplexer <highlight><bold>59</bold></highlight> in the MPEG-2 decoder <highlight><bold>58</bold></highlight> separates an input signal into an image signal and an audio signal. The video decoder <highlight><bold>60</bold></highlight> decodes and expands an image signal which is coded by a compression method. The MPEG-2 decoder <highlight><bold>58</bold></highlight> has a plurality of decoding modes for defining bit rates when decoding and expanding the image signal corresponding to decoding modes of the MPEG-2 encoder <highlight><bold>54</bold></highlight>. Like the MPEG-2 encoder <highlight><bold>54</bold></highlight>, a High Quality mode, a Standard Play mode and a Long Play mode are included. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> The controller <highlight><bold>65</bold></highlight> controls data transferring between the MPEG-2 encoder <highlight><bold>54</bold></highlight>, the MPEG-2 decoder <highlight><bold>58</bold></highlight>, the CPU <highlight><bold>64</bold></highlight>, the SDRAM <highlight><bold>66</bold></highlight> and the interface part <highlight><bold>67</bold></highlight>, and realizes control sequence of data transferring by programming many gate. In addition, the controller <highlight><bold>65</bold></highlight> includes a function for outputting control information corresponding to each part according to control information provided from a user by using a remote controller and the like. This point will be described later. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> The SDRAM <highlight><bold>66</bold></highlight> stores a predetermined coded signal from the MPEG-2 encoder <highlight><bold>54</bold></highlight> and a coded signal read from the HDD <highlight><bold>68</bold></highlight> temporarily. The stored coded signal is read from the SDRAM <highlight><bold>66</bold></highlight> and output to the HDD <highlight><bold>68</bold></highlight> or to the MPEG 2 decoder <highlight><bold>58</bold></highlight>. The interface part <highlight><bold>67</bold></highlight> forms an interface to the HDD <highlight><bold>68</bold></highlight> or other external recording apparatus. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> The CPU <highlight><bold>64</bold></highlight> controls the whole image recording apparatus. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> The tuner <highlight><bold>51</bold></highlight> is optional. Thus, if it is unnecessary, the record and playback apparatus can be configured without the tuner <highlight><bold>51</bold></highlight>. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a block diagram showing the detailed configuration of <cross-reference target="DRAWINGS">FIG. 11</cross-reference>. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> The NTSC decoder <highlight><bold>112</bold></highlight> forms the NTSC decoder <highlight><bold>52</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, and is SAA7113H of Philips for example. The NTSC decoder <highlight><bold>112</bold></highlight> converts a NTSC video signal into YC multiplexed 8 bit parallel signals, and outputs the signals. The audio A/D converter <highlight><bold>113</bold></highlight> forms the audio A/D converter <highlight><bold>53</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, and is PCM1800 of Burr-Brown for example. The audio A/D converter <highlight><bold>113</bold></highlight> outputs a digital signal adhering to <highlight><bold>12</bold></highlight>S. The MPEG-2 encoder <highlight><bold>114</bold></highlight> forms the MPEG-2 encoder <highlight><bold>54</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, and, is MB86390A of Fujitsu for example. The MPEG-2 encoder <highlight><bold>114</bold></highlight> compresses an input image signal into an MPEG2MP&commat;ML, and compresses an audio signal into MPEG-1 Layer2 (it can be said that a signal is coded by a predetermined compression method). These compressed image signal and audio signal are multiplexed by a multiplexer provided in the MPEG-2 encoder <highlight><bold>114</bold></highlight>, and the multiplexed signal is output to the outside as a stream of MPEG-2 system PS format. The MPEG-2 decoder <highlight><bold>118</bold></highlight> forms the MPEG-2 decoder <highlight><bold>58</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, and is MB86373B of Fujitsu for example. The MPEG-2 decoder <highlight><bold>118</bold></highlight> has the NTSC encoder <highlight><bold>62</bold></highlight> in the inside. An audio D/A converter <highlight><bold>123</bold></highlight> forms the audio D/A converter <highlight><bold>63</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, and is PCM1723 of Burr-Brown for example, and converting the digital signal adhering to <highlight><bold>12</bold></highlight>S to an analog signal and outputs the analog signal. A CPU <highlight><bold>124</bold></highlight> corresponds to the CPU <highlight><bold>64</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, and is MB91107 of Fujitsu. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> In addition, the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference> includes a controller <highlight><bold>125</bold></highlight>, an SDRAM <highlight><bold>126</bold></highlight>, an ATA interface part <highlight><bold>127</bold></highlight>, an HDD <highlight><bold>128</bold></highlight>, input terminals <highlight><bold>129</bold></highlight>, output terminals <highlight><bold>130</bold></highlight>, a remote controller input part <highlight><bold>131</bold></highlight>, a mute filter part <highlight><bold>134</bold></highlight>, a video amplifier <highlight><bold>135</bold></highlight>, a buffer <highlight><bold>136</bold></highlight>, and a CPU bus <highlight><bold>137</bold></highlight>. A TV monitor and the like is connected to the ATA interface part <highlight><bold>127</bold></highlight>. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> The controller <highlight><bold>125</bold></highlight> forms FPGA <highlight><bold>65</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, and includes an ATA interface part <highlight><bold>125</bold></highlight><highlight><italic>a</italic></highlight>, an encoder DMAC (dynamic memory access controller) <highlight><bold>125</bold></highlight><highlight><italic>b</italic></highlight>, a decoder DMAC <highlight><bold>125</bold></highlight><highlight><italic>c</italic></highlight>, a DISC DMAC <highlight><bold>125</bold></highlight><highlight><italic>d</italic></highlight>, a remote controller interface <highlight><bold>125</bold></highlight><highlight><italic>e</italic></highlight>. a serial interface <highlight><bold>125</bold></highlight><highlight><italic>f</italic></highlight>, a stream input interface <highlight><bold>125</bold></highlight><highlight><italic>g</italic></highlight>, an SDRAM interface <highlight><bold>125</bold></highlight><highlight><italic>g</italic></highlight>, a CPU bus interface <highlight><bold>125</bold></highlight><highlight><italic>i</italic></highlight>, a register <highlight><bold>125</bold></highlight><highlight><italic>j </italic></highlight>and a stream output interface <highlight><bold>125</bold></highlight><highlight><italic>h. </italic></highlight></paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> The ATA interface part <highlight><bold>125</bold></highlight><highlight><italic>a </italic></highlight>forms an interface to the ATA interface part <highlight><bold>127</bold></highlight> via the buffer <highlight><bold>136</bold></highlight>. The encoder DMAC <highlight><bold>125</bold></highlight><highlight><italic>b </italic></highlight>DMA-transfers a stream (in which an image signal and an audio signal are multiplexed) output by the encoder <highlight><bold>114</bold></highlight> to the SDRAM <highlight><bold>126</bold></highlight> via the stream input interface part <highlight><bold>125</bold></highlight><highlight><italic>g</italic></highlight>. Start and stop of this DMA-transferring are performed by setting predetermined codes in corresponding areas in the register <highlight><bold>125</bold></highlight><highlight><italic>j</italic></highlight>. The decoder DMAC <highlight><bold>125</bold></highlight><highlight><italic>c </italic></highlight>DMA-transfers a stream from the SDRAM <highlight><bold>126</bold></highlight> to the decoder <highlight><bold>118</bold></highlight> via the stream output interface <highlight><bold>125</bold></highlight><highlight><italic>h</italic></highlight>. Start and stop of this DMA-transferring are performed by setting predetermined codes in corresponding areas in the register <highlight><bold>125</bold></highlight><highlight><italic>j</italic></highlight>. The DISC DMAC <highlight><bold>125</bold></highlight><highlight><italic>d </italic></highlight>DMA-transfers data which is stored in an address in the HDD <highlight><bold>128</bold></highlight> corresponding to the HDD <highlight><bold>68</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 11</cross-reference> to the SDRAM <highlight><bold>126</bold></highlight>. Start and stop of this DMA-transferring are performed by setting predetermined codes in corresponding areas in the register <highlight><bold>125</bold></highlight><highlight><italic>j</italic></highlight>. The remote controller interface <highlight><bold>125</bold></highlight><highlight><italic>e </italic></highlight>receives various instructions from a remote controller, which is not shown in the figure, and sets predetermined codes in corresponding areas in the register <highlight><bold>125</bold></highlight><highlight><italic>j. </italic></highlight></paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> The serial interface <highlight><bold>125</bold></highlight><highlight><italic>f </italic></highlight>forms an interface for outputting a control signal such as mode setting signal to the encoder <highlight><bold>114</bold></highlight>. The SDRAM interface <highlight><bold>125</bold></highlight><highlight><italic>h </italic></highlight>forms an interface to the SDRAM <highlight><bold>126</bold></highlight>. The CPU bus interface <highlight><bold>125</bold></highlight><highlight><italic>i </italic></highlight>forms an interface to the CPU bus <highlight><bold>137</bold></highlight>. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> The CPU <highlight><bold>124</bold></highlight> controls each part via the CPU bus <highlight><bold>137</bold></highlight>. For example, the CPU <highlight><bold>124</bold></highlight> checks a flag in the register <highlight><bold>125</bold></highlight><highlight><italic>i </italic></highlight>in the controller <highlight><bold>125</bold></highlight> and performs a corresponding processing. In addition, the CPU <highlight><bold>124</bold></highlight> outputs control signals CNTL<highlight><bold>1</bold></highlight> and CNTL<highlight><bold>2</bold></highlight> to the audio D/A converter <highlight><bold>123</bold></highlight> and the filter <highlight><bold>134</bold></highlight> so as to control an audio signal which is processed by these parts. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> The input terminals <highlight><bold>129</bold></highlight> include a composite terminal, a Y terminal and a C terminal. The input terminals <highlight><bold>130</bold></highlight> include an L (left) terminal and an R (right) terminal. The output terminals <highlight><bold>131</bold></highlight> include a composite terminal, a Y terminal and a C terminal. The output terminal <highlight><bold>132</bold></highlight> includes an L (left) terminal and an R (right) terminal. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> The DIR area <highlight><bold>13</bold></highlight> of the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference> stores following file management information for each file:  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="112PT" align="left"/>
<colspec colname="2" colwidth="91PT" align="left"/>
<thead>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>File name</entry>
<entry>32 byte</entry>
</row>
<row>
<entry></entry>
<entry>Record start time (date)</entry>
<entry>&ensp;8 byte</entry>
</row>
<row>
<entry></entry>
<entry>Record end time (date)</entry>
<entry>&ensp;8 byte</entry>
</row>
<row>
<entry></entry>
<entry>Using cluster number</entry>
<entry>&ensp;4 byte (calculation of</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry>disk capacity)</entry>
</row>
<row>
<entry></entry>
<entry>System attribute 1</entry>
<entry>&ensp;1 byte (prohibiting file</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry>deletion and the like)</entry>
</row>
<row>
<entry></entry>
<entry>System attribute 2</entry>
<entry>&ensp;1 byte (file, directory and</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry>the like)</entry>
</row>
<row>
<entry></entry>
<entry>Pointer to leading FAT entry</entry>
<entry>&ensp;2 byte</entry>
</row>
<row>
<entry></entry>
<entry>Coding and compression method</entry>
<entry>&ensp;1 byte</entry>
</row>
<row>
<entry></entry>
<entry>System bit rate</entry>
<entry>&ensp;2 byte</entry>
</row>
<row>
<entry></entry>
<entry>Encoding mode</entry>
<entry>&ensp;1 byte (fixed/variable bit</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry>rate)</entry>
</row>
<row>
<entry></entry>
<entry>Encode video</entry>
<entry>&ensp;1 byte (NTSC/PAL)</entry>
</row>
<row>
<entry></entry>
<entry>Filter 134 parameter</entry>
<entry>&ensp;1 byte</entry>
</row>
<row>
<entry></entry>
<entry>System bit rate</entry>
<entry>&ensp;1 byte</entry>
</row>
<row>
<entry></entry>
<entry>D/A 123 sampling frequency</entry>
<entry>&ensp;2 byte</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> (Operation of the Example) </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> Next, the operation of the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference> will be described with reference to flowcharts. Following flowcharts show processes performed by the CPU <highlight><bold>124</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>. DMA processing (transferring operation between SDRAM of the FPGA and the hard disk) is performed by the controller <highlight><bold>125</bold></highlight>. Basically, in the record and playback processing, initial file creation or open is processed by a main routine of the CPU <highlight><bold>124</bold></highlight>, however, DMA processing or processing which requires high speed such as writing and reading of the hard disk is performed by interrupt processing routine. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a flowchart showing a main flow of recording operation. Initialization is performed in step S<highlight><bold>11</bold></highlight>. In this process, initialization of the NTSC decoder <highlight><bold>112</bold></highlight>, initialization of the audio A/D converter <highlight><bold>113</bold></highlight>, initialization of the controller <highlight><bold>125</bold></highlight>, initialization of the DMA controllers (DMAC) <highlight><bold>125</bold></highlight><highlight><italic>b </italic></highlight><highlight><bold>125</bold></highlight><highlight><italic>c </italic></highlight>and <highlight><bold>125</bold></highlight><highlight><italic>d </italic></highlight>and initialization of the encoder <highlight><bold>114</bold></highlight> are performed. Next, the encoder DMAC <highlight><bold>125</bold></highlight><highlight><italic>b </italic></highlight>is activated in step S<highlight><bold>12</bold></highlight>. More particularly, data is written into a corresponding activating register in a register <highlight><bold>125</bold></highlight> of the controller <highlight><bold>125</bold></highlight>. Next, a new file is created in step S<highlight><bold>13</bold></highlight>, which will be described in detail later. After that, the encoder <highlight><bold>114</bold></highlight> is activated in step S<highlight><bold>14</bold></highlight>. In actual, recording to the HDD <highlight><bold>128</bold></highlight> is performed by an interrupt processing, which will be described later. In addition, the process shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is performed by the main routine in the CPU <highlight><bold>124</bold></highlight>. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a flowchart showing a main flow for playback operation. Initialization is performed in step S<highlight><bold>21</bold></highlight>. In this process, initialization of the audio D/A converter <highlight><bold>123</bold></highlight>, initialization of the register <highlight><bold>125</bold></highlight><highlight><italic>j</italic></highlight>, initialization of the DMAC <highlight><bold>125</bold></highlight><highlight><italic>b</italic></highlight>-<highlight><bold>125</bold></highlight><highlight><italic>d </italic></highlight>and initialization of the decoder <highlight><bold>118</bold></highlight> are performed. The decoder is activate in step S<highlight><bold>22</bold></highlight>. An existing file specified on the HDD <highlight><bold>128</bold></highlight> is opened in step S<highlight><bold>23</bold></highlight>. In step S<highlight><bold>24</bold></highlight>, data of one cluster is DMA-transferred from the HDD <highlight><bold>128</bold></highlight> to the SDRAM <highlight><bold>126</bold></highlight> under control by the disk DMAC <highlight><bold>125</bold></highlight><highlight><italic>d</italic></highlight>. Next, in step S<highlight><bold>25</bold></highlight>, the decoder DMAC <highlight><bold>125</bold></highlight><highlight><italic>c </italic></highlight>is activated, and data is DMA-transferred from the SDRAM <highlight><bold>126</bold></highlight> to the decoder <highlight><bold>118</bold></highlight>. The process of the step S<highlight><bold>25</bold></highlight> can be performed cluster by cluster, or performed by some clusters together. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a flowchart showing a generation process of a new file. A basic file system management area is provided in the HDD <highlight><bold>128</bold></highlight> in addition to the before-mentioned DIR area <highlight><bold>13</bold></highlight> and FAT area (for example, FAT area <highlight><bold>34</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>). The total number of files is stored in the basic file system management area. In step S<highlight><bold>31</bold></highlight>, this information is incremented by 1. Next, in step S<highlight><bold>32</bold></highlight>, a new DIR area <highlight><bold>13</bold></highlight> is created (that is, a storing area corresponding to the new file is created in the DIR area <highlight><bold>13</bold></highlight>. Then, in step S<highlight><bold>33</bold></highlight>, a next process is performed. A free cluster in the DISK area <highlight><bold>15</bold></highlight> on the HDD <highlight><bold>128</bold></highlight> is searched for. Then, a forward pointer value indicating a leading FAT entry of the DIR entry tag is assigned to the free cluster. In addition, use cluster is set to 0 and stored in the DIR entry tag. Further, default file name is created and stored in the DIR entry tag. In addition, recording start time is stored in the DIR entry tag. Further, necessary management information forming the DIR entry tag is stored in the DIR entry tag. Next, in step S<highlight><bold>34</bold></highlight>, before-mentioned parameter information used for code compression by MPEG is generated and is stored in the DIR entry tag of the DIR area <highlight><bold>13</bold></highlight>. Then, in step S<highlight><bold>35</bold></highlight>, a new file is opened by performing an existing file open process, which will be described with reference to <cross-reference target="DRAWINGS">FIG. 16</cross-reference>. As for the step S<highlight><bold>35</bold></highlight>, in order to provide commonality with a playback process, a new file is created when recording data, after that, an existing file open process is performed. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> shows the existing file open process. In step S<highlight><bold>41</bold></highlight>, DIR entry tag information recorded in the DIR area <highlight><bold>13</bold></highlight> is read. In step S<highlight><bold>42</bold></highlight>, different processes for variables in the program are performed according to whether the file is read or written. Each variable indicates following means. </paragraph>
<paragraph id="P-0090" lvl="2"><number>&lsqb;0090&rsqb;</number> ptr_f: variable of the forward pointer <highlight><bold>14</bold></highlight><highlight><italic>a </italic></highlight></paragraph>
<paragraph id="P-0091" lvl="2"><number>&lsqb;0091&rsqb;</number> ptr_b: variable of the backward pointer <highlight><bold>14</bold></highlight><highlight><italic>d </italic></highlight></paragraph>
<paragraph id="P-0092" lvl="2"><number>&lsqb;0092&rsqb;</number> ptr_c: variable of a current value pointer </paragraph>
<paragraph id="P-0093" lvl="2"><number>&lsqb;0093&rsqb;</number> time: variable of time </paragraph>
<paragraph id="P-0094" lvl="7"><number>&lsqb;0094&rsqb;</number> The variable of time indicates time of start of recording. Variables ptr_f, ptr_b, ptr_c are used for calculating a pointer of FAT on the basis of each operation. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> When the judgment result in step S<highlight><bold>42</bold></highlight> is NO (which means not reading), that is, when recording is performed, since data is written into HDD<highlight><bold>128</bold></highlight>, a pointer first_ptr to the leading FAT entry is substituted into ptr_f and a file end code (File_Full_Code) is substituted into ptr_b. On the other hand, when reading is performed, first_ptr is substituted into ptr_c in step S<highlight><bold>44</bold></highlight>. In step S<highlight><bold>45</bold></highlight> next to steps S<highlight><bold>43</bold></highlight> and S<highlight><bold>44</bold></highlight>, a current time is read out from a clock (which is provided in the encoder <highlight><bold>114</bold></highlight> for example) and is set in the variable time. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a flowchart showing an existing file close process. In step S<highlight><bold>51</bold></highlight>, it is judged whether the file is read or not. When the file is written, FAT entry tag information indicated by the variable ptr_c is read in step S<highlight><bold>52</bold></highlight>, a file termination code is set in ptr_f, and these variables are written back to the FAT area <highlight><bold>34</bold></highlight>. In addition, the using DIR area <highlight><bold>13</bold></highlight> is read and use clusters and record end times are stored. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a flowchart showing a DMA process. As for interruption, the encoder DMAC <highlight><bold>125</bold></highlight><highlight><italic>b </italic></highlight>and the decoder <highlight><bold>125</bold></highlight><highlight><italic>c </italic></highlight>exist for one interrupt signal (which is not shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference> for the same of simplicity) output from the controller <highlight><bold>125</bold></highlight>. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> In addition, the DISK DMAC <highlight><bold>125</bold></highlight><highlight><italic>d </italic></highlight>exists, that is, a delay interrupt of software interrupt activation which is issued from the interrupt DMA process exists. Write to or read from the HDD <highlight><bold>128</bold></highlight> is activated by this delay interrupt (DISK DMAC <highlight><bold>125</bold></highlight><highlight><italic>d</italic></highlight>). </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> When a request for DMA transfer of the encoder DMAC <highlight><bold>125</bold></highlight><highlight><italic>b </italic></highlight>occurs in step S<highlight><bold>61</bold></highlight>, the interrupt is cleared in step S<highlight><bold>62</bold></highlight>, and a variable enc_dma_buf_status is incremented by 1. The variable enc_dma buf_status indicates the number of buffers of the SDRAM <highlight><bold>126</bold></highlight>. This variable is incremented by interrupt of the encoder side, which indicates that data is stored. This is normally set as 64 kbytes. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> The SDRAM buffer pointer is managed by software processed by the CPU <highlight><bold>124</bold></highlight>. In step <highlight><bold>64</bold></highlight>, the SDRAM buffer pointer in the resister <highlight><bold>125</bold></highlight><highlight><italic>j </italic></highlight>is updated. When the value of the variable enc_dma_buf_status is judged to be full, it means that the buffer <highlight><bold>125</bold></highlight><highlight><italic>j </italic></highlight>overflows so that an error occurs (error end). When the buffer does not overflow, the encoder DMAC <highlight><bold>125</bold></highlight><highlight><italic>b </italic></highlight>is reactivated in step S<highlight><bold>66</bold></highlight>. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> In step S<highlight><bold>67</bold></highlight>, it is judged whether a DMA transfer request of the decoder DMAC <highlight><bold>125</bold></highlight><highlight><italic>c </italic></highlight>occurs. When the request for DMA transfer by the decoder DMAC <highlight><bold>125</bold></highlight><highlight><italic>c </italic></highlight>occurs, the interrupt is cleared in step S<highlight><bold>68</bold></highlight>, and a variable dec_dma_buf_status is decremented by &minus;1. The variable dec_dma_buf_status indicates the number of buffers of the SDRAM. The variable is decremented by interrupt in the decoder side, which indicates that data is consumed. This is normally set to be 64 k bytes. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> The SDRAM buffer pointer is managed by software by processing of the CPU <highlight><bold>124</bold></highlight>. The SDRAM buffer pointer in the register <highlight><bold>125</bold></highlight><highlight><italic>j </italic></highlight>is updated in step S<highlight><bold>70</bold></highlight>. When it is judged that the variable dec_dma_buf_status is empty in step S<highlight><bold>71</bold></highlight>, it means that reading data from the HDD <highlight><bold>128</bold></highlight> to the buffer <highlight><bold>136</bold></highlight> is delayed so that data is not provided to the decoder <highlight><bold>118</bold></highlight>. A mechanism is realized in which it is not regarded as an error and the process can be continued since there is a case that the decoder <highlight><bold>118</bold></highlight> requests data excessively in this case. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> When dec_dma_buf_status is empty in step S<highlight><bold>71</bold></highlight>, parameters in the decoder DMAC<highlight><bold>125</bold></highlight><highlight><italic>c </italic></highlight>is reset, and a variable DLYI is set to be 1 so that a delay interrupt occurs in step S<highlight><bold>72</bold></highlight>. Accordingly, data transfer from the HDD <highlight><bold>128</bold></highlight> to the SDRAM <highlight><bold>126</bold></highlight> by the DISK DMAC <highlight><bold>125</bold></highlight><highlight><italic>d </italic></highlight>is instructed. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> After that, parameters are reset to the register <highlight><bold>125</bold></highlight><highlight><italic>j </italic></highlight>in step S<highlight><bold>73</bold></highlight>, and the decoder DMAC <highlight><bold>125</bold></highlight><highlight><italic>c </italic></highlight>is reactivated. Then, DLYI is set to be 1 in step S<highlight><bold>74</bold></highlight> and a delay interrupt for DMA transfer by using the DISK DMAC <highlight><bold>125</bold></highlight><highlight><italic>d </italic></highlight>is issued. The delay interrupt is an interrupt which can be set by software. At the time when this DMA process ends, if there is not a higher priority interrupt, the process is performed. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a flowchart showing a file access process (file access process by the DISK DMAC <highlight><bold>15</bold></highlight><highlight><italic>d</italic></highlight>) performed by the delay interrupt. A file write process is performed in step S<highlight><bold>81</bold></highlight>. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a flowchart showing the file write process. It is judged whether a cluster to be written exists in step S<highlight><bold>101</bold></highlight>. When clusters corresponding to the amount of data do not exist, the process ends. An integral multiple of the variable enc_dma_buf_status are set as the size of the cluster. For example, 1 cluster is set to be 1 M bytes which is 16 times of the variable. Next, a leading cluster is judged in step S<highlight><bold>102</bold></highlight>. When the leading cluster is found, a FAT write process is performed in step S<highlight><bold>103</bold></highlight>. The FAT write process is for writing data to the FAT area <highlight><bold>34</bold></highlight>. Next, 64 kbytes which corresponds to one enc_dma_buf_status is written in step S<highlight><bold>104</bold></highlight>. For both of the FAT write process and 64 kbytes writing, the DISK DMAC <highlight><bold>125</bold></highlight><highlight><italic>d </italic></highlight>of the controller <highlight><bold>125</bold></highlight> is used. More particularly, data is written into an activation register of the DISK DMAC <highlight><bold>125</bold></highlight><highlight><italic>d </italic></highlight>which is provided in the register <highlight><bold>125</bold></highlight><highlight><italic>j</italic></highlight>. Issuing of an ATA command to the HDD <highlight><bold>128</bold></highlight> is performed by the CPU <highlight><bold>124</bold></highlight> before the process of the DISK DMAC <highlight><bold>125</bold></highlight><highlight><italic>d </italic></highlight>is performed (also in this process, written in the register <highlight><bold>125</bold></highlight><highlight><italic>j </italic></highlight>of the controller <highlight><bold>125</bold></highlight>). </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> Next, the variable enc_dma_buf status is decremented by 1 in step S<highlight><bold>105</bold></highlight>. This corresponds to the process that the variable enc_dma_buf_status is incremented by 1 in step S<highlight><bold>63</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>. (a buffer management is performed in which the variable is incremented in the encode process and decremented in writing to the HDD <highlight><bold>128</bold></highlight>) Since the SDRAM buffer pointer is managed by software by the processing of the CPU <highlight><bold>124</bold></highlight>, the SDRAM buffer pointer formed in the register <highlight><bold>125</bold></highlight><highlight><italic>j </italic></highlight>in the controller <highlight><bold>125</bold></highlight> is updated in step S<highlight><bold>106</bold></highlight>. Then, steps from S<highlight><bold>102</bold></highlight> to S<highlight><bold>106</bold></highlight> are repeated until a judgment result of step S<highlight><bold>107</bold></highlight> becomes YES. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> In step S<highlight><bold>82</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, it is judged whether dec_dma_buf_status is empty. When it is empty, a file read process is performed in step S<highlight><bold>84</bold></highlight>. When dec_dma_buf_status is not empty in step S<highlight><bold>82</bold></highlight>, it is judged whether the decoder DMAC <highlight><bold>125</bold></highlight><highlight><italic>c </italic></highlight>has been activated in step S<highlight><bold>83</bold></highlight>. When it has been activated, step S<highlight><bold>84</bold></highlight> is performed. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> In step S<highlight><bold>85</bold></highlight>, it is judged whether the FAT area <highlight><bold>34</bold></highlight> becomes full. The size of the FAT area can be calculated as explained in the first embodiment. When it is judged that the FAT area is full in step S<highlight><bold>85</bold></highlight>, it means that the HDD <highlight><bold>128</bold></highlight> is full. Thus, an end process (processes of the encoder <highlight><bold>114</bold></highlight>, the controller <highlight><bold>125</bold></highlight>, and DMA are stopped) is performed in step S<highlight><bold>86</bold></highlight>, and the existing file is closed in step S<highlight><bold>87</bold></highlight>. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> It is judged whether the file ends in step S<highlight><bold>88</bold></highlight>. When it is judged that the file ends, an end process (processes of the decoder <highlight><bold>118</bold></highlight>, the controller <highlight><bold>125</bold></highlight>, and DMA are stopped) is performed in step S<highlight><bold>89</bold></highlight>, and the existing file is closed in step S<highlight><bold>90</bold></highlight>. When the judgment result of step S<highlight><bold>88</bold></highlight> is NO, it is judged whether data for file write or file read exists in step S<highlight><bold>91</bold></highlight>. When there is such data, DLYI is set to 0 in step S<highlight><bold>92</bold></highlight> so that the delay interrupt ends. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> shows a flowchart showing a write process to the FAT area <highlight><bold>34</bold></highlight>. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> A write process is performed on a FAT of a leading cluster, and a current using cluster is incremented by 1 in step S<highlight><bold>111</bold></highlight>. After that, the forward pointer ptr_f is substituted into a current value pointer ptr_c in step S<highlight><bold>112</bold></highlight>. In step S<highlight><bold>113</bold></highlight>, an address in the HDD <highlight><bold>128</bold></highlight> is calculated on the basis of the current value pointer ptr_c. In step S<highlight><bold>114</bold></highlight>, a free cluster is searched for and the FAT of the cluster is substituted into the forward pointer ptr_f. When it is judged that there is an instruction to write index information in step S<highlight><bold>115</bold></highlight>, an index number is incremented by 1 in step S<highlight><bold>116</bold></highlight>, and the index number is stored into index information Index Info (which corresponds to the before-mentioned index information <highlight><bold>14</bold></highlight><highlight><italic>c</italic></highlight>). In addition, a current time is read from a clock and the time is stored in the time information Record Time (which corresponds to the before-mentioned time information <highlight><bold>14</bold></highlight><highlight><italic>b</italic></highlight>). </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> A series of FAT entry tag information, that is, the forward pointer ptr_f, the time information Record Time, the index information Index Info, and the backward pointer ptr_b are written into the FAT area <highlight><bold>34</bold></highlight> of the HDD <highlight><bold>128</bold></highlight>. Then, the current value pointer ptr_c is substituted into the backward pointer ptr_b in step S<highlight><bold>119</bold></highlight>. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> By using the pointers ptr_f and ptr_b shown in <cross-reference target="DRAWINGS">FIG. 21, a</cross-reference> forward and backward pointer chain of the FAT area <highlight><bold>34</bold></highlight> can be realized. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> shows a flowchart indicating a file read process. This is basically the same as the file write process shown in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>. It is judged whether a cluster to read exists in step S<highlight><bold>121</bold></highlight>. When the cluster do not exist, the process ends. An integral multiple of the variable dec_dma_buf status are set as the size of the cluster. For example, 1 cluster is set to be 1 M bytes which is 16 times of the variable. Next, a leading cluster is judged in step S<highlight><bold>122</bold></highlight>. When the leading cluster is found, a FAT read process is performed in step S<highlight><bold>123</bold></highlight>. The FAT read process is for reading data from the FAT area <highlight><bold>34</bold></highlight>. Next, 64 kbytes which corresponds to one dec_dma_buf status is read in step S<highlight><bold>124</bold></highlight>. For both of the FAT read process and 64 kbytes reading, the DISK DMAC <highlight><bold>125</bold></highlight><highlight><italic>d </italic></highlight>of the controller <highlight><bold>125</bold></highlight> is used. More particularly, data is written into an activation register of the DISK DMAC <highlight><bold>125</bold></highlight><highlight><italic>d </italic></highlight>which is provided in the register <highlight><bold>125</bold></highlight><highlight><italic>j</italic></highlight>. Issuing of an ATA command to the HDD <highlight><bold>128</bold></highlight> is performed by the CPU <highlight><bold>124</bold></highlight> before the process by the DISK DMAC <highlight><bold>125</bold></highlight><highlight><italic>d </italic></highlight>is performed (also in this process, written in the register <highlight><bold>125</bold></highlight><highlight><italic>j </italic></highlight>of the controller <highlight><bold>125</bold></highlight>). </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> Next, the variable dec_dma_buf_status is incremented by 1 in step S<highlight><bold>125</bold></highlight>. This corresponds to the process that the variable dec_dma_buf_status is decremented by 1 in step S<highlight><bold>69</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>. (a buffer management is performed in which the variable is decremented in the decode process and incremented when reading from the HDD <highlight><bold>128</bold></highlight>) Since the SDRAM buffer pointer is managed by software by the processing of the CPU <highlight><bold>124</bold></highlight>, the SDRAM buffer pointer formed in the register <highlight><bold>125</bold></highlight><highlight><italic>j </italic></highlight>in the controller <highlight><bold>125</bold></highlight> is updated in step S<highlight><bold>126</bold></highlight>. Then, steps from S<highlight><bold>122</bold></highlight> to S<highlight><bold>126</bold></highlight> are repeated until a judgment result of step S<highlight><bold>127</bold></highlight> becomes YES, that is, reading of 1 cluster ends. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> is a flowchart indicating a FAT read process. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> In step S<highlight><bold>131</bold></highlight>, it is judged whether forward playback or backward playback is indicated. When forward playback or backward playback is instructed, further processes are performed. When it is not instructed, the process moves to a judgment process of index search instruction indicated by {circle over (1)} (<cross-reference target="DRAWINGS">FIG. 24</cross-reference>). </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> When forward playback or backward playback is instructed, it is judged whether clusters corresponding to special playback counter are processed. The special playback counter is for counting a count value corresponding to a data amount which should be played back. Next, whether the file ends or not is checked in step S<highlight><bold>133</bold></highlight>. When the file ends, an end flag is set in step <highlight><bold>134</bold></highlight>. When the file does not end, an address in the HDD <highlight><bold>128</bold></highlight> is calculated on the basis of the current value pointer ptr_c in step S<highlight><bold>135</bold></highlight>, and a series of information (ptr_f, Record Time, Index Info, ptr_b) of the FAT entry tag is read from the HDD <highlight><bold>128</bold></highlight>. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> It is judged whether the playback is forward or backward in step <highlight><bold>137</bold></highlight>, a variable which is substituted into the current value pointer ptr_c is changed according to whether the playback is forward or backward. The current value pointer ptr_c is used for instructing next cluster reading. When the playback is forward, the current value pointer ptr_c is substituted into the forward pointer ptr_f. When the playback is backward, the current value pointer ptr_c is substituted into the backward pointer ptr_b. Then, the process returns to step S<highlight><bold>132</bold></highlight>. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> When the judgment result of step S<highlight><bold>131</bold></highlight> is NO and the process moves to <cross-reference target="DRAWINGS">FIG. 24</cross-reference>, it is judged whether there is an index search instruction in step S<highlight><bold>141</bold></highlight>. When the index search is not instructed, the process moves to judgment process for time search instruction. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> When there is an index search instruction, it is judged whether the file ends in step S<highlight><bold>142</bold></highlight>. When the file does not end, an address of the HDD <highlight><bold>128</bold></highlight> is calculated on the basis of the current value pointer ptr_c. Then, series of Fat entry tag information (ptr_f, Record Time, Index Info, ptr_b) is read from the HDD <highlight><bold>128</bold></highlight>. Then, steps from S<highlight><bold>141</bold></highlight> to S<highlight><bold>146</bold></highlight> are repeated until the judgement result of step S<highlight><bold>146</bold></highlight> becomes YES, that is, until a number instructed in the index information Index Info is recognized. When the index search instruction disappears in the process, normal playback is performed from that point. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> In the process shown in <cross-reference target="DRAWINGS">FIG. 25</cross-reference>, when it is judged that there is the time search instruction in step S<highlight><bold>151</bold></highlight>, the process goes to step S<highlight><bold>152</bold></highlight>. When there is not the time search instruction, the FAT read process started from <cross-reference target="DRAWINGS">FIG. 23</cross-reference> ends. When there is the time search instruction in step S<highlight><bold>151</bold></highlight>, it is checked whether the file ends in step S<highlight><bold>153</bold></highlight>. When it is judged that the file ends, an end flag is set in step S<highlight><bold>153</bold></highlight>. When the file does not end yet, an address of the HDD <highlight><bold>128</bold></highlight> is calculated on the basis of the current value pointer in step S<highlight><bold>154</bold></highlight> and a series of FAT entry tag information (ptr_f, Record Time, Index Info, ptr_b) is read from the HDD<highlight><bold>128</bold></highlight>. Steps from S<highlight><bold>151</bold></highlight> to S<highlight><bold>156</bold></highlight> are repeated until the time information Record Time agrees with instructed time, that is, until the judgment result of step S<highlight><bold>156</bold></highlight> becomes YES. When the time search instruction disappears at some midpoint, normal playback process starts from that point. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> As mentioned above, the record and playback apparatus shown in <cross-reference target="DRAWINGS">FIGS. 11 and 12</cross-reference> is an example in which the third embodiment of the present invention is applied. Therefore, various record and playback processes can be realized by using the time information Record Time, the index information Index Info and the backward pointer ptr_b. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> The CPU <highlight><bold>124</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference> functions as the following control part. By comparing a specified time specified from the outside with the time information, the CPU <highlight><bold>124</bold></highlight> functions as a control part for causing the record and playback apparatus to start playback operation from a recording unit corresponding to the specified time. In addition, by comparing a specified time interval specified from the outside with the time information, the CPU <highlight><bold>124</bold></highlight> functions as a control part for causing the record and playback apparatus to perform playback operation including recording units corresponding to the specified time interval. In addition, by comparing specified index information specified from the outside with the index information which is stored, the CPU <highlight><bold>124</bold></highlight> functions as a control part for causing the record and play back apparatus to perform playback operation including a recording unit corresponding to the specified index information. Further, by comparing a specified backward pointer which is specified from the outside with the stored backward pointer, the CPU <highlight><bold>124</bold></highlight> functions as a control part for causing the record and playback apparatus to perform playback operation from a recording unit specified by the specified backward pointer. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> Since the third embodiment is applied to the above-mentioned example, the above-mentioned example includes the first embodiment or the second embodiment. However, the first embodiment or the second embodiment can be applied to the configuration shown in FIGS. <highlight><bold>12</bold></highlight> and <highlight><bold>13</bold></highlight>. In addition, file management can be performed by providing only the backward pointer <highlight><bold>14</bold></highlight><highlight><italic>d </italic></highlight>or the index information <highlight><bold>14</bold></highlight><highlight><italic>c. </italic></highlight></paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> In the above-mentioned example, although the HDD <highlight><bold>128</bold></highlight> is used as the recording medium, the recording medium is not limited to the HDD <highlight><bold>128</bold></highlight>. Other recording medium such as DVD can be used. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> As mentioned above, according to the present invention, a record and playback apparatus having ease-of-use features can be provided. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> The present invention is not limited to the specifically disclosed embodiments, and variations and modifications may be made without departing from the scope of the invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A record and playback apparatus which codes information and records said information which is coded in a recording medium, wherein: 
<claim-text>said record and playback apparatus stores, in a predetermined management area provided in said recording medium, management information including at least one of time information on a time when said information is coded, index information which can be assigned to a recording unit, and a backward pointer for connecting recording units in a backward direction. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The record and playback apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said predetermined management area is a FAT area, and said management information is provided in said FAT area. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The record and playback apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said predetermined management area storing said management information is an area provided separately from said FAT area. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The record and playback apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said predetermined management area storing said management information is an area provided separately from said FAT area, and said predetermined management area is provided for each of said time information, said index information and said backward pointer. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The record and playback apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said predetermined management area is a FAT area, and said management information is information which forms a FAT entry tag provided in said FAT area. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The record and playback apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>said management information includes said time information; and </claim-text>
<claim-text>said record and playback apparatus comprises a control part which causes said record and playback apparatus to perform playback operation from a recording unit corresponding to a time specified from the outside by comparing said time with said time information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The record and playback apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>said management information includes said time information; and </claim-text>
<claim-text>said record and playback apparatus includes a control part which causes said record and playback apparatus to perform playback operation including recording units corresponding to a time interval specified from the outside by comparing said time interval with said time information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The record and playback apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>said management information includes said index information; and </claim-text>
<claim-text>said record and playback apparatus includes a control part which causes said record and playback apparatus to perform playback operation including a recording unit corresponding to a specified index information specified from the outside by comparing said specified index information with said index information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The record and playback apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>said management information includes said backward pointer; and </claim-text>
<claim-text>said record and playback apparatus includes a control part which causes said record and playback apparatus to perform playback operation from a recording unit indicated by a specified backward pointer specified from the outside by comparing said specified backward pointer with said backward pointer. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A record and playback method for coding information and recording said information which is coded in a recording medium in a record and playback apparatus, said record and playback method comprising the step of: 
<claim-text>performing playback operation according to management information stored in a predetermined management area provided in said recording medium, said management information including at least one of time information on a time when said information is coded, index information which can be assigned to a recording unit, and a backward pointer for connecting recording units in a backward direction. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The record and playback method as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said predetermined management area is a FAT area, and said management information is provided in said FAT area. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The record and playback method as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said predetermined management area storing said management information is an area provided separately from said FAT area. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The record and playback method as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said predetermined management area storing said management information is an area provided separately from said FAT area, and said predetermined management area is provided for each of said time information, said index information and said backward pointer. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The record and playback method as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said predetermined management area is a FAT area, and said management information is information which forms a FAT entry tag provided in said FAT area. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The record and playback method as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said management information includes said time information, said record and playback method comprising the step of: 
<claim-text>controlling said record and playback apparatus to perform playback operation from a recording unit corresponding to a time specified from the outside by comparing said time with said time information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The record and playback method as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said management information includes said time information; said record and playback method comprising the step of: 
<claim-text>controlling said record and playback apparatus to perform to perform playback operation including recording units corresponding to a time interval specified from the outside by comparing said time interval with said time information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The record and playback method as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said management information includes said index information, said record and playback method comprising the step of: 
<claim-text>controlling said record and playback apparatus to perform playback operation including a recording unit corresponding to a specified index information specified from the outside by comparing said specified index information with said index information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The record and playback method as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein said management information includes said backward pointer, said record and playback method comprising the step of: 
<claim-text>controlling said record and playback apparatus to perform playback operation from a recording unit indicated by a specified backward pointer specified from the outside by comparing said specified backward pointer with said backward pointer.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>3</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002194A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002194A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002194A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002194A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002194A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002194A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002194A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002194A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002194A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002194A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002194A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002194A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002194A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030002194A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030002194A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030002194A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030002194A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030002194A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030002194A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030002194A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030002194A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030002194A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030002194A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030002194A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030002194A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030002194A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
