<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004773A1-20030102-D00000.TIF SYSTEM "US20030004773A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004773A1-20030102-D00001.TIF SYSTEM "US20030004773A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004773A1-20030102-D00002.TIF SYSTEM "US20030004773A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004773A1-20030102-D00003.TIF SYSTEM "US20030004773A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004773A1-20030102-D00004.TIF SYSTEM "US20030004773A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004773A1-20030102-D00005.TIF SYSTEM "US20030004773A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004773A1-20030102-D00006.TIF SYSTEM "US20030004773A1-20030102-D00006.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004773</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10097755</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020314</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F017/60</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>705</class>
<subclass>008000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Scheduling system with methods for polling to determine best date and time</title-of-invention>
</technical-information>
<continuity-data>
<non-provisional-of-provisional>
<document-id>
<doc-number>60275687</doc-number>
<document-date>20010315</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Kevin</given-name>
<family-name>Clark</family-name>
</name>
<residence>
<residence-us>
<city>Chicago</city>
<state>IL</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>David</given-name>
<family-name>Larson</family-name>
</name>
<residence>
<residence-us>
<city>Chicago</city>
<state>IL</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Tze-John</given-name>
<family-name>Tang</family-name>
</name>
<residence>
<residence-us>
<city>Chicago</city>
<state>IL</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Vladimir</given-name>
<family-name>Tokarskiy</family-name>
</name>
<residence>
<residence-us>
<city>Chicago</city>
<state>IL</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>Objectsoft, Inc.</organization-name>
<address>
<city>Chicago</city>
<state>IL</state>
</address>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>Mr. Kevin W. Clark</name-1>
<name-2>c/o Objectsoft, Inc.</name-2>
<address>
<address-1>750 North Clark</address-1>
<city>Chicago</city>
<state>IL</state>
<postalcode>60610</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A scheduling system to schedule events with one to many people using invitations with optional dates, times and locations to determine the soonest or the best date and time along with location for the event. When scheduling meetings, it is often necessary to determine the soonest or best date, time and location to meet between multiple people using different calendar systems. The process is time consuming and requires two or more parties to coordinate the schedules of many people. With the scheduling system of this invention, invitations are sent with optional times. Invited participants are polled for the soonest or best date, time and location to conduct the event. Through a asynchronous polling mechanism, the soonest or best available time along with best location may be determined between people on different calendar systems. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS REFERENCE TO RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application claims priority based on U.S. Provisional Patent Application Serial No. 60/275,687, entitled &ldquo;Scheduling system with methods to determine best date and time&rdquo; filed Mar. 15, 2001.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">COPYRIGHT STATEMENT </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF INVENTION </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Whenever people try to schedule an event, a series of emails, phone calls and coordination take place that cause the process of picking a date and time take longer than needed. While systems exist for users that are all using the same calendar systems, the process does not facilitate the coordination of events between people on different calendar systems. This invention improves the entire scheduling process. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF INVENTION </heading>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The aforementioned problem has been around since people attempted to schedule events and meetings. Standardized communication through email and messaging is connecting the vast majority of people in the world. The invention preferably comprises a system with an input interface that an event creator utilizes to choose multiple dates and times to host an event. The creator may then choose location options, participants and enter additional information about the event. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The system may send invitations to participants electronically or via a voice driven phone call. A recipient may respond with their best dates, time and location for the event. The system will track the responses from each participant and determine the best date, time and location to have all required participants at the event. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> When required participant responses are gathered, the system can optionally schedule the meeting and send final event invitations with a set date and time for confirmation. Or, the system may request the creator to commit the final date and time based on participant responses. After the creator commits the date and time, the system sends final invites to all original participants for final confirmation.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF DRAWINGS </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1A</cross-reference> is a block diagram of a computer system in which the present invention may be embodied. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1B</cross-reference> is a functional block diagram of an application program in which the present invention may be embodied. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a flowchart of the invitation process. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a flowchart of the participant response gathering process. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4A</cross-reference> is a flowchart of the soonest scheduling process. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4B</cross-reference> is a flowchart of the best date range scheduling process.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The present invention is directed at providing a better process for scheduling an event with multiple people by polling them to determine the best date, time and location to meet. Briefly described, the program allows a user to create invitations with multiple date, time and location options that are sent to invited participants. Invited participants can respond by various means to choose a best date, time and location. The program then utilizes one or more consensus algorithms to select a date, time and location so it can commit the final invitation which will be confirmed by invited participants. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference>A and the following discussion are intended to provide an overview of the computing environment in which the invention may be implemented. While the program will be described in the general context of an application program that runs in an operating system in conjunction with personal computers, hand-held devices, and telephones, those skilled in the art will recognize that the invention also may be implemented in combination with other program modules. Generally, program modules include routines, programs, components, data structures, etc. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, minicomputers, mainframe computers, and the like. The invention may also be practiced utilizing standard telephone systems as a terminal to respond to and generate requests from the application program. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed environment, program modules may be located in both local and remote memory storage systems. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Referring now to the drawings wherein like references numerals refer to like elements, <cross-reference target="DRAWINGS">FIG. 1A</cross-reference> illustrates a scheduling system <highlight><bold>100</bold></highlight> which comprises a computer system acting as a scheduling server <highlight><bold>102</bold></highlight> and may include a voice response unit <highlight><bold>103</bold></highlight>. The clients <highlight><bold>200</bold></highlight> may be comprised of computers, laptops, hand-held devices, PDAs, pagers, etc. A user, acting as the creator, may utilize a computer <highlight><bold>103</bold></highlight> to generate an invitation with a scheduling system <highlight><bold>100</bold></highlight> which, in turn, communicates to other users utilizing other computers, devices <highlight><bold>200</bold></highlight> or telephones <highlight><bold>201</bold></highlight>. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> And in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>A, the transport medium <highlight><bold>150</bold></highlight> preferably using Internet Protocols (IP). A client <highlight><bold>200</bold></highlight> can be any device that connects to the system <highlight><bold>100</bold></highlight> via the Internet or other transport methods that includes, but is not limited to, such devices as televisions, computers, hand-held electronic devices, wireless electronic devices, and in point of fact, any device that uses an electronic transport medium. Non-limiting examples of the transport medium <highlight><bold>150</bold></highlight> any backbone or link such as an ATM Link, FDDI Link, satellite link, cable, twisted pair, fiber-optic, broadcast wireless network, the Internet, Local Area Network (LAN), Wide Area Network (WAN), or any other kind of network environment such as a standard Ethernet link. In such alternative cases, the clients will communicate with the system using protocols appropriate for the network which that client is attached. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Also in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>A, the transport medium <highlight><bold>151</bold></highlight> may also be a plain old telephone system (POTS) that access the scheduling system <highlight><bold>100</bold></highlight> with a voice response unit <highlight><bold>103</bold></highlight> via a telephone <highlight><bold>201</bold></highlight>. The voice response unit <highlight><bold>103</bold></highlight> will translate voice and touch-tone commands into requests <highlight><bold>300</bold></highlight> that the scheduling server <highlight><bold>101</bold></highlight> will be able to process. It will also translate responses <highlight><bold>301</bold></highlight> from the scheduling server <highlight><bold>101</bold></highlight> to voice to be heard by users on the telephone <highlight><bold>201</bold></highlight>. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> For the purposes of this detailed description, invited participants and participants are used interchangeably. Initial invitations are sent by the invitation sender module <highlight><bold>102</bold></highlight> with several date and time options whereas final confirmation invitations are those sent after preferred dates and times are collected from required participants. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1B</cross-reference> is a functional block diagram of the software modules of the scheduling program <highlight><bold>100</bold></highlight> constructed in accordance with the exemplary embodiment of the present invention. The scheduling program <highlight><bold>100</bold></highlight> includes several major software modules: invitation creation <highlight><bold>101</bold></highlight>, invitation sender <highlight><bold>102</bold></highlight>, message propagation <highlight><bold>103</bold></highlight>, availability engine <highlight><bold>104</bold></highlight>, response collection <highlight><bold>105</bold></highlight>, data storage subsystem <highlight><bold>106</bold></highlight>, rendering engine <highlight><bold>107</bold></highlight>, user manager <highlight><bold>108</bold></highlight> and event viewer <highlight><bold>109</bold></highlight> used with a database <highlight><bold>120</bold></highlight>. Each of these modules are discussed in detail below. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The invitation creation module <highlight><bold>101</bold></highlight> is the main module to create invitations. It utilizes the rendering engine <highlight><bold>107</bold></highlight> to display a user interface to one of the aforementioned clients <highlight><bold>200</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1A</cross-reference>. A creator <highlight><bold>300</bold></highlight>, represented in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>A, but not limited to using a computer, will create the invitation. While creating the invitation using the invitation creation module <highlight><bold>101</bold></highlight>, the module may request availability information from the availability engine module <highlight><bold>104</bold></highlight> which may retrieve calendar information from all invited participants where possible. In the invitation module <highlight><bold>101</bold></highlight>, participants that have no available calendar information will be displayed as &lsquo;Unknown&rsquo; to the creator creating the event. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The invitation sender module <highlight><bold>102</bold></highlight> is module responsible for formatting and sending invitations to invited participants. The invitation sender module <highlight><bold>102</bold></highlight> utilizes the database <highlight><bold>120</bold></highlight> to determine how to send invitations to participants. The invitation sender module <highlight><bold>102</bold></highlight> will query the user manager module <highlight><bold>108</bold></highlight> to get a participant profile. When a participant profile is located, it utilizes the preferred contact information on the profile to deliver the invitation to the invited participant. If no profile for the participant can be found, the invitation sender module <highlight><bold>102</bold></highlight> may utilize e-mail to send invitations. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The message propagation module <highlight><bold>103</bold></highlight> is used to deliver a formatted invitation to the participant as decided by the invitation sender module <highlight><bold>102</bold></highlight>. It interacts directly with e-mail, messaging, voice response units, etc. to deliver invitations. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The availability engine <highlight><bold>104</bold></highlight> allows the invitation creation module <highlight><bold>101</bold></highlight> to determine free and busy times on invited participants calendars. This module will utilize the user manager module <highlight><bold>108</bold></highlight> to attempt to locate the calendar and/or availability information for invited participants. Calendar and/or availability information may be located within the scheduling system or on another system in a different application program. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The response collection module <highlight><bold>105</bold></highlight> is responsible for collecting responses from invited participants to gather the best date and time options. Each participant may interact with the response collection module <highlight><bold>105</bold></highlight> and choose from options presented in the invitation to select their preferred date and time as well as the preferred location. Additionally, invited participants may enter suggested dates and times. The response collection module <highlight><bold>105</bold></highlight> may also collect acceptance status for the final confirmation invitations. Acceptance status may include, but are not limited to, accepted, declined, tentative and undecided. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The data storage subsystem <highlight><bold>106</bold></highlight> is utilized by all other modules to interact with the database <highlight><bold>120</bold></highlight>. It will read, write and delete all database information for the scheduling system. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The rendering engine <highlight><bold>107</bold></highlight> is responsible for displaying information to users on various client systems (<cross-reference target="DRAWINGS">FIG. 1A</cross-reference> <highlight><bold>200</bold></highlight>). Information is morphed to correctly display on, or interact with, each supported client system. The rendering engine <highlight><bold>107</bold></highlight> is used by all modules with user interfaces. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The user manager module <highlight><bold>108</bold></highlight> is responsible for creating, editing and deleting all information relating to users of the scheduling system. When a creator, which may be a user, invites participants, the user manager module will dynamically create new user profiles for each invitee. Each user can define their information profile which contains, but is not limited to, name, address, email, phone, mobile phone, calendar/availability information location and preferences. Preferences include, but are not limited to, preferred contact method, how to notify when changes to events occur, etc. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The event viewer module <highlight><bold>109</bold></highlight> is responsible for displaying events to users of the system. It will read event information and acceptance status for each participant and display that information using the rendering engine <highlight><bold>107</bold></highlight>. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The database <highlight><bold>120</bold></highlight> is a means to store electronic information. This may be implemented as a relational database, file database, object database or some other format that can store, but is not limted to, event information, user information, profile information and preference information. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the invitation process flow is initiated by an event creator. Utilizing the invitation creation module (<cross-reference target="DRAWINGS">FIG. 1B</cross-reference> <highlight><bold>101</bold></highlight>), the creator creates an event with, but not limited to, title, description, duration, location options and the preferred date range to schedule the event. The creator then chooses one to many participants from a phonebook or by entering the participant information while adding them to the event. The creator may specify required and optional participants. The invitation creation module will then utilize the availability engine (<cross-reference target="DRAWINGS">FIG. 1B</cross-reference> <highlight><bold>104</bold></highlight>) to determine availability of invited participants. Based on the date range and availability of participants, the invitation creation module will present a list of dates and times to the creator. The creator may choose one to many date and time combinations that are available. The creator may also enter a different date and time option in addition to the others selected. Once the invitation is complete, the creator may send or cancel the final confirmation invitation. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> Alternatively, as soon as possible scheduling does not require the creator to enter a date range, although the creator may enter one. The invitation creation module (<cross-reference target="DRAWINGS">FIG. 1B</cross-reference> <highlight><bold>101</bold></highlight>), will query the availability engine (<cross-reference target="DRAWINGS">FIG. 1B</cross-reference> <highlight><bold>104</bold></highlight>) for the soonest available date and time to schedule the event for all participants. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Again in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, once the invitation is sent, the scheduling system begins to collect responses from invited participants via the response collection module (<cross-reference target="DRAWINGS">FIG. 1B</cross-reference> <highlight><bold>105</bold></highlight>). As responses are gathered, the response collection module will check to see if all required participants have responded. Once all required participants have responded, the response collection module will check to see if a common date and time was identified for all required participants. If not, the creator is notified so they may create another invitation with different date and time options. If a common date and time are found, the response collection module may ask the creator to confirm the send of the final confirmation invitation or it may automatically send the final confirmation invitation to all invited participants. The action is dependent on what options the creator selected when creating the invitation. Also, the creator may choose to cancel the final confirmation invitation if they are presented with the option to send. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the final confirmation invitation is sent and the event is added to the creators calendar, if available. The response collection module may collect attendance responses from invited participants. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the flowchart describes the response collection process. User data collection and signup is a process implemented in the response collection module (<cross-reference target="DRAWINGS">FIG. 1B</cross-reference> <highlight><bold>105</bold></highlight>) to establish a user profile from a participant when they are responding to an event invitations. Its collects pertinent information about the participant including, but not limited to, name, email, password, phone numbers, country, zip code, preferred contact method and location of calendar/availability information. If the participant already has established themselves in the scheduling system, it will reconfirm information and then allow the invited participant to choose the best dates and times for themselves or enter alternative dates and times. This information is stored in the database. The response collection module checks to see if all required participants have responded before generating a notification the creator. Notifications to creators of events allows the creator to choose a final date and time from original options, choose a new date and time, or cancel the invitation process. Alternatively, if the creator opted to automatically send final confirmation invitations, final invitations are sent when all required participants have responded. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 4</cross-reference>A, the flowchart describes the as soon as possible scheduling option. When scheduling as soon as possible, the invitation creation module (<cross-reference target="DRAWINGS">FIG. 1B</cross-reference> <highlight><bold>101</bold></highlight>) locates the soonest available time slot for the duration of the event on the creators calendar and participants calendars. The creator has an option to only look for times within date and time ranges. For example, business hours from 9 am to 5 pm next week. Availability information from the availability engine <highlight><bold>104</bold></highlight> will provide this information to the invitation creation module <highlight><bold>101</bold></highlight>. All participants without availability information will be considered available. Options for date and time for the event are presented to the creator, who, in turn, chooses the preferred date and time and then initiates the sending of a final confirmation invitation. A final confirmation invitation is sent rather than an initial invitation because the date and time chosen is final as selected by the creator. Therefore, no polling for best or soonest date and time needs to take place. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4B</cross-reference> is a flowchart of date range scheduling. Date range scheduling allows the invitation creation module (<cross-reference target="DRAWINGS">FIG. 1B</cross-reference> <highlight><bold>101</bold></highlight>) to select a date and time range that is desired to schedule an event. The invitation creation module will check the availability engine (<cross-reference target="DRAWINGS">FIG. 1B</cross-reference> <highlight><bold>104</bold></highlight>) for availability of participants. The main difference with this case versus the process flow in aforementioned <cross-reference target="DRAWINGS">FIG. 4A</cross-reference> is that a date range is specified to find any available time slot for all participants. All participants without availability information will be considered available with the date and time range. Options for the date and time for the event is presented to the creator, who, in turn, chooses the preferred date and time and then initiates the sending of a final confirmation invitation. If the creator selects multiple dates and times, then the polling process diagramed in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is exercised by the creator. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> It will be appreciated from the above that the present invention improves the process of scheduling events with multiple people not on the same group calendar system. More particularly, the present invention can operate with a number of calendar systems, computers and devices. The result is a universally accessible scheduling system and program. Therefore, the scope of the present invention is to be limited only by the following appended claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A computer readable medium having computer-executable instructions for establishing an event between multiple people comprising of: 
<claim-text>a means to create event invitations; </claim-text>
<claim-text>a means to enter date and time for the event invitation; </claim-text>
<claim-text>a means to enter information about the event invitation including duration and location; </claim-text>
<claim-text>a means to enter the participants for the event; </claim-text>
<claim-text>a means to specify required versus optional participants; </claim-text>
<claim-text>a means to create event invitations with one to many date and time options. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, that will poll and collect availability and location information from invited participants to: 
<claim-text>schedule the soonest available date and time for the event, or; </claim-text>
<claim-text>schedule the best available date and time for the event, or; </claim-text>
<claim-text>choose the preferred location for the event. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein a scheduling option allows for a date and time range to be specified for the event. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, has a means to gather schedule information available for all participants by means of: 
<claim-text>sending an email with an HTML hyperlink back to the server having the computer-executable instructions to collect available dates and times from the invited participant, or; </claim-text>
<claim-text>sending a message to a device that may respond back with available dates and times for the participant, or; </claim-text>
<claim-text>sending a request to the participants computer system containing calendar and/or availability information to determine the available dates and times for the invited participant, or; </claim-text>
<claim-text>retrieving the participants calendar and/or availability information from some public source accessible from a network. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, the may send final invitation confirmations when all required or optional participant responses are collected. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference> that will keep track of and show the current status of all participants acceptance of the final confirmation invitation may be represented by different states including: 
<claim-text>Accepted status indicating that the invited participant plans on attending the event; </claim-text>
<claim-text>Tentative status indicating that the invited participant is unsure about attending the event; </claim-text>
<claim-text>Declined status indicating that the invited participant is not attending the event; </claim-text>
<claim-text>Unknown status indicating that the invited participant has not responded to the invitation. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, which allows the creator of the invitations to specify multiple locations where the event may occur. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, which has a means to collect preferred location from invited participants when they reply to invitations. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, that has a means to determine the best date and time, based on one or more consensus algorithms, after collecting participant responses including the ability to determine that no date and time are available. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, that has the option to ignore optional participants when determining the date, time and location for the event. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, that will allow participants to enter other available times different from the options presented by the original invitation. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, that will notify the creator of an event when responses have been gathered. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, that will allow the creator of the event to pick a date and time based on responses from invited participants and resend a final attendance confirmation. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, that will automatically pick the event date and time and send final confirmations to all participants based on: 
<claim-text>soonest available time for all participants, or; </claim-text>
<claim-text>soonest available time for the majority of participants, or; </claim-text>
<claim-text>soonest available time for required participants, or; </claim-text>
<claim-text>soonest available time for majority of required participants, or; </claim-text>
<claim-text>best time for all participants, or; </claim-text>
<claim-text>best time for the majority of participants, or; </claim-text>
<claim-text>best time for required participants, or; </claim-text>
<claim-text>best time for the majority of required participants. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, that may notify the creator when a participant cannot attend the event. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, that may allow invited participants to invite additional participants to the event. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The computer readable medium of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, that may receive responses via: 
<claim-text>responses over a network using FTP, or; </claim-text>
<claim-text>responses over a network using HTTP, or; </claim-text>
<claim-text>responses over a network using email, or; </claim-text>
<claim-text>responses over a network using text messaging, or; </claim-text>
<claim-text>responses over a network using instant messaging, or; </claim-text>
<claim-text>responses over a network using voice commands or touch-tones.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004773A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004773A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004773A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004773A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004773A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004773A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004773A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
