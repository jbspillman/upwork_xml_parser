<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004988A1-20030102-D00000.TIF SYSTEM "US20030004988A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00001.TIF SYSTEM "US20030004988A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00002.TIF SYSTEM "US20030004988A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00003.TIF SYSTEM "US20030004988A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00004.TIF SYSTEM "US20030004988A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00005.TIF SYSTEM "US20030004988A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00006.TIF SYSTEM "US20030004988A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00007.TIF SYSTEM "US20030004988A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00008.TIF SYSTEM "US20030004988A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00009.TIF SYSTEM "US20030004988A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00010.TIF SYSTEM "US20030004988A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00011.TIF SYSTEM "US20030004988A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00012.TIF SYSTEM "US20030004988A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00013.TIF SYSTEM "US20030004988A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00014.TIF SYSTEM "US20030004988A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00015.TIF SYSTEM "US20030004988A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00016.TIF SYSTEM "US20030004988A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00017.TIF SYSTEM "US20030004988A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00018.TIF SYSTEM "US20030004988A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00019.TIF SYSTEM "US20030004988A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00020.TIF SYSTEM "US20030004988A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00021.TIF SYSTEM "US20030004988A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00022.TIF SYSTEM "US20030004988A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00023.TIF SYSTEM "US20030004988A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00024.TIF SYSTEM "US20030004988A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00025.TIF SYSTEM "US20030004988A1-20030102-D00025.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00026.TIF SYSTEM "US20030004988A1-20030102-D00026.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00027.TIF SYSTEM "US20030004988A1-20030102-D00027.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00028.TIF SYSTEM "US20030004988A1-20030102-D00028.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00029.TIF SYSTEM "US20030004988A1-20030102-D00029.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00030.TIF SYSTEM "US20030004988A1-20030102-D00030.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00031.TIF SYSTEM "US20030004988A1-20030102-D00031.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00032.TIF SYSTEM "US20030004988A1-20030102-D00032.TIF" NDATA TIF>
<!ENTITY US20030004988A1-20030102-D00033.TIF SYSTEM "US20030004988A1-20030102-D00033.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004988</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10120825</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020412</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-178528</doc-number>
</priority-application-number>
<filing-date>20010613</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-179986</doc-number>
</priority-application-number>
<filing-date>20010614</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-184664</doc-number>
</priority-application-number>
<filing-date>20010619</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-187225</doc-number>
</priority-application-number>
<filing-date>20010620</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>707</class>
<subclass>502000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Drawings data mangement system, method and program</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Ken</given-name>
<family-name>Hirasawa</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Tatsuo</given-name>
<family-name>Ohtsuki</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Akemi</given-name>
<family-name>Hoshi</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Yuuichi</given-name>
<family-name>Ogasawara</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>ARENT FOX KINTNER PLOTKIN &amp; KAHN</name-1>
<name-2></name-2>
<address>
<address-1>1050 CONNECTICUT AVENUE, N.W.</address-1>
<address-2>SUITE 400</address-2>
<city>WASHINGTON</city>
<state>DC</state>
<postalcode>20036</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A drawing data management system comprises a drawing database storing drawings and a drawing data management server connected to the drawing database and retrieving from the drawing database the drawing requested by a user. According to one aspect of the invention, the drawing data management server is configured to extract the producer code corresponding to the input part number from an external database storing a table for correspondence between part numbers and producer codes related to the part numbers. The drawing data management server is further configured to obtain conditions for delivering drawings, corresponding to the input part number, from a condition table organized by producer, storing conditions for delivering drawings, set for respective producer codes. Accordingly, the system is able to output the drawing corresponding to the input part number, according to the obtained conditions for delivering drawings. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to a computer system for managing electronic data representing drawings. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates particularly to a drawing data management system in which limitations on delivery of drawings are set depending on the drawings. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The present invention also relates particularly to a drawing data management system, which is arranged to detect repeated drawings among drawings to be printed and to prevent the repeated drawings from being printed a plurality of times. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The present invention also relates particularly to a drawing data management system, which functions to guarantee quality of a printed drawing and to trace a person in charge of the printed drawing. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The present invention also relates particularly to a drawing data management system, which retrieves any drawing file from a drawing database storing a plurality of drawing files. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> A variety of product information generated in producing and developing products, includes information on part drawings. Producers typically manage all the part drawings used in their products from the past to the present time, for the purpose of quality control and an improvement of efficiency of respective operations. Accordingly, big businesses with long histories must manage an enormous number of drawings. For example, in automobile producers, a great number of parts are used in a type of automobile and therefore the number of existing drawings corresponds to the number of the parts. Further, periodical model changes increase the number of drawings. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Part drawings of products are used not only in producing the parts, but also frequently in other related departments. For example, a distribution department requires part drawings for specifying package of parts and a quality department requires part drawings for part acceptance inspections and inquiries from the market. Accordingly, producers must manage part drawings in such a way that the whole company can use common drawings. Part drawings used in products from the past to the present time are subjected to the management mentioned above. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Producers typically have a special department for management of drawings in order to manage such an enormous number of drawings. Conventionally, the department for management of drawings has performed management of registered drawings, using recording media such as microfilms and paper sheets. However, recently with development of computers, registered drawings have been represented in electronic data for management. Such a computer system for managing electronic data representing drawings is called a drawing data management system. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> In the drawing data management system, drawings for respective parts are represented in electronic data and managed in a unified and a centralized way by a drawing data management server installed in the department for management of drawings. The department for management of drawings receives part drawings for respective parts when mass production starts and the specifications of respective parts are fixed. The department assigns part numbers uniquely identifying kinds of parts, to the part drawings and registers them as drawing files in a drawing database. When an in-house user having an access to the drawing database, wishes to see a drawing, he or she specifies a desired part number at a terminal interconnected with the drawing data management server to see the drawing corresponding to the part number. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Drawings managed by the drawing data management system can be divided into two types from a standpoint of creators. The first type of drawings are those created within the company and treated basically without limitations. The second type of drawings are those created outside the company (that is, those created by a producer in trading partners) and sometimes subjected to various limitations. In this text of specification, drawings created outside the company are called producer drawings. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> Producer drawings are treated in different ways according to contents of agreements with the trading partner producers. For example, a trading partner producer imposes no limitation to treatment of drawings from the producer, while another trading partner producer imposes limitation that drawings from the producer should not be delivered to any third party. Further, there exit various conditions for each trading partner producer as below. In some cases, there is no limitation to treatment of assembly drawings, while there are limitations to treatment of part drawings. In other cases, there are limitations in certain geographical areas. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> These limitations to delivery of drawings are determined based on agreement with each trading partner producer and vary depending on each agreement. Conventionally, when delivering any drawing, users themselves were required to determine whether or not the drawing is a producer&apos;s one and, if affirmative, to check the contents of the agreement with the producer. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> If the drawing data management system is able to manage, in a unified way, conditions of each trading partner producer for delivering individual drawings, checking contents of agreement on the individual drawings can be automated. This allows saving users&apos; time and trouble. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> For such an automatization, a method has been devised, in which individual conditions for delivering drawings are stored in association with individual drawing files. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> However, this method has a problem caused by the number of drawings stored in the drawing database. That is, the number of the drawing files stored in the drawing database is several millions. Linking each of an enormous number of files to conditions for delivering requires an enormous amount of work. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Even if each of an enormous number of files is linked to conditions for delivering, there arises another problem of maintenance of the conditions for delivering. That is, the conditions for delivering to be linked to individual files do not remain unchanged. These conditions for delivering may change due to re-agreement with trading partner producers. Further, trading partner producers may be changed or new trading partner producers will be added. Any change in these conditions for delivering, requires changing the conditions for delivering linked to individual drawings. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Further, in this method, whether or not contents of agreements with individual trading partner producers are reliably complied with, depends on individual conditions for delivering, linked to individual drawings. In other words, individual conditions for delivering must be linked to several millions of drawing files without any input error, in order to ensure compliance with the contents of agreements. However, finding an input error in millions of drawing files is difficult. Accordingly, a system managing conditions for delivering drawings according to the above method, fails to have a high degree of reliability for compliance with the contents of agreements. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Accordingly, a drawing data management system is required, which is easy to maintain and allows users to comply with conditions for delivering individual drawings with a high degree of reliability. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> Further, in such a drawing data management system, for one drawing one file is created and stored in a drawing database. However, one drawing file does not necessarily correspond to one part number. In some cases, one drawing file corresponds to a plurality of part numbers. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> In more detail, part numbers are basically assigned to all the parts used in a product. However, among the parts there exist parts having the same shape and those having laterally symmetrical shapes. For example, in automobiles, some parts used on the right side are of the same shapes with those used on the left side. In this case, different part numbers are assigned to the parts used on the right side and those used on the left side. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> In the drawing data management system, it is not preferable that a plurality of drawing files are create and stored for one and the same drawing (that is, the same image), because of wasted memory capacity. Accordingly, for a plurality of parts having the same shape or laterally symmetrical shapes, there exists one drawing file and plurality of part numbers are made to correspond to the one drawing file. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> One of the processes of the drawing data management system, is &ldquo;reserved delivery of drawings&rdquo;. The reserved delivery of drawings is a process in which a printer connected to a drawing data management server delivers a plurality of drawings at a time, for which a user has entered reservations of the delivery into the drawing data management server. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> For example, the reserved delivery of drawings is used when a user must submit a great number of part drawings by one operation to a trading partner producer. The user prepares a list in which a plurality of part numbers corresponding to the drawings to be submitted and submits the list to the drawing data management department. The drawing data management department has the drawings printed at a time by a printer, based on the part number list. The printed drawings are delivered to the department having made the request or the destination of the drawings. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> In conventional drawing data management systems, when such a plurality of drawings are printed at a time, a plurality of part numbers are input together and the plurality of part numbers are used as keys to print all the corresponding drawings. In this process, even if the input part numbers is made to correspond to a single drawing file, the drawing data management system prints a number of drawings, corresponding to the number of the input part numbers. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> For example, assume that a single drawing file is made to correspond to 15 part numbers. When the 15 part numbers are listed on a part number list, 15 identical drawings are printed. The reason is that the 15 part numbers alone do not show that all the drawing corresponding to the 15 part numbers are identical. This means that 14 unnecessary drawings are printed. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Accordingly, in operations to print a plurality of drawings at a time, such as the reserved delivery of drawings, a drawing data management system automatically detecting identical drawings, based on input drawing numbers, is sought after. Further, a drawing data management system arranged to avoid printing the detected identical drawings a plurality of times, is sought after. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> In producers a department typically affixes delivery stamps on its printed drawings to guarantee quality of the drawings and define responsibility for data security when they are submitted to the outside of the department. The delivery stamps include information on date and time of delivery, name of company, name of delivering department and the like. Each department is responsible for printed drawings with its delivery stamps affixed. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> However, in conventional drawing data management systems, it cannot be checked whether delivery stamps have been affixed on printed drawings without fail. Accordingly, a delivery stamp replacement function (a function for guaranteeing quality of printed drawings and allowing trace of a person responsible for the drawing) is sought after, in the drawing data management system. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Thus, a drawing data management system with a function of managing delivery information of drawings in place of delivery stamps, is required. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Typically, an identifying code assigned to a drawing is defined in such a way that people can estimate to some extent a type of the part drawing corresponding to the identifying code when they see it. <cross-reference target="DRAWINGS">FIG. 25</cross-reference> shows an example of an identifying code. The identifying code consists of 15-digit characters (including numbers) divided into four groups according to part attributes (such as types of parts and models for which parts are used). Upper 5 digits of the 15-digit identifying code represent a main number, while the succeeding 4 digits represent a category number. These main number and category number represent an identifying code of a parent drawing. 4 digits succeeding the main number and category number represent a type number, which represents an identifying code of a child drawing of the parent drawing. 2 digits succeeding the type number represent a supplementary number which are defined when necessary. To each digit, one of 36 characters comprising numbers 0 to 9 and characters of the alphabet A to Z is assigned, according to attributes of the part. Since a unique identifying code is assigned to each part drawing without overlaps, an identifying code uniquely defines a corresponding As mentioned above, a character is assigned to each digit of an identifying code according to attributes of parts. Accordingly, persons familiar with the way of assignment can estimate a type of drawing to some extent, from the identifying code. However, since the number of identifying codes itself is enormous, it is impossible to fully grasp all the identifying codes. Further, the fact that identifying codes are not assigned to part drawings in sequential order makes grasp of identifying codes more difficult. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> For example, when an identifying code is assigned to a new part drawing, unassigned main number, category number, type number and supplemental number are respectively assigned. Accordingly, when ordered in descending numerical order, identifying codes registered in the drawing database are not in consecutive order. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> In a concrete example, if an identifying code &ldquo;17509-S04&rdquo; is registered in the database, an identifying code &ldquo;17508-S04&rdquo; or an identifying code &ldquo;17509-S03&rdquo; preceding &ldquo;17509-S04&rdquo; by one is not necessarily registered, because identifying codes are not assigned as serial numbers. Thus, a great number of identifying codes assigned not in consecutive order, makes users&apos; retrieval of drawings difficult. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> For example, when a user does not know the exact identifying code (that is, the identifying code registered in the database) of the user&apos;s wished drawing, he or she will estimate the identifying code based on attributes of the wished drawing. Assume the case that the exact identifying code should be found based on an ambiguous identifying code (that is, an identifying code not sure whether or not it is registered in the database) estimated by the user. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The user will ask the drawing data management server about the ambiguous identifying code and by the response will determine whether the identifying code is present in the database. When the ambiguous identifying code is not present in the database, the drawing data management server returns an error signal. Thus, the user recognizes by the response that the input identifying code is not present. In this case, the user will ask the drawing data management server about a different identifying code (probably similar to that input previously) to see a response. After such trial and error, the user might obtain the exact identifying code. However, the user&apos;s trial and error requires enormous efforts. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Accordingly, retrieval means suitable for a great number of identifying codes assigned not in consecutive order, are sought after. A drawing data management system allowing the user to properly retrieve the identifying code registered in the database even when the user does not know the exact identifying code and he or she knows an ambiguous identifying code alone. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Thus, new retrieval means of identifying codes in a drawing data management system for managing drawing files, using identifying codes, are required. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> In order to solve the problem mentioned above, the drawing data management system according to one aspect of the present invention, is arranged as below. The drawing data management system comprises a drawing database storing drawings related to part numbers and a drawing data management server connected to the drawing database and retrieving from the drawing database the drawing corresponding to a user-input part number. The drawing data management server is configured to extract the producer code corresponding to the input part number from an external database storing a table for correspondence between part numbers and producer codes related to the part numbers. The drawing data management server is further configured to obtain conditions for delivering drawings, corresponding to the input part number, from a condition table organized by producer, storing conditions for delivering drawings, set for respective producer codes. Accordingly, the drawing corresponding to the input part number is output according to the obtained conditions for delivering drawings. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> According to the one aspect of the present invention, since correspondence between part numbers and producer codes related to the part numbers is managed in the external database, the drawing data management system is able to obtain the latest information on producer codes from the external database. The drawing data management system is able to obtain conditions for delivering drawings corresponding to the part number by referring to conditions for delivering drawings corresponding to the obtained producer code, so that drawings are output according to the conditions for delivering drawings. Thus, users&apos; time and trouble of checking contents of agreements with trading partner producers may be saved. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The drawing data management system according to the aspect of the present invention obtains latest producer codes from a database placed outside the system. Accordingly, the system is easy to maintain and highly reliable. Further, conditions for delivering drawings are sent to user terminals based on the obtained producer codes, so that the user terminals are able to physically limit printing to have users follow agreements with the users. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> According to one embodiment of the aspect of the present invention, the drawing data management system further comprises a printer for printing drawings. The conditions for delivering drawings determine whether drawings should be printed or not and if the conditions for delivering drawings, corresponding to the part number do not permit printing, the printer is prohibited from printing the drawing corresponding to the part number. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> According to this embodiment, printing of drawings for which delivery is limited according to agreements with trading partner producers, can be physically prohibited. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> According to another embodiment of the aspect of the present invention, the drawing data management system further comprises a display for displaying drawings to a user. When the drawing corresponding to the part number is displayed on the display, a massage is displayed according to the conditions for delivering drawings, corresponding to the part number. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> This embodiment allows the user to check, on the display, limitation on delivering drawings according to agreements with trading partner producers. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> According to another embodiment of the aspect of the present invention, the condition table organized by producer, stores conditions for delivering drawings, for respective areas and for respective producer codes. The drawing data management server obtains from the condition table organized by producer, the conditions for delivering drawings, for respective areas and for the corresponding producer code, so that the drawing corresponding to the input part number is delivered according to the conditions for delivering drawings, for respective areas. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> According to this embodiment, the conditions for delivering drawings, for respective areas, corresponding to the producer code obtained from the part number, can be obtained. Thus, drawings can be output according to the conditions for delivering drawings, for respective areas, defined by agreements with trading partner producers. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> According to another embodiment of the aspect of the present invention, the drawing data management server obtains the conditions for delivering drawings, corresponding to the input part number, from a condition table organized by part number storing conditions for delivering drawings for each part number. Thus, the drawing corresponding to the input part number is delivered according to the conditions for delivering drawings, corresponding to the obtained part number. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> According to this embodiment, the drawing data management system is able to obtain the conditions for delivering drawings set for respective part numbers, so that the drawings may be output according to the conditions. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> In order to solve the problem mentioned above, the drawing data management system according to another aspect of the present invention, is arranged as below. The drawing data management system comprises a drawing database storing drawing files related to part numbers, a drawing data management server and a printer. The drawing data management server is connected to the drawing database and retrieves from the drawing database the drawing files corresponding to user-input part numbers. The printer prints drawings of the retrieved drawing files. The drawing data management server is configured to retrieve the drawing files corresponding to the input part numbers and to detect repeated drawing files from the retrieved drawing files. Thus, in response to the detection of the repeated drawing files, the printer is adapted not to repeatedly print drawings contained in the repeated drawing files. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> According to the aspect of the present invention, a repetition of drawing files, corresponding to a part number list including a plurality of part numbers can be automatically detected. Accordingly, the drawings for which repetition is found are not printed repeatedly to prevent unnecessary drawings from being printed. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> According to the aspect of the invention, in the process of printing a plurality of drawings at a time, repeated drawings are automatically detected through input part numbers. Further, repeated drawings thus detected are printed only once and therefore the plurality of drawings are delivered with efficiency. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> According to one embodiment of the aspect of the present invention, the printer prints a specification of delivery of drawings, indicating whether or not drawings corresponding to the part numbers have been successfully delivered. Further, the detected repetitions are indicated in the specification of delivery of drawings in such a way that the repetitions correspond to part numbers. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> According to this embodiment, the repetitions are indicated in the specification of delivery of drawings in such a way that the repetitions correspond to part numbers. Accordingly, the user can check whether or not the requested drawings have been successfully delivered by checking the specification of delivery of drawings. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> In order to solve the problem mentioned above, the drawing data management system according to another aspect of the present invention, is arranged as below. The drawing data management system comprises a drawing database, an authentication database, a drawing data management server and a printer for printing drawings. The drawing database stores drawings related to part numbers. The authentication database stores user attribute information including user&apos;s name and a department to which the user belongs, in association with user ID. The drawing data management server is connected to the drawing database and the authentication database and retrieves from the drawing database the drawing corresponding to a user-input part number. The drawing data management server authenticates the user using the user ID to permit the user to access the drawing database. In response to a drawing file request by the user having logged in, the drawing data management server retrieves the drawing file requested by the user, from the drawing database. Further, the printer prints the drawings contained in the retrieved drawing file, with the user attribute information stored in the authentication database. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> According to the aspect of the present invention, the drawing contained in the retrieved drawing file, is printed with the user attribute information, including a user name and a department to which the user belongs, stored in the authentication database. Thus, it is clarified who is responsible for printed drawings. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> The drawing data management system according to the aspect of the present invention, records output history of drawing files accessed by users, so that when and by whom the drawings are delivered, can be tracked. Further, attribute information of users having performed printing is recorded on printed drawings, so that who is responsible for the delivered drawings can be tracked, by checking the output history recorded on the log database against the attribute information of the printed drawings. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> According to one embodiment of the aspect of the invention, the system further comprises a log database. Further, in response to the printing of the drawing, the drawing data management server generates printing history including time of the printing of drawings, in association with the user, and stores it in the log database. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> According to this embodiment, the user can keep track of drawings previously printed through the printing history stored in the log database and it is clarified who is responsible for printed drawings. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> According to another embodiment of the aspect of the invention, the system further comprises a log database and a display for displaying the drawings contained in the retrieved drawing file. In response to the displaying of the drawings, the drawing data management server generates printing history including time of the displaying of drawings in association with the user, and stores it in the log database. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> According to this embodiment, the user can keep track of drawings previously displayed through the displaying history stored in the log database. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> According to another embodiment of the aspect of the invention, the system further comprises a log database and the data management server generates history of retrieval of the retrieved drawing file, in association with the user and stores it in the log database. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> According to this embodiment, the user can keep track of drawing files previously accessed through the history of retrieval stored in the log database. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> In order to solve the problem mentioned above, the drawing data management system according to another aspect of the present invention, is arranged as below. The drawing data management system comprises a drawing database storing drawing files and a drawing data management server connected to the drawing database. In response to input of an identifying code uniquely identifying drawing files, the drawing data management server retrieves from the drawing database the drawing file corresponding to the input identifying code. The drawing data management server defines magnitude of identifying codes assigned to the drawing files stored in the drawing database. Then, the drawing data management server has the identifying codes to be stored in an identifying code table. Further, according to a user-input retrieving code, the drawing data management server retrieves from the identifying code table the identifying code smaller than and closest to the retrieving code, based on the magnitude. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> According to the aspect of the present invention, the identifying code smaller than and closest to the retrieving code, is retrieved based on the magnitude of the identifying codes. Accordingly, even identifying codes widely varying from characters contained in the retrieving code, can be presented to the user. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> According to the aspect of the invention, identifying codes registered based on magnitude previously determined, are presented to the user in response to an input retrieving code. Thus, even when the user does not know the exact identifying code, but an ambiguous identifying code, appropriate identifying codes close to the ambiguous identifying code are presented. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> According to one embodiment of the aspect of the present invention, the drawing data management server retrieves a plurality of identifying codes in descending order of magnitude and the number of the retrieved identifying codes is defined by a number specified by the user. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> According to this embodiment, the user can specify the number of identifying codes to be retrieved and the retrieved identifying codes are selected in descending order from identifying codes having magnitudes close to the retrieving code. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> According to another embodiment of the aspect of the present invention, the identifying code includes main number, category number and type number, the main number and the category number representing the parent drawing. The drawing data management server retrieves identifying codes using the main number and the category number. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> According to this embodiment, the registered identifying codes are searched based on the main number and the category number and therefore the identifying code representing the parent drawing can be retrieved. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> According to another embodiment of the aspect of the present invention, the identifying codes comprise a combination of 36-kind characters, 0 to 9 and A to Z, and magnitudes of the identifying codes are defined by magnitudes of corresponding characters of hexadecimal notation in EBICDIC code. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> According to this embodiment, identifying codes comprise numbers 0 to 9 and characters of the alphabet A to Z and magnitudes of the identifying codes are defined by magnitudes of these characters represented in hexadecimal notation of EBCDIC code.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a general view of an implementation of the drawing data management system according to the present invention; </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a flowchart of the procedure of having a part drawing displayed at the user terminal; </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a functional block diagram of the drawing data management server and the user terminal, according to one aspect of the present invention; </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flowchart of the operation of the security level obtaining section; </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is an example of a construction of a part number; </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flowchart of the procedure of determining producer drawings; </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is an example of a condition table organized by producer; </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is an example of a condition table organized by part number; </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a functional block diagram of the drawing data management server and the user terminal, according to another aspect of the present invention; </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is an implementation of a part number input screen; </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is an implementation of a reservation confirmation screen; </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is an example of the specification of reserved delivery of drawings; </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a flowchart of the whole process of reserved delivery of drawings; </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a flowchart of the process of generating a drawing file list; </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is the process of detecting repetition of drawing file names; </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is an example of the drawing file list; </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a flowchart of the process of printing drawings; </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a block diagram showing in detail the drawing data management server and the user terminal, according to another aspect of the present invention; </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a log-in screen of the drawing data management system; </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is an implementation of a part number input screen; </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> is an implementation of a retrieval result screen; </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is an example of a drawing printed by the drawing data management system according to the present invention; </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> is an example of a drawing printed on split sheets; </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> is an example of output history generated by the output history generating section; </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is an example of an identifying code; </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> is a functional block diagram of the drawing data management server and the user terminal, provided with ambiguous retrieval function according to another aspect of the present invention; </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 27</cross-reference> is a table of hexadecimal codes corresponding to numbers and characters of the alphabet; </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28</cross-reference> is an example in which main numbers are converted into hexadecimal notation of EBICIDIC code; </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29</cross-reference> is a list of identifying codes arranged in descending order; </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is an implementation of a menu screen for selecting a retrieving method; </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 31</cross-reference> is an implementation of an ambiguous retrieval screen; </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 32</cross-reference> shows a part of the identifying code table as an example; and </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33</cross-reference> is an example of a flowchart of the ambiguous retrieval process.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> Implementations of the present invention are described below with reference to drawings. <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows an outline of implementation of a drawing data management system of the present invention. In <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> drawing data management room <highlight><bold>11</bold></highlight> in a company is shown. In this example, specifically, the drawing data management room <highlight><bold>11</bold></highlight> is a room located in the company. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> In the drawing data management room <highlight><bold>11</bold></highlight>, a drawing data management server <highlight><bold>15</bold></highlight> connected to a drawing database <highlight><bold>17</bold></highlight> is installed. The drawing database <highlight><bold>17</bold></highlight> stores drawings officially registered in the company (that is, approved drawings to which official numbers are assigned) as electronic drawing files. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> For example, drawing files are image files such as TIFF files, BMP files or JPEG files and created by electronically capturing actual drawings on paper sheets using a scanner or the like. In another embodiment, a format for drawing files is not that of an image file and may be a file format based on coordinate data, used in a CAD system or the like. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> A person in charge of the management in a drawing data management department, performs maintenance of the drawing data management server <highlight><bold>15</bold></highlight> and the drawing database <highlight><bold>17</bold></highlight> via a management terminal <highlight><bold>13</bold></highlight>. For example, when registering a new drawing in the drawing database <highlight><bold>17</bold></highlight>, the person in charge of the management assigns a part number identifying the drawing uniquely and converts the drawing into an image file to be stored in the drawing database <highlight><bold>17</bold></highlight>. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> When the person in charge of the management wishes to see any part drawing, he or she is able to get access to the drawing data management server <highlight><bold>15</bold></highlight> via the management terminal <highlight><bold>13</bold></highlight> and to search the drawing database <highlight><bold>17</bold></highlight> using a part number as key to have the drawing corresponding to the part number displayed on a monitor of the management terminal <highlight><bold>13</bold></highlight>. Further, the drawing data management server <highlight><bold>15</bold></highlight> is connected to a printer or plotter <highlight><bold>19</bold></highlight> for printing the drawing displayed on the screen. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> The drawing data management server <highlight><bold>15</bold></highlight> installed in the drawing data management room <highlight><bold>11</bold></highlight> is connected respectively to a plurality of user terminals installed at other locations via any network. Since drawing files stored in the drawing database <highlight><bold>17</bold></highlight> must be protected against an illegal access, private networks for the company are used for the networks connecting user terminals <highlight><bold>27</bold></highlight> and the drawing data management server <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows that user terminals <highlight><bold>27</bold></highlight> connected to the drawing data management server <highlight><bold>15</bold></highlight> are divided into groups, based on locations where they are installed. For example, the figure shows user terminals <highlight><bold>27</bold></highlight> installed at the same site <highlight><bold>21</bold></highlight>, user terminals <highlight><bold>27</bold></highlight> installed at a remote domestic site <highlight><bold>23</bold></highlight> and user terminals <highlight><bold>27</bold></highlight> installed at a foreign site <highlight><bold>25</bold></highlight>, as groups. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> User terminals <highlight><bold>27</bold></highlight> installed at the same site <highlight><bold>21</bold></highlight> mean those installed in a different room from the drawing data management room <highlight><bold>11</bold></highlight> in the same building or in the same place of business. User terminals <highlight><bold>27</bold></highlight> installed at a remote domestic site <highlight><bold>23</bold></highlight> mean those installed at a place of a related company or a different place of business of the company from the place of the business in which the drawing data management room <highlight><bold>11</bold></highlight> is present. User terminals <highlight><bold>27</bold></highlight> installed at a foreign site <highlight><bold>25</bold></highlight> mean those installed at a place of a related company or a place of business of the company in a different country from the country in which the drawing data management room <highlight><bold>11</bold></highlight> is present. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> User terminals <highlight><bold>27</bold></highlight> installed at various places are connected to the drawing data management server <highlight><bold>15</bold></highlight> via a network. The above-mentioned drawing database <highlight><bold>17</bold></highlight> itself is present in the drawing data management room <highlight><bold>11</bold></highlight>. The registered drawings of the company are managed in a unified way through the drawing database <highlight><bold>17</bold></highlight>. Accordingly, in-house users at respective palaces get access to the drawing database <highlight><bold>17</bold></highlight> via user terminals <highlight><bold>27</bold></highlight> to have a drawing file in the drawing database <highlight><bold>17</bold></highlight>, output. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> Typically, all the employees are not authorized to see or print registered drawings. In other words, typically, the employees in departments requiring drawings, alone are authorized to see registered drawings, while specific employees in the departments, alone are authorized to print registered drawings. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> For this reason, access from user terminals to the drawing data management server <highlight><bold>15</bold></highlight> is subjected to authentication. After connection with the drawing data management server <highlight><bold>15</bold></highlight> is established through the authentication, users perform operations such as retrieval, display and printing of drawings. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> In order to process such series of operations, application software dedicated for process of outputting drawings is installed in user terminals <highlight><bold>27</bold></highlight>. In this text of specification, the application software installed in user terminals <highlight><bold>27</bold></highlight> is called &ldquo;user terminal software&rdquo;. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> Besides &ldquo;user terminal software&rdquo;, software installed in the drawing data management server <highlight><bold>15</bold></highlight> is called &ldquo;drawing data management software&rdquo;. The drawing data management software includes functions of retrieval, display and printing of drawings as well as functions of maintaining the whole drawing data management system, such as a process of authenticating each user and a process of managing the drawing database. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> The user terminal software installed in user terminals <highlight><bold>27</bold></highlight> and the drawing data management software installed in the drawing data management server <highlight><bold>15</bold></highlight> function in cooperation with each other to present various functions via the network. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> A procedure that in-house users have drawings displayed on user terminals <highlight><bold>27</bold></highlight> is below described with reference to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. Further, security check function of the drawing data management system according to the present invention is described. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows a flowchart of a standard procedure by which in-house users have part drawings displayed on user terminals <highlight><bold>27</bold></highlight>. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> When a user wishes to see part drawings stored in the drawing database, the user first starts the user terminal application software installed in the user terminal <highlight><bold>27</bold></highlight> (step <highlight><bold>101</bold></highlight>). </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> When the user terminal application is started, an input screen for authentication is displayed on a user terminal <highlight><bold>27</bold></highlight> (step <highlight><bold>103</bold></highlight>). As mentioned above, users having access to the drawing data management server <highlight><bold>15</bold></highlight> are those specifically authorized by the company. Accordingly, such authorized users are previously registered. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> The registered users are given user IDs and passwords for uniquely identifying them. These user IDs and passwords are stored in an authentication database (not shown) in the drawing data management server <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> Accordingly, a user inputs the user ID and password assigned to him or her, into a user terminal <highlight><bold>27</bold></highlight> to send them to the drawing data management server <highlight><bold>15</bold></highlight> (step <highlight><bold>105</bold></highlight>). </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> The drawing data management server <highlight><bold>15</bold></highlight> verifies the sent user ID and password against data in the authentication database to perform authentication of the user accessing from the user terminal <highlight><bold>27</bold></highlight>. As a result, if the authentication confirms that the user is authorized, the drawing data management server <highlight><bold>15</bold></highlight> establishes connection with the user terminal <highlight><bold>27</bold></highlight> from which the user ID has been sent and keeps the connection until the user logs out (step <highlight><bold>107</bold></highlight>). </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> When connection between the user terminal <highlight><bold>27</bold></highlight> and the drawing data management server <highlight><bold>15</bold></highlight> is established, an input screen for part numbers is displayed at the user terminal <highlight><bold>27</bold></highlight> in step <highlight><bold>109</bold></highlight>. Then, the user inputs the part number of the drawing that he or her wishes, into the input format on the screen to send the input information to the drawing data management server <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> When the drawing data management server <highlight><bold>15</bold></highlight> receives the part number from the user terminal <highlight><bold>27</bold></highlight>, it retrieves the drawing file corresponding to the part number and obtains security level for the drawing corresponding to the part number. Security level is a parameter defining conditions for delivering drawings. The security level determines whether drawings should be printed or not. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> The security level in this implementation is described in detail with reference to Table 1. In this implementation, four security levels are provided. Security level <highlight><bold>00</bold></highlight> indicates in-house drawings (drawings created inside the company). In-house drawings are to be treated without limitations. Security level <highlight><bold>01</bold></highlight> indicates producer drawings to be printed without limitations, for which warning of careful handling is displayed at the user terminal <highlight><bold>27</bold></highlight>. Security level <highlight><bold>02</bold></highlight> indicates producer drawings not permitted to be printed. Security level <highlight><bold>03</bold></highlight> indicates substituted drawings which can be printed. Substituted drawings mean those originally drawn by a trading partner producer and re-drawn by the company according to agreement with the trading partner producer. (in other words, substituted drawings are those re-drawn by the company based on producer drawings.) These substituted drawings can be treated in a similar way as in-house drawings.  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="70PT" align="center"/>
<colspec colname="2" colwidth="147PT" align="left"/>
<thead>
<row>
<entry namest="1" nameend="2" align="center">TABLE 1</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
<row>
<entry>SECURITY LEVEL</entry>
<entry>CONTENTS OF LIMITATION</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>00</entry>
<entry>IN-HOUSE DRAWING;</entry>
</row>
<row>
<entry></entry>
<entry>NO LIMITATION</entry>
</row>
<row>
<entry>01</entry>
<entry>PRODUCER DRAWING; ALARM ALONE,</entry>
</row>
<row>
<entry></entry>
<entry>PERMITTED TO PRINT</entry>
</row>
<row>
<entry>02</entry>
<entry>PRODUCER DRAWING;</entry>
</row>
<row>
<entry></entry>
<entry>NOT PERMITTED TO PRINT</entry>
</row>
<row>
<entry>03</entry>
<entry>SUBSTITUTED DRAWING;</entry>
</row>
<row>
<entry></entry>
<entry>PERMITTED TO PRINT</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> In the drawing data management system, security level is obtained for each of individual part number and it is determined based on the security level whether the drawing should be printed or not. As a result, compliance with agreements with trading partner producers is insured. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> Although in this implementation only 4 levels are shown on Table 1, the number of security levels may be increased if necessary. Further, conditions for delivering drawings can be set in any way for each of these security levels. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> When a security level is obtained for the part number in step <highlight><bold>113</bold></highlight>, the drawing file corresponding to the part number is retrieved from the drawing database in step <highlight><bold>115</bold></highlight>. The retrieved drawing file with the security level previously obtained is sent to the user terminal <highlight><bold>27</bold></highlight>. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> Whether the drawing displayed at the user terminal <highlight><bold>27</bold></highlight> can be printed or not, depends on the security level sent with the drawing to the terminal from the drawing data management server <highlight><bold>15</bold></highlight>. The user terminal application installed in the user terminal <highlight><bold>27</bold></highlight> determines whether the terminal is permitted to print the drawing or not, based on the security level sent to the terminal. If the terminal is not permitted to print the drawing, the user terminal application displays such indication on the monitor and does not perform printing. As a result, the user can reliably comply with agreements on delivery of drawings with trading partner producers, without the need fort checking contents of the agreements on individual parts. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a schematic diagram showing the drawing data management server <highlight><bold>15</bold></highlight> and the user terminal <highlight><bold>27</bold></highlight> with functional blocks in more detail. Although <cross-reference target="DRAWINGS">FIG. 3</cross-reference> does not illustrate functional blocks of log-in process performed by the user terminal <highlight><bold>27</bold></highlight> and drawing data management server <highlight><bold>15</bold></highlight>, it should be understood that these functions are also included. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> The user terminal <highlight><bold>27</bold></highlight> includes a drawing request sending section <highlight><bold>55</bold></highlight> for sending a part number input by the user to the drawing data management server <highlight><bold>15</bold></highlight>. The part number sent by the drawing request sending section <highlight><bold>55</bold></highlight> is received by a drawing request receiving section <highlight><bold>31</bold></highlight> of the drawing data management server <highlight><bold>15</bold></highlight>. The part number received by the drawing request receiving section <highlight><bold>31</bold></highlight> is sent to a security level obtaining section <highlight><bold>33</bold></highlight> where security level corresponding to the part number is obtained. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> Security level for each part drawing is obtained from broad categories of parameters; &ldquo;substituted drawing&rdquo;, &ldquo;producer&rdquo; and &ldquo;part number&rdquo;. Accordingly, the security level obtaining section <highlight><bold>33</bold></highlight> includes a substitution processing section <highlight><bold>37</bold></highlight>, a producer processing section <highlight><bold>41</bold></highlight> and a part number processing section <highlight><bold>47</bold></highlight> for determining these parameters according to the input part number. Further, the security level obtaining section <highlight><bold>33</bold></highlight> includes a substitution table <highlight><bold>35</bold></highlight>, a condition table organized by producer <highlight><bold>39</bold></highlight> and a condition table organized by part number <highlight><bold>45</bold></highlight>. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> In more detail, the substitution processing section <highlight><bold>37</bold></highlight> determines whether or not drawings corresponding to the input part number are substituted drawings. The substitution table <highlight><bold>35</bold></highlight> stores the part numbers linked to substituted drawings in a table format. Accordingly, the substitution processing section <highlight><bold>37</bold></highlight> determines whether or not a part number matching the input one is present on the substitution table <highlight><bold>35</bold></highlight>. Presence of a part number matching the input one indicates presence of a substituted drawing corresponding to the part number. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> When the substitution processing section <highlight><bold>37</bold></highlight> determines that a substituted drawing corresponding to the part number is present, a drawing number of the substituted drawing is sent to a drawing file retrieval section <highlight><bold>51</bold></highlight>, instead of the part number. Accordingly, the substitution table <highlight><bold>35</bold></highlight> also stores drawing numbers of substituted drawings corresponding to respective part numbers in a table format. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> A producer processing section <highlight><bold>41</bold></highlight> determines whether the drawing corresponding to the input number is a producer drawing or an in-house drawing. As a result, if the drawing is a producer drawing, the producer processing section <highlight><bold>41</bold></highlight> obtains information on the producer corresponding to the part number to obtain conditions for delivering drawings, corresponding to the information on the producer. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> A part number does not include information on a name of a producer which has supplied the part. Accordingly, in case that a name of a producer corresponding to the part number is required, a database in which parts numbers and names of producers are related, must be consulted. The drawing data management system according to the present invention consults a database outside the drawing data management system, in order to identify a trading partner producer corresponding to the part number. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> More specifically, as shown in <cross-reference target="DRAWINGS">FIG. 3, a</cross-reference> database <highlight><bold>29</bold></highlight> managed by the part acquisition department in the company is used as the external database. As mentioned above, conditions for delivering part drawings vary according to agreements with trading partner producers and are subjected to aperiodic changes due to re-agreement, change and addition of trading partner producers and the like. The database <highlight><bold>29</bold></highlight> of the part acquisition department is arranged to manage correspondence between part numbers and producers and is always updated with these changes. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> Accordingly, the drawing data management server <highlight><bold>15</bold></highlight> according to the present invention can reflect the current conditions for delivering drawings by obtaining information on producers from the external database <highlight><bold>29</bold></highlight>. Further, correspondence between part numbers and trading partner producers is maintained not by the drawing data management server <highlight><bold>15</bold></highlight>, but by another server installed in the part acquisition department. As a result, load of the drawing data management department can be reduced. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> In the external database <highlight><bold>29</bold></highlight>, producer codes are assigned to individual trading partner producers and a table for correspondence between part numbers and producer codes related to the numbers, is stored. A producer code extracting section <highlight><bold>43</bold></highlight> of the security level obtaining section <highlight><bold>33</bold></highlight> obtains producer codes for respective producers corresponding to respective part numbers, from the external database <highlight><bold>29</bold></highlight>. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> Conditions for delivering drawings, corresponding to respective producer codes are stored on the condition table organized by producer <highlight><bold>39</bold></highlight> in a table format. Accordingly, conditions for delivering drawings, corresponding to the input part number, can be determined by referring to conditions for delivering drawings, corresponding to the obtained producer code. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> The part processing section <highlight><bold>47</bold></highlight> determines conditions for delivering drawings, set for each part number. For example, in some cases, delivering an assembly drawing for an assembled part is permitted, while delivering drawings for individual parts constituting the assembled part is not permitted according to an agreement with a trading partner producer. In such cases, the conditions for delivering drawings cannot be determined by the obtained producer code alone. Accordingly, the condition table organized by part number <highlight><bold>45</bold></highlight> stores conditions for delivering drawings for each part number. The part number section <highlight><bold>47</bold></highlight> compares the input part number with numbers stored in the condition table organized by part number <highlight><bold>45</bold></highlight> to obtain conditions for delivering drawings for each part number. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> Thus, the security level obtaining section <highlight><bold>33</bold></highlight> obtains the security level corresponding to the input part number and sends the obtained security level to a drawing sending section <highlight><bold>53</bold></highlight>. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> The security level obtaining section <highlight><bold>33</bold></highlight> sends the part number to the drawing file retrieval section <highlight><bold>51</bold></highlight>. If the substitution processing section <highlight><bold>37</bold></highlight> determines presence of a substituted drawing corresponding to the part number, the drawing number of the substituted drawing is sent to the drawing file retrieval section <highlight><bold>51</bold></highlight>, instead of the part number. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> The drawing file retrieval section <highlight><bold>51</bold></highlight> retrieves the corresponding drawing file from the drawing database <highlight><bold>17</bold></highlight> based on the number (the part number or the drawing number of the substituted drawing) and sends the retrieved drawing file to the drawing sending section <highlight><bold>53</bold></highlight>. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> The drawing sending section <highlight><bold>53</bold></highlight> sends the drawing file sent by the drawing file retrieval section <highlight><bold>51</bold></highlight>, with the security level obtained in the security level obtaining section <highlight><bold>33</bold></highlight>, to the user terminal <highlight><bold>27</bold></highlight> having requested the drawing. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> The user terminal <highlight><bold>27</bold></highlight> receives the drawing file and security level sent by the drawing file management server <highlight><bold>15</bold></highlight> at a drawing receiving section <highlight><bold>57</bold></highlight>. The drawing file and security level are sent to a message table and an output controlling section <highlight><bold>59</bold></highlight> for temporary storage there. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> At the user terminal <highlight><bold>27</bold></highlight>, a drawing displaying section <highlight><bold>61</bold></highlight> and a drawing printing section <highlight><bold>63</bold></highlight> substantially process an operation of outputting drawing files. The drawing displaying section <highlight><bold>61</bold></highlight> performs a process of displaying the drawing file sent to the terminal, on a monitor <highlight><bold>65</bold></highlight>, while the drawing printing section <highlight><bold>63</bold></highlight> performs a process of printing drawing through a printer <highlight><bold>67</bold></highlight>. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> The message table and output controlling section <highlight><bold>59</bold></highlight> in the user terminal <highlight><bold>27</bold></highlight> reads security levels of individual drawing files sent to the terminal and controls output of drawings at the user terminal <highlight><bold>27</bold></highlight>, based on the results of the reading. </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> For example, in this implementation, there in no limitation to displaying drawings on the monitor <highlight><bold>65</bold></highlight>. Accordingly, any user can see the drawing corresponding to a part number displayed on the monitor, if he or she wishes the drawing to be displayed on the monitor. The message table and output controlling section <highlight><bold>59</bold></highlight> display on the monitor messages corresponding to security levels for respective drawings, with the drawings displayed on the monitor. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> For example, when the security level is <highlight><bold>00</bold></highlight>, the message displayed with the drawing will be blank. When the security level is <highlight><bold>01</bold></highlight>, the message displayed with the drawing will be &ldquo;Those displayed are producer drawings. Careful handling is required. &rdquo; When the security level is <highlight><bold>02</bold></highlight>, the message displayed with the drawing will be &ldquo;Those displayed are producer drawings and not permitted to be printed.&rdquo; When the security level is <highlight><bold>03</bold></highlight>, the message displayed with the drawing will be &ldquo;Those displayed are substituted drawings. Careful handling is required.&rdquo;</paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> Thus, the message table and output controlling section <highlight><bold>59</bold></highlight> reads security levels of respective drawings and displays messages according to the security levels. As a result, the user can check on the monitor <highlight><bold>65</bold></highlight> how to handle the respective drawings. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> When the user tries to print a drawing, a drawing printing section <highlight><bold>63</bold></highlight> is controlled according to the reading of the message table and output controlling section <highlight><bold>59</bold></highlight>. For example, when the security level of a drawing is <highlight><bold>02</bold></highlight>, the message table and output controlling section <highlight><bold>59</bold></highlight> functions to prohibit a printing process of the drawing printing section <highlight><bold>63</bold></highlight>. As a result, the user cannot physically have the drawing delivered, so that the agreement with the trading partner producer is complied with. </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows a flowchart of a process of the security level obtaining section <highlight><bold>33</bold></highlight> of the drawing data management server <highlight><bold>15</bold></highlight>. With this drawing, the process of obtaining security level of the drawing data management system according to the present invention, will be described in more detail. </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> When the part number of the drawing the user requires is input into the security level obtaining section <highlight><bold>33</bold></highlight>, whether the input number is that to be replaced or not is determined in step <highlight><bold>201</bold></highlight>. When it is determined in this step that the input number is that to be replaced, the process proceeds to step <highlight><bold>203</bold></highlight>. </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> In step <highlight><bold>203</bold></highlight>, the input part number is replaced with the number of the corresponding substituted drawing. The substituted number is sent to the drawing file retrieval section <highlight><bold>51</bold></highlight> so that the substituted drawing is sent to the terminal <highlight><bold>27</bold></highlight> of the user having requested the drawings. </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> In step <highlight><bold>205</bold></highlight>, security level of the drawing is set. For a substituted drawing, the security level of the drawing is set to <highlight><bold>03</bold></highlight>. </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> When it is determined in step <highlight><bold>201</bold></highlight> that the input number is not that to be replaced, the process proceeds to step <highlight><bold>207</bold></highlight>, where whether the drawings corresponding to the part number is a producer drawings or not. </paragraph>
<paragraph id="P-0160" lvl="0"><number>&lsqb;0160&rsqb;</number> Information on whether the drawing corresponding to the part number is a producer drawing or not, is included in the part number. <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows a construction of part numbers used in this implementation. Part numbers consist of 15 digits of a combination of 4 kinds of numbers (main number, category number, type number and supplemental number). One of numbers (0 to 9) and characters of the alphabet (A to Z) is assigned to each digit. </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flowchart showing a process in step <highlight><bold>207</bold></highlight> in more detail. As shown in this flowchart, whether the drawing is a producer one or an in-house one, is determined by checking the 10th to 15th digits within the part number. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 4</cross-reference> again, when it is determined in step <highlight><bold>207</bold></highlight> that the drawing corresponding to the part number is not a producer drawing, the process proceeds to step <highlight><bold>209</bold></highlight> where it is determined that the drawing is an in-house one. For an in-house drawing, the security level of the drawing is set to <highlight><bold>00</bold></highlight>. </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> When it is determined in step <highlight><bold>207</bold></highlight> that the drawing corresponding to the part number is a producer drawing, the process proceeds to step <highlight><bold>211</bold></highlight>, where it is determined whether the site having requested the drawing (that is, the site where the user terminal <highlight><bold>27</bold></highlight> is installed) is inside or outside the country. In some cases, under agreement drawings should be handled outside the country in a different way as inside the country. Accordingly, the above determination process is performed to set the security level according to the site having requested the drawing. The site having requested the drawing can be determined with reference to the user ID of the accessing user. </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> In the drawing data management system of this implementation, printing any drawing is permitted at the user terminal <highlight><bold>27</bold></highlight> if the site having requested the drawing is inside the country. Accordingly, when it is determined that the site having requested the drawing is inside the country, the security level for the drawing corresponding to the part number is set to &ldquo;01&rdquo; (step <highlight><bold>213</bold></highlight>). </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> When it is determined in step <highlight><bold>211</bold></highlight> that the site having requested the drawings is outside the country, the process proceeds to step <highlight><bold>215</bold></highlight>, where a producer code is obtained to set security level for the drawings corresponding to the part number. These processes allow the drawing data management system to set security levels to respective drawings according to agreements with respective trading partner producers. </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> In step <highlight><bold>215</bold></highlight>, as mentioned above, the producer code corresponding to the input part number is extracted from the external database <highlight><bold>29</bold></highlight>. Then, in step <highlight><bold>217</bold></highlight>, it is determined whether delivering drawings is permitted or not for the extracted producer code with reference to the condition table organized by producer <highlight><bold>39</bold></highlight>. </paragraph>
<paragraph id="P-0167" lvl="0"><number>&lsqb;0167&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows the condition table organized by producer <highlight><bold>39</bold></highlight> in this implementation. The condition table organized by producer <highlight><bold>39</bold></highlight> includes each of items such as &ldquo;trading partner producer name&rdquo;, &ldquo;producer code&rdquo;, &ldquo;permission to deliver drawings&rdquo; and &ldquo;permitted area&rdquo;. </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> Producer codes are assigned to trading partner producers in such a way that they can be uniquely identified. The producer code matching that extracted from the part number is retrieved from the condition table organized by producer <highlight><bold>39</bold></highlight> so that conditions for delivering drawings (security level) for each producer can be determined. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> The item &ldquo;permission to deliver drawings&rdquo; in the condition table organized by producer <highlight><bold>39</bold></highlight>, shows whether or not delivering drawings is permitted in any area outside the country. The item &ldquo;permitted area&rdquo; shows values of security levels in respective corresponding areas. </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> In this implementation, areas outside the country are classified under 3 groups (the American region, the European region and the Asian region). Each group of the item &ldquo;permitted area&rdquo; stores values of security levels according to agreements with respective trading partner producers. These regional groups can be increased if necessary. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> In step <highlight><bold>217</bold></highlight>, it is determined whether or not delivering drawings is permitted in any area outside the country, with reference to the item &ldquo;permission to deliver drawings&rdquo; for the producer code extracted from the part number. If a permission to deliver drawings is given for the producer code, the process proceeds to step <highlight><bold>219</bold></highlight>. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> In step <highlight><bold>219</bold></highlight>, a security level corresponding to the region corresponding to the site having requested the drawing is obtained from the condition table organized by producer <highlight><bold>39</bold></highlight>. For example, when the site having requested the drawings is in the Asian region, a value of security level is obtained from the item in the Asian region for the corresponding producer code. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> In step <highlight><bold>221</bold></highlight>, it is determined whether the obtained security level is &ldquo;01&rdquo; or not. In other words, it is determined whether the drawing corresponding to the part number input for the request can be printed or not in the region of the site having requested the drawing. When the obtained security level is &ldquo;01&rdquo;, the value is set as the security level for the drawings. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> When it is determined in step <highlight><bold>217</bold></highlight> that permission to deliver drawings is not given for the producer code or when it is determined in step <highlight><bold>221</bold></highlight> that the obtained security level is not &ldquo;01&rdquo;, the process proceeds to step <highlight><bold>223</bold></highlight>. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> In step <highlight><bold>223</bold></highlight>, it is determined whether permission to deliver drawings is given for drawings corresponding to the part number with reference to the condition table organized by part number <highlight><bold>45</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, the condition table organized by part number <highlight><bold>45</bold></highlight> has a data structure similar to the condition table organized by producer <highlight><bold>39</bold></highlight> mentioned above. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> Accordingly it is determined whether or not delivering drawings is permitted in any area outside the country, with reference to the item &ldquo;permission to deliver drawings&rdquo; in the condition table organized by part number <highlight><bold>45</bold></highlight>. If permission to deliver drawings is given, the process proceeds to step <highlight><bold>225</bold></highlight>, where a value of security level for the region of the site having requested the drawing. The obtained security level is set as that of the site having requested the drawing. </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> When it is determined in step <highlight><bold>223</bold></highlight> that permission to deliver drawings is not given for the part number, the process proceeds to step <highlight><bold>227</bold></highlight>, where a value of security level is set to &ldquo;02&rdquo; to prohibit printing of drawings. </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> One of the functions of the drawing data management system according to the present invention, is &ldquo;reserved delivery of drawings&rdquo;. The reserved delivery of drawings is a function by which a user enters a reservation of printing a plurality of drawings into the drawing data management server <highlight><bold>15</bold></highlight> and a printer connected to the drawing data management server <highlight><bold>15</bold></highlight> or the user terminal <highlight><bold>27</bold></highlight> prints the reserved plurality of drawings at a time. </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> For example, the reserved delivery of drawings is used when the user must submit a great number of part drawings by one operation to a trading partner producer. The user has the user terminal <highlight><bold>27</bold></highlight> connected to the drawing data management server <highlight><bold>15</bold></highlight> and sends a list of part numbers corresponding to the required drawings through the user terminal <highlight><bold>27</bold></highlight> connected to the drawing data management server <highlight><bold>15</bold></highlight>. The drawing data management server <highlight><bold>15</bold></highlight> prints a plurality of drawings at a time based on the list of the specified part number. </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows a functional block diagram of the drawing data management server <highlight><bold>15</bold></highlight> and the terminal, provided with a function of reserved delivery of drawings. With reference to this drawing, a function of reserved delivery of drawings processed by the drawing data management system according to the present invention, will be described below. In the following description, it is assumed that connection between the user terminal <highlight><bold>27</bold></highlight> and the drawing data management server <highlight><bold>15</bold></highlight> is established and the reserved drawings are printed at a time by the printer <highlight><bold>19</bold></highlight> connected to the drawing data management server <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> For example, the user terminal <highlight><bold>27</bold></highlight> is provided with an input device <highlight><bold>1043</bold></highlight>, such as a keyboard and a mouse and an output device such as a monitor <highlight><bold>1047</bold></highlight>. In one embodiment, the user terminal <highlight><bold>27</bold></highlight> may be a personal computer. The user who wishes a plurality of drawings to be printed at a time, reserves the delivery of the drawings through a part number input screen, displayed on the monitor <highlight><bold>1047</bold></highlight> of the user terminal <highlight><bold>27</bold></highlight>. </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows an implementation of a part number input screen <highlight><bold>1051</bold></highlight>. Through the part number input screen <highlight><bold>1051</bold></highlight>, a part number list consisting of one or a plurality of part numbers can be generated and sent to the drawing data management server <highlight><bold>15</bold></highlight>. In order to generate the part number list, the part number input screen <highlight><bold>1051</bold></highlight> is provided with a part number input form <highlight><bold>1053</bold></highlight>, a related drawing input form <highlight><bold>1055</bold></highlight>, a part number list window <highlight><bold>1057</bold></highlight>, an addition button <highlight><bold>1059</bold></highlight>, a correction button <highlight><bold>1061</bold></highlight>, a deletion button <highlight><bold>1063</bold></highlight> and a reservation button <highlight><bold>1065</bold></highlight>. </paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> When generating a part number list, the user inputs a desired part number in the part number form <highlight><bold>1053</bold></highlight> and clicks the addition button <highlight><bold>1059</bold></highlight> to add the input number to the part number list. When the input number is added to the part number list, a serial number is assigned to the part number and the list is displayed on the part number list window <highlight><bold>1057</bold></highlight>. When a plurality of drawings are delivered, a plurality of part numbers are added to the part number list. </paragraph>
<paragraph id="P-0184" lvl="0"><number>&lsqb;0184&rsqb;</number> The correction button <highlight><bold>1061</bold></highlight> on the part number input screen <highlight><bold>1051</bold></highlight> is used to correct any of the part numbers displayed in the input number list. The user can select any one of the part numbers and click the correction button <highlight><bold>61</bold></highlight> to correct the selected part number. </paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> The deletion button <highlight><bold>1063</bold></highlight> on the part number input screen <highlight><bold>1051</bold></highlight> is used to delete any of the part numbers displayed in the input number list. The user can select any one of the part numbers and click the deletion button <highlight><bold>63</bold></highlight> to delete the selected part number from the list. </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> The related drawing input form <highlight><bold>55</bold></highlight> is used to define whether drawings related to the part number input in the part number input form <highlight><bold>1053</bold></highlight> should be printed or not. When the user wishes the related drawings to be delivered, the user inputs a value of &ldquo;1&rdquo; in the related drawing input form <highlight><bold>55</bold></highlight> to direct delivery of the related drawings. When the user does not need the related drawings, the related drawing input form <highlight><bold>55</bold></highlight> is left blank. </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> When the reservation button <highlight><bold>1065</bold></highlight> on the part number input screen <highlight><bold>1051</bold></highlight> is clicked, a reservation confirmation screen <highlight><bold>1067</bold></highlight> is displayed on the monitor <highlight><bold>1047</bold></highlight> of the user terminal <highlight><bold>27</bold></highlight>. An implementation of the reservation confirmation screen <highlight><bold>1067</bold></highlight> is shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>. The reservation confirmation screen <highlight><bold>1067</bold></highlight> is provided with a part number list window <highlight><bold>1069</bold></highlight>, a request button <highlight><bold>1071</bold></highlight> and a return button <highlight><bold>1073</bold></highlight>. </paragraph>
<paragraph id="P-0188" lvl="0"><number>&lsqb;0188&rsqb;</number> In the part number list window <highlight><bold>1069</bold></highlight> of the reservation confirmation screen <highlight><bold>1067</bold></highlight>, the final part number list of the part number input screen <highlight><bold>1051</bold></highlight> is displayed. The user finally confirms the part number list through the reservation confirmation screen <highlight><bold>1067</bold></highlight>. </paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> If there is nothing wrong with the part number list, the request button <highlight><bold>1071</bold></highlight> is clicked to send the part number list to the drawing data management server <highlight><bold>15</bold></highlight>. If there is the need to correct the part number list again, the return button <highlight><bold>1073</bold></highlight> is clicked to return to the part number input screen <highlight><bold>1051</bold></highlight>. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> When the part number list is confirmed and the request button <highlight><bold>1071</bold></highlight> is clicked through the reservation confirmation screen <highlight><bold>1067</bold></highlight>, a drawing request sending section <highlight><bold>1045</bold></highlight> in the user terminal <highlight><bold>27</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference> sends the part number list to the drawing data management server <highlight><bold>15</bold></highlight>. The part number list sent by the drawing request sending section <highlight><bold>1045</bold></highlight> is received by a drawing request receiving section <highlight><bold>1031</bold></highlight> in the drawing data management server <highlight><bold>15</bold></highlight> and sent from the drawing request receiving section <highlight><bold>1031</bold></highlight> to a drawing file list generating section <highlight><bold>1033</bold></highlight>. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> The drawing file list generating section <highlight><bold>1033</bold></highlight> generates a drawing file list corresponding to the part number list with reference to a part number correspondence table <highlight><bold>1029</bold></highlight>. The part number correspondence table <highlight><bold>1029</bold></highlight> relates part numbers to the drawing files stored in the drawing database <highlight><bold>17</bold></highlight> and stores the relationship. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> The drawing file list generating section <highlight><bold>1033</bold></highlight> obtains the drawing file names corresponding to the part numbers in the part number list with reference to the part number correspondence table <highlight><bold>1029</bold></highlight> to generate a drawing file list. If the drawing files corresponding to the part numbers are not found on the part number correspondence table <highlight><bold>1029</bold></highlight>, the drawing file list generating section <highlight><bold>1033</bold></highlight> records the fact in the drawing file list. </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> The generated drawing file list is sent to a repeated drawing file detecting section <highlight><bold>1034</bold></highlight>. The repeated drawing file detecting section <highlight><bold>1034</bold></highlight> detects whether repetition of a plurality of drawing file names included in the drawing file list, exists or not. When repetitions of file names exist, repetition identifiers are assigned to the repeated drawing file names. With reference to the repetition identifiers, printing of repeated drawings is avoided when a plurality of drawings are printed. </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> The drawing file list is sent to a drawing file obtaining section <highlight><bold>1035</bold></highlight>, after repetition identifiers are assigned by the repeated drawing file detecting section <highlight><bold>1034</bold></highlight>. The drawing file obtaining section <highlight><bold>1035</bold></highlight> obtains the drawing files included in the drawing file list from the drawing database <highlight><bold>17</bold></highlight> and send them sequentially to a printing section <highlight><bold>1039</bold></highlight>. The printing section <highlight><bold>1039</bold></highlight> prints the drawings through the printer <highlight><bold>19</bold></highlight> in the sequence of receiving them from the drawing file obtaining section <highlight><bold>1035</bold></highlight>. During the process, printing of the drawings with repetition identifiers is avoided. </paragraph>
<paragraph id="P-0195" lvl="0"><number>&lsqb;0195&rsqb;</number> The drawing file list with repetition identifiers is also sent to an output list generating section <highlight><bold>1037</bold></highlight>. The output list generating section <highlight><bold>1037</bold></highlight> generates &ldquo;specification of reserved delivery of drawings&rdquo; and sends it to the printing section <highlight><bold>1039</bold></highlight>. The specification of reserved delivery of drawings is printed on completion of printing of the drawings reserved by the user. It describes the specifications of the current reserved delivery of drawings. </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> shows an example of the specification of reserved delivery of drawings. The specification of reserved delivery of drawings includes date of delivery, reception number, ID of the requesting user, number of input part numbers (number of part numbers for which the user has requested delivery of drawings), number of delivered drawings (number of drawings actually delivered) and number of errors (number of drawings that have not been delivered for some reasons) with a list of results of processing for respective part numbers. </paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> In the list of the specification of reserved delivery of drawings, serial numbers are assigned to part numbers. An item for results of processing indicates whether or not the drawing corresponding to the part number has been successfully delivered. If the drawing corresponding to the part number is not printed for some reasons, &ldquo;error&rdquo; is indicated in the item for results of processing. Further, for a repeated drawing, the serial number of the part number of the identical drawing is indicated in the item for results of processing, indicating that no repeated drawing has been output. At this time, item of part number of delivered drawing indicates the part number of the identical drawing. Item for presence of related drawings indicates that the drawing corresponding to the part number has related drawings. </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> The printing section <highlight><bold>1039</bold></highlight> prints the specification of reserved delivery of drawings, sent from the output list generating section <highlight><bold>1037</bold></highlight>, after having printed all the drawing files. The specification of reserved delivery of drawings allows the user to confirm whether or not the requested drawings have been properly printed. </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> FIGS. <highlight><bold>13</bold></highlight> to <highlight><bold>16</bold></highlight> are flowcharts showing processes of reserved delivery of drawings in the drawing data management server <highlight><bold>15</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 13</cross-reference> shows a flowchart of the whole process of reserved delivery of drawings. </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> First, in step <highlight><bold>1101</bold></highlight> the drawing data management server <highlight><bold>15</bold></highlight> receives the part number list from any of the user terminals <highlight><bold>27</bold></highlight>. Then, in step <highlight><bold>1103</bold></highlight> the drawing data management server <highlight><bold>15</bold></highlight> generates a drawing file list based on the received part number list. </paragraph>
<paragraph id="P-0201" lvl="0"><number>&lsqb;0201&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> shows a flowchart of a process of generating a drawing file list. In step <highlight><bold>1201</bold></highlight>, number of repetition k of the flowchart is initialized to 0 and in step <highlight><bold>1203</bold></highlight> the value of k is increased by 1. In step <highlight><bold>1205</bold></highlight> the part number with the k-th serial number is obtained from the part number list, and the drawing file name corresponding to the part number is retrieved by consulting the part number correspondence table <highlight><bold>1029</bold></highlight>. </paragraph>
<paragraph id="P-0202" lvl="0"><number>&lsqb;0202&rsqb;</number> As mentioned above, the part number correspondence table <highlight><bold>1029</bold></highlight> is a table in which the drawing file names stored in the drawing database <highlight><bold>17</bold></highlight> are related to part numbers. If the drawing file corresponding to an input part number is present in the drawing database <highlight><bold>17</bold></highlight>, the corresponding drawing file name should be obtained from the part number correspondence table <highlight><bold>1029</bold></highlight>. However, if the drawing file corresponding to the input part number is not present in the drawing database <highlight><bold>17</bold></highlight> for some reasons (for example, in case that a wrong part number is input), a drawing file name cannot be obtained. </paragraph>
<paragraph id="P-0203" lvl="0"><number>&lsqb;0203&rsqb;</number> Accordingly, in step <highlight><bold>1207</bold></highlight> it is determined whether the drawing file name corresponding to the part number is found in the part number correspondence table <highlight><bold>1029</bold></highlight>. If the drawing file name is found, the retrieved file name is added to the drawing file list in step <highlight><bold>1211</bold></highlight>. If the drawing file name is not retrieved, indication of error is retuned for the part number and recorded in the drawing file list in step <highlight><bold>1209</bold></highlight>. </paragraph>
<paragraph id="P-0204" lvl="0"><number>&lsqb;0204&rsqb;</number> In step <highlight><bold>1213</bold></highlight> it is determined whether or not the number of repetitions k reaches the total number n of part numbers. The total number of part numbers is that of the part numbers included in the part number list. If k does not reach n in step <highlight><bold>1213</bold></highlight>, drawing file names have not been obtained for all the part numbers included in the part number list. Accordingly, the process returns to step <highlight><bold>1203</bold></highlight> and the series of steps are repeated. If k reaches n in step <highlight><bold>1213</bold></highlight> as a result of repetition of loops, drawing file names have been obtained for all the part numbers included in the part number list. </paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> In the part number correspondence table <highlight><bold>1029</bold></highlight>, as mentioned above, one drawing file name is stored in correspondence with a plurality of part numbers. Accordingly, in some cases some drawing file names in the generated drawing file list are repeated. The repetition of drawing file names in the drawing file list is detected in step <highlight><bold>1105</bold></highlight> in the flowchart shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a flowchart showing in detail the process in step <highlight><bold>1105</bold></highlight>. In step <highlight><bold>1301</bold></highlight> number of repetitions k of the flowchart is initialized to 1 and in step <highlight><bold>1303</bold></highlight> the number is increased by 1. In step <highlight><bold>1305</bold></highlight> it is determined whether or not the same drawing file name with the k-th file name is present in front of the position of the k-th file name. For example, in the case of k&equals;10, it is determined whether or not the file name matching the 10th file name in the drawing file list is present in 1<highlight><superscript>st </superscript></highlight>to 9<highlight><superscript>th </superscript></highlight>file names in the drawing file list. </paragraph>
<paragraph id="P-0207" lvl="0"><number>&lsqb;0207&rsqb;</number> If the file name matching the k-th drawing file name is detected in step <highlight><bold>1305</bold></highlight>, a repetition identifier is assigned to the k-th drawing file in step <highlight><bold>1307</bold></highlight>. The repetition identifier indicates that different part numbers in the part number list are related to the same drawing file (the same image or drawing). </paragraph>
<paragraph id="P-0208" lvl="0"><number>&lsqb;0208&rsqb;</number> For example, the 10<highlight><superscript>th </superscript></highlight>file name is identical to the 3<highlight><superscript>rd </superscript></highlight>file name in the drawing file list, a repetition identifier with a value of 3 is assigned to the 10<highlight><superscript>th </superscript></highlight>drawing file name and stored in the drawing file list. </paragraph>
<paragraph id="P-0209" lvl="0"><number>&lsqb;0209&rsqb;</number> In step <highlight><bold>1309</bold></highlight> it is determined whether or not the number of repetitions k reaches the total number n of drawing file names. The total number of drawing file names is that of the drawing file names included in the part number list and identical to the total number of the part numbers included in the part number list. </paragraph>
<paragraph id="P-0210" lvl="0"><number>&lsqb;0210&rsqb;</number> If k does not reach n in step <highlight><bold>1309</bold></highlight>, repetition has not been detected for all the drawing file names included in the part number list. Accordingly, the process returns to step <highlight><bold>1303</bold></highlight> and the series of steps are repeated. If k reaches n in step <highlight><bold>1309</bold></highlight>, repetition has been detected for all the drawing file names included in the part number list. </paragraph>
<paragraph id="P-0211" lvl="0"><number>&lsqb;0211&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> shows an example of the drawing file list finally obtained. In this example the drawing file name of serial number <highlight><bold>23</bold></highlight> matches that of serial number <highlight><bold>22</bold></highlight> and therefore a value of <highlight><bold>22</bold></highlight> is put in the item of repetition identifier of serial number <highlight><bold>23</bold></highlight>. Thus, in case that repetition of file name is present, the identical file name can be determined with reference to a value of the repetition identifier assigned to the drawing file name. </paragraph>
<paragraph id="P-0212" lvl="0"><number>&lsqb;0212&rsqb;</number> In step <highlight><bold>1107</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 13</cross-reference> printing of drawings is performed based on the generated drawing file list. <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a flowchart showing in detail the process of printing drawings. </paragraph>
<paragraph id="P-0213" lvl="0"><number>&lsqb;0213&rsqb;</number> In step <highlight><bold>1401</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 17</cross-reference> number of repetitions k of the flowchart is initialized to 0 and in step <highlight><bold>1403</bold></highlight> the number is increased by 1. In step <highlight><bold>1405</bold></highlight> it is determined whether or not error is indicated in the k-th item of the drawing file list. If error is indicated in the k-th item of the drawing file list, the drawing file is not present. Accordingly, the process proceeds to step <highlight><bold>1411</bold></highlight>. If error is not indicated in the k-th item of the drawing file list, the process proceeds to step <highlight><bold>1407</bold></highlight>. </paragraph>
<paragraph id="P-0214" lvl="0"><number>&lsqb;0214&rsqb;</number> In step <highlight><bold>1407</bold></highlight> it is determined whether or not a repetition identifier is present with the k-th drawing file name. If it is determined in step <highlight><bold>1407</bold></highlight> that a repetition identifier is not present, the process proceeds with step <highlight><bold>1409</bold></highlight>, where the drawing file corresponding to the k-th drawing file name is obtained from the drawing database <highlight><bold>17</bold></highlight> and the drawing is printed through the printer <highlight><bold>19</bold></highlight>. </paragraph>
<paragraph id="P-0215" lvl="0"><number>&lsqb;0215&rsqb;</number> If it is determined in step <highlight><bold>1407</bold></highlight> that the repetition identifier is assigned to the k-th drawing file name, the drawing of the drawing file has already been printed. Accordingly, the process does not proceed to step <highlight><bold>1409</bold></highlight> and printing of the drawing is not performed. </paragraph>
<paragraph id="P-0216" lvl="0"><number>&lsqb;0216&rsqb;</number> In step <highlight><bold>1411</bold></highlight> it is determined whether or not number of repetitions k reaches the total number of the drawing file names. If k does not reach n in step <highlight><bold>1411</bold></highlight>, the process of printing has not been performed for all the drawing file names included in the drawing file list. Accordingly, the process returns to step <highlight><bold>1403</bold></highlight> and the series of steps are repeated. If k reaches n in step <highlight><bold>1411</bold></highlight>, the process of printing has been completed for all the drawing file names included in the drawing file list. </paragraph>
<paragraph id="P-0217" lvl="0"><number>&lsqb;0217&rsqb;</number> On completion of the process of printing drawings, in step <highlight><bold>1109</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 13</cross-reference> the specification of reserved delivery of drawings is generated based on the generated drawing file list and the specification is printed through the printer <highlight><bold>1019</bold></highlight>. The printed specification of reserved delivery of drawings allows the user to confirm whether or not the requested drawings have been properly printed. </paragraph>
<paragraph id="P-0218" lvl="0"><number>&lsqb;0218&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a block diagram showing in detail the drawing data management server <highlight><bold>15</bold></highlight> and the user terminal <highlight><bold>27</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, according to another aspect of the present invention. The managing function of drawing delivery information in the drawing data management system according to the aspect of the present invention will be described below with reference to <cross-reference target="DRAWINGS">FIG. 18</cross-reference>. </paragraph>
<paragraph id="P-0219" lvl="0"><number>&lsqb;0219&rsqb;</number> As mentioned above, users specially authorized by the company alone have access to the drawing data management server <highlight><bold>15</bold></highlight>. For such specially authorized users, user registration has previously been performed. </paragraph>
<paragraph id="P-0220" lvl="0"><number>&lsqb;0220&rsqb;</number> Users for whom user registration has been performed, have a user ID and a password for uniquely identifying each of them. The user ID and password are stored in an authentication database <highlight><bold>2031</bold></highlight> in the drawing data management server <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0221" lvl="0"><number>&lsqb;0221&rsqb;</number> Further, in the authentication database <highlight><bold>2031</bold></highlight>, attribute information on each of the registered users is stored in association with each user ID. For example, attribute information of users includes &ldquo;user name&rdquo;, &ldquo;company name or business sector name&rdquo;, &ldquo;department to which user belongs&rdquo; and the like. Accordingly, when a user ID is specified, attribute information on the user corresponding to the user ID can be obtained through consulting the authentication database <highlight><bold>2031</bold></highlight>. </paragraph>
<paragraph id="P-0222" lvl="0"><number>&lsqb;0222&rsqb;</number> User terminals <highlight><bold>27</bold></highlight> placed at respective sites are provided with input devices <highlight><bold>2047</bold></highlight> such as a keyboard and a mouse, for example. Further, the user terminals <highlight><bold>27</bold></highlight> are provided with output devices such as a printer <highlight><bold>2049</bold></highlight> and a monitor <highlight><bold>2051</bold></highlight>. In one embodiment, the user terminals <highlight><bold>27</bold></highlight> may be typical personal computers. </paragraph>
<paragraph id="P-0223" lvl="0"><number>&lsqb;0223&rsqb;</number> When the user wishes to have part drawings stored in the drawing database <highlight><bold>17</bold></highlight>, to be printed at user terminal <highlight><bold>27</bold></highlight>, the user must log in to the drawing data management server <highlight><bold>15</bold></highlight> from user terminal <highlight><bold>27</bold></highlight>. A log-in processing section <highlight><bold>2053</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference> performs the logging-in process on the user side, while a log-in authenticating section <highlight><bold>2033</bold></highlight> and the authentication database <highlight><bold>2031</bold></highlight> performs it on the side of the drawing data management server <highlight><bold>15</bold></highlight>. The log-in processing section <highlight><bold>2053</bold></highlight> and log-in authenticating section <highlight><bold>2033</bold></highlight> function in association with each other to establish an access of the user to the drawing files. </paragraph>
<paragraph id="P-0224" lvl="0"><number>&lsqb;0224&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> shows a log-in screen <highlight><bold>2071</bold></highlight> of the drawing data management system, displayed at user terminals <highlight><bold>27</bold></highlight>. At first, a user inputs his or her ID and password in an input form of the log-in screen and clicks a log-in button to send the input information to the drawing data management server <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0225" lvl="0"><number>&lsqb;0225&rsqb;</number> The drawing data management server <highlight><bold>15</bold></highlight> compares the user ID and password sent from the user with contents of the authentication database <highlight><bold>2031</bold></highlight> to authenticate the user making access from a user terminal <highlight><bold>27</bold></highlight>. As a result, if the user is authenticated, the drawing data management server <highlight><bold>15</bold></highlight> establishes connection with the user terminal from which the user ID has been sent and maintains the connection until the user logs out. </paragraph>
<paragraph id="P-0226" lvl="0"><number>&lsqb;0226&rsqb;</number> Further, after having authenticated the user ID, the drawing data management server <highlight><bold>15</bold></highlight> obtains attribute information on the user ID from the authentication database <highlight><bold>2031</bold></highlight> and sends the information to the user terminal <highlight><bold>27</bold></highlight>. The user terminal <highlight><bold>27</bold></highlight> receives the attribute information sent from the drawing data management server <highlight><bold>15</bold></highlight> and temporarily stores it in the log-in processing section <highlight><bold>2053</bold></highlight>. The log-in processing section <highlight><bold>2053</bold></highlight> stores the attribute information of the user until the user terminal <highlight><bold>27</bold></highlight> is disconnected from the drawing data management server <highlight><bold>15</bold></highlight> (that is, until the user logs off). </paragraph>
<paragraph id="P-0227" lvl="0"><number>&lsqb;0227&rsqb;</number> When connection between the drawing data management server <highlight><bold>15</bold></highlight> and the user terminal <highlight><bold>27</bold></highlight> is established, the user terminal <highlight><bold>27</bold></highlight> displays an input screen for part numbers. When the user wishes to output (display or print) drawings, he or she inputs the part number of the part for which he or she wishes to output drawings to send it to the drawing data management server <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0228" lvl="0"><number>&lsqb;0228&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> shows an implementation of an input screen <highlight><bold>2073</bold></highlight> for part numbers. The input screen <highlight><bold>2073</bold></highlight> for part numbers is provided with a part number input format <highlight><bold>2081</bold></highlight>. The user inputs the desired part number in the part number input format <highlight><bold>2081</bold></highlight>. When the user inputs a part number and clicks an addition button <highlight><bold>2075</bold></highlight>, the input information is added to a retrieved part list window <highlight><bold>2083</bold></highlight> of the input screen <highlight><bold>2073</bold></highlight>. </paragraph>
<paragraph id="P-0229" lvl="0"><number>&lsqb;0229&rsqb;</number> In the retrieved part list window <highlight><bold>2083</bold></highlight> of the input screen <highlight><bold>2073</bold></highlight>, part numbers thus input are displayed with serial numbers. If the user wishes to correct any of the part numbers in the list, he or she selects it and clicks a correction button <highlight><bold>2076</bold></highlight> to perform correction of the selected part number. </paragraph>
<paragraph id="P-0230" lvl="0"><number>&lsqb;0230&rsqb;</number> A deletion button <highlight><bold>2077</bold></highlight> on the input screen <highlight><bold>2073</bold></highlight> is used to delete any of the part numbers displayed in the retrieved part list window <highlight><bold>2083</bold></highlight>. In the case of deleting a part number, a part number to be deleted is selected from the part numbers in the list and the deletion button is clicked to delete the selected part number from the retrieved part list. </paragraph>
<paragraph id="P-0231" lvl="0"><number>&lsqb;0231&rsqb;</number> The retrieved part number list displayed in the retrieved part list window <highlight><bold>2083</bold></highlight> on the input screen is sent to the drawing data management server <highlight><bold>15</bold></highlight> when the retrieval button <highlight><bold>2079</bold></highlight> is clicked. The sending of the part number(s) is processed by a drawing request sending section <highlight><bold>2059</bold></highlight> in the user terminal <highlight><bold>27</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>. </paragraph>
<paragraph id="P-0232" lvl="0"><number>&lsqb;0232&rsqb;</number> The one or more part numbers sent by the drawing request sending section <highlight><bold>2059</bold></highlight> are received by a drawing request receiving section <highlight><bold>2035</bold></highlight> in the drawing data management server <highlight><bold>15</bold></highlight>. The received part number or numbers are sent to a drawing file retrieval section <highlight><bold>2037</bold></highlight> in order of the serial numbers assigned in the retrieved part list window <highlight><bold>2083</bold></highlight>. The drawing file retrieval section <highlight><bold>2037</bold></highlight> retrieves the corresponding drawing file or files from the drawing database <highlight><bold>17</bold></highlight> using the part number or numbers as key. </paragraph>
<paragraph id="P-0233" lvl="0"><number>&lsqb;0233&rsqb;</number> After having retrieved the corresponding drawing file or files from the drawing database <highlight><bold>17</bold></highlight>, the drawing file retrieval section <highlight><bold>2037</bold></highlight> sends the retrieved drawing file or files to a drawing sending section <highlight><bold>2039</bold></highlight>. The drawing sending section <highlight><bold>2039</bold></highlight> receives the drawing file or files retrieved in order of the serial numbers from the drawing file retrieval section <highlight><bold>2037</bold></highlight> and sends the drawing file or files to the user terminal having sent the part number or numbers. </paragraph>
<paragraph id="P-0234" lvl="0"><number>&lsqb;0234&rsqb;</number> A drawing receiving section <highlight><bold>2061</bold></highlight> in the user terminal receives one or more drawing files sent from the drawing data management server <highlight><bold>15</bold></highlight> and temporarily stores the file or files. The file or files are stored in the drawing receiving section <highlight><bold>2061</bold></highlight>until the user terminal <highlight><bold>27</bold></highlight> is disconnected from the drawing data management server <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0235" lvl="0"><number>&lsqb;0235&rsqb;</number> When receiving the drawing file or files, the drawing receiving section <highlight><bold>2061</bold></highlight> not only temporarily stores the file or files, but also informs the user of the results of the retrieval through a screen of the monitor <highlight><bold>2051</bold></highlight>. </paragraph>
<paragraph id="P-0236" lvl="0"><number>&lsqb;0236&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> shows an implementation of a retrieval result screen <highlight><bold>2085</bold></highlight> displayed on the monitor <highlight><bold>2051</bold></highlight>. The retrieval result screen <highlight><bold>2085</bold></highlight> is provided with a retrieval result list window <highlight><bold>2086</bold></highlight>, in which part number or numbers of the received drawing file or files. If a drawing file corresponding to the input part number is not found in searching the drawing database <highlight><bold>17</bold></highlight>, the part number is not displayed in the retrieval result list <highlight><bold>2086</bold></highlight>. </paragraph>
<paragraph id="P-0237" lvl="0"><number>&lsqb;0237&rsqb;</number> The user can select an output form of the drawing or drawings (that is, to display the drawing or drawings on the monitor <highlight><bold>2051</bold></highlight> or to print the drawing or drawings through the printer <highlight><bold>2049</bold></highlight>) through the retrieval result screen <highlight><bold>2085</bold></highlight>. </paragraph>
<paragraph id="P-0238" lvl="0"><number>&lsqb;0238&rsqb;</number> A drawing display button <highlight><bold>2087</bold></highlight> on the retrieval result screen <highlight><bold>2085</bold></highlight> is used to display the drawing or drawings corresponding to the part number or numbers displayed in the retrieval result list window <highlight><bold>2086</bold></highlight>. When the user wishes to have the drawing or drawings to be displayed, he or she selects the part number or numbers in the list, for which a drawing or drawings are to be displayed, and clicks the drawing display button <highlight><bold>2087</bold></highlight>. Then, the drawing or drawings corresponding to the part number or numbers are displayed on the monitor <highlight><bold>2051</bold></highlight>. </paragraph>
<paragraph id="P-0239" lvl="0"><number>&lsqb;0239&rsqb;</number> When the part number or numbers are selected and the drawing display button <highlight><bold>2087</bold></highlight> is clicked, a drawing displaying section <highlight><bold>2057</bold></highlight> in the user terminal <highlight><bold>27</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference> obtains the drawing file or files corresponding to the selected part number or numbers from one or more files stored in the drawing receiving section <highlight><bold>2061</bold></highlight> to display the drawing or drawings contained in the drawing file or files on the monitor <highlight><bold>2051</bold></highlight> </paragraph>
<paragraph id="P-0240" lvl="0"><number>&lsqb;0240&rsqb;</number> A drawing print button <highlight><bold>2088</bold></highlight> in the retrieval result screen <highlight><bold>2085</bold></highlight> is used to have the drawings corresponding to the part numbers displayed in the retrieval result list window <highlight><bold>2086</bold></highlight>, printed by the printer <highlight><bold>2049</bold></highlight>. </paragraph>
<paragraph id="P-0241" lvl="0"><number>&lsqb;0241&rsqb;</number> When the user wishes drawings to be printed, he or she selects the part numbers to be printed among the part numbers in the list and clicks the drawing print button <highlight><bold>2088</bold></highlight>. Then, the drawings corresponding to the selected part numbers are printed by the printer <highlight><bold>2049</bold></highlight>. </paragraph>
<paragraph id="P-0242" lvl="0"><number>&lsqb;0242&rsqb;</number> When a part number in the list is selected and the drawing print button <highlight><bold>2088</bold></highlight> is clicked, a drawing printing section <highlight><bold>2055</bold></highlight> in the user terminal <highlight><bold>27</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference> obtains the drawing file corresponding to the selected part number from one or more drawing files stored in the drawing receiving section and prints the drawing contained in the drawing file by the printer <highlight><bold>2049</bold></highlight>. Further, when printing a drawing the drawing printing section <highlight><bold>2055</bold></highlight> obtains user attribute information stored in the log-in processing section <highlight><bold>2053</bold></highlight> and prints the attribute information on each of the sheets on which the drawing is printed. </paragraph>
<paragraph id="P-0243" lvl="0"><number>&lsqb;0243&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> shows an example of a drawing printed by the drawing data management system according to the present invention. In the drawing data management system, drawings contained in drawing files are printed in a similar way with typical printed drawings and user attribute information is simultaneously printed in the margins of the sheets. In <cross-reference target="DRAWINGS">FIG. 22</cross-reference>, user attribute information such as department <highlight><bold>2089</bold></highlight>, employee number <highlight><bold>2090</bold></highlight>, company name <highlight><bold>2091</bold></highlight> and business sector <highlight><bold>2092</bold></highlight>, as well as information such as date and time of delivery of drawing <highlight><bold>2093</bold></highlight> and part number <highlight><bold>2094</bold></highlight> are printed with the drawing. </paragraph>
<paragraph id="P-0244" lvl="0"><number>&lsqb;0244&rsqb;</number> As mentioned above, user attribute information is sent from the user drawing data management server <highlight><bold>2015</bold></highlight> when the user ID is authenticated. Accordingly, the attribute information can be printed for each user independently of user terminals <highlight><bold>27</bold></highlight>, to clarify who is responsible for the printed drawing. </paragraph>
<paragraph id="P-0245" lvl="0"><number>&lsqb;0245&rsqb;</number> In another embodiment, &ldquo;page number for split drawing&rdquo; is printed with each piece of information printed with drawings as mentioned above. Page number for split drawing is a page number of the plurality of pages (sheets) with which one drawing is printed. For example, when a drawing is scaled to A1 size sheet, the drawing is to be split for printing on a plurality of sheets, because typical printers are not available for A1 size sheets. In this case, the drawing data management system according to the present invention prints &ldquo;page number for split drawing&rdquo; with each piece of information mentioned above, on each sheet. The user can easily find the one whole drawing consisting of the plurality of sheets, by checking page number for split drawing. </paragraph>
<paragraph id="P-0246" lvl="0"><number>&lsqb;0246&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> shows an example of a drawing printed on three split sheets. In <cross-reference target="DRAWINGS">FIG. 23</cross-reference>, one drawing is printed over three sheets. In this case the drawing data management system prints user attribute information (such as department, employee number, company name and business sector), date and time of delivery of drawing and part number in the upper part of each of the three sheets. The printed pieces of information are identical for the three sheets. Further, the drawing data management system prints page number for split drawing <highlight><bold>2095</bold></highlight> on each sheet so that the user easily check one drawing consisting of three sheets. </paragraph>
<paragraph id="P-0247" lvl="0"><number>&lsqb;0247&rsqb;</number> An output history generating section <highlight><bold>2065</bold></highlight> successively records the output process performed during a period from log-in to log-out of the user terminal <highlight><bold>27</bold></highlight> to the drawing data management server <highlight><bold>15</bold></highlight>. For example, when printing process is performed for a drawing file obtained from the drawing data management server <highlight><bold>15</bold></highlight>, the output history generating section <highlight><bold>2065</bold></highlight> records information such as time of printing, printed drawing file name and part number and number of printed sheets. Indications of drawing files are similarly recorded for the output history. </paragraph>
<paragraph id="P-0248" lvl="0"><number>&lsqb;0248&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> shows an example of an output history generated by the output history generating section <highlight><bold>2065</bold></highlight>. The output history includes &ldquo;user name&rdquo;, &ldquo;time of log-in&rdquo;, &ldquo;time of log-out&rdquo; or the like as well as &ldquo;history of printing&rdquo; and &ldquo;history of displaying&rdquo;. User name indicates the name of the user accessing the drawing database <highlight><bold>17</bold></highlight> using the user terminal <highlight><bold>27</bold></highlight>. Time of log-in indicates the time that the user logs in to the data management server <highlight><bold>15</bold></highlight>, while time of log-out indicates the time that the user logs-out from the data management server <highlight><bold>15</bold></highlight>. Time of log-out is blank after the user has logged in and is recorded when the user logs out. </paragraph>
<paragraph id="P-0249" lvl="0"><number>&lsqb;0249&rsqb;</number> In history of printing, drawing file name, time of printing, number of printed sheets and the like are recorded with the part number of the printed drawing. </paragraph>
<paragraph id="P-0250" lvl="0"><number>&lsqb;0250&rsqb;</number> As mentioned above, the drawing file retrieved from the drawing database <highlight><bold>17</bold></highlight>, is printed as drawings after an output form is selected through the retrieval result screen <highlight><bold>2085</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 21</cross-reference>. Thus, the output history generating section <highlight><bold>2065</bold></highlight> updates output history when a part number is selected among the part numbers in the list and the drawing display button <highlight><bold>2087</bold></highlight> or the drawing print button <highlight><bold>2088</bold></highlight> is clicked. </paragraph>
<paragraph id="P-0251" lvl="0"><number>&lsqb;0251&rsqb;</number> In this example, besides history of printing and history of displaying, history of retrieval of drawings the user has retrieved is generated. In the history of retrieval, a drawing file name retrieved through the part number input screen <highlight><bold>2073</bold></highlight>, time of retrieval and the like are recorded. </paragraph>
<paragraph id="P-0252" lvl="0"><number>&lsqb;0252&rsqb;</number> The output history generating section <highlight><bold>2065</bold></highlight> continues to record output history until the user terminal <highlight><bold>27</bold></highlight> logs out. An output history generating sending <highlight><bold>2063</bold></highlight> sends the output history to the drawing data management server <highlight><bold>15</bold></highlight> when the user terminal <highlight><bold>27</bold></highlight> logs out from the drawing data management server <highlight><bold>15</bold></highlight>. An output history receiving section <highlight><bold>2043</bold></highlight> of the drawing data management server <highlight><bold>15</bold></highlight> receives the output history and stores it in a log database <highlight><bold>2045</bold></highlight>, in association with the user who logged in. In one embodiment, data format of the output history to be stored in the log database is converted into that allowing more efficient retrieval and then stored there. </paragraph>
<paragraph id="P-0253" lvl="0"><number>&lsqb;0253&rsqb;</number> The drawing data management department managing the drawing data management server <highlight><bold>15</bold></highlight> is able to track name of user, time of printing and number of printed drawings through checking the log (output log) for each user stored in the log database. </paragraph>
<paragraph id="P-0254" lvl="0"><number>&lsqb;0254&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> is a detailed functional block diagram of the drawing data management server <highlight><bold>15</bold></highlight> and the user terminal <highlight><bold>27</bold></highlight>, provided with ambiguous retrieval function according to another aspect of the present invention. For the description below, assume that connection between the user terminal <highlight><bold>27</bold></highlight> and the drawing data management server <highlight><bold>15</bold></highlight> has been already established. </paragraph>
<paragraph id="P-0255" lvl="0"><number>&lsqb;0255&rsqb;</number> User terminals <highlight><bold>27</bold></highlight> placed at respective sites are provided with input devices <highlight><bold>49</bold></highlight> such as a keyboard and a mouse. In one embodiment, the user terminals <highlight><bold>27</bold></highlight> may be typical personal computers. </paragraph>
<paragraph id="P-0256" lvl="0"><number>&lsqb;0256&rsqb;</number> When a user wish to have a drawing output (displayed or printed), the user exactly inputs the identifying code of the part drawing that he or she wishes to have output to send it to the drawing data management server <highlight><bold>15</bold></highlight>. The sending of the identifying code is processed by a drawing request sending section <highlight><bold>3057</bold></highlight> of the user terminal shown in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>. </paragraph>
<paragraph id="P-0257" lvl="0"><number>&lsqb;0257&rsqb;</number> The identifying code sent by the drawing request sending section <highlight><bold>3057</bold></highlight> is received by a drawing request receiving section <highlight><bold>3035</bold></highlight> of the drawing data management server <highlight><bold>15</bold></highlight> and then sent to a drawing file retrieval section <highlight><bold>3037</bold></highlight>. The drawing file retrieval section <highlight><bold>3037</bold></highlight> retrieves from the database <highlight><bold>17</bold></highlight> the corresponding drawing file using the received identifying code as a key. </paragraph>
<paragraph id="P-0258" lvl="0"><number>&lsqb;0258&rsqb;</number> When the drawing file retrieval section <highlight><bold>3037</bold></highlight> retrieves the corresponding drawing file from the database <highlight><bold>17</bold></highlight>, it sends the drawing file to a drawing sending section <highlight><bold>3039</bold></highlight>. The drawing sending section <highlight><bold>3039</bold></highlight> receives the drawing file from the drawing file retrieval section <highlight><bold>3037</bold></highlight> and sends it to the user terminal <highlight><bold>27</bold></highlight> having requested the drawing. </paragraph>
<paragraph id="P-0259" lvl="0"><number>&lsqb;0259&rsqb;</number> A drawing receiving section <highlight><bold>3059</bold></highlight> of the user terminal <highlight><bold>27</bold></highlight> receives the drawing file sent from the drawing data management server <highlight><bold>15</bold></highlight> and temporarily stores it. The drawing receiving section <highlight><bold>3059</bold></highlight> stores the drawing file until the user terminal <highlight><bold>27</bold></highlight> is disconnected from the drawing data management server <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0260" lvl="0"><number>&lsqb;0260&rsqb;</number> When receiving the drawing file, the drawing receiving section <highlight><bold>3059</bold></highlight> not only temporarily stores the file, but also informs the user of the results of the retrieval through a drawing displaying section <highlight><bold>3055</bold></highlight> and a screen of the monitor <highlight><bold>3051</bold></highlight>. If a drawing file corresponding to the input part number is not present in the drawing database <highlight><bold>17</bold></highlight>, error is indicated through a screen of the monitor <highlight><bold>3051</bold></highlight>. Accordingly, when the user wishes to have the drawing data management system output a desired drawing, he or she must previously know the exact identifying code corresponding to the drawing file. </paragraph>
<paragraph id="P-0261" lvl="0"><number>&lsqb;0261&rsqb;</number> The drawing data management system according to the aspect of the present invention is provided with retrieval means called &ldquo;ambiguous retrieval&rdquo; that the user uses to retrieve the identifying code when he or she does not know the exact identifying code consisting of 15 digits as mentioned above. Ambiguous retrieval is a function to present the user identifying codes recorded in the drawing database <highlight><bold>17</bold></highlight> when an ambiguous identifying code is input. The user can find the exact identifying code using the ambiguous retrieval function. </paragraph>
<paragraph id="P-0262" lvl="0"><number>&lsqb;0262&rsqb;</number> In the ambiguous retrieval according to this implementation, main number and category number alone are used among the four kinds of numbers (main number, category number, type number and supplementary number) constituting the identifying code. In other words, a part of the identifying code corresponding to the parent drawing alone is subjected to retrieval. However, in other embodiments, ambiguous retrieval may be carried out for identifying codes including type number and supplementary number and corresponding to child drawings. </paragraph>
<paragraph id="P-0263" lvl="0"><number>&lsqb;0263&rsqb;</number> In order to describe ambiguous retrieval more specifically, magnitude of an identifying code defined in this implementation, is first described. Magnitude of an identifying code is defined by magnitude of hexadecimal notation in the character code system known as EBICDIC code. In the ambiguous retrieval, identifying codes are converted into EBCIDIC code expressions and the identifying codes in the drawing database <highlight><bold>17</bold></highlight> are searched based on their magnitudes. </paragraph>
<paragraph id="P-0264" lvl="0"><number>&lsqb;0264&rsqb;</number> As mentioned above, one of numbers from 0 to 9 and characters A to Z is assigned to each digit of an identifying code as a value. <cross-reference target="DRAWINGS">FIG. 27</cross-reference> shows hexadecimal notation in EBICDIC code of numbers 0 to 9 and characters A to Z in a table. </paragraph>
<paragraph id="P-0265" lvl="0"><number>&lsqb;0265&rsqb;</number> Since magnitude of identifying code is defined based on magnitude of hexadecimal notation in EBICDIC code, magnitude of each number and each character is defined as in Table 2. That is, &ldquo;9&rdquo; is the largest, &ldquo;Z&rdquo; follows &ldquo;0&rdquo; in descending order and &ldquo;A&rdquo; is the smallest.  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 2</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>9&gt;8&gt;...&gt;1&gt;0&gt;Z&gt;Y&gt;...&gt;B&gt;A</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0266" lvl="0"><number>&lsqb;0266&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28</cross-reference> shows an example in which five-digit main numbers are converted into expressions of hexadecimal notation of EBICIDIC code. As clearly shown in <cross-reference target="DRAWINGS">FIG. 28</cross-reference>, for five-digit main numbers, the largest code is &ldquo;99999&rdquo;, while the smallest code is &ldquo;AAAAA&rdquo;. Similarly, magnitude of a category number consisting of three-digit code is defined. </paragraph>
<paragraph id="P-0267" lvl="0"><number>&lsqb;0267&rsqb;</number> Since in this implementation five-digit main numbers and three-digit category numbers alone are used, the number of digits of identifying code used for retrieval is eight. For magnitude of a code of a combination of a main number and a category number, the category number is defined as more significant than the main number. Thus, a eight-digit code can be defined, including the category number as higher three digits and the main number as lower five digits. </paragraph>
<paragraph id="P-0268" lvl="0"><number>&lsqb;0268&rsqb;</number> For example, assume a case in which a first identifying code in which main number is &ldquo;17555&rdquo; and category number is &ldquo;999&rdquo; is compared with a second identifying code in which main number is &ldquo;17535&rdquo; and category number is &ldquo;998&rdquo;. In this case, the first identifying code is represented by &ldquo;99917555&rdquo; and the second identifying code is represented by &ldquo;99817353&rdquo;. Accordingly, magnitude of the first identifying code and that of the second identifying code are represented as below.</paragraph>
<paragraph lvl="0"><in-line-formula>&ldquo;99917555&rdquo;&gt;&ldquo;99817353&rdquo;</in-line-formula></paragraph>
<paragraph id="P-0269" lvl="7"><number>&lsqb;0269&rsqb;</number> This relationship is maintained when the codes are converted into hexadecimal notation according to EBICDIC code. </paragraph>
<paragraph id="P-0270" lvl="0"><number>&lsqb;0270&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29</cross-reference> shows a list of identifying codes arranged in descending order based on the above magnitude. As shown in <cross-reference target="DRAWINGS">FIG. 29</cross-reference>, for codes consisting of main number and category number, the largest one is a combination of category number &ldquo;999&rdquo; and main number &ldquo;99999&rdquo;, while the smallest one is that of category number &ldquo;AAA&rdquo; and main number &ldquo;AAAAA&rdquo;. </paragraph>
<paragraph id="P-0271" lvl="0"><number>&lsqb;0271&rsqb;</number> Number of possible values assigned to each digit of an identifying code is 36. The values include those of 10 numbers and those of 26 characters of the alphabet. The number of digits of the identifying code is a total of eight digits consisting of three digits of category number and five digits of main number. Accordingly, a total number of possible combinations for identifying codes, is 36<highlight><superscript>8</superscript></highlight>. </paragraph>
<paragraph id="P-0272" lvl="0"><number>&lsqb;0272&rsqb;</number> As mentioned above, drawing files are not related to all the 36<highlight><superscript>8 </superscript></highlight>identifying codes. A very small number of the codes are actually used as identifying codes. Further, a way of assigning identifying codes to part drawings does not depend on the above magnitude. Thus, when identifying codes are arranged according to the above magnitude, the identifying codes actually registered are not serial but scattered. </paragraph>
<paragraph id="P-0273" lvl="0"><number>&lsqb;0273&rsqb;</number> An identifying code table <highlight><bold>3041</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 26</cross-reference> is used to store non-serial identifying codes (that is, the identifying codes corresponding to the drawings stored in the drawing database <highlight><bold>17</bold></highlight>) together. </paragraph>
<paragraph id="P-0274" lvl="0"><number>&lsqb;0274&rsqb;</number> In the identifying code table <highlight><bold>3041</bold></highlight>, serial numbers are assigned to the registered identifying codes in descending order of magnitude of the codes. With reference to the identifying code table <highlight><bold>3041</bold></highlight>, the registered identifying codes and the order ranks of magnitude can be checked. </paragraph>
<paragraph id="P-0275" lvl="0"><number>&lsqb;0275&rsqb;</number> The identifying code table <highlight><bold>3041</bold></highlight> is generated by sequentially adding identifying codes newly registered. When a new drawing file is registered in the drawing database <highlight><bold>17</bold></highlight>, a table generating section <highlight><bold>3045</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 26</cross-reference> adds an identifying code assigned to the new drawing file, to the identifying code table <highlight><bold>3041</bold></highlight>. At that time, the table generating section <highlight><bold>3045</bold></highlight> updates all the serial numbers in the identifying code table <highlight><bold>3041</bold></highlight> and updates order of magnitude of respective identifying codes. </paragraph>
<paragraph id="P-0276" lvl="0"><number>&lsqb;0276&rsqb;</number> In the ambiguous retrieval, an ambiguous identifying code input by the user is compared with those stored in the identifying code table <highlight><bold>3041</bold></highlight>, and any number of registered identifying codes are presented to the user, based on magnitude of the input identifying code. In the description, an ambiguous code input by the user for retrieval is referred to as retrieving code. </paragraph>
<paragraph id="P-0277" lvl="0"><number>&lsqb;0277&rsqb;</number> Next, the ambiguous retrieval in the drawing data management system is described according to the procedure performed by the user. <cross-reference target="DRAWINGS">FIG. 30</cross-reference> shows a menu screen <highlight><bold>3071</bold></highlight> displayed on the monitor <highlight><bold>3051</bold></highlight>. Through this screen, the user selects a way of retrieval. A user who wishes to use the function of ambiguous retrieval, selects an ambiguous retrieval button <highlight><bold>3075</bold></highlight> on the menu screen <highlight><bold>3071</bold></highlight> and clicks an execution button <highlight><bold>3077</bold></highlight>. </paragraph>
<paragraph id="P-0278" lvl="0"><number>&lsqb;0278&rsqb;</number> When the ambiguous retrieval is selected through the menu screen <highlight><bold>3071</bold></highlight>, an ambiguous retrieval screen <highlight><bold>3079</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 31</cross-reference> is displayed. The ambiguous retrieval screen <highlight><bold>3079</bold></highlight> is provided with a retrieving code input form <highlight><bold>3081</bold></highlight> and <highlight><bold>3083</bold></highlight>, an input form for number for retrieval <highlight><bold>3085</bold></highlight>, an ambiguous retrieval start button <highlight><bold>3087</bold></highlight>, a menu button <highlight><bold>3089</bold></highlight> and a retrieval result window <highlight><bold>3091</bold></highlight>. </paragraph>
<paragraph id="P-0279" lvl="0"><number>&lsqb;0279&rsqb;</number> The retrieving code input form is divided into a main number input form <highlight><bold>3081</bold></highlight> and a category number input form <highlight><bold>3083</bold></highlight>. In the main number input form <highlight><bold>3081</bold></highlight>, a main number of an identifying code is input, while in the category number input form <highlight><bold>3083</bold></highlight>, a category number is input. </paragraph>
<paragraph id="P-0280" lvl="0"><number>&lsqb;0280&rsqb;</number> As mentioned above, a main number and a category number of an identifying code represent a code of the parent drawing. In the ambiguous retrieval according to this implementation, the specified number for retrieval of identifying codes registered in the drawing database <highlight><bold>17</bold></highlight> are obtained based on the input retrieving code (the main number and the category number). </paragraph>
<paragraph id="P-0281" lvl="0"><number>&lsqb;0281&rsqb;</number> The input form for number for retrieval <highlight><bold>3085</bold></highlight> is used to specify the number of identifying codes to be retrieved. For example, when the user inputs a value of &ldquo;10&rdquo; in the input form, 10 identifying codes present in the identifying code table <highlight><bold>3041</bold></highlight> are obtained. </paragraph>
<paragraph id="P-0282" lvl="0"><number>&lsqb;0282&rsqb;</number> The ambiguous retrieval start button <highlight><bold>3087</bold></highlight> is clicked to confirm the retrieving code input in the identifying code input form <highlight><bold>3081</bold></highlight> and <highlight><bold>3083</bold></highlight> and to start the retrieval. The retrieval result window <highlight><bold>3091</bold></highlight> displays in a list form identifying codes retrieved. The menu button <highlight><bold>3089</bold></highlight> is clicked to return from the ambiguous retrieval screen <highlight><bold>3079</bold></highlight> to the menu screen <highlight><bold>3071</bold></highlight>. </paragraph>
<paragraph id="P-0283" lvl="0"><number>&lsqb;0283&rsqb;</number> The ambiguous retrieval is described below with a concrete example. In this concrete example, suppose that the user inputs &ldquo;17555&rdquo; in the main number input form <highlight><bold>3081</bold></highlight>, &ldquo;S04&rdquo; in the category number input form <highlight><bold>3083</bold></highlight> and &ldquo;10&rdquo; in the input form for number for retrieval to perform ambiguous retrieval based on these inputs. </paragraph>
<paragraph id="P-0284" lvl="0"><number>&lsqb;0284&rsqb;</number> In this case, the user clicks the ambiguous retrieval start button <highlight><bold>3087</bold></highlight> to send the retrieving code and number for retrieval to the drawing data management server <highlight><bold>15</bold></highlight>. A retrieving code sending section <highlight><bold>3061</bold></highlight> in the user terminal <highlight><bold>27</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 26</cross-reference> processes the sending of the retrieving code and number for retrieval. </paragraph>
<paragraph id="P-0285" lvl="0"><number>&lsqb;0285&rsqb;</number> A retrieving code receiving section <highlight><bold>3045</bold></highlight> in the drawing data management server <highlight><bold>15</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 26</cross-reference> receives the sent retrieving code and number for retrieval and sends them to an ambiguous retrieval section <highlight><bold>3043</bold></highlight>. The ambiguous retrieval section <highlight><bold>3043</bold></highlight> consults the identifying code table <highlight><bold>3041</bold></highlight> storing the registered identifying codes and obtains the input number for retrieval of identifying codes from the table. The identifying codes thus obtained by the ambiguous retrieval section <highlight><bold>3043</bold></highlight> are selected from those smaller than the retrieving code in order of being close to the retrieving code. </paragraph>
<paragraph id="P-0286" lvl="0"><number>&lsqb;0286&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 32</cross-reference> shows an example of the identifying code table <highlight><bold>3041</bold></highlight>. A part of the table around input &ldquo;17555-S04&rdquo; is shown as a concrete example. With reference to <cross-reference target="DRAWINGS">FIG. 32</cross-reference>, the ambiguous retrieval section <highlight><bold>3043</bold></highlight> will be described below. </paragraph>
<paragraph id="P-0287" lvl="0"><number>&lsqb;0287&rsqb;</number> At first, &ldquo;17555-S04&rdquo; input by the user is compared with those stored in the identifying code table <highlight><bold>3041</bold></highlight> generated from the drawing database <highlight><bold>17</bold></highlight>. As a result, it is determined that an identifying code matching &ldquo;17555-S04&rdquo; is not present in the identifying code table <highlight><bold>3041</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 32</cross-reference>. In other words, it is found that a parent drawing corresponding to &ldquo;17555-S04&rdquo; is not present in the drawing database. </paragraph>
<paragraph id="P-0288" lvl="0"><number>&lsqb;0288&rsqb;</number> When an identifying code matching the retrieving code is not present in the identifying code table <highlight><bold>3041</bold></highlight>, the identifying code next smaller than &ldquo;17555-S04&rdquo; is retrieved from the identifying code table <highlight><bold>3041</bold></highlight>. In the case of <cross-reference target="DRAWINGS">FIG. 32</cross-reference>, the identifying code next smaller than &ldquo;17555-S04&rdquo; is &ldquo;17550-S04&rdquo;. Accordingly, &ldquo;17550-S04&rdquo; is the first identifying code to be obtained. In other words, this identifying code is retrieved as the identifying code that is smaller than and next to &ldquo;17555-S04&rdquo;. </paragraph>
<paragraph id="P-0289" lvl="0"><number>&lsqb;0289&rsqb;</number> In this concrete example, the number for retrieval specified by the user is &ldquo;10&rdquo;. Accordingly, the identifying code next smaller than the retrieved one in the identifying code table <highlight><bold>3041</bold></highlight> is retrieved. In this case, the identifying code next smaller than &ldquo;17550-S04&rdquo; is &ldquo;17538-S04&rdquo;, which is the second identifying code to be obtained. </paragraph>
<paragraph id="P-0290" lvl="0"><number>&lsqb;0290&rsqb;</number> In a similar way, a total of 10 identifying codes are sequentially obtained from the identifying code table <highlight><bold>3041</bold></highlight>. In other words, the ambiguous retrieval section <highlight><bold>3043</bold></highlight> obtains the identifying codes with serial numbers from &ldquo;309&rdquo; to &ldquo;318&rdquo; in the identifying code table <highlight><bold>3041</bold></highlight>. The 10 identifying codes thus obtained form the retrieval result of the ambiguous retrieval. </paragraph>
<paragraph id="P-0291" lvl="0"><number>&lsqb;0291&rsqb;</number> A retrieval result sending section <highlight><bold>3047</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 26</cross-reference> sends the retrieval result of the ambiguous retrieval section <highlight><bold>3043</bold></highlight> to the user terminal <highlight><bold>27</bold></highlight> having started the retrieval. The sent retrieval result is received by a retrieval result receiving section <highlight><bold>3063</bold></highlight> in the user terminal <highlight><bold>27</bold></highlight> and displayed through the monitor <highlight><bold>3051</bold></highlight>. </paragraph>
<paragraph id="P-0292" lvl="0"><number>&lsqb;0292&rsqb;</number> The retrieval result of the ambiguous retrieval is different from those obtained by conventional retrieval means based on matching of characters in codes. For example, conventional retrieval means using a wildcard retrieve codes with beginning matching, end matching, part matching or the like. However, such retrieval based on matching of characters can hardly retrieve identifying codes from &ldquo;99953-S03&rdquo; to &ldquo;99951-S03&rdquo;, because characters in the codes vary widely. </paragraph>
<paragraph id="P-0293" lvl="0"><number>&lsqb;0293&rsqb;</number> In the ambiguous retrieval according to the present invention, magnitude of each identifying code is defined and the identifying code having the closest value to the target, based on the magnitude not on matching. Accordingly, even when characters (including numbers) in the codes vary widely from the registered codes, some of the registered codes can be presented to the user with reliability. </paragraph>
<paragraph id="P-0294" lvl="0"><number>&lsqb;0294&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33</cross-reference> shows an example of a flowchart of the ambiguous retrieval. At first, respective parameters are set in step <highlight><bold>3101</bold></highlight>. N is the number for retrieval, specified by the user. INPUTCODE is the retrieving code input by the user. The upper 3 digits of the code form category number, while the lower 5 digits of the code form main number. (For example, the code is &ldquo;S0417555&rdquo; in the above concrete example. K represents a serial number showing magnitude of an identifying code in the identifying code table <highlight><bold>3041</bold></highlight>. K is initialized to &ldquo;0&rdquo; in step <highlight><bold>3101</bold></highlight>. M is a parameter used to obtain n identifying codes and is also initialized to &ldquo;0&rdquo;. </paragraph>
<paragraph id="P-0295" lvl="0"><number>&lsqb;0295&rsqb;</number> In step <highlight><bold>3103</bold></highlight>, 1 is added to serial number k and in step <highlight><bold>3105</bold></highlight>, the identifying code corresponding to serial number k in the identifying code table <highlight><bold>3041</bold></highlight>, is compared with INPUTCODE. If the k-th identifying code in the identifying code table <highlight><bold>3041</bold></highlight> is larger than INPUTCODE, the process returns to step <highlight><bold>3103</bold></highlight> and the series of steps are repeated. In other words, identifying codes in the identifying code table <highlight><bold>3041</bold></highlight> are compared with INPUTCODE one by one in descending order. </paragraph>
<paragraph id="P-0296" lvl="0"><number>&lsqb;0296&rsqb;</number> As an example, a case where the value of INPUTCODE is &ldquo;S0417555&rdquo; and the identifying code table <highlight><bold>3041</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 32</cross-reference> is used, will be described. In this case, INPUTCODE is smaller than identifying codes in the identifying code table <highlight><bold>3041</bold></highlight> until k reaches 308 (identifying code &ldquo;S0417556&rdquo;). However, in the next step <highlight><bold>3105</bold></highlight>, k reaches 308&plus;1&equals;309 and the corresponding identifying code is &ldquo;S0417550&rdquo;. At this time, the k-th identifying code becomes smaller than INPUTCODE and therefore the process proceeds with step <highlight><bold>3109</bold></highlight>. </paragraph>
<paragraph id="P-0297" lvl="0"><number>&lsqb;0297&rsqb;</number> In steps from <highlight><bold>3109</bold></highlight> to <highlight><bold>3113</bold></highlight>, a certain number of identifying codes are obtained from the identifying code table <highlight><bold>3041</bold></highlight>. The number is specified by the user for retrieval. In step <highlight><bold>3109</bold></highlight>, (k&plus;m)&minus;th identifying code is added to the retrieval result. In step <highlight><bold>3101</bold></highlight>, an initial value of m is set to &ldquo;0&rdquo; and in step <highlight><bold>3113</bold></highlight>, <highlight><bold>1</bold></highlight> is added to the value of m. Accordingly, when steps <highlight><bold>3109</bold></highlight> to <highlight><bold>3113</bold></highlight> are repeated, identifying codes from the identifying code table <highlight><bold>3041</bold></highlight> are added to the retrieval result. In step <highlight><bold>3111</bold></highlight>, (n&minus;1) is compared with the value of m to thereby obtain the user-specified number of identifying codes. </paragraph>
<paragraph id="P-0298" lvl="0"><number>&lsqb;0298&rsqb;</number> Specific implementations of the present invention have been described above. The present invention, however, is not limited to such implementations, and the scope of the invention includes a wide range of variations easily performed by those skilled in the art. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A drawing data management system comprising a drawing database storing drawings related to part numbers and a drawing data management server connected to the drawing database and retrieving from the drawing database a drawing corresponding to a user-input part number; 
<claim-text>wherein the drawing data management server is configured to extract a producer code corresponding to the input part number from an external database storing a table for correspondence between part numbers and producer codes related to the part numbers and to obtain conditions for delivering drawings, corresponding to the input part number, from a condition table organized by producer, storing conditions for delivering drawings, set for respective producer codes, so that the drawing corresponding to the input part number is output according to the obtained conditions for delivering drawings. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A drawing data management system according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising a printer for printing drawings, wherein the conditions for delivering drawings determine whether drawings should be printed or not and if the conditions for delivering drawings, corresponding to the part number do not permit printing, the printer is prohibited from printing the drawing corresponding to the part number. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A drawing data management system according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising a display for displaying drawings to a user, wherein when the drawing corresponding to the part number is displayed on the display, a massage is displayed according to the conditions for delivering drawings, corresponding to the part number. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A drawing data management system according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the condition table organized by producer, stores conditions for delivering drawings, for respective areas and for respective producer codes and the drawing data management server obtains from the condition table organized by producer, the conditions for delivering drawings, for respective areas and for the corresponding producer code, so that the drawing corresponding to the input part number is delivered according to the conditions for delivering drawings, for respective areas. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A drawing data management system according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the drawing data management server obtains the conditions for delivering drawings, corresponding to the input part number, from a condition table organized by part number storing conditions for delivering drawings for each part number, so that the drawing corresponding to the input part number is delivered according to the conditions for delivering drawings, corresponding to the obtained part number. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A method for management of drawings in a drawing data management system comprising a drawing database storing drawings related to part numbers and a drawing data management server connected to the drawing database and retrieving from the drawing database a drawing corresponding to a user-input part number; the method comprising the following performed by the drawing data management server: 
<claim-text>extracting a producer code corresponding to the input part number from an external database storing a table for correspondence between part numbers and producer codes related to the part numbers; and </claim-text>
<claim-text>obtaining conditions for delivering drawings, corresponding to the input part number, from a condition table organized by producer, storing conditions for delivering drawings, set for respective producer codes, so that the drawing corresponding to the input part number is output according to the obtained conditions for delivering drawings. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A program for a drawing data management system comprising a drawing database storing drawings related to part numbers and a drawing data management server connected to the drawing database and retrieving from the drawing database a drawing corresponding to a user-input part number; the program being adapted to have the drawing data management server perform the following: 
<claim-text>extracting a producer code corresponding to the input part number from an external database storing a table for correspondence between part numbers and producer codes related to the part numbers; and </claim-text>
<claim-text>obtaining conditions for delivering drawings, corresponding to the input part number, from a condition table organized by producer, storing conditions for delivering drawings, set for respective producer codes, so that the drawing corresponding to the input part number is output according to the obtained conditions for delivering drawings. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A drawing data management system comprising a drawing database storing drawing files related to part numbers, a drawing data management server connected to the drawing database and retrieving from the drawing database drawing files corresponding to user-input part numbers and a printer printing drawings of the retrieved drawing files; 
<claim-text>wherein the drawing data management server is configured to retrieve the drawing files corresponding to the input part numbers and to detect repeated drawing files from the retrieved drawing files, so that in response to the detection of the repeated drawing files, the printer is adapted not to repeatedly print drawings contained in the repeated drawing files. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A drawing data management system according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the printer prints a specification of delivery of drawings, indicating whether or not drawings corresponding to the part numbers have been successfully delivered and the detected repetitions are indicated in the specification of delivery of drawings in such a way that the repetitions correspond to part numbers. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A method for management of drawings in a drawing data management system comprising a drawing database storing drawing files related to part numbers, a drawing data management server connected to the drawing database and retrieving from the drawing database drawing files corresponding to user-input part numbers and a printer printing drawings of the retrieved drawing files; the method comprising the following performed by the drawing data management server: 
<claim-text>retrieving the drawing files corresponding to the input part numbers; and </claim-text>
<claim-text>detecting repeated drawing files from the retrieved drawing files, so that in response to the detection of the repeated drawing files, the printer is adapted not to repeatedly print drawings contained in the repeated drawing files. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A program for a drawing data management system comprising a drawing database storing drawing files related to part numbers, a drawing data management server connected to the drawing database and retrieving from the drawing database drawing files corresponding to user-input part numbers and a printer printing drawings of the retrieved drawing files; the program being adapted to have the drawing data management server perform the following steps: 
<claim-text>retrieving the drawing files corresponding to the input part numbers; and </claim-text>
<claim-text>detecting repeated drawing files from the retrieved drawing files, so that in response to the detection of the repeated drawing files, the printer is adapted not to repeatedly print drawings contained in the repeated drawing files. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A drawing data management system comprising a drawing database storing drawings related to part numbers, an authentication database storing user attribute information including user&apos;s name and a department to which the user belongs, in association with user ID and a drawing data management server connected to the drawing database and the authentication database and retrieving from the drawing database a drawing corresponding to a user-input part number and a printer for printing drawings; 
<claim-text>wherein the drawing data management server authenticates the user using the user ID to permit the user to access the drawing database and in response to a drawing file request by the user having logged in, retrieves the drawing file requested by the user, from the drawing database and the printer prints the drawing contained in the retrieved drawing file, with the user attribute information stored in the authentication database. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A drawing data management system according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the system further comprises a log database and in response to the printing of drawing, the drawing data management server generates printing history including time of the printing of drawings, in association with the user, and stores it in the log database. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A drawing data management system according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the system further comprises a log database and a display for displaying the drawing contained in the retrieved drawing file and in response to the displaying of the drawings, the drawing data management server generates printing history including time of the displaying of drawings, in association with the user, and stores it in the log database. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A drawing data management system according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the system further comprises a log database and the data management server generates history of retrieval of the retrieved drawing file, in association with the user and stores it in the log database. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A method for management of drawings in a drawing data management system comprising a drawing database storing drawings related to part numbers, an authentication database storing user attribute information including user&apos;s name and a department to which the user belongs, in association with user ID and a drawing data management server connected to the drawing database and the authentication database and retrieving from the drawing database a drawing corresponding to a user-input part number and a printer for printing drawings; the method comprising the following: 
<claim-text>the drawing data management server authenticating the user using the user ID to permit the user to access the drawing database, </claim-text>
<claim-text>the drawing data management server, in response to a drawing file request by the user having logged in, retrieving the drawing file requested by the user, from the drawing database and, </claim-text>
<claim-text>the printer printing the drawing contained in the retrieved drawing file, with the user attribute information stored in the authentication database. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A program for a drawing data management system comprising a drawing database storing drawings related to part numbers, an authentication database storing user attribute information including user&apos;s name and a department to which the user belongs, in association with user ID and a drawing data management server connected to the drawing database, the authentication database and retrieving from the drawing database a drawing corresponding to a user-input part number and a printer for printing drawings; the program being adapted to have the drawing data management server and the printer perform the following: 
<claim-text>the drawing data management server authenticating the user using the user ID to permit the user to access the drawing database, </claim-text>
<claim-text>the drawing data management server, in response to a drawing file request by the user having logged in, retrieving the drawing file requested by the user, from the drawing database and, </claim-text>
<claim-text>the printer printing the drawing contained in the retrieved drawing file, with the user attribute information stored in the authentication database. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A drawing data management system comprising a drawing database storing drawing files and a drawing data management server connected to the drawing database, so that in response to input of an identifying code uniquely identifying drawing files, the drawing data management server retrieves from the drawing database a drawing file corresponding to the input identifying code, 
<claim-text>wherein the drawing data management server defines magnitude of identifying codes assigned to the drawing files stored in the drawing database and has the identifying codes to be stored in an identifying code table and according to a user-input retrieving code, retrieves from the identifying code table the identifying code smaller than and closest to the retrieving code, based on the magnitude. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A drawing data management system according to <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein the drawing data management server retrieves a plurality of identifying codes in descending order of the magnitude and the number of the retrieved identifying codes is defined by a number specified by the user. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A drawing data management system according to <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein the identifying codes include main number, category number and type number, the main number and the category number representing the parent drawing, and the drawing data management server retrieves identifying codes using the main number and the category number. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. A drawing data management system according to <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein the identifying codes comprise a combination of 36-kind characters, 0 to 9 and A to Z, and magnitudes of the identifying code are defined by magnitudes of expressions of hexadecimal notation in EBICDIC code. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. A method for management of drawings in a drawing data management system comprising a drawing database storing drawing files and a drawing data management server connected to the drawing database, so that in response to input of an identifying code uniquely identifying drawing files, the drawing data management server retrieves from the drawing database a drawing file corresponding to the input identifying code, the method comprising the following performed by the drawing data management server: 
<claim-text>defining magnitude of identifying codes assigned to the drawing files stored in the drawing database and have the identifying codes to be stored in an identifying code table; and </claim-text>
<claim-text>according to a user-input retrieving code, retrieving from the identifying code table the identifying code smaller than and closest to the retrieving code, based on the magnitude. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A program for a drawing data management system comprising a drawing database storing drawing files and a drawing data management server connected to the drawing database, so that in response to input of an identifying code uniquely identifying drawing files, the drawing data management server retrieves from the drawing database a drawing file corresponding to the input identifying code, the program being adapted to have the drawing data management server perform the following: 
<claim-text>defining magnitude of identifying codes assigned to the drawing files stored in the drawing database and have the identifying codes to be stored in an identifying code table; and </claim-text>
<claim-text>according to a user-input retrieving code, retrieving from the identifying code table the identifying code smaller than and closest to the retrieving code, based on the magnitude.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004988A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004988A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004988A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004988A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004988A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004988A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004988A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004988A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004988A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004988A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004988A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030004988A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030004988A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030004988A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030004988A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030004988A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030004988A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030004988A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030004988A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030004988A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030004988A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030004988A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030004988A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030004988A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030004988A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030004988A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00026">
<image id="EMI-D00026" file="US20030004988A1-20030102-D00026.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00027">
<image id="EMI-D00027" file="US20030004988A1-20030102-D00027.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00028">
<image id="EMI-D00028" file="US20030004988A1-20030102-D00028.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00029">
<image id="EMI-D00029" file="US20030004988A1-20030102-D00029.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00030">
<image id="EMI-D00030" file="US20030004988A1-20030102-D00030.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00031">
<image id="EMI-D00031" file="US20030004988A1-20030102-D00031.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00032">
<image id="EMI-D00032" file="US20030004988A1-20030102-D00032.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00033">
<image id="EMI-D00033" file="US20030004988A1-20030102-D00033.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
