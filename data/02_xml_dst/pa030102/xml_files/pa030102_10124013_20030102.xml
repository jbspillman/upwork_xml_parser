<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005128A1-20030102-D00000.TIF SYSTEM "US20030005128A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005128A1-20030102-D00001.TIF SYSTEM "US20030005128A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005128A1-20030102-D00002.TIF SYSTEM "US20030005128A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005128A1-20030102-D00003.TIF SYSTEM "US20030005128A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005128A1-20030102-D00004.TIF SYSTEM "US20030005128A1-20030102-D00004.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005128</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10124013</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020417</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>0109726.0</doc-number>
</priority-application-number>
<filing-date>20010420</filing-date>
<country-code>GB</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/16</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>709</class>
<subclass>227000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Service access system</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Andrew</given-name>
<middle-name>J.</middle-name>
<family-name>Hickman</family-name>
</name>
<residence>
<residence-non-us>
<city>London</city>
<country-code>GB</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Marijan</given-name>
<family-name>Leban</family-name>
</name>
<residence>
<residence-non-us>
<city>Ljubljana</city>
<country-code>SI</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>Corporate Patent Counsel</name-1>
<name-2>U. S. Philips Corporation</name-2>
<address>
<address-1>580 White Plains Road</address-1>
<city>Tarrytown</city>
<state>NY</state>
<postalcode>10591</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A service access system for accessing a remote service (<highlight><bold>10, 20, 40</bold></highlight>) from a computer system (<highlight><bold>50</bold></highlight>-<highlight><bold>90</bold></highlight>) is described. The service access system comprises a text file including a network address of the remote service and text data for use in formulating communications. An interpretation system at the computer system uses the text file to generate a user interface and formulate communications to the remote service. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to a service access system enabling a computer device to access services that it has no knowledge of at the time of production. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Communication between computer-based systems is commonly in the form of instructions. In order for one computer system to communicate with another, it is necessary that the first computer system understands the instruction set and semantics of the second computer system so that it can formulate instructions the second computer system can process. In order to achieve this, shared programming languages and standardized communication protocols have been developed to enforce a common link between instruction sets. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> One type of instruction set that is being used with increasing popularity is referred to as metadata. Metadata, data about data, is normally a series of field names and corresponding values that describe attributes of a user, a computer system or an accompanying data item. Typically, a mark up language such as the extended mark up language (XML) is used. However, it is not possible to make assumptions about the structure and representations of metadata. Although all metadata may consist of field names and values marked up with XML, the same metadata is often represented completely differently in two similar systems. For example, metadata is increasingly being used to describe multimedia content for supply to users. In addition to a digital television broadcast, a set-top-box may receive a metadata file that includes fields describing the author, title, genre, duration and other attributes of the television broadcast. Such data is then used to generate a program guide of other information on the broadcast. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> However, a computer system can only access and use point to point services it knows to exist. Such knowledge is pre-programmed at the time of production of the device. The pre-programmed knowledge is called upon when the user requests a corresponding function and is used to access the service. For example, the pre-programmed knowledge may include a network address to access the service and details on how to formulate queries or instructions. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Where a user&apos;s computer system has no pre-programmed knowledge of a service, it obviously cannot access the service as it does not know how to formulate queries or instructions or where to direct them once formulated. In the case of personal computers accessing services via the World Wide Web, a user can guide a personal computer to a Web site corresponding to the service and access the service via an interface provided on a page of the Web site. Should the service be changed or updated, the service provider can update the Web site to reflect this without affecting the user&apos;s computer system. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> However, not all computer devices have the flexibility of personal computers. In particular, the new generation of mobile and intelligent devices such as mobile telephones, intelligent video recorders, set-top-boxes, intelligent household devices such as fridges and microwaves, and other CE devices are manufactured with embedded systems for accessing remote services or databases. For such devices there can be no expectation that the user is computer-literate, so they must not be required to enter configuration information themselves. Such embedded systems are written for the specific task of accessing the remote service or database and have a pre-written user interface designed for the specific purpose of providing access to the system. For example, an intelligent video recorder or a set-top-box may include an embedded system to obtain television schedule information from a remote source. Whilst such information may be obtained from a Web site, it quite likely that the device accesses a specifically designed database for the information to avoid the overheads associated with running a Web browser and accessing the Internet. Indeed, access may not even be over the internet but may be via another communication network such as a PSTN, a broadband network or a television network. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The manufacturers of such devices wish to offer access to services such as the television listings for televisions or video recorders, or recipes and food information for intelligent fridges and microwaves. However, both users and manufacturers wish such access to be seamless and do not wish the user to have to surf for the information via a Web browser or even know that they are accessing the Internet or other remote network. Ideally, the information or service should just appear to the user to be there at the device. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> This aim is achieved due to the embedded nature of the systems used in the devices. The embedded system automatically accesses a remote data source or service, the capabilities and location of which were written within the embedded system during manufacture. The device knows exactly how and where to obtain the data or request a service and has the necessary programming to display any data returned. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Whilst such an embedded system means that the device does not need a generic browser, the resources to support such a browser and a user able to navigate the World Wide Web and use the browser, it does limit the extent to which the service can be extended or changed. For example, the service provider cannot change the network location of the service or data source and it must ensure that any changes are backwardly compatible. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> According to a first aspect of the present invention, there is provided a system for accessing a remote service from a computer system comprising a text file of data on the remote service comprising a network address for communicating with the remote service and text data for formulating communications with the service, wherein the computer system includes an interpretation system for processing the text file, the interpretation system formulating communications to the network address of the remote service in dependence on the text data for formulating communications with the service. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> By defining services in terms of a metadata file instead of providing a client software or embedded application, a user terminal can be much more flexible in the manner in which it accesses services. In particular, if the service changes or new services become available, the metadata file only needs to be updated instead of requiring new client software (which is often impossible and requires a new user terminal). Furthermore, the structure of the metadata file means that it is not tied to a particular platform, operating system or service. The same metadata file can be provided to different platforms, each of which can implement a user interface or client application in their own way. The use of a version identifier in the client-server communications allows services to be changed at the server and the client to automatically determine that and download a replacement metadata file that allows the client to take advantage of the changes, possibly by modifying the user interface or client application using the new file. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The interpretation system may be arranged to generate a user interface for display on the computer system in dependence on the text data for formulating communications, the computer system being arranged to accept inputs to the user interface, the interpretation system using the inputs to formulate the communications. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The text file and data received from the remote service may each include a version indicator, wherein the computer system is arranged to compare the version indicator of data received from the remote service with that of the corresponding text file and obtain an updated text file if the version indicators differ. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The text data for formulating communications may include acceptable parameter types for use in communicating with the remote service. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The text data for formulating communications may further comprise information on legitimate values for the parameter types. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> The text data for formulating communications may further comprise acceptable operators for use with the parameter types. The acceptable operators may comprise boolean operators (for expressing logical relationships between fields), and comparison operators, such as equals, less than or equal to, etc. An important type of comparison operation is for comparing text strings, where the following types of criteria might be applied: wildcards, substring matching, case insensitive matching and fuzzy string matching. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The remote service may comprise a database of information, communications from the computer system comprising queries on the database of information, wherein results of the query are communicated to the computer system. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The remote service may comprise a World Wide Web server hosting a World Wide Web site on the Internet, the computer system being arranged to communicate with the World Wide Web site for communicating with the remote service. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The computer system may comprise a selected one of: a mobile telephone, a personal digital assistant, a personal computer, a digital video recorder, an intelligent household appliance or a decoder for a digital television system. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The text file may comprise an Extensible Markup Language file, the network address and text data comprising metadata fields within the Extensible Markup Language file. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> According to another aspect of the present invention, there is provided a method of accessing a remote system from a computer system comprising the steps of: </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> accessing a text file at the computer system, the text file comprising a network address for communicating with the remote service and text data for formulating communications with the service; </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> processing the text file to formulate communications to the network address of the remote service in dependence on the text data for formulating communications with the service. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The method may further comprise the steps of: </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> generating a user interface including the input fields corresponding to the text data for formulating communications with the service; </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> accepting inputs to the input fields; and, </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> generating a communication from the accepted inputs to the network address in dependence on the text data for formulating communications with the service. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The method may further comprise the steps of: </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> maintaining a version indicator for the text file; </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> comparing a version indicator included in communications received from the remote service; and, </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> obtaining an updated text file if the version indicators differ.</paragraph>
</summary-of-invention>
<brief-description-of-drawings>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Examples of the present invention will now be described in detail, by way of illustration only, and with reference to the accompanying drawings, in which: </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a schematic diagram of a computer system implementing a service access system according to the present invention; </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is an example service definition metadata file for use in the service access system according to the present invention; </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is another example service definition metadata file for use in the service access system according to the present invention; and, </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a response received from a service using the service access system of the present invention.</paragraph>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a schematic diagram of a computer system implementing a service access system according to the present invention. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> A computer server <highlight><bold>10</bold></highlight> hosts a World Wide Web site <highlight><bold>20</bold></highlight> on the Internet <highlight><bold>30</bold></highlight>. The World Wide Web site <highlight><bold>20</bold></highlight> offers access to a database <highlight><bold>40</bold></highlight> of information that can be searched using the World Wide Web site <highlight><bold>20</bold></highlight> over the Internet <highlight><bold>30</bold></highlight> via remote user terminals. The remote user terminals may be set-top-boxes <highlight><bold>50</bold></highlight> connected to television sets <highlight><bold>60</bold></highlight>, PC&apos;s <highlight><bold>70</bold></highlight>, mobile telephones <highlight><bold>80</bold></highlight>, personal data assistants <highlight><bold>90</bold></highlight> or other computer based devices. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The user terminals have a standard instruction set which both they and the Web site <highlight><bold>20</bold></highlight> understand the semantics of. The user terminals also either include a copy of a service definition metadata file associated with the Web site <highlight><bold>20</bold></highlight> in a memory or are able to obtain an appropriate metadata file. In order to access the database <highlight><bold>40</bold></highlight> and query it, a user terminal accesses its copy of the file in conjunction with the standard instruction set. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> As opposed to many existing client-server arrangements, the present invention does not use specifically written client software or embedded systems. Instead, the service description metadata file is an Extensible Markup Language (XML) file that contains information sufficient for a user terminal in combination with the standard instruction set to generate any necessary client system such as a user interface and to be able to formulate and submit requests to the server of a service. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The service definition file includes a description of the services it can be used to access along with data enabling the user terminal to form a communication to the service. The metadata file also includes a version number. The user terminal uses the data in the metadata file to generate a user interface to enable a user to query and interact with the service. Alternatively, if no user interaction is necessary, the data may merely be used to formulate a request to the service without the user terminal needing to refer to the user. An example, of such a request is a nightly download of television scheduling information that a set top box might make. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> Once the user query or the request has been formulated using the contents of the metadata file, it is submitted to the service at a network address provided in the metadata file. Typically, the network address will be that of the Web site <highlight><bold>20</bold></highlight> on the Internet <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> Upon receipt, the server <highlight><bold>10</bold></highlight> processes the request and takes the necessary action. The action may result in information being returned to the user terminal, new or updated applications being downloaded to the user terminal, data associated with the user or user terminal being updated at a remote location or some other action. For example, the results may simply be an indication as to the success of a request or may be information from a database that matches a submitted query. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> In a specific example, the remote user terminal may be a so-called intelligent fridge (not shown) or other household device, in which case the database <highlight><bold>40</bold></highlight> may contain information on recipes, food products or be associated with a vendor from which the fridge can order food. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> It will be appreciated that client-server arrangements are common in the art. However, client-server arrangements typically involve a specifically written client that is possibly embedded within the hardware or operating system of the client user terminal. If the database <highlight><bold>40</bold></highlight> is updated to include new fields or field types that can be searched, a conventional client requires corresponding updates to access or query the new fields or field types, perhaps even to continue accessing or querying known fields or field types. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> However, in a service access system according to the present invention, each response includes a version number. The version number matches that of the current metadata file that should be used to formulate requests or queries to the service. If the service to be accessed changes, the version number will also be changed and will therefore not match that of the out of date metadata file at the user terminal receiving the response. Upon receipt of a response, the user terminal checks the version number of the response against that of its metadata file and downloads an updated metadata file from the server <highlight><bold>10</bold></highlight> if the versions do not match. In this manner, new functionality can be incorporated without user interaction or a full web browser. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is an example service definition metadata file for use in the service access system of the present invention. In this example, the file allows a database of films to be searched by a user terminal. The line numbers <highlight><bold>200</bold></highlight> shown next to the metadata <highlight><bold>100</bold></highlight> of the metadata file are for illustration purposes only and are not normally included in metadata files. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> The fields in lines <highlight><bold>4</bold></highlight> to <highlight><bold>10</bold></highlight> describe the service provided and the destination to which a user terminal should submit requests or queries. Line <highlight><bold>4</bold></highlight> defines the version of the metadata file for the service as &ldquo;<highlight><bold>3</bold></highlight>&rdquo;. Lines <highlight><bold>5</bold></highlight> to <highlight><bold>8</bold></highlight> provide a title (&ldquo;Barry Norman&rdquo; line <highlight><bold>5</bold></highlight>) and a description (&ldquo;Allow Barry Norman to give you his reviews and ratings so that you can choose only the best films each week.&rdquo; lines <highlight><bold>6</bold></highlight> to <highlight><bold>8</bold></highlight>) for the service that can be relayed to the user in the user interface. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> In line <highlight><bold>9</bold></highlight>, the network address for the service is specified as an Internet Uniform Resource Locator (URL) of &ldquo;www.barry-norman.com/cgi-bin/myTVservices.cgi&rdquo;. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> Line <highlight><bold>10</bold></highlight> informs the user terminal of the types of queries that are acceptable by the service. In this case, the service allows queries &ldquo;withNegation&rdquo;, i.e. positive and negative query terms. Other query types include whether or not OR operators are accepted and whether or not precedence can be indicated in the query string using parentheses. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> By implication that no exceptions to the standard instruction set are specified in the service definition file, the Web site <highlight><bold>20</bold></highlight> associated with the service definition file is assumed to accept any query comprised of instructions from the standard instruction set. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> Extensions to services a user terminal does not understand the semantics of are provided in the form of extra fields. Such extensions may be new fields that can be searched but for which the operating system of the user terminal has no semantic understanding and therefore cannot support. The extensions are explicitly identified in the metadata file as extra fields (in the example of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> by using the tag &lt;ExtraField&gt;) and include a descriptor field. Examples of the extra fields can be seen in lines <highlight><bold>11</bold></highlight>, <highlight><bold>12</bold></highlight> and <highlight><bold>14</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. The user terminal need not understand the effect or relevance of the extensions, it must merely be able to relay a provided descriptor to the user. The descriptor should provide enough information for the user to appreciate what the extension is and what it is used for. In this manner, a user can instruct the user terminal to incorporate or use the extension in a request or query, the user terminal relaying the extension to a server of a service that understands the extension without further interaction. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> To submit a query or request, the user terminal formats the query for submission to the destination specified in the metadata file. For example, if the input for the Stars field was &ldquo;Tom Cruise&rdquo;, the Rating (out of 5) field was &ldquo;<highlight><bold>5</bold></highlight>&rdquo; and the genre field was &ldquo;Drama&rdquo;, the user terminal takes the network address from line <highlight><bold>9</bold></highlight> and formulates a query as follows: </paragraph>
<paragraph id="P-0054" lvl="2"><number>&lsqb;0054&rsqb;</number> http://www.barry-norman.com/cgi-bin/myTVservices.cgi&quest;actors&equals;Tom&plus;Cruise&amp;rating&equals;<highlight><bold>5</bold></highlight>&amp;Genre&equals;drama </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> The query is then transmitted onto the Internet for delivery to the server of the service. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is another example service definition metadata file for use in the service access system according to the present invention; </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> In the service definition file of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, all applicable fields are declared, not just the extra fields as in the example of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. Instructions from the standard instruction set that are supported are indicated in the file with a &lt;FixedField&gt;tag. The supported instructions merely serve to indicate to the user terminal that it can use that particular instruction or field from the standard instruction set. No further information is required for such instructions because they are already semantically understood by the user terminal. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a response received from the service to the query. The extra fields in the response are of the same format as those in the service definition file that held by the user terminal. The response is then used to generate a screen for display to the user. It will be seen that the version, &ldquo;3.2&rdquo;, stated in the response differs from that in the metadata file of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. Upon detecting the difference, the user terminal transmits a blank query to the service in the form: </paragraph>
<paragraph id="P-0059" lvl="2"><number>&lsqb;0059&rsqb;</number> http://www.barry-norman.com/cgi-bin/myTVservices.cgi </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> The service understands this to be a request for the most up to date metadata file and transmits the file to the user terminal. Upon receipt of the file, the user terminal stores it in memory, replacing the existing service definition metadata file. By using this mechanism for retrieving the file, a device can guarantee being able to obtain a service description file of any service for which it has a URL. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> A service definition file may include references to information on a number of different services. For example, a third party specialising in films could provide URLs on all the metadata services which allow the user to search for films, alternatively a television broadcaster&apos;s file may point to its services for gardening programmes, cooking programmes and films. In this way, the service description file facilitates the discovery of new services, as well as telling the device how to use the services. By following the URLs for each service, new service description files are downloaded and so on. i.e. the device can chain together the files and act as a spider. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> Whilst the present invention has been described with reference to remote devices accessing Web based databases over the internet, it could equally be implemented over other networks where point to point communication is possible such as broadband, or digital cable television networks. Furthermore, whilst specific examples have been directed to querying remote databases, submitted requests could equally be used to trigger downloading of data and applications, requests for services, submission of data or any other client-server communication. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> Although the specific examples have been shown using XML and CGI queries, other technologies could be equally used and would only require changes to the manner in which queries or requests are formulated and submitted. </paragraph>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A system for accessing a remote service from a computer system comprising a text file of data on the remote service comprising a network address for communicating with the remote service and text data for formulating communications with the service, wherein the computer system includes an interpretation system for processing the text file, the interpretation system formulating communications to the network address of the remote service in dependence on the text data for formulating communications with the service. </claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A system according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the interpretation system is arranged to generate a user interface for display on the computer system in dependence on the text data for formulating communications, the computer system being arranged to accept inputs to the user interface, the interpretation system using the inputs to formulate the communications. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A system according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the text file and data received from the remote service each include a version indicator, wherein the computer system is arranged to compare the version indicator of data received from the remote service with that of the corresponding text file and obtain an updated text file if the version indicators differ. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A system according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the text data for formulating communications includes acceptable parameter types for use in communicating with the remote service. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A system according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein the text data for formulating communications further comprises information on legitimate values for the parameter types. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A system according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein the text data for formulating communications further comprises acceptable operators for use with the parameter types. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A system according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein the acceptable operators comprise selected ones of: boolean operators for expressing logical relationships between fields, comparison operators, comparison operators for text strings, wildcards, substring matching, case insensitive matching and fuzzy string matching. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A system according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the remote service comprises a database of information, communications from the computer system comprising queries on the database of information, wherein results of the query are communicated to the computer system. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A system according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the remote service comprises a World Wide Web server hosting a World Wide Web site on the Internet, the computer system being arranged to communicate with the World Wide Web site for communicating with the remote service. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A system according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the computer system comprises a selected one of: a mobile telephone, a personal digital assistant, a personal computer, a digital video recorder, an intelligent household appliance or a decoder for a digital television system. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A system according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the text file comprises an Extensible Markup Language file, the network address and text data comprising metadata fields within the Extensible Markup Language file. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A system according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the text file includes a network address for each of a plurality of remote services, the interpretation interpretation system being arranged upon request to obtain a further text file for the remote service from the network address. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A method of accessing a remote system from a computer system comprising the steps of: 
<claim-text>accessing a text file at the computer system, the text file comprising a network address for communicating with the remote service and text data for formulating communications with the service; </claim-text>
<claim-text>processing the text file to formulate communications to the network address of the remote service in dependence on the text data for formulating communications with the service. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, further comprising the steps of: 
<claim-text>generating a user interface including the input fields corresponding to the text data for formulating communications with the service; </claim-text>
<claim-text>accepting inputs to the input fields; and, </claim-text>
<claim-text>generating a communication from the accepted inputs to the network address in dependence on the text data for formulating communications with the service. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference> or <highlight><bold>14</bold></highlight>, further comprising the steps of: 
<claim-text>maintaining a version indicator for the text file; </claim-text>
<claim-text>comparing a version indicator included in communications received from the remote service; and, </claim-text>
<claim-text>obtaining an updated text file if the version indicators differ. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A computer program comprising computer program code means for performing all the steps of any of <dependent-claim-reference depends_on="CLM-00013">claims 13</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00015">15</dependent-claim-reference> when the computer program is run on a computer. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A computer program according to <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> embodied on a computer readable medium.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005128A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005128A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005128A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005128A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005128A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
