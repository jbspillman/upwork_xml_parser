<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004708A1-20030102-D00000.TIF SYSTEM "US20030004708A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004708A1-20030102-D00001.TIF SYSTEM "US20030004708A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004708A1-20030102-D00002.TIF SYSTEM "US20030004708A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004708A1-20030102-D00003.TIF SYSTEM "US20030004708A1-20030102-D00003.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004708</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10124061</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020417</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>01201440.3</doc-number>
</priority-application-number>
<filing-date>20010420</filing-date>
<country-code>EP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G10L019/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>704</class>
<subclass>200100</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method and apparatus for editing data streams</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Arnoldus</given-name>
<middle-name>Werner Johannes</middle-name>
<family-name>Oomen</family-name>
</name>
<residence>
<residence-non-us>
<city>Eindhoven</city>
<country-code>NL</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Leon</given-name>
<middle-name>Maria</middle-name>
<family-name>Van De Kerkhof</family-name>
</name>
<residence>
<residence-non-us>
<city>Eindhoven</city>
<country-code>NL</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Francesco</given-name>
<middle-name>Felix Maria</middle-name>
<family-name>Zijderveld</family-name>
</name>
<residence>
<residence-non-us>
<city>Eindhoven</city>
<country-code>NL</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>U.S. Philips Corporation</name-1>
<name-2></name-2>
<address>
<address-1>580 White Plains Road</address-1>
<city>Tarrytown</city>
<state>NY</state>
<postalcode>10591</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">MP3 decoders decode MP3 data streams that comprise headers and signal data interspersed with each other, each header specifying a distance to a subsequent header, each header corresponding to a frame of signal data, the header being associated with a pointer that points to a starting point of the signal data for that frame relative to the header. An editing system cuts tracks from existing data streams. During editing, a user signals a header corresponding to the start of the desired track. The track is from the data stream, including a part of the data stream pointed at by the header and preceding the specified header. A new MP3 compatible data stream is written to a medium. The new data stream contains said header as first valid header and said part of the data stream preceding the header. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The invention relates to editing of encoded data streams and seamless playing of those data streams, in particular audio data streams, such as MPEG layer III (MP3) data streams. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The MPEG-1 and MPEG-2 Layer III format (briefly called MP3, officially named ISO/IEC 11172-3 and ISO/IEC 13818-3 respectively) are used extensively for representing compressed audio information. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The MP3 audio information is transported in a data stream that contains headers at specific intervals. Each header is associated with a frame describing a predetermined number of samples of audio data in compressed form. The header indicates information about the data in the frame, such as the sampling frequency of the data in the frame and the bit rate. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The interval between successive headers is a predetermined function of information in the header. However, the actual number of bits needed to represent a frame can deviate from the space available in the interval between the headers. This is possible because MP3 players contain a so-called short term buffer, from which frames that need more bits to realize a certain audio quality level can read bits that are not used in frames that need less bits to realize that quality level. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> To cope with these deviations MP3 allows frames to start at a variable offset relative to the headers. Thus, space left over between headers by preceding frames can be used for data of subsequent frames . MP3 provides for a pointer associated with each header. The pointer indicates the start of data of the frame associated with the header relative to the position of the header. As a result the stream a frame of data can start at a variable position preceding the associated header, in space left over by the preceding frame. Thus, the position of the start of the data relative to the position of the header depends on the audio content encoded by the data stream. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> It has been found that the pointers impede implementation of editing in MP3 and seamless playback of edited tracks. If the audio stream has to be split into tracks, for example to facilitate user access to different parts of a long piece of music, the initial part of each track will generally be invalid because it contains one or more headers that refer back to a preceding track. In practice this will result in interrupted playback at track boundaries. Thus, it becomes impossible to provide for seamless play back of different tracks one after the other. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> As a result, relatively complicated decoders are needed to support editing and/or seamless playback. In the extreme, it may be necessary to decompress the data before performing these functions, which is very inefficient in terms of complexity and quality. </paragraph>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Amongst others, it is an object of the invention to provide for seamless playback in the case of concatenation of data streams like MP3 streams. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The invention provides for a method of editing a data stream of a type that comprises headers and signal data interspersed with each other, each header specifying a distance to a subsequent header, each header corresponding to a frame of signal data, the header being associated with a pointer that points to a starting point of the signal data for that frame relative to the header, the method comprising: </paragraph>
<paragraph id="P-0010" lvl="2"><number>&lsqb;0010&rsqb;</number> receiving a command specifying a header in an incoming data stream, the specified header corresponding to a position in the signal that has to serve as a start of a track; </paragraph>
<paragraph id="P-0011" lvl="2"><number>&lsqb;0011&rsqb;</number> extracting the track from the data stream, including a part of the data stream pointed at by the specified header and preceding the specified header; </paragraph>
<paragraph id="P-0012" lvl="2"><number>&lsqb;0012&rsqb;</number> writing a new data stream of said type to a medium, the new data stream containing said header as first valid header and said part of the data stream preceding the specified header in the incoming data stream. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> By creating a new MP3 type stream that including a leading part in the stream from a point preceding the first valid header, decoders like MP3 decoders, are enabled to decode the signal data associated with that first valid header. In one embodiment, the leading data is moved after the initial header (whose pointer is set to zero) and the header is modified to create more space between it and the next header to accommodate the data that has been moved. In an MP3 stream, preferably the bit rate in the first header is modified to create this space. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> In another embodiment the newly created stream contains data in front of the first valid header, so that the first valid header may point back, if the pointer associated with that header points back to a location in front of the header. Preferably any headers in the leading part are invalidated, for example by making their associated pointer point back in front of the leading part, or by including invalidating information in the header. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Preferably, the leading part has a predetermined length equal to a maximum possible distance over which the pointer of the first valid header points back. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> The invention also provides for media that contain streams that allow seamless playback.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> These and other objects and advantageous aspects of the method, apparatus and medium according to the invention will be described in more detail using the following figures. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows an MP3 decoding system; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows an example of a stream of MP3 data; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows an editing system; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows examples of tracks; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows a further example of a track; </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows a trailing part of a track.</paragraph>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The invention will be described using MPEG-1 layer III as an example. However, the same principles apply to MPEG-2 layer III, where some constants have different values. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a prior art MP3 decoding system. The system contains an MP3 source <highlight><bold>10</bold></highlight> that feeds a stream decoder <highlight><bold>16</bold></highlight>. The MP3 source <highlight><bold>10</bold></highlight> contains for example a storage medium (not shown) for stored MP3 data and a read-out unit (not shown) for reading that data from the storage unit, in another example, the MP3 source <highlight><bold>10</bold></highlight> contains an interface to a communication channel (e.g. the Internet or a radio broadcast) and an output for outputting a received MP3 stream. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The stream decoder <highlight><bold>16</bold></highlight> contains a buffer memory <highlight><bold>160</bold></highlight> with an input coupled to the MP3 source <highlight><bold>10</bold></highlight>, a header detector <highlight><bold>162</bold></highlight> and a frame decoder <highlight><bold>164</bold></highlight>. The header detector has an input coupled to the buffer memory <highlight><bold>160</bold></highlight>. The frame decoder <highlight><bold>164</bold></highlight> has inputs coupled to the header detector <highlight><bold>162</bold></highlight> and the buffer memory <highlight><bold>160</bold></highlight> and an output for decoded audio. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows an example of a stream of MP3 data. The stream contains a number of headers <highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>f</italic></highlight>, with backpointers <highlight><bold>21</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>f </italic></highlight>that point to the starting points <highlight><bold>24</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>e </italic></highlight>of frames. The backpointers <highlight><bold>21</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>f </italic></highlight>are illustrated by means of arrows pointing back from the headers associated with the backpointers <highlight><bold>21</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>f </italic></highlight>to the starting points <highlight><bold>24</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>e </italic></highlight>to which the backpointers <highlight><bold>21</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>f </italic></highlight>point. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Each header <highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>f </italic></highlight>corresponds to a frame of compressed audio data. A backpointer <highlight><bold>21</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>f </italic></highlight>following the header <highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d </italic></highlight>indicates the starting point <highlight><bold>24</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>e </italic></highlight>of data in the frame (headers and side information are not counted in the pointers). The backpointer <highlight><bold>21</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>f </italic></highlight>may be zero, in which case the starting point <highlight><bold>24</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>e </italic></highlight>follows directly after the header <highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>f. </italic></highlight></paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The format of an MP3 header part preceding the back pointer is described in table I.  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE I</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>format of MP3 header</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="63PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="center"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Field</entry>
<entry>Number of bits</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry>syncword</entry>
<entry>12&ensp;</entry>
</row>
<row>
<entry></entry>
<entry>ID</entry>
<entry>1</entry>
</row>
<row>
<entry></entry>
<entry>layer</entry>
<entry>2</entry>
</row>
<row>
<entry></entry>
<entry>protection bit</entry>
<entry>1</entry>
</row>
<row>
<entry></entry>
<entry>bitrate index</entry>
<entry>4</entry>
</row>
<row>
<entry></entry>
<entry>sampling frequency</entry>
<entry>2</entry>
</row>
<row>
<entry></entry>
<entry>padding bit</entry>
<entry>1</entry>
</row>
<row>
<entry></entry>
<entry>private bit</entry>
<entry>1</entry>
</row>
<row>
<entry></entry>
<entry>mode</entry>
<entry>2</entry>
</row>
<row>
<entry></entry>
<entry>mode extension</entry>
<entry>2</entry>
</row>
<row>
<entry></entry>
<entry>copyright</entry>
<entry>1</entry>
</row>
<row>
<entry></entry>
<entry>original/copy</entry>
<entry>1</entry>
</row>
<row>
<entry></entry>
<entry>emphasis</entry>
<entry>2</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The &ldquo;syncword&rdquo; is a specific bit pattern that facilitates the identification of headers <highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d </italic></highlight>in the stream. The ID, layer, private bit, mode, mode expansion, copyright, original/copy and emphasis fields are specific to MP3 and do not concern the invention. The protection bit signals whether the header is followed by a 16 bit CRC word (Cyclic Redundancy Check; determined using a CRC 16 polynomial). After the optional CRC word follows the backpointer <highlight><bold>21</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d </italic></highlight>(also called &ldquo;main_data_begin&rdquo;), which is a nine bit number, which indicates how many (8-bit) bytes the starting byte of the frame <highlight><bold>24</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>c </italic></highlight>is back from the position of the backpointer <highlight><bold>21</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d </italic></highlight>(not counting header bytes, CRC words and side-information). </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The bitrate index field of the header contains a pointer to an entry in a table of possible bitrates. Available bit rates and corresponding bit rate indices are shown in table Ia  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE Ia</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>bit rate index values and corresponding bit rates</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="35PT" align="left"/>
<colspec colname="1" colwidth="49PT" align="center"/>
<colspec colname="2" colwidth="133PT" align="center"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>bit_rate_index</entry>
<entry>bitrate (kbit/s)</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;0000&rsquo;</entry>
<entry>free</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;0001&rsquo;</entry>
<entry>&ensp;32</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;0010&rsquo;</entry>
<entry>&ensp;40</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;0011&rsquo;</entry>
<entry>&ensp;48</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;0100&rsquo;</entry>
<entry>&ensp;56</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;0101&rsquo;</entry>
<entry>&ensp;64</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;0110&rsquo;</entry>
<entry>&ensp;80</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;0111&rsquo;</entry>
<entry>&ensp;96</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;1000&rsquo;</entry>
<entry>112</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;1001&rsquo;</entry>
<entry>128</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;1010&rsquo;</entry>
<entry>160</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;1011&rsquo;</entry>
<entry>192</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;1100&rsquo;</entry>
<entry>224</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;1101&rsquo;</entry>
<entry>256</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;1110&rsquo;</entry>
<entry>320</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;1111&rsquo;</entry>
<entry>forbidden</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The sampling frequency field indicates the sampling frequency used for the data. Available sampling frequencies are shown in table Ib  
<table-cwu id="TABLE-US-00003">
<number>3</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE Ib</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Sampling frequency code and corresponding sampling frequencies</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="21PT" align="left"/>
<colspec colname="1" colwidth="70PT" align="center"/>
<colspec colname="2" colwidth="126PT" align="center"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>sampling_frequency</entry>
<entry>frequency specified (kHz)</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="21PT" align="left"/>
<colspec colname="1" colwidth="70PT" align="center"/>
<colspec colname="2" colwidth="126PT" align="char" char="."/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&lsquo;00&rsquo;</entry>
<entry>44.1</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;01&rsquo;</entry>
<entry>48</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;10&rsquo;</entry>
<entry>32</entry>
</row>
<row>
<entry></entry>
<entry>&lsquo;11&rsquo;</entry>
<entry>reserved</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> Together the bit rate and the sampling frequency determine the distance from the start of the header to the start of a subsequent header. The distance in bytes (units of 8 bits) is determined from the value of R, where</paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>R&equals;</italic></highlight>144 *bit_rate/sampling_frequency.</in-line-formula></paragraph>
<paragraph id="P-0034" lvl="7"><number>&lsqb;0034&rsqb;</number> (the number 144 is specific for MPEG layer III). </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> In operation, MP3 source <highlight><bold>10</bold></highlight> produces an MP3 stream as illustrated in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. Information from this stream is stored in buffer memory <highlight><bold>160</bold></highlight> of stream decoder <highlight><bold>16</bold></highlight>. Header detector <highlight><bold>162</bold></highlight> initially locates a header at the start of the stream by detecting the syncword of a header. Subsequently, header detector <highlight><bold>162</bold></highlight> uses information contained in the current header to compute the distance to a subsequent header in the stream from the bitrate index field, the sampling frequency field of the header and the padding bit. From this distance header detector <highlight><bold>162</bold></highlight> computes the address of the location in buffer memory <highlight><bold>160</bold></highlight> where the next header is stored and reads the next header and so on. The header detector <highlight><bold>162</bold></highlight> checks whether the correct syncword is stored at the computed location. If not, an error has occurred and the header detector has to process an error condition and has to locate the next valid header before decoding can proceed. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Header detector <highlight><bold>162</bold></highlight> sends the address of the location where the header is stored to frame decoder <highlight><bold>164</bold></highlight>. Frame decoder <highlight><bold>164</bold></highlight> uses this address to determine the address where the backpointer associated with the header is stored, retrieves the backpointer and uses the backpointer to compute the address where the starting point of the frame associated with the header is stored. Frame decoder <highlight><bold>164</bold></highlight> uses this address to retrieve data from the frame, from which it decodes the audio signal. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows an editing system. The editing system comprises a first medium <highlight><bold>30</bold></highlight>, an editing apparatus <highlight><bold>32</bold></highlight> and a second medium <highlight><bold>38</bold></highlight>. The editing apparatus <highlight><bold>32</bold></highlight> comprises a control unit <highlight><bold>34</bold></highlight> and a stream processor <highlight><bold>36</bold></highlight>. The stream processor <highlight><bold>36</bold></highlight> is coupled between the first medium <highlight><bold>30</bold></highlight> and the second medium <highlight><bold>38</bold></highlight>. The control unit <highlight><bold>34</bold></highlight> has a control input <highlight><bold>33</bold></highlight> and is coupled to the stream processor <highlight><bold>36</bold></highlight> and the first medium <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> In operation the editing system creates newly structured data streams (tracks) in the second medium <highlight><bold>38</bold></highlight>. The newly structured data streams (tracks) are constructed so that they are decodable by MP3 decoders with a minimum effort to construct the new stream. In general, the system (under control of control unit <highlight><bold>32</bold></highlight>) will create a file structure on second medium <highlight><bold>38</bold></highlight> (for example a File Access Table (FAT)) that provides access to individual tracks on the second medium, for example by means of a table of pointers that point to the starting positions of tracks in the second medium <highlight><bold>38</bold></highlight>. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The editing system reads a data stream from the first medium <highlight><bold>30</bold></highlight> (which may be an (magneto-)optical storage disk, a magnetic tape, an Internet outlet etc.). The editing system extracts a portion of the data stream and writes it as a newly defined track to second medium <highlight><bold>38</bold></highlight>. The newly create track is constructed so that it is decodable with a conventional MP3 decoder. Second medium <highlight><bold>38</bold></highlight> may be one and the same as the first medium, or a separate medium of any type. The data in the newly defined track is extracted from a larger stream in first medium <highlight><bold>30</bold></highlight> where it is not the entire content of an individual track. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> At its input <highlight><bold>33</bold></highlight>, control unit <highlight><bold>32</bold></highlight> receives a selection signal, which indicates the position of the first header of the newly defined track in the data stream from first medium. From this selection, control unit <highlight><bold>32</bold></highlight> selects a starting point of a part of the data stream that precedes the first header by a predetermined number of bits. Control unit <highlight><bold>32</bold></highlight> instructs stream processor <highlight><bold>36</bold></highlight> to read the stream from first medium <highlight><bold>30</bold></highlight> beginning from the starting point or from a position in front of the starting point. Moreover, control unit <highlight><bold>32</bold></highlight> instructs stream processor <highlight><bold>36</bold></highlight> to write a predetermined number of bits of data to second medium <highlight><bold>38</bold></highlight> starting from the starting point. This data corresponds to a predetermined part of the data stream from first medium <highlight><bold>30</bold></highlight> preceding the first header. At least from the position to which the backpointer of that first header points, this data is copied from the data stream from the first medium <highlight><bold>30</bold></highlight> (before that position default data may be included, or data may be copied from the data stream). Also, control unit <highlight><bold>32</bold></highlight> instructs stream processor <highlight><bold>36</bold></highlight> to remove any headers from the stream written to second medium <highlight><bold>38</bold></highlight> before the first header. Alternatively, the headers may be invalidated, for example by ensuring that the backpointers in those headers to the signal data point to a part of the data stream that is not sent to the second medium <highlight><bold>38</bold></highlight>, although this incurs certain risks if the headers are interpreted wrongly by a decoder. Thus, a track is created in second medium <highlight><bold>38</bold></highlight> that contains signal data in front of the first valid header, so that, when applied to a stream decoder <highlight><bold>16</bold></highlight>, decoding of this track will start from the data associated with the first valid header. It is not necessary to move the data relative to the header, nor is it necessary to adjust the space between headers to create the new track. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The predetermined number of bits is chosen so that it spans the maximum distance over which the backpointer in the first valid header may point back. In the case of MP3 for example, a predetermined distance of at least 691 bytes is chosen, because the backpointers in MP3 can point back at most over 691 bytes, but a larger predetermined distance may be used. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> In general, the data stream will not contain a header at the starting point. This is no problem, but if desired, the stream processor <highlight><bold>36</bold></highlight> may be arranged to write an invalid header at the starting point. However, this requires additional complexity in the editing apparatus. Similarly, the stream processor <highlight><bold>36</bold></highlight> may be arranged to suppress data up to the point where the backpointer of the first valid header points. But this also required additional complexity. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows a number of examples of tracks <highlight><bold>40</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d </italic></highlight>that are newly generated from a data stream in this way. The starting points <highlight><bold>41</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d </italic></highlight>of these tracks are shown vertically aligned. A predetermined distance after the starting point <highlight><bold>41</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>, the track contains a first valid header <highlight><bold>44</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>. A first one <highlight><bold>40</bold></highlight><highlight><italic>a </italic></highlight>of these tracks corresponds to part of the data stream shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, in which the first valid header <highlight><bold>44</bold></highlight><highlight><italic>a </italic></highlight>is equal to the third header <highlight><bold>20</bold></highlight><highlight><italic>c </italic></highlight>from the data stream in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. As can be seen, data associated with this header starts in the leading part <highlight><bold>42</bold></highlight><highlight><italic>a </italic></highlight>of the track <highlight><bold>40</bold></highlight><highlight><italic>a </italic></highlight>included before the first valid header <highlight><bold>20</bold></highlight><highlight><italic>c</italic></highlight>. Similarly, the other tracks <highlight><bold>40</bold></highlight><highlight><italic>b</italic></highlight>-<highlight><italic>d </italic></highlight>all contain leading parts <highlight><bold>42</bold></highlight><highlight><italic>b</italic></highlight>-<highlight><italic>d </italic></highlight>before their first valid header <highlight><bold>44</bold></highlight><highlight><italic>b</italic></highlight>-<highlight><italic>d</italic></highlight>. By way of example, one of the tracks <highlight><bold>40</bold></highlight><highlight><italic>b </italic></highlight>is shown to have a zero backpointer <highlight><bold>45</bold></highlight>. In this case, no leading part <highlight><bold>42</bold></highlight><highlight><italic>b </italic></highlight>is necessary, but to avoid overhead to determine this, a leading part <highlight><bold>42</bold></highlight><highlight><italic>b </italic></highlight>is included nevertheless. As another example, another track <highlight><bold>40</bold></highlight><highlight><italic>d </italic></highlight>is shown to contain a header <highlight><bold>46</bold></highlight> in the leading part <highlight><bold>42</bold></highlight><highlight><italic>d</italic></highlight>, but this header is invalid because its associated backpointer points back beyond the start of the leading part <highlight><bold>42</bold></highlight><highlight><italic>d </italic></highlight>of the track <highlight><bold>40</bold></highlight><highlight><italic>d</italic></highlight>. Preferably, however, all headers are removed from the leader part <highlight><bold>42</bold></highlight><highlight><italic>d </italic></highlight>(the backpointer of the first header being correspondingly updated if necessary). </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> All the tracks <highlight><bold>40</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d </italic></highlight>shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> can be decoded by decoder <highlight><bold>16</bold></highlight>. This decoder <highlight><bold>16</bold></highlight> will load the leading part <highlight><bold>40</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d </italic></highlight>into memory, but it will decode data only starting from the first valid header <highlight><bold>44</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>, because this is the first valid header in the track. Earlier headers, if any, are skipped, because the backpointer to their associated data points back beyond the start of the track. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows an alternative edited data stream. The edited data stream contains headers <highlight><bold>60</bold></highlight>, <highlight><bold>63</bold></highlight>, <highlight><bold>64</bold></highlight>, <highlight><bold>65</bold></highlight>, signal data between the headers <highlight><bold>60</bold></highlight>, <highlight><bold>63</bold></highlight>, <highlight><bold>64</bold></highlight>, <highlight><bold>65</bold></highlight> and backpointers to the signal data. The frame data <highlight><bold>61</bold></highlight> that preceded the specified header <highlight><bold>60</bold></highlight> in the original data stream form a position pointed at by the backpointer in the original stream is moved to a position after the header <highlight><bold>60</bold></highlight> in the edited data stream. Thus, both the part <highlight><bold>61</bold></highlight> that was originally stored preceding the header and a part <highlight><bold>62</bold></highlight> that was originally stored after the header are now combined after the header. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The bit rate index in the header <highlight><bold>60</bold></highlight> is modified with respect to that in the original data stream, so as to make the header <highlight><bold>60</bold></highlight> indicate a larger distance to the next header <highlight><bold>63</bold></highlight> than in the original data stream. The bit rate in the modified header <highlight><bold>60</bold></highlight> is selected so that this distance is sufficient to allow space for the data that was included between the specified header <highlight><bold>60</bold></highlight> and the next header in the original stream, plus the frame data <highlight><bold>61</bold></highlight> that has been moved to a position between these headers. The bit rate is given its maximum possible value, or at least a value that results in a distance that is larger than needed. It has been found that in MP3 it is thus always possible to create sufficient distance. In general, the distance will not correspond exactly to the required amount of space, but will be larger than necessary. The resulting extra space is padded with dummy data. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows a trailing part of a further track <highlight><bold>50</bold></highlight> generated by the editing system. This track corresponds to the front part of the data stream of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. and ends at the position of the first valid header of the first track <highlight><bold>40</bold></highlight><highlight><italic>a </italic></highlight>of FIGS. <highlight><bold>4</bold></highlight> or <highlight><bold>5</bold></highlight>. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> Decoder <highlight><bold>16</bold></highlight> accesses the tracks using some access information, such as for example a file access table (FAT). Such a FAT contains pointers to the starting points of tracks, such as starting points <highlight><bold>41</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d. </italic></highlight></paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> When an MP3 decoder reads the track of <cross-reference target="DRAWINGS">FIG. 6</cross-reference> and the first one <highlight><bold>40</bold></highlight><highlight><italic>a </italic></highlight>of the tracks of FIGS. <highlight><bold>4</bold></highlight> or <highlight><bold>5</bold></highlight> are fed in succession to decoder <highlight><bold>16</bold></highlight>, decoder <highlight><bold>16</bold></highlight> will seamlessly decode the data corresponding to the data stream of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. In this case the decoder <highlight><bold>16</bold></highlight> first receives the track <highlight><bold>50</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, including a trailing part <highlight><bold>52</bold></highlight> that it will not use, because the trailing part <highlight><bold>52</bold></highlight> follows the data for the last valid header <highlight><bold>54</bold></highlight> in the track and because it is not pointed at by any next valid header in the track <highlight><bold>50</bold></highlight>. Subsequently, decoder <highlight><bold>16</bold></highlight> receives the leading part <highlight><bold>42</bold></highlight><highlight><italic>a </italic></highlight>of the first one of the tracks <highlight><bold>40</bold></highlight><highlight><italic>a</italic></highlight>, but it will decode only from the first valid header <highlight><bold>44</bold></highlight><highlight><italic>a </italic></highlight>that it encounters in the track <highlight><bold>40</bold></highlight><highlight><italic>a</italic></highlight>. Thus, the data corresponding to the last header <highlight><bold>54</bold></highlight> in the track of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is followed directly by the data corresponding to the first valid header <highlight><bold>44</bold></highlight><highlight><italic>a </italic></highlight>of the subsequent tracks. These headers correspond to successive headers <highlight><bold>20</bold></highlight><highlight><italic>c,d </italic></highlight>in the original data stream (<cross-reference target="DRAWINGS">FIG. 2</cross-reference>). </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> Alternatively, the decoder <highlight><bold>16</bold></highlight> can decode the other tracks <highlight><bold>40</bold></highlight><highlight><italic>b</italic></highlight>-<highlight><italic>d </italic></highlight>of FIGS. <highlight><bold>4</bold></highlight> or <highlight><bold>5</bold></highlight> following the track of <cross-reference target="DRAWINGS">FIG. 6</cross-reference> without transition. It does not matter where the data for the first valid header <highlight><bold>44</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d </italic></highlight>starts. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> It should be noted that the above-mentioned embodiments illustrate rather than limit the invention, and that those skilled in the art will be able to design many alternative embodiments without departing from the scope of the appended claims. In the claims, any reference signs placed between parentheses shall not be construed as limiting the claim. The word &lsquo;comprising&rsquo; does not exclude the presence of other elements or steps than those listed in a claim. The invention can be implemented by means of hardware comprising several distinct elements, and by means of a suitably programmed computer. In a device claim enumerating several means, several of these means can be embodied by one and the same item of hardware. The mere fact that certain measures are recited in mutually different dependent claims does not indicate that a combination of these measures cannot be used to advantage. </paragraph>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of editing a data stream of a type that comprises headers (<highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>f</italic></highlight>) and signal data interspersed with each other, each header (<highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>f</italic></highlight>) specifying a distance to a subsequent header (<highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>f</italic></highlight>), each header corresponding to a frame of signal data, the header being associated with a pointer (<highlight><bold>21</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>e</italic></highlight>) that points to a starting point (<highlight><bold>24</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>e</italic></highlight>) of the signal data for that frame relative to the header (<highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>f</italic></highlight>), the method comprising: 
<claim-text>receiving a command specifying a header (<highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>f</italic></highlight>) in an incoming data stream, the specified header corresponding to a position in the signal that has to serve as a start of a track; </claim-text>
<claim-text>extracting the track from the data stream, including a part (<highlight><bold>42</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>, <highlight><bold>61</bold></highlight>) of the data stream pointed at by the specified header (<highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>f</italic></highlight>) and preceding the specified header; </claim-text>
<claim-text>writing a new data stream (<highlight><bold>40</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>) of said type to a medium, the new data stream (<highlight><bold>40</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>) containing said header (<highlight><bold>44</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>, <highlight><bold>60</bold></highlight>) as first valid header and said part (<highlight><bold>42</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>, <highlight><bold>61</bold></highlight>) of the data stream preceding the specified header (<highlight><bold>44</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>) in the incoming data stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, the distance being specified in said type of data stream by means of a bitrate indication and a sampling frequency indication, the method comprising 
<claim-text>writing said part (<highlight><bold>61</bold></highlight>) of the data stream to the medium following said header (<highlight><bold>60</bold></highlight>); </claim-text>
<claim-text>writing said header (<highlight><bold>60</bold></highlight>) to the medium in modified form, the bit rate indication in the header (<highlight><bold>60</bold></highlight>) being modified so as to modify the distance between the header (<highlight><bold>60</bold></highlight>) and a succeeding header (<highlight><bold>63</bold></highlight>) to accommodate said part of the data stream (<highlight><bold>61</bold></highlight>) in addition to further data (<highlight><bold>62</bold></highlight>) from between the header (<highlight><bold>60</bold></highlight>) and the succeeding header (<highlight><bold>63</bold></highlight>) from the original stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein a leader (<highlight><bold>42</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>) containing said part is written to the medium at the beginning of the track (<highlight><bold>40</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>) preceding the specified header (<highlight><bold>44</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>), the leader (<highlight><bold>42</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>) having a predetermined length independent of the header (<highlight><bold>44</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>), the leader (<highlight><bold>42</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>) containing a copy of data from the data stream at least from a position pointed at by the pointer associated with the specified header (<highlight><bold>44</bold></highlight><highlight><italic>a</italic></highlight>-<highlight><italic>d</italic></highlight>). </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, comprising invalidating or removing a preceding header that precedes the specified header in the leader. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. An apparatus for editing a data stream of a type that comprises headers and signal data interspersed with each other, each header specifying a distance to a subsequent header, each header corresponding to a frame of signal data, the header being associated with a pointer that points to a starting point of the signal data for that frame relative to the header, the apparatus comprising: 
<claim-text>an input for receiving the data stream; </claim-text>
<claim-text>an input for receiving a command specifying a header in the data stream that has to serve as a start of a track; </claim-text>
<claim-text>an extraction unit for extracting the track from the data stream, including a part of the data stream preceding the specified header and pointed at by the header; </claim-text>
<claim-text>a writing unit for writing a new data stream of said type to an output, the new data stream containing said header as first valid header and said part of the data stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, the distance being specified in said type of data stream by means of a bitrate indication and a sampling frequency indication, the writing unit being arranged to 
<claim-text>write said data to the medium following said header; </claim-text>
<claim-text>write said header in modified form, the bit rate indication in the header being modified so as to modify the distance between the header and a succeeding header to accommodate said data in addition to further data from between the header and the succeeding header in the original stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, arranged to write a predetermined length of said part to the medium, the predetermined length being independent of a content of the data stream. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, comprising invalidating a preceding header that precedes the specified header in the leading part. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A machine readable medium carrying a data stream of a type that comprises headers and signal data interspersed with each other, each header specifying a distance to a subsequent header, each header corresponding to a frame of signal data, the header being associated with a pointer that points to a starting point relative to the header, the starting point indicating where the signal data for that header starts, the medium comprising 
<claim-text>information pointing to a start of said data stream in the medium, the data stream comprising at its start, prior to an initial valid header, an amount of information containing signal data pointed at by the pointer associated with the initial valid header. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A medium according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, the amount of information comprising one or more invalidated headers. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A medium according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, the medium a first and second track of an audio signal, the first and second track together representing a continuous part of the audio signal, the data stream corresponding to the second track, the first track corresponding to a further data stream of said type comprising at its end, past all signal data for valid headers in the further data stream a copy of said signal data pointed at by the initial valid header. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A medium carrying a data stream of a type that comprises headers and signal data interspersed with each other, each header specifying a distance to a subsequent header, each header corresponding to a frame of signal data, the header being associated with a pointer that points to a starting point relative to the header, the starting point indicating where the signal data for that header starts, the distance being specified in said type of data stream by means of a bitrate indication and a sampling frequency indication, the medium comprising 
<claim-text>a first header and following headers, the first header having a bit rate indication higher than the following headers.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>4</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004708A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004708A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004708A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004708A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
