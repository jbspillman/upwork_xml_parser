<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002482A1-20030102-D00000.TIF SYSTEM "US20030002482A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00001.TIF SYSTEM "US20030002482A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00002.TIF SYSTEM "US20030002482A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00003.TIF SYSTEM "US20030002482A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00004.TIF SYSTEM "US20030002482A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00005.TIF SYSTEM "US20030002482A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00006.TIF SYSTEM "US20030002482A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00007.TIF SYSTEM "US20030002482A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00008.TIF SYSTEM "US20030002482A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00009.TIF SYSTEM "US20030002482A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00010.TIF SYSTEM "US20030002482A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00011.TIF SYSTEM "US20030002482A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00012.TIF SYSTEM "US20030002482A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00013.TIF SYSTEM "US20030002482A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00014.TIF SYSTEM "US20030002482A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00015.TIF SYSTEM "US20030002482A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00016.TIF SYSTEM "US20030002482A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00017.TIF SYSTEM "US20030002482A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00018.TIF SYSTEM "US20030002482A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00019.TIF SYSTEM "US20030002482A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00020.TIF SYSTEM "US20030002482A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00021.TIF SYSTEM "US20030002482A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00022.TIF SYSTEM "US20030002482A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00023.TIF SYSTEM "US20030002482A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00024.TIF SYSTEM "US20030002482A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00025.TIF SYSTEM "US20030002482A1-20030102-D00025.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00026.TIF SYSTEM "US20030002482A1-20030102-D00026.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00027.TIF SYSTEM "US20030002482A1-20030102-D00027.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00028.TIF SYSTEM "US20030002482A1-20030102-D00028.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00029.TIF SYSTEM "US20030002482A1-20030102-D00029.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00030.TIF SYSTEM "US20030002482A1-20030102-D00030.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00031.TIF SYSTEM "US20030002482A1-20030102-D00031.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00032.TIF SYSTEM "US20030002482A1-20030102-D00032.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00033.TIF SYSTEM "US20030002482A1-20030102-D00033.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00034.TIF SYSTEM "US20030002482A1-20030102-D00034.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00035.TIF SYSTEM "US20030002482A1-20030102-D00035.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00036.TIF SYSTEM "US20030002482A1-20030102-D00036.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00037.TIF SYSTEM "US20030002482A1-20030102-D00037.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00038.TIF SYSTEM "US20030002482A1-20030102-D00038.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00039.TIF SYSTEM "US20030002482A1-20030102-D00039.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00040.TIF SYSTEM "US20030002482A1-20030102-D00040.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00041.TIF SYSTEM "US20030002482A1-20030102-D00041.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00042.TIF SYSTEM "US20030002482A1-20030102-D00042.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00043.TIF SYSTEM "US20030002482A1-20030102-D00043.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00044.TIF SYSTEM "US20030002482A1-20030102-D00044.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00045.TIF SYSTEM "US20030002482A1-20030102-D00045.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00046.TIF SYSTEM "US20030002482A1-20030102-D00046.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00047.TIF SYSTEM "US20030002482A1-20030102-D00047.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00048.TIF SYSTEM "US20030002482A1-20030102-D00048.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00049.TIF SYSTEM "US20030002482A1-20030102-D00049.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00050.TIF SYSTEM "US20030002482A1-20030102-D00050.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00051.TIF SYSTEM "US20030002482A1-20030102-D00051.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00052.TIF SYSTEM "US20030002482A1-20030102-D00052.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00053.TIF SYSTEM "US20030002482A1-20030102-D00053.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00054.TIF SYSTEM "US20030002482A1-20030102-D00054.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00055.TIF SYSTEM "US20030002482A1-20030102-D00055.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00056.TIF SYSTEM "US20030002482A1-20030102-D00056.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00057.TIF SYSTEM "US20030002482A1-20030102-D00057.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00058.TIF SYSTEM "US20030002482A1-20030102-D00058.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00059.TIF SYSTEM "US20030002482A1-20030102-D00059.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00060.TIF SYSTEM "US20030002482A1-20030102-D00060.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00061.TIF SYSTEM "US20030002482A1-20030102-D00061.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00062.TIF SYSTEM "US20030002482A1-20030102-D00062.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00063.TIF SYSTEM "US20030002482A1-20030102-D00063.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00064.TIF SYSTEM "US20030002482A1-20030102-D00064.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00065.TIF SYSTEM "US20030002482A1-20030102-D00065.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00066.TIF SYSTEM "US20030002482A1-20030102-D00066.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00067.TIF SYSTEM "US20030002482A1-20030102-D00067.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00068.TIF SYSTEM "US20030002482A1-20030102-D00068.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00069.TIF SYSTEM "US20030002482A1-20030102-D00069.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00070.TIF SYSTEM "US20030002482A1-20030102-D00070.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00071.TIF SYSTEM "US20030002482A1-20030102-D00071.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00072.TIF SYSTEM "US20030002482A1-20030102-D00072.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00073.TIF SYSTEM "US20030002482A1-20030102-D00073.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00074.TIF SYSTEM "US20030002482A1-20030102-D00074.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00075.TIF SYSTEM "US20030002482A1-20030102-D00075.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00076.TIF SYSTEM "US20030002482A1-20030102-D00076.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00077.TIF SYSTEM "US20030002482A1-20030102-D00077.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00078.TIF SYSTEM "US20030002482A1-20030102-D00078.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00079.TIF SYSTEM "US20030002482A1-20030102-D00079.TIF" NDATA TIF>
<!ENTITY US20030002482A1-20030102-D00080.TIF SYSTEM "US20030002482A1-20030102-D00080.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002482</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10141506</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020508</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L012/28</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>370</class>
<subclass>352000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>370</class>
<subclass>351000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Hierarchical data collection network supporting packetized voice communications among wireless terminals and telephones</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10141506</doc-number>
<kind-code>A1</kind-code>
<document-date>20020508</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09037535</doc-number>
<document-date>19980310</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6389010</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>09037535</doc-number>
<document-date>19980310</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08539817</doc-number>
<document-date>19951005</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>5726984</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Joseph</given-name>
<middle-name>J.</middle-name>
<family-name>Kubler</family-name>
</name>
<residence>
<residence-us>
<city>Boulder</city>
<state>CO</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Michael</given-name>
<middle-name>D.</middle-name>
<family-name>Morris</family-name>
</name>
<residence>
<residence-us>
<city>Cedar Rapids</city>
<state>IA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>John H. Sherman</name-1>
<name-2>c/o Legal Department</name-2>
<address>
<address-1>Intermec Technologies Corporation</address-1>
<address-2>550 2nd Street, S.E.</address-2>
<city>Cedar Rapids</city>
<state>IA</state>
<postalcode>52401</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A packet-based, hierarchical communication system, arranged in a spanning tree configuration, is described in which wired and wireless communication networks exhibiting substantially different characteristics are employed in an overall scheme to link portable or mobile computing devices. The network accommodates real time voice transmission both through dedicated, scheduled bandwidth and through a packet-based routing within the confines and constraints of a data network. Conversion and call processing circuitry is also disclosed which enables access devices and personal computers to adapt voice information between analog voice stream and digital voice packet formats as proves necessary. Routing pathways include wireless spanning tree networks, wide area networks, telephone switching networks, internet, etc., in a manner virtually transparent to the user. A voice session and associate call setup simulates that of conventional telephone switching network, providing well-understood functionality common to any mobile, remote or stationary terminal, phone, computer, etc. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS REFERENCE TO RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> Claiming Benefit Under 35 U.S.C. 120 </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This application is a continuation of U.S. application Ser. No. 09/037,535, filed Mar. 10, 1998, which is a continuation of U.S. application Ser. No. 08/539,817, filed Oct. 5, 1995, now U.S. Pat. No. 5,726,984 issued Ma. 10, 1998, said application Ser. No. 08/539,817 being a continuation in part of U.S. application Ser. No. 08/487,609, filed Jun. 7, 1995 (Attorney Docket Nos. 10082US12 and DN37998XE), which is a continuation in part of U.S. application Ser. No. a) 08/279,148, filed Jul. 22, 1994 (Attorney Docket Nos. 10082US11; DN37998XD); b) 07/876,629, filed Apr. 30, 1992 (Attorney Docket Nos. 92P275; DN36837D); and c) 08/267,758, filed Jul. 5, 1994 (Attorney Docket Nos. 10554US02; DN37613A). </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The application U.S. Ser. No. 08/279,148 is a continuation-in-part of: PCT Application Serial No. PCT/US94/05037 filed May 6, 1994 (Attorney Docket Nos. 10082WO08; DN37998XAX); U.S. application Ser. No. 08/205,639 filed Mar. 4, 1994 (Attorney Docket Nos. DN37139XXA; 10458US03); and U.S. application Ser. No. 08/275,821, filed Jun. 10, 1994 (Attorney Docket Nos. 10082US10; DN37998XC). </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> PCT Application Serial No. PCT/US94/05037 is based on U.S. application Ser. No. 08/198,404, filed Feb. 22, 1994 (Attorney Docket Nos. 10082US07; DN37998XA), which is itself a continuation of U.S. application Ser. No. 08/198,452, filed Feb. 18, 1994 (Attorney Docket Nos. 10082US06; DN37998X), which is in turn a continuation-in-part of U.S. application Ser. No. 08/168,478, filed Dec. 16, 1993 (Attorney Docket Nos. 10092US06; DN37998E), and PCT Application Serial No. PCT/US93/12628 filed Dec. 23, 1993 (Attorney Docket Nos. DN37967C and 10082WO01). The application U.S. Ser. No. 08/168,478 is a continuation-in-part of U.S. application Ser. No. 08/147,377 filed Nov. 3, 1993 (Attorney Docket No. DN37998D), which is a continuation-in-part of U.S. application Ser. No. 08/101,254 filed Aug. 3, 1993 (Attorney Docket No. DN37998C), which is itself a continuation-in-part of U.S. application Ser. No. 08/085,662 filed Jun. 29, 1993 (Attorney Docket No. DN37998B), which is itself a continuation-in-part of U.S. application Ser. No. 08/076,340 filed Jun. 11, 1993 (Attorney Docket No. DN37998A), which is in turn a continuation-in-part of U.S. application Ser. No. 08/062,457, filed May 11, 1993 (Attorney Docket No. DN37998). </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> PCT Application Serial No. PCT/US93/12628 is based on pending U.S. application Ser. No. 08/027,140 filed Mar. 5, 1993 (Attorney Docket Nos. DN37967B; 10082US05), which is itself a continuation-in-part of U.S. application Ser. No. 07/997,693 filed Dec. 23, 1992 (Attorney Docket Nos. DN37967A; 10005US02), now abandoned, which is a continuation-in-part of U.S. application Ser. No. 07/982,292 filed Nov. 27, 1992 (Attorney Docket Nos. DN37967; 92 P 837), now abandoned, which is itself a continuation-in-part of U.S. application Ser. No. 07/700,704 filed May 14, 1991 (Attorney Docket Nos. DN37834X; 91P383), now abandoned, which is itself a continuation-in-part of U.S. application Ser. No. 07/699,818 filed May 13, 1991 (Attorney Docket Nos. DN37834; 91P862), now abandoned. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The application U.S. Ser. No. 08/205,639 is a continuation-in-part of U.S. application Ser. No. 07/735,128 filed Jul. 22, 1991 (Attorney Docket Nos. DN37139XX; 91P326), which is itself a continuation-in-part of U.S. application Ser. No. 07/467,096 filed Jan. 18, 1990 (Attorney Docket Nos. DN37139), now U.S. Pat. No. 5,052,020. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> U.S. application Ser. No. 08/062,457 is a continuation in part of U.S. Ser. No. 07/876,776, filed Apr. 28, 1992 (Attorney Docket Nos. 92P334; DN36649XZB), which is itself a continuation in part of U.S. Ser. No. 07/854,115, filed Mar. 18, 1992 (Attorney Docket Nos. 92P241; DN36649XZA), which is in turn a continuation in part of U.S. Ser. No. 07/558,895, filed Jul. 25, 1990 (Attorney Docket Nos. 91P387; DN36649XZ). U.S. Ser. No. 07/558,895 is a continuation in part of U.S. Ser. No. 07/529,353, filed May 25, 1990 (Attorney Docket Nos. 91P869; DN36649XY), which is itself a continuation in part of U.S. Ser. No. 07/347,602, filed May 3, 1989 (Attorney Docket Nos. 91P386; DN36649XX), which is itself a continuation of U.S. Ser. No. 07/345,771, filed May 2, 1989 (Attorney Docket Nos. 91P844; DN36649Y), which is itself a continuation of U.S. Ser. No. 07/345,200, filed Apr. 28, 1989 (Attorney Docket Nos. 91P423; DN36649X), which is itself a continuation of U.S. Ser. No. 07/305,302, filed Jan. 31, 1989 (Attorney Docket Nos. 91P422; DN36649). </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The application U.S. Ser. No. 07/876,629 is also a continuation in part of U.S. Ser. No. 07/854,115, filed March 18, 1992 (Attorney Docket No. DN36649XZA), with its parentage as listed above. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The application U.S. Ser. No. 08/267,758 is a continuation in part of U.S. Ser. No. 07/748,150, filed Aug. 21, 1991 (Attorney Docket Nos. 10554US01; DN37613), now issued as U.S. Pat. No. 5,349,678 on Sep. 20, 1994.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">INCORPORATION BY REFERENCE </heading>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The above referenced applications, PCT Application No. PCT/US92/08610 filed Oct. 1, 1992, as published under International Publication No. WO 93/07691 on Apr. 15, 1993, together with U.S. Pat. No. 5,070,536, by Mahany et al., U.S. Pat. No. 4,924,426, by Sojka, and U.S. Pat. No. 4,910,794, by Mahany, are incorporated herein by reference in their entirety, including drawings and appendices, and hereby are made a part of this application. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The present invention relates generally to data communication networks having a plurality of wired and/or wireless access servers configured to support remote processing, data storage and voice communication. More specifically, this invention relates to the intelligent routing of packetized voice communication between telephones and radio terminals through wireless and hardwired channels in a data processing network. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> While the present invention is described herein with reference to illustrative embodiments for particular applications, it should be understood that the invention is not limited thereto. Those having ordinary skill in the art and access to the teachings provided herein will recognize additional modifications, applications and embodiments within the scope thereof and additional fields in which the present invention would be of significant utility. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> 2. Description of Related Art </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> To support data collection, multiple radio base station networks have been developed to overcome a variety of problems with single radio base station networks such as spanning physical radio wave penetration barriers, wasted transmission power by portable computing devices, etc. However, multiple radio base station networks have their own inherent problems. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> For example, in a multiple base station network employing a single shared channel, each base station transmission is prone to collision with neighboring base station transmissions in the overlapping coverage areas between the base stations. Therefore, it often proves undesirable for each base station to use a single or common communication channel. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> In contradistinction, to facilitate the roaming of portable or mobile devices from one coverage area to another, use of a common communication channel for all of the base stations is convenient. A roaming device may easily move between coverage areas without loss of connectivity to the network. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Such exemplary competing commonality factors have resulted in tradeoff decisions in network design. These factors become even more significant when implementing a frequency hopping spread spectrum network. Frequency hopping is a desirable transmission technique because of its ability to combat frequency selective fading, avoid narrowband interference, and provide multiple communications channels. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> Again, however, changing operating parameters between coverage areas creates difficulties for the roaming devices which move therebetween. In particular, when different communication parameters are used, a portable or mobile device roaming into a new base station coverage area is not able to communicate with the new base station without obtaining and synchronizing to the new parameters. This causes a communication backlog in data collection networks. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Such data collection networks and their communication protocols have been specifically designed for data collection and forwarding through wireless and hardwired links. They are designed in attempts to optimize overall data flow through the network. Among other flow optimizing techniques used, the data is segmented and packetized in preparation for transmission. Packet by packet, the data is transmitted as channel bandwidth becomes available. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Thus, instead of disabling a channel by dedicating bandwidth to service only a pair of participants exchanging potentially large amounts of data (data possibly having no immediate need), the channel is shared by many participants, each sending segments of data in packets whenever an opening in the channel occurs. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> In contrast, to support the delivery of real time voice, alternate network design constraints must be considered. For example, such networks often dedicated bandwidth to voice transmission exchanges. However, by dedicating channel bandwidth to voice, efficient communication of data through such networks is seriously impacted. Data communication would have to wait for longer periods of time until dedicated voice bandwidth has been released. Similarly, data communication would have to be immediately discontinued upon requests for voice bandwidth. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Thus, there is a need for a communication network that provides efficient distribution and utilization of network resources in support of both data and voice delivery. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> An object of the invention is to provide a method and apparatus wherein seamless voice and data communication is provided among both roaming devices within wireless portions of a communication network and stationary devices within hardwired portions of the network. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Another object of the present invention is to provide a hierarchical communications system for providing an efficient communication pathway for both data and voice. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Other objects, advantages, and novel features of the present invention will become apparent from the following detailed description of the invention when considered in conjunction with the accompanying drawings. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The present invention solves many of the foregoing problems in a variety of embodiments. For example, in one embodiment, a communication network is disclosed which operates to support voice and data communication within a premises. The communication network comprises a plurality of mobile network devices, a stationary network device, a wireless network, a hardwired network and a telephone. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Each mobile network device has a buffer that stores incoming digital voice information for a predetermined queuing period before beginning voice reproduction from the stored digital voice information. Each mobile network device uses the wireless network to selectively exchange voice and data packets with other mobile network devices. Similarly, the hardwired network is connected to both said stationary network device and the wireless network, and is used to route voice and data packets between the stationary network device and the plurality of mobile network devices which participate via the wireless network. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The telephone, which is connected to the stationary network device, captures, delivers, receives and reproduces voice in an analog voice stream form. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The stationary network device also has a buffer that stores digital voice information, received from the wireless network, for a predetermined queuing period before converting it into an analog voice stream. After conversion, the stationary network device delivers the analog voice stream to the telephone. In addition, the stationary network device converts analog voice streams received from the telephone into voice packets for delivery via the hardwired and wireless networks to a selected one of the mobile network devices. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> Further detail regarding this embodiment and variations thereof are also disclosed. For example, the predetermined queuing period can be determined through examining delays found in test signal routing. The stationary network device can be a computer. The wireless network may utilize a polling protocol and spanning tree routing. The stationary network device can provide call setup assistance for the telephone. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Moreover, the communication network may further comprisea telephone switching network, connected to the stationary network device, which selectively routes analog voice streams received from the telephone onto the telephone switching network. The stationary network device may also selectively route analog voice streams received from the telephone switching network to the telephone. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> Further detail regarding the present invention (and embodiments thereof) may be found in reference to the claims below, in view of the following detailed description and drawings. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1A</cross-reference> is a diagrammatic illustration of a hierarchal communication system built in accordance with the present invention. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1B</cross-reference> is a diagrammatic illustration of another hierarchal communication system built in accordance with the present invention. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1C</cross-reference> is a diagrammatic illustration of still another hierarchal communication system built in accordance with the present invention. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates an embodiment of a basic access interval structure used by a hierarchical network of the present invention. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 3A and 3B</cross-reference> illustrate the frequency of operation periodically changing corresponding to access interval boundaries in a frequency hopping communication protocol of the present invention. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 4A and 4B</cross-reference> illustrate more than one access interval being used per hop in a frequency hopping communication protocol of the present invention. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5A</cross-reference> illustrates an embodiment of an access interval used by the hierarchical network of the present invention wherein a reservation phase is Idle Sense Multiple Access. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> FIG. B illustrates an embodiment of an access interval used by the hierarchical network of the present invention wherein a device response follows a reservation poll. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6A</cross-reference> illustrates an embodiment of an access interval used by the hierarchical network of the present invention having multiple reservation slots for transmission of a Request For Poll signal. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6B</cross-reference> illustrates an embodiment of an access interval used by the hierarchical network of the present invention wherein general devices contend for channel access. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7A</cross-reference> illustrates a sequence in an access interval used by the hierarchical network of the present invention for transferring data from a remote device to a control point device. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7B</cross-reference> illustrates a sequence in an access interval used by the hierarchical network of the present invention for transferring data from a control point device to a remote device. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> illustrates a preferred embodiment of an access interval used by the hierarchical network of the present invention. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 9A and B</cross-reference> conceptually illustrate how multiple NETs may be employed in an idealized cellular-type installation according to the present invention. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> illustrates an access point coverage contour overlap for the multiple NETs Infrastructured Network of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> illustrates hopping sequence reuse in a multiple NET configuration of the present invention. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> illustrates a hierarchical infrastructured network of the present invention wherein a wireless link connects access points on separate hard wired LANs. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> illustrates a hierarchical infrastructured network of the present invention including a wireless access point. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> illustrates conceptually access points communicating neighboring access point information to facilitate roaming of portable/mobile devices. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> illustrates a secondary access interval used in the MicroLAN or peripheral LAN in the hierarchical communication network according to the present invention. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a flow chart illustrating the selection of an access point by a mobile computing device for communication exchange. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a flow chart illustrating a terminal maintaining synchronization with the network after it has gone to sleep for several access intervals. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a flow chart illustrating a terminal that maintains or achieves synchronization with the network after it has gone to sleep for several seconds. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 19A and 19B</cross-reference> are flow charts illustrating an access interval during inbound communication. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 20A and 20B</cross-reference> are flow charts illustrating an access interval during outbound communication. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> illustrates a sequence in an access interval used in the hierarchical communication network of the present invention with Time Division Multiple Access slots positioned at the end of the access interval. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> illustrates a sequence in an access interval used by the hierarchical network of the present invention with the Time Division Multiple Access slots positioned immediately following the SYNC. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> illustrates a sequence in an access interval used by the hierarchical network of the present invention with the Time Division Multiple Access slots positioned immediately following the SYNC and Reservation Poll. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> illustrates another sequence in an access interval used by the hierarchical network of the present invention with the Time Division Multiple Access slots positioned immediately following the SYNC. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> illustrates a portion of an access interval including the preamble, SYNC and Reservation Poll. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> illustrates the information contained in a sample SYNC message. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 27</cross-reference> illustrates the information contained in a sample Reservation Poll. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28A</cross-reference> illustrates a warehouse environment incorporating a communication network which maintains communication connectivity between the various network devices according to the present invention. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28B</cross-reference> illustrates other features of the present invention in the use of a vehicular LAN which is capable of detaching from the premises LAN when moving out of radio range of the premises LAN to perform a service, and reattaching to the premises LAN when moving within range to automatically report on the services rendered. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28C</cross-reference> illustrate other features of the present invention in the use of a vehicular LAN which, when out of range of the premises LAN, is still capable gaining access to the premises LAN via radio WAN communication. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29A</cross-reference> is a diagrammatic illustration of the use of a peripheral LAN supporting roaming data collection by an operator according to the present invention. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29B</cross-reference> is a diagrammatic illustration of another embodiment of a peripheral LAN which supports roaming data collection by an operator according to the present invention. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is a block diagram illustrating the functionality of RF transceivers built in accordance with the present invention. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 31</cross-reference> is a diagrammatic illustration of an alternate embodiment of the peripheral LAN shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 32</cross-reference> is a block diagram illustrating a channel access algorithm used by peripheral LAN slave devices in accordance with the present invention. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33A</cross-reference> is a timing diagram of the protocol used according to the present invention illustrating a typical communication exchange between a peripheral LAN master device having virtually unlimited power resources and a peripheral LAN slave device. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33B</cross-reference> is a timing diagram of the protocol used according to the present invention illustrating a typical communication exchange between a peripheral LAN master device having limited power resources and a peripheral LAN slave device. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33C</cross-reference> is also a timing diagram of the protocol used which illustrates a scenario wherein the peripheral LAN master device fails to service the peripheral LAN slave devices. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 34</cross-reference> is a timing diagram illustrating the peripheral LAN master device&apos;s servicing of both the higher power portion of the premises LAN as well as the lower power peripheral LAN subnetwork with a single or plural radio transceivers. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 35 and 36</cross-reference> are block diagrams illustrating additional power saving features according to the present invention wherein ranging and battery parameters are used to optimally select the appropriate data rate and power level of subsequent transmissions. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 37</cross-reference> illustrates an exemplary block diagram of a radio unit capable of current participation on multiple LANs according to the present invention. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 38</cross-reference> illustrates an exemplary functional layout of the frequency generator of <cross-reference target="DRAWINGS">FIG. 37</cross-reference> according to one embodiment of the present invention. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 39</cross-reference> illustrates further detail of the receiver RF processing circuit of <cross-reference target="DRAWINGS">FIG. 37</cross-reference> according to one embodiment of the present invention. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 40</cross-reference> illustrates further detail of the receiver signal processing circuit of <cross-reference target="DRAWINGS">FIG. 37</cross-reference> according to one embodiment of the present invention. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 41</cross-reference> illustrates further detail of the receiver signal processing circuit of <cross-reference target="DRAWINGS">FIG. 37</cross-reference> according to another embodiment of the present invention. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 42</cross-reference> illustrates further detail of the memory unit of <cross-reference target="DRAWINGS">FIG. 37</cross-reference> according to one embodiment of the present invention. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 43</cross-reference> illustrates a software flow chart describing the operation of the control processor in controlling the battery powered radio unit to participate on multiple LANs. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 44</cross-reference> is an alternate embodiment of the software flow chart wherein the control processor participates on a master LAN and, when needed, on a slave LAN. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 45</cross-reference> illustrates another embodiment of the communication system of the present invention as adapted for servicing a retail store environment. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 46</cross-reference><highlight><italic>a</italic></highlight>-<highlight><italic>b </italic></highlight>illustrate a further embodiment of the communication system of the present invention which illustrate the use of access servers that support local processing and provide both data and program migration. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 47</cross-reference><highlight><italic>a </italic></highlight>is a flow diagram which illustrates the functionality of the access servers of <cross-reference target="DRAWINGS">FIGS. 46</cross-reference><highlight><italic>a</italic></highlight>-<highlight><italic>b </italic></highlight>in handling data, processing and direct routing requests. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 47</cross-reference><highlight><italic>b </italic></highlight>is a flow diagram utilized by the access servers of <cross-reference target="DRAWINGS">FIGS. 46</cross-reference><highlight><italic>a</italic></highlight>-<highlight><italic>b </italic></highlight>to manage the migration of data and program code from a source storage and/or processing device toward an end-point device. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 48</cross-reference> is a schematic diagram of the access servers of <cross-reference target="DRAWINGS">FIGS. 46</cross-reference><highlight><italic>a</italic></highlight>-<highlight><italic>b </italic></highlight>illustrating an exemplary circuit layout which supports the functionality described in relation to <cross-reference target="DRAWINGS">FIGS. 47</cross-reference><highlight><italic>a</italic></highlight>-<highlight><italic>b. </italic></highlight></paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 49</cross-reference> is a specific exemplary embodiment of an access point in a multi-hop communication network utilized for remote processing of 2-D (two-dimension) code information. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 50</cross-reference> is a schematic diagram similar to that shown in <cross-reference target="DRAWINGS">FIG. 48</cross-reference> which illustrates the circuit layout used in the access point of <cross-reference target="DRAWINGS">FIG. 49</cross-reference> to process the 2-D code information. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 51</cross-reference><highlight><italic>a</italic></highlight>-<highlight><italic>b </italic></highlight>are flow diagrams illustrating the operation of the 2-D code processing access point of FIGS. <highlight><bold>49</bold></highlight>-<highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 52</cross-reference> illustrates the structuring of 2-D code information so as to support a hierarchical recognition strategy as used by the access point of FIGS. <highlight><bold>49</bold></highlight>-<highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 53</cross-reference> is a diagram illustrating an exemplary 2-D code wherein the hierarchical structure of <cross-reference target="DRAWINGS">FIG. 52</cross-reference> is implemented. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 54</cross-reference> is a flow diagram illustrating the functionality of the access point of FIGS. <highlight><bold>49</bold></highlight>-<highlight><bold>50</bold></highlight> in carrying out the hierarchical recognition strategy of <cross-reference target="DRAWINGS">FIG. 52</cross-reference>. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a </italic></highlight>is a diagram illustrating the overall flow of both data and voice through another embodiment of the hierarchical communication network of the present invention. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>b </italic></highlight>is a diagram which illustrates a summary of the various types of communication pathways for setting up voice sessions between a source and destination network device. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 56</cross-reference><highlight><italic>a </italic></highlight>illustrates an embodiment of the conversion circuitry contained within a computer card <highlight><bold>5601</bold></highlight> which plugs into the computer <highlight><bold>5515</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a. </italic></highlight></paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 56</cross-reference><highlight><italic>b </italic></highlight>illustrates an alternate embodiment of the conversion circuitry of <cross-reference target="DRAWINGS">FIG. 56</cross-reference><highlight><italic>a </italic></highlight>wherein instead of using an analog subtraction process to separate outgoing voice signals from the combined incoming and outgoing signals, a digital subtraction process is used (at a subtraction circuit <highlight><bold>5653</bold></highlight>). </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 57</cross-reference> is an illustration of the back of the telephone <highlight><bold>5525</bold></highlight> (also illustrated in <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) as built in accordance with the present invention. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 58</cross-reference> is a schematic block diagram which illustrates the implementation of one embodiment of the conversion circuitry within the telephone <highlight><bold>5525</bold></highlight> of <cross-reference target="DRAWINGS">FIGS. 55 and 57</cross-reference>. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 59</cross-reference> is a block diagram illustrating the packet processing functionality of the access devices illustrated in <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a. </italic></highlight></paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 60</cross-reference> is a flow diagram illustrating the functionality of a source device in the setup of a voice session. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 61</cross-reference> is a flow diagram illustrating the functionality of the source device (or assisting access device) when performing call setup. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 62</cross-reference> is a flow diagram illustrating ongoing voice session processing performed by a source device (or its assisting access device if needed) and destination device (or its assisting access device if needed). </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 63</cross-reference> is a diagram which illustrates further application of the present invention in an embodiment which transparently utilizes internet connectivity to support low-cost voice sessions. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1A</cross-reference> illustrates a hierarchical communication system <highlight><bold>10</bold></highlight> within a building in accordance with the present invention. The illustrated hierarchical communication system <highlight><bold>10</bold></highlight> includes a local area network (LAN) for maintaining typical communication flow within the building premises, herein referred to as a premises LAN. The premises LAN is designed to provide efficient end-to-end routing of information among hardwired and wireless, stationary and roaming devices located within the hierarchical communication system <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> The premises LAN consists of an infrastructure network comprising radio base stations, i.e., wireless access points <highlight><bold>15</bold></highlight>, and a data base server <highlight><bold>16</bold></highlight> which may be part of a more extensive, wired LAN (not shown). Herein, base stations which participate in routing and relaying data throughout the communication network are referred to as &ldquo;access points.&rdquo; If they also participate in the storage or migration of data and program code or in local processing, the base stations are referred to herein as &ldquo;access servers.&rdquo; As will become apparent below, an access point may be modified with additional circuitry and/or programming resources to become an access server. Additionally, access servers and access points are both referred to herein as &ldquo;access devices.&rdquo;</paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> The access points <highlight><bold>15</bold></highlight> may communicate with each other via hardwired links, such as Ethernet, RS232, etc., or via wireless (radio frequency) links. A plurality of roaming terminal devices, such as a roaming computing device <highlight><bold>20</bold></highlight>, participate in the premises LAN of the hierarchical communication network <highlight><bold>10</bold></highlight> to exchange information with: 1) other roaming computing devices; 2) the data base server <highlight><bold>16</bold></highlight>; 3) other devices which might be associated with data base server <highlight><bold>16</bold></highlight> (not shown); and 4) any other devices accessible via the premises LAN (not shown). A roaming computing device can be, for example, a hand-held computer terminal or vehicle mounted computer terminal (vehicle terminal). </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> In most circumstances, the premises LAN provides a rather optimal solution to the communication needs of a given network. However, in some circumstances, to serve a variety of particular communication needs, the premises LAN does not offer the optimal solution. Instead of relying on the premises LAN for such communications, when and where beneficial, alternate LANs are spontaneously created by (or with) network devices, such as the roaming computing device <highlight><bold>20</bold></highlight>, within the hierarchical communication system <highlight><bold>10</bold></highlight>. Such spontaneously created LANs are referred to herein as spontaneous LANs. After the immediate benefits end, i.e., a task has been completed, or if the participants of the spontaneous LAN move out of range of each other, the spontaneous LAN terminates operation. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> An exemplary spontaneous LAN involves the use of peripheral devices as illustrated in <cross-reference target="DRAWINGS">FIG. 1A</cross-reference>. Although bulk data transfer destined for a peripheral device <highlight><bold>23</bold></highlight>, such as a printer, from the roaming computing device <highlight><bold>20</bold></highlight> might be communicated through the premises LAN, a more direct interconnection proves less intrusive, saves power, and offers a lower cost solution. Specifically, instead of communicating through the premise LAN, the roaming computing device <highlight><bold>20</bold></highlight> needing to print: 1) identifies the presence of an available printer, the peripheral device <highlight><bold>23</bold></highlight>; 2) establishes an RF link (binds) with the peripheral device <highlight><bold>23</bold></highlight>; 3) directly begins transferring the bulk data for printing; and <highlight><bold>4</bold></highlight>) lastly, when the roaming terminal finishes the transfer, the spontaneous LAN with the peripheral device <highlight><bold>23</bold></highlight> terminates. A spontaneous LAN created between the computing devices and peripheral devices is herein referred to as a peripheral LAN. Other types of spontaneous LANs, such as vehicular LANs, are also possible. Embodiments described below identify vehicular LANs and wide area radio networks (WANs) which are part of the hierarchical communication system according to the present invention. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> Although a spontaneous LAN may operate completely independent of the premises LAN, it is more likely that there will be some degree of coordination between the two. For example, while participating in the peripheral LAN, the roaming computing device <highlight><bold>20</bold></highlight> may terminate participation in the premises LAN, and vice versa. Alternately, the roaming computing device <highlight><bold>20</bold></highlight> may only service the peripheral LAN when specific participation on the premises LAN is not required, or vice versa. Moreover, the roaming computing device <highlight><bold>20</bold></highlight> may attempt to service each peripheral LAN as necessary in a balanced time-sharing fashion, placing little priority upon either LAN. Thus, based on the protocols and hardware selected, a spontaneous LAN can be configured so as to exist hierarchically above, below, at the same level, or independent of the premises LAN. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> Generally, to design a given LAN configuration, only the characteristics of that LAN are considered for optimization purposes. However, in the hierarchical communication system of the present invention, the operation of other LANs must also be taken into account. For example, because of the roaming computing devices participation in both the premises and peripheral LANs, the requirements and operation of the premises LAN must be taken into consideration when defining the peripheral LAN, and vice versa. Thus, the hierarchical communication system of the present invention provides a series of tightly coupled radio LANs and WANs with radio transceiver and communication protocol designs which take into consideration such factors as cost, weight, power conservation, channel loading, response times, interference, communication flow, etc., as modified by a primary factor of multiple participation. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> The peripheral LAN replaces hardwired connection between a roaming computing device and associated peripherals. In a typical configuration, a peripheral LAN will consist of one or more peripherals slaved to a single master roaming computing device, although multiple master roaming computing devices are possible. Peripheral devices may be printers, code scanners, magnetic card readers, input styluses, etc. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> Each of the peripheral devices <highlight><bold>22</bold></highlight> has a built-in radio transceiver to communicate with the roaming computing devices <highlight><bold>20</bold></highlight>. The roaming computing devices <highlight><bold>20</bold></highlight> are configured with built-in radio transceivers capable of communicating on both the peripheral and premises LAN. The access points <highlight><bold>15</bold></highlight> may be configured with radio transceivers only capable of communicating in the premises LAN. In alternate embodiments, as described below, the access points <highlight><bold>15</bold></highlight> might instead be configured to participate on both the premises and peripheral LANs. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> In particular, the peripheral LAN is intended to provide communications between two or more devices operating within near proximity, e.g., distances of a few tens of feet. The majority of constituents of the peripheral LAN are generally devices that do not require access to resources outside their immediate group, or which can suffice with indirect access through devices which participate outside their immediate peripheral LAN group. In contradistinction, the premises LAN is intended to provide communications between relatively many devices operating across great distances throughout a building. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> The characteristics of the peripheral LAN permit the use of radio transceivers of lower cost, lower power consumption, and generally more simplistic operation than permitted by the premises LAN. However, the operation of the peripheral LAN is adapted for integration with the premises LAN so that a radio transceiver and protocol designed for operation on the premises LAN includes features which allow concurrent or sequentially concurrent operation on the peripheral LAN. For example, by selecting similar communication hardware characteristics and integrating protocols, communication within the premises and peripheral LANs may be achieved with a single radio transceiver. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> In one embodiment, radio communication through the premises LAN, i.e., among the access points <highlight><bold>15</bold></highlight> and the roaming computing device <highlight><bold>20</bold></highlight>, utilizes relatively higher-power spread-spectrum frequency-hopping communication with a reservation access protocol. The reservation access protocol facilitates frequency-hopping and supports adaptive data rate selection. Adaptive data rate selection is based upon the quality of communication on the premises LAN radio channel. Radio communication through the peripheral LAN utilizes a relatively lower-power single frequency communication also with a reservation access protocol. As more fully described below, the coordinated use of reservation access protocols in the peripheral and premises LANs maximize information flow while minimizing conflicts between devices participating in the two LANs. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 1B, a</cross-reference> small hierarchal communication system <highlight><bold>30</bold></highlight> built in accordance with the present invention is shown. An access point <highlight><bold>33</bold></highlight> and two roaming or mobile computing devices <highlight><bold>35</bold></highlight> and <highlight><bold>36</bold></highlight> form a premises LAN <highlight><bold>37</bold></highlight>. The premises LAN <highlight><bold>37</bold></highlight> provides for communication among the mobile computing devices <highlight><bold>35</bold></highlight> and <highlight><bold>36</bold></highlight> and a host computer <highlight><bold>34</bold></highlight>. The mobile computing devices <highlight><bold>35</bold></highlight> and <highlight><bold>36</bold></highlight> can roam anywhere within the range of the access point <highlight><bold>33</bold></highlight> and still communicate with the host computer <highlight><bold>34</bold></highlight> via the access point <highlight><bold>33</bold></highlight>. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> Two peripheral LANs <highlight><bold>40</bold></highlight> and <highlight><bold>41</bold></highlight> allow for wireless communication between each mobile computing device <highlight><bold>35</bold></highlight> and <highlight><bold>36</bold></highlight> and its respective peripheral devices <highlight><bold>43</bold></highlight>, <highlight><bold>44</bold></highlight> and <highlight><bold>45</bold></highlight> when the mobile computing device is not communicating on the premises LAN <highlight><bold>37</bold></highlight>. Specifically, the peripheral LAN <highlight><bold>40</bold></highlight> consists of the mobile computing device <highlight><bold>35</bold></highlight> and the peripheral device <highlight><bold>43</bold></highlight>, while the peripheral LAN <highlight><bold>41</bold></highlight> consists of the mobile computing device <highlight><bold>36</bold></highlight> and the two peripheral devices <highlight><bold>44</bold></highlight> and <highlight><bold>45</bold></highlight>. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1C</cross-reference> illustrates another embodiment according to the present invention of a larger hierarchal communication system <highlight><bold>50</bold></highlight>. The host computer <highlight><bold>55</bold></highlight> is connected to access points <highlight><bold>56</bold></highlight>, <highlight><bold>57</bold></highlight>, <highlight><bold>58</bold></highlight> and <highlight><bold>59</bold></highlight>. The host computer <highlight><bold>55</bold></highlight> and the access points <highlight><bold>56</bold></highlight>, <highlight><bold>57</bold></highlight>, <highlight><bold>58</bold></highlight> and <highlight><bold>59</bold></highlight> provide the infrastructure for the premises LAN. The access points need not be hardwired together. For example, as illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>C, the access points <highlight><bold>56</bold></highlight>, <highlight><bold>57</bold></highlight> and <highlight><bold>58</bold></highlight> access each other and the host computer <highlight><bold>55</bold></highlight> via a hardwired link, while the access point <highlight><bold>59</bold></highlight> accomplishes such access via a wireless link with the access point <highlight><bold>58</bold></highlight>. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> The access points <highlight><bold>56</bold></highlight>, <highlight><bold>58</bold></highlight> and <highlight><bold>59</bold></highlight> can support multiple mobile computing devices. For example, the access point <highlight><bold>56</bold></highlight> uses a frequency-hopping communication protocol for maintaining communication with mobile computing devices <highlight><bold>61</bold></highlight> and <highlight><bold>62</bold></highlight>. Moreover, each of the mobile computing devices may roam out of range of the access point with which they have been communicating and into the range of an access point with which they will at least temporarily communicate. Together, the host computer <highlight><bold>55</bold></highlight> and the access points <highlight><bold>56</bold></highlight>, <highlight><bold>57</bold></highlight>, <highlight><bold>58</bold></highlight> and <highlight><bold>59</bold></highlight> and mobile computing devices <highlight><bold>61</bold></highlight>, <highlight><bold>62</bold></highlight>, <highlight><bold>64</bold></highlight>, <highlight><bold>65</bold></highlight> and <highlight><bold>66</bold></highlight> constitute a premises LAN. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> More particularly, each access point operates with a different set of communication parameters. For example, each access point may use a different frequency hopping sequence. Additionally, different access points may not employ a common master clock and will not be synchronized so as to have the frequency hopping sequences start at the same time. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> Mobile computing devices <highlight><bold>61</bold></highlight>, <highlight><bold>62</bold></highlight>, <highlight><bold>64</bold></highlight>, <highlight><bold>65</bold></highlight> and <highlight><bold>66</bold></highlight> are capable of roaming into the vicinity of any of the access points <highlight><bold>56</bold></highlight>, <highlight><bold>58</bold></highlight> and <highlight><bold>59</bold></highlight> and connecting thereto. For example, mobile computing device <highlight><bold>62</bold></highlight> may roam into the coverage area of access point <highlight><bold>58</bold></highlight>, disconnecting from access point <highlight><bold>56</bold></highlight> and connecting to access point <highlight><bold>58</bold></highlight>, without losing connectivity with the premises LAN. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> Each mobile computing device <highlight><bold>61</bold></highlight>, <highlight><bold>62</bold></highlight>, <highlight><bold>64</bold></highlight>, <highlight><bold>65</bold></highlight> and <highlight><bold>66</bold></highlight> also participates with associated peripherals in a peripheral LAN. Each peripheral LAN is made up of the master device and its slave device. Similarly, as illustrated, the access point <highlight><bold>57</bold></highlight> is shown as a direct participant in not only the premises LAN but also in the peripheral LAN. The access point <highlight><bold>57</bold></highlight> may have either limited or full participation in the premises LAN. For example, the access point <highlight><bold>57</bold></highlight> may be configured as a mobile computing device with the full RF capability of transmission in both the premises and peripheral LANs. Instead, however, participation in the premises LAN may be limited to communicating through the hardwired link, effectively dedicating the access point <highlight><bold>57</bold></highlight> to the task of servicing peripherals. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> Although the use of a plurality of built-in radio transceivers could be used so as to permit simultaneous participation by a single device, factors of cost, size, power and weight make it desirable to only build-in a single radio transceiver capable of multiple participation. Furthermore, even where a plurality of radio transceivers are built-in, simultaneous participation may not be possible depending upon the potential transmission interference between transceivers. In fact, full simultaneous participation may not be desirable at least from a processing standpoint when one transceiver, servicing one LAN, always or usually takes precedence over the other. Justification for such precedence generally exists in a premises LAN over a peripheral LAN. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> For example, communication flow in most premises LANs must be fast, efficient and rather robust when considering the multitude of participants that operate thereon. In the peripheral LAN, however, response times and other transmission related delays are generally more acceptable&mdash;even adding extra seconds to a peripheral printer&apos;s print time will usually not bother the user. Thus, in such communication environments, it may be desirable to design the transmitters and associated protocols so that the premises LAN takes precedence over the peripheral LAN. This may yield a communication system where fully simultaneous participation in both the premises and peripheral LANs does not exist. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> In communication environments wherein fully simultaneous participation does not exist or is not desired, transmitter circuitry might be shared for participation in both the premises and peripheral LANs. Similarly, in such environments, the communication protocol for the peripheral LAN can be tightly coupled with the protocol for the premises LAN, i.e., integrated protocols, so as to accommodate multiple participation. Moreover, one protocol might be designed to take precedence over the other. For example, the premises LAN protocol might be designed so as to minimize participation or response time in the peripheral LAN. As described in more detail below, such transceiver and protocol analysis also takes place when considering additional multiple participation in the vehicular LAN and WAN environments. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates an embodiment of a communication protocol for the premises LAN which uses a basic Access Interval <highlight><bold>200</bold></highlight> (&ldquo;AI&rdquo;) structure according to the present invention. Generally, an Access Interval is the basic communication unit, a fixed block of time, that allocates bandwidth to synchronization, media access, polled communications, contention-based communications, and scheduled services. The Access Interval in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> includes a SYNC header <highlight><bold>201</bold></highlight> generated by a Control Point (&ldquo;CP&rdquo;) device of a NET. The term NET describes a group of users of a given hopping sequence or a hopping sequence itself. The Control Point device is generally the access point <highlight><bold>15</bold></highlight> referenced above with regard to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The SYNC header <highlight><bold>201</bold></highlight> is used by constituents of the NET to attain and maintain hopping synchronization. A reservation phase <highlight><bold>203</bold></highlight> follows permitting a reservation poll, which provides the NET constituents an opportunity to gain access to media. A sessions frame <highlight><bold>205</bold></highlight> is next allocated for communication protocol. A frame <highlight><bold>207</bold></highlight> follows for optional time division multiple access (&ldquo;TDMA&rdquo;) slots in order to accommodate scheduled services. Scheduled services, for example, real time voice or slow scan video, are such that a dedicated time slot may be required to provide acceptable quality of service. However, as described in more detail below in relation to <cross-reference target="DRAWINGS">FIG. 55</cross-reference>, for example, acceptable real-time voice support is possible without dedicating time slots. The function of frames <highlight><bold>201</bold></highlight>, <highlight><bold>203</bold></highlight>, <highlight><bold>205</bold></highlight> and <highlight><bold>207</bold></highlight> will be discussed in greater detail below. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> illustrates a sequence in an access interval <highlight><bold>2100</bold></highlight> with the Time Division Multiple Access slots <highlight><bold>2113</bold></highlight> positioned at the end of the access interval <highlight><bold>2100</bold></highlight>. In the present example, if this were also a HELLO interval, the HELLO would immediately follow the SYNC <highlight><bold>1201</bold></highlight>. Location of the Time Division Multiple Access slots at such a position provides certain advantages including, for example, 1) the SYNC <highlight><bold>2101</bold></highlight>, HELLO (not shown), Reservation Poll <highlight><bold>2103</bold></highlight>, may all be combined into a single transmission (concatenated frames); 2) hopping information may be moved to or included in the Reservation Poll <highlight><bold>2103</bold></highlight> allowing for a shorter preamble in the SYNC <highlight><bold>2101</bold></highlight>; and 3) the HELLO messages will occur early in the Access Interval <highlight><bold>2100</bold></highlight> providing for shorter periods during which a sleeping terminal&apos;s receiver is on. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> The Time Division Multiple Access slots may also be located at different points within the access interval. Positioning the Time Division Multiple Access slots allow for various systemic advantages. Referring now to <cross-reference target="DRAWINGS">FIG. 22</cross-reference>, an access interval <highlight><bold>2200</bold></highlight> is illustrated showing the Time Division Multiple Access slots <highlight><bold>2203</bold></highlight> immediately following the SYNC <highlight><bold>2201</bold></highlight>. Location of the Time Division Multiple Access slots <highlight><bold>2203</bold></highlight> at this position provides certain advantages including, for example, 1) better timing accuracy is achieved when the Time Division Multiple Access slots <highlight><bold>2203</bold></highlight> immediately follow the SYNC <highlight><bold>2201</bold></highlight>; 2) session overruns do not interfere with the Time Division Multiple Access slots <highlight><bold>2203</bold></highlight>; 3) devices which do not use the Time Division Multiple Access slots <highlight><bold>2203</bold></highlight> do not necessarily need to be informed of the Time Division Multiple Access slot allocation; and 4) HELLO message may follow Time Division Multiple Access slots <highlight><bold>2203</bold></highlight>, Reservation Slots <highlight><bold>2207</bold></highlight> or Reservation Resolution Poll <highlight><bold>2209</bold></highlight>. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 23</cross-reference>, an access interval <highlight><bold>2300</bold></highlight> is illustrated showing the Time Division Multiple Access slots <highlight><bold>2305</bold></highlight> immediately following the SYNC <highlight><bold>2301</bold></highlight> and the Reservation Poll <highlight><bold>2303</bold></highlight>. In the present example, if this were a HELLO interval, a HELLO message would immediately follow the Reservation Resolution Poll <highlight><bold>2309</bold></highlight>. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> Location of the Time Division Multiple Access slots <highlight><bold>2305</bold></highlight> at the position shown in <cross-reference target="DRAWINGS">FIG. 23</cross-reference> provides certain advantages including, for example, 1) the Time Division Multiple Access slot timing is keyed to SYNC <highlight><bold>2301</bold></highlight> for better accuracy; 2) the number of Time Division Multiple Access slots <highlight><bold>2305</bold></highlight> may be indicated in SYNC <highlight><bold>2301</bold></highlight> or the Reservation Poll <highlight><bold>2303</bold></highlight>, providing greater flexibility; 3) session frame overruns do not interfere with Time Division Multiple Access slots <highlight><bold>2305</bold></highlight>; 4) only one maintenance transmission is required per Access Interval <highlight><bold>2300</bold></highlight>; and 5) hopping information may be moved to or included in the Reservation Poll <highlight><bold>2303</bold></highlight>, permitting a shorter preamble in SYNC <highlight><bold>2301</bold></highlight>. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> In the access interval <highlight><bold>2300</bold></highlight> configuration shown in <cross-reference target="DRAWINGS">FIG. 23</cross-reference>, it is possible that the Time Division Multiple Access slots <highlight><bold>2305</bold></highlight> and the response slots <highlight><bold>2307</bold></highlight> could be the same. The Reservation Poll <highlight><bold>2303</bold></highlight> would allocate the correct number of slots and indicate which are reserved for Time Division Multiple Access. For example, to use Idle Sense Multiple Access <highlight><bold>1</bold></highlight> slot) with 1 inbound and 1 outbound Time Division Multiple Access slots, three slots would be allocated with the first two slots reserved. The appropriate Time Division Multiple Access slot duration is 80 bits at a hop rate of 200 hops per second which is just about the expected duration of a Request for Poll. At slower hop rates, multiple slots could be allocated to Time Division Multiple Access allowing the Time Division Multiple Access slot duration to be constant regardless of hop rate. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 24</cross-reference>, another access interval <highlight><bold>2400</bold></highlight> is illustrated showing the Time Division Multiple Access slots <highlight><bold>2403</bold></highlight> immediately following the SYNC <highlight><bold>2401</bold></highlight>. In this example the Poll Message Queue <highlight><bold>2405</bold></highlight> immediately follows the Time Division Multiple Access slots <highlight><bold>2403</bold></highlight>. The configuration shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference> provides for certain advantages including, for example, 1) the Time Division Multiple Access slot timing is keyed to SYNC <highlight><bold>2401</bold></highlight> for better accuracy; and 2) session frame overruns do not interfere with Time Division Multiple Access slots <highlight><bold>2403</bold></highlight>. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> The configurations shown in <cross-reference target="DRAWINGS">FIG. 21</cross-reference> and in <cross-reference target="DRAWINGS">FIG. 23</cross-reference> are preferred because they allow the Reservation Poll messages to be transmitted immediately following the SYNC and because of the power management and interference reduction advantages. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> In one embodiment of the Access Interval structure, all message transmissions use standard high-level data link control (&ldquo;HDLC&rdquo;) data framing. Each message is delimited by High-Level Data Link Control Flags, consisting of the binary string 01111110, at the beginning of the message. A preamble, consisting of a known data pattern, precedes the initial FLAG. This preamble is used to attain clock and bit synchronization prior to the start of data. Receiver antenna selection is also made during the preamble for antenna diversity. A CRC for error detection immediately precedes the ending FLAG. Data is NRZ-I (differentially) encoded to improve data clock recovery. High-Level Data Link Control NRZ-I data is run-length-limited to six consecutive bits of the same state. Alternatively, a shift register scrambler could be applied instead of differential encoding to obtain sufficient transitions for clock recovery. Data frames may be concatenated, with two or more frames sent during the same transmission, with a single FLAG separating them. An example of this is SYNC, followed by a HELLO or Reservation Poll (SYNC, HELLO and Reservation Poll are discussed more fully below). </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> While much of the following discussion centers on the use of frequency hopping in the premises LAN, the Access Interval structure of the present invention is also suitable for single channel and direct sequence spread spectrum systems. The consistent timing of channel access, and the relative freedom from collisions due to channel contention, provide desirable benefits in systems that support portable, battery powered devices regardless of modulation type or channelization. Functions that are unique to frequency hopping may be omitted if other channelization approaches are used. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 3</cross-reference><highlight><italic>a </italic></highlight>and <highlight><bold>3</bold></highlight><highlight><italic>b </italic></highlight>illustrate the frequency of operation periodically changing corresponding to Access Interval boundaries in a frequency hopping system. Frequency hopping systems use a hopping sequence, which is a repeating list of frequencies of length (n) selected in a pseudo random order and is known to all devices within a coverage area. <cross-reference target="DRAWINGS">FIG. 3</cross-reference><highlight><italic>a </italic></highlight>illustrates a frequency hopping system having one Access Interval <highlight><bold>301</bold></highlight> per frequency hop (the hop occurring every 10 milliseconds) and a length of <highlight><bold>79</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 3</cross-reference><highlight><italic>b </italic></highlight>illustrates a frequency hopping system having one Access Interval <highlight><bold>303</bold></highlight> per frequency hop (the hop occurring every 20 milliseconds) and a length of 79. The 20 ms time frame is preferred for a protocol stack that uses a maximum network layer frame of up to 1536 bytes payload while maintaining two real time voice communications channels. Access interval duration may be optimized for other conditions. Access Interval length is communicated to the NET during the SYNC portion of the Access Interval. This allows Access Interval duration, and other NET parameters to be adjusted without reprogramming every device within the NET. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> The Access Interval is a building block. The length of the Access Interval can be optimized based on network layer packet size, expected mix of Bandwidth on Demand (&ldquo;BWOD&rdquo;) and Scheduled Access traffic, expected velocities of devices within the NET, acceptable duration of channel outages, latency or delay for scheduled services, etc. The preferred Access Interval duration of 20 ms (and maximum packet length of 256 Bytes at 1 MBIT/sec) represents a value chosen for systems with device velocities up to 15 MPH, and a mix between Bandwidth On Demand and scheduled service traffic. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> Within a frequency hopping network, one or more Access Intervals may be used during each dwell in a frequency hopping system. A dwell is the length of time (d) each frequency in the hopping sequence is occupied by the system. For example, <cross-reference target="DRAWINGS">FIGS. 4</cross-reference><highlight><italic>a </italic></highlight>and <highlight><bold>4</bold></highlight><highlight><italic>b </italic></highlight>show illustrations of cases where more than one 20 ms Access Interval <highlight><bold>401</bold></highlight> is used per hop. This may be appropriate for some instances where it is undesirable to hop at higher rates because of relatively long frequency switching times of the radio hardware, where import, export, or regulatory restrictions disallow hopping at a faster rate, or in some applications where it is desirable to maintain operation on each channel for a longer period. An example of the latter is the case where larger files or data records are transferred routinely. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> In a frequency hopping operation, the Access Interval <highlight><bold>200</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> begins with a SYNC header <highlight><bold>201</bold></highlight>. As mentioned above, the SYNC is generated by the Control Point (CP) device of the NET. The SYNC is used by constituents of the NET to attain and maintain hopping synchronization. Included in the SYNC are the following. </paragraph>
<paragraph id="P-0145" lvl="2"><number>&lsqb;0145&rsqb;</number> 1. The address of the Control Point device. </paragraph>
<paragraph id="P-0146" lvl="2"><number>&lsqb;0146&rsqb;</number> 2. Identification of the Hopping Sequence, and index of the current frequency within the hop table. </paragraph>
<paragraph id="P-0147" lvl="2"><number>&lsqb;0147&rsqb;</number> 3. Identification of the hop rate, number of Access Intervals per hop, and Access Intervals before next hop. </paragraph>
<paragraph id="P-0148" lvl="2"><number>&lsqb;0148&rsqb;</number> 4. A timing character for synchronization of device local clocks to the NET clock contained within the Control Point device. </paragraph>
<paragraph id="P-0149" lvl="2"><number>&lsqb;0149&rsqb;</number> 5. Status field indicating reduced SYNC transmissions due to low NET activity (Priority SYNC Indicator). </paragraph>
<paragraph id="P-0150" lvl="2"><number>&lsqb;0150&rsqb;</number> 6. Status field indicating if the Access Interval will contain a broadcast message to all devices within the NET. </paragraph>
<paragraph id="P-0151" lvl="2"><number>&lsqb;0151&rsqb;</number> 7. Status field indicating premises or spontaneous LAN operation. </paragraph>
<paragraph id="P-0152" lvl="2"><number>&lsqb;0152&rsqb;</number> 8. The SYNC field information is optionally encrypted using a block encryption algorithm, with a key provided by the network user. A random character is added to each SYNC message to provide scrambling. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> However, there are two circumstances during which a SYNC message is not transmitted: 1) co-channel interference; and 2) low NET utilization. With regard to co-channel interference, before issuing a SYNC message, the Control Point device performs channel monitoring for a brief interval. If the Received Signal Strength Indicator (RSSI) level indicates an ON channel signal greater than the system defer threshold, then the Access Interval is skipped. Alternatively, a strong ON channel signal may dictate a reduction in Control Point device power to limit the interference distance of the net for the duration of the Access Interval. A system defer threshold 30 dB above the receiver sensitivity is a preferred choice. Communication within the NET is deferred for the duration of the Access Interval if SYNC is not transmitted due to co-channel interference. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> In times of low system utilization, SYNC and Reservation Poll messages are reduced to every third Access Interval. The SYNC message includes a status field indicating this mode of operation. This allows devices to access the NET, even during Access Intervals where SYNC is skipped, by using an Implicit Idle Sense algorithm. If the hopping sequence is 79 frequencies in length as shown in <cross-reference target="DRAWINGS">FIGS. 3</cross-reference><highlight><italic>a </italic></highlight>and <highlight><bold>3</bold></highlight><highlight><italic>b, </italic></highlight>use of every third Access Interval guarantees that a SYNC message will be transmitted on each frequency within the hopping sequence once each three cycles of the sequence, regardless of whether 1, 2 or 4 Access Intervals occur each hop dwell. This addresses US and European regulatory requirements for uniform channel occupancy, and improves the prospects for synchronization of new units coming into the NET during periods when the NET is otherwise inactive. SYNC messages that are on multiples of <highlight><bold>3</bold></highlight> Access intervals are labeled as priority SYNC messages. &ldquo;Sleeping&rdquo; terminals use priority SYNCs to manage their internal sleep algorithms. Sleeping terminals and Implicit Idle Sense are discussed in more detail below. </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> It should be noted that SYNC messages are preceded by dead time, which must be allocated to account for timing uncertainty between NET clocks and local clocks within NET constituents. In frequency hopping systems, the dead time must also include frequency switching time for the RF modem. </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> The Reservation Poll frame <highlight><bold>203</bold></highlight> immediately follows the SYNC header <highlight><bold>201</bold></highlight>. The two messages are concatenated High-Level Data Link Control frames separated by one or more Flags. The reservation poll provides NET constituents an opportunity to gain access to the media. It includes the following. </paragraph>
<paragraph id="P-0157" lvl="2"><number>&lsqb;0157&rsqb;</number> 1. A field specifying one or more access slots. </paragraph>
<paragraph id="P-0158" lvl="2"><number>&lsqb;0158&rsqb;</number> 2. A field specifying a probability factor between 0 and 1. </paragraph>
<paragraph id="P-0159" lvl="2"><number>&lsqb;0159&rsqb;</number> 3. A list of addresses for which the access points have pending messages in queue. </paragraph>
<paragraph id="P-0160" lvl="2"><number>&lsqb;0160&rsqb;</number> 4. Allocation of Time Division Multiple Access slots for scheduled services by address. </paragraph>
<paragraph id="P-0161" lvl="2"><number>&lsqb;0161&rsqb;</number> 5. Control Point device Transmitted Power level for SYNC and Reservation Polls. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> The number of access slots, n, and the access probability factor, p, are used by the Control Point device to manage contention on the channel. They may each be increased or decreased from Access Interval to Access Interval to optimize access opportunity versus overhead. </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> If the NET is lightly loaded, the pending message list is short, and the NET is not subject to significant interference from other nearby NETS, the control point device will generally specify a single slot <highlight><bold>501</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference><highlight><italic>a, </italic></highlight>with a p factor &lt;1. In this case, the reservation phase is Idle Sense Multiple Access (&ldquo;ISMA&rdquo;). Devices with transmission requirements that successfully detect the Reservation Poll will transmit a Request for Poll (&ldquo;RFP&rdquo;) with probability p and defer transmission with probability 1&minus;p. FIG. b shows a device response address <highlight><bold>65</bold></highlight> <highlight><bold>503</bold></highlight> following the reservation poll. </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> In cases when the transmission density is higher, n multiple reservation slots will be specified, generally with a probability factor p of 1. In this case a device will randomly choose one of n slots for transmission of their Request for Poll. The slotted reservation approach is particularly appropriate in instances where many NETs are operating in near proximity, since it diminishes reliance on listen before talk (&ldquo;LBT&rdquo;) (explained more fully below). The number of slots n is determined by a slot allocation algorithm that allocates additional slots as system loading increases. <cross-reference target="DRAWINGS">FIG. 6</cross-reference><highlight><italic>a </italic></highlight>shows multiple slots <highlight><bold>601</bold></highlight>. </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> In cases where NET loading is extreme, the Control Point may indicate a number of slots, e.g., not more than 6, and a probability less than 1. This will cause some number of devices to defer responding with a Request for Poll in any of the slots. This prevents the control point device from introducing the overhead of a large number of slots in response to heavy demand for communications, by dictating that some units back off until demand diminishes. </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> A pending message list is included in the Reservation Poll. The pending message list includes the addresses of devices for which the Control Point device has messages in queue. Devices receiving their address may contend for the channel by responding with a Request For Poll (RFP) in the slot response phase. <cross-reference target="DRAWINGS">FIG. 6</cross-reference><highlight><italic>b </italic></highlight>shows several devices <highlight><bold>603</bold></highlight>, <highlight><bold>605</bold></highlight> and <highlight><bold>607</bold></highlight> contending for channel access. Messages that the Control Point device receives through the wired infrastructure that are destined for Type 1 devices, and inactive Type 3 devices whose awake window has expired, are immediately buffered, and the device addresses are added to the pending message list. When a message is received through the infrastructure for a Type 2 device, or an active Type 3 device, their address is prioritized at the top of the polling queue. (Device Types and the polling queue are described below.) The pending message list is aged over a period of several seconds. If pending messages are not accessed within this period, they are dropped. </paragraph>
<paragraph id="P-0167" lvl="0"><number>&lsqb;0167&rsqb;</number> Devices with transmission requirements respond in slots with a Request for Poll. This message type includes the addresses of the Control Point device and requesting device, the type and length of the message it has to transmit, and a field that identifies the type of device. Devices that detect their address in the pending message list also contend for access in this manner. </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> As mentioned above, devices may be Type 1, Type 2, or Type 3. Type 1 devices are those which require critical battery management. These may be in a power saving, non-operational mode much of the time, only occasionally &ldquo;waking&rdquo; to receive sufficient numbers of SYNC and Reservation Poll messages to maintain connectivity to the NET. Type 2 devices are those that are typically powered up and monitoring the NET at all times. Type 3 units are devices that will remain awake for a window period following their last transmission in anticipation of a response. Other device types employing different power management schemes may be added. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> Slot responses are subject to collision in both the single and multiple slot cases. Collisions may occur when two or more devices attempt to send Request for Polls in the same slot. However, if the signal strength of one device is significantly stronger than the others, it is likely to capture the slot, and be serviced as if it were the only responding unit. <cross-reference target="DRAWINGS">FIG. 6</cross-reference><highlight><italic>b </italic></highlight>shows two devices <highlight><bold>605</bold></highlight>, address <highlight><bold>111</bold></highlight>, and <highlight><bold>607</bold></highlight>, address <highlight><bold>02</bold></highlight>, that may be subject to collision or capture. </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> The Control Point device may or may not be able to detect collisions by detecting evidence of recovered clock or data in a slot, or by detecting an increase in RF energy in the receiver (using the Received Signal Strength Indicator, (&ldquo;RSSI&rdquo;)) corresponding to the slot interval. Collision detection is used in the slot allocation algorithm for determining addition or deletion of slots in upcoming Reservation Polls. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> As an optional feature to improve collision detection in the multiple slot case, devices that respond in later slots may transmit the addresses of devices they detect in earlier slots as part of their Request for Poll. Request for Polls which result in collisions at the Control Point device often are captured at other remote devices, since the spatial relationship between devices that created the collision at the base does not exist for other device locations within the NET. The duration of the response slots must be increased slightly to provide this capability. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> If the Control Point device receives one or more valid Request for Polls following a Reservation Poll, it issues a Reservation Resolution (&ldquo;RR&rdquo;) Poll and places the addresses of the identified devices in a polling queue. The Reservation Resolution message also serves as a poll of the first unit in the queue. Addresses from previous Access Intervals and addresses of intended recipients of outbound messages are also in the queue. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> If the Polling Queue is empty, then no valid Request for Polls were received or collision detected and no Reservation Resolution poll is issued. If within this scenario a collision is detected, a CLEAR message indicating an Explicit Idle Sense (explained more fully below) is transmitted containing a reduced probability factor to allow colliding units to immediately reattempt NET access. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> Outbound messages obtained through the network infrastructure may result in recipient addresses being prioritized in the queue, that is, if the recipients are active devices&mdash;Type 2 devices or Type 3 devices whose awake window has not expired. This eliminates the need for channel contention for many outbound messages, improving efficiency. Messages for Type 1 devices are buffered, and the recipient address is placed in the pending message list for the next Access Interval. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> Generally the queue is polled on a first in first out (FIFO) basis. The polling order is as follows: </paragraph>
<paragraph id="P-0176" lvl="2"><number>&lsqb;0176&rsqb;</number> a. addresses of active units with outbound messages; </paragraph>
<paragraph id="P-0177" lvl="2"><number>&lsqb;0177&rsqb;</number> b. addresses from previous Access Intervals; and </paragraph>
<paragraph id="P-0178" lvl="2"><number>&lsqb;0178&rsqb;</number> c. addresses from the current Access Interval. </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> Since propagation characteristics vary with time and operating frequency, it is counterproductive to attempt retries if Poll responses are not received. If a response to a Poll is not received, the next address in the queue is polled after a short response timeout period. Addresses of unsuccessful Polls remain in the queue for Polling during the next Access Interval. Addresses are aged, so that after several unsuccessful Polls they are dropped from the queue. Addresses linked to outbound messages are added to the pending message list. Devices with inbound requirements must reenter the queue through the next reservation phase. </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> Data is transferred in fragments. A maximum fragment payload of 256 bytes is used in the preferred implementation. If transfer of network packets larger than of 256 bytes is required, two or more fragments are transferred. Fragments may be any length up to the maximum, eliminating the inefficiency that results when messages that are not integer multiples of the fragment length are transmitted in systems that employ fixed sizes. </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> The sequence for transferring data from a remote device to the control point device is illustrated in <cross-reference target="DRAWINGS">FIG. 7</cross-reference><highlight><italic>a. </italic></highlight>It is assumed that address <highlight><bold>65</bold></highlight> is the first address in the polling queue. The Reservation Resolution poll <highlight><bold>701</bold></highlight> from the control point device includes the device address and the message length that device <highlight><bold>65</bold></highlight> provided in its initial Request for Poll. A first fragment <highlight><bold>703</bold></highlight> transmitted back from device <highlight><bold>65</bold></highlight> is a full length fragment. Its header includes a fragment identifier and a field providing indication of the total length of the message. Length information is included in most message types during the sessions period to provide reservation information to devices that may wish to attempt to access the NET following an Explicit Idle Sense (explained more fully below). </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> Following successful receipt of the first fragment, the Control Point device sends a second poll <highlight><bold>705</bold></highlight>, which both acknowledges the first fragment, and initiates transmission of the second. The length parameter is decremented to reflect that the time required for completion of the message transfer is reduced. A second fragment <highlight><bold>707</bold></highlight> is transmitted in response, and also contains a decremented length field. Following receipt of the second fragment <highlight><bold>707</bold></highlight>, the Control Point device sends a third poll <highlight><bold>709</bold></highlight>. This pattern is continued until a final fragment <highlight><bold>711</bold></highlight> containing an End of Data (EOD) indication is received. In <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the final fragment is shorter than a maximum length fragment. The Control Point device sends a final Acknowledge (ACK), and the device sends a final CLEAR <highlight><bold>713</bold></highlight> to indicate conclusion of the transmission. The CLEAR message contains a probability factor p for Explicit Idle Sense (explained more fully below). The value of p is determined by the Control Point device in the ACK and echoed by the device termination communication. A p of zero indicates that the control point device will be initiating other communications immediately following receipt of the CLEAR message. A probability other than <highlight><bold>0</bold></highlight> indicates an Explicit Idle Sense. </paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> If for some reason a fragment is not successfully received, the next poll from the Control Point device would indicate a REJECT, and request re-transmission of the same fragment. The length field would remain fixed at the previous value, prolonging reservation of the channel for the duration of the message. After a fragment is transmitted more than once without successful reception, the Control Point device may suspend attempts to communicate with the device based upon a retry limit, and begin polling of the next address in the queue. </paragraph>
<paragraph id="P-0184" lvl="0"><number>&lsqb;0184&rsqb;</number> A flow chart depicting how inbound messages are received during an access interval is shown in <cross-reference target="DRAWINGS">FIGS. 19A and 19B</cross-reference>. A flow chart depicting how outbound messages are transmitted during an access interval is shown in <cross-reference target="DRAWINGS">FIGS. 20A and 20B</cross-reference>. </paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> Outbound messages are transmitted in a similar fashion as inbound messages, with the Control Point and device roles largely reversed as illustrated in <cross-reference target="DRAWINGS">FIG. 7</cross-reference><highlight><italic>b. </italic></highlight>When the Control Point reaches an address in the queue for which it has an outbound message, the Control Point transmits a Request for Poll <highlight><bold>721</bold></highlight> identifying the address of the device and the length of the message. The response back from the device would be a poll with an embedded length field. The same POLL/FRAGMENT/ACK/CLEAR structure and retry mechanisms as described above with regard to inbound messages in reference to <cross-reference target="DRAWINGS">FIG. 7</cross-reference><highlight><italic>a </italic></highlight>are maintained. The CLEAR from the device indicates a probability p of zero. If the polling queue is empty, the Control Point may send a final or terminating CLEAR <highlight><bold>723</bold></highlight> containing a probability for Explicit Idle Sense. </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> All terminating ACK or CLEAR messages contain fields to aid in synchronization of new units to the NET. The content of these fields is identical to that in the SYNC message, except that the timing character is deleted. Synchronization is discussed more fully below. </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> Broadcast Messages intended for groups of addresses, or all addresses within a NET may be transmitted during the sessions period. Broadcast messages are not individually acknowledged. These messages may be communicated at intervals over the course of several Access Intervals to provide reliable communication. Messages such as SYNC and Reservation Polls are specialized broadcast messages, with dedicated bandwidth in the Access Interval structure. </paragraph>
<paragraph id="P-0188" lvl="0"><number>&lsqb;0188&rsqb;</number> Security of payload data is left to the higher protocol layers. Application programs resident in portable/mobile devices may employ encryption or other means of providing protection against undesired use of transmitted data. </paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> Portable/mobile devices may employ transmitter power control during the sessions period to reduce potential interference with other NETs that may occasionally be on the same or adjacent channels. These devices will use Received Signal Strength Indicator readings from outbound messages to determine if transmitter power may be reduced for their inbound transmission. Because of the need to maintain channel reservations and Listen Before Talk capabilities, the Control Point device does not use transmitter power control. Since Control Point devices are generally part of an installed system infrastructure, they are likely to be physically separated from devices operating in other NETs. They are therefore less likely to cause interference to devices in other NETs than portable devices, which may operate in proximity to devices in other NETs. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> Often, control point devices will empty the polling queue before the conclusion of the access interval. Two mechanisms within the Access Control Protocol, Explicit and Implicit Idle Sense, are provided to improve bandwidth utilization. These supplemental access mechanisms often provide means for devices that failed to gain reservations during the reservation phase to gain access to the NET within the Access Interval. To assume an Explicit or Implicit Idle Sense, a device must have detected a valid SYNC and Reservation Poll in the current Access Interval. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> The incorporation of a probability factor p&ne;0 in the final (terminating) ACK or CLEAR from the control point device provides the function of an Explicit Idle Sense (mentioned above). Devices with transmission requirements solicit Request for Polls using the same rules normally used for a single slot Reservation Poll. Successfully identified addresses are placed in the polling queue, and are polled immediately or in the next Access Interval depending on the time remaining in the current Access Interval. The p factor for Explicit Idle Sense is subject to the same optimization algorithm as the Reservation Poll probability. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> Communication of channel reservations, in the form of the length fields in Polls and Message Fragments is useful to units seeking to access the NET through Explicit Idle Sense. Reservations allow devices to predictably power down during the period that another device has reserved the NET to conserve battery power, without losing the ability to gain access to the NET. </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> Implicit Idle Sense provides an additional means of channel access. An Implicit Idle Sense is assumed whenever a device detects a quiet interval period greater than or equal to the duration of a Poll plus the maximum fragment length after a channel reservation has expired. Detection based upon simple physical metrics, such as a change in Received Signal Strength Indicator or lack of receiver clock recovery during the quiet interval, are preferred methods of ascertaining channel activity. Algorithms based upon these types of indicators are generally less likely to provide a false indication of an inactive channel than those that require successful decoding of transmissions to determine channel activity. False invocation of an Implicit Idle Sense is the only mechanism by which data transmissions are subject to collision within the NET. Thus, the Implicit Algorithm must be conservative. </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> Quiet interval sensing may begin at the following times within the Access Interval: </paragraph>
<paragraph id="P-0195" lvl="2"><number>&lsqb;0195&rsqb;</number> a. any time after the last reservation slot following a Reservation Poll; </paragraph>
<paragraph id="P-0196" lvl="2"><number>&lsqb;0196&rsqb;</number> b. any time after a terminating ACK or CLEAR indicating an Explicit Idle Sense; </paragraph>
<paragraph id="P-0197" lvl="2"><number>&lsqb;0197&rsqb;</number> c. following an unsuccessful response to a single Slot Reservation Poll; or </paragraph>
<paragraph id="P-0198" lvl="2"><number>&lsqb;0198&rsqb;</number> d. any time prior to reserved Time Division Multiple Access time slots at the end of the Access Interval. </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> It is preferable that devices detecting a quiet interval use a p persistent algorithm for channel access to avoid collisions. The probability factor for Implicit Idle Sense Access will generally be less than or equal to the factor in Explicit Idle Sense. </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> A device must receive the SYNC and Reservation Polls at the beginning of an Access Interval to use Implicit Idle Sense. The Reservation Poll provides indication of guaranteed bandwidth allocation to scheduled services at the end of the Access Interval, which may shorten the period available for Bandwidth On Demand communications. </paragraph>
<paragraph id="P-0201" lvl="0"><number>&lsqb;0201&rsqb;</number> Devices that require scheduled services must contend for the channel in the same fashion as those requiring Bandwidth On Demand access. When polled, these initiating devices will initiate a connection request that indicates the number of inbound and outbound Time Division Multiple Access slots required for communication, and the address of the target device with which communication is desired. The network infrastructure will then attempt to establish the connection to the target device. Once the connection is established, the Control Point device will signal the allocation of slots to the initiating device. Time Division Multiple Access slots are relinquished by transmitting a disconnect message to the control point device in the Time Division Multiple Access slot until the disconnect is confirmed in the next Reservation Poll. </paragraph>
<paragraph id="P-0202" lvl="0"><number>&lsqb;0202&rsqb;</number> The transmission requirements of speech and slow scan video (scheduled services) are similar. In one embodiment, Time Division Multiple Access slots are allocated as multiples of 160 bits payload at 1 MBIT/sec, plus overhead for a total of 300 &mgr;s. For 10 ms access intervals, acceptable voice communication can be obtained by allocating 1 Time Division Multiple Access slot each for inbound and outbound communication per access interval. For 20 ms access intervals, two slots each way is required. A system employing 10 ms access intervals at 100 hops per second may improve transmission quality by using two or three slots each Access Interval and sending information redundantly over two or three access intervals using interleaved block codes. Scheduled transmissions are generally not subject to processing or validation by the control point device, and are passed through from source to destination. Use of interleaved error correction coding or other measures to improve reliability is transparent to the NET. </paragraph>
<paragraph id="P-0203" lvl="0"><number>&lsqb;0203&rsqb;</number> The selection of certain system parameters is important when considering scheduled services. As an example, since speech is quantized over the duration of the access interval and transmitted as a burst, the length of the access interval translates directly into a transport delay perceptible to the recipient of that speech. In real time &ldquo;full-duplex&rdquo; voice communications, delays longer than 20 ms are perceptible, and delays longer than 30 ms may be unacceptable. For real time &ldquo;half-duplex&rdquo; voice communications, much longer delays often prove acceptable. </paragraph>
<paragraph id="P-0204" lvl="0"><number>&lsqb;0204&rsqb;</number> Real time full-duplex voice communication delays sometimes prove too excessive where the premises LAN is interconnected with the public switched telephone network (&ldquo;PSTN&rdquo;), which introduces its own delays. Two way services (i.e., full-duplex services) such as voice communications are the most sensitive to transport delay because delay impacts the interaction of the communicating parties. One way services (i.e., half-duplex services) are less sensitive to transport delay. One way services are good candidates for interleaving or other forms of redundant transmission. </paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> Similarly, the selection of hop rate is important, as hop rate determines the duration of outages that may occur. If one or more frequencies in the hop sequence are subject to interference, for instance, scheduled transmissions during those hops will be disrupted. In a system that hops slowly, detrimental outages of hundreds of milliseconds will occur resulting in poor transmission quality. Occasional losses of smaller durations, e.g., 10 ms or 20 ms, are generally less perceptible, indicating that faster hop rates are desirable if the NET is to offer real time voice transport. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> Scheduled service intervals may also be used for data transport on a scheduled or priority basis. Telemetry, data logging, print spooling, modem replacement, or other functions are possible. For these activities, a few Time Division Multiple Access slots scheduled for example every fourth, eighth, or sixteenth Al are necessary. </paragraph>
<paragraph id="P-0207" lvl="0"><number>&lsqb;0207&rsqb;</number> Because of multipath and dispersion issues with 2.4 GHz transmission at relatively high data rates, the ability of the NET to adaptively switch between two or more data rates is desirable. </paragraph>
<paragraph id="P-0208" lvl="0"><number>&lsqb;0208&rsqb;</number> In one embodiment, implementation of data rate switching may be accomplished by selecting a standard rate of communications, e.g., 250 KBPS and a high rate of communications of 1 Mbit/sec. Messages that contain system status information, including SYNC, Reservation Polls, Reservation Resolution Polls (Request for Polls), Polls, ACKs and CLEARS are transmitted at the standard rate. These messages are generally short, and the time required for transmission is largely determined by hardware overhead, e.g., transmitter receiver switching time. The incremental overhead introduced by transmitting these messages at the lower rate is therefore small in comparison to the total length of an access interval. The reliability of reception of these messages will increase, which will eliminate unnecessary retries in some instances where fragments are received successfully, but acknowledgments or polls are missed. </paragraph>
<paragraph id="P-0209" lvl="0"><number>&lsqb;0209&rsqb;</number> A test pattern at the higher data rate is inserted in each Poll (not in Reservation Polls, however). The Poll recipient evaluates signal quality based on the high data rate test pattern, Received Signal Strength Indicator, and other parameters to determine whether to transmit a fragment at the high rate or the low rate. Fragment lengths are selected such that high and low rate maximum fragment lengths are the same duration. In other words, a fragment at the low rate conveys approximately {fraction (1/4 )} the payload of a fragment for the case where the data rate is four times greater. This method is generally suitable for transaction oriented communications, which frequently require short message transmissions. Alternatively, the length field in Polls and messages can be used to allow different fragment lengths for the two data rates while still providing channel reservation information to other devices in the NET. This method also provides for forward migration. As modulation and demodulation methods improve, newer products can be added to old networks by upgrading Control Points devices. Both new and old devices share the ability to communicate at a common low data rate. </paragraph>
<paragraph id="P-0210" lvl="0"><number>&lsqb;0210&rsqb;</number> An alternate embodiment uses signaling messages such as SYNC, Reservation Polls, Request for Polls, etc., at the higher rate with fall back operation to the standard rate for the communications sessions only. SYNC and Reservation Polls at the high rate constitute a high data rate test message. The Request for Poll response to the Reservation Poll at the high rate may include a field indicating that sessions communications should take place at the fall back, standard rate. Signal quality measures such as signal strength and clock jitter are appropriate. Data rate selection information is included with the device address in the polling queue. When the device is polled, it will be polled at the rate indicated in the Request for Poll. Channel reservation information in the Reservation Resolution Poll will indicate the reservation duration based upon the data rate indicated. </paragraph>
<paragraph id="P-0211" lvl="0"><number>&lsqb;0211&rsqb;</number> In this alternate embodiment, the fact that SYNC and Reservation Polls must be detectable at the high data rate prioritizes access to the NET for those devices that have acceptable connectivity during the current access interval. This general approach has desirable characteristics in a frequency hopping system, as the propagation characteristics between devices may change significantly as the NET changes from frequency to frequency within the hopping sequence, or over several Access Intervals during the dwell time on a single frequency. Reduction in data rate in this system is primarily intended to remedy the data smearing (inter-symbol interference) effects of dispersion due to excess delay, rather than temporarily poor signal to noise ratio due to frequency selective fading. Devices that receive high data rate transmissions with acceptable signal strength but high jitter are likely to be experiencing the effect of dispersion. </paragraph>
<paragraph id="P-0212" lvl="0"><number>&lsqb;0212&rsqb;</number> The concept of allowing Polls and message fragments to occur at an either high or low data rate could create difficulties for other NET constituents that need to be able to monitor the channel for reservation information. Two embodiments for solving this problem are the use of auto-discriminating receivers or the use of fixed data rate headers for system communications. </paragraph>
<paragraph id="P-0213" lvl="0"><number>&lsqb;0213&rsqb;</number> Auto discrimination requires the receiver to process messages sent at either data rate, without necessarily having prior knowledge of the rate. </paragraph>
<paragraph id="P-0214" lvl="0"><number>&lsqb;0214&rsqb;</number> Given a high rate of 1 MBIT/SEC, and a low Rate of 250 KBPS, i.e., one being a binary multiple of the other, it is possible to devise preambles that can be received at either rate. Consider that 01 and 110 sent at the low rate correspond to 00001111 and 111111110000 at the high rate. These preambles are transmitted continuously before the transmission of the High-Level Data Link Control FLAG character at the correct data rate indicating the start of a message. In this example, a preamble of 20 bits of 01 at the low rate indicates operation at the high rate. A preamble of 30 bits of 110 indicates operation at the low rate. A receiver tuned to either rate is capable of receiving both types of preambles and initiating the proper decoding mechanisms for the intended rate of transmission. </paragraph>
<paragraph id="P-0215" lvl="0"><number>&lsqb;0215&rsqb;</number> This general technique, with appropriate selection of preamble content, is applicable to binary modulation schemes, for example, a frequency modulated system where a common frequency deviation value is used for both data rates. It is also applicable to systems where switching occurs between binary and multilevel modulation, such as disclosed in pending U.S. application Ser. No. 07/910,865, filed Jul. 6, 1992. </paragraph>
<paragraph id="P-0216" lvl="0"><number>&lsqb;0216&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 25, a</cross-reference> preamble <highlight><bold>2501</bold></highlight>, a SYNC <highlight><bold>2503</bold></highlight> and a Reservation Poll <highlight><bold>2505</bold></highlight> are illustrated. The preamble <highlight><bold>2501</bold></highlight> starts at the beginning of the Access Interval <highlight><bold>2500</bold></highlight> and is applied to an RF modem while it is switching frequencies. Since the switching time is a worst case, this causes the preamble <highlight><bold>2501</bold></highlight> to be present and detectable prior to the allocated 150 &mgr;sec period in some instances. It would be equally appropriate to begin preamble transmission 50 or 100 &mgr;sec into the switching period if that would be more convenient. The timing has been selected to allow 100 &mgr;sec. </paragraph>
<paragraph id="P-0217" lvl="0"><number>&lsqb;0217&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 26, a</cross-reference> sample SYNC message <highlight><bold>2600</bold></highlight> is shown. Referring to <cross-reference target="DRAWINGS">FIG. 27, a</cross-reference> sample Reservation Poll <highlight><bold>2700</bold></highlight> is shown. In these examples, the hopping synchronization information has been positioned in the Reservation Poll <highlight><bold>2700</bold></highlight>. </paragraph>
<paragraph id="P-0218" lvl="0"><number>&lsqb;0218&rsqb;</number> With auto-discrimination, it is possible to change data rates on a per-poll basis, thereby adjusting for channel temporal dynamics. Since all devices in the NET have auto discrimination capabilities, and channel reservation information is included in message headers as a length field, the bandwidth reservation features of the NET are preserved. The maximum fragment duration may be maintained at a fixed value, meaning that low data rate fragments convey less data than their high rate counterparts, or may be scaled in the ratio of the data rates to allow consistent fragment data payloads. </paragraph>
<paragraph id="P-0219" lvl="0"><number>&lsqb;0219&rsqb;</number> An alternative to auto-discrimination is the use of headers to communicate system information. This embodiment is less preferred, but may be appropriate if economics, size, or power constraints dictate a simpler design than that required for auto-discrimination. In this embodiment, any transmission at the lower data rate is preceded by a header at the high data rate that conveys NET management information, i.e., channel reservation status. Devices other than those directly involved in polling or fragment transmission need only monitor at the high rate for channel reservation information. The header at the high rate and the following transmission at the low rate are concatenated High-Level Data Link Control frames, with an appropriate preamble for low rate clock recovery synchronization inbetween. </paragraph>
<paragraph id="P-0220" lvl="0"><number>&lsqb;0220&rsqb;</number> For the communicating devices, the header can serve the additional purpose of acting as a test pattern at the high rate. For example, if a device is polled at the low rate, but successfully decodes the high rate header with adequate signal quality, it may indicate back to the polling unit to poll again at the high rate. </paragraph>
<paragraph id="P-0221" lvl="0"><number>&lsqb;0221&rsqb;</number> In a premises LAN as discussed in reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, many NETs may be distributed geographically to provide enhanced coverage or additional system capacity. The wired portion of the network infrastructure, such as Ethernet or Token Ring, provides a means for coordination of NETs to achieve optimum system performance. An equally important role of the wired infrastructure is to allow resource sharing. Portable devices with limited memory capacities, processing power, and relatively small batteries may access large data bases on, or remotely initiate processing capabilities of, larger AC powered computer systems. Portable/mobile devices may also share communication with other like devices which are serviced by other NETs well beyond the radio coverage range of their own NET. </paragraph>
<paragraph id="P-0222" lvl="0"><number>&lsqb;0222&rsqb;</number> The basic method for communication of status information regarding the premises LAN is the HELLO message. HELLO messages are sent routinely, but relatively infrequently, for example, every 90 Access Intervals. The HELLO transmission interval is tied to the Priority SYNC interval, so that the HELLO interval corresponds to Access Intervals where SYNC is transmitted if the network is lightly utilized. </paragraph>
<paragraph id="P-0223" lvl="0"><number>&lsqb;0223&rsqb;</number> In an alternate embodiment, HELLOs could be inserted as a broadcast message at the beginning of the Sessions period. <cross-reference target="DRAWINGS">FIG. 8</cross-reference> illustrates a preferred Access Interval embodiment where a HELLO message <highlight><bold>801</bold></highlight> is inserted between a SYNC <highlight><bold>803</bold></highlight> and a Reservation Poll <highlight><bold>805</bold></highlight>. The SYNC frame at the beginning of the Access Interval indicates that the Access Interval will contain a HELLO, allowing power managed devices to remain awake to receive the HELLO. </paragraph>
<paragraph id="P-0224" lvl="0"><number>&lsqb;0224&rsqb;</number> HELLO messages may also contain information regarding pending changes in the local NET. If the local NET is changing Access Interval durations or hop sequences, for instance, changes may be communicated in several consecutive HELLOs so that the information is reliably communicated to all NET constituents, permitting all devices to make the change in coordinated fashion. Further discussion of HELLO message content is provided below. </paragraph>
<paragraph id="P-0225" lvl="0"><number>&lsqb;0225&rsqb;</number> For purposes of channel management in the Access Interval structure, the maximum transmission duration by a device should be limited to the time that the device moving at a maximum expected velocity can traverse {fraction (1/4 )} wavelength of the maximum carrier frequency. The duration may be further reduced to compensate for link bit error rate characteristics or expected duration or frequency of interference bursts. A maximum transmission duration of 2.5 ms is suitable for 1 MBIT/SEC transmission, with a device velocity of 15 mph, in a multiple NET environment. </paragraph>
<paragraph id="P-0226" lvl="0"><number>&lsqb;0226&rsqb;</number> Use of spatial or polarization antenna selection diversity is also desirable in indoor propagation environments. First, the receiving unit makes an antenna diversity decision during the preamble portion of each transmission. The antenna used for reception for each device address is then recorded in memory so that the correct antenna will be used for response messages to each address. While diversity selection is only valid for a short time, it is not necessary to age this information, because antenna selection is equi-probable even after diversity information is no longer valid. </paragraph>
<paragraph id="P-0227" lvl="0"><number>&lsqb;0227&rsqb;</number> The Access Interval structure of the present invention also inherently provides routine channel sounding for each hop. This is important in a frequency hopping system, as channel conditions will vary considerably from frequency to frequency within the hopping sequence. NET constituents must, in most cases, be able to receive SYNC and Reservation Poll transmissions from the Control Point device to attempt inbound access in an Access Interval. This provides a positive indication that the device is not experiencing a channel outage, allowing power saving and eliminating possible channel contention. Channel sounding does not need to be employed during periods where the NET is not busy since contention is unlikely in this situation. </paragraph>
<paragraph id="P-0228" lvl="0"><number>&lsqb;0228&rsqb;</number> Channel sounding for Outbound messages is accomplished through a Request for Poll/Poll cycle where handshaking messages with short time out periods must be successfully communicated before longer message transmissions may be attempted. </paragraph>
<paragraph id="P-0229" lvl="0"><number>&lsqb;0229&rsqb;</number> As discussed above with regard to <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> premises LAN consists of several access points <highlight><bold>15</bold></highlight> located throughout an environment requiring wireless communications, e.g., a building or other facility, or a campus comprising several buildings. The access points <highlight><bold>15</bold></highlight> are placed to provide coverage of intended usage areas for the roaming portable or mobile computing devices <highlight><bold>20</bold></highlight>. Coverage areas must overlap to eliminate dead spots between coverage areas. </paragraph>
<paragraph id="P-0230" lvl="0"><number>&lsqb;0230&rsqb;</number> The access points <highlight><bold>15</bold></highlight> may be interconnected via industry standard wired LANs, such as IEEE 802.3 Ethernet, or IEEE 802.5 Token Ring. Access points may be added to an existing LAN without the need to install additional LAN cable. Alternatively, it may be desirable to install access points on dedicated LAN segments to maximize performance of both the radio network and other collocated computer devices. </paragraph>
<paragraph id="P-0231" lvl="0"><number>&lsqb;0231&rsqb;</number> Access points within the premises LAN provide Control Point functions for individual NETs. NETs employ different hopping sequences to minimize potential interference between NETs. Regulatory restrictions generally preclude synchronization of multiple NETs to a single master clock, requiring that individual NETs operate independently from one another. The lack of the ability to coordinate timing or frequency usage between NETs introduces the potential for collisions between independent NETs with overlapping coverage areas. </paragraph>
<paragraph id="P-0232" lvl="0"><number>&lsqb;0232&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 9</cross-reference><highlight><italic>a </italic></highlight>and <highlight><italic>b </italic></highlight>conceptually illustrate how multiple NETs may be employed in an idealized &ldquo;cellular&rdquo; type installation. Each hexagon <highlight><bold>901</bold></highlight> and <highlight><bold>903</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 9</cross-reference><highlight><italic>a </italic></highlight>represents the primary coverage area of a given NET. Coverage areas are modeled as circles <highlight><bold>905</bold></highlight> based upon some reliability criterion, for example a 5% mean fragment retry rate (on average 95% of fragments are successfully communicated on the first attempt). Typical coverage areas are determined by physical attributes of the area in which the NET operates. As illustrated in <cross-reference target="DRAWINGS">FIG. 9</cross-reference><highlight><italic>b </italic></highlight>for the hexagon (NET) <highlight><bold>903</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 9</cross-reference><highlight><italic>a, </italic></highlight>an actual coverage area <highlight><bold>907</bold></highlight> meeting the reliability criterion is likely to be irregular. This may require access points to be offset significantly from the hexagonal grid. </paragraph>
<paragraph id="P-0233" lvl="0"><number>&lsqb;0233&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> illustrates a coverage contour overlap for the multiple NETs in the premises LAN of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Darken shaded areas <highlight><bold>1001</bold></highlight> indicate areas where access point coverage overlaps. Because the coverage distance of a radio system on an instantaneous basis greatly exceeds the coverage that can be provided on average to sustain a given quality of service, the overlap at any instant may be significantly greater than the coverage contours indicate. </paragraph>
<paragraph id="P-0234" lvl="0"><number>&lsqb;0234&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> illustrates hopping sequence reuse in a multiple NET configuration. Hopping sequence reuse may be necessary if there are physical constraints on the number of hopping sequences that can be supported. For example, devices may have limited memory available for hopping sequence storage. Use of a smaller set of sequences also simplifies the task of determining sets of sequences that have acceptable cross correlation properties. In <cross-reference target="DRAWINGS">FIG. 12, </cross-reference>7 hopping sequences <highlight><bold>1</bold></highlight> through <highlight><bold>7</bold></highlight> are used throughout the coverage area. Other NETs may reuse the same hopping sequence at some distance removed. While 7 NETs are illustrated, larger numbers, such as 9 or 15 may provide a better compromise between minimizing the number of hopping sequences used, and reuse distance between NETs using the same sequence. Reuse requires coordination of hopping sequence assignment&mdash;either the system installer can coordinate the installation, or the system may include automated management features to assign hopping sequences to individual NETS. </paragraph>
<paragraph id="P-0235" lvl="0"><number>&lsqb;0235&rsqb;</number> Since NETs are not synchronized, different NETs that use the same hopping sequence are likely to interfere during periods where oscillator drift causes them to be temporarily synchronized. At other times, they may only interfere due to imperfect channelization. For example, for a worst case 100 ppm frequency error between two NETs using the same 79 frequency sequence at one Access Interval per hop and 50 hops per second, NETs will partially or fully overlap for a duration of 10 minutes every 4.3 hours. Typically the frequency error will be 25% to 50% of the worst case, leading to longer overlap periods occurring less frequently. </paragraph>
<paragraph id="P-0236" lvl="0"><number>&lsqb;0236&rsqb;</number> NETs using the same hopping sequence must be physically isolated from one another to reduce interference to an acceptable level. Extensive hopping sequence reuse generally requires site engineering and optimization of access point placement. Using more hopping sequences reduces the need for critical system engineering during installation. Fifteen hopping sequences is a preferred number for hopping sequence reuse, allowing simplified installation and minimal coordination. </paragraph>
<paragraph id="P-0237" lvl="0"><number>&lsqb;0237&rsqb;</number> NETs that use different hopping sequences will also temporarily synchronize in timing relationships that cause mutual co-channel interference on common channel frequencies. Since the number of channels that must be used in a sequence is a significant fraction of the total number of channels available, all sequences will share some number of frequencies in common. When sequences are time aligned so that a common frequency is used simultaneously, interference can occur. Optimization of sets of sequences for low cross correlation is necessary to prevent various time alignments of sequences from having more than one or two frequencies in common. </paragraph>
<paragraph id="P-0238" lvl="0"><number>&lsqb;0238&rsqb;</number> Optimization of hopping sequences for multiple NETs must also include analysis of imperfect channelization. The performance characteristics of the RF modems may not, for economic or power consumption reasons, provide sufficient transmitter spectral containment, receiver dynamic range, or receiver selectivity to guarantee that devices operating on different frequencies in proximity to one another will not interfere. In selecting hopping sequences for desirable cross correlation properties, adjacent and alternate adjacent channel interference must be considered. Protocol retry mechanisms for fragments lost to adjacent channel interference or limited dynamic range may be randomized to prevent continued disruption of communications in the affected NET. </paragraph>
<paragraph id="P-0239" lvl="0"><number>&lsqb;0239&rsqb;</number> Often in campus environments where systems must provide coverage in several buildings, the cost of wiring LAN cable between access points is prohibitive. To establish connectivity between access points in a premises LAN, it may be necessary to provide wireless links between groups of access points connected to separate LAN segments. <cross-reference target="DRAWINGS">FIG. 12</cross-reference> illustrates a wireless link <highlight><bold>1201</bold></highlight> connecting groups of access points <highlight><bold>1203</bold></highlight> and <highlight><bold>1205</bold></highlight>. The access points <highlight><bold>1203</bold></highlight> and <highlight><bold>1205</bold></highlight> are connected on separate LAN segments <highlight><bold>1207</bold></highlight> and <highlight><bold>1209</bold></highlight>. </paragraph>
<paragraph id="P-0240" lvl="0"><number>&lsqb;0240&rsqb;</number> In one embodiment, the access points <highlight><bold>1203</bold></highlight> and <highlight><bold>1205</bold></highlight> may be configured in a wireless point to point mode, wherein one access point serves as a control point device while the others operate in a slave mode dedicated to point to point data transfer. Slave access points are configured to operate as portable/mobile devices, and forward communications to master bases by sending Request for Polls during reservation opportunities or Implicit Idle Sense periods. Because of the potential high traffic of point to point links, separate NETs may be allocated for this purpose, with a master communicating with one or more slave units. Master units may also communicate with other portable/mobile devices. The COST weighing (discussed below) in a slave&apos;s HELLO transmission is preferably set to a high value, to force portable/mobile devices which can connect to another NET to do so. </paragraph>
<paragraph id="P-0241" lvl="0"><number>&lsqb;0241&rsqb;</number> In another embodiment, it may also be desirable to support wireless access points. Wireless access points serve as control points, but are not connected to the infrastructure through a LAN cable. As illustrated in <cross-reference target="DRAWINGS">FIG. 13, a</cross-reference> wireless access point <highlight><bold>1301</bold></highlight> participates in the premises LAN through a wireless link <highlight><bold>1303</bold></highlight> to an access point <highlight><bold>1305</bold></highlight> that is connected to a LAN <highlight><bold>1307</bold></highlight>. </paragraph>
<paragraph id="P-0242" lvl="0"><number>&lsqb;0242&rsqb;</number> Wireless access points operate as slave devices to master access points which are connected to the wired infrastructure. The wired and wireless access points share the same hopping sequence, and are synchronized as a common NET. Because they are not connected to the Infrastructure, wireless access points must be used as store and forward devices. Each transmission to a wireless base must be retransmitted to the intended destination device, doubling the number of transmissions occurring in the NET. Wireless access points are preferably used for supplementing coverage area of the premises LAN. For example, a wireless access point might provide spot coverage of isolated &ldquo;dead spots&rdquo; where data traffic is limited or where providing a wired LAN connection is difficult. Wireless access points may also serve as emergency spares to provide coverage in the event of a failure of a primary access point. In this role, the wireless access point may be either permanently installed in selected locations, or stored in a maintenance area and quickly positioned and connected to AC or battery power to provide communications while repairs are made to the primary wired access point. Moreover, permanently installed wireless access points might also be used for redundancy, i.e., to monitor an associated access point and to take over when a breakdown is detected. </paragraph>
<paragraph id="P-0243" lvl="0"><number>&lsqb;0243&rsqb;</number> The preferred-wireless access point embodiment uses interleaved access intervals. The parent wired access point and secondary wireless access point coordinate Access Intervals, the wired access point deferring every third or sixth access interval to the wireless base. Since the wired access point transmits priority SYNC messages every third Access Interval, the wireless access point may routinely be allocated one of the two intervening Access Intervals for priority SYNC communications with devices that are attached to it. Communication between the wired and wireless access points may occur during Access Intervals initiated by either access point. Wireless access points may also communicate with devices during an Access Interval using Implicit or Explicit Idle Sense. </paragraph>
<paragraph id="P-0244" lvl="0"><number>&lsqb;0244&rsqb;</number> This embodiment provides predictable access for devices attached to the wireless NET, and allows the same power management algorithms to be used regardless of whether the access point is wired or wireless. The wireless access point may transmit its own priority SYNC and HELLO messages. Also, devices seeking communications with the wireless access point will automatically be synchronized with the wired base as well, allowing immediate improved access to the network if their mobility has put them within range of the wired base. </paragraph>
<paragraph id="P-0245" lvl="0"><number>&lsqb;0245&rsqb;</number> Because of the constraint of sharing bandwidth with a wired access point, connectivity of wireless access points is normally limited to one per wired access point. However, in cases where system loading is predictably and consistently light, multiple wireless access points could share a single wired base, e.g., each transmitting in turn in the Access Intervals between the Wired Base Priority SYNC Access Intervals. </paragraph>
<paragraph id="P-0246" lvl="0"><number>&lsqb;0246&rsqb;</number> Wireless access points are capable of supporting scheduled traffic. However, since each transmission to a wireless access point must be forwarded, scheduled transmissions through wireless access points use twice the bandwidth as those through wired access points. In other words, twice the number of Time Division Multiple Access slots must be allocated. To avoid introducing excessive delay, communications must be forwarded during the same Access Interval that they are received, or shorter Access Intervals must be used. Scheduled traffic slot assignments must be common to all wireless bases operating within a single NET. </paragraph>
<paragraph id="P-0247" lvl="0"><number>&lsqb;0247&rsqb;</number> Wireless access points require reliable communication with their wired counterparts. This dictates smaller coverage contours for wireless access points. If a wired access point provides 80,000 square feet of coverage area, a wireless base can be predicted to provide only an additional forty percent coverage improvement, due to overlap with the wired access point. Frequently, access points are mounted at ceiling level, providing a relatively clearer transmission path between access points than exists between bases and portable/mobile devices located in more obstructed areas near the floor. With careful site engineering and installation, a wireless access point can provide somewhat better than the forty percent predicted improvement, but still less than the coverage of an additional wired base. </paragraph>
<paragraph id="P-0248" lvl="0"><number>&lsqb;0248&rsqb;</number> As discussed above, HELLO messages are used to communicate NET and premises LAN status messages. They facilitate load leveling and roaming within the premises LAN and allow sequence maintenance to improve security and performance within the NET. HELLO messages occur periodically in Access Intervals that contain priority SYNC messages. HELLOs are sent periodically relative to the sequence length, for instance, every 90 Access Intervals. HELLOs, like SYNC information, are optionally encrypted to provide greater security. </paragraph>
<paragraph id="P-0249" lvl="0"><number>&lsqb;0249&rsqb;</number> Each HELLO message includes a field for COST. COST is a measure of the access point to handle additional traffic. A device determining which of two or more access points having adequate signal strength to register which will select the base with the lowest COST factor. </paragraph>
<paragraph id="P-0250" lvl="0"><number>&lsqb;0250&rsqb;</number> The base computes COST on the basis of how many devices are attached to the NET, the degree of bandwidth utilization, whether the base is wired or wireless, the number of frequencies experiencing consistent interference within the sequence, and the quality of the connection the base has within the premises LAN. </paragraph>
<paragraph id="P-0251" lvl="0"><number>&lsqb;0251&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> illustrates the concept of access points communicating neighboring access point information through HELLO messages to facilitate roaming of portable/mobile devices. In a premises LAN, access points <highlight><bold>1401</bold></highlight>, <highlight><bold>1403</bold></highlight> and <highlight><bold>1405</bold></highlight> communicate SYNC information amongst themselves via wired backbone (LAN) <highlight><bold>1407</bold></highlight>. In addition, a wireless access point <highlight><bold>1409</bold></highlight> (discussed above) similarly communicates with the access points <highlight><bold>1401</bold></highlight>, <highlight><bold>1403</bold></highlight> and <highlight><bold>1405</bold></highlight> via a wireless link <highlight><bold>1411</bold></highlight>. A portable/mobile device <highlight><bold>1413</bold></highlight> is initially registered with access point <highlight><bold>1401</bold></highlight>, which acts as a control point for the portable/mobile device <highlight><bold>1413</bold></highlight>. HELLO messages transmitted by access point <highlight><bold>1401</bold></highlight> to portable/mobile device <highlight><bold>1413</bold></highlight> contain fields for neighboring access points <highlight><bold>1403</bold></highlight>, <highlight><bold>1405</bold></highlight> and <highlight><bold>1409</bold></highlight>. These fields may indicate, for example, addresses of the neighboring bases, their COST, the hopping sequences, hopping sequence indices, number of Access Intervals per hop, and NET clock. The portable/mobile device <highlight><bold>1413</bold></highlight> detects the HELLOs transmitted from access point <highlight><bold>1401</bold></highlight> and uses the information for coarse synchronization with the other access points <highlight><bold>1403</bold></highlight>, <highlight><bold>1405</bold></highlight> and <highlight><bold>1409</bold></highlight>. This permits the portable/mobile device to roam between access point coverage areas (i.e., between different NETs) without going through a full acquisition phase. Roaming of portable/mobile devices is discussed in more detail below. </paragraph>
<paragraph id="P-0252" lvl="0"><number>&lsqb;0252&rsqb;</number> Simply put, communication of neighbors&apos; information permits each access point to advise its associated portable/mobile devices (i.e., those having common communication parameters) on how to capture HELLO messages from neighboring access points having different communication parameters. Such communication parameters may include, for example, hopping sequences, spreading codes, or channel frequencies. </paragraph>
<paragraph id="P-0253" lvl="0"><number>&lsqb;0253&rsqb;</number> For example, neighbors&apos; information transmission is appropriate in any case where the system uses more than a single channel. For instance, in a direct sequence architecture, a single spreading code is often used. Capacity can be added to such a network by employing different spreading codes at each access point. The neighbors&apos; information included in the HELLO message from a given access point would include the spreading sequences of access points providing coverage in adjacent coverage areas. Likewise, in a multiple frequency channelized system, HELLO messages would include the channel frequencies of adjacent access points. </paragraph>
<paragraph id="P-0254" lvl="0"><number>&lsqb;0254&rsqb;</number> In addition to facilitating roaming, communication of neighbors&apos; information may also facilitate the initial selection of an access point by a portable/mobile device attaching to the premises LAN for the first time. </paragraph>
<paragraph id="P-0255" lvl="0"><number>&lsqb;0255&rsqb;</number> Access point HELLO messages may also facilitate adaptive access point transmitter power control. For example, each access point HELLO transmission could specify the transmitter power level being used by the access point. If a given attached portable/mobile device notes that the current access point transmitter power level is unnecessarily high (creating the possibility of interference with other access points), the portable/mobile unit could send a message to the access point indicating as such, and the access point could adjust the transmitter power level accordingly. </paragraph>
<paragraph id="P-0256" lvl="0"><number>&lsqb;0256&rsqb;</number> HELLO messages also enable communication of information indicating to all devices that certain changes in the NET are required. For example, the NET may switch hopping sequences periodically to improve security, or to avoid interference sources that consistently interfere with one or two frequencies within a given sequence. Interference may result from outside sources, or from other NETs. Changes to the NET are communicated over the course of several HELLO messages (with a countdown) before the change occurs, so that all devices are likely to be aware of changes and synchronize at the instant of change. </paragraph>
<paragraph id="P-0257" lvl="0"><number>&lsqb;0257&rsqb;</number> In addition, if encryption is used, the encryption key may be periodically changed in HELLOs. Like hopping sequence changes, KEY changes are sent over several HELLOs, and are encrypted using the existing key until the change goes into effect. </paragraph>
<paragraph id="P-0258" lvl="0"><number>&lsqb;0258&rsqb;</number> As mentioned above, roaming portable and mobile computing devices operating in the premises LAN will routinely move between access point coverage areas. At the maximum device velocity and expected coverage area per access point, a mobile device may be expected to cross a NET coverage contour in several seconds. Because of the use of multiple, non-synchronized frequency hopping NETs, it is more difficult to provide for simple hand-off between access points than it would be in a system that used cellular techniques with a single frequency per cell. The premises LAN makes special provisions for roaming by transmitting coarse frequency hopping synchronization information in HELLO messages. </paragraph>
<paragraph id="P-0259" lvl="0"><number>&lsqb;0259&rsqb;</number> The premises LAN uses a spanning tree algorithm to maintain current information regarding the general location of mobile devices within the network. When a device changes registration from one NET Control Point to another, routing information is updated throughout the infrastructure. Wired access points may broadcast spanning tree updates to attached wireless access points. </paragraph>
<paragraph id="P-0260" lvl="0"><number>&lsqb;0260&rsqb;</number> In the premises LAN, roaming portable and mobile devices initially select and register with an access point Control Point on the basis of link quality, i.e., signal quality, signal strength and COST information transmitted within HELLO messages. A device will remain attached to a particular access point until the link quality degrades below an acceptable level, then it will attempt to determine if an alternative NET is available. Different device operating scenarios dictate different roaming strategies, discussed below. </paragraph>
<paragraph id="P-0261" lvl="0"><number>&lsqb;0261&rsqb;</number> An idle device monitors SYNC and HELLO messages from the Control Point device to maintain NET connectivity. Type 2 devices do not employ power management, and always maintain their receivers in an active state. They monitor all SYNC messages. Type 1 and Type 3 devices typically employ power management, operating in standby or sleep modes of operation for many Access Intervals before activating their receivers for monitoring SYNC and HELLO messages. Control Points are guaranteed to send Priority SYNC frames every third Access Interval. HELLOs occur every 30th Priority SYNC frame. Power managed devices employ sleep algorithms synchronized to wake for the minimum period necessary to guarantee receipt of priority SYNC, HELLO, and Pending Message transmissions before resuming SLEEP. </paragraph>
<paragraph id="P-0262" lvl="0"><number>&lsqb;0262&rsqb;</number> Type 2 devices are typically operated from high capacity vehicular power systems, eliminating the need for power management. These devices may travel at velocities near the maximum system design specification, dictating more frequent roaming. Type 2 devices will initiate a search for an alternative NET if SYNC messages are consistently received at signal strengths below a Roaming Threshold or if reception errors are consistently detected. Because of the effects of frequency selective fading, signal strength information is averaged over the course of several hops within the hopping sequence. </paragraph>
<paragraph id="P-0263" lvl="0"><number>&lsqb;0263&rsqb;</number> If roaming is indicated, the device initiates a Roaming Algorithm, using Neighbors&apos; information from the most recent HELLO to attempt synchronization with another candidate NET. If SYNC is not detected within 6 hops, another candidate from the Neighbors list will be selected, and the process repeated. Once SYNC is attained on an alternative NET, the device will monitor signal strength and data errors for several hops to determine link quality. If link quality is acceptable, the device will continue monitoring until a HELLO is received. If COST is acceptable, it will then register with the new NET. The Control Point device will update the spanning tree over the wired backbone (or by RF if a wireless base). If link quality or COST is unacceptable, another candidate from the Neighbors list is selected and the process repeated. This continues until an acceptable connection is established. If a connection cannot be established, the device must return to the original NET or employ the initial acquisition algorithm. </paragraph>
<paragraph id="P-0264" lvl="0"><number>&lsqb;0264&rsqb;</number> Type 2 devices also have the option of monitoring other NETs before degradation of their NET connection. They may do so by monitoring their own NET for the SYNC and pending message list transmissions, then scanning other candidate NETs during the Sessions period of their NET. Other type devices may do so less frequently. </paragraph>
<paragraph id="P-0265" lvl="0"><number>&lsqb;0265&rsqb;</number> Type 1 and Type 3 devices may sleep extensively when idle, preferably activating every nine Access Intervals to resynchronize and check pending messages. Successful reception of at least one SYNC during three monitoring periods is necessary to maintain fine synchronization to the NET clock. Failure to receive two of three SYNC frames, or receipt of two or three SYNC messages with poor signal strength are possible indications of the need to further test link quality by remaining active for several consecutive SYNC transmissions. If signal strength or data errors over several hops indicates that link quality is poor, or if a received HELLO message indicates high COST, the roaming algorithm is initiated, and alternative NETs are evaluated, as in the case of Type 2 devices. </paragraph>
<paragraph id="P-0266" lvl="0"><number>&lsqb;0266&rsqb;</number> Some battery powered devices may sleep for periods of time more than nine Access Intervals. For example, devices with extremely limited battery capacity may sleep between HELLOs, or several HELLO periods, after which they must remain active for several consecutive Access Intervals to regain fine synchronization and assess whether to initiate roaming. </paragraph>
<paragraph id="P-0267" lvl="0"><number>&lsqb;0267&rsqb;</number> A Type 1, Type 2, or Type 3 device that has inbound message requirements immediately activates its receiver and waits for a SYNC and subsequent Reservation Opportunities. A device that does not detect SYNC messages over the course of six Access Intervals immediately initiates the Roaming Algorithm. </paragraph>
<paragraph id="P-0268" lvl="0"><number>&lsqb;0268&rsqb;</number> Outbound messages for devices that have changed coverage areas, but which have not yet registered with a new Control Point device, are problematic. For example, in the premises LAN, messages will be forwarded to the access point that the device had previously been attached to. The access point may attempt to poll the device during one or more Access Intervals, then transmit the unit address in the pending message list periodically for several seconds before disregarding it. Once the unit attaches to a base, the message must be transferred from the previous access point for delivery to the unit. All of these activities require transmission bandwidth on either the backbone or RF media, waste processing resources within the premise LAN, and result in delayed delivery. </paragraph>
<paragraph id="P-0269" lvl="0"><number>&lsqb;0269&rsqb;</number> As this premises LAN embodiment is designed, the network has no means of distinguishing messages it cannot deliver due to roaming from messages that should be retried due to signal propagation characteristics, interference, or sleeping devices. For this reason, the roaming algorithm may be designed to allow devices to quickly detect that they have lost connectivity within their current NET, and re-attach to a more favorably located access point. </paragraph>
<paragraph id="P-0270" lvl="0"><number>&lsqb;0270&rsqb;</number> Some improvement in delivering pending messages to roaming terminals can be obtained by routinely propagating pending message lists over the wired backbone. When a device attaches to an access point, that base is able to immediately ascertain that the device has a pending message, and initiate forwarding of the message for delivery to the device. </paragraph>
<paragraph id="P-0271" lvl="0"><number>&lsqb;0271&rsqb;</number> In the preferred frequency hopping embodiment of the present invention, the hopping sequence consists of 3 m&plusmn;1 frequencies, where m is an integer. 79 frequencies are preferred. This embodiment will support hopping rates of 100, 50 hops per second at <highlight><bold>1</bold></highlight> Access Interval per dwell, 25 hops per second at 2 frames per dwell, and 12.5 hops per second at 4 frames per dwell. Other rates can be supported for other Access Interval Durations. For example, if the Access Interval is optimized to 25 ms, hop rates of 80, 40, 20, and 10 hops per second would be supported. </paragraph>
<paragraph id="P-0272" lvl="0"><number>&lsqb;0272&rsqb;</number> All devices within the NET may have one or more hopping tables that contain potential hopping sequences that may be used. Up to 64 sequences may be stored in each device. Each sequence has an identifier, and each frequency in each sequence has an index. The sequence identifier and index are communicated in the SYNC transmission. </paragraph>
<paragraph id="P-0273" lvl="0"><number>&lsqb;0273&rsqb;</number> All SYNC transmissions may be block encrypted to prevent unauthorized devices from readily acquiring hopping synchronization information. To facilitate encryption, the encryption key may initially be factory set to a universal value in all devices. Users would then have the option of changing this key, by providing a new key to each device in the system. This may be accomplished through keyboard entry or other secure means. Keys may also be changed through the NET. </paragraph>
<paragraph id="P-0274" lvl="0"><number>&lsqb;0274&rsqb;</number> To facilitate hopping management, a hopping control portion of a protocol controller will download a hopping table to a radio modem, and will signal the radio modem when to hop. This approach consolidates timing functions in the protocol controller, while not requiring the controller to be concerned with conveying frequency selection data to the modem each hop. </paragraph>
<paragraph id="P-0275" lvl="0"><number>&lsqb;0275&rsqb;</number> The NET may switch hopping sequences periodically to improve security, or to avoid interference sources that consistently interfere with one or two frequencies within a given sequence. As mentioned above, changes to the NET are communicated over the course of several HELLO messages before the change occurs so that all devices are likely to be aware of changes. </paragraph>
<paragraph id="P-0276" lvl="0"><number>&lsqb;0276&rsqb;</number> Initial synchronization requires devices to ascertain the hopping sequence, the hop rate, and the specific frequency from the hopping sequence currently in use. Synchronization information is contained in two types of routine messages. The SYNC field at the beginning of an Access Interval contains synchronization information including the hopping sequence, the index of the current frequency within the sequence, the number of Access Intervals per hop, and the length of the Access Interval. It also contains a timing character that communicates the NET master clock to all listening devices. Termination messages in the Sessions period, ACK and CLEAR, contain the same information, but do not contain the timing character. </paragraph>
<paragraph id="P-0277" lvl="0"><number>&lsqb;0277&rsqb;</number> The simplest method for attaining synchronization is to Camp&mdash;select a quiet frequency that is likely to be within a sequence in use&mdash;and listen for valid synchronization information. If a SYNC message is detected, the listening device immediately has both coarse and fine synchronization, and can begin the registration process. </paragraph>
<paragraph id="P-0278" lvl="0"><number>&lsqb;0278&rsqb;</number> If SYNC is not detected, but a termination message is, then the device has acquired coarse synchronization. The particulars of the hopping sequence are known, but the boundaries of the dwells are not. To acquire fine synchronization, it begins hopping at the indicated hopping rate, listening for SYNC. If SYNC is not detected after a reasonable number of hops, preferably 12 or 15, the device reverts to camping. </paragraph>
<paragraph id="P-0279" lvl="0"><number>&lsqb;0279&rsqb;</number> The worst case scenario for synchronization is to synchronize to a single NET that is idle. Given a 79 frequency hopping sequence, one Access Interval per hop, and SYNC transmissions every third Access Interval if the NET is idle, it may take nine cycle times to guarantee that a SYNC transmission will be detected with 99.5% probability. At 50 hops per second, synchronization could require as long as 14 seconds. At 100 hops per second, 7 seconds is required. </paragraph>
<paragraph id="P-0280" lvl="0"><number>&lsqb;0280&rsqb;</number> At 2 Access Intervals per hop, a SYNC transmission is guaranteed to occur every frequency over 2 cycles of the hopping sequence. Six cycles are required for 99.5% probability of acquisition, corresponding to 19 seconds at 25 hops per second. At 4 Access Intervals per hop, at least one SYNC is guaranteed to occur each hop. Three cycles of the hopping sequence are required for 99.5% acquisition probability. At 12.5 hops per second, this also requires 19 seconds. </paragraph>
<paragraph id="P-0281" lvl="0"><number>&lsqb;0281&rsqb;</number> This illustrates the advantage of scalability. A device that uses an acquisition algorithm suitable for 2 or 4 Access Intervals per hop will also acquire a NET that hops at 1 Access Interval per hop. The algorithm may be as follows: </paragraph>
<paragraph id="P-0282" lvl="2"><number>&lsqb;0282&rsqb;</number> 1. The device scans candidate frequencies until it finds one with no Received Signal Strength Indicator indication. </paragraph>
<paragraph id="P-0283" lvl="2"><number>&lsqb;0283&rsqb;</number> 2. The device remains on the frequency for 6.32 seconds 2 Access Interval/hop &commat;25 Hops/second&times;2, or 4 Access Interval/hop &commat;12.5 hops/second&times;1, or until it detects a SYNC message or a valid termination message. </paragraph>
<paragraph id="P-0284" lvl="2"><number>&lsqb;0284&rsqb;</number> 3. If SYNC is detected, the device synchronizes its internal clock to the SYNC, and begins hopping with the NET for the next 11 hops. It may attempt registration after detecting valid SYNC and any Reservation Opportunity. If synchronization is not verified by detection of SYNC within the 11 hops, the acquisition algorithm is reinitialized. </paragraph>
<paragraph id="P-0285" lvl="2"><number>&lsqb;0285&rsqb;</number> 4. If a message termination (either an ACK or CLEAR) is detected, the device immediately hops to the next frequency in the sequence and waits for the SYNC. It is coarsely synchronized to the NET but has a timing offset from the NET clock. </paragraph>
<paragraph id="P-0286" lvl="0"><number>&lsqb;0286&rsqb;</number> When the next SYNC is received, the device synchronizes its clock to the NET clock and initiates registration. If SYNC is not received within a dwell time, the device hops to the next frequency in sequence. This continues until SYNC is attained, or until 15 hops have passed without receiving SYNC, after which the acquisition sequence is restarted. </paragraph>
<paragraph id="P-0287" lvl="2"><number>&lsqb;0287&rsqb;</number> If coarse acquisition is not obtained within 6.3 seconds, the device selects another frequency and repeats the process beginning with step 2. </paragraph>
<paragraph id="P-0288" lvl="0"><number>&lsqb;0288&rsqb;</number> Camping provides a worst case acquisition performance that is perceptibly slow to the human user of a portable device. The preferred approach has the receiver scan all potential frequencies in ascending order, at 125 &mgr;sec increments. When the highest frequency is reached, the search begins again at the lowest frequency. The 125 &mgr;s sampling rate is much faster than the 250 &mgr;sec channel switching time specification of the RF modem. This is possible because the overall switching time specification applies to worst case frequency switching intervals, i.e., from the highest to the lowest operating frequency. By switching a single channel at a time, switching may be maintained over frequency intervals very near a synthesizer phase detectors&apos; phase lock range, allowing nearly instantaneous frequency switching. The change from highest to lowest frequency at the end of the scan requires the standard 250 &mgr;sec. </paragraph>
<paragraph id="P-0289" lvl="0"><number>&lsqb;0289&rsqb;</number> The 125 &mgr;sec monitoring interval allows 85 &mgr;s to ascertain if receive clock has been detected prior to switching to the next frequency. The monitoring interval should be selected to be non-periodic with respect to the access interval. For example, the 125 &mgr;sec interval allows the entire hopping sequence to be scanned 2(n&plus;1) times in a 20 ms access interval. </paragraph>
<paragraph id="P-0290" lvl="0"><number>&lsqb;0290&rsqb;</number> If clock is recovered at any frequency, the receiver remains on frequency for a Reservation Opportunity and initiates channel access through the procedure described above. The scanning approach is less deterministic in terms of acquisition probability than camping, but the search time required for 99.5% acquisition probability is about 80 Access Intervals, or three times faster than that for camping. </paragraph>
<paragraph id="P-0291" lvl="0"><number>&lsqb;0291&rsqb;</number> A hybrid approach that scans only three or four consecutive frequencies incorporates the deterministic aspects of camping with some of the improved performance of the scanning algorithm. For scanning over a small number of frequencies an up/down scan is preferred, i.e., 1,2,3,2,1,2,3 since all frequency changes can be accomplished at the faster switching rate. The end frequencies are visited less often than those in the center. The number of frequencies used, e.g., 3 or 4, is selected so that all can be scanned during the preamble duration of a minimum length transmission. </paragraph>
<paragraph id="P-0292" lvl="0"><number>&lsqb;0292&rsqb;</number> All devices are required to have unique 48 bit global addresses. Local 16 bit addresses will be assigned for reduced overhead in communications. Local addresses will not be assigned to devices whose global addresses are not on an authentication list maintained in each access point and routinely updated over the infrastructure. </paragraph>
<paragraph id="P-0293" lvl="0"><number>&lsqb;0293&rsqb;</number> Once a device has attained synchronization, it must register with the control point to be connected with the NET. It initiates this by sending a Request for Poll indicating a registration request, and including its global address. The control point will register the device, and provide a short Network Address as an outbound message. The Control point will generate the short address if it is a single NET, or exchange the global address for a short Network Address with a Network Address Server if the NET is part of a larger infrastructured network of a premises LAN. </paragraph>
<paragraph id="P-0294" lvl="0"><number>&lsqb;0294&rsqb;</number> Once a device is synchronized to a NET, it must periodically update its local clock to the NET clock communicated in the SYNC message. The SYNC message contains a character designated as the SYNC character that transfers the NET clock synchronization. This may be the beginning or ending FLAG in the SYNC message, or a specific character within the message. </paragraph>
<paragraph id="P-0295" lvl="0"><number>&lsqb;0295&rsqb;</number> The maximum expected frequency error between NET and device local clocks is 100 parts per million. To maintain a 50 &mgr;s maximum clock error, the local device clock must be re-synchronized at 500 ms intervals. At 20 ms per access interval, a non-sleeping device has up to 26 SYNC opportunities within that period in which to re-synchronize and maintain required accuracy. </paragraph>
<paragraph id="P-0296" lvl="0"><number>&lsqb;0296&rsqb;</number> As mentioned above, it is desirable that battery powered devices have the capability to sleep, or power off, for extended periods of time to conserve power. The term sleeping terminal in this instance may refer to a device that powers down its radio communication hardware to save power while maintaining other functions in an operational state, or a device that power manages those functions as well. In the power managed state, the device must maintain its hop clock so that full acquisition is not required every time power management is invoked. </paragraph>
<paragraph id="P-0297" lvl="0"><number>&lsqb;0297&rsqb;</number> Devices that must sleep to manage their power consumption use Priority SYNC Messages to maintain synchronization. Priority SYNC Messages occur every three Access Intervals. In times of low NET activity, non-priority SYNC messages are omitted. By coordinating power management with Priority SYNC Messages, power managed devices can be guaranteed to wake up for Access Intervals where SYNCs will be present, even if the NET activity is low during the sleep period. </paragraph>
<paragraph id="P-0298" lvl="0"><number>&lsqb;0298&rsqb;</number> A sleeping device with no transmission requirements may sleep for eight 20 ms access intervals, and wake only for the SYNC and Reservation Poll at the beginning of the ninth Access Interval to monitor pending messages before returning to the sleep state, for a duty cycle of less than 5%. This provides three opportunities to synchronize to the NET clock within a 540 ms window. A flow chart depicting a device sleeping for several access intervals is shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>. </paragraph>
<paragraph id="P-0299" lvl="0"><number>&lsqb;0299&rsqb;</number> Devices may also sleep for longer periods of time, at the risk of losing fine synchronization. They may compensate by advancing their local clocks to account for the maximum timing uncertainty. For example, a terminal could sleep for 5 seconds without re-synchronizing by waking up 500 microseconds before it expects an Access Interval to begin, and successfully receive SYNC messages. This technique is valid for extended periods of time, up to the point where the maximum timing error approaches 50% of an Access Interval. A flow chart depicting a device sleeping for several seconds is shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>. </paragraph>
<paragraph id="P-0300" lvl="0"><number>&lsqb;0300&rsqb;</number> A power managed device that requires communication during a sleep period may immediately wake and attempt access to the NET at the next available Reservation Opportunity. </paragraph>
<paragraph id="P-0301" lvl="0"><number>&lsqb;0301&rsqb;</number> A device that requires communications may be able to register with one of several NETs operating in its vicinity, with transmissions occurring on many frequencies simultaneously. A good strategy is to synchronize to a NET that provides an acceptable communication link, then monitor HELLO messages to determine other candidate NETs before attaching to a particular NET by registering with the control point device. </paragraph>
<paragraph id="P-0302" lvl="0"><number>&lsqb;0302&rsqb;</number> As described above, a spontaneous wireless local area network or spontaneous LAN is one that is established for a limited time for a specific purpose, and which does not use the premises LAN to facilitate communications between devices or provide access to outside resources. Use of spontaneous LAN allows portable devices to share information, files, data, etc., in environments where communication via the premises LAN is not economically justifiable or physically possible. A spontaneous LAN capability also allows portable/mobile devices to have an equally portable network. Peripheral and vehicular LANs are examples of such spontaneous LANs. </paragraph>
<paragraph id="P-0303" lvl="0"><number>&lsqb;0303&rsqb;</number> Requirements for spontaneous LAN differ from an infrastructured premises LAN in several significant areas. The number of devices in a spontaneous LAN is likely to be smaller than the number that a single NET in a premises LAN must be capable of supporting. In addition, coverage areas for spontaneous LANs are typically smaller than coverage areas for an access point participating in the premises LAN. In a spontaneous LAN, communication often takes place over relatively short distances, where devices are within line of sight of each other. </paragraph>
<paragraph id="P-0304" lvl="0"><number>&lsqb;0304&rsqb;</number> In an premises LAN, the majority of communications are likely to involve accessing communication network resources. For example, portable devices with limited processing capabilities, memory, and power supplies are able to access large databases or powerful computing engines connected to the AC power grid. Access points within the premises LAN are well suited to the role of Control Points for managing synchronization and media access within each NET. </paragraph>
<paragraph id="P-0305" lvl="0"><number>&lsqb;0305&rsqb;</number> In a spontaneous LAN, however, communications are limited to exchanges with spontaneous NET constituents. Additionally, NET constituents may potentially leave at any time, making it difficult to assign control point responsibilities to a single device. A shared mechanism for synchronization and media access is preferable in most cases. </paragraph>
<paragraph id="P-0306" lvl="0"><number>&lsqb;0306&rsqb;</number> In a spontaneous LAN, battery power limitations may preclude assignment of a single device as a control point. The routine transmission of SYNC and access control messages places a significant power drain on a portable, battery powered device. Also, the control point architecture dictates that transmissions intended for devices other than the control point be stored and forwarded to the destination device, further increasing battery drain, and reducing system throughput. </paragraph>
<paragraph id="P-0307" lvl="0"><number>&lsqb;0307&rsqb;</number> Moreover, the use of scheduled transmission in a premises LAN is likely to differ from use in a spontaneous LAN. For example, unlike the premises LAN, in the spontaneous LAN, applications such as massaging and two way (i.e., full-duplex) voice communications may only occasionally be used, whereas video transmission and telemetry exchange may be prevalent. </paragraph>
<paragraph id="P-0308" lvl="0"><number>&lsqb;0308&rsqb;</number> To promote compatibility and integration with the premises LAN, operational differences required by multiple participating devices should be minimized. For example, selecting relatively close frequency bands for each LAN assists the design of a multiple LAN transceiver, reducing circuitry, cost, power, weight and size while increasing reliability. Similarly, selecting communication protocols so that the spontaneous LAN protocol constitutes a subset or superset of premises LAN may enable a given device to more effectively communication in both LANs, while minimizing both the overall protocol complexity and potentially limited memory and processing power. </paragraph>
<paragraph id="P-0309" lvl="0"><number>&lsqb;0309&rsqb;</number> Use of frequency hopping is desirable in premises LAN because of its ability to mitigate the effects of interference and frequency selective fading. In the case of the latter, frequency hopping allows systems to be installed with less fade margin than single frequency systems with otherwise identical radio modem characteristics, providing improved coverage. </paragraph>
<paragraph id="P-0310" lvl="0"><number>&lsqb;0310&rsqb;</number> The potentially smaller coverage area requirement of spontaneous LANs, however, allows single frequency operation to be considered for some applications, e.g., such as a peripheral LAN. Regulatory structures are in place in some countries to allow single frequency operation in the same bands as frequency hopping systems, providing that single frequency devices operate at reduced power levels. The lower transmit power of single frequency operation and elimination of periodic channel switching are desirable methods of reducing battery drain. The choice of single frequency or frequency hopped operation is dictated by the coverage requirements of the network, and may be left as an option to device users. </paragraph>
<paragraph id="P-0311" lvl="0"><number>&lsqb;0311&rsqb;</number> As noted earlier, the basic Access Interval structure is suited to single frequency operation as well as to frequency hopping. SYNC messages in a single frequency system substitute a single frequency indication in the hopping sequence identifier field. </paragraph>
<paragraph id="P-0312" lvl="0"><number>&lsqb;0312&rsqb;</number> A spontaneous LAN comes into existence when two or more devices establish communications, and ceases when its population falls to less than two. Before a spontaneous LAN can be established, at least two devices must agree upon a set of operating parameters for the network. Such agreement may be preprogrammed else exchanged and acknowledged prior to establishing the spontaneous LAN. Once the spontaneous LAN is established, other devices coming into the network must be able to obtain the operating parameters and acquire access. </paragraph>
<paragraph id="P-0313" lvl="0"><number>&lsqb;0313&rsqb;</number> More specifically, to establish a spontaneous LAN, a computing device must first identify at least one other network device with which spontaneous LAN communication is desired. To identify another network device, the computing device may play an active or passive role. In an active role, the computing device periodically broadcasts a request to form spontaneous LAN with either a specific network device or, more likely, a specific type of network device. If a network device fitting the description of the request happens to be in range or happens into range and is available, it responds to the periodic requests to bind with the computing device, establishing the spontaneous LAN. Alternately, the network device may take a passive role in establishing the spontaneous LAN. In a passive role, the computing device merely listens for a request to form a spontaneous LAN transmitted by the appropriate network device. Once such a network device comes into range, the computing device responds to bind with the network device, establishing the spontaneous LAN. </paragraph>
<paragraph id="P-0314" lvl="0"><number>&lsqb;0314&rsqb;</number> The choice of whether a device should take a passive or active role is a matter of design choice. For example, in one embodiment where peripheral devices have access to AC power, the roaming computer terminals take a passive role, while the peripheral devices take a more active role. Similarly, in another embodiment where a vehicle terminal has access to a relatively larger battery source, an active role is taken when attempting to form a spontaneous LAN, i.e., a vehicular LAN, with a hand-held computing device. </paragraph>
<paragraph id="P-0315" lvl="0"><number>&lsqb;0315&rsqb;</number> Binding, a process carried out pursuant to a binding protocol stored in each network device, may constitute a very simple process such as might exist when creating a spontaneous LANs that operates on a single frequency channel. Under such a scenario, a simple acknowledge handshake between the computing terminal and the other network device may be sufficient to establish a spontaneous LAN pursuant to commonly stored, preprogrammed operating parameters. However, more complex binding schemes may also be implemented so as to support correspondingly more complex spontaneous LANs as proves necessary. An example of a more complex binding scheme is described below. </paragraph>
<paragraph id="P-0316" lvl="0"><number>&lsqb;0316&rsqb;</number> It is desirable in some large spontaneous LANs for one device to be designated as a fully functional control point, providing identical NET operation to a single NET in the premises LAN. Providing that all devices share a hopping table and encryption key, the designated device would initiate control point activities, and other devices would synchronize to the designated unit. A device with greater battery capacity, or one that can be temporarily connected to AC power is best suited to the dedicated control point function. This architecture is applicable to Client-Server applications (where the server assumes the control point function), or to other applications where a single device is the predominant source or destination of communications. A portable device used as a dedicated control point is required to have additional programming and memory capacity to manage reservation based media access, pending message lists, and scheduled service slot allocations. </paragraph>
<paragraph id="P-0317" lvl="0"><number>&lsqb;0317&rsqb;</number> In embodiments where communication requirements of a spontaneous LAN are largely peer to peer, there may be no overwhelming candidate for a dedicated Control Point. Thus, in such cases, the Control Point function is either distributed among some or all the devices within the spontaneous LAN. In such scenarios, the interleaved Access Interval approach used for wireless access points is employed. Initially, control point responsibilities are determined during the binding process. Users may designate or redesignate a Control Point device when several candidates are available. </paragraph>
<paragraph id="P-0318" lvl="0"><number>&lsqb;0318&rsqb;</number> For spontaneous LANs, access intervals may be simplified to reduce power consumption, program storage and processing power requirements for portable devices used as control points. Control Point devices transmit SYNC, pending message lists, and Time Division Multiple Access slot reservations normally, but only use the single slot reservation Poll (Idle Sense Multiple Access). The reservation poll contains a field indicating reduced control point functionality. This places other devices in a point-to-point communication mode, using the Implicit Idle Sense Algorithm. The probability factor p communicated in the reservation poll is used for the Implicit Idle Sense algorithm. Control point devices may use the deferred SYNC mechanism for light system loading, transmitting Priority SYNC every third Access Interval to further decrease their transmission requirements. Control point devices must monitor the reservation slot for messages addressed to them, but may sleep afterwards. </paragraph>
<paragraph id="P-0319" lvl="0"><number>&lsqb;0319&rsqb;</number> Request for Polls initiated under Implicit Idle Sense use point-to-point addressing, indicating the address of the destination device directly, rather than the control point device. This eliminates the need for the Control Point device to store and forward transmissions within the spontaneous LAN. The device detecting its address in a Request for Poll begins a session, after employing the Implicit Idle Sense algorithm, by Polling the source address identified in the Request for Poll. The terminating ACK and CLEAR messages contain an Explicit Idle Sense probability factor equal to that in the original reservation poll. </paragraph>
<paragraph id="P-0320" lvl="0"><number>&lsqb;0320&rsqb;</number> To allow for power managed devices, the Control Point device maintains a pending message list. Devices that have been unable to establish communication with a sleeping device initiate a session with the Control Point device to register the pending message. Upon becoming active, the sleeping device will initiate a Poll to the device originating the pending message. The Control Point device will eliminate the pending message indication by aging, or by receipt of communication from the destination device clearing the pending message. Control point devices are not required to store pending messages, only addresses. </paragraph>
<paragraph id="P-0321" lvl="0"><number>&lsqb;0321&rsqb;</number> As mentioned above, HELLO messages are broadcast to indicate changes in NET parameters. HELLO messages may be omitted to simplify the Control Point function in spontaneous LANs. </paragraph>
<paragraph id="P-0322" lvl="0"><number>&lsqb;0322&rsqb;</number> Devices are assigned local addresses upon registration with the Control Point device. Devices may communicate an alias that identifies the device user to other users to the Control Point device where it is stored in an address table. The address table may be obtained by other network constituents by querying the Control Point device. A peripheral LAN is a type of spontaneous LAN which serves as a short range interconnect between a portable or mobile computing device (MCD) and peripheral devices. </paragraph>
<paragraph id="P-0323" lvl="0"><number>&lsqb;0323&rsqb;</number> Designers of portable products are constantly challenged with reducing size, weight, and power consumption of these devices, while at the same time increasing their functionality and improving user ergonomics. Functions that may be used infrequently, or which are too large to fit within the constraints of good ergonomic design may be provided in peripheral devices, including printers, measurement and data acquisition units, optical scanners, etc. When cabled or otherwise physically connected to a portable product, these peripherals often encumber the user, preventing freedom of movement or mobility. This becomes more problematic when use of more than one peripheral is required. </paragraph>
<paragraph id="P-0324" lvl="0"><number>&lsqb;0324&rsqb;</number> A second consideration for portable product design is communication docking. A communication dock is a device that holsters or houses a portable unit, and provides for communication interconnection for such tasks as program downloading, data uploading, or communication with large printers, such as those used for printing full sized invoices in vehicular applications. Communication docking of a portable unit may also involve power supply sharing and/or charging. </paragraph>
<paragraph id="P-0325" lvl="0"><number>&lsqb;0325&rsqb;</number> The requirement for communication docking capability forces newer portable product designs to be mechanically compatible with older docking schemes, or may require that new docks, or adapters, be developed for each new generation of portable device. Product specific docking approaches eliminate compatibility between devices manufactured by different suppliers. This has hindered development of uniform standards for Electronic Data Interchange between portable devices and fixed computing systems. </paragraph>
<paragraph id="P-0326" lvl="0"><number>&lsqb;0326&rsqb;</number> Physical connection between a portable device with a peripheral or communication dock also hinders user efficiency. Peripheral devices are generally attached with cable. If a peripheral is small enough to be carried or worn on a belt, the mobility of the user may be maintained. If a user must carry a hand-held portable device that is connected to a belt mounted peripheral, the assembly cannot be set down while a task that requires movement to a location several feet away is undertaken unless the portable device and peripheral are disconnected. Likewise, connection to peripherals too large to be portable requires the user to frequently connect and disconnect the device and the peripheral. </paragraph>
<paragraph id="P-0327" lvl="0"><number>&lsqb;0327&rsqb;</number> Use of wireless peripheral LAN interconnection greatly simplifies the task of portable devices communicating with peripherals. In doing so, wireless connectivity allows improved ergonomics in portable product design, flexibility in interconnection to one or more peripherals, freedom of movement over a radius of operation, forward and backward compatibility between portable units and peripherals, and potential communications among products manufactured by different vendors. </paragraph>
<paragraph id="P-0328" lvl="0"><number>&lsqb;0328&rsqb;</number> Constituents within a peripheral LAN generally number six or fewer devices. One roaming computing device and one or two peripherals comprise a typical configuration. Operating range is typically less than fifty feet. </paragraph>
<paragraph id="P-0329" lvl="0"><number>&lsqb;0329&rsqb;</number> Because the computing devices generally control the operation of peripheral devices, in a peripheral LAN a master/slave type protocol is appropriate. Moreover, roaming computing devices serving as master are well suited to the role of Control Points for managing synchronization and media access within each peripheral LAN. All peripheral communications are slaved to the master. </paragraph>
<paragraph id="P-0330" lvl="0"><number>&lsqb;0330&rsqb;</number> In a peripheral LAN, roaming mobile or portable computing devices and wireless peripherals may all operate from battery power. Operating cycles between charging dictate use of power management techniques. </paragraph>
<paragraph id="P-0331" lvl="0"><number>&lsqb;0331&rsqb;</number> Although all participants in a peripheral LAN might also be configured to directly participate in the premises LAN, the tradeoff in cost, power usage and added complexity often weighs against such configuration. Even so, participants within a peripheral LAN can be expected to function in a hierarchical manner, through a multiple participating device, with the premises LAN. Thus, the use of a much simpler, lower-power transceiver and associated protocol may be used in the peripheral LAN. </paragraph>
<paragraph id="P-0332" lvl="0"><number>&lsqb;0332&rsqb;</number> As previously described, a roaming computing device serving as a master device may itself be simultaneously attempting to participate in other networks such as the premises or vehicular LANs. Considerable benefits arise if the radio and processing hardware that supports operation within the wireless network can also support such operation. For example, a device that is capable of frequency hopping is inherently suited to single frequency operation. If it can adjust transmitter power level and data rate to be compatible with the requirements of the peripheral LAN, it can function in both systems. The major benefits of common transceiver hardware across LANs include smaller product size, improved ergonomics, and lower cost. </paragraph>
<paragraph id="P-0333" lvl="0"><number>&lsqb;0333&rsqb;</number> Specifically, in one embodiment, radio communication on the premises LAN, as described herein, takes place using radio transceivers capable of performing frequency-hopping. To communicate on a peripheral LAN, such transceivers could also utilize frequency-hopping at a lower power. However, such transceivers are relatively expensive in comparison to a lower power, narrow-band, single frequency transceivers. Because of the cost differential, it proves desirable to use the single frequency transceivers for all peripheral devices which will not participate in the premises LAN. Therefore, the more expensive, frequency-hopping transceivers which are fitted into roaming computing devices are further designed to stop hopping and lock into the frequency of the single frequency transceiver, allowing the establishment of peripheral LANs. </paragraph>
<paragraph id="P-0334" lvl="0"><number>&lsqb;0334&rsqb;</number> Instead of frequency hopping, the peripheral LAN may also use narrow-band, single frequency communication, further simplifying the radio transceiver design for commonality. In another embodiment of the peripheral LAN transceivers, operation using one of a plurality of single frequency channels is provided. Thus, to overcome interference on one channel, the transceiver might select from the remaining of the plurality an alternate, single operating frequency with lesser channel interference. To accommodate the plurality of single frequency channels, the peripheral LAN transceivers may either communicate an upcoming frequency change so that corresponding peripheral LAN participants can also change frequency, or the transceivers may be configured to use frequency synthesis techniques to determine which of the plurality a current transmission happens to be. </paragraph>
<paragraph id="P-0335" lvl="0"><number>&lsqb;0335&rsqb;</number> The Access Interval structure is also an appropriate choice for peripheral LAN operations. In one embodiment, to provide for simplicity and tighter integration, the Access Interval for the peripheral LAN is a subset of the Access Interval used in the premises LAN. HELLO messages, Implicit Idle Sense, Data Rate Switching, and scheduled services are not implemented. Peripheral devices normally sleep, activate their receivers for SYNC transmissions from the participating master device, and resume sleeping if no pending messages are indicated and they have no inbound transmission requirements. Access Intervals occur at regular intervals, allowing for power management. Access Intervals may be skipped if the master has other priority tasks to complete. </paragraph>
<paragraph id="P-0336" lvl="0"><number>&lsqb;0336&rsqb;</number> To initialize the peripheral LAN, a device desiring initialization, a master device, selects a single operating frequency by scanning the available frequencies for one with no activity. A typical master device might be a roaming computing device desiring access to a local peripheral. Default values for other parameters, including Access Interval duration, are contained within each participant&apos;s memory. Such parameters may be preadjusted in each participant to yield specific performance characteristics in the peripheral LAN. </paragraph>
<paragraph id="P-0337" lvl="0"><number>&lsqb;0337&rsqb;</number> Once a master device identifies a single frequency, slaves, which are generally peripherals, are brought into the peripheral LAN through a process called binding. Binding is initiated by the master device by invoking a binding program contained therein. Slaves, such as peripherals, are generally programmed to enter a receptive state when idle. Thus, in one embodiment, the master device accomplishes binding by transmitting Access Intervals of known duration sequentially on a series of four frequencies spread throughout the available frequency range. The specific frequencies and Access Interval durations used are stored as parameters in all potential participating devices. A 250 KBPS transfer rate is appropriate in some embodiments of the peripheral LAN, reflecting a balance between performance and complexity in peripheral devices. </paragraph>
<paragraph id="P-0338" lvl="0"><number>&lsqb;0338&rsqb;</number> A slave, e.g., a peripheral, responds to the binding attempts by the master device on a given frequency until the slave successfully receives and establishes communication with the master device. If they do not establish communication after four Access Intervals, the slave switches to the next frequency for four Access Interval periods. Once communication is established, the slave registers with the master and obtains the master device&apos;s selected operating frequency and related communication parameters. When all slave devices have been bound, the master terminates the binding program and normal operation at the selected single frequency may begin. </paragraph>
<paragraph id="P-0339" lvl="0"><number>&lsqb;0339&rsqb;</number> <highlight><bold>15</bold></highlight> Referring to <cross-reference target="DRAWINGS">FIG. 15</cross-reference>, in a hierarchical network, peripheral LAN masters use a secondary access interval <highlight><bold>1501</bold></highlight> that is synchronized to the Access Interval of a parent (premises) LAN control point. Peripheral LAN Access Intervals occur less frequently than premises LAN Access Intervals, e.g., every other or every third Priority SYNC Access Interval. </paragraph>
<paragraph id="P-0340" lvl="0"><number>&lsqb;0340&rsqb;</number> During the premises LAN Access Interval, the peripheral LAN master device monitors the premises LAN control point for SYNC <highlight><bold>1503</bold></highlight> reservation poll <highlight><bold>1505</bold></highlight> and exchanges inbound and outbound message according to the normal rules of the access protocol. The master switches to the peripheral LAN frequency, and transmits its own SYNC frame <highlight><bold>1507</bold></highlight> during the session period <highlight><bold>1509</bold></highlight> of its parent control point allowing communication with its peripherals. The peripheral LAN Access Interval is generally shorter than the premises LAN Access Interval, so that it does not extend beyond the premises LAN Access Interval boundary. At the end of the peripheral LAN Access Interval <highlight><bold>1501</bold></highlight>, the master switches to the premises LAN frequency for the next SYNC <highlight><bold>1503</bold></highlight>. </paragraph>
<paragraph id="P-0341" lvl="0"><number>&lsqb;0341&rsqb;</number> The secondary SYNC <highlight><bold>1507</bold></highlight> may only be transmitted if the peripheral LAN master is not busy communicating through the premises LAN. If a communication session is occurring, the master must defer SYNC, preventing communication with its peripherals during that Access Interval. The master must also defer SYNC if the current frequency in the LAN is prone to interference from the peripheral LAN frequency, i.e., they are the same frequency or adjacent frequencies. If two consecutive SYNCs are deferred, peripherals will activate their receivers continuously for a period of time, allowing the master to transmit during any Access Interval. This approach is also applicable when the master roams between frequency hopping NETS. Since NETs are not synchronized to one another, the devices in the peripheral LAN adjust Access Interval boundaries each time the master roams. If peripherals do not detect SYNC within a timeout period, they may duty cycle their reception to conserve battery power. </paragraph>
<paragraph id="P-0342" lvl="0"><number>&lsqb;0342&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 16, a</cross-reference> Roaming Algorithm Flow Diagram illustrates how a roaming computing device will select a suitable access point. Roaming computing devices operating in the infrastructured network environment formed by the access points will routinely move between access point coverage areas. The roaming computing devices are able to disconnect from their current access point communication link and reconnect a communication link to a different access point, as necessitated by device roaming. </paragraph>
<paragraph id="P-0343" lvl="0"><number>&lsqb;0343&rsqb;</number> Access points transmit HELLO messages to devices in their coverage area. These HELLO messages communicate to roaming computing devices the cost of connection through the access point, addresses of neighboring access points, and the cost of connection through these neighboring access points. This information allows roaming computing devices to determine the lowest cost connection available and to connect to the access point with the lowest cost. </paragraph>
<paragraph id="P-0344" lvl="0"><number>&lsqb;0344&rsqb;</number> In addition, access point HELLO message may include communication parameters of neighboring access points, such as frequency hopping sequences and indices, spread spectrum spreading codes, or FM carrier channel frequencies. This information allows roaming computing devices to roam and change access point connections without going through a full acquisition phase of the new access point&apos;s parameters. </paragraph>
<paragraph id="P-0345" lvl="0"><number>&lsqb;0345&rsqb;</number> Roaming computing devices initially select and register with an access point control point on the basis of link quality: signal strength and cost information transmitted within HELLO messages. A device will remain attached to a particular access point until the link quality degrades below an acceptable level; then it will attempt to determine if an alternative access point connection is available. The device initiates a roaming algorithm, using neighbors information from the most recent HELLO message to attempt connection with another candidate access point. If connection fails, another candidate from the neighbors list will be selected, and the process repeated. Once connection is made with an alternative access point, the device will monitor signal strength and data errors to determine link quality. If link quality is acceptable, the device will continue monitoring until a HELLO message is received. If the cost is acceptable, it will register with the new access point, and the access point will update the spanning tree over the infrastructure. If link quality or cost is unacceptable, another candidate from the neighbors list is selected and the process repeated. This continues until an acceptable connection is established. If one cannot be established, the device must return to the original access point connection or employ the initial acquisition algorithm. </paragraph>
<paragraph id="P-0346" lvl="0"><number>&lsqb;0346&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28</cross-reference><highlight><italic>a </italic></highlight>illustrates an embodiment of the hierarchical communication system according to the present invention communication is maintained in a warehouse environment. Specifically, a worker utilizes a roaming computing device, a computer terminal <highlight><bold>3007</bold></highlight>, and a code reader <highlight><bold>3009</bold></highlight> to collect data such as identifying numbers or codes on warehoused goods, such as the box <highlight><bold>3010</bold></highlight>. As the numbers and codes are collected, they are forwarded through the network to a host computer <highlight><bold>3011</bold></highlight> for storage and cross-referencing. In addition, the host computer <highlight><bold>3011</bold></highlight> may, for example, forward cross-referenced information relating to the collected numbers or codes back through the network for display on the terminal <highlight><bold>3007</bold></highlight> or for printing on a printer <highlight><bold>3013</bold></highlight>. The host computer <highlight><bold>3011</bold></highlight> can be configured as a file server to perform such functions. Similarly, the collected information may be printed from the computer terminal <highlight><bold>3007</bold></highlight> directly on the printer <highlight><bold>3013</bold></highlight>. Other exemplary communication pathways supported include message exchanges between the computer terminal <highlight><bold>3007</bold></highlight> and other computer terminals (not shown) or the host computer <highlight><bold>3011</bold></highlight>. </paragraph>
<paragraph id="P-0347" lvl="0"><number>&lsqb;0347&rsqb;</number> The host computer <highlight><bold>3011</bold></highlight> provides the terminal <highlight><bold>3007</bold></highlight> with remote database storage, access and processing. However, the terminal <highlight><bold>3007</bold></highlight> also provides for local processing within its architecture to minimize the need to access the remote host computer <highlight><bold>3011</bold></highlight>. For example, the terminal <highlight><bold>3007</bold></highlight> may store a local database for local processing. Similarly, the terminal <highlight><bold>3007</bold></highlight> may run a variety of application programs which never, occasionally or often need access to the remote host computer <highlight><bold>3011</bold></highlight>. </paragraph>
<paragraph id="P-0348" lvl="0"><number>&lsqb;0348&rsqb;</number> Many of the devices found in the illustrative network are battery powered and therefore must conservatively utilize their radio transceivers. For example, the hand-held computer terminal <highlight><bold>3007</bold></highlight> receives its power from either an enclosed battery or a forklift battery (not shown) via a communication dock within the forklift <highlight><bold>3014</bold></highlight>. Similarly, the code reader <highlight><bold>3009</bold></highlight> operates on portable battery power as may the printer <highlight><bold>3013</bold></highlight>. The arrangement of the communication network, communication protocols used, and data rate and power level adjustments help to optimize battery conservation without substantially degrading network performance. </paragraph>
<paragraph id="P-0349" lvl="0"><number>&lsqb;0349&rsqb;</number> In the illustrated embodiment shown in <cross-reference target="DRAWINGS">FIG. 28</cross-reference><highlight><italic>a, </italic></highlight>the hierarchical communication system of the present invention consists of a premises LAN covering a building or group of buildings. The premises LAN in the illustrated embodiment includes a hardwired backbone LAN <highlight><bold>3019</bold></highlight> and access points <highlight><bold>3015</bold></highlight> and <highlight><bold>3017</bold></highlight>. A host computer <highlight><bold>3011</bold></highlight> and any other nonmobile network device located in the vicinity of the backbone LAN <highlight><bold>3019</bold></highlight> can be directly attached to the backbone LAN <highlight><bold>3019</bold></highlight>. However, mobile devices and remotely located devices must maintain connectivity to the backbone LAN <highlight><bold>3019</bold></highlight> through either a single access point such as the access point <highlight><bold>3015</bold></highlight>, a multi-hop network of access points such as is illustrated by the access points <highlight><bold>3015</bold></highlight> and <highlight><bold>3017</bold></highlight>. The access points <highlight><bold>3015</bold></highlight> and <highlight><bold>3017</bold></highlight> contain a relatively higher power transmitter, and provide coverage over the entire warehouse floor. Although a single access point may be sufficient, if the warehouse is too large or contains interfering physical barriers, the multi-hop plurality of access points <highlight><bold>3017</bold></highlight> may be desirable. Otherwise, the backbone LAN <highlight><bold>3019</bold></highlight> must be extended to connect all of the access points <highlight><bold>3017</bold></highlight> directly to provide sufficient radio coverage. Through the premises LAN, relatively stable, longer range wireless and hardwired communication is maintained. </paragraph>
<paragraph id="P-0350" lvl="0"><number>&lsqb;0350&rsqb;</number> Because roaming computing devices, such as the hand-held computer terminal <highlight><bold>3007</bold></highlight>, cannot be directly hardwired to the backbone LAN <highlight><bold>3019</bold></highlight>, they are fitted with RF transceivers. To guarantee that such a network device can directly communicate on the premises LAN with at least one of the access points <highlight><bold>3015</bold></highlight> and <highlight><bold>3017</bold></highlight>, the fitted transceiver is selected to yield approximately the same transmission power as do the access points <highlight><bold>3015</bold></highlight> and <highlight><bold>3017</bold></highlight>. However, not all roaming network devices require a direct RF link to the access points <highlight><bold>3015</bold></highlight> and <highlight><bold>3017</bold></highlight>, and some may not require any link at all. Instead, with such devices, communication exchange is generally localized to a small area and, as such, only requires the use of relatively lower power, short range transceivers. The devices which participate in such localized, shorter range communication form spontaneous LANs. </paragraph>
<paragraph id="P-0351" lvl="0"><number>&lsqb;0351&rsqb;</number> For example, the desire by a roaming terminal to access peripheral devices such as the printer <highlight><bold>3013</bold></highlight> and modem <highlight><bold>3023</bold></highlight>, results in the roaming terminal establishing a peripheral LAN with the peripheral devices. Similarly, a peripheral LAN might be established when needed to maintain local communication between a code scanner <highlight><bold>3009</bold></highlight> and the terminal <highlight><bold>3007</bold></highlight>. In an exemplary embodiment, the printer <highlight><bold>3013</bold></highlight> are located in a warehouse dock with the sole assignment of printing out forms based on the code information gathered from boxes delivered to the dock. In particular, as soon as the code reader gathers information, it relays the information along a peripheral LAN to the terminal <highlight><bold>3007</bold></highlight>. Upon receipt, the terminal <highlight><bold>3007</bold></highlight> communicates via the premises LAN to the host computer <highlight><bold>3011</bold></highlight> to gather related information regarding a given box. Upon receipt of the related information, the terminal <highlight><bold>3007</bold></highlight> determines that printing is desired with the printer <highlight><bold>3013</bold></highlight> located at the dock. When the forklift <highlight><bold>3014</bold></highlight> enters the vicinity of the dock, the terminal <highlight><bold>3007</bold></highlight> establishes a peripheral LAN with the printer <highlight><bold>3013</bold></highlight> which begins printing the collected code information. </paragraph>
<paragraph id="P-0352" lvl="0"><number>&lsqb;0352&rsqb;</number> To carry out the previous communication exchange, the printer <highlight><bold>3013</bold></highlight> and code reader <highlight><bold>3009</bold></highlight> are fitted with a lower power peripheral LAN transceivers for short range communication. The computer terminal <highlight><bold>3007</bold></highlight> transceiver is not only capable of peripheral LAN communication, but also with the capability of maintaining premises LAN communication. In an alternate exchange however, the code reader <highlight><bold>3009</bold></highlight> might be configured to participate on both LANs, so that the code reader <highlight><bold>3009</bold></highlight> participates in the premises LAN to request associated code information from the host computer <highlight><bold>3011</bold></highlight>. In such a configuration, either the code reader <highlight><bold>3009</bold></highlight> or terminal <highlight><bold>3007</bold></highlight> could act as the control point of the peripheral LAN. Alternately, both could share the task. </paragraph>
<paragraph id="P-0353" lvl="0"><number>&lsqb;0353&rsqb;</number> With capability to participate in the peripheral LAN only, the code reader <highlight><bold>3009</bold></highlight>, or any other peripheral LAN participant, might still gain access to the premises LAN indirectly through the terminal <highlight><bold>3007</bold></highlight> acting as a relaying device. For example, to reach the host computer <highlight><bold>3011</bold></highlight>, the code reader <highlight><bold>3009</bold></highlight> first transmits to the computer terminal <highlight><bold>3007</bold></highlight> via the peripheral LAN. Upon receipt, the computer terminal <highlight><bold>3007</bold></highlight> relays the transmission to one of the access points <highlight><bold>3015</bold></highlight> and <highlight><bold>3017</bold></highlight> for forwarding to the host <highlight><bold>3011</bold></highlight>. Communication from the host <highlight><bold>3011</bold></highlight> to the code reader <highlight><bold>3009</bold></highlight> is accomplished via the same pathway. </paragraph>
<paragraph id="P-0354" lvl="0"><number>&lsqb;0354&rsqb;</number> It is also possible for any two devices with no access to the premises LAN to communicate to each other. For example, the modem <highlight><bold>3023</bold></highlight> could receive data and directly transmit it for printing to the printer <highlight><bold>3013</bold></highlight> via a peripheral LAN established between the two. Similarly, the code reader <highlight><bold>3009</bold></highlight> might choose to directly communicate code signals through a peripheral LAN to other network devices via the modem <highlight><bold>3023</bold></highlight>. </paragraph>
<paragraph id="P-0355" lvl="0"><number>&lsqb;0355&rsqb;</number> In an alternate configuration, a peripheral LAN access point <highlight><bold>3021</bold></highlight> is provided which may be directly connected to the backbone LAN <highlight><bold>3019</bold></highlight> (as shown), acting as a direct access point to the backbone LAN <highlight><bold>3019</bold></highlight>, or indirectly connected via the access points <highlight><bold>3015</bold></highlight> and <highlight><bold>3017</bold></highlight>. The peripheral LAN access point <highlight><bold>3021</bold></highlight> is positioned in the vicinity of other peripheral LAN devices and thereafter becomes a control point participant. Thus, peripheral LAN communication flowing to or from the premises LAN avoids high power radio transmissions altogether. However, it can be appreciated that a stationary peripheral LAN access point may not always be an option when all of the peripheral LAN participants are mobile. In such cases, a high power transmission to reach the premises LAN may be required. </paragraph>
<paragraph id="P-0356" lvl="0"><number>&lsqb;0356&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28</cross-reference><highlight><italic>b </italic></highlight>illustrates other features of the present invention in the use of spontaneous LANs in association with a vehicle which illustrate the capability of automatically establishing a premises and a peripheral LAN when moving in and out of range to perform services and report on services rendered. In particular, like the forklift <highlight><bold>3014</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 28</cross-reference><highlight><italic>a, </italic></highlight>a delivery truck <highlight><bold>3033</bold></highlight> provides a focal point for a spontaneous LAN utilization. Within the truck <highlight><bold>3033</bold></highlight>, a storage terminal <highlight><bold>3031</bold></highlight> is docked so as to draw power from the truck <highlight><bold>3033</bold></highlight>&apos;s battery supply. Similarly, a computer terminal <highlight><bold>3007</bold></highlight> may either be docked or ported. Because of greater battery access, the storage terminal <highlight><bold>3031</bold></highlight> need only be configured for multiple participation in the premises, peripheral and vehicular LANs and in a radio WAN, such as RAM Mobile Data, CDPD, MTEL, ARDIS, satellite communication, etc. The storage terminal <highlight><bold>3031</bold></highlight>, although also capable of premises and peripheral LAN participation, need only be configured for vehicular LAN participation. </paragraph>
<paragraph id="P-0357" lvl="0"><number>&lsqb;0357&rsqb;</number> Prior to making a delivery, the truck enters a docking area for loading. As goods are loaded into the truck, the information regarding the goods is down-loaded into the storage terminal <highlight><bold>3031</bold></highlight> via the terminal <highlight><bold>3007</bold></highlight> or code reader <highlight><bold>3009</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 28</cross-reference><highlight><italic>a</italic></highlight>) via the premises or peripheral LAN communications. This loading might also be accomplished automatically as the forklift <highlight><bold>3014</bold></highlight> comes into range of the delivery truck <highlight><bold>3033</bold></highlight>, establishes or joins the peripheral LAN, and transmits the previously collected data as described above in relation to <cross-reference target="DRAWINGS">FIG. 28</cross-reference><highlight><italic>a. </italic></highlight>Alternately, loading might also be accomplished via the premises LAN. </paragraph>
<paragraph id="P-0358" lvl="0"><number>&lsqb;0358&rsqb;</number> As information regarding a good is received and stored, the storage terminal <highlight><bold>3031</bold></highlight> might also request further information regarding any or all of the goods via the peripheral LAN&apos;s link to the host computer <highlight><bold>3011</bold></highlight> through the premises LAN. More likely however, the storage terminal <highlight><bold>3031</bold></highlight> if appropriately configured would participate on the premises LAN to communicate directly with the host computer <highlight><bold>3011</bold></highlight> to retrieve such information. </paragraph>
<paragraph id="P-0359" lvl="0"><number>&lsqb;0359&rsqb;</number> The peripheral LAN access point <highlight><bold>3021</bold></highlight> if located on the dock could provide a direct low power peripheral LAN connection to the backbone LAN <highlight><bold>3019</bold></highlight> and to the host computer <highlight><bold>3011</bold></highlight>. Specifically, in one embodiment, the access point <highlight><bold>3021</bold></highlight> is located on the dock and comprises a low power (&ldquo;short hop&rdquo;) radio operating in a frequency hopping mode over a 902-928 MHz frequency band. However, the access point <highlight><bold>3021</bold></highlight> can instead be configured to communicate using, for example, infrared, UHF, 2.4 GHz or 902 MHz spread spectrum direct sequence frequencies. </paragraph>
<paragraph id="P-0360" lvl="0"><number>&lsqb;0360&rsqb;</number> Once fully loaded and prior to leaving the dock, the storage device <highlight><bold>3031</bold></highlight> may generate a printout of the information relating to the loaded goods via a peripheral LAN established with the printer <highlight><bold>3013</bold></highlight> on the dock. In addition, the information may be transmitted via the peripheral LAN modem <highlight><bold>3023</bold></highlight> to a given destination site. </paragraph>
<paragraph id="P-0361" lvl="0"><number>&lsqb;0361&rsqb;</number> As illustrated in <cross-reference target="DRAWINGS">FIG. 28</cross-reference><highlight><italic>c, </italic></highlight>once the storage terminal <highlight><bold>3031</bold></highlight> and hand-held terminal <highlight><bold>3007</bold></highlight> moves out of range of the premises and peripheral LANs, i.e., the truck <highlight><bold>3033</bold></highlight> drives away from the dock, the vehicular LAN can only gain access to the premises LAN via the more costly radio WAN communication. Thus, although the storage terminal <highlight><bold>3031</bold></highlight> might only be configured with relaying control point functionality, to minimize radio WAN communication, the storage terminal <highlight><bold>3031</bold></highlight> can be configured to store relatively large amounts of information and to provide processing power. Thus, the terminal <highlight><bold>3007</bold></highlight> can access such information and processing power without having to access devices on the premises LAN via the radio WAN. </paragraph>
<paragraph id="P-0362" lvl="0"><number>&lsqb;0362&rsqb;</number> Upon reaching the destination, the storage terminal <highlight><bold>3031</bold></highlight> may participate in any in range peripheral and premises LAN at the delivery site dock. Specifically, as specific goods are unloaded, they are scanned for delivery verification, preventing delivery of unwanted goods. The driver is also informed if goods that should have been delivered are still in the truck. As this process takes place, a report can also be generated via a peripheral or premises LAN printer at the destination dock for receipt signature. Similarly, the peripheral LAN modem on the destination dock can relay the delivery information back to the host computer <highlight><bold>3011</bold></highlight> for billing information or gather additional information needed, avoiding use of the radio WAN. </paragraph>
<paragraph id="P-0363" lvl="0"><number>&lsqb;0363&rsqb;</number> If the truck <highlight><bold>3033</bold></highlight> is used for service purposes, the truck <highlight><bold>3033</bold></highlight> leaves the dock in the morning with the addresses and directions of the service destinations, technical manuals, and service notes which have been selectively downloaded from the host computer <highlight><bold>3011</bold></highlight> via either the premises or peripheral LAN to the storage terminal <highlight><bold>3031</bold></highlight> which may be configured with a hard drive and substantial processing power. Upon pulling out of range, the storage terminal <highlight><bold>3031</bold></highlight> and the computer terminal <highlight><bold>3007</bold></highlight> automatically form an independent, detached vehicular LAN. Alternately, the terminals <highlight><bold>3007</bold></highlight> and <highlight><bold>3031</bold></highlight> may have previously formed the vehicular LAN before leaving dock. In one embodiment, the vehicular LAN operates using frequency hopping protocol much the same as that of the premises LAN, with the storage terminal <highlight><bold>3031</bold></highlight> acting much like the premises LAN access points. Thus, the radio transceiver circuitry for the premises LAN participation may also be used for the vehicular LAN and, as detailed above, a peripheral LAN. Similarly, if the radio WAN chosen has similar characteristics, it may to be incorporated into a single radio transceiver. </paragraph>
<paragraph id="P-0364" lvl="0"><number>&lsqb;0364&rsqb;</number> At each service address, the driver collects information using the terminal <highlight><bold>3007</bold></highlight> either as the data is collected, if within vehicular LAN transmission range of the storage terminal <highlight><bold>3031</bold></highlight>, or as soon as the terminal <highlight><bold>3007</bold></highlight> comes within range. Any stored information within storage terminal <highlight><bold>3031</bold></highlight> may be requested via the vehicular LAN by the hand-held terminal <highlight><bold>3007</bold></highlight>. Information not stored within the vehicular LAN may be communicated via a radio WAN as described above. </paragraph>
<paragraph id="P-0365" lvl="0"><number>&lsqb;0365&rsqb;</number> Referring again to <cross-reference target="DRAWINGS">FIG. 28</cross-reference><highlight><italic>b, </italic></highlight>upon returning to the dock, the storage terminal <highlight><bold>3031</bold></highlight>, also referred to herein as a vehicle terminal, joins in or establishes a peripheral LAN with the peripheral LAN devices on the dock, if necessary. Communication is also established via the premises LAN. Thereafter, the storage terminal <highlight><bold>3031</bold></highlight> automatically transfers the service information to the host computer <highlight><bold>3011</bold></highlight> which uses the information for billing and in formulating service destinations for automatic downloading the next day. </paragraph>
<paragraph id="P-0366" lvl="0"><number>&lsqb;0366&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29</cross-reference><highlight><italic>a </italic></highlight>is a diagrammatic illustration of another embodiment using a peripheral LAN-to supporting roaming data collection by an operator according to the present invention. As an operator <highlight><bold>3061</bold></highlight> roams the warehouse floor, he carries a peripheral LAN comprising the terminal <highlight><bold>3007</bold></highlight>, code reader <highlight><bold>3009</bold></highlight> and a portable printer <highlight><bold>3058</bold></highlight> with him. The operator collects information regarding goods, such as the box <highlight><bold>3010</bold></highlight>, with the code reader <highlight><bold>3009</bold></highlight> and the terminal <highlight><bold>3007</bold></highlight>. If the power resources are equal, the terminal <highlight><bold>3007</bold></highlight> may be configured and designated to also participate in the premises LAN. </paragraph>
<paragraph id="P-0367" lvl="0"><number>&lsqb;0367&rsqb;</number> Corresponding information to the code data must be retrieved from the host computer <highlight><bold>3011</bold></highlight>. The collected code information and retrieved corresponding information can be displayed on the terminal <highlight><bold>3007</bold></highlight>. After viewing for verification, the information can be printed on the printer <highlight><bold>3058</bold></highlight>. Because of this data flow requirement, the computer terminal <highlight><bold>3007</bold></highlight> is selected as the peripheral LAN device which must also carry the responsibility of communicating with the premises LAN. </paragraph>
<paragraph id="P-0368" lvl="0"><number>&lsqb;0368&rsqb;</number> If during collection, the operator decides to power down the computer terminal <highlight><bold>3007</bold></highlight> because it is not needed, the peripheral LAN becomes detached from the premises LAN. Although it might be possible for the detached peripheral LAN to function, all communication with the host computer <highlight><bold>3011</bold></highlight> through the premises LAN is placed in a queue awaiting reattachment. As soon as the detached peripheral LAN comes within range of an attached peripheral LAN device, i.e., a device attached to the premises LAN, the queued communications are relayed to the host. It should be clear from this description that the peripheral LAN may roam in relation to a device attached to the premises LAN (&ldquo;premises LAN device&rdquo;). Similarly, the premises LAN device may roam in relation to the peripheral LAN. The roaming constitutes a relative positioning. Moreover, whenever a peripheral LAN and a master device move out of range of each other, the peripheral LAN may either poll for or scan for another master device for attachment. The master device may constitute a premises LAN device, yet need not be. </paragraph>
<paragraph id="P-0369" lvl="0"><number>&lsqb;0369&rsqb;</number> To avoid detachment when the terminal <highlight><bold>3007</bold></highlight> is powered down, the code reader <highlight><bold>3009</bold></highlight> may be designated as a backup to the terminal <highlight><bold>3007</bold></highlight> for performing the higher power communication with the premises LAN. As described in more detail below in reference to <cross-reference target="DRAWINGS">FIG. 33</cross-reference><highlight><italic>c </italic></highlight>regarding the idle sense protocol, whenever the code reader <highlight><bold>3009</bold></highlight> determines that the terminal <highlight><bold>3007</bold></highlight> has stopped providing access to the premises LAN, the code reader <highlight><bold>3009</bold></highlight> will take over the role if it is next in line to perform the backup service. Thereafter, when the computer terminal <highlight><bold>3007</bold></highlight> is powered up, it monitors the peripheral LAN channel, requests and regains from the code reader <highlight><bold>3009</bold></highlight> the role of providing an interface with the premises LAN. This, however, does not restrict the code reader <highlight><bold>3009</bold></highlight> from accessing the premises LAN although the reader <highlight><bold>3009</bold></highlight> may choose to use the computer terminal <highlight><bold>3007</bold></highlight> for power conservation reasons. </paragraph>
<paragraph id="P-0370" lvl="0"><number>&lsqb;0370&rsqb;</number> In addition, if the computer terminal <highlight><bold>3007</bold></highlight> reaches a predetermined low battery threshold level, the terminal <highlight><bold>3007</bold></highlight> will attempt to pass the burden of providing premises LAN access to other peripheral LAN backup devices. If no backup device exists in the current peripheral LAN, the computer terminal <highlight><bold>3007</bold></highlight> may refuse all high power transmissions to the premises LAN. Alternatively, the computer terminal <highlight><bold>3007</bold></highlight> may either refuse predetermined select types of requests, or prompt the operator before performing any transmission to the premises LAN. However, the computer terminal <highlight><bold>3007</bold></highlight> may still listen to the communications from the premises LAN and inform peripheral LAN members of waiting messages. </paragraph>
<paragraph id="P-0371" lvl="0"><number>&lsqb;0371&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29</cross-reference><highlight><italic>b </italic></highlight>is a diagrammatic illustration of another embodiment of a peripheral LAN which supports roaming data collection by an operator according to the present invention. An operator is equipped with a peripheral LAN <highlight><bold>3065</bold></highlight> comprising a housing <highlight><bold>3067</bold></highlight>, which incorporates a printer <highlight><bold>3069</bold></highlight> and a dock <highlight><bold>3071</bold></highlight>, a roaming computing terminal <highlight><bold>3073</bold></highlight>, and a code reader <highlight><bold>3075</bold></highlight>. The operator may roam a warehouse floor or a shipping dock and collect and retrieve data using the peripheral LAN <highlight><bold>3065</bold></highlight> as discussed above with respect to <cross-reference target="DRAWINGS">FIG. 29</cross-reference><highlight><italic>a. </italic></highlight>In this embodiment, the operator may elect to leave the housing <highlight><bold>3067</bold></highlight>, and hence the printer, in one area of the warehouse, or on the truck, and carry only the code reader <highlight><bold>3075</bold></highlight> and terminal <highlight><bold>3073</bold></highlight>. In addition, the operator may also elect to dock the terminal <highlight><bold>3073</bold></highlight> in the dock <highlight><bold>3071</bold></highlight> and carry only the code reader <highlight><bold>3075</bold></highlight>. In any event, the terminal is capable of communicating data to the printer <highlight><bold>3069</bold></highlight> via RF signals or via the dock <highlight><bold>3071</bold></highlight>. </paragraph>
<paragraph id="P-0372" lvl="0"><number>&lsqb;0372&rsqb;</number> The housing <highlight><bold>3067</bold></highlight> may optionally include a cigarette lighter power input cable <highlight><bold>3077</bold></highlight> to power the printer <highlight><bold>3069</bold></highlight>, and recharge the battery of the terminal <highlight><bold>3073</bold></highlight> via the dock <highlight><bold>3071</bold></highlight>. The housing <highlight><bold>3067</bold></highlight> may also optionally include a wide area network radio to permit communication with a remote warehouse or station <highlight><bold>3079</bold></highlight>. In addition, the housing <highlight><bold>3067</bold></highlight> may also be configured to include the functionality of the storage terminal <highlight><bold>3031</bold></highlight> discussed above with respect to <cross-reference target="DRAWINGS">FIGS. 28</cross-reference><highlight><italic>b </italic></highlight>and <highlight><bold>28</bold></highlight><highlight><italic>c. </italic></highlight></paragraph>
<paragraph id="P-0373" lvl="0"><number>&lsqb;0373&rsqb;</number> The peripheral LAN embodiments of <cross-reference target="DRAWINGS">FIGS. 29</cross-reference><highlight><italic>a </italic></highlight>and <highlight><bold>29</bold></highlight><highlight><italic>b </italic></highlight>may, of course, function when detached from the premises LAN. This feature is particularly desirable in situations where attachment to the premises LAN may be more costly, such as, for example, during the remote pickup or delivery of goods by a driver. In the situation where a driver is picking up goods, the driver may, for example, use the code reader and terminal to collect and/or enter information regarding the goods, such as their origin, destination, weight, etc. The terminal may then encode the information, and transmit it to the printer so that the driver can label each box appropriately with a bar or other type of code for later identification and routing of the goods. </paragraph>
<paragraph id="P-0374" lvl="0"><number>&lsqb;0374&rsqb;</number> Once information regarding a particular pickup has been stored, either in the terminal or storage terminal, the driver may download the stored data using the WAN radio to the premises LAN host computer at the remote warehouse or station <highlight><bold>3079</bold></highlight> so that the information may be used to pre-schedule further routing of the goods before the driver even arrives. Because WAN communication is costly, however, the information may instead be automatically transferred wirelessly to the premises LAN host once the driver comes into range of the premises LAN, as discussed above with respect to <cross-reference target="DRAWINGS">FIG. 28</cross-reference><highlight><italic>b. </italic></highlight>Alternatively, or as a check to verify information previously transmitted to the premises LAN wirelessly, the information may be downloaded from the terminal to the premises LAN host via a docking system <highlight><bold>3081</bold></highlight> located at the warehouse or station <highlight><bold>3079</bold></highlight>. The docking system <highlight><bold>3081</bold></highlight> may also be used to recharge the terminals <highlight><bold>3073</bold></highlight>. </paragraph>
<paragraph id="P-0375" lvl="0"><number>&lsqb;0375&rsqb;</number> Once the host computer has the information regarding the goods picked up by the driver(s), the host can download the data via RF or the docking system <highlight><bold>3081</bold></highlight> to any number of terminals <highlight><bold>3073</bold></highlight> used by warehouse personnel who unload the trucks. While unloading, these personnel can, for example, use a terminal <highlight><bold>3073</bold></highlight> and a code reader <highlight><bold>3075</bold></highlight> to build containers for further distribution of the goods to various destinations. Specifically, as a container is unloaded, the label previously placed on the container by the driver is scanned by the code reader <highlight><bold>3075</bold></highlight>, and destination information is displayed on the terminal <highlight><bold>3073</bold></highlight>. The box may then be taken to and loaded into the container headed for the same destination. Each container may also have a label which can be scanned to verify the destination of that particular container. </paragraph>
<paragraph id="P-0376" lvl="0"><number>&lsqb;0376&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is a block diagram illustrating the functionality of RF transceivers built in accordance with the present invention. Although preferably plugging into PCMCIA slots of the computer terminals and peripherals, the transceiver <highlight><bold>3110</bold></highlight> may also be built-in or externally attached via available serial, parallel or ethernet connectors for example. Although the transceivers used by potential peripheral LAN master devices may vary from those used by peripheral LAN slave devices (as detailed below), they all contain the illustrated functional blocks. </paragraph>
<paragraph id="P-0377" lvl="0"><number>&lsqb;0377&rsqb;</number> In particular, the transceiver <highlight><bold>3110</bold></highlight> contains a radio unit <highlight><bold>3112</bold></highlight> which attaches to an attached antenna <highlight><bold>3113</bold></highlight>. The radio unit <highlight><bold>3112</bold></highlight> used in peripheral LAN slave devices need only provide reliable low power transmissions, and are designed to conserve cost, weight and size. Potential peripheral LAN master devices not only require the ability to communicate with peripheral LAN slave devices, but also require higher power radios to also communicate with the premises LAN. Thus, potential peripheral LAN master devices and other non-peripheral LAN slave devices might contain two radio units <highlight><bold>3112</bold></highlight> or two transceivers <highlight><bold>3110</bold></highlight>&mdash;one serving the premises LAN and the other serving the peripheral LAN&mdash;else only contain a single radio unit to service both networks. </paragraph>
<paragraph id="P-0378" lvl="0"><number>&lsqb;0378&rsqb;</number> In embodiments where cost and additional weight is not an issue, a dual radio unit configuration for potential peripheral LAN master devices may provide several advantages. For example, simultaneous transceiver operation is possible by choosing a different operating band for each radio. In such embodiments, a 2.4 GHz radio is included for premises LAN communication while a 27 MHz radio supports the peripheral LAN. Peripheral LAN slave devices receive only the 27 MHz radio, while the non-potential peripheral LAN participants from the premises LAN are fitted with only the 2.4 GHz radios. Potential peripheral LAN master devices receive both radios. The low power 27 MHz peripheral LAN radio is capable of reliably transferring information at a range of approximately 40 to 100 feet asynchronously at 19.2 KBPS. An additional benefit of using the 27 MHz frequency is that it is an unlicensed frequency band. The 2.4 GHz radio provides sufficient power (up to 1 Watt) to communicate with other premises LAN devices. Another benefit of choosing 2.4 GHz or 27 MHz bands is that neither requires FCC licensing. Many different frequency choices could also be made such as the 900 MHz band, UHF, etc. Alternatively, infrared communication may be used in situations where line of sight may be achieved between devices on the network. </paragraph>
<paragraph id="P-0379" lvl="0"><number>&lsqb;0379&rsqb;</number> In embodiments where cost and additional weight are at issue, a single radio unit configuration is used for potential peripheral LAN master devices. Specifically, in such embodiments, a dual mode 2.4 GHz radio supports both the peripheral LAN and premises LANs. In a peripheral LAN mode, the 2.4 GHz radio operates at a single frequency, low power level (sub-milliwatt) to support peripheral LAN communication at relatively close distances 20-30 feet). In a high power (up to 1 Watt) or main mode, the 2.4 GHz radio provides for frequency-hopping communication over relatively long distance communication connectivity with the premises LAN. Although all network devices might be fitted with such a dual mode radio, only peripheral LAN master devices use both modes. Peripheral LAN slave devices would only use the low power mode while all other premises LAN devices would use only the high power mode. Because of this, to save cost, peripheral LAN slave devices are fitted with a single mode radio operating in the peripheral LAN mode. Non-peripheral LAN participants are also fitted with a single mode (main mode) radio unit for cost savings. </paragraph>
<paragraph id="P-0380" lvl="0"><number>&lsqb;0380&rsqb;</number> Connected between the radio unit <highlight><bold>3112</bold></highlight> and an interface <highlight><bold>3110</bold></highlight>, a microprocessor <highlight><bold>3120</bold></highlight> controls the information flow between through the transceiver <highlight><bold>3110</bold></highlight>. Specifically, the interface <highlight><bold>3115</bold></highlight> connects the transceiver <highlight><bold>3110</bold></highlight> to a selected computer terminal, a peripheral device or other network device. Many different interfaces <highlight><bold>3115</bold></highlight> are used and the choice will depend upon the connection port of the device to which the transceiver <highlight><bold>3110</bold></highlight> will be attached. Virtually any type of interface <highlight><bold>3110</bold></highlight> could be adapted for use with the transceiver <highlight><bold>3110</bold></highlight> of the present invention. Common industry interface standards include RS-232, RS-422, RS-485, 10BASE2 Ethernet, 10BASE5 Ethernet, 10BASE-T Ethernet, fiber optics, IBM 4/16 Token Ring, V.11, V.24, V.35, Apple Localtalk and telephone interfaces. In addition, via the interface <highlight><bold>3115</bold></highlight>, the microprocessor <highlight><bold>3120</bold></highlight> maintains a radio independent, interface protocol with the attached network device, isolating the attached device from the variations in radios being used. </paragraph>
<paragraph id="P-0381" lvl="0"><number>&lsqb;0381&rsqb;</number> The microprocessor <highlight><bold>3120</bold></highlight> also controls the radio unit <highlight><bold>3112</bold></highlight> to accommodate communication with the premises LAN, the peripheral LAN, or both (for dual mode radios). Moreover, the same radio might also be used for vehicular LAN and radio WAN communication as described above. For example, a radio located in a vehicle or in a hand held terminal can be configured to communicate not only within a local network, but might also be capable of receiving paging messages. </paragraph>
<paragraph id="P-0382" lvl="0"><number>&lsqb;0382&rsqb;</number> More specifically, in a main mode transceiver, the microprocessor <highlight><bold>3120</bold></highlight> utilizes a premises LAN protocol to communicate with the premises LAN. Similarly, in a peripheral LAN mode transceiver, the microprocessor <highlight><bold>3120</bold></highlight> operates pursuant to a peripheral LAN protocol to communicate in the peripheral LAN. In the dual mode transceiver, the microprocessor <highlight><bold>3120</bold></highlight> manages the use of and potential conflicts between both the premises and peripheral LAN protocols. Detail regarding the premises and peripheral LAN protocols can be found in reference to FIGS. <highlight><bold>33</bold></highlight>-<highlight><bold>36</bold></highlight> below. </paragraph>
<paragraph id="P-0383" lvl="0"><number>&lsqb;0383&rsqb;</number> In addition, as directed by the corresponding communication protocol, the microprocessor <highlight><bold>3120</bold></highlight> controls the power consumption of the radio <highlight><bold>3112</bold></highlight>, itself and the interface <highlight><bold>3115</bold></highlight> for power conservation. This is accomplished in two ways. First, the peripheral LAN and premises protocols are designed to provide for a low power mode or sleep mode during periods when no communication involving the subject transmitter is desired as described below in relation to FIGS. <highlight><bold>33</bold></highlight>-<highlight><bold>34</bold></highlight>. Second, both protocols are designed to adapt in both data rate and transmission power based on power supply (i.e., battery) parameters and range information as described in reference to FIGS. <highlight><bold>35</bold></highlight>-<highlight><bold>36</bold></highlight>. </paragraph>
<paragraph id="P-0384" lvl="0"><number>&lsqb;0384&rsqb;</number> In order to insure that the proper device is receiving the information transmitted, each device is assigned a unique address. Specifically, the transceiver <highlight><bold>3110</bold></highlight> can either have a unique address of its own or can use the is: unique address of the device to which it is attached. The unique address of the transceiver can either be one selected by the operator or system designer or one which is permanently assigned at the factory such as an IEEE address. The address <highlight><bold>3121</bold></highlight> of the particular transceiver <highlight><bold>3110</bold></highlight> is stored with the microprocessor <highlight><bold>3120</bold></highlight>. </paragraph>
<paragraph id="P-0385" lvl="0"><number>&lsqb;0385&rsqb;</number> In the illustrated embodiments of FIGS. <highlight><bold>28</bold></highlight>-<highlight><bold>29</bold></highlight><highlight><italic>b, </italic></highlight>the peripheral LAN master device is shown as being either a peripheral LAN access point or a mobile or portable computer terminal. From a data flow viewpoint, in considering the fastest access through the network, such choices for the peripheral LAN master devices appear optimal. However, any peripheral LAN device might be assigned the role of the master, even those that do not seem to provide an optimal data flow pathway but may provide for optimal battery usage. For example, in the personal peripheral LAN of <cross-reference target="DRAWINGS">FIG. 29</cross-reference><highlight><italic>a, </italic></highlight>because of the support from the belt <highlight><bold>3059</bold></highlight>, the printer might contain the greatest battery capacity of the personal peripheral LAN devices. As such, the printer might be designated the peripheral LAN master device and be fitted with either a dual mode radio or two radios as master devices require. The printer, or other peripheral LAN slave devices, might also be fitted with such required radios to serve only as a peripheral LAN master backup. If the battery power on the actual peripheral LAN master, i.e., the hand-held terminal <highlight><bold>3007</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 29</cross-reference><highlight><italic>a</italic></highlight>) drops below a preset threshold, the backup master takes over. </paragraph>
<paragraph id="P-0386" lvl="0"><number>&lsqb;0386&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 31</cross-reference> is a drawing which illustrates an embodiment of the personal peripheral LAN shown in <cross-reference target="DRAWINGS">FIG. 29</cross-reference><highlight><italic>a </italic></highlight>which designates a printer as the peripheral LAN master device. Specifically, in a personal peripheral LAN <highlight><bold>3165</bold></highlight>, a computer terminal <highlight><bold>3170</bold></highlight> is strapped to the forearm of the operator. A code reader <highlight><bold>3171</bold></highlight> straps to the back of the hand of the user, and is triggered by pressing a button <highlight><bold>3173</bold></highlight> with the thumb. Because of their relatively low battery energy, the computer terminal <highlight><bold>3170</bold></highlight> and code reader <highlight><bold>3171</bold></highlight> are designated peripheral LAN slave devices and each contains a peripheral LAN transceiver having a broadcast range of two meters or less. Because of its greater battery energy, the printer <highlight><bold>3172</bold></highlight> contains a dual mode radio, and is designated the peripheral LAN master device. </paragraph>
<paragraph id="P-0387" lvl="0"><number>&lsqb;0387&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 32</cross-reference> is a block diagram illustrating a channel access algorithm used by peripheral LAN slave devices according to the present invention. At a block <highlight><bold>3181</bold></highlight>, when a slave device has a message to send, it waits for an idle sense message to be received from the peripheral LAN master device at a block <highlight><bold>3183</bold></highlight>. When an idle sense message is received, the slave device executes a back-off protocol at a block <highlight><bold>3187</bold></highlight> in an attempt to avoid collisions with other slave devices waiting to transmit. Basically, instead of permitting every slave device from repeatedly transmitting immediately after an idle sense message is received, each waiting slave is required to first wait for a pseudo-random time period before attempting a transmission. The pseudo-random back-off time period is generated and the waiting takes place at a block <highlight><bold>3187</bold></highlight>. At a block <highlight><bold>3189</bold></highlight>, the channel is sensed to determine whether it is clear for transmission. If not, a branch is made back to the block <highlight><bold>3183</bold></highlight> to attempt a transmission upon receipt of the next idle sense message. If the channel is still clear, at a block <highlight><bold>3191</bold></highlight>, a relatively small &ldquo;request to send&rdquo; type packet is transmitted indicating the desire to send a message. If no responsive &ldquo;clear to send&rdquo; type message is received from the master device, the slave device assumes that a collision occurred at a block <highlight><bold>3193</bold></highlight> and branches back to the block <highlight><bold>3183</bold></highlight> to try again. If the &ldquo;clear to send&rdquo; message is received, the slave device transmits the message at a block <highlight><bold>3195</bold></highlight>. </paragraph>
<paragraph id="P-0388" lvl="0"><number>&lsqb;0388&rsqb;</number> Several alternate channel access strategies have been developed for carrier sense multiple access (CSMA) systems and include 1-persistent, non-persistent and p-persistent. Such strategies or variations thereof could easily be adapted to work with the present invention. </paragraph>
<paragraph id="P-0389" lvl="0"><number>&lsqb;0389&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33</cross-reference><highlight><italic>a </italic></highlight>is a timing diagram of the protocol used according to one embodiment the present invention illustrating a typical communication exchange between a peripheral LAN master device having virtually unlimited power resources and a peripheral LAN slave device. Time line <highlight><bold>3201</bold></highlight> represents communication activity by the peripheral LAN master device while time line <highlight><bold>3203</bold></highlight> represents the corresponding activity by the peripheral LAN slave device. The master periodically transmits an idle sense message <highlight><bold>3205</bold></highlight> indicating that it is available for communication or that it has data for transmission to a slave device. Because the master has virtually unlimited power resources, it &ldquo;stays awake&rdquo; for the entire time period <highlight><bold>3207</bold></highlight> between the idle sense messages <highlight><bold>3205</bold></highlight>. In other words, the master does not enter a power conserving mode during the time periods <highlight><bold>3207</bold></highlight>. </paragraph>
<paragraph id="P-0390" lvl="0"><number>&lsqb;0390&rsqb;</number> The slave device uses a binding protocol (discussed below with regard to <cross-reference target="DRAWINGS">FIG. 33</cross-reference><highlight><italic>c</italic></highlight>) to synchronize to the master device so that the slave may enter a power conserving mode and still monitor the idle sense messages of the master to determine if the master requires servicing. For example, referring to <cross-reference target="DRAWINGS">FIG. 33</cross-reference><highlight><italic>a, </italic></highlight>the slave device monitors an idle sense message of the master during a time period <highlight><bold>3209</bold></highlight>, determines that no servicing is required, and enters a power conserving mode during the time period <highlight><bold>3211</bold></highlight>. The slave then activates during a time period <highlight><bold>3213</bold></highlight> to monitor the next idle sense message of the master. Again, the slave determines that no servicing is required and enters a power conserving mode during a time period <highlight><bold>3215</bold></highlight>. When the slave activates again during a time period <highlight><bold>3217</bold></highlight> to monitor the next idle sense message, it determines from a &ldquo;request to send&rdquo; type message from the master that the master has data for transmission to the slave. The slave responds by sending a &ldquo;clear to send&rdquo; type message during the time period <highlight><bold>3217</bold></highlight> and stays activated in order to receive transmission of the data. The master is thus able to transmit the data to the slave during a time period <highlight><bold>3219</bold></highlight>. Once the data is received by the slave at the end of the time period <highlight><bold>3221</bold></highlight>, the slave again enters a power conserving mode during a time period <highlight><bold>3223</bold></highlight> and activates again during the time period <highlight><bold>3225</bold></highlight> to monitor the next idle sense message. </paragraph>
<paragraph id="P-0391" lvl="0"><number>&lsqb;0391&rsqb;</number> Alternatively, the slave may have data for transfer to the master. If so, the slave indicates as such to the master by transmitting a message during the time period <highlight><bold>3217</bold></highlight> and then executes a backoff algorithm to determine how long it must wait before transmitting the data. The slave determines from the backoff algorithm that it must wait the time period <highlight><bold>3227</bold></highlight> before transmitting the data during the time period <highlight><bold>3221</bold></highlight>. The slave devices use the backoff algorithm in an attempt to avoid the collision of data with that from other slave devices which are also trying to communicate with the master. The backoff algorithm is discussed more fully above in reference to <cross-reference target="DRAWINGS">FIG. 32</cross-reference>. </paragraph>
<paragraph id="P-0392" lvl="0"><number>&lsqb;0392&rsqb;</number> The idle sense messages of the master may also aid in scheduling communication between two slave devices. For example, if a first slave device has data for transfer to a second slave device, the first slave sends a message to the master during the time period <highlight><bold>3209</bold></highlight> requesting communication with the second slave. The master then broadcasts the request during the next idle sense message. Because the second slave is monitoring the idle sense message, the second slave receives the request and stays activated at the end of the idle sense message in order to receive the communication. Likewise, because the first slave is also monitoring the idle sense message, it too receives the request and stays activated during the time period <highlight><bold>3215</bold></highlight> to send the communication. </paragraph>
<paragraph id="P-0393" lvl="0"><number>&lsqb;0393&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33</cross-reference><highlight><italic>b </italic></highlight>is a timing diagram of the protocol used according to one embodiment of the present invention illustrating a typical communication exchange between a peripheral LAN master having limited power resources and a peripheral LAN slave device. This exchange is similar to that illustrated in <cross-reference target="DRAWINGS">FIG. 33</cross-reference><highlight><italic>a </italic></highlight>except that, because it has limited power resources, the master enters a power conserving mode. Before transmitting an idle sense message, the master listens to determine if the channel is idle. If the channel is idle, the master transmits an idle sense message <highlight><bold>3205</bold></highlight> and then waits a time period <highlight><bold>3231</bold></highlight> to determine if any devices desire communication. If no communication is desired, the master enters a power conserving mode during a time period <highlight><bold>3233</bold></highlight> before activating again to listen to the channel. If the channel is not idle, the master does not send the idle sense message and enters a power saving mode for a time period <highlight><bold>3235</bold></highlight> before activating again to listen to the channel. </paragraph>
<paragraph id="P-0394" lvl="0"><number>&lsqb;0394&rsqb;</number> Communication between the master and slave devices is the same as that discussed above in reference to <cross-reference target="DRAWINGS">FIG. 33</cross-reference><highlight><italic>a </italic></highlight>except that, after sending or receiving data during the time period <highlight><bold>3219</bold></highlight>, the master device enters a power conserving mode during the time period <highlight><bold>3237</bold></highlight>. </paragraph>
<paragraph id="P-0395" lvl="0"><number>&lsqb;0395&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33</cross-reference><highlight><italic>c </italic></highlight>is also a timing diagram of one embodiment of the protocol used according to the present invention which illustrates a scenario wherein the peripheral LAN master device fails to service peripheral LAN slave devices. The master device periodically sends an idle sense message <highlight><bold>3205</bold></highlight>, waits a time period <highlight><bold>3231</bold></highlight>, and enters a power conserving mode during a time period <highlight><bold>3233</bold></highlight> as discussed above in reference to <cross-reference target="DRAWINGS">FIG. 33</cross-reference><highlight><italic>b. </italic></highlight>Similarly, the slave device monitors the idle sense messages during time periods <highlight><bold>3209</bold></highlight> and <highlight><bold>3213</bold></highlight> and enters a power conserving mode during time periods <highlight><bold>3211</bold></highlight> and <highlight><bold>3215</bold></highlight>. For some reason, however, the master stops transmitting idle sense messages. Such a situation may occur, for example, if the master device is portable and is carried outside the range of the slave&apos;s radio. During a time period <highlight><bold>3241</bold></highlight>, the slave unsuccessfully attempts to monitor an idle sense message. The slave then goes to sleep for a time period <highlight><bold>3243</bold></highlight> and activates to attempt to monitor a next idle sense message during a time period <highlight><bold>3245</bold></highlight>, but is again unsuccessful. </paragraph>
<paragraph id="P-0396" lvl="0"><number>&lsqb;0396&rsqb;</number> The slave device thereafter initiates a binding protocol to attempt to regain synchronization with the master. While two time periods <highlight><bold>3241</bold></highlight> and <highlight><bold>3245</bold></highlight> are shown, the slave may initiate such a protocol after any number of unsuccessful attempts to locate an idle sense message. With this protocol, the slave stays active for a time period <highlight><bold>3247</bold></highlight>, which is equal to the time period from one idle sense message to the next, in an attempt to locate a next idle sense message. If the slave is again unsuccessful, it may stay active until it locates an idle sense message from the master, or, if power consumption is a concern, the slave may enter a power conserving mode at the end of the time period <highlight><bold>3247</bold></highlight> and activate at a later time to monitor for an idle sense message. </paragraph>
<paragraph id="P-0397" lvl="0"><number>&lsqb;0397&rsqb;</number> In the event the master device remains outside the range of the slave devices in the peripheral LAN for a period long enough such that communication is hindered, one of the slave devices may take over the functionality of the master device. Such a situation is useful when the slave devices need to communicate with each other in the absence of the master. Preferably, such a backup device has the ability to communicate with devices on the premises LAN. If the original master returns, it listens to the channel to determine idle sense messages from the backup, indicates to the backup that it has returned and then begins idle sense transmissions when it reestablishes dominance over the peripheral LAN. </paragraph>
<paragraph id="P-0398" lvl="0"><number>&lsqb;0398&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 34</cross-reference> is a timing diagram illustrating one embodiment of the peripheral LAN master device&apos;s servicing of both the high powered premises LAN and the low powered peripheral LAN subnetwork, with a single or plural radio transceivers, in accordance with present invention. Block <highlight><bold>3251</bold></highlight> represents typical communication activity of the master device. Line <highlight><bold>3253</bold></highlight> illustrates the master&apos;s communication with an access point on the premises LAN while line <highlight><bold>3255</bold></highlight> illustrates the master&apos;s communication with a slave device on the peripheral LAN. Lines <highlight><bold>3257</bold></highlight> and <highlight><bold>3259</bold></highlight> illustrate corresponding communication by the access point and slave device, respectively. </paragraph>
<paragraph id="P-0399" lvl="0"><number>&lsqb;0399&rsqb;</number> The access point periodically broadcasts HELLO messages <highlight><bold>3261</bold></highlight> indicating that it is available for communication. The master device monitors the HELLO messages during a time period <highlight><bold>3263</bold></highlight>, and, upon determining that the base does not need servicing, enters a power conserving mode during a time period <highlight><bold>3265</bold></highlight>. The master then activates for a time period to monitor the next HELLO message from the base. If the master has data to send to the base, it transmits the data during a time period <highlight><bold>3271</bold></highlight>. Likewise, if the base has data to send to the master, the base transmits the data during a time period <highlight><bold>3269</bold></highlight>. Once the data is received or sent by the master, it may again enter a power conserving mode. While HELLO message protocol is discussed, a number of communication protocols may be used for communication between the base and the master device. As may be appreciated, the peripheral LAN master device acts as a slave to access points in the premises LAN. </paragraph>
<paragraph id="P-0400" lvl="0"><number>&lsqb;0400&rsqb;</number> Generally, the communication exchange between the master and the slave is similar to that described above in reference to <cross-reference target="DRAWINGS">FIG. 33</cross-reference><highlight><italic>b. </italic></highlight>Block <highlight><bold>3273</bold></highlight>, however, illustrates a situation where the master encounters a communication conflict, i.e., it has data to send to or receive from the slave on the peripheral LAN at the same time it will monitor the premises LAN for HELLO messages from the base. If the master has two radio transceivers, the master can service both networks. If, however, the master only has one radio transceiver, the master chooses to service one network based on network priority considerations. For example, in block <highlight><bold>3273</bold></highlight>, it may be desirable to service the slave because of the presence of data rather than monitor the premises LAN for HELLO messages from the base. On the other hand, in block <highlight><bold>3275</bold></highlight>, it may be more desirable to monitor the premises LAN for HELLO messages rather than transmit an idle sense message on the peripheral LAN. </paragraph>
<paragraph id="P-0401" lvl="0"><number>&lsqb;0401&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 35 and 36</cross-reference> are block diagrams illustrating additional power saving features according to the present invention, wherein ranging and battery parameters are used to optimally select the appropriate data rate and power level for subsequent transmissions. Specifically, even though network devices such as the computer terminal <highlight><bold>3007</bold></highlight> in FIGS. <highlight><bold>28</bold></highlight>-<highlight><bold>29</bold></highlight><highlight><italic>b </italic></highlight>have the capability of performing high power transmissions, because of battery power concerns, such devices are configured to utilize minimum transmission energy. Adjustments are made based on ranging information and on battery parameters. Similarly, within the peripheral LAN, even though lower power transceivers are used, battery conservation issues also justify the use of such data rate and power adjustments. This process is described in more detail below in reference to <cross-reference target="DRAWINGS">FIGS. 35 and 36</cross-reference>. </paragraph>
<paragraph id="P-0402" lvl="0"><number>&lsqb;0402&rsqb;</number> More specifically, <cross-reference target="DRAWINGS">FIG. 35</cross-reference> is a block diagram which illustrates a protocol <highlight><bold>3301</bold></highlight> used by a destination peripheral LAN device and a corresponding protocol <highlight><bold>3303</bold></highlight> used by a source peripheral LAN device to adjust the data rate and possibly the power level for future transmission between the two devices. At a block <highlight><bold>3311</bold></highlight>, upon receiving a transmission from a source device, the destination device identifies a range value at a block <highlight><bold>3313</bold></highlight>. In a low cost embodiment, the range value is identified by considering the received signal strength indications (RSSI) of the incoming transmission. Although RSSI circuitry might be placed in all peripheral LAN radios, the added expense may require that only peripheral LAN master devices receive the circuitry. This would mean that only peripheral LAN master devices would perform the function of the destination device. Other ranging techniques or signal quality assessments can also be used, such as measuring jitter in received signals, by adding additional functionality to the radios. Finally, after identifying the range value at the block <highlight><bold>3313</bold></highlight>, the destination device subsequently transmits the range value to the slave device from which the transmission was received, at a block <highlight><bold>3314</bold></highlight>. </paragraph>
<paragraph id="P-0403" lvl="0"><number>&lsqb;0403&rsqb;</number> Upon receipt of the range value from the destination device at a block <highlight><bold>3321</bold></highlight>, the source peripheral LAN device evaluates its battery parameters to identify a subsequent data rate for transmission at a block <highlight><bold>3323</bold></highlight>. If range value indicates that the destination peripheral LAN device is very near, the source peripheral LAN device selects a faster data rate. When the range value indicates a distant master, the source device selects a slower rate. In this way, even without adjusting the power level, the total energy dissipated can be controlled to utilize only that necessary to carry out the transmission. However, if constraints are placed on the maximum or minimum data rates, the transmission power may also need to be modified. For example, to further minimize the complexity associated with a fully random range of data rate values, a standard range and set of several data rates may be used. Under such a scenario, a transmission power adjustment might also need to supplement the data rate adjustment. Similarly, any adjustment of power must take into consideration maximum and minimum operable levels. Data rate adjustment may supplement such limitations. Any attempted modification of the power and data rate might take into consideration any available battery parameters such as those that might indicate a normal or current battery capacity, the drain on the battery under normal conditions and during transmission, or the fact that the battery is currently being charged. The latter parameter proves to be very significant in that when the battery is being charged, the peripheral LAN slave device has access to a much greater power source for transmission, which may justify the highest power transmission and possibly the slowest data rate under certain circumstances. </paragraph>
<paragraph id="P-0404" lvl="0"><number>&lsqb;0404&rsqb;</number> Finally, at a block <highlight><bold>3325</bold></highlight>, an indication of the identified data rate is transmitted back to the destination device so that future transmissions may take place at the newly selected rate. The indication of data rate may be explicit in that a message is transmitted designating the specific rate. Alternately, the data rate may be transferred implicitly in that the new rate is chose and used by the source, requiring the destination to adapt to the change. This might also be done using a predefined header for synchronization. </paragraph>
<paragraph id="P-0405" lvl="0"><number>&lsqb;0405&rsqb;</number> In addition, at the block <highlight><bold>3325</bold></highlight>, in another embodiment, along with the indication of the identified data rate, priority indications are also communicated. Whenever battery power is detected as being low, a radio transmits a higher priority indication, and each receiver thereafter treats the radio as having a higher protocol priority than other such radios that exhibit normal power supply energy. Thus, the remaining battery life is optimized. For example, in a non-polling network, the low power device might be directly polled periodically so to allow scheduled wake-ups and contention free access to a receiver. Similarly, in an alternate embodiment, priority indications not need to be sent. Instead, the low battery power device itself exercises protocol priority. For example, for channel access after detecting that the channel is clear at the end of an ongoing transmission, devices with normal energy levels are required to undergo a pseudo-random back-off before attempting a transmission (to avoid collision). The low power device may either minimize the back-off period or ignore the back-off period completely. Thus, the low power device gains channel access easier than other normal power level devices. Other protocol priority schemes may also be assigned by the receivers to the low power device (via the indication), else may be taken directly by the low power device. </paragraph>
<paragraph id="P-0406" lvl="0"><number>&lsqb;0406&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 36</cross-reference> illustrates an alternate embodiment for carrying out the data rate and possibly power level adjustment. At a block <highlight><bold>3351</bold></highlight> upon binding and possibly periodically, the source peripheral LAN device sends an indication of its current battery parameters to the destination peripheral LAN device. This indication may be each of the parameters or may be an averaged indication of all of the parameters together. At a block <highlight><bold>3355</bold></highlight>, upon receipt, the destination peripheral LAN device <highlight><bold>355</bold></highlight> stores the battery parameters (or indication). Finally, at a block <highlight><bold>3358</bold></highlight>, upon receiving a transmission from the source device, based on range determinations and the stored battery parameters, the destination terminal identifies the subsequent data rate (and possibly power level). Thereafter, the new data rate and power level are communicated to the source device either explicitly or implicitly for future transmissions. </paragraph>
<paragraph id="P-0407" lvl="0"><number>&lsqb;0407&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 37</cross-reference> illustrates an exemplary block diagram of a radio unit <highlight><bold>3501</bold></highlight> capable of concurrent participation on multiple LAN&apos;s. To transmit, a control processor <highlight><bold>3503</bold></highlight> sends a digital data stream to a modulation encoding circuit <highlight><bold>3505</bold></highlight>. The modulation encoding circuit <highlight><bold>3505</bold></highlight> encodes the data stream in preparation for modulation by frequency translation circuit <highlight><bold>3507</bold></highlight>. The carrier frequency used to translate the data stream is provided by a frequency generator circuit <highlight><bold>3509</bold></highlight>. Thereafter, the modulated data stream is amplified by a transmitter amplifier circuit <highlight><bold>3511</bold></highlight> and then radiated via the one of a plurality of antennas <highlight><bold>3513</bold></highlight> that has been selected via an antenna switching circuit <highlight><bold>3515</bold></highlight>. Together, the modulation encoding circuitry <highlight><bold>3505</bold></highlight>, translator <highlight><bold>3507</bold></highlight>, amplifier <highlight><bold>3511</bold></highlight> and associated support circuitry constitute the transmitter circuitry. </paragraph>
<paragraph id="P-0408" lvl="0"><number>&lsqb;0408&rsqb;</number> Similarly, to receive data, the RF signal received by the selected one of the plurality of antennas <highlight><bold>3513</bold></highlight> is communicated to a receiver RF processing circuit <highlight><bold>3517</bold></highlight>. After performing a rather coarse frequency selection, the receiver RF processing circuit <highlight><bold>3517</bold></highlight> amplifies the RF signal received. The amplified received signal undergoes a frequency shift to an IF range via a frequency translation circuit <highlight><bold>3519</bold></highlight>. The frequency translation circuit <highlight><bold>3519</bold></highlight> provides the center frequency for the frequency shift. Thereafter, a receiver signal processing circuit receives the IF signal, performs a more exact channel filtering and demodulation, and forwards the received data to the control processor <highlight><bold>3503</bold></highlight>, ending the process. Together, the receiver signal processing <highlight><bold>3521</bold></highlight>, translator <highlight><bold>3517</bold></highlight>, receiver RF processing <highlight><bold>3517</bold></highlight> and associated support circuitry constitute the receiver circuitry. </paragraph>
<paragraph id="P-0409" lvl="0"><number>&lsqb;0409&rsqb;</number> The control processor <highlight><bold>3503</bold></highlight> operates pursuant to a set of software routines stored in memory <highlight><bold>3522</bold></highlight> which may also store incoming and outgoing data. Specifically, the memory <highlight><bold>3522</bold></highlight> contains routines which define a series of protocols for concurrent communication on a plurality of LANs. As part of such operation, the control processor <highlight><bold>3503</bold></highlight> provides for power savings via a power source control circuit <highlight><bold>3523</bold></highlight>, i.e., whenever the participating protocols permit, the control processor <highlight><bold>3503</bold></highlight> causes selective power down of the radio transceiver circuitry via a control bus <highlight><bold>3525</bold></highlight>. Also, via the bus <highlight><bold>3525</bold></highlight>, the control processor sets the frequency of the frequency generator <highlight><bold>3509</bold></highlight> SO as to select the appropriate band and channel of operation required by a correspondingly selected protocol. Similarly, the control processor <highlight><bold>3503</bold></highlight> selects the appropriate antenna (via the antenna switching circuitry <highlight><bold>3515</bold></highlight>) and channel filtering in preparation for operation on a selected LAN. Responding to the software routines stored in the memory <highlight><bold>3522</bold></highlight>, the control processor <highlight><bold>3503</bold></highlight> selects the appropriate LANs to establish participation, detaches from those of the selected LANs in which participation is no longer needed, identifies from the selected LANs a current priority LAN in which to actively participate, maintains a time-shared servicing of the participating LANS. Further detail regarding this process follows below. </paragraph>
<paragraph id="P-0410" lvl="0"><number>&lsqb;0410&rsqb;</number> In one embodiment, the control processor <highlight><bold>3503</bold></highlight> constitutes a typical microprocessor on an independent integrated circuit. In another embodiment, the control processor <highlight><bold>3503</bold></highlight> comprises a combination of distributed processing circuitry which could be included in a single integrated circuit as is a typical microprocessor. Similarly, the memory <highlight><bold>3522</bold></highlight> could be any type of memory unit(s) or device(s) capable of software storage. </paragraph>
<paragraph id="P-0411" lvl="0"><number>&lsqb;0411&rsqb;</number> The radio circuitry illustrated is designed with the frequency nimble frequency generator <highlight><bold>3509</bold></highlight> so as to be capable of operation on a plurality of LANs/WANs. Because each of the plurality may be allocated a different frequency band, more than one antenna may be desirable (although a single antenna could be used, antenna bandwidth limitations might result in an unacceptable transmission-reception inefficiency). Thus, to select the appropriate configuration, the control processor <highlight><bold>3503</bold></highlight> first identifies the LAN/WAN on which to participate and selects the corresponding radio configuration parameters from the memory <highlight><bold>3521</bold></highlight>. Thereafter, using the configuration parameters and pursuant to control routines stored in the memory <highlight><bold>3522</bold></highlight>, the control processor <highlight><bold>3503</bold></highlight> sets the frequency of the generator <highlight><bold>3509</bold></highlight>, selects the appropriate antenna via the antenna switching circuit <highlight><bold>3515</bold></highlight>, and configures the receiver RF and signal processing circuits <highlight><bold>3517</bold></highlight> and <highlight><bold>3521</bold></highlight> for the desired LAN/WAN. </paragraph>
<paragraph id="P-0412" lvl="0"><number>&lsqb;0412&rsqb;</number> More particularly, the antenna switching circuit <highlight><bold>3515</bold></highlight> comprises a plurality of digitally controlled switches, each of which is associated with one of the plurality of antennas <highlight><bold>3513</bold></highlight> so as to permit selective connection by the control processor <highlight><bold>3503</bold></highlight> of any available antenna to the transceiver circuitry. </paragraph>
<paragraph id="P-0413" lvl="0"><number>&lsqb;0413&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 38</cross-reference> illustrates an exemplary functional layout of the frequency generator <highlight><bold>3509</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 37</cross-reference> according to one embodiment of the present invention. Basically, the frequency generator <highlight><bold>3509</bold></highlight> responds to the control processor <highlight><bold>3503</bold></highlight> by producing the translation frequency necessary for a selected LAN/WAN. The illustrated frequency generator comprises a voltage controlled oscillator (VCO) <highlight><bold>3601</bold></highlight>. As is commonly known, for a VCO, the center frequency F<highlight><subscript>VCO </subscript></highlight>tracks the input voltage. However, because typical VCO&apos;s are subject to drift, the VCO is stabilized by connecting it in a phase locked loop to a narrowband reference, such as a crystal reference oscillator <highlight><bold>3603</bold></highlight>. The oscillator <highlight><bold>3603</bold></highlight> outputs a signal of a fixed or reference frequency F<highlight><subscript>REF </subscript></highlight>to a divide-by-R circuit <highlight><bold>3605</bold></highlight>, which divides as its name implies the reference frequency F<highlight><subscript>REF </subscript></highlight>by the known number R. A phase detector <highlight><bold>3609</bold></highlight> receives the divided-by-R output of the circuit <highlight><bold>3609</bold></highlight> and the feedback from the output of the VCO <highlight><bold>3601</bold></highlight> via a divide-by-N circuit <highlight><bold>3607</bold></highlight>. Upon receipt, the phase detector <highlight><bold>3609</bold></highlight> compares the phase of the outputs from the circuits <highlight><bold>3605</bold></highlight> and <highlight><bold>3607</bold></highlight>. Based on the comparison, a phase error signal is generated and applied to a lowpass loop filter <highlight><bold>3611</bold></highlight>. The output of the filter <highlight><bold>3611</bold></highlight> is applied to the input of the VCO <highlight><bold>3601</bold></highlight> causing the center frequency of the VCO <highlight><bold>3601</bold></highlight> to lock-in. Therefore, if the output of the VCO <highlight><bold>3601</bold></highlight> begins to drift out of phase of the reference frequency, the phase detector <highlight><bold>3609</bold></highlight> responds with a corrective output so as to adjust the center frequency of the VCO <highlight><bold>3601</bold></highlight> back in phase. </paragraph>
<paragraph id="P-0414" lvl="0"><number>&lsqb;0414&rsqb;</number> With the illustrated configuration, the center frequency of the VCO <highlight><bold>3601</bold></highlight> is a function of the reference frequency as follows:</paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>F</italic></highlight><highlight><subscript>VCO</subscript></highlight>&equals;(<highlight><italic>F</italic></highlight><highlight><subscript>REF</subscript></highlight><highlight><italic>*N</italic></highlight>)/<highlight><italic>R</italic></highlight></in-line-formula></paragraph>
<paragraph id="P-0415" lvl="7"><number>&lsqb;0415&rsqb;</number> Thus, to vary the center frequency of the VCO <highlight><bold>3601</bold></highlight> to correspond to a band of a selected LAN/WAN in which active participation is desired, the control processor <highlight><bold>3503</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 37</cross-reference>) need only vary the variables &ldquo;R&rdquo; and &ldquo;N&rdquo; and perhaps the frequency of the reference oscillator. Because the output F<highlight><subscript>REF </subscript></highlight>of the reference oscillator <highlight><bold>3603</bold></highlight> is quite stable, the phase lock loop as shown also keeps the output frequency F<highlight><subscript>VCO </subscript></highlight>of the VCO <highlight><bold>3601</bold></highlight> stable. </paragraph>
<paragraph id="P-0416" lvl="0"><number>&lsqb;0416&rsqb;</number> More specifically, although any other scheme might be implemented, the value R in the divide-by-R circuit <highlight><bold>3605</bold></highlight> is chosen so as to generate an output equal to the channel spacing of a desired LAN/WAN, while the value N is selected as a multiplying factor for stepping up the center frequency of the VCO <highlight><bold>3601</bold></highlight> to the actual frequency of a given channel. Moreover, the frequency of the reference oscillator is chosen so as to be divisible by values of R to yield the channel spacing frequencies of all potential LANs and WANs. For example, to participate on both MTEL Corporation&apos;s Two Way Paging WAN (operating at 900 MHz with 25 KHz and 50 KHz channel spacings) and ARDIS Corporation&apos;s 800 MHz specialized mobile radio (SMR) WAN (operating at 25 KHz channel spacings centered at multiples of 12.5 KHz), a single reference frequency may be chosen to be a whole multiple of 12.5 KHz. Alternately, multiple reference frequencies may be chosen. Moreover, the value N is chosen to effectively multiply the output of the divide-by-R circuit <highlight><bold>3605</bold></highlight> to the base frequency of a given channel in the selected WAN. </paragraph>
<paragraph id="P-0417" lvl="0"><number>&lsqb;0417&rsqb;</number> For frequency hopping protocols, the value of R is chosen so as to yield the spacing between frequency hops. Thus, as N is incremented, each hopping frequency can be selected. Randomizing the sequence of such values of N provides a hopping sequence for use by an access point as described above. Pluralities of hopping sequences (values of N) may be stored in the memory <highlight><bold>3522</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 37</cross-reference>) for operation on the premises LAN, for example. </paragraph>
<paragraph id="P-0418" lvl="0"><number>&lsqb;0418&rsqb;</number> In addition to the single port phase locked loop configuration for the frequency generator <highlight><bold>3509</bold></highlight>, other configurations might also be implemented. Exemplary circuitry for such configurations can be found in U.S. patent application Ser. No. 08/205,639 (Attorney Docket Nos. DN37139XXA; 10458US03), filed Mar. 4, 1994 by Mahany et al., entitled &ldquo;Method of and Apparatus For Controlling Modulation of Digital Signals in Frequency-Modulated Transmissions&rdquo;. This application is incorporated herein in its entirety. </paragraph>
<paragraph id="P-0419" lvl="0"><number>&lsqb;0419&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 39</cross-reference> illustrates further detail of the receiver RF processing circuit <highlight><bold>3517</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 37</cross-reference> according to one embodiment of the present invention. Specifically, a preselector <highlight><bold>3651</bold></highlight> receives an incoming RF data signal from a selected one of the plurality of antennas <highlight><bold>3513</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 37</cross-reference>) via an input line <highlight><bold>3653</bold></highlight>. The preselector <highlight><bold>3651</bold></highlight> provides a bank of passive filters <highlight><bold>3657</bold></highlight>, such as ceramic or dielectric resonator filters, each of which provides a coarse filtering for one of the LAN/WAN frequencies to which it is tuned. One of the outputs from the bank of passive filters <highlight><bold>3657</bold></highlight> is selected by the control processor <highlight><bold>3503</bold></highlight> via a switching circuit <highlight><bold>3655</bold></highlight> so as to monitor the desired one of the available LANs/WANs. Thereafter, the selected LAN/WAN RF signal is amplified by an RF amplifier <highlight><bold>3659</bold></highlight> before translation by the frequency translation circuit <highlight><bold>3519</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 37</cross-reference>). </paragraph>
<paragraph id="P-0420" lvl="0"><number>&lsqb;0420&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 40</cross-reference> illustrates further detail of the receiver signal processing circuit <highlight><bold>3521</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 37</cross-reference> according to one embodiment of the present invention. In particular, digitally controlled switching circuits <highlight><bold>3701</bold></highlight> and <highlight><bold>3703</bold></highlight> respond to the control processor <highlight><bold>3503</bold></highlight> by selecting an appropriate pathway for the translated IF data signal through one of a bank of IF filters <highlight><bold>3705</bold></highlight>. Each IF filter is an analog crystal filter, although other types of filters such as a saw filter might be used. The IF filters <highlight><bold>3705</bold></highlight> provide rather precise tuning to select the specific channel of a given LAN/WAN. </paragraph>
<paragraph id="P-0421" lvl="0"><number>&lsqb;0421&rsqb;</number> After passing through the switching circuit <highlight><bold>3703</bold></highlight>, the filtered IF data signal is then amplified by an IF amplifier <highlight><bold>3707</bold></highlight>. The amplified IF signal is then communicated to a demodulator <highlight><bold>3709</bold></highlight> for demodulation. The control processor retrieves the incoming demodulated data signal for processing and potential storage in the memory <highlight><bold>3522</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 37</cross-reference>). </paragraph>
<paragraph id="P-0422" lvl="0"><number>&lsqb;0422&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 41</cross-reference> illustrates further detail of the receiver signal processing circuit <highlight><bold>3521</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 37</cross-reference> according to another embodiment of the present invention. Specifically, the IF signal resulting from the translation by the frequency translator circuitry <highlight><bold>3519</bold></highlight>, enters the receiver signal processing circuit via an input <highlight><bold>3751</bold></highlight>. Thereafter, the IF signal passes through an anti-aliasing filter <highlight><bold>3753</bold></highlight>, and is amplified by a linear amplifier <highlight><bold>3755</bold></highlight>. An IF oscillator <highlight><bold>3757</bold></highlight> supplies a reference signal f<highlight><subscript>REF </subscript></highlight>for translation of the incoming IF signal at frequency translation circuits <highlight><bold>3759</bold></highlight> and <highlight><bold>3761</bold></highlight>. A phase shift circuit <highlight><bold>3763</bold></highlight> provides for a 90-degree shift of f<highlight><subscript>REF</subscript></highlight>, i.e., if f<highlight><subscript>REF </subscript></highlight>is considered a SINE wave, then the output of the circuit <highlight><bold>3763</bold></highlight> is the COSINE of f<highlight><subscript>REF</subscript></highlight>. Both the SINE and COSINE frequency translation pathways provide for channel selection of the incoming data signal. Thereafter the data signals are passed through corresponding low pass filters <highlight><bold>3765</bold></highlight> and <highlight><bold>3767</bold></highlight> in preparation for sampling by analog to digital (A/D) converters <highlight><bold>3769</bold></highlight> and <highlight><bold>3771</bold></highlight>. Each A/D converter forwards the sampled data to a digital signal processor <highlight><bold>3773</bold></highlight> which provides for further filtering and demodulation. The digital signal processor <highlight><bold>3773</bold></highlight> thereafter forwards the incoming data signal to the control processor <highlight><bold>3503</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 37</cross-reference>) via an output line <highlight><bold>3775</bold></highlight>. Moreover, although the digital signal processor <highlight><bold>3773</bold></highlight> and the control processor <highlight><bold>3507</bold></highlight> are discrete components in the illustrated example, they may also be combined into a single integrated circuit. </paragraph>
<paragraph id="P-0423" lvl="0"><number>&lsqb;0423&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 42</cross-reference> illustrates further detail of some of the storage requirements of the memory <highlight><bold>3522</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 37</cross-reference> according to one embodiment of the present invention. To control the radio, the control processor <highlight><bold>3503</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 37</cross-reference>) accesses the information in the memory <highlight><bold>3522</bold></highlight> needed for radio setup and operation on a plurality of LANs/WANs. Among other information, the memory <highlight><bold>3522</bold></highlight> stores: 1) a plurality of software protocols, one for each LAN/WAN to be supported, which define how the radio is to participate on the corresponding LAN; and 2) an overriding control set of routines which govern the selection, use and interaction of the plurality of protocols for participation on desired LANs/WANs. </paragraph>
<paragraph id="P-0424" lvl="0"><number>&lsqb;0424&rsqb;</number> Specifically, in the memory unit <highlight><bold>3522</bold></highlight>, among other information and routines, software routines relating to the media access control (MAC) sublayer of the communication protocol layers can be found. In general, a MAC sublayer provides detail regarding how communication generally flows through a corresponding LAN or WAN. Specifically, the MAC sublayer handles functions such as media access control, acknowledge, error detection and retransmission. The MAC layer is fairly independent of the specific radio circuitry and channel characteristics of the LAN or WAN. </paragraph>
<paragraph id="P-0425" lvl="0"><number>&lsqb;0425&rsqb;</number> As illustrated, premises LAN, peripheral LAN, vehicular LAN and WAN MAC routines <highlight><bold>3811</bold></highlight>, <highlight><bold>3813</bold></highlight>, <highlight><bold>3815</bold></highlight> and <highlight><bold>3817</bold></highlight> provide definition as to how the control processor <highlight><bold>3503</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 37</cross-reference>) should operate while actively participating on each LAN or WAN. Although only the several sets of MAC routines are shown, many other sets might also be stored or down-loaded into the memory <highlight><bold>3522</bold></highlight>. Moreover, the sets of MAC routines <highlight><bold>3811</bold></highlight>-<highlight><bold>17</bold></highlight> might also share a set of common routines <highlight><bold>3819</bold></highlight>. In fact, the sets of MAC routines <highlight><bold>3811</bold></highlight>-<highlight><bold>17</bold></highlight> might be considered a subset of an overall MAC which shares the common MAC routines <highlight><bold>3819</bold></highlight>. </paragraph>
<paragraph id="P-0426" lvl="0"><number>&lsqb;0426&rsqb;</number> Below the MAC layer in the communication hierarchy, hardware and channel related software routines and parameters are necessary for radio control. For example, such routines govern the specific switching for channel filtering and antenna selection required by a given LAN or WAN. Similarly, these routines govern the control processor <highlight><bold>3503</bold></highlight>&apos;s selection of parameters such as for R and N for the frequency generator <highlight><bold>3509</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 38</cross-reference>), or the selective power-down (via the power source control circuitry <highlight><bold>3503</bold></highlight>&mdash;<cross-reference target="DRAWINGS">FIG. 37</cross-reference>) of portions or all of the radio circuitry whenever possible to conserve battery power. As illustrated, such routines and parameters are referred to as physical (PHY) layer control software <highlight><bold>3821</bold></highlight>. Each of the sets of MAC routines <highlight><bold>3811</bold></highlight>-<highlight><bold>17</bold></highlight> and <highlight><bold>3819</bold></highlight> provide specific interaction with the PHY layer control software <highlight><bold>3821</bold></highlight>. </paragraph>
<paragraph id="P-0427" lvl="0"><number>&lsqb;0427&rsqb;</number> A set of MAC select/service routines <highlight><bold>3823</bold></highlight> govern the management of the overall operation of the radio in the network. For example, if participation on the premises LAN is desired, the MAC select/service routines <highlight><bold>3823</bold></highlight> direct the control processor <highlight><bold>3503</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 37</cross-reference>) to the common and premises MAC routines <highlight><bold>3819</bold></highlight> and <highlight><bold>3811</bold></highlight> respectively. Thereafter, if concurrent participation with a peripheral LAN is desired, the select/service routines <highlight><bold>3823</bold></highlight> direct the control processor <highlight><bold>3503</bold></highlight> to enter a sleep mode (if available). The control processor <highlight><bold>3503</bold></highlight> refers to the premises LAN MAC routines <highlight><bold>3811</bold></highlight>, and follows the protocol necessary to establish sleep mode on the premises LAN. Thereafter, the select/service routines <highlight><bold>3823</bold></highlight> directs the control processor <highlight><bold>3503</bold></highlight> to the peripheral LAN MAC routines <highlight><bold>3813</bold></highlight> to establish and begin servicing the peripheral LAN. Whenever the peripheral LAN is no longer needed, the select/service routines <highlight><bold>3823</bold></highlight> direct a detachment from the peripheral LAN (if required) as specified in the peripheral LAN MAC routines <highlight><bold>3813</bold></highlight>. Similarly, if, during the servicing of the peripheral LAN, an overriding need to service the premises LAN arises, the processor <highlight><bold>3503</bold></highlight> is directed to enter a sleep mode via the peripheral LAN MAC routines <highlight><bold>3813</bold></highlight>, and to return to servicing the premises LAN. </paragraph>
<paragraph id="P-0428" lvl="0"><number>&lsqb;0428&rsqb;</number> Although not shown, additional protocol layers as well as incoming and outgoing data are also stored with the memory <highlight><bold>3522</bold></highlight>, which, as previously articulated, may be a distributed plurality of storage devices. </paragraph>
<paragraph id="P-0429" lvl="0"><number>&lsqb;0429&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 43</cross-reference> illustrates a software flow chart describing the operation of the control processor <highlight><bold>3503</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 37</cross-reference>) in controlling the radio unit to participate on multiple LANs according to one embodiment of the present invention. Specifically, at a block <highlight><bold>3901</bold></highlight>, the control processor first determines whether the radio unit needs to participate on an additional LAN (or WAN). If such additional participation is needed, at a block <highlight><bold>3903</bold></highlight>, the radio unit may register sleep mode operation with other participating LANs if the protocols of those LANs so require and the radio unit has not already done so. Next, at a block <highlight><bold>3905</bold></highlight>, the control processor causes the radio unit to poll or scan to locate the desired additional LAN. If the additional LAN is located at a block <highlight><bold>3907</bold></highlight>, participation of the radio unit on the additional LAN is established at a block <highlight><bold>3909</bold></highlight>. </paragraph>
<paragraph id="P-0430" lvl="0"><number>&lsqb;0430&rsqb;</number> If additional participation is not needed at block <highlight><bold>3901</bold></highlight>, or if the additional LAN has not been located at block <highlight><bold>3907</bold></highlight>, or once participation of the radio unit on the additional LAN has been established at block <highlight><bold>3909</bold></highlight>, the control processor next determines at a block <highlight><bold>3911</bold></highlight> whether any of the participating LANs require servicing. If any given participating LAN requires servicing, at a block <highlight><bold>3913</bold></highlight>, the radio unit may be required by the protocol of the given LAN to reestablish an active participation status on that LAN, i.e., indicate to the given LAN that the radio unit has ended the sleep mode. Next, at a block <highlight><bold>3915</bold></highlight>, the radio unit services the given LAN as needed or until the servicing of another LAN takes priority over that of the given LAN. At a block <highlight><bold>3917</bold></highlight>, the radio unit may then be required to register sleep mode operation with the given LAN if the LAN&apos;s protocol so requires. </paragraph>
<paragraph id="P-0431" lvl="0"><number>&lsqb;0431&rsqb;</number> At that point, or if no participating LAN needs servicing at block <highlight><bold>3911</bold></highlight>, the control processor determines at a block <highlight><bold>3919</bold></highlight> whether the radio needs to detach from any given participating LAN. If so, the radio unit may implicitly detach at a block <highlight><bold>3923</bold></highlight> if the protocol of the LAN from which the radio wishes to detach requires no action by the radio unit. However, at a block <highlight><bold>3921</bold></highlight>, the radio unit may be required to establish active participation on the LAN in order to explicitly detach at block <highlight><bold>3923</bold></highlight>. For example, such a situation may arise when a portable terminal desires to operate on a shorter range vehicular LAN and detaches from a premises LAN. The portable terminal may be required by the protocol of the premises LAN to establish active communication on the premises LAN to permit the radio unit to inform the premises LAN that it is detaching and can only be accessed through the vehicular LAN. </paragraph>
<paragraph id="P-0432" lvl="0"><number>&lsqb;0432&rsqb;</number> Once the radio unit is detached at block <highlight><bold>3923</bold></highlight>, or if the radio unit does not need to detach from any participating LANs at block <highlight><bold>3919</bold></highlight>, the control processor returns to block <highlight><bold>3901</bold></highlight> to again determine whether the radio unit needs to participate on an additional LAN, and repeats the process. </paragraph>
<paragraph id="P-0433" lvl="0"><number>&lsqb;0433&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 44</cross-reference> is an alternate embodiment of the software flow chart wherein the control processor participates on a master LAN and, when needed, on a slave LAN. Specifically, at a block <highlight><bold>3951</bold></highlight>, the control processor causes the radio unit to poll or scan in order to locate the master LAN. If the master LAN has not been located at a block <highlight><bold>3953</bold></highlight>, polling or scanning for the master LAN continues. Once the master LAN is located, participation with the master is established at a block <highlight><bold>3955</bold></highlight>. At a block <highlight><bold>3957</bold></highlight>, the radio unit participates with the master LAN until the need for the radio unit to participate on the slave LAN takes precedence. When that condition occurs, the control processor determines at a block <highlight><bold>3959</bold></highlight> whether participation of the radio unit on the slave network is established. If not, such participation is established at a block <highlight><bold>3961</bold></highlight>. Next, at a block <highlight><bold>3963</bold></highlight>, the radio unit services the slave LAN as needed or until the servicing of the master LAN takes priority. If the control processor determines at a block <highlight><bold>3965</bold></highlight> that servicing of the slave LAN has been completed, the radio unit detaches from the slave LAN at a block <highlight><bold>3967</bold></highlight> and returns to block <highlight><bold>3957</bold></highlight> to continue participation on the master LAN. </paragraph>
<paragraph id="P-0434" lvl="0"><number>&lsqb;0434&rsqb;</number> However, if the control processor determines at block <highlight><bold>3965</bold></highlight> that servicing has not been, or may not be, completed, the radio unit does not detach from the slave LAN. In that case, before returning to block <highlight><bold>3957</bold></highlight> to service the master LAN, the radio unit may be required by the protocol of the slave LAN to register sleep mode operation with the slave LAN at a block <highlight><bold>3969</bold></highlight>. </paragraph>
<paragraph id="P-0435" lvl="0"><number>&lsqb;0435&rsqb;</number> In another embodiment, shown in <cross-reference target="DRAWINGS">FIG. 45</cross-reference>, the overall communication system of the present invention has been adapted to service the environment found, for example, in a retail store. As illustrated, the premises of the retail store are configured with a communication network to provide for inventory control. Specifically, the communication network includes a backbone LAN <highlight><bold>4501</bold></highlight>, an inventory computer <highlight><bold>4511</bold></highlight>, and a plurality of cash registers located throughout the store, such as cash registers <highlight><bold>4503</bold></highlight> and <highlight><bold>4505</bold></highlight>. As illustrated, the backbone LAN <highlight><bold>4501</bold></highlight> is a single wired link, such as Ethernet. However, it may comprise multiple sections of wired links with or without wireless link interconnects. For example, in another embodiment, each cash register <highlight><bold>4503</bold></highlight> and <highlight><bold>4505</bold></highlight> is communicatively interconnected with the inventory computer via an infrared link. </paragraph>
<paragraph id="P-0436" lvl="0"><number>&lsqb;0436&rsqb;</number> The inventory computer <highlight><bold>4511</bold></highlight>, which can range from a personal to main frame computer, provides central control over the retail inventory by monitoring the inventory status. Thus, the inventory computer <highlight><bold>4511</bold></highlight> must monitor both sales and delivery information regarding inventoried goods. To monitor sales information, the cash registers <highlight><bold>4503</bold></highlight> and <highlight><bold>4505</bold></highlight> include code scanners, such as tethered code scanners <highlight><bold>4507</bold></highlight> and <highlight><bold>4509</bold></highlight>, which read codes on product labels or tags as goods are purchased. After receiving the code information read from the scanners <highlight><bold>4507</bold></highlight> and <highlight><bold>4509</bold></highlight>, the cash registers <highlight><bold>4503</bold></highlight> and <highlight><bold>4505</bold></highlight> communicate sales information to the inventory computer <highlight><bold>4511</bold></highlight> via the backbone LAN <highlight><bold>4501</bold></highlight>. To monitor delivery information, when the truck <highlight><bold>4513</bold></highlight> makes a delivery, the information regarding the goods delivered is communicated to the inventory computer <highlight><bold>4511</bold></highlight> via the access point <highlight><bold>4517</bold></highlight>. As illustrated, the access point <highlight><bold>4517</bold></highlight> acts as a direct access point to the backbone LAN <highlight><bold>4501</bold></highlight>, even though a series of wireless hops might actually be required. </paragraph>
<paragraph id="P-0437" lvl="0"><number>&lsqb;0437&rsqb;</number> Upon receiving the sales information from the cash registers <highlight><bold>4503</bold></highlight> and <highlight><bold>4505</bold></highlight>, the inventory computer <highlight><bold>4511</bold></highlight> automatically debits the inventory count of the goods sold. Similarly, upon receiving the delivery information, the inventory computer <highlight><bold>4511</bold></highlight> automatically credits the inventory count of the goods delivered. With both the sales and delivery information, the inventory computer <highlight><bold>4511</bold></highlight> accurately monitors the inventory of all goods stocked by the retail store. From the inventory information, the inventory computer <highlight><bold>4511</bold></highlight> generates purchase orders for subsequent delivery, automating the entire process. </paragraph>
<paragraph id="P-0438" lvl="0"><number>&lsqb;0438&rsqb;</number> In particular, the inventory computer <highlight><bold>4511</bold></highlight> receives sales information from the cash registers <highlight><bold>4503</bold></highlight> and <highlight><bold>4505</bold></highlight> as detailed above. Whenever the restocking process is initiated, the inventory computer <highlight><bold>4511</bold></highlight> checks the retail inventory for each item sold to determine if restocking is needed. If restocking proves necessary, the inventory computer <highlight><bold>4511</bold></highlight>, evaluating recent sales history, determines the quantity of the goods needed. From this information, an &ldquo;inventory request&rdquo; is automatically generated by the inventory computer <highlight><bold>4511</bold></highlight>. Once verified (as modified if needed), the inventory request is automatically forwarded by the inventory computer <highlight><bold>4511</bold></highlight> to the warehouse <highlight><bold>4519</bold></highlight>. This forwarding occurs via either a telephone link using a modem <highlight><bold>4521</bold></highlight>, or a WAN link using the backbone LAN <highlight><bold>4501</bold></highlight>, access point <highlight><bold>4517</bold></highlight>, and an antenna tower <highlight><bold>4523</bold></highlight>. </paragraph>
<paragraph id="P-0439" lvl="0"><number>&lsqb;0439&rsqb;</number> At the remote warehouse <highlight><bold>4519</bold></highlight>, the delivery truck <highlight><bold>4513</bold></highlight> is loaded pursuant to the inventory request received from the inventory computer <highlight><bold>4511</bold></highlight>. After loading, the truck <highlight><bold>4513</bold></highlight> travels to the premises of the retail store. When within range of the access point <highlight><bold>4517</bold></highlight>, the radio terminal <highlight><bold>4515</bold></highlight> in the truck <highlight><bold>4513</bold></highlight> automatically gains access to the retail premises LAN via the access point <highlight><bold>4517</bold></highlight> (as detailed above), and communicates an anticipated delivery list (a &ldquo;preliminary invoice&rdquo;), responsive to the inventory request, to the inventory computer <highlight><bold>4511</bold></highlight>. In response, dock workers can be notified to prepare for the arrival of the delivery truck <highlight><bold>4513</bold></highlight>. In addition, any rerouting information can be communicated to the terminal <highlight><bold>4515</bold></highlight> in the delivery truck <highlight><bold>4513</bold></highlight>. If a complete rerouting is indicated, the truck <highlight><bold>4513</bold></highlight> may be redirected without ever having reached the dock. </paragraph>
<paragraph id="P-0440" lvl="0"><number>&lsqb;0440&rsqb;</number> While unloading the delivery truck <highlight><bold>4513</bold></highlight>, codes are read from all goods as they are unloaded using portable code readers, which may be built into or otherwise communicatively attached to the radio terminal <highlight><bold>4515</bold></highlight>. The codes read are compared with and debited against the preliminary invoice as the goods are unloaded. This comparing and debiting occur either solely within the terminal <highlight><bold>4515</bold></highlight> or jointly within the terminal <highlight><bold>4515</bold></highlight> and the inventory computer <highlight><bold>4511</bold></highlight>. If the codes read do not correspond to goods on the inventory request, or if the codes read do correspond but are in excess of what was required by the inventory request, the goods are rejected. Rejection, therefore, occurs prior to the actual unloading of the goods from the delivery truck <highlight><bold>4513</bold></highlight>. </paragraph>
<paragraph id="P-0441" lvl="0"><number>&lsqb;0441&rsqb;</number> At the dock, the goods received from the delivery truck <highlight><bold>4513</bold></highlight> undergo a confirmation process by a dock worker who, using a radio terminal <highlight><bold>4525</bold></highlight> configured with a code reader, reads the codes from the goods on the dock to guarantee that the proper goods, i.e., those requested pursuant to the inventory request, were actually unloaded. This extra step of confirmation can be eliminated, however, where the dock worker directly participates in the code reading during the unloading process in the delivery truck <highlight><bold>4513</bold></highlight>. Similarly, the code reading within the delivery truck <highlight><bold>4513</bold></highlight> could be eliminated in favor of the above described on-dock confirmation process, but, reloading of any wrongly unloaded goods would be required. </paragraph>
<paragraph id="P-0442" lvl="0"><number>&lsqb;0442&rsqb;</number> Upon confirmation of the delivery by the dock worker, a verified invoice is automatically generated by the radio terminal <highlight><bold>4515</bold></highlight> and routed to the inventory computer <highlight><bold>4511</bold></highlight> for inventory and billing purposes. In addition, the verified invoice is routed to the warehouse <highlight><bold>4519</bold></highlight>. Such routing may occur as soon as the delivery truck returns to the warehouse <highlight><bold>4519</bold></highlight>. However, to accommodate rerouting in situations where goods have been turned away at the retail store, the radio terminal <highlight><bold>4515</bold></highlight> communicates the final invoice immediately to the warehouse <highlight><bold>4519</bold></highlight>. The warehouse <highlight><bold>4519</bold></highlight>, upon receiving the final invoice, checks the final invoice with the list of goods loaded in the delivery truck <highlight><bold>4513</bold></highlight>, and determines whether delivery of the remaining goods is possible. If so, the warehouse <highlight><bold>4519</bold></highlight> reroutes the truck <highlight><bold>4513</bold></highlight> to the next delivery site. </paragraph>
<paragraph id="P-0443" lvl="0"><number>&lsqb;0443&rsqb;</number> The communication of the final invoice and the rerouting information between the warehouse <highlight><bold>4519</bold></highlight> and the terminal <highlight><bold>4515</bold></highlight> may utilize a low cost communication pathway through the telephone link in the premises network of the retail store. In particular, the pathway for such communication utilizes the access point <highlight><bold>4517</bold></highlight>, backbone LAN <highlight><bold>4501</bold></highlight>, inventory computer <highlight><bold>4511</bold></highlight> and modem <highlight><bold>4521</bold></highlight>. Alternately, the communication pathway might also utilize the WAN directly from the radio terminal <highlight><bold>4515</bold></highlight> to the warehouse <highlight><bold>4519</bold></highlight> via the antenna tower <highlight><bold>4523</bold></highlight>. Moreover, the antenna tower <highlight><bold>4523</bold></highlight> is merely representative of a backbone network for the WAN. Depending on the specific WAN used, the tower <highlight><bold>4523</bold></highlight> may actually comprise a plurality of towers using microwave links to span the distance between the retail premises and the warehouse <highlight><bold>4519</bold></highlight>. Similarly, satellite relaying of the communications might also be used. </paragraph>
<paragraph id="P-0444" lvl="0"><number>&lsqb;0444&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 46</cross-reference><highlight><italic>a</italic></highlight>-<highlight><italic>b </italic></highlight>illustrate a further embodiment of the communication system of the present invention which illustrate the use of access servers that support local processing and provide both data and program migration. Specifically, as with the previous figures, <cross-reference target="DRAWINGS">FIG. 46</cross-reference><highlight><italic>a </italic></highlight>illustrates a wireless and hardwired communication network which uses a spanning tree protocol to provide ubiquitous coverage throughout a premises. </paragraph>
<paragraph id="P-0445" lvl="0"><number>&lsqb;0445&rsqb;</number> For example, if any network device, e.g., an end-point device such as a wireless, hand-held computer terminal <highlight><bold>4601</bold></highlight>, desires to communicate with another network device, e.g., a hardwired computer <highlight><bold>4603</bold></highlight>, a routing request is constructed which specifically identifies the destination device. After construction, the routing request is transmitted through a spanning tree pathway to the destination device. </paragraph>
<paragraph id="P-0446" lvl="0"><number>&lsqb;0446&rsqb;</number> In particular, the terminal <highlight><bold>4601</bold></highlight> formulates a routing request identifying the computer <highlight><bold>4603</bold></highlight>. The routing request may also contain, for example, a message or data to be delivered or a request for data or program code. The terminal <highlight><bold>4601</bold></highlight> transmits the routing request downstream (toward the root of the spanning tree) to an access device <highlight><bold>4605</bold></highlight>. The access device <highlight><bold>4605</bold></highlight> examines its spanning tree routing table entries, attempting to locate an upstream path to the destination device identified by the request. Because no entry exists, the access device <highlight><bold>4605</bold></highlight> transmits the routing request downstream to an access device <highlight><bold>4607</bold></highlight>. After finding no routing table entry, the access device <highlight><bold>4607</bold></highlight> routes the request to a root access device <highlight><bold>4609</bold></highlight>. Finding no routing table entry for the computer <highlight><bold>4603</bold></highlight>, the access device <highlight><bold>4609</bold></highlight> transmits the routing request onto a wired LAN <highlight><bold>4610</bold></highlight>. Using its routing table which has an entry for the computer <highlight><bold>4603</bold></highlight>, a root access device <highlight><bold>4611</bold></highlight> fields the routing request and transmits the request upstream to an access device <highlight><bold>4613</bold></highlight>. Likewise, the access device <highlight><bold>4613</bold></highlight>, having an entry, sends the routing request to an access device <highlight><bold>4617</bold></highlight>. Upon receipt, the access device <highlight><bold>4617</bold></highlight> forwards the routing request to the computer <highlight><bold>4603</bold></highlight>. </paragraph>
<paragraph id="P-0447" lvl="0"><number>&lsqb;0447&rsqb;</number> When a network device, an end-point device for example, has a need for remotely stored program code (i.e., program objects) or data (i.e., data objects) such as a schematic diagram, delivery address or repair manual, the end-point device formulates a code or data request and sends it in a downstream spanning tree pathway. Unlike a routing request, data and code requests do not have a specific destination designated. Instead, data/code requests (data requests and/or code request) only identify the specific data or code needed. This is because the requesting device need not know the destination of the data or code needed, promoting dynamic, spanning tree migration&mdash;as will become apparent below. </paragraph>
<paragraph id="P-0448" lvl="0"><number>&lsqb;0448&rsqb;</number> In addition, where possible, program code will be reduced to an interpretive form. Common libraries of program objects (in an object code form, i.e., executable form) are stored at each network terminal, computer or access server. Upon any request for an application program, for example, first, the sequence of calls to each program object is delivered along with a list of all program objects that are needed to fully execute the application program. Thereafter, if the specific underlying code for any of the delivered objects is not found locally, a renewed request for the executable code for those program objects is made. Upon delivery, the application program may be executed. Moreover, the movement of the program application and other specific program objects are tracked and migrated as described above in relation to generic data. </paragraph>
<paragraph id="P-0449" lvl="0"><number>&lsqb;0449&rsqb;</number> For example, the terminal <highlight><bold>4667</bold></highlight> typically operates using an application program directed to an exemplary installation and service industry. A driver of a vehicle <highlight><bold>4666</bold></highlight> enters the premises via a dock. Upon establishing a link with the network, the terminal <highlight><bold>4667</bold></highlight> reports its status. In response, the terminal <highlight><bold>4667</bold></highlight> receives a command to load a docking application from the computer <highlight><bold>4652</bold></highlight> via the premises network. After determining that it does not have the docking application stored locally, the terminal <highlight><bold>4667</bold></highlight> transmits a program code request specifying the application. Because of previous activity, for example, the access device <highlight><bold>4659</bold></highlight> (which receives the transmission) happens to have the program code stored locally. It fields the request, sending the list of program objects along with the &ldquo;interpretive&rdquo; program object sequence. Upon receipt, the terminal <highlight><bold>4667</bold></highlight> might identify that all program object executable code is stored locally, and, therefore, begins to execute the application program. Otherwise, if certain program object executable is not locally stored, the terminal <highlight><bold>4667</bold></highlight> transmits a subsequent request. This time, the access device <highlight><bold>4659</bold></highlight> might not currently store the executable program object code. Thus, the access server <highlight><bold>4659</bold></highlight> routes the request downstream toward a device which does store the code. Once located, the code is delivered upstream to the terminal <highlight><bold>4667</bold></highlight> for execution. </paragraph>
<paragraph id="P-0450" lvl="0"><number>&lsqb;0450&rsqb;</number> Requested data or program code may reside in one or more of those of the access devices <highlight><bold>4605</bold></highlight>, <highlight><bold>4607</bold></highlight>, <highlight><bold>4609</bold></highlight>, <highlight><bold>4611</bold></highlight>, <highlight><bold>4613</bold></highlight>, <highlight><bold>4615</bold></highlight>, <highlight><bold>4617</bold></highlight>, <highlight><bold>4619</bold></highlight> and <highlight><bold>4621</bold></highlight> which happen to be configured as access servers. Otherwise, the data or code may be residing in one or more of the computers <highlight><bold>4603</bold></highlight>, <highlight><bold>4621</bold></highlight>, <highlight><bold>4623</bold></highlight> or <highlight><bold>4625</bold></highlight>, if they are configured as servers. </paragraph>
<paragraph id="P-0451" lvl="0"><number>&lsqb;0451&rsqb;</number> For example, assuming that the access device <highlight><bold>4619</bold></highlight> has been configured as an access server and happens to store data needed by the terminal <highlight><bold>4601</bold></highlight>, the terminal <highlight><bold>4601</bold></highlight> would begin the process of retrieving the data by formulating a data request. As previously mentioned, the data request does not identify the access device <highlight><bold>4619</bold></highlight>, but only identifies the needed data. After formulation, the terminal <highlight><bold>4601</bold></highlight> routes the request downstream to the access device <highlight><bold>4605</bold></highlight>. Upon receipt, the access device <highlight><bold>4605</bold></highlight> determines that it does not store the requested data, and fails to identify the requested data in a routing table entry. Thus, the access device <highlight><bold>4605</bold></highlight> forwards the data request to the access device <highlight><bold>4607</bold></highlight>. As with device <highlight><bold>4605</bold></highlight>, the access device <highlight><bold>4607</bold></highlight> cannot identify the requested data and routes the request to the access device <highlight><bold>4609</bold></highlight>. Upon receipt, the access device <highlight><bold>4609</bold></highlight> consults its routing table and identifies an entry for the requested data. The entry lists the next device in an upstream path to the data, i.e., the access device <highlight><bold>4619</bold></highlight> is listed. Thus, the access device <highlight><bold>4609</bold></highlight> forwards the data request upstream to the access device <highlight><bold>4619</bold></highlight>. The access device <highlight><bold>4619</bold></highlight> responds to the data request by: 1) locating the stored data; 2) formulating a routing request (containing the data) destined for the requesting device, the terminal <highlight><bold>4601</bold></highlight>; and 3) sending the routing request downstream to the access device <highlight><bold>4609</bold></highlight>. Using its routing table, the access device <highlight><bold>4609</bold></highlight> identifies the terminal <highlight><bold>4601</bold></highlight>, and sends the routing request (with attached data) upstream to the access device <highlight><bold>4607</bold></highlight>. Likewise, the access device <highlight><bold>4607</bold></highlight> sends the routing request upstream to the access device <highlight><bold>4605</bold></highlight>. Finally, the access device <highlight><bold>4607</bold></highlight> sends the routing request to the destination, the terminal <highlight><bold>4601</bold></highlight>, completing the process. Program code (e.g., program objects) may be similarly stored, requested and delivered. </paragraph>
<paragraph id="P-0452" lvl="0"><number>&lsqb;0452&rsqb;</number> Similarly, when remote processing is required, a network device formulates a processing request which identifies the specific remote processing needed, yet need not identify a processing destination. After formulation, the processing request is transmitted downstream toward an access server or computer server capable of performing the requested processing. For example, the access device <highlight><bold>4617</bold></highlight> fields processing requests from the computer <highlight><bold>4603</bold></highlight>. After determining that it cannot perform the processing, the access device <highlight><bold>4617</bold></highlight> consults its spanning tree routing table, yet finds no upstream entry for any network device capable of performing the processing. Thus, the access device <highlight><bold>4617</bold></highlight> routes the processing request downstream to the access server <highlight><bold>4613</bold></highlight>. Although the access device <highlight><bold>4613</bold></highlight> has not been configured for such processing, the access device <highlight><bold>4613</bold></highlight> does find an entry identifying a first network device, the access device <highlight><bold>4615</bold></highlight>, in an upstream pathway to a location where such processing is handled. The access device <highlight><bold>4613</bold></highlight> forwards the processing request to the access device <highlight><bold>4615</bold></highlight> which is configured as an access server to handle the processing. Thereafter, the requested processing is carried out by the access device <highlight><bold>4615</bold></highlight>, with any associated intercommunication with the computer <highlight><bold>4603</bold></highlight> needed via the same pathway using routing requests. </paragraph>
<paragraph id="P-0453" lvl="0"><number>&lsqb;0453&rsqb;</number> Thus, each spanning tree routing table not only includes entries for all upstream network devices, each also includes entries for all upstream data, program code and processing resources. Moreover, each such entry only identifies the next network device through which forwarded requests are to made in the pathway to the request destination. Each spanning tree table also contains an entry designating a downstream route for use when no upstream entry can be located. </paragraph>
<paragraph id="P-0454" lvl="0"><number>&lsqb;0454&rsqb;</number> In the communication network of the present invention, program code, data and local processing capabilities dynamically migrate through the network to optimize network performance. Specifically, each of the access devices <highlight><bold>4605</bold></highlight>, <highlight><bold>4607</bold></highlight>, <highlight><bold>4609</bold></highlight>, <highlight><bold>4611</bold></highlight>, <highlight><bold>4613</bold></highlight>, <highlight><bold>4615</bold></highlight>, <highlight><bold>4617</bold></highlight>, <highlight><bold>4619</bold></highlight> and <highlight><bold>4621</bold></highlight> is configured as an access server. However, a specific data object in high demand is not initially stored in any of the access devices. Instead, the data object in high demand is originally stored on the computer <highlight><bold>4623</bold></highlight>, configured as a server. </paragraph>
<paragraph id="P-0455" lvl="0"><number>&lsqb;0455&rsqb;</number> Upon encountering a first data request by the terminal <highlight><bold>4601</bold></highlight> for the data object in high demand, each of the intermediate access servers, the access devices <highlight><bold>4605</bold></highlight>, <highlight><bold>4607</bold></highlight> and <highlight><bold>4609</bold></highlight>, fail to identify the data object which results in the sequential forwarding of the data request to the computer <highlight><bold>4623</bold></highlight>. However, each of the intermediate access servers record entries for the data in their routing tables with a downstream destination. Thereafter, each time that a network device, such as the terminal <highlight><bold>4601</bold></highlight>, requests the data object, the intermediate access servers which receive the request bump up a count stored in the routing table entry. </paragraph>
<paragraph id="P-0456" lvl="0"><number>&lsqb;0456&rsqb;</number> To make a determination of whether to migrate the data object or not, upon encountering a data request, each intermediate access server considers: 1) the associated count entry; 2) the duration of time over which the count entry has accumulated; 3) the cost of retrieving the data from the downstream source; 4) the size of the data object; and 5) its own resource availability (e.g., remaining storage space). </paragraph>
<paragraph id="P-0457" lvl="0"><number>&lsqb;0457&rsqb;</number> For example, after receiving a high number of recent requests for the data object and having a relatively high cost in extracting the downstream object, the access device <highlight><bold>4605</bold></highlight> determines that migration of a copy of the data object into its own available storage could improve network performance. Thus, instead of sending the data request downstream to the access device <highlight><bold>4607</bold></highlight>, the access device <highlight><bold>4605</bold></highlight> substitutes and forwards a migration request instead of the data request. </paragraph>
<paragraph id="P-0458" lvl="0"><number>&lsqb;0458&rsqb;</number> Upon receiving the migration request, the remaining intermediate access servers, the access devices <highlight><bold>4607</bold></highlight> and <highlight><bold>4609</bold></highlight> merely forward the migration request to the computer <highlight><bold>4623</bold></highlight>. In response, the computer <highlight><bold>4623</bold></highlight> records the migration event, i.e., the data object migrated and the migration destination (the access device <highlight><bold>4605</bold></highlight>), for future updating control. </paragraph>
<paragraph id="P-0459" lvl="0"><number>&lsqb;0459&rsqb;</number> The computer <highlight><bold>4623</bold></highlight> also forwards a copy of the data object to the access device <highlight><bold>4609</bold></highlight> for relaying to the access device <highlight><bold>4605</bold></highlight> via the access device <highlight><bold>4607</bold></highlight>. Upon receipt, the access device <highlight><bold>4605</bold></highlight> stores the data object locally, and forwards a further copy back to the requesting network device, the terminal <highlight><bold>4601</bold></highlight>. Thereafter, instead of relaying each data request for that data object downstream, the access device <highlight><bold>4605</bold></highlight> responds by sending a copy of the locally stored data object toward the requesting device. In other words, the access device <highlight><bold>4605</bold></highlight> has effectively intercepted a copy of the data for local storage, and, thereafter, forwards a copy of the locally stored copy to service any incoming requests. </paragraph>
<paragraph id="P-0460" lvl="0"><number>&lsqb;0460&rsqb;</number> In addition, upon forwarding the data object from the source, the computer <highlight><bold>4623</bold></highlight>, to the destination, the terminal <highlight><bold>4601</bold></highlight>, the data object size and link cost associated with reaching a given intermediate access device is recorded. For example, if a wired communication link between the computer <highlight><bold>4623</bold></highlight> and the access device <highlight><bold>4609</bold></highlight> is assigned a cost of &ldquo;1&rdquo;, after fielding the data request, the computer <highlight><bold>4623</bold></highlight> constructs a data response which not only includes the requested data object, but also includes a link cost entry of &ldquo;1&rdquo; and an indication of the data object size. In turn, the access device <highlight><bold>4609</bold></highlight> identifies the cost to the access device <highlight><bold>4607</bold></highlight>, for example a cost of &ldquo;3&rdquo;, the access device adds the &ldquo;3&rdquo; to the pending cost entry in the data response, and forwards the response to the access device <highlight><bold>4607</bold></highlight>. Similarly, the access device <highlight><bold>4607</bold></highlight> assesses a cost of &ldquo;3&rdquo; for the communication link to the access device <highlight><bold>4605</bold></highlight>, adds the &ldquo;3&rdquo; to the pending cost entry of &ldquo;4&rdquo;, and forwards the data response to the access device <highlight><bold>4605</bold></highlight>. After assessing a cost for the link to the terminal <highlight><bold>4601</bold></highlight>, for example a cost of &ldquo;4&rdquo;, the data response is delivered to the terminal <highlight><bold>4601</bold></highlight>. Thus, the terminal <highlight><bold>4601</bold></highlight> sees that to access the data again, it will most likely result in &ldquo;11&rdquo; units of communication cost. Moreover, for example, the terminal <highlight><bold>4607</bold></highlight> considers the cost of &ldquo;3&rdquo; when determining whether to migrate the data object or not. </paragraph>
<paragraph id="P-0461" lvl="0"><number>&lsqb;0461&rsqb;</number> Similarly, when a migration of a data object occurs, all intermediate access devices record the cost of the upstream link to the copy of the data object. Thereafter, upon receiving a data request for the data object, an intermediate access device can compare the cost of the upstream pathway to the copy with the downstream pathway to the original data object to choose the pathway with the lesser cost. A notification of deletion of a copy of a data object destined for a downstream source is also noted by each intermediate access devices, requiring deletions of the entries for the &ldquo;copied then deleted&rdquo; data object. </paragraph>
<paragraph id="P-0462" lvl="0"><number>&lsqb;0462&rsqb;</number> For example, if a locally stored copy of the data fails to be used for a period of time determined by the access device <highlight><bold>4605</bold></highlight> to be too long to justify local storage (in view of the communication link costs back to the original source, the size of the data object, and potentially dwindling local resources), the access device <highlight><bold>4605</bold></highlight> deletes the locally stored copy of the data, and routes to the computer <highlight><bold>4623</bold></highlight> an indication that the local copy of the data object has been deleted. Upon receiving the indication for relaying, the intermediate access devices <highlight><bold>4607</bold></highlight> and <highlight><bold>4609</bold></highlight>, in turn, remove from their routing tables the entries to the recently deleted upstream copy. Upon receipt of the indication, the computer <highlight><bold>4623</bold></highlight> records the deletion, completing the purging process. </paragraph>
<paragraph id="P-0463" lvl="0"><number>&lsqb;0463&rsqb;</number> Although data objects were used above to describe the migration process, program code (or program objects) are similarly migrated to and deleted from local storage. In addition, to prevent instability, a certain amount of hysteresis must be built in to prevent vacillating migration and purging decisions. </paragraph>
<paragraph id="P-0464" lvl="0"><number>&lsqb;0464&rsqb;</number> In assigning cost units to the various communication links, comparisons between factors such as actual monetary costs, bandwidths, delays, loading and power consumption are taken into consideration. Moreover, such costs are stored as sub-entries in the spanning tree routing tables. </paragraph>
<paragraph id="P-0465" lvl="0"><number>&lsqb;0465&rsqb;</number> Although only migration of a copy from a source to a single destination was previously described, if a data or program object proves to be in high enough demand, several, or even all, access devices in the network might store a copy. All that is required is that each access device experience a significant and sustained quantity of requests for a common data object (or program code/object) to justify the storage of a local copy in view of communication link costs and available local resources. </paragraph>
<paragraph id="P-0466" lvl="0"><number>&lsqb;0466&rsqb;</number> Processing resources are similarly migrated and purged. To service a processing request, an access device must be configured not only with sufficient hardware resources but must also store the programming code and associated data necessary to perform the requested processing. </paragraph>
<paragraph id="P-0467" lvl="0"><number>&lsqb;0467&rsqb;</number> For example, if the terminal <highlight><bold>4601</bold></highlight> desires to search prior sales information but can store neither the information nor the necessary search program routines because of limited local resources, the terminal <highlight><bold>4601</bold></highlight> formulates a processing request which it routes downstream to the access device <highlight><bold>4605</bold></highlight>. In the illustrated embodiment, the access device <highlight><bold>4609</bold></highlight> is originally configured with the hardware and software necessary to perform the processing request. In particular, the access device <highlight><bold>4609</bold></highlight> uses bulk storage devices to store past sales data, and executes a search program in response to received processing requests. </paragraph>
<paragraph id="P-0468" lvl="0"><number>&lsqb;0468&rsqb;</number> Although the intermediate access server <highlight><bold>4607</bold></highlight> is configured with appropriate processing and storage resources, originally, it does not store the search program or the past sales data. Thus, while receiving repeated processing requests from the terminal <highlight><bold>4601</bold></highlight> via the intermediate access device <highlight><bold>4605</bold></highlight>, the access device <highlight><bold>4607</bold></highlight> initially logs the request in its routing table and forwards the request downstream to the access device <highlight><bold>4609</bold></highlight> which fields, processes and responds to the requests. </paragraph>
<paragraph id="P-0469" lvl="0"><number>&lsqb;0469&rsqb;</number> Because the frequency of the requests, costs and available local resources, when not busy, the access device <highlight><bold>4607</bold></highlight> sends a migration inquiry downstream to the access device <highlight><bold>4609</bold></highlight>. Upon receipt, the access device <highlight><bold>4609</bold></highlight> responds by sending an indication of the volume of the potential transfer upstream, to the access device <highlight><bold>4607</bold></highlight>. Based on the indication along with the aforementioned other migration factors, the access device <highlight><bold>4607</bold></highlight> may or may not pursue the migration. </paragraph>
<paragraph id="P-0470" lvl="0"><number>&lsqb;0470&rsqb;</number> If migration is chosen, the access device <highlight><bold>4607</bold></highlight> assembles a migration request identifying the desired processing, and routes the request downstream to the access device <highlight><bold>4609</bold></highlight>. In response, the access device <highlight><bold>4609</bold></highlight>, records the migration (for future updating) and begins to transfer a copy of the program (or programming object(s)) and the past sales information to the access device <highlight><bold>4607</bold></highlight>, preferably occurs during periods of low network traffic. </paragraph>
<paragraph id="P-0471" lvl="0"><number>&lsqb;0471&rsqb;</number> Although intermediate access devices between the source and destination of the processing migration are not shown in the exemplary illustration above, any intermediate access devices that do occur follow the same procedures previously set forth in reference to data object migration, recording and purging routing table entries to upstream and downstream processing devices. </paragraph>
<paragraph id="P-0472" lvl="0"><number>&lsqb;0472&rsqb;</number> As may be appreciated in view of the foregoing, in many instances, migration does not always flow immediately to the access device nearest a requesting network device. Instead, for example, an access device which receives the same data or program code requests from a plurality of different terminals will perform migration before any upstream access device unless upstream link costs are comparatively much higher. </paragraph>
<paragraph id="P-0473" lvl="0"><number>&lsqb;0473&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 46</cross-reference><highlight><italic>b </italic></highlight>is a diagram which further illustrates the migration and purging process. In particular, a premises network consists of computers <highlight><bold>4651</bold></highlight> and <highlight><bold>4652</bold></highlight>&mdash;configured as servers, a wired LAN <highlight><bold>4653</bold></highlight>, and access devices <highlight><bold>4655</bold></highlight>, <highlight><bold>4657</bold></highlight>, <highlight><bold>4659</bold></highlight>, <highlight><bold>4661</bold></highlight> and <highlight><bold>4663</bold></highlight>&mdash;configured as access servers. A portable computer terminal <highlight><bold>4664</bold></highlight> participates in the premises network which exhibits migration and purging as described above in reference to <cross-reference target="DRAWINGS">FIG. 46</cross-reference><highlight><italic>a. </italic></highlight>In addition, a vehicular network is shown which consists of a mobile access server <highlight><bold>4665</bold></highlight> and a portable computer terminal <highlight><bold>4667</bold></highlight>. </paragraph>
<paragraph id="P-0474" lvl="0"><number>&lsqb;0474&rsqb;</number> As illustrated, each of the access devices <highlight><bold>4655</bold></highlight> and <highlight><bold>4659</bold></highlight> are configured for long distance, wireless communication with the access server <highlight><bold>4665</bold></highlight> via a second higher power radio and associated antenna, e.g., WAN, paging, cellular, etc. The corresponding first radio and associated antenna are used for relatively lower power premises network communication. </paragraph>
<paragraph id="P-0475" lvl="0"><number>&lsqb;0475&rsqb;</number> Because of the much higher cost associated with the communication link between the access server <highlight><bold>4665</bold></highlight> and the access device <highlight><bold>4659</bold></highlight>, the access servers <highlight><bold>4665</bold></highlight> is much more likely to engage in the dynamic migration of data/code objects or processing resources than the other access servers located within the premises network. With a link cost assessed at &ldquo;20&rdquo; for example, the mobile access server <highlight><bold>4665</bold></highlight> rapidly decides to migrate, while slowly deciding to purge migrated data. The migration/purging process used is the same as that described above in reference to the premises network of <cross-reference target="DRAWINGS">FIG. 46</cross-reference><highlight><italic>a. </italic></highlight></paragraph>
<paragraph id="P-0476" lvl="0"><number>&lsqb;0476&rsqb;</number> In addition, because of the high link cost, the mobile access server <highlight><bold>4665</bold></highlight> is also configured to provide anticipatory migration, and responds to direct migration commands from the terminal <highlight><bold>4667</bold></highlight> or other controlling network devices. Specifically, anticipatory migration may occur in two ways. First, if a driver is preparing to leave the premises to service a specific appliance, for example, the schematic diagram of the appliance may be migrated to the mobile access server <highlight><bold>4665</bold></highlight> in anticipation of future use. This form of anticipatory migration may be directed from a controlling device downstream in the premises network, e.g., the computer <highlight><bold>4652</bold></highlight> which also stores the schematic diagram, from the terminal <highlight><bold>4667</bold></highlight> upstream, or from the access server <highlight><bold>4665</bold></highlight> itself upon analysis of the work order. </paragraph>
<paragraph id="P-0477" lvl="0"><number>&lsqb;0477&rsqb;</number> A second form of anticipatory migration originates at the access server <highlight><bold>4665</bold></highlight> (although the resulting migration control could originate either up or downstream). The access server <highlight><bold>4665</bold></highlight> anticipates future migration needs through the storage and analysis of previous requests for data/code objects or processing resources. For example, if the access server <highlight><bold>4665</bold></highlight> determines that nearly every time the terminal <highlight><bold>4667</bold></highlight> requests a given program code or program object, the terminal <highlight><bold>4667</bold></highlight> follows that request a short time thereafter with further requests for specific data objects. In such circumstances, instead of repeatedly initiating, requesting and delivering portions of data over the communication the higher cost link, the requested and anticipated requests are all handled in one communication session, saving money and time. </paragraph>
<paragraph id="P-0478" lvl="0"><number>&lsqb;0478&rsqb;</number> Similarly, the terminal <highlight><bold>4667</bold></highlight>, through program design or through request monitoring, can also participate in anticipatory migration. For example, the terminal <highlight><bold>4667</bold></highlight> can be programmed to make all upcoming requests at one time, and often in advance of leaving the low power radio range of the premises network. The terminal <highlight><bold>4667</bold></highlight> can also be specifically programmed to issue direct migration and purging commands to the access server <highlight><bold>4665</bold></highlight>, permitting further control of the migration process and system resources of the mobile access server <highlight><bold>4665</bold></highlight>. Moreover, the terminal <highlight><bold>4667</bold></highlight> may be configured to historically monitor all requests so as to anticipate subsequent requests in the manner described above in reference to the access server <highlight><bold>4665</bold></highlight>. </paragraph>
<paragraph id="P-0479" lvl="0"><number>&lsqb;0479&rsqb;</number> In addition, the terminals <highlight><bold>4664</bold></highlight> and <highlight><bold>4667</bold></highlight> are configured to receive keyed, voice and pen input. Other types of input such as video or thumbprint image capture might also be added. The terminals <highlight><bold>4664</bold></highlight> and <highlight><bold>4667</bold></highlight> can also be configured with code reading/image capturing devices, or be configured to receive input from external code reading/image capturing devices (via tethering or low power wireless links). Each terminal also provides voice and LCD (liquid crystal display) output for the user. Thus, it can be appreciated that there are many types of data to be delivered to and from the terminals <highlight><bold>4664</bold></highlight> and <highlight><bold>4667</bold></highlight>. The data may take on the forms of keyed or penned in command information, penned images or signatures, captured images of 2-D codes, signatures, etc. and voice signals, for example. </paragraph>
<paragraph id="P-0480" lvl="0"><number>&lsqb;0480&rsqb;</number> Each type of data handled by the terminals <highlight><bold>4664</bold></highlight> and <highlight><bold>4667</bold></highlight> places specific requirements on the communication network. For example, when communicating voice information, a communication channel or link providing acceptable real time voice delivery may be required. Dedicated bandwidth may be reserved for such communications through the spanning tree network illustrated, or established via a cellular link with the access device <highlight><bold>4655</bold></highlight>. Moreover, if the network conditions are favorable, dedicated bandwidth need not be provided at all (see, e.g., discussion regarding <cross-reference target="DRAWINGS">FIG. 55</cross-reference> below). </paragraph>
<paragraph id="P-0481" lvl="0"><number>&lsqb;0481&rsqb;</number> Cellular radios may be built into the terminals <highlight><bold>4664</bold></highlight> and <highlight><bold>4667</bold></highlight> (via PCMCIA slots, for example) or via tethered cellular phones. Similarly, an access device can be configured with a cellular radio to provided cellular service to mobile terminal devices via either dedicated or time-shared wireless bandwidth through the spanning tree, for example. </paragraph>
<paragraph id="P-0482" lvl="0"><number>&lsqb;0482&rsqb;</number> If postprocessed signature images require at most a delayed delivery of a plurality of such images over inexpensive and possibly slower or less convenient communication links. Alternately, such images may be delivered as a background task when network communication or channel traffic is low. Further, relatively small packages of one way communication to the terminal <highlight><bold>4667</bold></highlight> may travel through a lower cost paging network for delivery. They may also travel through the spanning tree network, cellular networks, or through other higher cost, two way WANs. </paragraph>
<paragraph id="P-0483" lvl="0"><number>&lsqb;0483&rsqb;</number> Because programs cannot always anticipate all of the available communication channels through which the different types of data may flow (availability which not only changes from one network installation to another, but also changes within a given installation due to terminal and device configurations and their locations within the network), the routing tables within each network device subdivide routing information based on the type of data to be forwarded. </paragraph>
<paragraph id="P-0484" lvl="0"><number>&lsqb;0484&rsqb;</number> For example, in an oversimplification of the process described in more detail below in reference to <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a, </italic></highlight>the access device <highlight><bold>4665</bold></highlight> receives a communication from the terminal <highlight><bold>4667</bold></highlight>. The communication takes the form of a requested link for voice signal data destined for the computer <highlight><bold>4651</bold></highlight>. In response, the access device <highlight><bold>4665</bold></highlight> consults its routing table, determines that voice data can take one of two pathways: through either a cellular radio or WAN route to the access device <highlight><bold>4655</bold></highlight>. In response, the access device <highlight><bold>4665</bold></highlight> delivers the communication route options to the terminal <highlight><bold>4667</bold></highlight> for user and/or software consideration. </paragraph>
<paragraph id="P-0485" lvl="0"><number>&lsqb;0485&rsqb;</number> If the request is not aborted and the cellular route is selected, the access device <highlight><bold>4665</bold></highlight> establishes a cellular link with the access device <highlight><bold>4655</bold></highlight>, and requests a voice session with the computer <highlight><bold>4651</bold></highlight>. In response, the access point <highlight><bold>4655</bold></highlight> consults its routing table, and, for voice data to the computer <highlight><bold>4651</bold></highlight>, it identifies the need to use the wired LAN <highlight><bold>4653</bold></highlight> to communicate with the computer <highlight><bold>4651</bold></highlight>. In addition, the access point <highlight><bold>4655</bold></highlight> also determines whether dedicated bandwidth is needed (based on timing considerations), or whether packet based time-shared voice data delivery is sufficient. </paragraph>
<paragraph id="P-0486" lvl="0"><number>&lsqb;0486&rsqb;</number> Either way, the access device <highlight><bold>4655</bold></highlight> responds by placing the request on the wired LAN <highlight><bold>4653</bold></highlight>. In response, the computer <highlight><bold>4651</bold></highlight> communicates an acknowledge message which is routed through the access device <highlight><bold>4655</bold></highlight> to the access device <highlight><bold>4665</bold></highlight>. The access device <highlight><bold>4665</bold></highlight> delivers the acknowledge message to the terminal <highlight><bold>4667</bold></highlight>. At that point, the terminal <highlight><bold>4667</bold></highlight> begins sending the voice data to the computer <highlight><bold>4651</bold></highlight> through the designated route. </paragraph>
<paragraph id="P-0487" lvl="0"><number>&lsqb;0487&rsqb;</number> If the cellular link to the access device <highlight><bold>4655</bold></highlight> is in use or the end-to-end link otherwise proves unavailable, the access device <highlight><bold>4665</bold></highlight> reports the status, again offering the remaining communication route via the WAN. If selected, the access device <highlight><bold>4665</bold></highlight> establishes the pathway to the access device <highlight><bold>4659</bold></highlight> via WAN communications. In turn, the pathway is established through the access device <highlight><bold>4657</bold></highlight>, access device <highlight><bold>4655</bold></highlight> and the computer <highlight><bold>4653</bold></highlight>. With a returned acknowledge from the computer <highlight><bold>4653</bold></highlight>, the terminal <highlight><bold>4667</bold></highlight> begins voice communication. </paragraph>
<paragraph id="P-0488" lvl="0"><number>&lsqb;0488&rsqb;</number> Similarly, a communication pathway between any other two network devices, such as from the computer <highlight><bold>4651</bold></highlight> to the terminal <highlight><bold>4664</bold></highlight>, can be established. For example, if the computer <highlight><bold>4651</bold></highlight> desires the user of the terminal <highlight><bold>4664</bold></highlight> to obtain and compare a penned signature image for comparison with an authenticated signature stored at the computer <highlight><bold>4651</bold></highlight>, the computer <highlight><bold>4651</bold></highlight> first attempts to communicate the request and image data to the terminal <highlight><bold>4664</bold></highlight> via the premises network. If the terminal <highlight><bold>4664</bold></highlight> happens to be out of range of the premises network, the computer <highlight><bold>4651</bold></highlight> attempts to page the terminal <highlight><bold>4664</bold></highlight> with the comparison request. In response, the terminal <highlight><bold>4664</bold></highlight> considers the data type via its routing table, identifies the route(s) available, and offers the route options to the user and/or program at the terminal <highlight><bold>4664</bold></highlight>. If selected, the terminal <highlight><bold>4664</bold></highlight> establishes the selected communication link for the delivery of the associated comparison image. </paragraph>
<paragraph id="P-0489" lvl="0"><number>&lsqb;0489&rsqb;</number> Moreover, because of the high cost associated with the communication link from the access device <highlight><bold>4665</bold></highlight> to the premises network, the access device <highlight><bold>4665</bold></highlight> stores several types of lower priority data until such time or data storage size justifies delivery. Such deliver may not occur until the vehicle returns to the premises network, e.g., to a dock at the premises. </paragraph>
<paragraph id="P-0490" lvl="0"><number>&lsqb;0490&rsqb;</number> In addition, requests for communication may also include specific limitations. For example, the need for voice data only in real time full-duplex (i.e., two-way) mode can be specified, and will result in no consideration by any intermediate network device of other half-duplex or pseudo real time link options. Lowest cost delayed delivery can alternatively be specified if delivery speed is not an issue. Requests specifying high priority result in the selection of the fastest communication link regardless of cost. </paragraph>
<paragraph id="P-0491" lvl="0"><number>&lsqb;0491&rsqb;</number> Moreover, the terminals <highlight><bold>4664</bold></highlight> and <highlight><bold>4667</bold></highlight> can be configured to operate running application software under the DOS, Windows or OS/2 operating system environments. </paragraph>
<paragraph id="P-0492" lvl="0"><number>&lsqb;0492&rsqb;</number> Communication between the terminal <highlight><bold>4667</bold></highlight> and the access device <highlight><bold>4665</bold></highlight> occurs via an infrared link if the terminal <highlight><bold>4667</bold></highlight> is docked within the vehicle. Routing tables within the access device <highlight><bold>4665</bold></highlight> and terminal <highlight><bold>4667</bold></highlight> both contain dual entries for communication exchange pathways. First, the infrared link is attempted, if available. Otherwise, a lower power RF communication transmission is used. Although a wired docking arrangement might be used instead of infrared, infrared is preferred inside the vehicle for ease of installation and to minimize wire clutter. Such infrared installations also provide support for communicating with printers, scanners and other peripheral devices within the vehicle, i.e., the vehicular LAN preferably operates via infrared except when communicating with a remotely located terminal <highlight><bold>4667</bold></highlight> or with other remotely located network devices. </paragraph>
<paragraph id="P-0493" lvl="0"><number>&lsqb;0493&rsqb;</number> In another embodiment illustrated by <cross-reference target="DRAWINGS">FIG. 46</cross-reference><highlight><italic>b, </italic></highlight>service personnel use the vehicle <highlight><bold>4666</bold></highlight> for visiting customer sites. At the site, the terminal <highlight><bold>4667</bold></highlight> is carried within the customer&apos;s premises. Ordinarily, communication with the premises network would take place via relatively low power radio transmissions between the terminal <highlight><bold>4667</bold></highlight> and the access device <highlight><bold>4665</bold></highlight>. However, communication can be achieved via a telephone jack link at the customer site, if: 1) the customer site blocks such transmissions; 2) the transmission range is exceeded; or 3) link costs or channel speed so justify. Once plugged into the telephone jack, the terminal <highlight><bold>4667</bold></highlight> automatically activates inactive routing table entries (by setting a flag therein) corresponding to possible telephone jack links. Thereafter, communication attempts to either the vehicular or premises LAN will offer routes via the customer&apos;s telephone jack link. </paragraph>
<paragraph id="P-0494" lvl="0"><number>&lsqb;0494&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 47</cross-reference><highlight><italic>a </italic></highlight>is a flow diagram which more specifically illustrates the functionality of the access servers of <cross-reference target="DRAWINGS">FIGS. 46</cross-reference><highlight><italic>a</italic></highlight>-<highlight><italic>b </italic></highlight>in handling data, processing and routing requests. At a block <highlight><bold>4701</bold></highlight>, an access server awaits incoming communications which take the form of several types of previously mentioned requests such as data, object, processing, migration and routing requests. In addition at the block <highlight><bold>4701</bold></highlight>, the access server awaits the need to perform migration evaluation and processing, i.e., a time out period to lapse which occurs once every fifteen (15) minutes. This period may be modified (lengthened or shortened) as proves necessary depending on channel loading conditions. </paragraph>
<paragraph id="P-0495" lvl="0"><number>&lsqb;0495&rsqb;</number> Upon receiving a routing request as indicated at the event block <highlight><bold>4703</bold></highlight>, the access server accesses its routing table, at a block <highlight><bold>4705</bold></highlight>, in an attempt to identify the destination of the routing request in an upstream path. If the destination is identified, the access server forwards the routing request to the next network device in the upstream path toward the destination, at a block <highlight><bold>4707</bold></highlight>. Otherwise, if the destination is not identified in the routing table at the block <highlight><bold>4705</bold></highlight>, at the block <highlight><bold>4707</bold></highlight> the access server transmits the routing request to the next network device in the downstream path. Thereafter, the access server returns to the block <highlight><bold>4701</bold></highlight> to await another event. </paragraph>
<paragraph id="P-0496" lvl="0"><number>&lsqb;0496&rsqb;</number> At the block <highlight><bold>4701</bold></highlight>, upon receiving and logging a migration request, the access server vectors from an associated event block <highlight><bold>4709</bold></highlight> to determine whether it stores the requested migration information (e.g., the requested code or data or the program code and/or data associated with a processing resource migration request) locally or not at a block <highlight><bold>4711</bold></highlight>. If not, the access point branches to the block <highlight><bold>4705</bold></highlight> to identify the closest (or any) network device in the spanning tree pathway. For example, if the routing table carries no entries for the migration information, the access server routes the migration request to the next downstream network device. Otherwise, if the routing table carries only an upstream or a downstream entry, the access server routes the request as specified by the routing table. However, if more than one entry exists for the requested migration information, the access server routes the migration request along the lowest cost spanning tree pathway (as indicated in the routing table). </paragraph>
<paragraph id="P-0497" lvl="0"><number>&lsqb;0497&rsqb;</number> However, if, at the block <highlight><bold>4711</bold></highlight>, the access server determines that it stores the migration information locally, the access server: 1) retrieves the migration information and records the migration event for update control, at a block <highlight><bold>4713</bold></highlight>; 2) accesses its routing table to identify the forwarding pathway, at the block <highlight><bold>4705</bold></highlight>; 3) forwards the retrieved migration information, at the block <highlight><bold>4707</bold></highlight>; and 4) returns to the block <highlight><bold>4701</bold></highlight> to await another event. </paragraph>
<paragraph id="P-0498" lvl="0"><number>&lsqb;0498&rsqb;</number> After receiving and logging (counting the occurrence of) a processing request at the block <highlight><bold>4701</bold></highlight>, the access server branches via an event block <highlight><bold>4715</bold></highlight> to determine whether the requested processing can be performed locally or not at a block <highlight><bold>4717</bold></highlight>. If not, the access server forwards the processing request at the block <highlight><bold>4707</bold></highlight> per routing table instruction at the block <highlight><bold>4705</bold></highlight>. Afterwards, the access server returns to await another event at the block <highlight><bold>4701</bold></highlight>. </paragraph>
<paragraph id="P-0499" lvl="0"><number>&lsqb;0499&rsqb;</number> However, if the access server determines that it can perform the requested processing at the block <highlight><bold>4717</bold></highlight>, the access server performs the processing at a block <highlight><bold>4719</bold></highlight>, generates a response at a block <highlight><bold>4721</bold></highlight>, routes the response back to the requesting network device at the block <highlight><bold>4707</bold></highlight> per routing table instruction at the block <highlight><bold>4705</bold></highlight>, and, finally, returns to the block <highlight><bold>4701</bold></highlight> to await another event. </paragraph>
<paragraph id="P-0500" lvl="0"><number>&lsqb;0500&rsqb;</number> Upon receiving and logging a data or code request at the block <highlight><bold>4701</bold></highlight>, the access server vectors via an event block <highlight><bold>4723</bold></highlight> to determine whether the requested data or code is stored locally at a block <highlight><bold>4725</bold></highlight>. If so, the access server branches to a block <highlight><bold>4727</bold></highlight> to retrieve the data or code from storage. Thereafter, the data or code is forwarded at the block <highlight><bold>4707</bold></highlight> per routing table instruction at the block <highlight><bold>4705</bold></highlight>. Once forwarded, the access server branches to the block <highlight><bold>4701</bold></highlight> to await another event. </paragraph>
<paragraph id="P-0501" lvl="0"><number>&lsqb;0501&rsqb;</number> At the block <highlight><bold>4725</bold></highlight>, if the access server determines that the requested data or code is not stored locally, the access server considers whether it should migrate the data at a block <highlight><bold>4729</bold></highlight>. The access server analyzes the overall link cost, the size of the requested data or code, the frequency of such requests, available local storage resources (some of which it may determine to recapture by purging other locally stored data, code or processing resources). </paragraph>
<paragraph id="P-0502" lvl="0"><number>&lsqb;0502&rsqb;</number> Specifically, if sufficient local resources are (or can be made) available, the access server determines the weighted average frequency of the requests for that data or code. The frequency is then multiplied by a predetermined fraction (50%) of the overall link cost for retrieving the data or object to the access server from the current source. The resulting number is then compared to a migration threshold number, for example &ldquo;10&rdquo;. </paragraph>
<paragraph id="P-0503" lvl="0"><number>&lsqb;0503&rsqb;</number> If, at the block <highlight><bold>4729</bold></highlight>, the access server determines that the threshold number is greater than the resulting number, the access server, deciding not to migrate, branches to route the data/code request per routing table instruction at the blocks <highlight><bold>4705</bold></highlight> and <highlight><bold>4707</bold></highlight>. Alternatively, if the access server determines that the threshold number is equal or less than the resulting number at the block <highlight><bold>4729</bold></highlight>, the access server decides to migrate. Thus, at a block <highlight><bold>4731</bold></highlight>, the access server creates and sends a migration request (instead of merely forwarding the data/code request) and awaits delivery of the requested code or data. Upon receipt, at a block <highlight><bold>4733</bold></highlight>, the access server stores the data or code. Thereafter, the data/code is retrieved at the block <highlight><bold>4727</bold></highlight> for routing to the requesting network device via the blocks <highlight><bold>4705</bold></highlight> and <highlight><bold>4707</bold></highlight>. Once routing is complete, the access server again returns to the block <highlight><bold>4701</bold></highlight> to await another event. </paragraph>
<paragraph id="P-0504" lvl="0"><number>&lsqb;0504&rsqb;</number> Finally, upon receiving a time out event signifying the periodic need to perform migration evaluation and processing, the access server branches to execute migration procedures at a block <highlight><bold>4737</bold></highlight>, as described in more detail below. </paragraph>
<paragraph id="P-0505" lvl="0"><number>&lsqb;0505&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 47</cross-reference><highlight><italic>b </italic></highlight>is a flow diagram utilized by the access servers of <cross-reference target="DRAWINGS">FIGS. 46</cross-reference><highlight><italic>a</italic></highlight>-<highlight><italic>b </italic></highlight>to manage the migration of data and program code from a source storage and/or processing device toward an end-point device. More specifically, the exemplary flow diagram illustrates the migration and purging procedures represented by the block <highlight><bold>4737</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 47</cross-reference><highlight><italic>a. </italic></highlight></paragraph>
<paragraph id="P-0506" lvl="0"><number>&lsqb;0506&rsqb;</number> Upon encountering a timeout event (occurring every 15 minutes), an access server begins the illustrated procedure of <cross-reference target="DRAWINGS">FIG. 47</cross-reference><highlight><italic>b. </italic></highlight>At a block <highlight><bold>4751</bold></highlight>, the access server retrieves a data/code entry from its routing table for which it provides local storage. At a block <highlight><bold>4753</bold></highlight>, the current count recorded (indicating the number of requests for that data/code entry during the current time out interval) is multiplied by two thirds (&frac23;) and added to one third (&frac13;) the value of the previously recorded weighted frequency. The access server records the result as the new weighted frequency in the routing table entry. This weighting of frequency constitutes &ldquo;aging&rdquo; of the data/code routing table entry. </paragraph>
<paragraph id="P-0507" lvl="0"><number>&lsqb;0507&rsqb;</number> At a block <highlight><bold>4755</bold></highlight>, fifty percent (50%) of the overall cost of the link, i.e., from the access server to another source of the locally stored data/code, is multiplied by the newly recorded weighted frequency. The access server compares the results of the multiplication with a hysteresis threshold at a block <highlight><bold>4757</bold></highlight>. The hysteresis threshold is also referred to herein as a purging threshold. In premises network locations, for example, the hysteresis threshold is set at five (5) units below the migration threshold of the block <highlight><bold>4729</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 47</cross-reference><highlight><italic>a. </italic></highlight>However, the migration and hysteresis thresholds may need be modified in alternate network embodiments, such as may be found in vehicular network installations. </paragraph>
<paragraph id="P-0508" lvl="0"><number>&lsqb;0508&rsqb;</number> If the hysteresis threshold is exceeded, the access server determines that it should continue to store the data/code, and branches to a block <highlight><bold>4759</bold></highlight> to determine whether there are any remaining entries for locally stored data/code which have not yet been considered for purging. Alternatively, if the hysteresis threshold is not exceeded, the access server determines that the data/code item should be purged, and does so at a block <highlight><bold>4761</bold></highlight>. Thereafter, the access server branches to the block <highlight><bold>4759</bold></highlight>. </paragraph>
<paragraph id="P-0509" lvl="0"><number>&lsqb;0509&rsqb;</number> If, at the block <highlight><bold>4759</bold></highlight>, other data/code items which have not yet been considered for purging, the access server repeats the purging consideration of the blocks <highlight><bold>4751</bold></highlight> through <highlight><bold>4759</bold></highlight> until all locally stored data/code items have been considered. At that point, the access server branches to block <highlight><bold>4763</bold></highlight> to begin migration and purging consideration of processing resources. </paragraph>
<paragraph id="P-0510" lvl="0"><number>&lsqb;0510&rsqb;</number> First, the access server retrieves a routing table entry relating to processing resources, i.e., supporting program code and any associated data. At a block <highlight><bold>4765</bold></highlight>, the access server ages the entry, i.e., performs the aforementioned weighted frequency averaging. Thereafter, fifty percent (50%) of the overall link cost is multiplied with the new weighted frequency at a block <highlight><bold>4767</bold></highlight>. If the entry indicates local storage of the processing resources at a block <highlight><bold>4769</bold></highlight>, the access server compares the results with the hysteresis threshold at a block <highlight><bold>4771</bold></highlight>. If above the hysteresis threshold, the access server continues to store the processing resources, branching to consider any remaining processing resource entries at a block <highlight><bold>4775</bold></highlight>. Otherwise, the access server purges the stored resources at a block <highlight><bold>4773</bold></highlight> before considering any remaining entries at the block <highlight><bold>4775</bold></highlight>. </paragraph>
<paragraph id="P-0511" lvl="0"><number>&lsqb;0511&rsqb;</number> Alternately, if the routing table entry indicates that the processing resources are not stored locally, at a block <highlight><bold>4777</bold></highlight>, the access server determines whether it has been configured with the hardware necessary to perform the processing. If not, the access server branches to the block <highlight><bold>4775</bold></highlight> to consider other entries. Otherwise, at a block <highlight><bold>4779</bold></highlight>, the access server compares the migration threshold with the result, i.e., 50% of the link cost multiplied by the new weighted frequency. If the result does not exceed the migration threshold, the access server branches to the block <highlight><bold>4775</bold></highlight> to consider other entries. If the result exceeds the migration threshold, the access server formulates and routes a migration request for the processing resources, awaits the responsive delivery and stores the resources locally at a block <highlight><bold>4781</bold></highlight>, before branching to the block <highlight><bold>4775</bold></highlight>. </paragraph>
<paragraph id="P-0512" lvl="0"><number>&lsqb;0512&rsqb;</number> At the block <highlight><bold>4775</bold></highlight>, if the access server determines that other processing resource entries have not been considered for purging or migration, it repeatedly branches back to the block <highlight><bold>4763</bold></highlight> to carry out the consideration cycle until complete. Thereafter, the migration/purging procedure ends, and the access point returns to the block <highlight><bold>4701</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 47</cross-reference><highlight><italic>a </italic></highlight>to await the occurrence of another event. </paragraph>
<paragraph id="P-0513" lvl="0"><number>&lsqb;0513&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 48</cross-reference> is a schematic diagram of the access servers of <cross-reference target="DRAWINGS">FIGS. 46</cross-reference><highlight><italic>a</italic></highlight>-<highlight><italic>b </italic></highlight>illustrating an exemplary circuit layout which supports the functionality described in reference to <cross-reference target="DRAWINGS">FIGS. 47</cross-reference><highlight><italic>a</italic></highlight>-<highlight><italic>b</italic></highlight>. In particular, a typical access server, an access server <highlight><bold>4801</bold></highlight>, is configured with transceiver circuitry <highlight><bold>4803</bold></highlight> and associated antenna <highlight><bold>4805</bold></highlight> for participating in the premises, peripheral and/or wide area networks. In addition, another transceiver, a transceiver circuit <highlight><bold>4807</bold></highlight>, and associated antenna <highlight><bold>4809</bold></highlight> might be added, for example, to support WAN or cellular communications. Although not shown, interface circuitry for other wireless or wired communication links may be included in the access server configuration when needed. </paragraph>
<paragraph id="P-0514" lvl="0"><number>&lsqb;0514&rsqb;</number> Processing circuitry <highlight><bold>4811</bold></highlight> provides at least three processing functions for the access server by managing or performing: 1) communication processing functionality; 2) migration and purging; and 3) local resource processing. Although in most embodiments, the processing circuitry <highlight><bold>4811</bold></highlight> comprises a single microprocessor, it may comprise several. Moreover, if the processing circuitry <highlight><bold>4811</bold></highlight> is not configured to perform migration and local resource processing, the illustrated access device operates as an access point. </paragraph>
<paragraph id="P-0515" lvl="0"><number>&lsqb;0515&rsqb;</number> The processing circuitry <highlight><bold>4811</bold></highlight> utilizes a memory <highlight><bold>4813</bold></highlight> for short term and long term bulk storage. The memory <highlight><bold>4813</bold></highlight> comprises hard drive storage, dynamic RAM (random access memory), flash memory, and ROM (read only memory). However, all other types of memory circuits or devices might alternately be used. </paragraph>
<paragraph id="P-0516" lvl="0"><number>&lsqb;0516&rsqb;</number> Specific hardware configurations needed to accommodate specialized processing requests are represented by a circuit/device block <highlight><bold>4815</bold></highlight>. However, such hardware need not be present to service relatively basic processing requests. Additionally, access servers may either be battery powered although, if the network configuration permits, AC (alternating current) power is preferred. </paragraph>
<paragraph id="P-0517" lvl="0"><number>&lsqb;0517&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 49</cross-reference><highlight><italic>a </italic></highlight>is a specific exemplary embodiment of an access server in a multi-hop communication network utilized <highlight><bold>0</bold></highlight> for remote processing of 1-D (one dimensional) or 2-D (two-dimensional) code information. In this embodiment, a code reader <highlight><bold>4901</bold></highlight> is used to capture and transmit code information for further processing, including decoding, by a remote access server in a premises LAN. Specifically, a user brings the code reader <highlight><bold>4901</bold></highlight>, which preferably is a CCD (charged coupled device) type reader, into a reading relationship with a 2-D code <highlight><bold>4903</bold></highlight> located on a container <highlight><bold>4905</bold></highlight>. Light reflected from the code <highlight><bold>4903</bold></highlight> is received by the code reader <highlight><bold>4901</bold></highlight> and directed onto the CCD located within the reader to &ldquo;capture&rdquo; the code image. </paragraph>
<paragraph id="P-0518" lvl="0"><number>&lsqb;0518&rsqb;</number> To enable the CCD to operate properly, however, it may first be necessary for the reader to focus the image on the CCD. Such focusing can, for example, be performed by conventional techniques known in the camera art. As another example, one or more spotter beams are presently used to ensure that the user is holding the reader the proper distance from the code to enable the CCD to properly capture the image. </paragraph>
<paragraph id="P-0519" lvl="0"><number>&lsqb;0519&rsqb;</number> Once captured, the code image may then be digitized within the reader to create a digital signal representative of the code image, which is then transferred, via RF transmissions, to other network devices for further processing. Alternatively, the reader <highlight><bold>4901</bold></highlight> may transmit a modulated analog signal representative of the code image to other network devices for further processing. </paragraph>
<paragraph id="P-0520" lvl="0"><number>&lsqb;0520&rsqb;</number> In any event, the code reader <highlight><bold>4901</bold></highlight>, an end-point device, forwards the code image signal downstream in the premises LAN to the first access server in the network that has the capability of decoding the signal into the usable information represented by the code <highlight><bold>4903</bold></highlight>. As discussed above, any one or all of the access devices <highlight><bold>4907</bold></highlight>-<highlight><bold>4913</bold></highlight> may be an access server and contain the digital signal processing circuitry necessary to decode the code image signal. For example, the network may be designed such that the access device <highlight><bold>4907</bold></highlight> is an access server which performs decoding for all code readers, such as the code reader <highlight><bold>4901</bold></highlight>, being used in a designated area. If, however, the access device <highlight><bold>4907</bold></highlight> is merely an access point, or is an access server but does not have decoding capability, then the access device <highlight><bold>4907</bold></highlight> relays the code image signal downstream. </paragraph>
<paragraph id="P-0521" lvl="0"><number>&lsqb;0521&rsqb;</number> More specifically, and as discussed more completely above, the code reader <highlight><bold>4901</bold></highlight> sends a processing request downstream to the access device <highlight><bold>4907</bold></highlight>. If the access device <highlight><bold>4907</bold></highlight> is an access point, the processing request is simply relayed downstream to the access device <highlight><bold>4909</bold></highlight>. If the access device <highlight><bold>4907</bold></highlight> is an access server, it looks up in its table to determine whether it has the capability to perform the type of processing requested, i.e., decoding. If it does, the access device <highlight><bold>4907</bold></highlight> sends an acknowledge and the code reader <highlight><bold>4901</bold></highlight> forwards the code image signal to the access device <highlight><bold>4907</bold></highlight> for decoding. Once decoded, the information may be re-transmitted to the code reader <highlight><bold>4901</bold></highlight> for display on a screen (not shown). In addition, or alternatively, the access device <highlight><bold>4907</bold></highlight> may send a good read signal to the code reader <highlight><bold>4901</bold></highlight> to indicate to the user that the reading operation has resulted in a valid reading. The decoded information may also be transmitted to a host computer <highlight><bold>4915</bold></highlight> or other network device for further processing. </paragraph>
<paragraph id="P-0522" lvl="0"><number>&lsqb;0522&rsqb;</number> If the access device <highlight><bold>4907</bold></highlight> does not find decode capability listed in its table, it forwards the processing request downstream to access device <highlight><bold>4909</bold></highlight>. Likewise, if access device <highlight><bold>4909</bold></highlight> is an access point or an access server without decode capability, the processing request is forwarded downstream to the access device <highlight><bold>4913</bold></highlight>. Once access device <highlight><bold>4913</bold></highlight> receives the processing request, it also examines its table to determine whether it, or any device upstream of it (such as, for example, access device <highlight><bold>4911</bold></highlight>), has the capability to service the processing request. If it does locate such capability, it sends an acknowledge upstream to the code reader <highlight><bold>4901</bold></highlight> which forwards the code image signal to the access device <highlight><bold>4913</bold></highlight> for decoding thereby or for routing to the upstream access device having that capability. </paragraph>
<paragraph id="P-0523" lvl="0"><number>&lsqb;0523&rsqb;</number> If the access device <highlight><bold>4913</bold></highlight> does not locate decode capability in its table, it forwards the processing request to host computer <highlight><bold>4915</bold></highlight> for decoding thereby or so that the host computer <highlight><bold>4915</bold></highlight> can locate a device having the capability to service the processing request. Of course, as mentioned above, the network could be configured such that each one of the access devices <highlight><bold>4907</bold></highlight>-<highlight><bold>4913</bold></highlight> is an access server having the circuitry necessary for decoding. </paragraph>
<paragraph id="P-0524" lvl="0"><number>&lsqb;0524&rsqb;</number> While a CCD type code reader is preferred with respect to the embodiment of <cross-reference target="DRAWINGS">FIG. 49</cross-reference><highlight><italic>a, </italic></highlight>other types of code readers, including laser scanners, are also contemplated. Furthermore, while the above description places the decoding circuitry in a device external to the code reader <highlight><bold>4901</bold></highlight>, the code reader <highlight><bold>4901</bold></highlight> may house such decoding circuitry and may transmit decoded data to external network devices for further processing. However, there are many advantages to placing the decoding circuitry external to the code reader <highlight><bold>4901</bold></highlight>. For example, because the code reader is a portable device and likely battery-powered, power conservation as well as reader size and weight become important design considerations. By placing the decoding circuitry in a device external to the reader <highlight><bold>4901</bold></highlight>, the reader uses less power and may be smaller and lighter than if the decode circuitry is placed in the code reader <highlight><bold>4901</bold></highlight>. Further, in an environment where numerous code readers are used, placing the decode circuitry in one or a few external devices rather than all readers, which are often dropped by users, reduces the chances that the decode circuitry will be damaged. In addition, such a configuration reduces the amount of circuitry used and consequently results in lower reader manufacturing costs. </paragraph>
<paragraph id="P-0525" lvl="0"><number>&lsqb;0525&rsqb;</number> In addition, the code reader <highlight><bold>4929</bold></highlight> is configured to collect signature, printed text and handwriting images for further processing. Although further processing can be performed onboard within the reader <highlight><bold>4929</bold></highlight>, in one embodiment it occurs within an access server. </paragraph>
<paragraph id="P-0526" lvl="0"><number>&lsqb;0526&rsqb;</number> Either way, such processing first involves the identification of the type of information contained within the image. If the user does not simplify the process by identifying the type of image captured, automatic identification is invoked. This occurs by first attempting to identify the image as a 2-D code. If this fails, the processing involves an attempt at character recognition to identify any printed text that might exist within the image. If no text is found, an analysis is performed to determine whether the image is a handwritten signature. Finally, if all else fails, the image is generically classified as a picture. Several examples of pictures include: a) images of bakery shelf space in a given store for subsequent collection and evaluation of ones competition; b) images of broken equipment for transmission to remote experts for service advice; and c) images of metering or monitoring displays for billing or usage verification. </paragraph>
<paragraph id="P-0527" lvl="0"><number>&lsqb;0527&rsqb;</number> After identification, each type of data receives yet further processing. Decoded 2-D code information is forwarded and acknowledged. Handwritten signatures are compared with known authentic counterparts. Other types of images may be associatively forwarded, stored, displayed and/or acknowledged. </paragraph>
<paragraph id="P-0528" lvl="0"><number>&lsqb;0528&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 49</cross-reference><highlight><italic>b </italic></highlight>is an alternate embodiment of <cross-reference target="DRAWINGS">FIG. 49</cross-reference><highlight><italic>a </italic></highlight>wherein communication between the 2-D code reader and the access devices takes the form of modulated infrared transmissions. Specifically, as discussed above with respect to <cross-reference target="DRAWINGS">FIG. 49</cross-reference><highlight><italic>a, </italic></highlight>a user uses a code reader <highlight><bold>4917</bold></highlight> to read a 2-D code <highlight><bold>4919</bold></highlight> on a container <highlight><bold>4921</bold></highlight>. The user then points the code reader <highlight><bold>4917</bold></highlight> at an infrared transceiver <highlight><bold>4923</bold></highlight> of an access device <highlight><bold>4925</bold></highlight> and transmits a processing request to the access device <highlight><bold>4925</bold></highlight> using infrared transmissions. To facilitate receipt of the infrared transmissions by the infrared transceiver <highlight><bold>4923</bold></highlight>, the reader may disperse its transmissions, say, for example, four inches over a distance of ten feet. Such dispersion allows a user to be less accurate in aiming the code reader <highlight><bold>4917</bold></highlight> at the infrared transceiver <highlight><bold>4923</bold></highlight>. The infrared transceiver <highlight><bold>4923</bold></highlight> may be, for example, a phototransistor/photodiode pair. </paragraph>
<paragraph id="P-0529" lvl="0"><number>&lsqb;0529&rsqb;</number> As above, if the access device <highlight><bold>4925</bold></highlight> is simply an access point, the processing request is simply relayed downstream, via either RF or infrared transmissions, to a further access device downstream. If the access device <highlight><bold>4925</bold></highlight> is an access server, it looks up in its table to determine whether it has the capability to perform the type of processing requested. If it does, the access device <highlight><bold>4925</bold></highlight> sends an acknowledge via infrared transmissions to the code reader <highlight><bold>4917</bold></highlight> and the code reader <highlight><bold>4917</bold></highlight> forwards the code image signal to the access device <highlight><bold>4925</bold></highlight> via infrared transmissions for decoding. The access device <highlight><bold>4925</bold></highlight> may then transmit the decoded information to the code reader <highlight><bold>4917</bold></highlight> for display on a screen and/or forward the decoded information to a host computer <highlight><bold>4927</bold></highlight> for further processing. </paragraph>
<paragraph id="P-0530" lvl="0"><number>&lsqb;0530&rsqb;</number> If the access device <highlight><bold>4925</bold></highlight> does not find decode capability listed in its table, the access device <highlight><bold>4925</bold></highlight> forwards the processing request to one of the access devices <highlight><bold>4924</bold></highlight>, <highlight><bold>4926</bold></highlight>, or <highlight><bold>4928</bold></highlight> to locate such decoding capability similarly as discussed above with respect to <cross-reference target="DRAWINGS">FIG. 49</cross-reference><highlight><italic>a. </italic></highlight>When such a device is located, the code reader, via infrared transmissions, performs a batch forwarding of the stored image data to the access device <highlight><bold>4925</bold></highlight> for eventual decoding by one of the access devices <highlight><bold>4924</bold></highlight>, <highlight><bold>4926</bold></highlight>, or <highlight><bold>4928</bold></highlight> or by a host computer <highlight><bold>4927</bold></highlight> or another device in the premises LAN (i.e., whichever is the first device located that has the decoding capability). In this embodiment, communication between access devices may be achieved using either RF or infrared transmissions. Furthermore, a user may choose to directly communicate with any specific access device in the network simply by pointing the code reader <highlight><bold>4917</bold></highlight> at that device and transmitting a processing request. </paragraph>
<paragraph id="P-0531" lvl="0"><number>&lsqb;0531&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 49</cross-reference><highlight><italic>c </italic></highlight>is an alternate embodiment of <cross-reference target="DRAWINGS">FIG. 49</cross-reference><highlight><italic>a </italic></highlight>wherein indirect communication between the 2-D code reader and the access servers takes place via holstering or docking access servers. Specifically, as discussed above with respect to <cross-reference target="DRAWINGS">FIG. 49</cross-reference><highlight><italic>a, </italic></highlight>a user uses a code reader <highlight><bold>4929</bold></highlight> to read a 2-D code on a container. The user then places the reader <highlight><bold>4929</bold></highlight> in a holster access device <highlight><bold>4931</bold></highlight>. The user may support the holster access device <highlight><bold>4931</bold></highlight> by a shoulder strap <highlight><bold>4933</bold></highlight> and belt <highlight><bold>4935</bold></highlight> to facilitate portability. </paragraph>
<paragraph id="P-0532" lvl="0"><number>&lsqb;0532&rsqb;</number> In one embodiment, the holster access device <highlight><bold>4931</bold></highlight> may be configured to perform decoding so that when the code reader <highlight><bold>4929</bold></highlight> is placed inside the holster access device <highlight><bold>4931</bold></highlight>, the code reader <highlight><bold>4929</bold></highlight> may transmit the code image data to the holster access device <highlight><bold>4931</bold></highlight> for immediate decoding thereby. Alternatively, if the holster access device <highlight><bold>4931</bold></highlight> does not house the necessary decoding circuitry, the holster access device <highlight><bold>4931</bold></highlight> transmits a processing request downstream to one of access devices <highlight><bold>4937</bold></highlight>-<highlight><bold>4943</bold></highlight> to locate such decoding capability similarly as discussed above with respect to <cross-reference target="DRAWINGS">FIG. 49</cross-reference><highlight><italic>a. </italic></highlight></paragraph>
<paragraph id="P-0533" lvl="0"><number>&lsqb;0533&rsqb;</number> In a scenario where numerous codes <highlight><bold>4945</bold></highlight> are to be read successively by the code reader <highlight><bold>4929</bold></highlight>, the code reader <highlight><bold>4929</bold></highlight> may store the read image data and perform a batch transmission to the holster access device <highlight><bold>4931</bold></highlight> for immediate decoding thereby if the holster access device <highlight><bold>4931</bold></highlight> is configured with decoding circuitry. In another embodiment where the holster access device <highlight><bold>4931</bold></highlight> is not so configured, the code reader <highlight><bold>4929</bold></highlight> transmits a processing request to the holster access device <highlight><bold>4931</bold></highlight> via infrared transmissions. The holster access device <highlight><bold>4931</bold></highlight> in turn forwards the processing request downstream via RF transmission to one of the access devices <highlight><bold>4937</bold></highlight>-<highlight><bold>4943</bold></highlight> to locate such decoding capability similarly as discussed above with respect to <cross-reference target="DRAWINGS">FIG. 49</cross-reference><highlight><italic>a. </italic></highlight>When such a device is located, the code reader, via the holster access device <highlight><bold>4931</bold></highlight>, performs a batch forwarding of the read image data for eventual decoding by one of the access devices <highlight><bold>4937</bold></highlight>-<highlight><bold>4943</bold></highlight> or by a host computer <highlight><bold>4947</bold></highlight> or another device in the premises LAN (i.e., whichever is the first device located that has the capability). </paragraph>
<paragraph id="P-0534" lvl="0"><number>&lsqb;0534&rsqb;</number> In an alternate embodiment, batch transmission of stored image data may be performed via a docking access server <highlight><bold>4949</bold></highlight>. When a user has completed his code reading tasks, he docks the code reader <highlight><bold>4929</bold></highlight> in a bay <highlight><bold>4951</bold></highlight> of the docking access server <highlight><bold>4949</bold></highlight>. Other users, when their tasks are completed, may similarly dock their code readers in other bays of the docking access server <highlight><bold>4949</bold></highlight>. In one embodiment, similarly as discussed above with respect to the holster access device <highlight><bold>4931</bold></highlight>, once a code reader is docked in the docking access server <highlight><bold>4949</bold></highlight>, the code reader performs a batch transmission of its stored code image data to the docking access server <highlight><bold>4949</bold></highlight> for immediate decoding thereby if the docking access server <highlight><bold>4949</bold></highlight> is configured with decoding circuitry. In another embodiment where the docking access server <highlight><bold>4949</bold></highlight> is not so configured, the code reader <highlight><bold>4929</bold></highlight> transmits a processing request to the docking access server <highlight><bold>4949</bold></highlight> via infrared transmissions. The docking access server <highlight><bold>4949</bold></highlight> in turn forwards the processing request downstream via RF transmission to one of the access devices <highlight><bold>4937</bold></highlight>-<highlight><bold>4943</bold></highlight> to locate such decoding capability similarly as discussed above with respect to <cross-reference target="DRAWINGS">FIG. 49</cross-reference><highlight><italic>a. </italic></highlight>When such a device is located, the code reader, via the docking access server <highlight><bold>4949</bold></highlight>, performs a batch forwarding of the stored image data for eventual decoding by one of the access devices <highlight><bold>4937</bold></highlight>-<highlight><bold>4943</bold></highlight> or by a host computer <highlight><bold>4947</bold></highlight> or another device in the premises LAN (i.e., whichever is the first device located that has the decoding capability). </paragraph>
<paragraph id="P-0535" lvl="0"><number>&lsqb;0535&rsqb;</number> In the embodiments of <cross-reference target="DRAWINGS">FIGS. 49</cross-reference><highlight><italic>b </italic></highlight>or <highlight><bold>49</bold></highlight><highlight><italic>c </italic></highlight>wherein a number of codes are read and the captured image data is stored within the code reader for batch transmission at a later time, it may be desirable to configure the network such that decoding is performed first within the code reader. Specifically, when a user successively reads a plurality of codes, a user can ensure that each reading operation is successful or valid when the decoding is done immediately within the reader and the user is provided some sort of good read acknowledgment by the reader. On the other hand, if the image data is simply stored for later decoding by an off-site device, the user cannot be sure that each reading operation resulted in a valid read. Such a situation may not be a problem, however, if the code and reader are highly reliable or if simple information, such as a signature, is being read which may not require a validity determination. </paragraph>
<paragraph id="P-0536" lvl="0"><number>&lsqb;0536&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 50</cross-reference> is a schematic diagram similar to that shown in <cross-reference target="DRAWINGS">FIG. 48</cross-reference> which illustrates the circuit layout used in an access server of <cross-reference target="DRAWINGS">FIG. 49</cross-reference> to process the 2-D code information. Specifically, in an access point <highlight><bold>5001</bold></highlight>, a processing circuitry <highlight><bold>5003</bold></highlight> manages 2-D code processing functionality as indicated by a block <highlight><bold>5005</bold></highlight>. Although migration processing functionality is also present, in some embodiments such as those which use a single access server, the migration processing need not be present. </paragraph>
<paragraph id="P-0537" lvl="0"><number>&lsqb;0537&rsqb;</number> In a memory <highlight><bold>5007</bold></highlight>, the access point <highlight><bold>5001</bold></highlight> also stores a database of known 2-D images in an image database <highlight><bold>5009</bold></highlight>. To further support 2-D code processing, digital signal processing circuitry <highlight><bold>5011</bold></highlight> has been added. </paragraph>
<paragraph id="P-0538" lvl="0"><number>&lsqb;0538&rsqb;</number> As configured, the signal processing circuitry <highlight><bold>5011</bold></highlight> assists the exact decoding of 2-D images, and may also be used in the image comparison process of received 2-D images with the database <highlight><bold>5009</bold></highlight> of stored images. </paragraph>
<paragraph id="P-0539" lvl="0"><number>&lsqb;0539&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 51</cross-reference><highlight><italic>a</italic></highlight>-<highlight><italic>b </italic></highlight>are flow diagrams illustrating the operation of the 2-D code processing access servers of FIGS. <highlight><bold>49</bold></highlight>-<highlight><bold>50</bold></highlight>. In <cross-reference target="DRAWINGS">FIG. 51</cross-reference><highlight><italic>a, </italic></highlight>when the access server receives image data via its LAN transceiver, it first attempts at a block <highlight><bold>5101</bold></highlight> to exactly identify the code information from the received code image data. Specifically, the access server uses its code processing circuitry to perform an analysis of the received image data using a decoding algorithm specifically designed for decoding the type of code which was read. A number of 2-D code types exist, including, for example PDF-417, Maxicode, etc., which have specific corresponding decoding algorithms or rules. </paragraph>
<paragraph id="P-0540" lvl="0"><number>&lsqb;0540&rsqb;</number> After its analysis is complete, the access server next determines whether the exact identification was successful at a block <highlight><bold>5103</bold></highlight>. Determining whether an identification was successful often depends on the type of code used. If enough redundancy is built into the code, then the loss of a number of bits of data resulting, for example, from a partially blurred image may not be fatal to a successful exact identification. If, on the other hand, the type of 2-D code being read is less &ldquo;tolerant,&rdquo; then even the loss of a single bit might result in a failed exact identification. </paragraph>
<paragraph id="P-0541" lvl="0"><number>&lsqb;0541&rsqb;</number> In any event, if the exact identification is successful, at a block <highlight><bold>5105</bold></highlight>, the access server sends the identified code information to a predetermined destination for further processing, and acknowledges the successful identification. If the exact identification is not successful, however, the access point performs a further analysis of the image data to attempt to identify the corresponding code information. </paragraph>
<paragraph id="P-0542" lvl="0"><number>&lsqb;0542&rsqb;</number> At blocks <highlight><bold>5107</bold></highlight> and <highlight><bold>5109</bold></highlight>, the access server compares the received image to stored images located in its image database and attempts to locate the closest or best match. Although grey scale considerations and image-shifting correlation techniques are contemplated, in a relatively simple embodiment, such a comparison involves a process of scaling the received image to correspond to the stored images, then performing an &ldquo;exclusive OR&rdquo; of the received image with the stored images. More exact matches will yield an overall sum value nearer to zero. </paragraph>
<paragraph id="P-0543" lvl="0"><number>&lsqb;0543&rsqb;</number> After the access point completes its comparison and has identified the closest or best match between the received image data and the stored images, the access point then determines at a block <highlight><bold>5111</bold></highlight> if the overall value resulting from the best match comparison is above a predetermined accuracy threshold. Such an accuracy threshold may vary depending on, again, the type of code that was read, and the level of importance associated with a good read. If the overall value is below the predetermined threshold, the access server, as above, sends the identified code information (corresponding to the best match stored image) at a block <highlight><bold>5105</bold></highlight> to a predetermined destination for further processing, and acknowledges the successful decode. </paragraph>
<paragraph id="P-0544" lvl="0"><number>&lsqb;0544&rsqb;</number> If the overall value of the best match comparison is above the predetermined threshold, then, at a block <highlight><bold>5113</bold></highlight>, the access server forwards a bad read or retry message to the code reader to indicate to the user to reread the code. </paragraph>
<paragraph id="P-0545" lvl="0"><number>&lsqb;0545&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 51</cross-reference><highlight><italic>b </italic></highlight>is similar to <cross-reference target="DRAWINGS">FIG. 51</cross-reference><highlight><italic>a </italic></highlight>except that the comparison of the received image with stored images is performed before any exact identification is attempted. Specifically, the access server first compares the received image to the stored images at a block <highlight><bold>5115</bold></highlight>, identifies the closest match at a block <highlight><bold>5117</bold></highlight>, and determines whether the overall value of the comparison is above a predetermined accuracy threshold at a block <highlight><bold>5119</bold></highlight>. If the overall value is below the threshold, the code information relating to the best match stored image is simply forwarded at a block <highlight><bold>5121</bold></highlight> to a predetermined destination for further processing. </paragraph>
<paragraph id="P-0546" lvl="0"><number>&lsqb;0546&rsqb;</number> If the overall value is below the threshold, then the access server attempts the exact identification and determines success at blocks <highlight><bold>5123</bold></highlight> and <highlight><bold>5125</bold></highlight>. If such exact identification is successful, then the access device forwards the code information at block <highlight><bold>5121</bold></highlight>. If it is not successful, the access device forwards a retry message to the code reader at block <highlight><bold>5127</bold></highlight>. </paragraph>
<paragraph id="P-0547" lvl="0"><number>&lsqb;0547&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 52</cross-reference> illustrates the structuring of 2-D code information so as to support a hierarchical recognition strategy as used by the access server of FIGS. <highlight><bold>49</bold></highlight>-<highlight><bold>50</bold></highlight>. In the image database of an access server, each known image is stored and hierarchically organized in sections. Each section of image contains information relating to a specific category of information. For example, as shown, images may include a main category followed by further and further subcategories. Thus, the image database stores all of the images in the main or first category at a top level in the hierarchy. Under each main category image, the image database stores only those subcategory images which coexist with the main category image on known complete 2-D code images. Similarly, under each subcategory image, the image database only stores sub-sub-category images which coexist with the main category image and the subcategory image. </paragraph>
<paragraph id="P-0548" lvl="0"><number>&lsqb;0548&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 53</cross-reference> is a diagram illustrating an exemplary 2-D code <highlight><bold>5301</bold></highlight> wherein the hierarchical structure of <cross-reference target="DRAWINGS">FIG. 52</cross-reference> is implemented. From left to right, top to bottom, the illustrated 2-D code provides image portions of categories separated by five bit line borders, such as a border <highlight><bold>5303</bold></highlight>. As shown, the main category image represents &ldquo;grocery&rdquo;. The subcategory represents &ldquo;beans&rdquo;, and so on for the further subcategories. </paragraph>
<paragraph id="P-0549" lvl="0"><number>&lsqb;0549&rsqb;</number> Using such a hierarchical categorization, the access server can more rapidly perform the process of image comparisons. For example, at a main category level in the hierarchy, a grocery image, an office supply image and general merchandize image might be the only three types of main category images known to the access point. If after comparing the received and the stored main categorization images, no acceptable match is found, the attempted comparison ends without ever having to compare the remainder of the potentially thousands of remaining images stored in the image database. Similarly, if a main level match is found with the stored office supply image, no comparison need be made with the plethora of remaining images under the grocery image main category. </paragraph>
<paragraph id="P-0550" lvl="0"><number>&lsqb;0550&rsqb;</number> Further detail of the efficiency of such a hierarchical organization can be found below in reference to <cross-reference target="DRAWINGS">FIG. 54</cross-reference>. In addition, although the 2-D code illustrated in <cross-reference target="DRAWINGS">FIG. 53</cross-reference> is not necessarily a current 2-D code standard, the principle of hierarchical organization can be utilized in current 2-D code standards to take advantage of the image comparison efficiencies involved. </paragraph>
<paragraph id="P-0551" lvl="0"><number>&lsqb;0551&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 54</cross-reference> is a flow diagram illustrating the functionality of the access server of FIGS. <highlight><bold>49</bold></highlight>-<highlight><bold>50</bold></highlight> in carrying out the hierarchical recognition strategy of <cross-reference target="DRAWINGS">FIGS. 52 and 53</cross-reference>. The access server begins the hierarchical image comparison process, and, at a block <highlight><bold>5401</bold></highlight>, extracts from the received 2-D image a first subcategory image portion, i.e., the main category image indicating &ldquo;grocery&rdquo; for example. At a block <highlight><bold>5403</bold></highlight>, the access server compares the extracted image with each of the main category images stored in the image database. If the closest comparison fails to fall within an accuracy threshold at a block <highlight><bold>5405</bold></highlight>, the access server indicates that the comparison has failed at a block <highlight><bold>5407</bold></highlight>, and ends the process. </paragraph>
<paragraph id="P-0552" lvl="0"><number>&lsqb;0552&rsqb;</number> Otherwise, if the comparison is within the accuracy threshold at the block <highlight><bold>5405</bold></highlight>, the comparison process continues with the access server checking to see if there are any further subcategories at a block <highlight><bold>5409</bold></highlight>. Because other subcategories exist, the access point branches to repeat the process beginning at the block <highlight><bold>5401</bold></highlight>. This time, the access server extracts from the received image the image portion relating to the first subcategory (beans) for comparison at the block <highlight><bold>5403</bold></highlight> with only those first known subcategory images having &ldquo;grocery&rdquo; as the main category. </paragraph>
<paragraph id="P-0553" lvl="0"><number>&lsqb;0553&rsqb;</number> Again if no match within the threshold is found, the access point vectors to indicate failure at the block <highlight><bold>5407</bold></highlight>, and terminates the process. However, if a subcategory match is found, the access point branches to handle the sub-sub-category in a similar way. If, at the block <highlight><bold>5409</bold></highlight> after successfully repeating the comparison a number of times, the access point concludes that there are no further subcategories to compare, the access point delivers the 2-D code information stored in the image database and associated with the matching stored image, and successfully ends the code identification process. </paragraph>
<paragraph id="P-0554" lvl="0"><number>&lsqb;0554&rsqb;</number> The known image database is supplemented by exact decoding as illustrated for example in <cross-reference target="DRAWINGS">FIG. 51</cross-reference><highlight><italic>b, </italic></highlight>wherein any successful exact decode is used to provide both categorized image and information portions for subsequent decoding through comparison. In addition, although the hierarchical structuring described herein offers many advantages, it need not be implemented to carry out the comparison process. </paragraph>
<paragraph id="P-0555" lvl="0"><number>&lsqb;0555&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a </italic></highlight>is a diagram illustrating the overall flow of both data and voice through another embodiment of the hierarchical communication network of the present invention. Specifically, a premises network associated with a premises <highlight><bold>5501</bold></highlight> comprises a hardwired backbone LAN <highlight><bold>5503</bold></highlight> and a wireless network of access devices <highlight><bold>5505</bold></highlight>, <highlight><bold>5507</bold></highlight>, <highlight><bold>5509</bold></highlight>, <highlight><bold>5511</bold></highlight> and <highlight><bold>5513</bold></highlight>. While the backbone LAN <highlight><bold>5503</bold></highlight> preferably comprises a coaxial or twisted-pair ethernet link, it may alternately constitute, for example, a token ring, fiber optic, infrared, serial or parallel link. </paragraph>
<paragraph id="P-0556" lvl="0"><number>&lsqb;0556&rsqb;</number> A variety of network devices also participate in the premises network. Computers <highlight><bold>5515</bold></highlight> and <highlight><bold>5517</bold></highlight>, the access device <highlight><bold>5505</bold></highlight> and a telephone access device <highlight><bold>5519</bold></highlight> directly participate in the backbone LAN <highlight><bold>5503</bold></highlight>. Mobile terminals <highlight><bold>5521</bold></highlight>, <highlight><bold>5522</bold></highlight> and <highlight><bold>5523</bold></highlight> and stationary phone <highlight><bold>5525</bold></highlight> also participate wirelessly via any of the access devices <highlight><bold>5505</bold></highlight>, <highlight><bold>5509</bold></highlight>, <highlight><bold>5507</bold></highlight>, <highlight><bold>5511</bold></highlight> and <highlight><bold>5513</bold></highlight> which happen to be within range. A wireless phone <highlight><bold>5527</bold></highlight> is configured to communicate with an independent radio channel associated with the access device <highlight><bold>5507</bold></highlight>. The access device <highlight><bold>5507</bold></highlight> is configured with a second radio transceiver for that purpose. Stationary phones <highlight><bold>5529</bold></highlight>, <highlight><bold>5530</bold></highlight>, <highlight><bold>5531</bold></highlight> and <highlight><bold>5533</bold></highlight> indirectly participate in the premises network via hardwired links to the telephone access device <highlight><bold>5519</bold></highlight>, the computers <highlight><bold>5515</bold></highlight> and <highlight><bold>5517</bold></highlight> and the access device <highlight><bold>5511</bold></highlight>, respectively. </paragraph>
<paragraph id="P-0557" lvl="0"><number>&lsqb;0557&rsqb;</number> Supporting both voice and data transport, telephone lines <highlight><bold>5535</bold></highlight>, <highlight><bold>5536</bold></highlight>, <highlight><bold>5537</bold></highlight>, <highlight><bold>5539</bold></highlight> and <highlight><bold>5541</bold></highlight> provide dedicated communication links to conventional telephone switching networks for delivering voice or data to devices inside and outside of the premises <highlight><bold>5501</bold></highlight>. </paragraph>
<paragraph id="P-0558" lvl="0"><number>&lsqb;0558&rsqb;</number> Associated with a vehicle <highlight><bold>5557</bold></highlight>, a vehicular network <highlight><bold>5551</bold></highlight> comprises an access device <highlight><bold>5553</bold></highlight> and mobile terminals <highlight><bold>5555</bold></highlight> and <highlight><bold>5559</bold></highlight>. Although not shown, other vehicular network devices such as printers, plotters, fax machines, etc., may also be located within the vehicle <highlight><bold>5557</bold></highlight>. Such other devices participate directly or indirectly on the vehicular network <highlight><bold>5551</bold></highlight> via wireless or hardwired interconnection. </paragraph>
<paragraph id="P-0559" lvl="0"><number>&lsqb;0559&rsqb;</number> Devices within the vehicular network <highlight><bold>5551</bold></highlight> can communicate via a WAN having selective operation between the access device <highlight><bold>5553</bold></highlight> and the access device <highlight><bold>5513</bold></highlight>. To support the WAN, both of the access devices <highlight><bold>5553</bold></highlight> and <highlight><bold>5513</bold></highlight> are configured with a higher power transceiver dedicated to WAN communications. In addition, communication between the vehicular and premises networks also occurs when the vehicle <highlight><bold>5557</bold></highlight> drives within range of the premises network. At that point, the vehicular network effectively merges with the premises network for free communication flow between the two networks. Thus, the devices within the vehicular and premises network store non-critical messages and information destined for devices within the other network until they are in range and merged. Critical messages and information may be immediately communicated via the relatively higher cost WAN. </paragraph>
<paragraph id="P-0560" lvl="0"><number>&lsqb;0560&rsqb;</number> Similarly, at a remote site <highlight><bold>5561</bold></highlight> located some distance away from the premises <highlight><bold>5501</bold></highlight>, a stationary phone <highlight><bold>5563</bold></highlight> may communicate via a telephone line <highlight><bold>5565</bold></highlight> (and associated telephone switching network) to the various network devices participating in the premises or vehicular networks. </paragraph>
<paragraph id="P-0561" lvl="0"><number>&lsqb;0561&rsqb;</number> At a remote site <highlight><bold>5571</bold></highlight>, a wired and wireless network also exists. An access device <highlight><bold>5573</bold></highlight> participates in a wireless network and in a hardwired backbone LAN <highlight><bold>5575</bold></highlight>. A telephone access device <highlight><bold>5577</bold></highlight> participates on the backbone LAN <highlight><bold>5575</bold></highlight>, providing access to and from a telephone line <highlight><bold>5579</bold></highlight>. A mobile terminal <highlight><bold>5581</bold></highlight> participates in wireless communication with the access device <highlight><bold>5573</bold></highlight>. Thus, through the telephone line <highlight><bold>5579</bold></highlight> and the associated telephone switching network (not shown), the network at the remote site <highlight><bold>5571</bold></highlight> can be communicatively coupled to the overall network at the premises <highlight><bold>5501</bold></highlight>. </paragraph>
<paragraph id="P-0562" lvl="0"><number>&lsqb;0562&rsqb;</number> Data flows through the illustrated communication system in the same manner as described above in reference to FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>54</bold></highlight>. To summarize, data is segmented into packets (herein &ldquo;data packets&rdquo;) which are routed per spanning tree table specification through the wireless network and backbone LAN <highlight><bold>5503</bold></highlight>. Data is also routed as need be through a conventional telephone switching network (not shown) via the telephone lines <highlight><bold>5535</bold></highlight>, <highlight><bold>5536</bold></highlight>, <highlight><bold>5537</bold></highlight>, <highlight><bold>5539</bold></highlight>, <highlight><bold>5541</bold></highlight> and <highlight><bold>5579</bold></highlight>. Data routed through the telephone switching network takes the form of a serial data stream using commonly known hardwired modem technology. </paragraph>
<paragraph id="P-0563" lvl="0"><number>&lsqb;0563&rsqb;</number> Voice signals are similarly routed. Voice or other audio signals (herein &ldquo;voice signals&rdquo;) traveling through the wireless pathways of the premises network typically flow in a digital, packetized form (herein &ldquo;voice packets&rdquo;). However, voice signals in an analog form may also be modulated and transmitted in a non-packetized form such as with communication between the wireless phone <highlight><bold>5527</bold></highlight> and the access device <highlight><bold>5507</bold></highlight>. Voice signals travel through the wired backbone LAN <highlight><bold>5503</bold></highlight> are also packetized, i.e., they travel in voice packets. </paragraph>
<paragraph id="P-0564" lvl="0"><number>&lsqb;0564&rsqb;</number> Voice signals traveling through the telephone switching network (not shown) may either remain in a continuous, non-packetized form (herein a &ldquo;voice stream&rdquo;) as captured, for example, by a microphone, or be routed as voice packets using known modem technology. The option used here is dependent on the form of the voice signals upon entering the telephone switching network, and the desired form of the voice signals upon exiting the telephone switching network. For example, voice signals flowing between the telephones <highlight><bold>5531</bold></highlight> and <highlight><bold>5563</bold></highlight> take the form of a voice stream, because both of the telephones <highlight><bold>5531</bold></highlight> and <highlight><bold>5563</bold></highlight> capture voice in and attempt to reproduce voice from a voice stream form. </paragraph>
<paragraph id="P-0565" lvl="0"><number>&lsqb;0565&rsqb;</number> Alternately, for example, voice signals flowing between the mobile terminals <highlight><bold>5521</bold></highlight> and <highlight><bold>5581</bold></highlight> (between premises) take the form of voice packets while traveling through the telephone switching network via the telephone lines <highlight><bold>5579</bold></highlight> and <highlight><bold>5539</bold></highlight>. Although a voice stream might be used, it is not preferred in this configuration because the mobile terminals <highlight><bold>5581</bold></highlight> and <highlight><bold>5521</bold></highlight> both communicate voice signals in a voice packet form. Converting between forms (and back again) along this pathway offers little value. </paragraph>
<paragraph id="P-0566" lvl="0"><number>&lsqb;0566&rsqb;</number> Conversion between forms along a communication path between, for example, the mobile terminal <highlight><bold>5523</bold></highlight> and the telephone <highlight><bold>5563</bold></highlight> does take place, however. Specifically, the mobile terminal <highlight><bold>5523</bold></highlight> transmits a call route request packet which includes the identity of the destination device, the telephone <highlight><bold>5563</bold></highlight>. Upon receiving the route request packet, the access device, consulting its routing table, concludes that it does not have a telephone line pathway (or any other pathway) to the telephone <highlight><bold>5563</bold></highlight>. Thus, the access device <highlight><bold>5513</bold></highlight> sends the request toward the root access device <highlight><bold>5505</bold></highlight>, i.e., to the access device <highlight><bold>5509</bold></highlight>. Upon receipt, the access device <highlight><bold>5509</bold></highlight> consults its routing table, discovers that it has access to the telephone line <highlight><bold>5541</bold></highlight> and records the availability of the telephone line <highlight><bold>5541</bold></highlight> in the route request packet. Thereafter, the access device <highlight><bold>5509</bold></highlight> transmits the route request packet toward (and to) the root access device <highlight><bold>5505</bold></highlight>. Upon receiving the packet, the root device <highlight><bold>5505</bold></highlight> consults its routing table yet identifies no lower cost telephone line access than that provided by the access device <highlight><bold>5509</bold></highlight> as was previously recorded in the route request packet. Therefore, the root access device <highlight><bold>5505</bold></highlight> converts the route request packet into a reply packet and forwards it back to the terminal <highlight><bold>5523</bold></highlight> via the access devices <highlight><bold>5509</bold></highlight> and <highlight><bold>5513</bold></highlight>. </paragraph>
<paragraph id="P-0567" lvl="0"><number>&lsqb;0567&rsqb;</number> Upon receipt of the reply packet, the terminal <highlight><bold>5523</bold></highlight> offers to the user and/or software of the terminal <highlight><bold>5523</bold></highlight> the telephone line routing pathways (in this case only one) identified in the reply packet. Upon selecting the offered pathway, the terminal <highlight><bold>5523</bold></highlight> sends a call setup packet to the access device <highlight><bold>5513</bold></highlight> which forwards the setup packet to the access device <highlight><bold>5509</bold></highlight>. Upon receipt, the access device <highlight><bold>5509</bold></highlight> must determine from the setup packet whether the destination of the call expects a voice stream or voice packet transfer. If the setup packet indicates a destination identifier which is not the telephone number being dialed, the access device <highlight><bold>5509</bold></highlight> will use voice packet transfer. Alternatively, which is the case in this example, the setup packet indicates that the destination identifier is the telephone number being dialed, and the access device <highlight><bold>5509</bold></highlight> concludes that it must send a voice stream. </paragraph>
<paragraph id="P-0568" lvl="0"><number>&lsqb;0568&rsqb;</number> Thereafter, the access device <highlight><bold>5509</bold></highlight> interfaces between the mobile terminal <highlight><bold>5523</bold></highlight> and the telephone <highlight><bold>5563</bold></highlight>. Particularly, the access device <highlight><bold>5509</bold></highlight> dials the telephone number of the telephone <highlight><bold>5563</bold></highlight>. If a busy signal is detected, the access device <highlight><bold>5509</bold></highlight> hangs up, and delivers a busy message to the mobile terminal <highlight><bold>5523</bold></highlight> via the access device <highlight><bold>5513</bold></highlight>. If a ringing signal is detected, the access device <highlight><bold>5509</bold></highlight> sends a ringing message to the mobile terminal via the access device <highlight><bold>5513</bold></highlight>. Upon detecting a pickup, the access device <highlight><bold>5509</bold></highlight> delivers a connect message to the mobile terminal <highlight><bold>5523</bold></highlight>. The mobile terminal <highlight><bold>5523</bold></highlight> may then begin sending voice packets to the access device <highlight><bold>5509</bold></highlight>. Similarly, a voice stream from the telephone <highlight><bold>5563</bold></highlight> arrives at the access device <highlight><bold>5509</bold></highlight>. </paragraph>
<paragraph id="P-0569" lvl="0"><number>&lsqb;0569&rsqb;</number> In addition to providing call setup assistance, the access device <highlight><bold>5509</bold></highlight> also assists in conversion between voice stream and voice packet forms. Specifically, the access device queues up the voice packets received from the mobile terminal <highlight><bold>5523</bold></highlight> then begins converting them through a digital to analog conversion process into a voice stream form which it delivers to the telephone <highlight><bold>5563</bold></highlight>. Upon receiving the voice stream, the telephone <highlight><bold>5563</bold></highlight> reproduces the voice which originated from mobile terminal <highlight><bold>5581</bold></highlight>. </paragraph>
<paragraph id="P-0570" lvl="0"><number>&lsqb;0570&rsqb;</number> The access device <highlight><bold>5509</bold></highlight> also receives the voice stream from the telephone <highlight><bold>5563</bold></highlight> and begins converting it through an analog to digital conversion process into a sequence of voice packets. As the voice packets are generated, they are routed toward the mobile terminal <highlight><bold>5523</bold></highlight>. Upon receipt of the voice packets, the mobile terminal <highlight><bold>5523</bold></highlight> queues up the packets then performs a digital to analog conversion process to generate a voice stream. The mobile terminal uses the generated voice stream to reproduce (via a speaker) the voice which originated at the telephone <highlight><bold>5525</bold></highlight>. Further detail regarding this process can be found below. </paragraph>
<paragraph id="P-0571" lvl="0"><number>&lsqb;0571&rsqb;</number> In the exemplary illustration of <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a, </italic></highlight>the circuitry for converting voice signals between the voice stream and voice packet forms, hereinafter &ldquo;conversion circuitry&rdquo;, can be found in the telephone access devices <highlight><bold>5519</bold></highlight> and <highlight><bold>5577</bold></highlight>, mobile terminals <highlight><bold>5521</bold></highlight>, <highlight><bold>5523</bold></highlight>, <highlight><bold>5555</bold></highlight> and <highlight><bold>5581</bold></highlight>, computer <highlight><bold>5517</bold></highlight>, telephone <highlight><bold>5525</bold></highlight> and access devices <highlight><bold>5507</bold></highlight>, <highlight><bold>5509</bold></highlight>, <highlight><bold>5511</bold></highlight> and <highlight><bold>5553</bold></highlight>. Similarly, the circuitry for handling basic call setup and processing, hereinafter &ldquo;call processing circuitry&rdquo;, can be found in the access devices <highlight><bold>5507</bold></highlight> and <highlight><bold>5509</bold></highlight> and the telephone access devices <highlight><bold>5519</bold></highlight> and <highlight><bold>5577</bold></highlight>. </paragraph>
<paragraph id="P-0572" lvl="0"><number>&lsqb;0572&rsqb;</number> Because they are not configured with conversion circuitry, the mobile terminals <highlight><bold>5522</bold></highlight> and <highlight><bold>5559</bold></highlight> communicate in a manner similar to the wireless phone <highlight><bold>5527</bold></highlight>, i.e., they communicate voice signals in a voice stream form (e.g., through microphone pickup, amplification, modulation and transmission without packetization) on a communication channel preferably independent of colocated packet-based communication channels. Thus, the access devices <highlight><bold>5507</bold></highlight>, <highlight><bold>5511</bold></highlight> and <highlight><bold>5553</bold></highlight> are configured to not only participate on the packetized communication channel(s), but also to participate in voice stream exchanges with the mobile phone <highlight><bold>5527</bold></highlight>, mobile terminals <highlight><bold>5522</bold></highlight> and <highlight><bold>5559</bold></highlight>, respectively. </paragraph>
<paragraph id="P-0573" lvl="0"><number>&lsqb;0573&rsqb;</number> For example, voice communication with the mobile terminal <highlight><bold>5559</bold></highlight> typically requires assistance from the access device <highlight><bold>5553</bold></highlight>. Such assistance involves packetizing voice streams received from the mobile terminal <highlight><bold>5559</bold></highlight>, and converting voice packets to voice streams for delivery to the terminal <highlight><bold>5559</bold></highlight>. Generally, the access device <highlight><bold>5553</bold></highlight> does not have to invoke its conversion circuitry when communicating voice to and from the terminal <highlight><bold>5555</bold></highlight> (unless, for example, the voice session involves communication between the mobile terminals <highlight><bold>5555</bold></highlight> and <highlight><bold>5559</bold></highlight>). </paragraph>
<paragraph id="P-0574" lvl="0"><number>&lsqb;0574&rsqb;</number> Moreover, although the telephone switching network might change the form of the voice stream, such as through time multiplexing, modulation multiplexing or packetization, for example, such changes are transparent to the illustrated network and are ignored herein. Thus, whether such changes occur or not, a voice stream flowing through a telephone switching network is still referred to herein as a voice stream. </paragraph>
<paragraph id="P-0575" lvl="0"><number>&lsqb;0575&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>b </italic></highlight>is a diagram which illustrates a summary of the various types of communication pathways that may be used for setting up voice sessions between a source and destination network device. For example, nearly all of the pathways shown in <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a </italic></highlight>can be summarized with reference to <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>b. </italic></highlight></paragraph>
<paragraph id="P-0576" lvl="0"><number>&lsqb;0576&rsqb;</number> Network devices, such as mobile terminals or telephones, are typically capable of operating as a source device (a call origination point) or a destination device (a call destination point). Thus, as illustrated, the &ldquo;source&rdquo; and &ldquo;destination&rdquo; designations merely identify which of the network devices originates the call and which device receives the call. </paragraph>
<paragraph id="P-0577" lvl="0"><number>&lsqb;0577&rsqb;</number> A source device <highlight><bold>5583</bold></highlight> may establish a voice session with a destination device <highlight><bold>5585</bold></highlight> via a variety of types of pathways should such pathways be available. However, many of the types of pathways require the assistance of conversion circuitry when conversion between voice packets and voice streams is required. Many types of pathways also require call processing circuitry for interfacing with telephone switching networks. </paragraph>
<paragraph id="P-0578" lvl="0"><number>&lsqb;0578&rsqb;</number> For example, a network device which only captures and transceives voice streams (such as a conventional telephone) can communicate with any other such device without assistance so long as the pathway between the two provides voice stream transport, and the two devices have access to a protocol for establishing the voice session. Such is the case when the source and destination devices <highlight><bold>5583</bold></highlight> and <highlight><bold>5585</bold></highlight> are both conventional telephones that use the telephone switching network <highlight><bold>5596</bold></highlight> for call setup and voice stream routing. </paragraph>
<paragraph id="P-0579" lvl="0"><number>&lsqb;0579&rsqb;</number> However, should the pathway between the two telephones comprise a hardwired connection <highlight><bold>5598</bold></highlight>, the telephones require assistance in, at a minimum, setting up the call. Such setup consists of simulating a connection with the telephone switching network by providing dial tones, busy signals, ring signals, etc., to each telephone. While the voice session is in progress, no assistance is needed and the telephones exchange voice streams over the hardwired link <highlight><bold>5598</bold></highlight>. </paragraph>
<paragraph id="P-0580" lvl="0"><number>&lsqb;0580&rsqb;</number> Depending on the nature of the hardwired link <highlight><bold>5598</bold></highlight>, however, such assistance may not be sufficient if the hardwired link <highlight><bold>5598</bold></highlight> also operates pursuant to another protocol, such as a packet-based TCP/IP, for example, which may or may not require the sharing of the hardwired link <highlight><bold>5598</bold></highlight> with other network devices. If such is the case, assistance to the two telephones also involves capturing full use of the hardwired link <highlight><bold>5598</bold></highlight> (through a request for a full bandwidth voice session), or adapting the voice stream into a form which may be transferred over the hardwired link <highlight><bold>5598</bold></highlight>. </paragraph>
<paragraph id="P-0581" lvl="0"><number>&lsqb;0581&rsqb;</number> Any level of assistance needed by the source and destination devices <highlight><bold>5583</bold></highlight> and <highlight><bold>5885</bold></highlight> is provided by corresponding assisting access devices <highlight><bold>5587</bold></highlight> and <highlight><bold>5589</bold></highlight>. For example, if the source device <highlight><bold>5583</bold></highlight> is a conventional device such as a typical telephone, it requires the assistance of an access device <highlight><bold>5587</bold></highlight> to establish a voice session via a packet-based wireless link (or network) <highlight><bold>5597</bold></highlight>. Such assistance involves both the use of conversion circuitry in the access device for adapting to the packet-based requirements of the wireless link <highlight><bold>5597</bold></highlight>, and use of call processing circuitry to establish the call through the wireless link <highlight><bold>5597</bold></highlight>. If, however, the source device <highlight><bold>5583</bold></highlight> is configured with conversion and call processing circuitry, the assisting access device <highlight><bold>5587</bold></highlight> would not be needed. Similarly, if the destination device has conversion circuitry, the assisting access device <highlight><bold>5589</bold></highlight> is also not needed. </paragraph>
<paragraph id="P-0582" lvl="0"><number>&lsqb;0582&rsqb;</number> The dashed line borders surrounding the assisting access devices <highlight><bold>5587</bold></highlight> and <highlight><bold>5589</bold></highlight> are representative of the fact that they may or may not be needed depending on the nature of the pathway and the nature of the source and destination devices <highlight><bold>5583</bold></highlight> and <highlight><bold>5585</bold></highlight>. </paragraph>
<paragraph id="P-0583" lvl="0"><number>&lsqb;0583&rsqb;</number> If assistance is required, the pathway for communicating between the source device <highlight><bold>5583</bold></highlight> and its assisting access device <highlight><bold>5587</bold></highlight> may involve: 1) a telephone switching network <highlight><bold>5590</bold></highlight>; 2) a hardwired link <highlight><bold>5591</bold></highlight>, such as an ethernet LAN, RS232, or telephone wire connection; or 3) a wireless link <highlight><bold>5592</bold></highlight>, involving, for example, cellular phone transmissions or shorter range, relayed or point to point voice stream transmissions such as may be found in typical wireless phone transmissions to its base unit. </paragraph>
<paragraph id="P-0584" lvl="0"><number>&lsqb;0584&rsqb;</number> In addition, the assisting access device <highlight><bold>5587</bold></highlight> may assist in basic voice session setup and control. For example, to establish a voice session, the assisting access device <highlight><bold>5587</bold></highlight> may simulate a typical telephone switching system by delivering dial tones, performing touch tone detection and delivering destination ringing and busy signal indications to the source device <highlight><bold>5583</bold></highlight>. Moreover, if necessary, the assisting access device <highlight><bold>5587</bold></highlight> will adapt the analog audio/voice signals captured by the source device <highlight><bold>5583</bold></highlight> (i.e., the voice stream) for transport toward the destination device <highlight><bold>5585</bold></highlight>, and adapt received voice information for transport to the source device <highlight><bold>5583</bold></highlight> for playback. </paragraph>
<paragraph id="P-0585" lvl="0"><number>&lsqb;0585&rsqb;</number> No assisting access device <highlight><bold>5587</bold></highlight> is needed, for example, where the source device <highlight><bold>5583</bold></highlight> has been configured to: 1) capture and adapt a voice stream into a packet-based form (via conversion circuitry) for transport to the destination device <highlight><bold>5585</bold></highlight>; 2) adapt incoming voice packets from the destination device <highlight><bold>5585</bold></highlight> into a voice stream form (via conversion circuitry) for playback; and 3) generate and respond to call setup and session processing control. </paragraph>
<paragraph id="P-0586" lvl="0"><number>&lsqb;0586&rsqb;</number> Similarly, if the assisting access device <highlight><bold>5589</bold></highlight> is required, the pathway for communicating between the destination device <highlight><bold>5587</bold></highlight> and the assisting access device <highlight><bold>5589</bold></highlight> may involve: 1) a telephone switching network <highlight><bold>5593</bold></highlight>; 2) a hardwired link <highlight><bold>5594</bold></highlight>; or 3) a wireless link <highlight><bold>5592</bold></highlight>. The assisting access device <highlight><bold>5589</bold></highlight> may also assist in basic voice session setup and control by, for example, simulating a typical telephone switching system. </paragraph>
<paragraph id="P-0587" lvl="0"><number>&lsqb;0587&rsqb;</number> If necessary, the assisting access device <highlight><bold>5589</bold></highlight> will also adapt voice streams for packetized transport toward the source device <highlight><bold>5583</bold></highlight>, and adapt voice packets received for transport to the destination device <highlight><bold>5585</bold></highlight> for playback. No assisting access device <highlight><bold>5589</bold></highlight> is needed, for example, where the destination device <highlight><bold>5583</bold></highlight> has been configured to perform the assisting functionality. </paragraph>
<paragraph id="P-0588" lvl="0"><number>&lsqb;0588&rsqb;</number> No assisting access device <highlight><bold>5589</bold></highlight> is needed, for example, where the destination device <highlight><bold>5585</bold></highlight> has been configured to: 1) adapt captured audio/voice signals for packet-based transport via the communication network toward the source device <highlight><bold>5583</bold></highlight>; 2) adapt incoming audio/voice packets into an analog form for playback; and 3) generate and respond to call setup and processing control packets. </paragraph>
<paragraph id="P-0589" lvl="0"><number>&lsqb;0589&rsqb;</number> The source device <highlight><bold>5583</bold></highlight>, with or without assistance from the assisting access device <highlight><bold>5587</bold></highlight>, may establish a voice session with the data device <highlight><bold>5585</bold></highlight> (itself with or without assistance from the assisting access device <highlight><bold>5589</bold></highlight>) through a variety of pathways. For example, the session may be established directly through a telephone line link to the telephone switching network <highlight><bold>5596</bold></highlight>. The session may also be established through a wireless link <highlight><bold>5597</bold></highlight> or hardwired link <highlight><bold>5598</bold></highlight>. Otherwise, the voice session pathway may require routing assistance via one or more &ldquo;non-assisting&rdquo; access devices <highlight><bold>5599</bold></highlight>. For example, as illustrated in <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a, </italic></highlight>the non-assisting access devices are arranged in spanning tree configurations to route voice session packets back and forth between source and destination devices (via assisting access devices where necessary). </paragraph>
<paragraph id="P-0590" lvl="0"><number>&lsqb;0590&rsqb;</number> Links between the source device <highlight><bold>5583</bold></highlight> (via the assisting access device when needed) and the one or more non-assisting access devices <highlight><bold>5599</bold></highlight> may consist of a hardwired, telephone switching network or wireless link as illustrated. Similarly, links between the one or more non-assisting access devices <highlight><bold>5599</bold></highlight> and the destination device <highlight><bold>5585</bold></highlight> comprise a hardwired, telephone line or wireless link. </paragraph>
<paragraph id="P-0591" lvl="0"><number>&lsqb;0591&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 56</cross-reference><highlight><italic>a </italic></highlight>illustrates an embodiment of the conversion and call processing circuitry contained within a computer card <highlight><bold>5601</bold></highlight> (preferably a PCMCIA card although IDE, PCI, etc. type cards might alternately be used). The computer card <highlight><bold>5601</bold></highlight> plugs into a host device such as an access device or computer. Through plugging the card <highlight><bold>5601</bold></highlight> into the host device, the control and data bus <highlight><bold>5613</bold></highlight> of the card becomes available to the host device&apos;s processing unit. </paragraph>
<paragraph id="P-0592" lvl="0"><number>&lsqb;0592&rsqb;</number> To complete installation of the card <highlight><bold>5601</bold></highlight>, the host device is loaded with configuration, maintenance and device driver software. The configuration software is used to configure the card <highlight><bold>5601</bold></highlight> to operate in different configurations such as is illustrated in <cross-reference target="DRAWINGS">FIGS. 55</cross-reference><highlight><italic>a </italic></highlight>or <highlight><bold>55</bold></highlight><highlight><italic>b. </italic></highlight>For example, when installed in the computer <highlight><bold>5515</bold></highlight>, the computer card <highlight><bold>5601</bold></highlight> must be configured to function with a conventional telephone, the telephone <highlight><bold>5530</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>, in a line sharing arrangement. The dual-line phone <highlight><bold>5531</bold></highlight> associated with the computer <highlight><bold>5517</bold></highlight> receives a similar software configuration but does not require a line sharing arrangement. </paragraph>
<paragraph id="P-0593" lvl="0"><number>&lsqb;0593&rsqb;</number> The maintenance software permits the user of the host device to add or modify instructional voice messages to be delivered, and (as will be discussed in reference to <cross-reference target="DRAWINGS">FIG. 63</cross-reference> below) various telephone numbers of remote sites with cross-referenced internet addresses in a cross-reference database. </paragraph>
<paragraph id="P-0594" lvl="0"><number>&lsqb;0594&rsqb;</number> The device driver software allows the host device and the computer card <highlight><bold>5601</bold></highlight> to selectively interact to perform various joint functionality. Thus, when needed, the computer card <highlight><bold>5601</bold></highlight> has access to the host device&apos;s processing unit, associated storage devices and other resources. </paragraph>
<paragraph id="P-0595" lvl="0"><number>&lsqb;0595&rsqb;</number> With reference to the specific configuration of the computer <highlight><bold>5515</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>), the telephone <highlight><bold>5530</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) connects to a switching circuit <highlight><bold>5607</bold></highlight> via a phone input line <highlight><bold>5603</bold></highlight>. A telephone switching network also attaches to a switching input line <highlight><bold>5605</bold></highlight> of the switching circuit <highlight><bold>5607</bold></highlight> via the telephone line <highlight><bold>5536</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>). </paragraph>
<paragraph id="P-0596" lvl="0"><number>&lsqb;0596&rsqb;</number> The switching circuit <highlight><bold>5607</bold></highlight> senses a pickup of the telephone <highlight><bold>5532</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) by monitoring the phone input line <highlight><bold>5603</bold></highlight>. Upon sensing the pickup event, the switching circuit <highlight><bold>5607</bold></highlight> communicates the event to a control processing circuit <highlight><bold>5609</bold></highlight>. The control processing circuit <highlight><bold>5609</bold></highlight> responds by directing the delivery of a dial tone through the switching circuit <highlight><bold>5607</bold></highlight> to the telephone <highlight><bold>5532</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) attached to the phone input line <highlight><bold>5603</bold></highlight>. </paragraph>
<paragraph id="P-0597" lvl="0"><number>&lsqb;0597&rsqb;</number> After delivering the dial tone, the switching circuit <highlight><bold>5607</bold></highlight> waits for a number to be dialed. The switching circuit <highlight><bold>5607</bold></highlight> forwards the received dialed digits to the control processing circuit <highlight><bold>5609</bold></highlight>. Upon receiving the phone number and through activation of the device driver, the control processing circuit <highlight><bold>5609</bold></highlight> sends the number along the control and data bus <highlight><bold>5613</bold></highlight> to the host device in which the computer card <highlight><bold>5601</bold></highlight> is plugged, in this case the computer <highlight><bold>5515</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>). </paragraph>
<paragraph id="P-0598" lvl="0"><number>&lsqb;0598&rsqb;</number> The host device compares the received telephone number with the cross-reference database it stores. If the telephone number has an entry in the database, the host device will look to see if the user has indicated therein the desire to: a) always use the telephone switching network; b) always use an internet routing path; c) always attempt an internal routing path; or d) prompt the user each time a call attempted made. Otherwise, if no entry is found, the host device adds the number to the database with a &ldquo;d)&rdquo; type cross-reference, permitting the user to later modify the setting. Thereafter, the host device responds to the computer card <highlight><bold>5601</bold></highlight> per the cross-reference entry identified. </paragraph>
<paragraph id="P-0599" lvl="0"><number>&lsqb;0599&rsqb;</number> If &ldquo;a)&rdquo; is identified, the host device directs the control processing circuit <highlight><bold>5609</bold></highlight> to automatically dial the number on the telephone switching network via the switching input line <highlight><bold>5605</bold></highlight>, and then interconnect the lines <highlight><bold>5605</bold></highlight> and <highlight><bold>5603</bold></highlight> to permit a conventional telephone-based call setup and voice session to begin. </paragraph>
<paragraph id="P-0600" lvl="0"><number>&lsqb;0600&rsqb;</number> If the host identified &ldquo;b&rdquo;, indicating that an internet pathway is required, the card <highlight><bold>5601</bold></highlight> attempts to establish an internet connection through the telephone switching network via the input line <highlight><bold>5605</bold></highlight>. Alternately, in a preferred internet route embodiment, an auxiliary input line <highlight><bold>5604</bold></highlight> is used to maintain continuous internet connectivity via a dedicated line to the telephone switching network. Further detail regarding this configuration and process can be found in reference to <cross-reference target="DRAWINGS">FIG. 63</cross-reference> below. </paragraph>
<paragraph id="P-0601" lvl="0"><number>&lsqb;0601&rsqb;</number> If the host device identifies a &ldquo;c)&rdquo; type entry in its cross-reference database, the host device informs the control processing circuit <highlight><bold>5609</bold></highlight> to pursue a voice session through an internal route. The control processing circuit <highlight><bold>5609</bold></highlight> responds by attempting to setup a voice session with assistance from the host device. Specifically, upon identifying the need to gain access to the premises network on which the host device participates, the host device accesses the premises network to setup the call. The host device uses its own resources, i.e., its own ethernet card in the case of the computer <highlight><bold>5515</bold></highlight>, to establish and maintain the internally routed call. The control processing circuit <highlight><bold>5609</bold></highlight> provides call setup simulation (busy, ringing, hang up, etc. signals to the telephone <highlight><bold>5530</bold></highlight>) and conversion processing as needed to establish and maintain the voice session. </paragraph>
<paragraph id="P-0602" lvl="0"><number>&lsqb;0602&rsqb;</number> If the host device identifies a &ldquo;d)&rdquo; type entry for the telephone number, the host device delivers a voice message through the conversion circuitry of the computer card <highlight><bold>5601</bold></highlight> and to the user of the telephone <highlight><bold>5530</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) via the input line <highlight><bold>5603</bold></highlight>. The message prompts the user to select a desired pathway via touch tone entry on the telephone <highlight><bold>5530</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>), and permits the user to set that pathway as a permanent default. The user&apos;s selection is forwarded to the control processing unit <highlight><bold>5609</bold></highlight> which responds appropriately to the users request. For example, if the user selected the telephone switching network and requested that route be made a permanent option, the control processing circuit <highlight><bold>5609</bold></highlight> would route the call as described above as if the host identified an entry type &ldquo;a)&rdquo; in its cross-reference database. In addition, the control processing circuit <highlight><bold>5609</bold></highlight> forwards the request to the host device to change the entry to type &ldquo;a)&rdquo; for future calls. </paragraph>
<paragraph id="P-0603" lvl="0"><number>&lsqb;0603&rsqb;</number> In addition, if during setup the host device is informed that no conventional device such as a telephone is attached to the input line <highlight><bold>5603</bold></highlight> or that no switching network access is available, etc., the host device and computer card <highlight><bold>5601</bold></highlight> interact to provide for any alternate configurations such as those illustrated in <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a. </italic></highlight>For example, when a computer card <highlight><bold>5601</bold></highlight> is placed into the access device <highlight><bold>5509</bold></highlight>, the access device <highlight><bold>5509</bold></highlight> and the control processing circuit <highlight><bold>5609</bold></highlight> coordinate to service the routing of voice packets in a voice stream form through the telephone switching network attached to the telephone line <highlight><bold>5541</bold></highlight>. Likewise, they coordinate to service routing of voice stream information from the telephone line <highlight><bold>5541</bold></highlight> into the premises network in a packet-based form. </paragraph>
<paragraph id="P-0604" lvl="0"><number>&lsqb;0604&rsqb;</number> In addition, the host device and computer card <highlight><bold>5601</bold></highlight> can be merged into one package such as the telephone access device <highlight><bold>5519</bold></highlight>. Therein, the functionality of the host processing and control processing unit <highlight><bold>5609</bold></highlight> are merged. The telephone access device <highlight><bold>5519</bold></highlight> is also configured with an ethernet (10base2 or 10baseT) interface providing for internal routing through the premises. </paragraph>
<paragraph id="P-0605" lvl="0"><number>&lsqb;0605&rsqb;</number> In the specific configuration of the computer <highlight><bold>5515</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a, </italic></highlight>the computer <highlight><bold>5515</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) can use the dialed number to establish a voice session through the premises network. To do this, the computer <highlight><bold>5515</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) delivers a call setup request packet, which includes the dialed number, onto the backbone LAN <highlight><bold>5503</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>). As previously discussed, the setup request packet is then routed through the spanning tree network to a destination device. </paragraph>
<paragraph id="P-0606" lvl="0"><number>&lsqb;0606&rsqb;</number> If the call cannot be established because the destination device cannot be found, the control processing circuit <highlight><bold>5609</bold></highlight> delivers (via its conversion processing circuits) to the telephone <highlight><bold>5530</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) a message indicating that the destination device is off-line and prompts for a voice mail message. Similarly, if the call cannot be established because the destination is currently engaged in voice communication or has responded to the call setup request with a &ldquo;do not disturb&rdquo; indication, the control processing circuit <highlight><bold>5609</bold></highlight> delivers a message indicating the status and prompts for voice mail. </paragraph>
<paragraph id="P-0607" lvl="0"><number>&lsqb;0607&rsqb;</number> If a user hangs up prior to initiating a voice mail recording, the control processing and switching circuits <highlight><bold>5609</bold></highlight> and <highlight><bold>5605</bold></highlight> are reset to await another event. Otherwise, voice mail recording begins after a tone delivered at the end of the voice mail prompt. After delivering the tone, the control processing circuit <highlight><bold>5609</bold></highlight> directs the switching circuit <highlight><bold>5607</bold></highlight> to interconnect the lines <highlight><bold>5603</bold></highlight> and <highlight><bold>5611</bold></highlight>. The control processing circuit <highlight><bold>5609</bold></highlight> also directs an A/D (analog to digital) conversion circuit <highlight><bold>5621</bold></highlight> to begin digitizing the voice message received via a subtraction circuit <highlight><bold>5631</bold></highlight>. Because the control processing circuit <highlight><bold>5609</bold></highlight> disables a D/A (digital to analog) conversion circuit <highlight><bold>5625</bold></highlight> during the digitization process, the subtraction circuit <highlight><bold>5631</bold></highlight> subtracts nothing from the incoming voice message. Thus, the entire voice message captured by the telephone <highlight><bold>5515</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) is routed to the A/D conversion circuit <highlight><bold>5621</bold></highlight>. </paragraph>
<paragraph id="P-0608" lvl="0"><number>&lsqb;0608&rsqb;</number> The A/D conversion circuit <highlight><bold>5621</bold></highlight> produces digital samples of the voice message, and delivers each sample to an output buffer <highlight><bold>5623</bold></highlight>. The control processing circuit <highlight><bold>5609</bold></highlight> interfaces with the computer <highlight><bold>5515</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) via the loaded device driver to coordinate storage and delivery of the voice mail to the destination device as soon as delivery is warranted and possible. </paragraph>
<paragraph id="P-0609" lvl="0"><number>&lsqb;0609&rsqb;</number> If call setup proves successful, the control processing circuit <highlight><bold>5609</bold></highlight> directs the switching circuit <highlight><bold>5607</bold></highlight> to interconnect the lines <highlight><bold>5603</bold></highlight> and <highlight><bold>5611</bold></highlight>, connecting the telephone with the conversion circuitry. Incoming voice signals from the destination device arrive at the computer <highlight><bold>5515</bold></highlight> via the backbone LAN <highlight><bold>5503</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) in a voice packet form. </paragraph>
<paragraph id="P-0610" lvl="0"><number>&lsqb;0610&rsqb;</number> In response, the computer <highlight><bold>5515</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) strips out routing information from the packets, and coordinates with the control processing circuit <highlight><bold>5609</bold></highlight> to deliver the remaining digitized voice information (hereinafter &ldquo;voice data&rdquo;) to a queue time buffer <highlight><bold>5627</bold></highlight> via control and data bus <highlight><bold>5613</bold></highlight>. The control processing circuit <highlight><bold>5609</bold></highlight> waits a predetermined queuing period of time before beginning playback of a group of voice data. </paragraph>
<paragraph id="P-0611" lvl="0"><number>&lsqb;0611&rsqb;</number> Groups of voice data are defined by a group identifier contained in each voice packet received. For example, conversion circuitry which converts voice streams into voice packets adds group identifiers after identifying a group. To identify a group, the conversion circuitry monitors incoming voice streams for gaps in voice input, i.e., it attempts to identify the difference between captured speech and background noise. Upon identifying the lack of speech for a predefined gap time of about one second, the conversion circuitry assigns a different (pseudo-random) group identifier to subsequent voice packets. Likewise, upon identifying another gap, the conversion circuitry assigns another group identifier to voice packets generated thereafter. </paragraph>
<paragraph id="P-0612" lvl="0"><number>&lsqb;0612&rsqb;</number> Thus, for each group of data (each group of voice data extracted from voice packets having a common group identifier), the control processing circuit <highlight><bold>5609</bold></highlight> begins to wait the predetermined queuing time before beginning conversion. Thereafter, no queuing time is required until the next group of voice packets begin. </paragraph>
<paragraph id="P-0613" lvl="0"><number>&lsqb;0613&rsqb;</number> By using the queuing time in such a manner, the control processing circuit <highlight><bold>5609</bold></highlight> can reasonably ensure continuous voice delivery of a voice group to the telephone <highlight><bold>5530</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) under most circumstances without, if possible, introducing a delay that is so long as to be noticeable. </paragraph>
<paragraph id="P-0614" lvl="0"><number>&lsqb;0614&rsqb;</number> When the buffer <highlight><bold>5627</bold></highlight> has sufficiently &ldquo;queued up&rdquo; a voice group, the control processing circuit <highlight><bold>5609</bold></highlight> directs the delivery of the digital voice data from the buffer <highlight><bold>5627</bold></highlight> to a D/A conversion circuit <highlight><bold>5625</bold></highlight> at the same sampling rate used to generate the voice packets. From the voice data, the D/A conversion circuit <highlight><bold>5621</bold></highlight> generates an analog voice signal, i.e., a voice stream, representing the voice captured by the destination device. The voice stream is then delivered to the telephone <highlight><bold>5530</bold></highlight> (via a buffer <highlight><bold>5629</bold></highlight>, interconnect <highlight><bold>5611</bold></highlight>, switching circuit <highlight><bold>5611</bold></highlight> and the input line <highlight><bold>5603</bold></highlight>) for listening by the user. </paragraph>
<paragraph id="P-0615" lvl="0"><number>&lsqb;0615&rsqb;</number> The generated voice stream is also subtracted by a subtraction circuit <highlight><bold>5631</bold></highlight> from the combined voice stream signals on the interconnect <highlight><bold>5611</bold></highlight>. In this way, the voice stream sampled by the A/D conversion circuit <highlight><bold>5621</bold></highlight> for delivery to the destination device consists only of the voice signals captured by the telephone <highlight><bold>5530</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>). Supporting this process, the buffer <highlight><bold>5629</bold></highlight> isolates the incoming voice stream from the incoming voice stream combined with the outgoing voice stream so that the subtraction process can be realized. The A/D conversion circuit <highlight><bold>5621</bold></highlight> converts the voice stream captured by the telephone <highlight><bold>5530</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) into a digitally sampled form (voice data) which is packetized with routing information and a voice group identifier for delivery by the host device (the computer <highlight><bold>1515</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) to the destination device. </paragraph>
<paragraph id="P-0616" lvl="0"><number>&lsqb;0616&rsqb;</number> Specifics regarding packetization of the voice data are managed between the control processing circuit <highlight><bold>5609</bold></highlight> and the host device in view of the requirements of the delivery route at issue. In an exemplary embodiment, for internal network routing, each voice packet contains a 20 ms (millisecond) time period of compressed voice data samples. Thus, not considering routing delays, a received voice packet has a built-in 20 ms delay. </paragraph>
<paragraph id="P-0617" lvl="0"><number>&lsqb;0617&rsqb;</number> In that embodiment, upon receipt of a first of a group of such voice packets, a 200 ms queuing time is invoked before the first of such voice packets will be played back. This should ensure that <highlight><bold>10</bold></highlight> packets of a given group should be waiting at the destination for playback at any time, making it unlikely that any extraordinary delays associated with the routing of any one or several voice packets could result in an empty queue during attempted playback of the given group. So long as the overall delay, i.e., the voice packet delivery delay (as determined by round trip test packets sent during call setup) plus the 200 ms queuing time, do not exceed a predetermined threshold value of, for example, 500 ms, full duplex (two-way) voice communication should be possible with relatively unnoticeable delays. </paragraph>
<paragraph id="P-0618" lvl="0"><number>&lsqb;0618&rsqb;</number> If required queuing and delivery time delays prove too long, e.g., to a point where they might annoy a calling party, the control processing circuit <highlight><bold>5609</bold></highlight> can disable full duplex communication by selectively inhibiting the output of the D/A conversion circuit <highlight><bold>5626</bold></highlight> and the input of the A/D conversion circuit <highlight><bold>5621</bold></highlight> to provide communication connectivity to only one speaker at a time, i.e., half duplex connectivity. </paragraph>
<paragraph id="P-0619" lvl="0"><number>&lsqb;0619&rsqb;</number> Queuing times are identified during call setup and may be modified during the course of the call. Queuing should be as short as possible so that the parties involved cannot detect the overall delay. It should also be long enough to prevent detectable gaps in the reproduced voice signals during most channel loading conditions. The queuing time is generated from a combination of the maximum routing time expected between the source and destination devices less the nominal routing time, and that result plus a one hundred percent (100%) safety margin, i.e., twice the result. </paragraph>
<paragraph id="P-0620" lvl="0"><number>&lsqb;0620&rsqb;</number> In a first embodiment wherein packet routing times remain fairly constant, the maximum and nominal routing times are fixed and based on overall channel characteristics (routing delivery times and variations thereof) established during network setup. In an alternate embodiment wherein packet routing times exhibit relatively slow variation, as previously mentioned, routing times are calculated from round trip routing times of test signals transmitted between the source and destination during call setup (while the destination device is &ldquo;ringing&rdquo;). This embodiment is preferable where routing time shows little variation throughout a calling session. If routing times vary much over the course of a single calling session, in a third embodiment, round trip test signals are interspersed with voice packets and decisions made regarding queuing times and full or half duplex considerations are reevaluated for further voice session support. </paragraph>
<paragraph id="P-0621" lvl="0"><number>&lsqb;0621&rsqb;</number> Upon receiving an incoming call from the telephone switching network via the switching input line <highlight><bold>5605</bold></highlight>, if not in use, the control processing circuit <highlight><bold>5609</bold></highlight> first attempts to identify the type of call incoming. If it is a facsimile or modem transmission destined for the host device, the control processing circuit <highlight><bold>5609</bold></highlight> directs the switching circuit <highlight><bold>5607</bold></highlight> to interconnect the line <highlight><bold>5605</bold></highlight> with a modem/fax processing circuit <highlight><bold>5633</bold></highlight>. </paragraph>
<paragraph id="P-0622" lvl="0"><number>&lsqb;0622&rsqb;</number> If the incoming call on the line <highlight><bold>5605</bold></highlight> constitutes a voice packet transmission destined for the telephone <highlight><bold>5530</bold></highlight>, the control processing circuit <highlight><bold>5609</bold></highlight> and switching circuit <highlight><bold>5607</bold></highlight> deliver a busy signal onto the line <highlight><bold>5603</bold></highlight>, and deliver a ringing message packet along the line <highlight><bold>5605</bold></highlight>. If the switching circuit <highlight><bold>5607</bold></highlight> detects a pickup on the line <highlight><bold>5603</bold></highlight>, a connect message packet is delivered onto the line <highlight><bold>5605</bold></highlight> to the sending device. Thereafter, the voice stream delivered via the phone input line <highlight><bold>5603</bold></highlight> is converted as described above into a voice packet form for delivery via the switching input line <highlight><bold>5606</bold></highlight> to the source device. Similarly, the voice packets received along the line <highlight><bold>5606</bold></highlight> are processed by the conversion circuitry (as described above) and delivered onto the phone input line <highlight><bold>5603</bold></highlight>. </paragraph>
<paragraph id="P-0623" lvl="0"><number>&lsqb;0623&rsqb;</number> If, however, the call designates a different destination device than the device attached to the phone input line <highlight><bold>5603</bold></highlight>, the voice packets are relayed by the host device for further routing, e.g., the computer <highlight><bold>5515</bold></highlight> receives the voice packets to route them onto the backbone LAN <highlight><bold>5503</bold></highlight>. </paragraph>
<paragraph id="P-0624" lvl="0"><number>&lsqb;0624&rsqb;</number> Alternately, if the incoming call on the switching input line <highlight><bold>5605</bold></highlight> is a voice stream call (e.g., a conventional phone call), the control processing device <highlight><bold>5609</bold></highlight> will direct the switching device to deliver a ring signal onto the line <highlight><bold>5603</bold></highlight>. Upon detecting a pickup on the line <highlight><bold>5603</bold></highlight>, the switching circuit is directed to interconnect the lines <highlight><bold>5605</bold></highlight> and <highlight><bold>5603</bold></highlight> for the duration of the voice session. </paragraph>
<paragraph id="P-0625" lvl="0"><number>&lsqb;0625&rsqb;</number> In addition, modem and facsimile transmissions originating from the host device (such as the computer <highlight><bold>5515</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) are received and processed by the modem/fax processing circuit <highlight><bold>5633</bold></highlight> for routing through the switching circuit <highlight><bold>5607</bold></highlight> to the telephone switching network via the line <highlight><bold>5605</bold></highlight>. </paragraph>
<paragraph id="P-0626" lvl="0"><number>&lsqb;0626&rsqb;</number> Voice messages delivered to the user are stored in a digital form by the host device. The control processing circuit <highlight><bold>5609</bold></highlight> interacts to load the voice messages into a buffer <highlight><bold>5627</bold></highlight> as they are needed. The control processing circuit <highlight><bold>5609</bold></highlight> also directs the D/A conversion circuit <highlight><bold>5625</bold></highlight> to begin converting the digital messages into a voice stream for delivery via the buffer <highlight><bold>5629</bold></highlight> and the switching circuit <highlight><bold>5607</bold></highlight> to either the line <highlight><bold>5603</bold></highlight> or <highlight><bold>5605</bold></highlight>. </paragraph>
<paragraph id="P-0627" lvl="0"><number>&lsqb;0627&rsqb;</number> With exception to the modem/fax processing circuit <highlight><bold>5633</bold></highlight>, the telephone access device <highlight><bold>5519</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) also utilizes the circuitry shown in <cross-reference target="DRAWINGS">FIG. 56</cross-reference><highlight><italic>a, </italic></highlight>and has the same functionality described above in relation thereto. The telephone access device <highlight><bold>5519</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>) is configured to communicate on the backbone LAN <highlight><bold>5503</bold></highlight>, and to take on the functionality provided by the computer <highlight><bold>5515</bold></highlight> as described above. </paragraph>
<paragraph id="P-0628" lvl="0"><number>&lsqb;0628&rsqb;</number> Similarly, the same circuitry and functionality are contained within the telephone access device <highlight><bold>5577</bold></highlight>. However, the device <highlight><bold>5577</bold></highlight> is shown having no telephone connected thereto. In such configurations, the telephone access device <highlight><bold>5577</bold></highlight> acts only as an access device from the telephone line <highlight><bold>5579</bold></highlight> into and out of the remote premises. </paragraph>
<paragraph id="P-0629" lvl="0"><number>&lsqb;0629&rsqb;</number> The computer <highlight><bold>5517</bold></highlight> also utilizes a computer card <highlight><bold>5601</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 56</cross-reference><highlight><italic>a</italic></highlight>). However, in the configuration illustrated, the telephone <highlight><bold>5531</bold></highlight> is a two-line phone with a first line being connected to an outside telephone line, the line <highlight><bold>5537</bold></highlight>, and the second being connected to the card computer <highlight><bold>5601</bold></highlight>. When the user desires to place an outside call, the first line is chosen and vice versa. In this configuration the line <highlight><bold>5605</bold></highlight> of the card <highlight><bold>5601</bold></highlight> is not, and need not be, connected to anything. Through setup, the host device (the computer <highlight><bold>5517</bold></highlight>) takes the missing switching network link into consideration when determining routing options to select, offer, etc. </paragraph>
<paragraph id="P-0630" lvl="0"><number>&lsqb;0630&rsqb;</number> Each of the access devices <highlight><bold>5507</bold></highlight>, <highlight><bold>5509</bold></highlight>, <highlight><bold>5511</bold></highlight> and <highlight><bold>5553</bold></highlight> also contain a computer card such as the computer card <highlight><bold>5601</bold></highlight>. In particular, with the card <highlight><bold>5601</bold></highlight>, the access device <highlight><bold>5507</bold></highlight> provides communication pathways via: 1) the telephone line <highlight><bold>5539</bold></highlight>; 2) the wireless network via the access device <highlight><bold>5505</bold></highlight>; 3) the mobile terminal <highlight><bold>5521</bold></highlight> via a first transceiver serving the wireless network; and 4) the wireless phone <highlight><bold>5527</bold></highlight> via a dedicated, second transceiver. </paragraph>
<paragraph id="P-0631" lvl="0"><number>&lsqb;0631&rsqb;</number> The access device <highlight><bold>5509</bold></highlight> provides pathways via the telephone line <highlight><bold>5541</bold></highlight> and a transceiver servicing the wireless network. The access device <highlight><bold>5511</bold></highlight> illustrates that a telephone <highlight><bold>5533</bold></highlight> can be attached to the card <highlight><bold>5601</bold></highlight> to provide access through the wireless network to any local or remote device, without having direct access to the telephone switching network. </paragraph>
<paragraph id="P-0632" lvl="0"><number>&lsqb;0632&rsqb;</number> Furthermore, the access device <highlight><bold>5533</bold></highlight> illustrates that the computer card <highlight><bold>5601</bold></highlight> need not be connected to either a telephone or a telephone switching network to provide operational functionality. In particular, instead of connecting an outside telephone line, the access device <highlight><bold>5553</bold></highlight> delivers voice streams captured by and received from the mobile terminal <highlight><bold>5559</bold></highlight> to the conversion circuitry of the computer card <highlight><bold>5601</bold></highlight> for digitizing (by the A/D conversion circuit <highlight><bold>5621</bold></highlight>), storing and routing as voice packets back to the premises, for example. Voice packets received from the mobile terminal <highlight><bold>5555</bold></highlight> (which contains its own conversion circuitry) receive the same storage and routing treatment without conversion assistance. </paragraph>
<paragraph id="P-0633" lvl="0"><number>&lsqb;0633&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 56</cross-reference><highlight><italic>b </italic></highlight>illustrates an alternate embodiment of the conversion circuitry of <cross-reference target="DRAWINGS">FIG. 56</cross-reference><highlight><italic>a </italic></highlight>wherein instead of using an analog subtraction process to separate outgoing voice signals from the combined incoming and outgoing signals, a digital subtraction process is used (at a subtraction circuit <highlight><bold>5653</bold></highlight>). In addition, the use of a delay element <highlight><bold>5651</bold></highlight> is shown to compensate for the D/A and A/D conversion time pathway via circuits <highlight><bold>5625</bold></highlight> and <highlight><bold>5621</bold></highlight> respectively. </paragraph>
<paragraph id="P-0634" lvl="0"><number>&lsqb;0634&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 57</cross-reference> is an illustration of the back of the telephone <highlight><bold>5525</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a </italic></highlight>as built in accordance with the present invention. Unlike the conventional telephones <highlight><bold>5530</bold></highlight>, <highlight><bold>5529</bold></highlight>, <highlight><bold>5531</bold></highlight>, <highlight><bold>5533</bold></highlight> and <highlight><bold>5561</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>), the telephone <highlight><bold>5525</bold></highlight> is configured with built in conversion circuitry. In particular, the telephone <highlight><bold>5525</bold></highlight> contains a phone line jack <highlight><bold>5701</bold></highlight> for connecting to an available outside telephone line, although in need not be connected to operate (as illustrated in <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>). The power adapter jack <highlight><bold>5703</bold></highlight> provides power to the telephone <highlight><bold>5525</bold></highlight> via a typical A/C to D/C converter. Although not shown, an alternate embodiment of the telephone <highlight><bold>5525</bold></highlight> also utilizes internal, rechargeable battery power. Lastly, the telephone <highlight><bold>5525</bold></highlight> is configured to receive PCMCIA cards into slots <highlight><bold>5705</bold></highlight>. For example, the PCMCIA card <highlight><bold>5707</bold></highlight> is a radio transceiver card which provides wireless access from the telephone <highlight><bold>5525</bold></highlight> to the access device <highlight><bold>5509</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>). Alternately or in addition, an ethernet PCMCIA card may be added for direct ethernet connectivity to, for example, the backbone LAN <highlight><bold>5503</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a</italic></highlight>). </paragraph>
<paragraph id="P-0635" lvl="0"><number>&lsqb;0635&rsqb;</number> The telephone <highlight><bold>5525</bold></highlight> provides a semi-stationary source for placing phone calls inside or outside of the premises without requiring new telephone line wiring. It also avoids incurring charges associated with other conventional mobile phone services. </paragraph>
<paragraph id="P-0636" lvl="0"><number>&lsqb;0636&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 58</cross-reference> is a schematic block diagram which illustrates the implementation of one embodiment of the conversion circuitry within the telephone <highlight><bold>5525</bold></highlight> of <cross-reference target="DRAWINGS">FIGS. 55 and 57</cross-reference>. In particular, a control processing circuit <highlight><bold>5801</bold></highlight> functions as described above in reference to <cross-reference target="DRAWINGS">FIG. 56</cross-reference><highlight><italic>a </italic></highlight>with one significant difference&mdash;there is no need for a subtraction circuit. This is because the control processing circuit <highlight><bold>5801</bold></highlight> already has access to the outgoing voice stream separate from that incoming. </paragraph>
<paragraph id="P-0637" lvl="0"><number>&lsqb;0637&rsqb;</number> Incoming voice streams via the jack <highlight><bold>5701</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 57</cross-reference>) are delivered (along with outgoing voice streams captured by a microphone <highlight><bold>5805</bold></highlight>) to a speaker <highlight><bold>5807</bold></highlight> and to the other calling party. A microphone/phone processing circuit <highlight><bold>5809</bold></highlight> manages the call processing and delivers the outgoing voice stream per direction from a control processing circuit <highlight><bold>5801</bold></highlight>. </paragraph>
<paragraph id="P-0638" lvl="0"><number>&lsqb;0638&rsqb;</number> To support voice packet communication, the processing circuit <highlight><bold>5801</bold></highlight> directs an A/D conversion circuit <highlight><bold>5817</bold></highlight> to process the outgoing voice stream. The resultant voice data is stored in an output buffer <highlight><bold>5819</bold></highlight> in a voice packet form. By attaching a PCMCIA card or cards (see <cross-reference target="DRAWINGS">FIG. 57</cross-reference>) to the output buffer <highlight><bold>5819</bold></highlight>, the control processing circuit <highlight><bold>5801</bold></highlight> can direct the delivery of the voice packets onto an ethernet LAN, telephone switching network, wireless network, etc., depending on the nature of the PCMCIA card(s) installed. Similarly, by attaching an input line <highlight><bold>5811</bold></highlight> to a PCMCIA card or cards (see <cross-reference target="DRAWINGS">FIG. 57</cross-reference>) incoming voice packets can be delivered via a media defined by the attached PCMCIA card(s). Although not shown, the control processing circuit <highlight><bold>5801</bold></highlight> also maintains a direct interface with the attached PCMCIA cards to provide appropriate routing, call setup and control as proves necessary. </paragraph>
<paragraph id="P-0639" lvl="0"><number>&lsqb;0639&rsqb;</number> In addition, after queuing group voice data contained in incoming voice packets in a queue time buffer <highlight><bold>5813</bold></highlight>, a D/A conversion circuit <highlight><bold>5815</bold></highlight> begins converting the queued data into a voice stream form. For half duplex communication, the conversion is delayed until any pending group of outgoing communication has finished. For full duplex (2-way) communication, the incoming voice stream is added to outgoing voice signals from the microphone <highlight><bold>5805</bold></highlight> for delivery to the speaker <highlight><bold>5807</bold></highlight>. </paragraph>
<paragraph id="P-0640" lvl="0"><number>&lsqb;0640&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 59</cross-reference> is a block diagram illustrating the packet processing functionality of the access devices illustrated in <cross-reference target="DRAWINGS">FIG. 55</cross-reference><highlight><italic>a. </italic></highlight>At a block <highlight><bold>5901</bold></highlight>, an access device waits in an idle state for receipt of any type of communication packet. Upon receipt of a communication packet, the access device examines an identifier field within the packet to determine the packet type. If the packet is determined to be a call route request packet as indicated at an event block <highlight><bold>5903</bold></highlight>, the access device begins an attempt to identify potential phone call pathways. Alternatively, if the packet is a call setup packet as indicated at an event block <highlight><bold>5905</bold></highlight>, the access device either attempts to set up the call (if directly connected to the destination and setup services are needed) or forwards the setup packet toward the destination. Otherwise, if the access device receives any other type of communication packet at an event block <highlight><bold>5911</bold></highlight>, other routines are executed at a block <highlight><bold>5913</bold></highlight> to appropriately service the received packet. </paragraph>
<paragraph id="P-0641" lvl="0"><number>&lsqb;0641&rsqb;</number> More specifically, a call request packet contains an identifier field&mdash;for storing a packet type indicator, a destination field&mdash;for storing a destination phone number, a base cost field&mdash;for indicating the routing cost incurred by the calling device to reach a current access device, and an internal call routing field&mdash;for storing the lowest cost routing pathway (along with its cost), if any, which does not use an outgoing telephone line, and an external call routing field&mdash;for storing the lowest cost routing pathway (along with its cost), if any, utilizing an outgoing telephone line. </paragraph>
<paragraph id="P-0642" lvl="0"><number>&lsqb;0642&rsqb;</number> Upon receiving a call setup request packet as indicated by the event block <highlight><bold>5903</bold></highlight>, the access device first attempts to find a lowest cost external routing pathway for the call. At a block <highlight><bold>5917</bold></highlight>, the access device consults its routing table to identify the lowest cost direct or upstream access to an available outgoing telephone line. If no access is found, the access device branches to begin internal call route processing. However, if an outgoing telephone line is identified, the access device determines whether to replace an external routing pathway stored in the external call routing field at a block <highlight><bold>5919</bold></highlight>. </paragraph>
<paragraph id="P-0643" lvl="0"><number>&lsqb;0643&rsqb;</number> In particular, the access device compares the cost of the currently stored external routing pathway with the cost of the access device&apos;s own lowest cost external pathway at the block <highlight><bold>5919</bold></highlight>. If the access device has identified a lower cost external pathway, the access device replaces the current external call routing field entry (if any) with the lower cost pathway along with the associated cost at a block <highlight><bold>5921</bold></highlight>, and branches to a block <highlight><bold>5923</bold></highlight> to begin internal call route processing. However, if no phone line access is available or its cost is not lower, the access device branches immediately branches to the block <highlight><bold>5923</bold></highlight> for internal call route processing. </paragraph>
<paragraph id="P-0644" lvl="0"><number>&lsqb;0644&rsqb;</number> The term &ldquo;cost&rdquo; being compared at the block <highlight><bold>5919</bold></highlight> consists of the sum of the routing cost involved in routing a packet from the source (the call initiator) to the current access point and the routing cost involved in routing a packet from the current access point to the access device which provides direct access to the available outgoing telephone line. Routing cost not only takes into account actual costs that may be incurred, but also takes into account the media, e.g., its bandwidth, reliability, time delays and traffic levels. </paragraph>
<paragraph id="P-0645" lvl="0"><number>&lsqb;0645&rsqb;</number> After considering the external routing pathway, the access device begins internal routing pathway processing at the block <highlight><bold>5923</bold></highlight>. Specifically, at the block <highlight><bold>5923</bold></highlight>, the access device determines whether the internal routing field contains an entry. If the field is empty, the access device attempts to identify a routing table entry for the telephone number of the destination device at a block <highlight><bold>5925</bold></highlight>. If a routing table entry is found, at a block <highlight><bold>5927</bold></highlight> the access device inserts the table entry along with the overall cost from the source to destination into the internal routing field. Thereafter, the access device branches to a block <highlight><bold>5929</bold></highlight> to begin either root processing or further forwarding. The access device also branches to the block <highlight><bold>5929</bold></highlight> if an entry is found in the internal routing pathway field at the block <highlight><bold>5923</bold></highlight> or a routing table entry is not found at the block <highlight><bold>5925</bold></highlight>. </paragraph>
<paragraph id="P-0646" lvl="0"><number>&lsqb;0646&rsqb;</number> At the block <highlight><bold>5929</bold></highlight>, the access device considers whether it is a root device in the spanning tree. If it is not a root device, the access device increments the base cost field entry by the cost of reaching the next device in the pathway toward the root access device (as indicated by the cost entry in the routing table), routes the updated route request packet to the next device in the pathway toward the root, and returns to the idle state at the block <highlight><bold>5901</bold></highlight>. Otherwise, if the access device is a root device, the access device converts the call route request packet to a call reply packet (by changing the packet type indicator) at a block <highlight><bold>5933</bold></highlight>, and routes the reply packet back toward the source. </paragraph>
<paragraph id="P-0647" lvl="0"><number>&lsqb;0647&rsqb;</number> Upon receipt of the call reply packet, among other processing illustrated in reference to <cross-reference target="DRAWINGS">FIG. 60</cross-reference> below, the source device (the &ldquo;calling device&rdquo;) is offered the internal and external call pathway options (if available) for establishing the call. The source device may offer the user the pathway options, or, if so programmed, automatically select the most appropriate pathway for placing the call. Having selected a pathway from the offered options, the source device generates a call setup packet and routes it toward the destination. </paragraph>
<paragraph id="P-0648" lvl="0"><number>&lsqb;0648&rsqb;</number> Upon receiving a call setup packet as indicated at an event block <highlight><bold>5905</bold></highlight>, the access device responds at a block <highlight><bold>5937</bold></highlight> by first considering whether the access device has a direct link to: 1) the destination device&mdash;either a hardwired or wireless link; or 2) a telephone line which is to be used in the communication pathway to or toward to destination device. If neither direct link exists, the access device routes the call setup packet toward the destination per routing table specification at a block <highlight><bold>5939</bold></highlight>, and, thereafter, returns to the idle state at the block <highlight><bold>5901</bold></highlight>. </paragraph>
<paragraph id="P-0649" lvl="0"><number>&lsqb;0649&rsqb;</number> Otherwise, if either or both direct links, the access device determines whether further processing assistance is required at a block <highlight><bold>5941</bold></highlight>. In particular, if the access device identifies that the destination device is directly connected thereto, the access device consults its routing table to determine if the destination device requires call setup assistance. When the destination device is available and not in use, setup assistance by the access devices involves: 1) the dialing of destination devices connected via a telephone line of a telephone switching network to the access device; 2) the delivery of a ring signal to conventional destination devices connected directly to the access device via hardwiring, for example; 3) sending a ringing message back toward the source device; 4) detecting a pickup at the destination device; and 5) sending a pickup message toward the source device so that the call can proceed. If the destination device is busy (&ldquo;in use&rdquo;), the access device sends a busy message toward the source device. </paragraph>
<paragraph id="P-0650" lvl="0"><number>&lsqb;0650&rsqb;</number> If setup assistance is not needed, the access device merely forwards the call setup packet to the destination device. Upon receipt, if not busy, the destination device sends a ringing message toward the destination, signals the user to answer the incoming call, and responds to a pickup by delivering a pickup message toward the source device. Otherwise, if busy, the destination device sends a busy message through the spanning tree network toward the source device. </paragraph>
<paragraph id="P-0651" lvl="0"><number>&lsqb;0651&rsqb;</number> Upon receipt of a pickup message, the source device begins to capture audio signals which are routed toward the destination. Similarly, upon pickup, the destination device begins capturing audio signals which are routed toward the source device. </paragraph>
<paragraph id="P-0652" lvl="0"><number>&lsqb;0652&rsqb;</number> In addition, if captured audio signals are to be routed through the wireless spanning tree network and/or through the associated hardwired networks within the communication network, the audio signals must first be converted to a packetized form (i.e., a &ldquo;call voice packet&rdquo; form) and then reconstructed for playback. For example, if an access device directly receives captured audio signals but must route the signals through the network, the access device converts the audio signals into voice packets, screens out all audio signals falling below a predetermined threshold level (to avoid the wasted bandwidth associated with the transmission of interleaving background noise), and forwards the call voice packets through the network. Similarly, if it has the capability of performing the packetization processing, a source or destination device connected directly to a wired or wireless network will generate call voice packets for delivery through the network. </paragraph>
<paragraph id="P-0653" lvl="0"><number>&lsqb;0653&rsqb;</number> Upon receiving a call voice packet at the block <highlight><bold>5901</bold></highlight> as represented by the block <highlight><bold>5907</bold></highlight>, the access device first determines whether it has a direct link to the destination of the voice packet at a block <highlight><bold>5937</bold></highlight>. If so, the access device considers whether call processing assistance is needed at a block <highlight><bold>5941</bold></highlight>. If needed, the access device performs the processing assistance at the block <highlight><bold>5943</bold></highlight>. In particular, the processing assistance in this situation consists of converting the call voice packets back into an audio signal form (analog form) for delivery to the destination of the voice packets. In addition, as described in more detail below, the access device delays the audio signals for a predetermined queuing time before delivery to promote continuous delivery of the overall segment of captured voice. </paragraph>
<paragraph id="P-0654" lvl="0"><number>&lsqb;0654&rsqb;</number> If no direct link is available at the block <highlight><bold>5937</bold></highlight> or no call processing assistance is needed at the block <highlight><bold>5941</bold></highlight>, the call voice packets are routed toward the destination at the block <highlight><bold>5939</bold></highlight>. Thereafter, the access device reenters the idle processing state at the block <highlight><bold>5901</bold></highlight>. </paragraph>
<paragraph id="P-0655" lvl="0"><number>&lsqb;0655&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 60</cross-reference> is a flow diagram illustrating the functionality of a source device in the setup of a voice session. The flow diagram also applies to an access device assisting a source device in the setup of a voice session whenever such assistance is needed. </paragraph>
<paragraph id="P-0656" lvl="0"><number>&lsqb;0656&rsqb;</number> Specifically, when a user attempts to initiate a voice session to a destination device, the source device (or assisting access device where applicable) responds by first determining whether it has direct telephone line access to an outside public telephone switching network. Such access may be via a telephone line, through a direct wireless telephone link to a telephone base unit having telephone line access, or through a cellular radio. </paragraph>
<paragraph id="P-0657" lvl="0"><number>&lsqb;0657&rsqb;</number> If direct telephone line access routing exists, the source device offers the route(s) along with associated cost(s) to the user (or user software) for selection at a block <highlight><bold>6003</bold></highlight>. If such a route is selected, the source device branches to conventional call setup routines as indicated at a block <highlight><bold>6007</bold></highlight>. </paragraph>
<paragraph id="P-0658" lvl="0"><number>&lsqb;0658&rsqb;</number> Alternately, if direct telephone line access is rejected or unavailable, the source device generates a call route request packet at a block <highlight><bold>6009</bold></highlight>. Thereafter, the source device routes the request packet toward the root device of the spanning tree at the block <highlight><bold>6011</bold></highlight>, and awaits a reply packet at a block <highlight><bold>6013</bold></highlight>. </paragraph>
<paragraph id="P-0659" lvl="0"><number>&lsqb;0659&rsqb;</number> As described in relation to <cross-reference target="DRAWINGS">FIG. 59</cross-reference> above in more detail, as the call route request packet is routed toward a root device of the spanning tree, each intermediate access device along the route selectively supplements the route request packet with lowest cost routing information. Upon receipt of the packet, the root device also selectively supplements the call route request packet, converts the packet into a reply packet, and routes the reply packet back toward the source device. </paragraph>
<paragraph id="P-0660" lvl="0"><number>&lsqb;0660&rsqb;</number> Upon receiving the reply packet, at a block <highlight><bold>6015</bold></highlight> the source device examines the reply packet for voice session routing options. If no session options are available, the attempt is aborted at a block <highlight><bold>6021</bold></highlight>. If routing options are indicated, they are offered along with their associated costs at a block <highlight><bold>6017</bold></highlight>. If the user of the source device (or associated software) rejects the offered routes, the voice session is aborted as indicated at the block <highlight><bold>6021</bold></highlight>. If an offered route is accepted, the source device branches to perform call setup at the block <highlight><bold>6007</bold></highlight>. </paragraph>
<paragraph id="P-0661" lvl="0"><number>&lsqb;0661&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 61</cross-reference> is a flow diagram illustrating the functionality of the source device (or assisting access device) when performing call setup. The source device begins the setup functionality at a block <highlight><bold>6101</bold></highlight>. If the source device intends to deliver voice mail, as determined at a block <highlight><bold>6103</bold></highlight>, the source device prompts for the voice message and captures the message at a block <highlight><bold>6105</bold></highlight>. Once the voice message is captured, the source device waits at a block <highlight><bold>6107</bold></highlight> for a predetermined time period before attempting to deliver the captured voice message. During the wait, the source device may have queued up other voice messages such that they may all be processed in a time and money saving batch mode. In addition, while waiting, other voice sessions might be conducted, and, during such time, delivery of the captured and queued voice mail takes place. Thus, in effect, the delivery of voice mail messages can be delayed to optimize communication resources. In an alternate embodiment, voice mail is treated no differently than any other voice session. In addition, if the voice message cannot be delivered because the destination device is busy or otherwise unavailable, delivery is periodically reattempted. </paragraph>
<paragraph id="P-0662" lvl="0"><number>&lsqb;0662&rsqb;</number> Thus, to deliver voice mail or establish a real-time voice session, at a block <highlight><bold>6109</bold></highlight>, the source device generates and routes toward the destination device a call setup packet at a block <highlight><bold>6109</bold></highlight>, with the pathway for the routing having been defined by one of the routing options previously offered and selected. At a block <highlight><bold>6111</bold></highlight>, the source device waits for a response regarding the attempted setup. If a busy message is received, the source device concludes that the path is currently unavailable at a block <highlight><bold>6113</bold></highlight>, and delivers a busy signal to the user of the source device at a block <highlight><bold>6115</bold></highlight>. If the busy message results from a busy destination device, the source device concludes that no other pathway need be considered at a block <highlight><bold>6117</bold></highlight>, and ends the session setup attempt at a block <highlight><bold>6119</bold></highlight>. However, if the busy message indicates a busy pathway, the source device considers whether other pathways are available at the block <highlight><bold>6117</bold></highlight> through analysis of the previously received reply packet. If other pathways exist, the source device offers such other routes at the block <highlight><bold>6130</bold></highlight> to the user. If selected, the source device repeats the processing of the blocks <highlight><bold>6103</bold></highlight>-<highlight><bold>6117</bold></highlight> until either no other voice session paths are available, or the destination device or assisting access device responds with a ring message packet. </paragraph>
<paragraph id="P-0663" lvl="0"><number>&lsqb;0663&rsqb;</number> In particular, upon receiving a setup request packet, an available destination device (or assisting access device) responds by delivering a ring signal to the user, and by generating and routing a ring message packet toward the source device. Upon call pickup, the destination device (or assisting access device) generates and routes a connect packet toward the source device. </paragraph>
<paragraph id="P-0664" lvl="0"><number>&lsqb;0664&rsqb;</number> Thus, at the block <highlight><bold>6113</bold></highlight>, when the ring message packet is received, the source device responds in one embodiment at a block <highlight><bold>6121</bold></highlight> by attempting to adjust the queuing time of the audio information received. This is accomplished by sending a series of round trip test packets which are sent from the source to the destination and back while ringing is taking place so as to identify the approximate delay time of the network. The overall queue time consists of a worst case relay time plus a tolerance factor generated through statistical analysis of the mean and median of the test packet round trip times. However, in an alternate embodiment, a predetermined default queue time is selected, and no test packets are delivered. </paragraph>
<paragraph id="P-0665" lvl="0"><number>&lsqb;0665&rsqb;</number> At a block <highlight><bold>6123</bold></highlight>, the source device delivers a ringing signal to its user, indicating that the destination device is ringing. Thereafter, if the user of the source device happens to hang up, the voice session attempt ends at a block <highlight><bold>6127</bold></highlight>. Otherwise, the source device continues to indicate ringing at the destination device until a connect packet is received. Upon receipt of the connect packet, the source device concludes that the destination device has answered the call at a block <highlight><bold>6128</bold></highlight> and branches to begin voice session processing at a block <highlight><bold>6129</bold></highlight>, as further described below in reference to <cross-reference target="DRAWINGS">FIG. 62</cross-reference>. </paragraph>
<paragraph id="P-0666" lvl="0"><number>&lsqb;0666&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 62</cross-reference> is a flow diagram illustrating ongoing voice session processing performed by a source device (or its assisting access device if needed) and destination device (or its assisting access device if needed). </paragraph>
<paragraph id="P-0667" lvl="0"><number>&lsqb;0667&rsqb;</number> Once a connect message is generated, the destination device (or its assisting access device) enters the idle state <highlight><bold>6201</bold></highlight>. Upon receiving the connect message, the source device also enters the idle state at a block <highlight><bold>6201</bold></highlight>. </paragraph>
<paragraph id="P-0668" lvl="0"><number>&lsqb;0668&rsqb;</number> Any device waiting in an idle state at the block <highlight><bold>6201</bold></highlight> responds to several types of ongoing call processing events. If a voice packet is received as indicated by a block <highlight><bold>6203</bold></highlight>, the device queues up the incoming digital voice data contained within the voice packet, and thereafter returns to the idle state. </paragraph>
<paragraph id="P-0669" lvl="0"><number>&lsqb;0669&rsqb;</number> If the incoming queue contains queued up information, as indicated by a block <highlight><bold>6211</bold></highlight>, the device must consider whether full duplex operation is possible or not. To do so, at a block <highlight><bold>6213</bold></highlight>, the device first determines whether a potential conflict with outgoing voice information might occur. If no outgoing transmission is in progress, the device evaluates whether the queuing time is greater than a predetermined threshold value at a block <highlight><bold>6215</bold></highlight>. If it is greater, only half duplex communication is desired because the delay between the generation and playback of the incoming voice information in queue is so long that it might be detectable by the listener. In such circumstances, half duplex communication is preferred, therefore, at a block <highlight><bold>6217</bold></highlight>, an indication is provided to the user that half duplex communication being utilized, and the device reenters the idle state, to again vector through the event block <highlight><bold>6211</bold></highlight> and blocks <highlight><bold>6213</bold></highlight> and <highlight><bold>6215</bold></highlight> until the outgoing transmission ends. </paragraph>
<paragraph id="P-0670" lvl="0"><number>&lsqb;0670&rsqb;</number> If no outgoing transmission is taking place or the queue time is less than the predetermined queuing threshold, the device begins playback of the queued, digital voice information through D/A conversion at a block <highlight><bold>6219</bold></highlight>. If voice capture is detected, as indicated by a block <highlight><bold>6221</bold></highlight>, an A/D conversion, packetization and queuing process takes place at a block <highlight><bold>6223</bold></highlight>. Thereafter, the device reenters the idle state at the block <highlight><bold>6201</bold></highlight>, only to vector on an &ldquo;outgoing queue not empty&rdquo; event indicated by a block <highlight><bold>6225</bold></highlight>. At the block <highlight><bold>6225</bold></highlight>, the device vectors to a block <highlight><bold>6227</bold></highlight> to send a queued, outgoing voice/audio packet to the other device involved in the voice session exchange. After sending the voice packet, the device reenters the idle state at the block <highlight><bold>6201</bold></highlight>. </paragraph>
<paragraph id="P-0671" lvl="0"><number>&lsqb;0671&rsqb;</number> If a local hang is detected, as indicated at an event block <highlight><bold>6231</bold></highlight>, the device sends a remote hangup packet to the other participating device at a block <highlight><bold>6233</bold></highlight>, and ends the voice session at a block <highlight><bold>6239</bold></highlight>. If a remote hangup packet is detected by the device while in the idle state, as indicated by an event block <highlight><bold>6235</bold></highlight>, the device delivers a click and dial tone to the user at a block <highlight><bold>6237</bold></highlight>, and also ends the voice session at the block <highlight><bold>6239</bold></highlight>. </paragraph>
<paragraph id="P-0672" lvl="0"><number>&lsqb;0672&rsqb;</number> Finally, if an error in the queuing time is detected, as indicated by an event block <highlight><bold>6241</bold></highlight>, the queuing time is adjusted at a block <highlight><bold>6243</bold></highlight> before reentering the idle state at the block <highlight><bold>6201</bold></highlight>. In particular, if the selected &ldquo;preset&rdquo; queuing time for storing incoming signals proves to be too short, the queue time is adjusted up to avoid clicking sounds associated with gaps in incoming voice signals. However, the adjusted queuing time is only implemented with future groups of voice packets, i.e., not the current group. </paragraph>
<paragraph id="P-0673" lvl="0"><number>&lsqb;0673&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 63</cross-reference> is a diagram which illustrates further application of the present invention in an embodiment which transparently utilizes internet connectivity to support low-cost voice sessions. In particular, as with convention internet services, personal computers <highlight><bold>6301</bold></highlight> and <highlight><bold>6303</bold></highlight> participate on internet via dial up service to internet providers <highlight><bold>6305</bold></highlight> and <highlight><bold>6307</bold></highlight>, respectively. Such service providers typically require the computers <highlight><bold>6301</bold></highlight> and <highlight><bold>6303</bold></highlight> to communicate via modem through a telephone line, such as telephone lines <highlight><bold>6309</bold></highlight> and <highlight><bold>6311</bold></highlight> via a TCP/IP protocol. </paragraph>
<paragraph id="P-0674" lvl="0"><number>&lsqb;0674&rsqb;</number> The internet providers <highlight><bold>6305</bold></highlight> and <highlight><bold>6307</bold></highlight> participate along with other providers and participants in an overall network of internet servers and routers, as represented by a block <highlight><bold>6315</bold></highlight>. The internet functions as a distributed information source which can be accessed by either of the computers <highlight><bold>6301</bold></highlight> or <highlight><bold>6303</bold></highlight>. In addition, internet provides a pathway for exchanging data between the computers <highlight><bold>6301</bold></highlight> and <highlight><bold>6303</bold></highlight>. </paragraph>
<paragraph id="P-0675" lvl="0"><number>&lsqb;0675&rsqb;</number> Beyond the typical internet functionality, the computers <highlight><bold>6301</bold></highlight> and <highlight><bold>6303</bold></highlight> are also configured with a computer card such as the card <highlight><bold>5601</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 56</cross-reference><highlight><italic>a </italic></highlight>so that they can also handle voice sessioning. In addition, a two-line telephone <highlight><bold>6321</bold></highlight> is also provided with a first line attached to the computer card and a second line to a telephone line <highlight><bold>6325</bold></highlight>. Via the telephone line <highlight><bold>6325</bold></highlight>, which attaches to a conventional telephone switching network (not shown), the telephone <highlight><bold>6321</bold></highlight> provides typical dialing functionality outside of the internet network. On the first line, the telephone <highlight><bold>6321</bold></highlight> interfaces with the computer card in the computer <highlight><bold>6301</bold></highlight> to place phone calls through the internet. </paragraph>
<paragraph id="P-0676" lvl="0"><number>&lsqb;0676&rsqb;</number> Similarly, a single-line telephone <highlight><bold>6323</bold></highlight> is also attached to computer card such as the card <highlight><bold>5601</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 56</cross-reference><highlight><italic>a. </italic></highlight>Through interfacing with the computer card within the computer <highlight><bold>6303</bold></highlight>, the telephone <highlight><bold>6323</bold></highlight> can place calls either through a conventional telephone network via a telephone line <highlight><bold>6327</bold></highlight> or through the internet network via the telephone line <highlight><bold>6311</bold></highlight>. </paragraph>
<paragraph id="P-0677" lvl="0"><number>&lsqb;0677&rsqb;</number> More specifically, to communicate from the telephone <highlight><bold>6321</bold></highlight> to the telephone <highlight><bold>6323</bold></highlight>, the user first picks up the telephone <highlight><bold>6321</bold></highlight>. If the user selects the first line, the telephone <highlight><bold>6321</bold></highlight> receives a dial tone and further conventional call processing via the telephone line <highlight><bold>6325</bold></highlight>. For example, the user of the telephone <highlight><bold>6321</bold></highlight> could dial the telephone number of the telephone <highlight><bold>6323</bold></highlight> in a conventional manner. The computer <highlight><bold>6303</bold></highlight> would detect the incoming call ringing signals and directly interconnect the telephone <highlight><bold>6323</bold></highlight> with the telephone line <highlight><bold>6327</bold></highlight>. Subsequent call processing would be left to that provided via the conventional phone service. </paragraph>
<paragraph id="P-0678" lvl="0"><number>&lsqb;0678&rsqb;</number> Alternatively, if the user of the telephone <highlight><bold>6321</bold></highlight> selects the first line, the computer <highlight><bold>6301</bold></highlight> delivers (via its computer card) an internet dial message. The message prompts for the normal telephone number of the destination device (i.e., the telephone <highlight><bold>6323</bold></highlight>). In response, the computer <highlight><bold>6301</bold></highlight> attempts to identify (from the telephone number entered) an internet address which is used for routing information through the internet network. To perform this task, the computer <highlight><bold>6301</bold></highlight> uses an internet/telephone number, cross-reference database which contains various telephone numbers and associates therewith corresponding internet addresses. </paragraph>
<paragraph id="P-0679" lvl="0"><number>&lsqb;0679&rsqb;</number> If the computer <highlight><bold>6301</bold></highlight> fails to identify the corresponding internet address, a phone message prompts for entry of that internet address via the computer <highlight><bold>6301</bold></highlight> into the cross-reference database. Upon successful identification of the internet address, the computer <highlight><bold>6301</bold></highlight> communicates via the internet network (i.e., the provider <highlight><bold>6305</bold></highlight>, routing network <highlight><bold>6315</bold></highlight> and the provider <highlight><bold>6307</bold></highlight>) and to the computer <highlight><bold>6303</bold></highlight> a message indicating the desire to establish a voice session (hereafter a &ldquo;connection request&rdquo;). </paragraph>
<paragraph id="P-0680" lvl="0"><number>&lsqb;0680&rsqb;</number> If the computer <highlight><bold>6303</bold></highlight> is not connected to the internet provider <highlight><bold>6307</bold></highlight> (i.e., &ldquo;offline&rdquo;) at the time of the connection request, the computer <highlight><bold>6301</bold></highlight> will receive no response and timeout. The computer <highlight><bold>6301</bold></highlight> then sends a voice message to the telephone <highlight><bold>6321</bold></highlight> indicating that the telephone <highlight><bold>6323</bold></highlight> is offline. Otherwise, if the computer <highlight><bold>6303</bold></highlight> is online, the computer receives the connection request and checks to see if the telephone <highlight><bold>6323</bold></highlight> is currently available. </paragraph>
<paragraph id="P-0681" lvl="0"><number>&lsqb;0681&rsqb;</number> If the telephone <highlight><bold>6323</bold></highlight> is currently engaged in another call, the computer <highlight><bold>6303</bold></highlight> responds by delivering a busy message through the internet network to the computer <highlight><bold>6301</bold></highlight>. Upon receipt of the busy message, the computer <highlight><bold>6301</bold></highlight> delivers a busy tone signal to the telephone <highlight><bold>6321</bold></highlight>. Alternatively, if the telephone <highlight><bold>6323</bold></highlight> is not engaged, the computer <highlight><bold>6303</bold></highlight> responds to the connection request by delivering a ring signal to the telephone <highlight><bold>6323</bold></highlight>. The computer <highlight><bold>6303</bold></highlight> also responds by delivering a ringing message through the internet network to the computer <highlight><bold>6301</bold></highlight>. Upon receipt of the ringing message, the computer <highlight><bold>6301</bold></highlight> delivers a ring signal to the telephone <highlight><bold>6321</bold></highlight>. </paragraph>
<paragraph id="P-0682" lvl="0"><number>&lsqb;0682&rsqb;</number> If the user hangs up the telephone <highlight><bold>6321</bold></highlight> before the call is connected, the computer <highlight><bold>6301</bold></highlight> detects the hang and sends a hang up message to the computer <highlight><bold>6303</bold></highlight>. In response, the computer <highlight><bold>6303</bold></highlight> aborts the delivery of the ringing signals to the telephone <highlight><bold>6323</bold></highlight>, ending the voice session setup attempt. </paragraph>
<paragraph id="P-0683" lvl="0"><number>&lsqb;0683&rsqb;</number> If the user of the telephone <highlight><bold>6323</bold></highlight> picks up the telephone, the computer <highlight><bold>6303</bold></highlight> responds by sending a message to the computer <highlight><bold>6301</bold></highlight> via the internet network indicating that a connection has been established. Thereafter, the computer <highlight><bold>6303</bold></highlight> begins compressing and packetizing voice signals captured by the telephone <highlight><bold>6323</bold></highlight> for delivery to the telephone <highlight><bold>6321</bold></highlight> via the internet network. Similarly, upon receiving the message indicating that a connection has been established, the computer <highlight><bold>6301</bold></highlight> also begins compressing and packetizing voice signals captured by the telephone <highlight><bold>6321</bold></highlight>. </paragraph>
<paragraph id="P-0684" lvl="0"><number>&lsqb;0684&rsqb;</number> Both of the computers <highlight><bold>6301</bold></highlight> and <highlight><bold>6303</bold></highlight> begin exchanging the voice packets as they are generated via the internet network. The computers <highlight><bold>6301</bold></highlight> and <highlight><bold>6303</bold></highlight> queue up received voice packets before beginning playback to the telephones <highlight><bold>6321</bold></highlight> and <highlight><bold>6323</bold></highlight>, respectively, to attempt to prevent gaps in the delivered voice signals due to the pseudo random delivery time associated with a given voice packet. </paragraph>
<paragraph id="P-0685" lvl="0"><number>&lsqb;0685&rsqb;</number> During the course of the ongoing voice session, if a hang up is detected by one of the computers <highlight><bold>6301</bold></highlight> or <highlight><bold>6303</bold></highlight>, the detecting computer sends a hang message to the other computer. Upon receipt of the hang message, the other computer delivers a dial tone to its corresponding telephone. </paragraph>
<paragraph id="P-0686" lvl="0"><number>&lsqb;0686&rsqb;</number> Calls originating from the telephone <highlight><bold>6323</bold></highlight> to the telephone <highlight><bold>6321</bold></highlight> operate nearly the same except during initial call route selection. Upon a user&apos;s pickup of the telephone <highlight><bold>6323</bold></highlight> to place a call, the computer <highlight><bold>6303</bold></highlight> responds by delivering a dial tone to the telephone <highlight><bold>6323</bold></highlight>. The computer <highlight><bold>6303</bold></highlight> then waits for the user entry of a telephone number (in this case the number of the telephone <highlight><bold>6321</bold></highlight>). Upon receipt of the telephone number, the computer <highlight><bold>6323</bold></highlight> checks for an internet address in its cross reference database. If an internet address is found, the computer <highlight><bold>6303</bold></highlight> (via its computer card) delivers a voice message to the telephone <highlight><bold>6323</bold></highlight> prompting the user to select (via a keypad on the telephone <highlight><bold>6323</bold></highlight>) either internet or telephone switching system routing. If the user selects telephone switching system routing, the computer <highlight><bold>6303</bold></highlight> accesses the telephone line <highlight><bold>6331</bold></highlight>, awaits a dial tone, dials the entered number, and, thereafter, connects the telephone <highlight><bold>6323</bold></highlight> directly to the telephone line <highlight><bold>6327</bold></highlight>. At that point, the telephone <highlight><bold>6323</bold></highlight> interacts with basic call model processing associated with the telephone switching network. </paragraph>
<paragraph id="P-0687" lvl="0"><number>&lsqb;0687&rsqb;</number> Otherwise, if the user selects internet routing, the computer <highlight><bold>6303</bold></highlight> begins the internet connect processing described above in relation to initiation of an internet call from the telephone <highlight><bold>6321</bold></highlight> to the telephone <highlight><bold>6323</bold></highlight>. </paragraph>
<paragraph id="P-0688" lvl="0"><number>&lsqb;0688&rsqb;</number> Thus, voice sessions between the telephones <highlight><bold>6301</bold></highlight> and <highlight><bold>6303</bold></highlight> take place either over the conventional telephone switching network or through the internet. Operation through internet is virtually transparent with one exception. If the queuing time delay through the internet network proves to take too long (i.e., the delay is detectable by the users), the computers <highlight><bold>6301</bold></highlight> and <highlight><bold>6303</bold></highlight> can negotiate a half duplex mode of voice communication similar to that found in the speaker phone operation of conventional telephones. </paragraph>
<paragraph id="P-0689" lvl="0"><number>&lsqb;0689&rsqb;</number> In addition, the computers <highlight><bold>6301</bold></highlight> and <highlight><bold>6303</bold></highlight> both attempt to identify and filter captured audio during periods of time in which voice audio is not occuring, attempting to minimize overall bandwidth usage. </paragraph>
<paragraph id="P-0690" lvl="0"><number>&lsqb;0690&rsqb;</number> In addition, a computer need not be present to provide the end user with voice session transport via internet. For example, as illustrated, in one embodiment, a conventional telephone <highlight><bold>6331</bold></highlight> is attached to a conventional telephone switching network via a telephone line <highlight><bold>6335</bold></highlight>. Thus, the telephone <highlight><bold>6331</bold></highlight> can establish and maintain voice sessions through conventional means with, for example, the telephone <highlight><bold>6323</bold></highlight> via the telephone line <highlight><bold>6327</bold></highlight>. </paragraph>
<paragraph id="P-0691" lvl="0"><number>&lsqb;0691&rsqb;</number> Similarly, to place a call from the telephone <highlight><bold>6323</bold></highlight> to the telephone <highlight><bold>6331</bold></highlight>, conventional telephone switching network interconnection may be established via the telephone lines <highlight><bold>6327</bold></highlight> and <highlight><bold>6335</bold></highlight>. The telephone <highlight><bold>6323</bold></highlight> may also place a call to the telephone <highlight><bold>6331</bold></highlight> via the internet network. Specifically, upon detecting pickup, the computer <highlight><bold>6303</bold></highlight> delivers a dial tone to the telephone <highlight><bold>6323</bold></highlight>. Upon detecting the dialed number of the telephone <highlight><bold>6331</bold></highlight>, the computer <highlight><bold>6303</bold></highlight> consults its cross-reference database to attempt to identify an internet address. If an exact internet address cannot be found, the computer <highlight><bold>6303</bold></highlight> uses the country code/area code of the entered phone number to attempt to locate a call server somewhere near the telephone <highlight><bold>6331</bold></highlight> (so as to minimize telephone switching network charges). In particular, the computer <highlight><bold>6303</bold></highlight> uses the entered country code/area code to identify the internet address of an access device <highlight><bold>6333</bold></highlight> maintained by an internet provider which, for example, happens to be in the same local calling area as the telephone <highlight><bold>6331</bold></highlight> (although remotely located from the telephone <highlight><bold>6331</bold></highlight>). The computer <highlight><bold>6307</bold></highlight> then sends a connect request containing the telephone number of the telephone <highlight><bold>6331</bold></highlight> to the internet address of the access device <highlight><bold>6333</bold></highlight>. In response, the access device <highlight><bold>6333</bold></highlight> responds by gaining access to the conventional telephone switching network, dialing the number of the telephone <highlight><bold>6331</bold></highlight> and sending appropriate messages to the computer <highlight><bold>6303</bold></highlight> regarding the status of the call. </paragraph>
<paragraph id="P-0692" lvl="0"><number>&lsqb;0692&rsqb;</number> Particularly, if the telephone <highlight><bold>6331</bold></highlight> is engaged, the access device <highlight><bold>6333</bold></highlight> releases the telephone line and sends a busy message to the computer <highlight><bold>6303</bold></highlight>. In response, the computer <highlight><bold>6303</bold></highlight> delivers a busy signal to the telephone <highlight><bold>6323</bold></highlight>. Similarly, if the access device detects that the telephone <highlight><bold>6331</bold></highlight> is ringing, it awaits pickup and delivers a ringing message via internet to the computer <highlight><bold>6303</bold></highlight>. The computer <highlight><bold>6303</bold></highlight> responds by delivering a ring signal to the telephone <highlight><bold>6323</bold></highlight>. </paragraph>
<paragraph id="P-0693" lvl="0"><number>&lsqb;0693&rsqb;</number> If the telephone <highlight><bold>6331</bold></highlight> is answered, the access device <highlight><bold>6333</bold></highlight> indicates such an event by sending a connect established message to the computer <highlight><bold>6303</bold></highlight> via internet. Thereafter, the access device begins packetizing voice signals from the telephone <highlight><bold>6331</bold></highlight>. The access device sends resulting voice packets through the internet network to the computer <highlight><bold>6303</bold></highlight>. The computer <highlight><bold>6303</bold></highlight> also begins packetizing voice captured by the telephone <highlight><bold>6323</bold></highlight> and sending the resulting voice packets through the internet network to the access device <highlight><bold>6333</bold></highlight>. </paragraph>
<paragraph id="P-0694" lvl="0"><number>&lsqb;0694&rsqb;</number> Both the access device <highlight><bold>6333</bold></highlight> and the computer <highlight><bold>6303</bold></highlight> attempt to filter periods of non-voice time periods. Similarly, both queue up incoming voice packets to take into consideration packet delivery delays within the internet network. Thus, as can be appreciated, the access device <highlight><bold>6333</bold></highlight> comprises rather conventional internet server functionality having at least one available outside telephone line through which call processing can be maintained. </paragraph>
<paragraph id="P-0695" lvl="0"><number>&lsqb;0695&rsqb;</number> The access device <highlight><bold>6333</bold></highlight> further comprises call processing circuitry such as is shown in <cross-reference target="DRAWINGS">FIG. 56</cross-reference><highlight><italic>a </italic></highlight>for adapting voice information for transport between internet network and the telephone switching network. Such circuit functionality is also described in more detail in reference to <cross-reference target="DRAWINGS">FIG. 56</cross-reference><highlight><italic>a </italic></highlight>above. </paragraph>
<paragraph id="P-0696" lvl="0"><number>&lsqb;0696&rsqb;</number> Moreover, the functionality mentioned in reference to the configuration of <cross-reference target="DRAWINGS">FIG. 63</cross-reference> is merely a further embodiment of the flow diagrams of the previous FIGS. <highlight><bold>59</bold></highlight>-<highlight><bold>62</bold></highlight>. </paragraph>
<paragraph id="P-0697" lvl="0"><number>&lsqb;0697&rsqb;</number> Thus, the present invention has been described herein with reference to particular embodiments for particular applications. However, it will be apparent to one skilled in the art having read the foregoing that various modifications, variations and applications of this communication system according to the present invention are possible and is intended to include all those which are covered by the appended claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">We claim: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A communication network operating to support voice and data communication within a premises, said communication network comprising: 
<claim-text>a plurality of mobile network devices having a buffer that stores incoming digital voice information for a predetermined queuing period before beginning voice reproduction from the stored digital voice information; </claim-text>
<claim-text>a stationary network device; </claim-text>
<claim-text>a wireless network that is used by each of said plurality of mobile network devices to selectively exchange voice and data packets with others of the plurality of mobile network devices; </claim-text>
<claim-text>a hardwired network connected to both said stationary network device and said wireless network; </claim-text>
<claim-text>said hardwired network being used to route voice and data packets between said stationary network device and said plurality of mobile network devices which participate via said wireless network; </claim-text>
<claim-text>a telephone, connected to said stationary network device, that captures, delivers, receives and reproduces voice in an analog voice stream form; </claim-text>
<claim-text>said stationary network device having a buffer that stores digital voice information received from said wireless network for a predetermined queuing period before converting the stored digital voice information into an analog voice stream and delivering the analog voice stream to said telephone; and </claim-text>
<claim-text>said stationary network device converts analog voice streams received from said telephone into voice packets for delivery via said hardwired and wireless networks to a selected one of said plurality of mobile network devices. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the predetermined queuing period is determined through examining delays found in test signal routing. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said stationary network device is a computer. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said wireless network utilizes a polling protocol and spanning tree routing. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said stationary network device provides call setup assistance for said telephone. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising: 
<claim-text>a telephone switching network connected to said stationary network device; and </claim-text>
<claim-text>said stationary network device selectively routes analog voice streams received from said telephone onto said telephone switching network, and said stationary network device selectively routes analog voice streams received from said telephone switching network to said telephone. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A communication network located within a premises for supporting voice and data exchanges, said communication network comprising: 
<claim-text>a plurality of portable terminals, each having a wireless transceiver; </claim-text>
<claim-text>each of said plurality of portable terminals capture voice in an analog voice stream form and generate therefrom digital voice packets, and each of said plurality of portable terminals receive digital voice packets, generate therefrom analog voice streams, and reproduce voice from the analog voice streams; </claim-text>
<claim-text>each of said plurality of portable terminals capture data and generate therefrom data packets, and each of said plurality of portable terminals receive data packets and reproduce data from the data packets received; </claim-text>
<claim-text>a plurality of access devices, each having a wireless transceiver; and </claim-text>
<claim-text>said plurality of access devices using a polling protocol to manage wireless routing of data and voice packets within the premises among said plurality of portable terminals. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein said plurality of access devices utilize spanning tree routing for both data and voice packets. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> further comprising: 
<claim-text>a telephone, connected to one of said plurality of access devices, that captures, delivers, receives and reproduces voice in an analog voice stream form; </claim-text>
<claim-text>said one of said plurality of access devices selectively converting digital voice packets received into an analog voice stream for delivery to said telephone for reproduction; and </claim-text>
<claim-text>said one of said plurality of access devices selectively converting analog voice streams received from said telephone into digital voice packets for delivery to one of said plurality of portable terminals. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> further comprising: 
<claim-text>a telephone switching network connected to said one of said plurality of access devices; </claim-text>
<claim-text>said one of said plurality of access devices selectively routes analog voice streams received from said telephone through said telephone switching network; and </claim-text>
<claim-text>said one of said plurality of access devices selectively routes analog voice streams received from said telephone switching network to said telephone. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein said one of said access devices provides call setup assistance for said telephone. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein said one of said access devices stores incoming digital voice packets for a queuing time period before converting the digital voice packets into an analog voice stream form. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> further comprising: 
<claim-text>a telephone switching network connected to one of said plurality of access devices; </claim-text>
<claim-text>said one of said plurality of access devices selectively converts digital voice packets received into an analog voice stream form for routing through said telephone switching network; and </claim-text>
<claim-text>said one of said plurality of access devices selectively converts analog voice streams received from said telephone switching network into digital voice packets for routing to select ones of said plurality of portable terminals. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference> wherein said one of said access devices selectively provides call setup assistance to interface with said telephone switching network. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A communication network for supporting voice exchanges, said communication network comprising: 
<claim-text>a voice stream network that selectively routes voice signals captured in an analog voice stream form; </claim-text>
<claim-text>a voice packet network, independent of said first network, that selectively routes voice in a digital voice packet form; </claim-text>
<claim-text>a first network device that captures and delivers voice in the analog voice streams form, and said first network device receives and reproduces voice from the analog voice stream form; </claim-text>
<claim-text>a second network device, independent of said first network device, that communicatively couples with said first network device to receive and deliver voice in the analog voice stream form; </claim-text>
<claim-text>said second network device selectively interfaces with said voice stream network to receive and route voice for said first network device in the analog voice stream form; </claim-text>
<claim-text>said second network device selectively interfaces with said voice packet network to receive and route voice for said first network device in the digital voice packet form; and </claim-text>
<claim-text>said second network device converts voice between the analog voice stream form and the digital voice packet form when needed for routing voice between said first network device and said voice packet network. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein said voice stream network comprising a telephone switching network. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> wherein said voice packet network uses a polling protocol and incorporates spanning tree routing. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein said first network device is a telephone that captures, delivers, receives and reproduces voice in an analog voice stream form. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference> wherein said second network device is a computer. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein said first network device is a telephone that captures, delivers, receives and reproduces voice in an analog voice stream form, and said voice packet network comprises an internet switching network. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The communication network of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein said second network device is a n access device.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1B</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002482A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002482A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002482A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002482A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002482A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002482A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002482A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002482A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002482A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002482A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002482A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002482A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002482A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030002482A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030002482A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030002482A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030002482A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030002482A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030002482A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030002482A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030002482A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030002482A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030002482A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030002482A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030002482A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030002482A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00026">
<image id="EMI-D00026" file="US20030002482A1-20030102-D00026.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00027">
<image id="EMI-D00027" file="US20030002482A1-20030102-D00027.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00028">
<image id="EMI-D00028" file="US20030002482A1-20030102-D00028.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00029">
<image id="EMI-D00029" file="US20030002482A1-20030102-D00029.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00030">
<image id="EMI-D00030" file="US20030002482A1-20030102-D00030.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00031">
<image id="EMI-D00031" file="US20030002482A1-20030102-D00031.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00032">
<image id="EMI-D00032" file="US20030002482A1-20030102-D00032.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00033">
<image id="EMI-D00033" file="US20030002482A1-20030102-D00033.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00034">
<image id="EMI-D00034" file="US20030002482A1-20030102-D00034.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00035">
<image id="EMI-D00035" file="US20030002482A1-20030102-D00035.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00036">
<image id="EMI-D00036" file="US20030002482A1-20030102-D00036.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00037">
<image id="EMI-D00037" file="US20030002482A1-20030102-D00037.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00038">
<image id="EMI-D00038" file="US20030002482A1-20030102-D00038.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00039">
<image id="EMI-D00039" file="US20030002482A1-20030102-D00039.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00040">
<image id="EMI-D00040" file="US20030002482A1-20030102-D00040.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00041">
<image id="EMI-D00041" file="US20030002482A1-20030102-D00041.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00042">
<image id="EMI-D00042" file="US20030002482A1-20030102-D00042.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00043">
<image id="EMI-D00043" file="US20030002482A1-20030102-D00043.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00044">
<image id="EMI-D00044" file="US20030002482A1-20030102-D00044.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00045">
<image id="EMI-D00045" file="US20030002482A1-20030102-D00045.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00046">
<image id="EMI-D00046" file="US20030002482A1-20030102-D00046.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00047">
<image id="EMI-D00047" file="US20030002482A1-20030102-D00047.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00048">
<image id="EMI-D00048" file="US20030002482A1-20030102-D00048.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00049">
<image id="EMI-D00049" file="US20030002482A1-20030102-D00049.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00050">
<image id="EMI-D00050" file="US20030002482A1-20030102-D00050.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00051">
<image id="EMI-D00051" file="US20030002482A1-20030102-D00051.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00052">
<image id="EMI-D00052" file="US20030002482A1-20030102-D00052.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00053">
<image id="EMI-D00053" file="US20030002482A1-20030102-D00053.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00054">
<image id="EMI-D00054" file="US20030002482A1-20030102-D00054.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00055">
<image id="EMI-D00055" file="US20030002482A1-20030102-D00055.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00056">
<image id="EMI-D00056" file="US20030002482A1-20030102-D00056.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00057">
<image id="EMI-D00057" file="US20030002482A1-20030102-D00057.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00058">
<image id="EMI-D00058" file="US20030002482A1-20030102-D00058.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00059">
<image id="EMI-D00059" file="US20030002482A1-20030102-D00059.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00060">
<image id="EMI-D00060" file="US20030002482A1-20030102-D00060.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00061">
<image id="EMI-D00061" file="US20030002482A1-20030102-D00061.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00062">
<image id="EMI-D00062" file="US20030002482A1-20030102-D00062.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00063">
<image id="EMI-D00063" file="US20030002482A1-20030102-D00063.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00064">
<image id="EMI-D00064" file="US20030002482A1-20030102-D00064.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00065">
<image id="EMI-D00065" file="US20030002482A1-20030102-D00065.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00066">
<image id="EMI-D00066" file="US20030002482A1-20030102-D00066.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00067">
<image id="EMI-D00067" file="US20030002482A1-20030102-D00067.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00068">
<image id="EMI-D00068" file="US20030002482A1-20030102-D00068.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00069">
<image id="EMI-D00069" file="US20030002482A1-20030102-D00069.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00070">
<image id="EMI-D00070" file="US20030002482A1-20030102-D00070.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00071">
<image id="EMI-D00071" file="US20030002482A1-20030102-D00071.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00072">
<image id="EMI-D00072" file="US20030002482A1-20030102-D00072.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00073">
<image id="EMI-D00073" file="US20030002482A1-20030102-D00073.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00074">
<image id="EMI-D00074" file="US20030002482A1-20030102-D00074.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00075">
<image id="EMI-D00075" file="US20030002482A1-20030102-D00075.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00076">
<image id="EMI-D00076" file="US20030002482A1-20030102-D00076.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00077">
<image id="EMI-D00077" file="US20030002482A1-20030102-D00077.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00078">
<image id="EMI-D00078" file="US20030002482A1-20030102-D00078.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00079">
<image id="EMI-D00079" file="US20030002482A1-20030102-D00079.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00080">
<image id="EMI-D00080" file="US20030002482A1-20030102-D00080.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
