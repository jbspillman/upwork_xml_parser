<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030000293A1-20030102-D00000.TIF SYSTEM "US20030000293A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030000293A1-20030102-D00001.TIF SYSTEM "US20030000293A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030000293A1-20030102-D00002.TIF SYSTEM "US20030000293A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030000293A1-20030102-D00003.TIF SYSTEM "US20030000293A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030000293A1-20030102-D00004.TIF SYSTEM "US20030000293A1-20030102-D00004.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030000293</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10143580</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020510</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G01M019/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>073</class>
<subclass>118100</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method for synchronizing a pulsetrain with engine cycle</title-of-invention>
</technical-information>
<continuity-data>
<non-provisional-of-provisional>
<document-id>
<doc-number>60299996</doc-number>
<document-date>20010621</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>William</given-name>
<middle-name>R.</middle-name>
<family-name>Robertson</family-name>
</name>
<residence>
<residence-us>
<city>Irondequoit</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Sergio</given-name>
<middle-name>Eduardo</middle-name>
<family-name>Garcia</family-name>
</name>
<residence>
<residence-us>
<city>Webster</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Kevin</given-name>
<middle-name>Michael</middle-name>
<family-name>Foley</family-name>
</name>
<residence>
<residence-us>
<city>Rochester</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>DELPHI TECHNOLOGIES, INC.</name-1>
<name-2>Legal Staff</name-2>
<address>
<address-1>Mail Code: 480-410-202</address-1>
<address-2>P.O. Box 5052</address-2>
<city>Troy</city>
<state>MI</state>
<postalcode>48007-5052</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method of synchronizing a crankshaft signal with the stroke cycle of a four-stroke internal combustion engine induces misfiring in a specified engine cylinder, and uses an assumed synchronization to identify the misfiring cylinder. The crankshaft signal is used to identify reference angular positions of the crankshaft intermediate top dead center positions of consecutive cylinders of the engine firing order, and a time difference between successive reference positions is determined. When the assumed synchronization is such that the current rotation of the crankshaft includes the cylinder in which misfiring is induced, the determined time difference is accumulated in a first accumulator; otherwise, the determined time difference is accumulated in a second accumulator. The presence of misfiring causes the two accumulators to diverge in value, and the direction of such divergence is used to determine if the assumed synchronization is correct or incorrect. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">PRIOR APPLICATION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application claims the benefit of prior Provisional Patent Application Serial No. 60/299,996 filed Jun. 21, 2001.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">TECHNICAL FIELD </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This invention relates to a method of resolving engine cycle ambiguity in a crankshaft position signal of a four-stroke internal combustion engine. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The control of fuel and spark events (among others) in an internal combustion engine requires knowledge of the engine cycle position. A common approach with four-stroke engines is to develop a high resolution position signal based on rotation of the engine crankshaft (which rotates twice per engine cycle), and a low resolution position signal based on rotation of the engine camshaft (which rotates once per engine cycle). In this case, the high resolution crankshaft signal is used to time the fuel and spark, and the low-resolution camshaft signal is used to synchronize the crankshaft signal with the engine stroke cycle. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> While the above-described approach works well, various techniques have been developed to either eliminate the camshaft sensor or to provide a level of redundancy in case of a camshaft sensor failure. For example, in the U.S. Pat. No. 5,577,475 to De Backer et al., issued on Nov. 26, 1996, the engine controller assumes an initial crankshaft signal synchronization, supplies fuel to all but a specified one of the engine cylinders to induce misfiring the specified cylinder, and then monitors the engine speed based on the assumed synchronization to identify an acceleration spike attributable to misfiring. If the timing of the acceleration spike indicates that the specified cylinder is misfiring, the assumed synchronization is verified as correct; if the timing of the acceleration spike indicates that a cylinder opposite the specified cylinder is misfiring, incorrect synchronization is indicated, and the assumed synchronization is reversed. This approach can be used effectively, but the acceleration spike calculations are both time consuming and subject to noise-related error, particularly when the engine speed is changing during the induced misfiring. Accordingly, what is needed is a simpler and more reliable method of identifying an induced misfire. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The present invention is directed to an improved method of synchronizing a crankshaft signal with the stroke cycle of a four-stroke internal combustion engine by inducing full or partial misfiring in a specified engine cylinder, and using an assumed synchronization to identify the misfiring cylinder. According to the invention, the crankshaft signal is used to identify reference angular positions of the crankshaft intermediate top dead center positions of consecutive cylinders of the engine firing order, and a time difference between successive reference positions is determined. When the assumed synchronization is such that the current rotation of the crankshaft includes the cylinder in which misfiring is induced, the determined time difference is accumulated in a first accumulator; otherwise, the determined time difference is accumulated in a second accumulator. The presence of misfiring causes the two accumulators to diverge in value, and the direction of such divergence is used to determine if the assumed synchronization is correct or incorrect.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a schematic diagram of selected components of an engine control system according to this invention, including a crankshaft position sensor and a microprocessor-based engine control module. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a diagram of a toothed engine crank-wheel to which the crankshaft position sensor of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is responsive. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 3, 4</cross-reference> and <highlight><bold>5</bold></highlight> are flow diagrams representative of a software routine executed by the engine control module of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> when reference teeth of the engine crank-wheel pass the crankshaft position sensor. <cross-reference target="DRAWINGS">FIG. 3</cross-reference> depicts the routine in general, and <cross-reference target="DRAWINGS">FIG. 4</cross-reference> depicts a portion of the routine that determines if synchronization detection should be enabled, and <cross-reference target="DRAWINGS">FIG. 5</cross-reference> depicts a portion of the routine pertaining to identification of a misfiring engine cylinder based on an assumed crankshaft synchronization.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF THE PREFERRED EMBODIMENT </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The present invention is disclosed in the context of an engine control system including a four-stroke internal combustion engine generally designated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> by the reference numeral <highlight><bold>10</bold></highlight>. Referring to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the engine <highlight><bold>10</bold></highlight> includes a number of pistons <highlight><bold>12</bold></highlight> (only one of which is shown) which reciprocate in respective cylinders <highlight><bold>14</bold></highlight> and are connected to crankshaft <highlight><bold>16</bold></highlight>. The crankshaft <highlight><bold>16</bold></highlight> is connected to the crank-wheel <highlight><bold>18</bold></highlight>, which is mechanically coupled to a cam-wheel <highlight><bold>20</bold></highlight> by a belt or chain <highlight><bold>21</bold></highlight> so that the crank-wheel <highlight><bold>18</bold></highlight> and the cam-wheel <highlight><bold>20</bold></highlight> rotate synchronously. The cam-wheel <highlight><bold>20</bold></highlight> is connected to a camshaft <highlight><bold>22</bold></highlight>, which opens and closes a cylinder intake valve <highlight><bold>24</bold></highlight> through a mechanical linkage <highlight><bold>25</bold></highlight> in coordination with the movement of piston <highlight><bold>12</bold></highlight>. Intake air enters an intake manifold <highlight><bold>26</bold></highlight> through a throttle passage <highlight><bold>27</bold></highlight>, and is delivered to each of the cylinders <highlight><bold>14</bold></highlight> via a respective intake runner <highlight><bold>28</bold></highlight> and intake valve <highlight><bold>24</bold></highlight>. Obviously, engine <highlight><bold>10</bold></highlight> includes many other component parts that are also conventional and known in the state of the art to be part of an operational engine system. While the present invention is applicable to a variety of engine configurations, it will be assumed for purposes of the ensuing description that the engine <highlight><bold>10</bold></highlight> has four cylinders (designated herein as cylinders &num;<highlight><bold>1</bold></highlight>, &num;<highlight><bold>2</bold></highlight>, &num;<highlight><bold>3</bold></highlight> and &num;<highlight><bold>4</bold></highlight>), and that the cylinder firing order is <highlight><bold>1</bold></highlight>-<highlight><bold>3</bold></highlight>-<highlight><bold>4</bold></highlight>-<highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> A microprocessor-based engine control module (ECM) <highlight><bold>30</bold></highlight> controls the timing of various engine cycle-related events (including fuel injection and spark timing, for example) based on the output of a sensor <highlight><bold>32</bold></highlight> responsive to the rotation of crank-wheel <highlight><bold>18</bold></highlight>. Typically, the outer periphery of crank-wheel <highlight><bold>18</bold></highlight> is toothed, and the sensor <highlight><bold>32</bold></highlight> is a variable reluctance or similar sensor that produces an electrical pulse corresponding to the passage of each such tooth or edge thereof. <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates a representative crank-wheel <highlight><bold>18</bold></highlight>, having fifty-eight teeth and a notch <highlight><bold>34</bold></highlight> (that is two teeth in width) for identifying a predetermined crankshaft position. In the illustration, the crank-wheel teeth are numbered in clockwise sequence as shown, and the cylinder top dead center positions TDC<highlight><bold>1</bold></highlight>, TDC<highlight><bold>2</bold></highlight>, TDC<highlight><bold>3</bold></highlight> and TDC<highlight><bold>4</bold></highlight> for cylinders &num;<highlight><bold>1</bold></highlight>, &num;<highlight><bold>2</bold></highlight>, &num;<highlight><bold>3</bold></highlight> and &num;<highlight><bold>4</bold></highlight>, respectively, are achieved when specified teeth pass the sensor <highlight><bold>32</bold></highlight>. Since the crank-wheel <highlight><bold>18</bold></highlight> rotates twice per engine cycle, the top dead center events for two different cylinders are signified by a single crank-wheel tooth (TDC<highlight><bold>1</bold></highlight> and TDC<highlight><bold>4</bold></highlight> at tooth <highlight><bold>20</bold></highlight>, and TDC<highlight><bold>3</bold></highlight> and TDC<highlight><bold>2</bold></highlight> at tooth <highlight><bold>50</bold></highlight>), and ECM <highlight><bold>30</bold></highlight> has to synchronize the crankshaft position signal with the engine cycle in order to correctly determine which cylinder of each cylinder pair is in its compression stroke. As generally described in the U.S. Pat. No. 5,577,475 to De Backer et al., incorporated herein by reference, this can be achieved by assuming an initial synchronization, inducing a misfire in a specified engine cylinder, and then using the assumed synchronization to identify the misfiring cylinder based on crankshaft speed fluctuation. For example, ECM <highlight><bold>30</bold></highlight> can be programmed to assume that the first time tooth number <highlight><bold>20</bold></highlight> passes sensor <highlight><bold>32</bold></highlight> during engine cranking, cylinder &num;<highlight><bold>1</bold></highlight> is the compression stroke with its piston <highlight><bold>12</bold></highlight> in the top dead center position, and that cylinder &num;<highlight><bold>3</bold></highlight> is in the same state when tooth <highlight><bold>50</bold></highlight> passes sensor <highlight><bold>32</bold></highlight>. On the second passage of tooth number <highlight><bold>20</bold></highlight>, ECM <highlight><bold>30</bold></highlight> assumes that cylinder &num;<highlight><bold>4</bold></highlight> is in the compression stroke with its piston <highlight><bold>12</bold></highlight> in the top dead center position, and that cylinder &num;<highlight><bold>2</bold></highlight> is in the same state on the second passage of tooth <highlight><bold>50</bold></highlight>. When the crankshaft speed fluctuation indicates a misfire, the assumed synchronization of the crankshaft signal is used to identify which engine cylinder is misfiring. If the assumed synchronization is correct, the ECM <highlight><bold>30</bold></highlight> will identify the specified engine cylinder (say, cylinder &num;<highlight><bold>1</bold></highlight>) as the misfiring cylinder; if the assumed synchronization is incorrect, the ECM <highlight><bold>30</bold></highlight> will identify the opposing engine cylinder (that is, cylinder &num;<highlight><bold>4</bold></highlight>) as the misfiring cylinder. If the assumed synchronization is proven incorrect, it is reversed (phase-shifted by 180 camshaft degrees or 360 crankshaft degrees), whereupon the synchronization will be correct. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The present invention is directed to a method of processing engine speed fluctuations based on the assumed crankshaft synchronization in the presence of induced misfiring to simply and reliably determine if the assumed crankshaft synchronization is correct. To this end, the ECM <highlight><bold>30</bold></highlight> identifies reference crankshaft positions intermediate the cylinder top dead center positions, and records a timer value each time a reference position passes the sensor <highlight><bold>32</bold></highlight>. In the illustration of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the reference positions correspond to crank-wheel tooth numbers <highlight><bold>7</bold></highlight> and <highlight><bold>37</bold></highlight>, referred to herein as reference teeth. Three successively recorded timer values define two reference intervals, and after each passage of a reference tooth, ECM <highlight><bold>30</bold></highlight> uses the three most recent timer values to compute a difference in the two reference intervals. For example, if T<highlight><bold>1</bold></highlight>, T<highlight><bold>2</bold></highlight> and T<highlight><bold>3</bold></highlight> represent three successively recorded timer values defining a first reference interval between timer values T<highlight><bold>1</bold></highlight> and T<highlight><bold>2</bold></highlight>, and a second reference interval between timer values T<highlight><bold>2</bold></highlight> and T<highlight><bold>3</bold></highlight>, the difference D in the first and second reference intervals can be given by: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>D</italic></highlight>&equals;(<highlight><italic>T</italic></highlight><highlight><bold>3</bold></highlight>&minus;<highlight><italic>T</italic></highlight><highlight><bold>2</bold></highlight>)&minus;(<highlight><italic>T</italic></highlight><highlight><bold>2</bold></highlight>&minus;<highlight><italic>T</italic></highlight><highlight><bold>1</bold></highlight>)&equals;<highlight><italic>T</italic></highlight><highlight><bold>3</bold></highlight>&minus;(2*<highlight><italic>T</italic></highlight><highlight><bold>2</bold></highlight>)&plus;<highlight><italic>T</italic></highlight><highlight><bold>1</bold></highlight> &emsp;&emsp;(1) </in-line-formula></paragraph>
<paragraph id="P-0012" lvl="7"><number>&lsqb;0012&rsqb;</number> According to the invention, the ECM <highlight><bold>30</bold></highlight> accumulates the computed time differences in either first or second accumulator variables ACCUM<highlight><bold>1</bold></highlight> or ACCUM<highlight><bold>2</bold></highlight>. When the assumed crankshaft synchronization is such that the current rotation of crank-wheel <highlight><bold>18</bold></highlight> includes the cylinder in which misfiring is induced (cylinder &num;<highlight><bold>1</bold></highlight> in the illustrated embodiment), the time difference D is accumulated in ACCUM<highlight><bold>1</bold></highlight>; that is: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>ACCUM</italic></highlight><highlight><bold>1</bold></highlight>&equals;<highlight><italic>ACCUM</italic></highlight><highlight><bold>1</bold></highlight>&plus;<highlight><italic>D </italic></highlight>&emsp;&emsp;(2) </in-line-formula></paragraph>
<paragraph id="P-0013" lvl="7"><number>&lsqb;0013&rsqb;</number> When the current rotation of crank-wheel <highlight><bold>18</bold></highlight> does not include the cylinder in which misfiring is induced, the time difference D is accumulated in ACCUM<highlight><bold>2</bold></highlight>; that is: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>ACCUM</italic></highlight><highlight><bold>2</bold></highlight>&equals;<highlight><italic>ACCUM</italic></highlight><highlight><bold>2</bold></highlight>&plus;<highlight><italic>D </italic></highlight>&emsp;&emsp;(3) </in-line-formula></paragraph>
<paragraph id="P-0014" lvl="7"><number>&lsqb;0014&rsqb;</number> If the assumed synchronization is correct, the cyclic engine speed variation due to the misfiring will cause ACCUM<highlight><bold>1</bold></highlight> to become increasingly negative, and ACCUM<highlight><bold>2</bold></highlight> to become increasingly positive. If the assumed synchronization is incorrect, the cyclic engine speed variation due to the misfiring will cause ACCUM<highlight><bold>1</bold></highlight> to become increasingly positive, and ACCUM<highlight><bold>2</bold></highlight> to become increasingly negative. Non-cyclic engine speed variation, on the other hand, tends to affect ACCUM<highlight><bold>1</bold></highlight> and ACCUM<highlight><bold>2</bold></highlight> similarly. Thus, the presence of misfiring can be verified if the magnitude of the difference between ACCUM<highlight><bold>1</bold></highlight> and ACCUM<highlight><bold>2</bold></highlight>&mdash;&verbar;ACCUM<highlight><bold>2</bold></highlight>&minus;ACCUM<highlight><bold>1</bold></highlight>&verbar;&mdash; exceeds a threshold THR_DIFF, and the misfiring cylinder can be identified based on the magnitude and polarity of ACCUM<highlight><bold>1</bold></highlight> and ACCUM<highlight><bold>2</bold></highlight>. That is, the assumed synchronization is verified as correct if ACCUM<highlight><bold>2</bold></highlight> becomes more positive than a positive threshold THR_POS and ACCUM<highlight><bold>1</bold></highlight> becomes more negative than a negative threshold THR_NEG, and the assumed synchronization is determined to be incorrect if ACCUM<highlight><bold>1</bold></highlight> becomes more positive than THR_POS and ACCUM<highlight><bold>2</bold></highlight> becomes more negative than THR_NEG. However, empirically testing has shown that the misfiring cylinder can be reliably identified when just two of the three tests are satisfied, which further simplifies and expedites the method of this invention. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The above-described method is illustrated in further detail by the flow diagrams of FIGS. <highlight><bold>3</bold></highlight>-<highlight><bold>5</bold></highlight>, which depict a software routine that is executed by ECM <highlight><bold>30</bold></highlight> each time a reference tooth (tooth <highlight><bold>7</bold></highlight> or tooth <highlight><bold>37</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) of crank-wheel <highlight><bold>18</bold></highlight> passes the crankshaft position sensor <highlight><bold>32</bold></highlight>. The flow diagram of <cross-reference target="DRAWINGS">FIG. 3</cross-reference> depicts the routine in general, while <cross-reference target="DRAWINGS">FIG. 4</cross-reference> depicts a portion of the routine that determines if synchronization detection should be enabled, and <cross-reference target="DRAWINGS">FIG. 5</cross-reference> depicts a portion of the routine pertaining to identification of a misfiring engine cylinder based on an assumed crankshaft synchronization. Other background routines executed by ECM <highlight><bold>30</bold></highlight> initialize the various parameters and variables referred to herein at each off-to-on transition of the vehicle ignition switch, identify the crank-wheel notch <highlight><bold>34</bold></highlight>, and count the crank-wheel teeth. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the blocks <highlight><bold>102</bold></highlight>, <highlight><bold>104</bold></highlight> and <highlight><bold>106</bold></highlight> are executed to establish an assumed synchronization of crankshaft <highlight><bold>16</bold></highlight> during engine cranking. Prior to the first occurrence of reference tooth <highlight><bold>7</bold></highlight>, block <highlight><bold>102</bold></highlight> is answered in the negative, and the remainder of the routine is skipped. At the first occurrence of reference tooth <highlight><bold>7</bold></highlight>, blocks <highlight><bold>102</bold></highlight> and <highlight><bold>104</bold></highlight> are both answered in the affirmative, and block <highlight><bold>106</bold></highlight> establishes the assumed crankshaft synchronization by setting the variable ENGCYL to <highlight><bold>1</bold></highlight>, indicating that the compression stroke top dead center position for cylinder &num;<highlight><bold>1</bold></highlight> (i.e., TDC<highlight><bold>1</bold></highlight>) will occur at the next passage of tooth <highlight><bold>20</bold></highlight>. Of course, this is just one of two possibilities, as explained above. Thereafter, block <highlight><bold>104</bold></highlight> is answered in the negative, and the block <highlight><bold>105</bold></highlight> indexes ENGCYL to <highlight><bold>3</bold></highlight>, the next cylinder in the engine firing order. In subsequent executions of the routine, block <highlight><bold>105</bold></highlight> indexes ENGCYL to <highlight><bold>4</bold></highlight>, then to <highlight><bold>2</bold></highlight>, and then back to <highlight><bold>1</bold></highlight>, and so on. The block <highlight><bold>108</bold></highlight> then checks the status of the Sync_Reqd flag to determine if verification of the crankshaft synchronization is required; this flag is initially set to TRUE, so that block <highlight><bold>108</bold></highlight> is initially answered in the affirmative. In such case, the block <highlight><bold>110</bold></highlight> executes Sync_Enable logic (depicted in detail in the flow diagram of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>) for determining if synchronization verification is enabled. Initially, synchronization verification is typically not enabled (i.e., Enable flag&equals;False), and blocks <highlight><bold>112</bold></highlight> and <highlight><bold>114</bold></highlight> are answered in the negative, completing the routine. However, if synchronization verification is already in process (as indicated by the status of the Sync_In_Process flag, the blocks <highlight><bold>114</bold></highlight> and <highlight><bold>116</bold></highlight> re-initialize the sync verification variables. Once block <highlight><bold>110</bold></highlight> sets the Enable flag to True, the blocks <highlight><bold>118</bold></highlight>, <highlight><bold>120</bold></highlight> and <highlight><bold>122</bold></highlight> are executed to set the Sync_In_Process flag, to initialize the variable Sync_Ref at the current count of a reference counter REFCTR, and to set the Sync_Outputs flag to True. When the Sync_Outputs flag is True, a fuel control routine executed by ECM <highlight><bold>30</bold></highlight> interrupts the supply of fuel to a specified cylinder, cylinder &num;<highlight><bold>1</bold></highlight> in the illustrated embodiment. The block <highlight><bold>124</bold></highlight> then compares REFCTR to the sum (Sync_Ref&plus;K), where K is a calibration term. After a predetermined delay defined by the calibration term K, block <highlight><bold>124</bold></highlight> will be answered in the affirmative, and the Sync_Verification block <highlight><bold>126</bold></highlight> (depicted in detail in the flow diagram of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>) is executed to determine if the synchronization established at block <highlight><bold>106</bold></highlight> is correct. If the synchronization is correct, block <highlight><bold>128</bold></highlight> will be answered in the affirmative, and the blocks <highlight><bold>132</bold></highlight>, <highlight><bold>134</bold></highlight> and <highlight><bold>136</bold></highlight> are executed to enable sequential fuel control, and to set the Sync_Reqd and Sync_Outputs flags to False, completing the routine. Setting the Sync_Outputs flag to False restores the supply of fuel to the specified cylinder. If the synchronization is incorrect, block <highlight><bold>130</bold></highlight> is executed to reverse the assumed synchronization prior to the execution of blocks <highlight><bold>132</bold></highlight>, <highlight><bold>134</bold></highlight> and <highlight><bold>136</bold></highlight>. In the illustrated embodiment, this is simply achieved by indexing ENGCYL twice; for example, if ENGCYL is &num;<highlight><bold>1</bold></highlight>, block <highlight><bold>130</bold></highlight> indexes ENGCYL to &num;<highlight><bold>4</bold></highlight>. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The flow diagram of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> details the Sync Enable Logic block <highlight><bold>110</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. Referring to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the blocks <highlight><bold>140</bold></highlight>-<highlight><bold>156</bold></highlight> identify various powertrain operating conditions that potentially interfere with quick and reliable verification of the assumed crankshaft synchronization. The block <highlight><bold>140</bold></highlight> determines if the engine coolant temperature CT is higher than a minimum temperature CT_REF. The block <highlight><bold>142</bold></highlight> determines if the current count of the reference counter REFCTR is greater than an enable threshold EN_THR. The block <highlight><bold>144</bold></highlight> determines if the electronic fuel injection (INJ) and spark timing (EST) systems are functioning normally. The block <highlight><bold>146</bold></highlight> determines if a transition of the air conditioning (AC) compressor clutch is in process. The block <highlight><bold>148</bold></highlight> determines if a range change of the transmission is in process. The block <highlight><bold>150</bold></highlight> determines if an engine stall prevention function is active. The block <highlight><bold>152</bold></highlight> determines if the engine <highlight><bold>10</bold></highlight> is operating in a hot mode. The block <highlight><bold>154</bold></highlight> determines if power enrichment fueling of engine <highlight><bold>10</bold></highlight> is active. And finally, the block <highlight><bold>156</bold></highlight> determines if a catalytic converter protection mode is active. As indicated, the block <highlight><bold>158</bold></highlight> sets the Enable flag to True if blocks <highlight><bold>140</bold></highlight>-<highlight><bold>144</bold></highlight> are answered in the affirmative and blocks <highlight><bold>146</bold></highlight>-<highlight><bold>156</bold></highlight> are answered in the negative; otherwise block <highlight><bold>160</bold></highlight> sets the Enable flag to False. As a practical matter, the various tests identified by the blocks <highlight><bold>144</bold></highlight>-<highlight><bold>156</bold></highlight> are not appropriate for all vehicles, and certain of such tests may be de-selected by calibration. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The flow diagram of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> details the Sync Verification block <highlight><bold>126</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. Referring to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the blocks <highlight><bold>170</bold></highlight> and <highlight><bold>172</bold></highlight> are first executed to update the reference times T<highlight><bold>1</bold></highlight>, T<highlight><bold>2</bold></highlight> and T<highlight><bold>3</bold></highlight>, and to compute the time interval difference D according to equation (1). As indicated above, the reference times T<highlight><bold>1</bold></highlight>, T<highlight><bold>2</bold></highlight> and T<highlight><bold>3</bold></highlight> are clock or timer values corresponding to the passage of crank-wheel reference teeth <highlight><bold>7</bold></highlight> and <highlight><bold>37</bold></highlight> by the crankshaft sensor <highlight><bold>32</bold></highlight>, with T<highlight><bold>3</bold></highlight> being the most recent value. Thus, block <highlight><bold>170</bold></highlight> sets T<highlight><bold>1</bold></highlight> equal to the previous value of T<highlight><bold>2</bold></highlight>, T<highlight><bold>2</bold></highlight> to the previous value of T<highlight><bold>3</bold></highlight>, and T<highlight><bold>3</bold></highlight> to the current timer value. If the assumed synchronization has assigned the specified cylinder to the current rotation of crank-wheel <highlight><bold>18</bold></highlight> (that is, if ENGCYL is &num;<highlight><bold>1</bold></highlight> or &num;<highlight><bold>3</bold></highlight>), the block <highlight><bold>174</bold></highlight> is answered in the affirmative, and block <highlight><bold>175</bold></highlight> adds the time interval difference D to a first accumulator variable ACCUM<highlight><bold>1</bold></highlight>; otherwise, the block <highlight><bold>176</bold></highlight> adds the time interval difference D to a second accumulator variable ACCUM<highlight><bold>2</bold></highlight>. The block <highlight><bold>178</bold></highlight> then computes an accumulator difference ACCUM_DIFF according to the absolute value of (ACCUM<highlight><bold>2</bold></highlight>&minus;ACCUM<highlight><bold>1</bold></highlight>). As indicated above, the cyclic engine speed variation due to the induced misfiring of cylinder &num;<highlight><bold>1</bold></highlight> will cause ACCUM<highlight><bold>1</bold></highlight> to become increasingly negative, and ACCUM<highlight><bold>2</bold></highlight> to become increasingly positive if the assumed crankshaft synchronization is correct, and the opposite will occur if the assumed synchronization is incorrect. In either case, the divergence of ACCUM<highlight><bold>1</bold></highlight> and ACCUM<highlight><bold>2</bold></highlight> is represented by the accumulator difference ACCUM_DIFF. Thus, the function of the routine is to compare ACCUM<highlight><bold>1</bold></highlight>, ACCUM<highlight><bold>2</bold></highlight> and ACCUM_DIFF to positive, negative and difference thresholds THR_POS, THR_NEG and THR_DIFF, and to set the state of the Sync flag accordingly. If the assumed synchronization is correct, ACCUM<highlight><bold>2</bold></highlight> will become more positive than THR_POS, and ACCUM<highlight><bold>1</bold></highlight> will become more negative than THR_NEG; if the assumed synchronization is incorrect, ACCUM<highlight><bold>2</bold></highlight> will become more negative than THR_NEG and ACCUM<highlight><bold>1</bold></highlight> will become more positive than THR_POS. In both cases, ACCUM_DIFF will exceed THR_DIFF. While all three conditions can be used for synchronization verification, empirically testing has shown that synchronization verification can be reliably achieved when just two of the three conditions are met. In other words, if ACCUM_DIFF is greater than THR_DIFF and ACCUM<highlight><bold>2</bold></highlight> is more positive than THR_POS, reliable sync verification does not additionally require ECM <highlight><bold>30</bold></highlight> to confirm that ACCUM<highlight><bold>1</bold></highlight> is also more negative than THR_NEG. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The blocks <highlight><bold>180</bold></highlight>-<highlight><bold>210</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> carry out a two-out-of-three logical comparison of ACCUM<highlight><bold>1</bold></highlight>, ACCUM<highlight><bold>2</bold></highlight> and ACCUM_DIFF to the respective thresholds as described above. The block <highlight><bold>180</bold></highlight> compares ACCUM_DIFF to THR_DIFF. If ACCUM_DIFF exceeds THR_DIFF, the blocks <highlight><bold>182</bold></highlight>, <highlight><bold>184</bold></highlight>, <highlight><bold>188</bold></highlight>, <highlight><bold>190</bold></highlight>, <highlight><bold>192</bold></highlight> and <highlight><bold>194</bold></highlight> are executed to determine if one of ACCUM<highlight><bold>1</bold></highlight> and ACCUM<highlight><bold>2</bold></highlight> is respectively above or below THR_POS and THR_NEG. Thus, if blocks <highlight><bold>182</bold></highlight> and <highlight><bold>192</bold></highlight> determine that ACCUM<highlight><bold>2</bold></highlight> and not ACCUM<highlight><bold>1</bold></highlight> are more positive than THR_POS, block <highlight><bold>196</bold></highlight> is executed to set the Sync flag to True, indicating that the assumed synchronization is correct. Similarly, if blocks <highlight><bold>182</bold></highlight>, <highlight><bold>184</bold></highlight>, <highlight><bold>188</bold></highlight> and <highlight><bold>194</bold></highlight> determine that ACCUM<highlight><bold>1</bold></highlight> and not ACCUM<highlight><bold>2</bold></highlight> are more negative than THR_NEG, block <highlight><bold>200</bold></highlight> is executed to set the Sync flag to True. On the other hand, if blocks <highlight><bold>182</bold></highlight> and <highlight><bold>184</bold></highlight> determine that ACCUM<highlight><bold>1</bold></highlight> and not ACCUM<highlight><bold>2</bold></highlight> are more positive than THR_POS, block <highlight><bold>186</bold></highlight> is executed to set the Sync flag to False, indicating that the assumed synchronization is incorrect. Similarly, if blocks <highlight><bold>182</bold></highlight>, <highlight><bold>184</bold></highlight>, <highlight><bold>188</bold></highlight> and <highlight><bold>190</bold></highlight> determine that ACCUM<highlight><bold>2</bold></highlight> and not ACCUM<highlight><bold>1</bold></highlight> are more negative than THR_NEG, block <highlight><bold>186</bold></highlight> is executed to set the Sync flag to False. In certain conditions, such as when both ACCUM<highlight><bold>1</bold></highlight> and ACCUM<highlight><bold>2</bold></highlight> are either more positive than THR_POS or more negative than THR_NEG, the outcome is indeterminate, and block <highlight><bold>198</bold></highlight> is executed to set the Sync_Outputs and Sync_Reqd flags to False to terminate sync verification. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> If block <highlight><bold>180</bold></highlight> determines that ACCUM_DIFF does not exceed THR_DIFF, the blocks <highlight><bold>202</bold></highlight>, <highlight><bold>204</bold></highlight>, <highlight><bold>206</bold></highlight> and <highlight><bold>208</bold></highlight> determine if ACCUM<highlight><bold>1</bold></highlight> is more positive than THR_POS and ACCUM<highlight><bold>2</bold></highlight> is more negative than THR_NEG, or if ACCUM<highlight><bold>1</bold></highlight> is more negative than THR_NEG and ACCUM<highlight><bold>2</bold></highlight> is more positive than THR_POS. If blocks <highlight><bold>202</bold></highlight>, <highlight><bold>204</bold></highlight> and <highlight><bold>208</bold></highlight> determine that ACCUM<highlight><bold>1</bold></highlight> is more positive than THR_POS and ACCUM<highlight><bold>2</bold></highlight> is more negative than THR_NEG, the block <highlight><bold>210</bold></highlight> is executed to set the Sync flag to False, indicating that the assumed synchronization is incorrect. If blocks <highlight><bold>202</bold></highlight> and <highlight><bold>206</bold></highlight> determine that ACCUM<highlight><bold>1</bold></highlight> is more negative than THR_NEG and ACCUM<highlight><bold>2</bold></highlight> is more positive than THR_POS, the block <highlight><bold>196</bold></highlight> is executed to set the Sync flag to True, indicating that the assumed synchronization is correct. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> In summary, the method of the present invention provides an easily implemented technique for quickly and reliably verifying if an assumed synchronization of the crankshaft position signal with engine stroke cycle is correct or incorrect. The calculations involved in the method are very simple, and the method inherently detects cyclic speed variation due to induced misfiring even in the presence of non-cyclic variation in engine speed. While described in reference to the illustrated embodiment, it is expected that various modifications will occur to those skilled in the art. For example, the engine <highlight><bold>10</bold></highlight> may have a different number of cylinders <highlight><bold>14</bold></highlight> than illustrated, a different number or arrangement of teeth on the crank wheel <highlight><bold>18</bold></highlight>, a difference placement of the reference and/or TDC locations on crank wheel <highlight><bold>18</bold></highlight>, a different firing order, and so on. Thus, it should be understood that methods incorporating these and other modifications may fall within the scope of this invention, which is defined by the appended claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of verifying an assumed synchronization of a crankshaft signal for a multiple cylinder four-stroke internal combustion engine based on induced misfiring a specified engine cylinder, comprising the steps of: 
<claim-text>identifying reference positions of the crankshaft signal intermediate top dead center positions of consecutively fired engine cylinders, and determining reference time intervals bounded by the identified reference positions; </claim-text>
<claim-text>determining time differences between successive reference time intervals; </claim-text>
<claim-text>accumulating the determined time differences in a first accumulator if the assumed synchronization is such that said consecutively fired engine cylinders include the specified cylinder, and in a second accumulator if the assumed synchronization is such that said consecutively fired engine cylinders do not include the specified cylinder; and </claim-text>
<claim-text>determining whether the assumed synchronization is correct based on a detected divergence of the first and second accumulators and a direction of the detected divergence. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, including the steps of: 
<claim-text>assigning timer values T<highlight><bold>1</bold></highlight>, T<highlight><bold>2</bold></highlight> and T<highlight><bold>3</bold></highlight> to successively identified reference positions of the crankshaft signal; and </claim-text>
<claim-text>determining said time differences in accordance with: (T<highlight><bold>1</bold></highlight>&minus;(2*T<highlight><bold>2</bold></highlight>)&plus;T<highlight><bold>3</bold></highlight>): </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, including the step of: 
<claim-text>determining that the assumed synchronization cannot be verified if the detected divergence of the first and second accumulators exceeds a difference threshold, and both of the first and second accumulators exceed one of the first and second thresholds. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, including the steps of: 
<claim-text>defining first and second tests for correct synchronization based on comparisons of the first and second accumulators with respective first and second thresholds of opposite polarity; and </claim-text>
<claim-text>determining that the assumed synchronization is correct if the detected divergence of the first and second accumulators exceeds a difference threshold, and at least one of the first and second tests for correct synchronization is met. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, including the steps of: 
<claim-text>defining first and second tests for correct synchronization based on comparisons of the first and second accumulators with respective first and second thresholds of opposite polarity; and </claim-text>
<claim-text>determining that the assumed synchronization is correct if the first and second tests for correct synchronization are both met. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, including the steps of: 
<claim-text>defining first and second tests for incorrect synchronization based on comparisons of the first and second accumulators with respective first and second thresholds of opposite polarity; and </claim-text>
<claim-text>determining that the assumed synchronization is incorrect if the detected divergence of the first and second accumulators exceeds a difference threshold, and at least one of the first and second tests for incorrect synchronization is met. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, including the steps of: 
<claim-text>defining first and second tests for incorrect synchronization based on comparisons of the first and second accumulators with respective first and second thresholds of opposite polarity; and </claim-text>
<claim-text>determining that the assumed synchronization is incorrect if the first and second tests for incorrect synchronization are both met. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of determining whether the assumed synchronization is correct is disabled when a temperature of said engine is below a reference temperature. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of determining whether the assumed synchronization is correct is disabled when said engine has been operating for less than a reference time. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, including the step of: 
<claim-text>disabling the step of determining whether the assumed synchronization is correct when a specified change in engine loading is detected.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030000293A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030000293A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030000293A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030000293A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030000293A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
