<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030001909A1-20030102-D00000.TIF SYSTEM "US20030001909A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030001909A1-20030102-D00001.TIF SYSTEM "US20030001909A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030001909A1-20030102-D00002.TIF SYSTEM "US20030001909A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030001909A1-20030102-D00003.TIF SYSTEM "US20030001909A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030001909A1-20030102-D00004.TIF SYSTEM "US20030001909A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030001909A1-20030102-D00005.TIF SYSTEM "US20030001909A1-20030102-D00005.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030001909</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10143999</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020510</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G09G005/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>345</class>
<subclass>864000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>345</class>
<subclass>172000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>345</class>
<subclass>212000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Method and apparatus for interacting with a portable computer system</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10143999</doc-number>
<kind-code>A1</kind-code>
<document-date>20020510</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09272979</doc-number>
<document-date>19990319</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6448988</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>09272979</doc-number>
<document-date>19990319</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08790518</doc-number>
<document-date>19970129</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>5900875</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Robert</given-name>
<middle-name>Yuji</middle-name>
<family-name>Haitani</family-name>
</name>
<residence>
<residence-us>
<city>San Jose</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Jeffrey</given-name>
<middle-name>C.</middle-name>
<family-name>Hawkins</family-name>
</name>
<residence>
<residence-us>
<city>Redwood City</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>HICKMAN PALERMO TRUONG &amp; BECKER, LLP</name-1>
<name-2></name-2>
<address>
<address-1>1600 WILLOW STREET</address-1>
<city>SAN JOSE</city>
<state>CA</state>
<postalcode>95125</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A palmtop computer system that incorporates mechanical buttons that combine the task of turning the palmtop computer system on and starting a particular application program. Furthermore, the same mechanical button can be used to navigate the application program to find the information that is most likely needed by the user. Additionally, external devices can be coupled to the palmtop computer system in a manner that allows the external hardware device to initiate specific application programs that cooperate with the external hardware device. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to the field of portable computer systems. Specifically, the present invention discloses a portable computer system that can quickly be turned on and access relevant information with a minimal user interaction. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Many busy business professionals require a lot of information while they are traveling. To fill this need, a market for palmtop computer systems has emerged. Palmtop computer systems are small compact computers that can fit in the palm of your hand. Palmtop computer systems are usually used to perform personal informational management tasks such as, an address book, a daily organizer and a to do list. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Users of palmtop computer systems need to be able to access the information stored into the palmtop computer as fast as possible. For example, a person talking on a phone may schedule an appointment with the person on the other end of the phone. Thus, the person would need to access the information in his calendar program on the palmtop computer system as fast as possible such that no interruption of the telephone conversation would be required. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Existing palmtop computer systems often require a number of steps to obtain the desired information. For example, to obtain information from a calendar date, a person may first need to turn on the palmtop computer system. Some systems then require a &ldquo;boot-up&rdquo; time before the palmtop computer system enters an operational state. After the palmtop is on and ready, the person must then start the calendar application. Finally, the person must navigate the calendar application to locate the desired date. Although, those few steps may seem simple, such steps seem to be an unnecessary nuisance to a person that wants to quickly access the appropriate information. It would therefore be desirable to implement a palmtop computer system that allows the user to very quickly access the required information. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY AND OBJECTS OF THE INVENTION </heading>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> It is therefore an object of the present invention to implement a palmtop computer system that allows a user to quickly turn on the palmtop computer system and access the needed information. It is a further object of the present invention to allow the user to executed specific programs on the palmtop computer system using external devices coupled to the palmtop computer system. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> These and other objectives are accomplished by the palmtop computer system of the present invention which incorporates mechanical buttons that combine the task of turning the palmtop computer system on and starting a particular application program. Furthermore, the same mechanical button can be used to navigate the application program to find the information that is most likely needed by the user. Additionally, external devices can be coupled to the palmtop computer system in a manner that allows the external hardware device to initiate specific application programs that cooperate with the external hardware device. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The objects, features, and advantages of the present invention will be apparent from the following detailed description of the preferred embodiment of the invention with references to the following drawings. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates a portable computer system with defined application buttons. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference><highlight><italic>a </italic></highlight>illustrates a screen display for an addressbook application program that divides records using multi-function categories. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference><highlight><italic>b </italic></highlight>illustrates a screen display for an addressbook application program that is displaying a pop-up menu with the multi-function categories. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference><highlight><italic>c </italic></highlight>illustrates a screen display for an addressbook application program that is displaying a set of records under the &ldquo;business&rdquo; multi-function category. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates a portable computer system and a personal computer system equipped with a cradle for synchronizing with the portable computer system. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates the rear of a portable computer system with an interface for communicating with the synchronization cradle of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates a portable computer system equipped with a small modem for remotely synchronizing with a personal computer system. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Methods and apparatus for implementing a palmtop computer system that is well integrated with a personal computer system is disclosed. In the following description, for purposes of explanation, specific nomenclature is set forth to provide a thorough understanding of the present invention. However, it will be apparent to one skilled in the art that these specific details are not required to practice the present invention. In other instances, well-known circuits and devices are shown in block diagram form to avoid obscuring the present invention. </paragraph>
</section>
<section>
<heading lvl="1">A Portable Computer System With One-Touch Application Buttons </heading>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates a one embodiment of a portable computer system <highlight><bold>100</bold></highlight> constructed according to the teachings of the present invention. Most of the surface area of the portable computer system <highlight><bold>100</bold></highlight> consists of a screen display area <highlight><bold>181</bold></highlight>. The screen display area <highlight><bold>181</bold></highlight> is used for displaying information to the user. The screen display area is covered with a touch sensitive digitizer pad that can detect user interaction with a stylus or finger. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Below the display area <highlight><bold>181</bold></highlight> is a user input area <highlight><bold>183</bold></highlight>. The user input area <highlight><bold>183</bold></highlight> is used to input text in the Graffiti&reg; writing area <highlight><bold>145</bold></highlight> and interact with the application buttons <highlight><bold>141</bold></highlight> through <highlight><bold>144</bold></highlight>. The user input area <highlight><bold>183</bold></highlight> is covered by the digitizer pad that will sense the users finger or stylus. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Below the user input area <highlight><bold>183</bold></highlight> is a mechanical button input area <highlight><bold>185</bold></highlight>. In the embodiment of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> there are seven different mechanical buttons on the front of the portable computer system: a power button, two directional scrolling buttons, and four different application buttons. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The first mechanical button is a power button <highlight><bold>129</bold></highlight>. If the portable computer system <highlight><bold>100</bold></highlight> is off, then the power button <highlight><bold>129</bold></highlight> turns on the portable computer system <highlight><bold>100</bold></highlight> and brings the portable computer system <highlight><bold>100</bold></highlight> to the state that the portable computer system <highlight><bold>100</bold></highlight> was in just before it powered down. Conversely, if the portable computer system is on then pressing the power button <highlight><bold>129</bold></highlight> will save the current state of the portable computer system <highlight><bold>100</bold></highlight> and turn the portable computer system <highlight><bold>100</bold></highlight> off. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> A pair of scrolling buttons <highlight><bold>131</bold></highlight> are used to scroll information in the display area <highlight><bold>181</bold></highlight> up and down. The scrolling buttons <highlight><bold>141</bold></highlight> allow a user to view a list of information that does not fit on the display. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> There are four mechanical application buttons <highlight><bold>121</bold></highlight>, <highlight><bold>123</bold></highlight>, <highlight><bold>125</bold></highlight>, and <highlight><bold>127</bold></highlight> illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. In the embodiment of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, application button <highlight><bold>121</bold></highlight> is used for a calendar application, application button <highlight><bold>123</bold></highlight> is used for an address book application, application button <highlight><bold>125</bold></highlight> is used for a To-do list application, and application button <highlight><bold>127</bold></highlight> is used for a note pad application. The embodiment of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> provides just one possible set of applications. Other applications could be used instead of the applications illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Furthermore, the application buttons are programmable such that applications assigned to each application button may be changed. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> When the portable computer system <highlight><bold>100</bold></highlight> is powered-off, the application function buttons <highlight><bold>121</bold></highlight>, <highlight><bold>123</bold></highlight>, <highlight><bold>125</bold></highlight> and <highlight><bold>127</bold></highlight> turn on the portable computer system and then begin executing the associated application. For example, if the user presses the addressbook application button <highlight><bold>123</bold></highlight>, the portable computer system will turn on and begin executing the address book application. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> In the present embodiment, the application buttons operate by generating a hardware interrupt signal to the processor in the portable computer system <highlight><bold>100</bold></highlight>. The hardware interrupt signal wakes the processor in the portable computer system <highlight><bold>100</bold></highlight> from a sleep mode and caused the processor to execute code in a wake-up routine. In the wake-up routine, the processor checks a register to determine which application button was pressed. After determining which application button was pressed. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> To further convenience the user, each application starts executing by entering a state that has been chosen to best provide the information the user may be seeking. The following table lists the current applications illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> and the initial state that each application enters when the corresponding application button is pressed:  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="49PT" align="left"/>
<colspec colname="2" colwidth="168PT" align="left"/>
<thead>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Application</entry>
<entry>Description of Initial state.</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Calendar</entry>
<entry>Appointment list for the current day.</entry>
</row>
<row>
<entry>Addressbook</entry>
<entry>List of names and phone numbers for most recently</entry>
</row>
<row>
<entry></entry>
<entry>accessed multi-function category.</entry>
</row>
<row>
<entry>To-Do</entry>
<entry>To-Do list of most recently accessed multi-function</entry>
</row>
<row>
<entry></entry>
<entry>category.</entry>
</row>
<row>
<entry>Memo Pad</entry>
<entry>Current Memo being edited (if any) else current list of</entry>
</row>
<row>
<entry></entry>
<entry>memos.</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0025" lvl="7"><number>&lsqb;0025&rsqb;</number> Thus, each application button turns on the portable computer system <highlight><bold>100</bold></highlight>, starts executing the corresponding application, and brings the corresponding application into an initial state that has been chose to provide the most useful information. In some applications, the initial state can be set by the user such that the user can decide what state the application should enter when the corresponding application button has been pressed. </paragraph>
</section>
<section>
<heading lvl="1">Multi-Function Categories and Application Button Overloading </heading>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> As stated in the previous section, when the addressbook application button <highlight><bold>123</bold></highlight> is pressed, the portable computer system is turned on and the addressbook application starts executing. <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> provides an example of how the addressbook application may appear on the screen after the addressbook application button <highlight><bold>123</bold></highlight> has been pressed. In <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> there is a list of acquaintances of the user and associated telephone numbers. The user can select a particular acquaintance using a stylus or his finger. In <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> the acquaintance &ldquo;Allison Barry&rdquo; has been selected. If the user touches the selected Allison Barry again, a display screen containing additional information about Allison Barry will be presented. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Referring to the upper right corner of the addressbook screen display in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>A, there is a multifunction category name <highlight><bold>263</bold></highlight>. In <cross-reference target="DRAWINGS">FIG. 2</cross-reference>A, the multifunction category that is currently displayed is the &ldquo;all&rdquo; category. Each addressbook record is assigned to a particular multifunction category. By assigning each addressbook record to a multifunction category, certain acquaintances can be grouped together. For example, one multifunction category may be &ldquo;personal&rdquo; and that category would include close personal friends of the user. Another multifunction category may be &ldquo;business&rdquo; and that category would include business acquaintances of the user. The &ldquo;all&rdquo; displays all the addressbook records from all multifunction categories. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Next to the multifunction category name <highlight><bold>263</bold></highlight> is a multifunction category edit indicator <highlight><bold>261</bold></highlight>. The multifunction category edit indicator <highlight><bold>261</bold></highlight> indicates that the user can select a particular multifunction category to display by selecting the multifunction category edit indicator <highlight><bold>261</bold></highlight>. For example, <cross-reference target="DRAWINGS">FIG. 2B</cross-reference> illustrates how the screen would appear after the user selects the multifunction category edit indicator <highlight><bold>261</bold></highlight>. In <cross-reference target="DRAWINGS">FIG. 2B</cross-reference> a list of the available multifunction categories is displayed. In the example of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>B, the available multifunction categories are &ldquo;all&rdquo; categories, &ldquo;business&rdquo; acquaintances, &ldquo;personal&rdquo; acquaintances and &ldquo;unfiled&rdquo; acquaintances. Furthermore, the user can add additional multifunction categories or edit the existing multifunction categories by selecting the &ldquo;Edit categories, . . . , &rdquo; list item from the pop-up menu. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> An easier method of switching between the different multifunction categories exists. Specifically, the user can select between the various multifunction categories in the addressbook by continuing to press the addressbook application button after the addressbook application is executing. For example, referring to the addressbook display of <cross-reference target="DRAWINGS">FIG. 2A</cross-reference> if the user again presses the addressbook application button <highlight><bold>123</bold></highlight>, the address book application will move on to the multifunction category, the business category, as illustrated in <cross-reference target="DRAWINGS">FIG. 2C</cross-reference>. By successively pressing the address book application button <highlight><bold>123</bold></highlight> the user can scroll through all the different multifunction categories. Alternatively, the user may continuously hold down the addressbook application button <highlight><bold>123</bold></highlight> and the addressbook application will slowly scroll through the different multifunction categories. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Different applications can perform different actions when their respective application button is pressed when the application is already running. Thus, each application button is &ldquo;overloaded&rdquo; in that the function that the key performs depends on the current context. The following table describes how each application behaves when the associated application button is pressed when the application is already running:  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="49PT" align="left"/>
<colspec colname="2" colwidth="168PT" align="left"/>
<thead>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry>Effect of pressing the Application button when the</entry>
</row>
<row>
<entry>Application</entry>
<entry>application is already running.</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Calendar</entry>
<entry>Scroll through appointment list for the current day.</entry>
</row>
<row>
<entry></entry>
<entry>(Scroll keys move to different days.)</entry>
</row>
<row>
<entry>Addressbook</entry>
<entry>Rotate through the different multifunction categories.</entry>
</row>
<row>
<entry>To-Do</entry>
<entry>Rotate through the different multifunction categories.</entry>
</row>
<row>
<entry>Memo Pad</entry>
<entry>Rotate through the different multifunction categories.</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> In summary, each application button turns on the portable computer system <highlight><bold>100</bold></highlight> and begins executing the associated application if the portable computer system is off. If a different application is running when an application button is pressed, the application associated with the pressed application button begins executing. However, if the application is already up and running and the application button for that application is pressed then the application can perform a specific function such as rotating through different multifunction categories as described in the example of <cross-reference target="DRAWINGS">FIGS. 2A and 2C</cross-reference>. </paragraph>
</section>
<section>
<heading lvl="1">Externally Accessible Application Signals </heading>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates a portable computer system <highlight><bold>330</bold></highlight>. The portable computer system <highlight><bold>330</bold></highlight> may execute a number of different application programs. However, the most common applications on the portable computer system <highlight><bold>330</bold></highlight> will consist of a suite of Personal Information Management (PIM) applications such as the addressbook application, the calendar application, the To-Do list application, and the memo pad application previously described. Most people that use a portable computer system <highlight><bold>330</bold></highlight>, also have a personal computer system that has the same or similar applications. It would therefore be desirable to synchronize information between the portable computer system <highlight><bold>330</bold></highlight> and the personal computer system. This would allow the user to edit the information while using the desktop personal computer system at an office and edit the same information when using the portable computer system while traveling. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> Referring again to <cross-reference target="DRAWINGS">FIG. 3, a</cross-reference> desktop personal computer system <highlight><bold>310</bold></highlight> is also illustrated. Coupled to the serial port <highlight><bold>313</bold></highlight> of the desktop personal computer system <highlight><bold>310</bold></highlight> is a communication cradle <highlight><bold>320</bold></highlight>. The communication cradle <highlight><bold>320</bold></highlight> is used to provide a serial communication link between the portable computer system <highlight><bold>330</bold></highlight> and the personal computer system <highlight><bold>310</bold></highlight>. Specifically, the serial communication lines from the serial port <highlight><bold>313</bold></highlight> are extended and terminate at a serial interface connector <highlight><bold>327</bold></highlight> on the communication cradle <highlight><bold>320</bold></highlight>. A matching serial interface connector (not shown) on the rear of the portable computer system <highlight><bold>330</bold></highlight> connects the portable computer system <highlight><bold>330</bold></highlight> to the personal computer system <highlight><bold>310</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> To synchronize the information on the portable computer system <highlight><bold>330</bold></highlight> with the information on the personal computer system <highlight><bold>310</bold></highlight>, a user drops the portable computer system <highlight><bold>330</bold></highlight> into the communication cradle <highlight><bold>320</bold></highlight> and presses a synchronization button <highlight><bold>325</bold></highlight> on the communication cradle <highlight><bold>320</bold></highlight>. The synchronization button <highlight><bold>325</bold></highlight> causes a synchronization program on the portable computer system <highlight><bold>330</bold></highlight> to execute. The synchronization program on the portable computer system <highlight><bold>330</bold></highlight> wakes up a peer synchronization program on the personal computer system <highlight><bold>310</bold></highlight>. The synchronization program on the portable computer system <highlight><bold>330</bold></highlight> and the peer synchronization program on the personal computer system <highlight><bold>310</bold></highlight> perform the necessary operations to synchronize information stored on the two computer systems. The architecture of the synchronization process is described in the U.S. patent application entitled &ldquo;Extendible Method and Apparatus for Synchronizing Multiple Files On Two Different Computer Systems&rdquo; with Ser. No. 08/542,055, filed on Oct. 13, 1995. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The synchronization button <highlight><bold>325</bold></highlight> on the communication cradle <highlight><bold>320</bold></highlight> operates similar to the application buttons on the personal computer system <highlight><bold>310</bold></highlight>. Specifically, the synchronization button <highlight><bold>325</bold></highlight> on the communication cradle <highlight><bold>320</bold></highlight> asserts a hardware interrupt signal to the processor in the personal computer system <highlight><bold>310</bold></highlight>. The interrupt routine determines that the synchronization button <highlight><bold>325</bold></highlight> was pressed and thus starts executing the synchronization program on the portable computer system <highlight><bold>330</bold></highlight>. Thus, the synchronization button <highlight><bold>325</bold></highlight> uses an externally accessible version of the application buttons. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates the rear panel of a portable computer system <highlight><bold>400</bold></highlight> for use in the communication cradle <highlight><bold>320</bold></highlight>. Referring to the bottom of portable computer system <highlight><bold>400</bold></highlight>, a set of printed circuit board interface connectors <highlight><bold>451</bold></highlight> though <highlight><bold>460</bold></highlight> are illustrated. The printed circuit board interface connectors connect with a corresponding interface on the communication cradle <highlight><bold>320</bold></highlight>. The following table lists the printed circuit board interface connectors in one embodiment of the portable computer system <highlight><bold>400</bold></highlight>: </paragraph>
<paragraph id="P-0037" lvl="7"><number>&lsqb;0037&rsqb;</number> Ref.&num; Description </paragraph>
<paragraph id="P-0038" lvl="1"><number>&lsqb;0038&rsqb;</number> <highlight><bold>451</bold></highlight> Data Terminal Ready (DTR) &lsqb;output&rsqb;</paragraph>
<paragraph id="P-0039" lvl="1"><number>&lsqb;0039&rsqb;</number> <highlight><bold>452</bold></highlight> Power output &lsqb;output&rsqb;</paragraph>
<paragraph id="P-0040" lvl="1"><number>&lsqb;0040&rsqb;</number> <highlight><bold>453</bold></highlight> Serial Data Input (RXD) &lsqb;input&rsqb;</paragraph>
<paragraph id="P-0041" lvl="1"><number>&lsqb;0041&rsqb;</number> <highlight><bold>454</bold></highlight> Ready To Send (RTS) &lsqb;output&rsqb;</paragraph>
<paragraph id="P-0042" lvl="1"><number>&lsqb;0042&rsqb;</number> <highlight><bold>455</bold></highlight> Serial Data Output (TXD) &lsqb;output&rsqb;</paragraph>
<paragraph id="P-0043" lvl="1"><number>&lsqb;0043&rsqb;</number> <highlight><bold>456</bold></highlight> Clear To Send (CTS) &lsqb;input&rsqb;</paragraph>
<paragraph id="P-0044" lvl="1"><number>&lsqb;0044&rsqb;</number> <highlight><bold>457</bold></highlight> Hardware Interrupt Line &lsqb;input&rsqb;</paragraph>
<paragraph id="P-0045" lvl="1"><number>&lsqb;0045&rsqb;</number> <highlight><bold>458</bold></highlight> General purpose data input &lsqb;input&rsqb;</paragraph>
<paragraph id="P-0046" lvl="1"><number>&lsqb;0046&rsqb;</number> <highlight><bold>459</bold></highlight> Unused </paragraph>
<paragraph id="P-0047" lvl="1"><number>&lsqb;0047&rsqb;</number> <highlight><bold>460</bold></highlight> Electrical Ground </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> To assert a hardware interrupt signal to the processor in the portable computer system <highlight><bold>400</bold></highlight>, the synchronization button <highlight><bold>325</bold></highlight> on the communication cradle <highlight><bold>320</bold></highlight> only needs to complete an electrical circuit between the power output connector <highlight><bold>452</bold></highlight> and the hardware interrupt line <highlight><bold>457</bold></highlight>. The hardware interrupt line <highlight><bold>457</bold></highlight> is different from the hardware interrupt line used by the application buttons. &lsqb;Is this true&quest;&rsqb;. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The hardware interrupt line <highlight><bold>457</bold></highlight> can be used to perform other operations as well. <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates a portable computer system coupled to a clip-on modem <highlight><bold>510</bold></highlight>. The clip-on modem <highlight><bold>510</bold></highlight> includes a remote synchronization button <highlight><bold>520</bold></highlight> for remotely synchronizing with a companion personal computer. Since a remote synchronization through the clip-on modem <highlight><bold>510</bold></highlight> is very different than a local synchronization through a communication cradle <highlight><bold>320</bold></highlight>, the remote synchronization button <highlight><bold>520</bold></highlight> needs to execute a different synchronization program or execute the same synchronization program with different input parameters. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> To handle the remote synchronization, the remote synchronization button <highlight><bold>520</bold></highlight> can be wired to assert both the hardware interrupt line <highlight><bold>457</bold></highlight> and the General purpose data input <highlight><bold>458</bold></highlight>. In such an embodiment, the interrupt service routine that handles a hardware interrupt associated with the hardware interrupt line <highlight><bold>457</bold></highlight> would first check the General purpose data input <highlight><bold>458</bold></highlight>. If the General purpose data input <highlight><bold>458</bold></highlight> is not asserted, then a standard synchronization through the communication cradle <highlight><bold>320</bold></highlight> would be performed. However, if the General purpose data input <highlight><bold>458</bold></highlight> is asserted, then a special synchronization routine for handling remote synchronizations would be performed. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> Although the present invention has been described in terms of specific exemplary embodiments, it will be appreciated that various modifications and alterations might be made by those skilled in the art without departing from the spirit and scope of the invention as set forth in the following claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A computer implemented method of quickly preparing a computer system for use, said method comprising the steps of: 
<claim-text>accepting an application button press from a user that requests a particular application program; </claim-text>
<claim-text>waking a processor in response to said application button press; and </claim-text>
<claim-text>executing said particular application program. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising the step of: 
<claim-text>bringing said particular application program into a state that has been chosen to best supply information that said user may be seeking. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said step of waking a processor in response to said application button press comprises interrupting said processor such that said processor enters an interrupt service routine. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference> wherein said interrupt service routine tests a register to determine which application button from a set of more than one application buttons has been pressed. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising the step of: 
<claim-text>accepting a second application button press from a user after having begun execution of said particular application program; </claim-text>
<claim-text>changing a state of said particular application program. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference> wherein said step of changing a state of said particular application program comprises accessing a different set of data. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A computer apparatus, said apparatus comprising: 
<claim-text>a processor, said processor having a low power consumption sleep mode, said processor having hardware interrupt line that awakes said processor from said sleep mode; </claim-text>
<claim-text>at least one application button, said application button associated with a particular application program, said application button asserting said hardware interrupt line; and </claim-text>
<claim-text>an interrupt service routine for handling processor interrupts caused by said hardware interrupt line being asserted, said interrupt service routine executing said particular application program. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein said particular application program enters a state that has been chosen to best supply information that said user may be seeking when entered from said interrupt service routine </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> further comprising: 
<claim-text>a second application button, said second application button associated with a second application program, said second application button asserting said hardware interrupt line; </claim-text>
<claim-text>wherein said interrupt service routine determines a pressed application button and executes the application program associated with the pressed application button. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A computer implemented method of allowing external devices to control a portable computer system for use, said method comprising the steps of: 
<claim-text>asserting a hardware interrupt line on a processor in said portable computer system from an external device; </claim-text>
<claim-text>entering an interrupt service routine in response to said hardware interrupt line assertion; and </claim-text>
<claim-text>determining that said external device is the source of said hardware interrupt assertion and executing an application program associated with said external device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> further comprising the step of: 
<claim-text>waking said processor in response to said hardware interrupt line assertion. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein said step of determining that said external device is the source of said hardware interrupt assertion comprises testing a register to determine the source of the hardware interrupt assertion. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A portable computer apparatus, said apparatus comprising: 
<claim-text>a processor, said processor having a low power consumption sleep mode, said processor having hardware interrupt line that awakes said processor from said sleep mode; </claim-text>
<claim-text>an external interface, said external interface including access to said hardware interrupt line; </claim-text>
<claim-text>an external device, said external device coupled to said external interface of portable computer system, said external device asserting said hardware interrupt line; and </claim-text>
<claim-text>an interrupt service routine for handling processor interrupts caused by said hardware interrupt line being asserted, said interrupt service routine executing an application program associated with said external device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The portable computer apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference> further comprising: 
<claim-text>a data input line on said external interface; </claim-text>
<claim-text>a register coupled to said data input line on said external device; such that said interrupt service routine can test said register to determine if said data input line was asserted when said hardware interrupt line was asserted.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030001909A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030001909A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030001909A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030001909A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030001909A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030001909A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
