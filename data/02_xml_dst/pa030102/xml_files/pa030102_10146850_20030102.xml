<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004960A1-20030102-D00000.TIF SYSTEM "US20030004960A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004960A1-20030102-D00001.TIF SYSTEM "US20030004960A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004960A1-20030102-D00002.TIF SYSTEM "US20030004960A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004960A1-20030102-D00003.TIF SYSTEM "US20030004960A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004960A1-20030102-D00004.TIF SYSTEM "US20030004960A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004960A1-20030102-D00005.TIF SYSTEM "US20030004960A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004960A1-20030102-D00006.TIF SYSTEM "US20030004960A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004960A1-20030102-D00007.TIF SYSTEM "US20030004960A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004960A1-20030102-D00008.TIF SYSTEM "US20030004960A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004960A1-20030102-D00009.TIF SYSTEM "US20030004960A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004960A1-20030102-D00010.TIF SYSTEM "US20030004960A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030004960A1-20030102-D00011.TIF SYSTEM "US20030004960A1-20030102-D00011.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004960</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10146850</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020516</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>01 112 149.8</doc-number>
</priority-application-number>
<filing-date>20010517</filing-date>
<country-code>EP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F007/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>707</class>
<subclass>100000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Virtual database of heterogeneous data structures</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Peter</given-name>
<family-name>Pressmar</family-name>
</name>
<residence>
<residence-non-us>
<city>Boblingen</city>
<country-code>DE</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>SCULLY, SCOTT, MURPHY &amp; PRESSER</name-1>
<name-2></name-2>
<address>
<address-1>400 Garden City Plaza</address-1>
<city>Garden City</city>
<state>NY</state>
<postalcode>11530</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The described database (<highlight><bold>100</bold></highlight>) for receiving information, the described method and information management program (<highlight><bold>90</bold></highlight>), and the described apparatus for receiving and administering information in the form of arbitrarily structured data sets in at least one storage device of one or more data processing devices, has hierarchy levels, whereby a superior hierarchy level (<highlight><bold>119</bold></highlight>) contains information elements (<highlight><bold>111, 112, 113</bold></highlight>) for the definition of a structure of information elements (<highlight><bold>130, 140, 150</bold></highlight>) of a subordinate hierarchy level (<highlight><bold>129</bold></highlight>), and a subordinate hierarchy level (<highlight><bold>129</bold></highlight>) contains information elements (<highlight><bold>130, 140, 150</bold></highlight>) in an instantiation (<highlight><bold>131</bold></highlight>-<highlight><bold>136, 141</bold></highlight>-<highlight><bold>146, 151</bold></highlight>-<highlight><bold>156</bold></highlight>) in accordance with the structure which is defined at least by one information element (<highlight><bold>111, 112, 113</bold></highlight>) of the superior hierarchy level (<highlight><bold>119</bold></highlight>). As a result one obtains a database (<highlight><bold>100</bold></highlight>) having self-defining information. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to a database for the production and administration of heterogeneous data structures. The invention further concerns a method, a computer program and an apparatus for the set-up and for the administration of this database, and for the exchange of data between non-compatible systems. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The requirements of information technology and communications technology are subject at the present time to continuous change. Adaptation to these changed requirements is not always satisfactorily provided by today&apos;s programs and systems. The investment of many undertakings, effected over many years, in their data processing systems has built up extensive quantities of data in old applications which as a rule are no longer available to the newer, more innovative applications since the data is often closely linked with the particular features of the application on which is it based. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> In order to take account of the constantly increasing demands, the applications must be flexibly constituted. Thereby, information subject to change is stored outside the programs, in order to obtain applications which to some extent are stable and capable of adaptation. This kind of data management applies in particular also for transformations at interfaces. The programmers aid&apos;s for constructing an appropriate data management system are thereby restricted to tabular structures and many kinds of database. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Tabular structures are easy to alter and open, and thus can also be altered readily by a lay person. Against these advantages there stands the disadvantage that tabular structures have fixed field structures. That makes them inflexible, and since new structures thus cannot be integrated, tabular structures are also not capable of expansion. Many applications, however, need different data structures. For each requirement of a different kind, a new table must be constructed. Since the data structures in tabular structures cannot be read and altered by means of applications, this means an enormous effort which is linked with high costs. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> SQL databases have a higher capability for expansion with many possible data structures in one system. A database management system ensures also a high security of the implemented data structures. In contrast to tabular structures, SQL databases are not open, i.e. they can only be changed by specialists. A change or a new input of structures is associated with a great effort. One inflexibility of SQL databases consists in that their data structures cannot be read or altered by means of applications. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Object databases share, with regard to the access to structures, the disadvantages of SQL databases and just like these can only be altered by specialists. They also have a high capability for expansion and are also more flexible. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Meta-databases require no fixed structures and therefore different fields are possible. Of disadvantage is the restriction on field instantiations. Meta-databases are difficult to master. As a rule they form the basis for other kinds of database. Also with meta-databases, the data structures cannot be read and altered by means of applications. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> A data management as a basis for a flexible configuration of applications, that is of programs and systems, must be open as is the case with tables and also extremely flexible. This means that it has no fixed fields and structures and moreover recognizes no restrictions on field and structure instantiations. A further condition of flexibility is that the data structures can be read and altered by means of applications. The aids mentioned above meet these criteria only unsatisfactorily. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> It is thus an object of the present invention to provide a data management which fulfills the above criteria and thus allows a set-up of programs and systems which adapt to changed requirements with little effort or automatically. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> This object is achieved by means of a database for receiving information in the form of arbitrarily structured data sets in at least one storage device of one or more data processing devices having hierarchy levels, whereby a superior hierarchy level contains information elements for a definition of the structure of information elements of a subordinate hierarchy level, and a subordinate hierarchy level contains information elements in a instantiation in accordance with a structure which is defined by at least one information element of the superior hierarchy level, a first hierarchy level contains information elements for the definition of the structure of information elements of a second hierarchy level, a second hierarchy level contains information elements for the definition of the structure of information elements of a third hierarchy element, a third hierarchy element contains information elements for receiving information, and a link structure connects the information on the various hierarchy levels, whereby the link structure contains in a first internal data field a first attribute for the unique association of an information element with an information element or with a set of information elements of the first hierarchy level, in a second internal data field a second attribute for the unique association of an information element with an information element or with a set of information elements of the second hierarchy-level, in a third internal data field a third attribute for the unique association of an information element with a set of information elements of the third hierarchy level, and the allocation of an information element to a hierarchy level is determined from the existence of and/or the values of the attributes in the first, second and third internal data fields of the link structure. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> Further, the object of the present invention is achieved by means of a method for setting-up and for administering a database according to the invention, having steps for establishing the hierarchy levels, for establishing information elements within these hierarchy levels and for the production of links between information elements on differing hierarchy levels. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The object is further achieved by means of an information management program for being executed on one or more data processing devices with means for carrying out a method in accordance with the invention. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Beyond this, the object of the present invention is achieved by means of an apparatus for receiving and administering information in the form of arbitrarily structured data sets, which has at least one data processing facility, at least one storage device for receiving the data sets, and a device for executing a database management program in accordance with the invention. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The proposed system of data management in a plurality of hierarchy levels allows in diverse manners the storing of data sets which are structured most differently in one database and thus fulfills the requirements placed on information and communications technology for the greatest possible flexibility of data management through the avoidance of restrictions with regard to field and structure instantiations of the stored information. In particular requirements for easier alterability of the structures and for the greatest possible openness of the system are fulfilled since it is very simple, in particular for lay persons, to define new structures. The expandability of the database is promoted by the ready integrability of new data structures and a readily understandable and secure database management. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Advantageous developments of the solution in accordance with the invention are possible through the measures set out in the sub claims. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> In a preferred embodiment of the present invention, the definitions for the structuring of information elements of the first hierarchy level of the database are effected in a basic foundation. With this, a user has the possibility to configure the basic structure of the database in accordance with his requirements. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Furthermore, a definition of an ordering level advantageously allows the grouping of elements of the first hierarchy level and/or elements of the second hierarchy level. Hereby, a fourth internal data field suitably contains a fourth attribute for the unique association of an information element with an information element or a set of information elements of the ordering level. An allocation of an information element to the ordering level is preferably determined from the existence of and/or the value of the attribute in the fourth internal data field of the link structure to allow an easy association of a data set with an instance of the ordering level by reducing it to a determination of particular values or an omission of values in the fourth internal data field of the link structure. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The build-up of the link structure can be carried out in particular through the combination of the values of the first, second and third attributes and in the case of the existence of an ordering level additionally through the value of the fourth attribute. Advantageously there is associated with each information element in a fifth internal data field of the link structure a fifth attribute for a unique identification, whereby preferably a sixth internal data field of the link structure is provided for receiving information elements of the hierarchy levels. With this, there can be defined in a simple matter structures for finding the field definitions associated with an information element, and a unique identification of a data set is provided. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> In a preferred embodiment of the present invention there is associated with each information element a time value for determining its temporal referencing. In particular, the temporal referencing is built up of an initial value and a final value, whereby further the initial value and the final value of the temporal referencing can be received in internal data fields of the link structure. This permits the historical categorization of data so that the same items of information having different temporal referencing possess different validities overlapping of data is thus excluded and moreover a user obtains the possibility by means of the temporal referencing to read out correct information. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Preferably an alteration of an information element is effected at least via a generation of a new information element as a copy of the information element to be altered, followed by an alteration of the new information element, and the allocation of a new temporal reference to the new information element, so that the greatest possible consistency of the data management system is ensured. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The definitions determined in an information element or in a set of information elements in the first hierarchy level advantageously form the template for the instantiation of an information element of the second hierarchy level having identical value of the attribute in the first internal data field of the link structure, and the definitions determined in an information element or a set of information elements of the second hierarchy level advantageously form the template for the instantiation of an information element of the third hierarchy level having identical value of the attribute in the second internal data field of the link structure. With this there is achieved a simple and direct association of the field definitions with their forms of instantiation. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> In accordance with an advantageous development of the present invention, each set of information elements has an anchor information element (<highlight><bold>39</bold></highlight>) which is distinguished in that the attribute value in the internal data field of the link structure designating its association with a hierarchy level is identical with the attribute value in the fifth internal data field of the link structure associated therewith. With this the unique identification of the anchor information element, as takes place through the attribute value in the fifth internal data field, is carried over for unique identification of a set of information elements. The anchor information element thus delivers, within the link structure, the basis address for locating a set of information elements which belong together. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Further, each set of information elements which does not belong to the third hierarchy level may have at least one information element with a content descriptive of this set of information elements. This advantageously allows the employment of descriptions for the characterization of a set of information elements. Thereby, there is attained on the one hand an ordering of the information structure of the database in accordance with understandable criteria and on the other hand through these descriptive criteria there are opened up favorable possibilities for searching for a desired information element set. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Preferably, such an information element having a descriptive content is the anchor information element. The anchor information element is thus in itself not a definition parameter but forms the basis for the inheritance of the definitions which are determined in the associated information element set. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> A logical coupling of a plurality of individual databases to one database advantageously opens up the possibility of a platform independent virtual database as a pool of information and structure information and, vice versa, also the physical division of the database itself. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Advantageously an interpretation of data sets from a delivering system external to the database is effected on the basis of data structure information concerning the delivering system, which information is placed in the database in the form of one or more information elements, and further a structuring of data sets for output to a target system external to the database can also be effected on the basis of data structure information concerning the target system, which is placed in the database in the form of one or more information elements. Preferably here a transfer of data sets from a first structure into a second structure is effected in accordance with rules of allocation which are placed in the database in the form of one or more information elements. The structuring of data sets of external databases and also of a database in accordance with the invention can thus be simply effected on the basis of the data structure information placed in the database in accordance with the invention. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Preferably, the communication of application programs with the database takes place in the form of requests to the database, whereby a request may further manifest at least indications concerning the kind or nature of the request. This makes it possible for user programs to use data of other systems without knowledge of their structures and field attributes. The interpretation and, if applicable, the translation of the data is carried out by the method in accordance with the invention. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> In a preferred embodiment of the present invention the control of requests from application programs to the database is effected by means of a central control device, which advantageously further undertakes a check of the integrity of data from a request on the basis of rules which are placed in the databank of the database in the form of one or more information elements. Advantageously a request to the database has a processing dateline and the central control device brings about the execution of the request by the processing dateline. Thus, as a central system, the central control device undertakes the information exchange between delivering and target systems and takes care of the timely making available of data to the target system. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Advantageously, the central control device carries out partial requests of at least two application programs, the partial requests together forming a common request to the database, independently of one another in accordance with the needs of each individual partial request. This decouples the making available of delivering and target system information and thus ensures that the running times of the two systems can be independent of one another. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> An advantageous return report concerning the state of processing of an issued request is attained in that the central control device informs an application program concerning the state of processing of a request. For improved coordination of information data between different systems the central control device generates additional data on the basis of information of the database. An advantageous documentation of the procedures is attained in that at least a part procedure of the processing of a request is recorded by the central control device. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The database administered by the information management program is, in a preferred exemplary embodiment of the present invention, held on a different data processing device than the information management program itself, so that arbitrary hardware structures can be used. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Advantageously at least one data processing facility of the apparatus for receiving and administering information in the form of arbitrarily structured data sets exchanges data via a network connection. Advantageously at least one data processing facility of the device is accessible via a public network. Therewith, network systems and for example also the Internet can be used for a wide access to the database in accordance with the invention. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The database in accordance with the invention and the information management program in accordance with the invention make possible innovative connections between different application systems, whereby the flexibility in the data management system is further extended by a dynamic management of information through the possibility of allowing data structures not only to be read but also to be altered by application programs. Thus, the database system in accordance with the invention can be exploited as a general interface between communicating application programs or application systems, so that these systems need not have their own interface definitions for data exchange with the most diverse other application programs or application systems. Only one interface for the read-in and read-out of data must be present. The memory of the interface need not for this purpose recognize any definitions of the data structure, rather the information management program can merely set up regions therein which can hold structures and sub-structures which are delivered externally. An interpretation of this information is then effected e.g. from the structures placed in the database in accordance with the invention, as will be explained in more detail below. In principle, for this purpose an interpretation module applies a template to each structure or part structure and transforms the data into other structures or part structures. The transformed data is then made available by the information management system to the target systems, taking into account for example datelines, histories, rules, or the like. Thereby there can be realized without great effort B2B applications (Business-to-Business, intranet or Internet applications), transport and logistic systems and naturally also a transformation service. By means of the selective call up of information management program or the central control device both peer-to-peer communication and also client-server-client communication are made possible. In the case of client-server-client communication, an application program sends as client a request to the central control device functioning as the server. This carries out the request with the aid of the information management program and makes the result available to other application programs (clients). In the case of peer-to-peer communication, a user program passes the request directly to the information management program; this carries out the request and passes the result to the request issuer. The user program then itself passes the result to another user program. In a mixed form of the two kinds of communication a user program gives the request directly to the information management program; this carries out the request and makes the result available to other user programs.</paragraph>
</summary-of-invention>
<brief-description-of-drawings>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The following description explains in detail the present invention on the basis of exemplary embodiments with reference to the accompanying Figures, in which </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows the relationship in accordance with the invention between the intensional information elements of a hierarchy level and the extensional information elements of the hierarchy level subordinate to this hierarchy level, </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows the structographic construction of the database in accordance with the invention, </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows a simplified, exemplary schematic of a database in accordance with the invention, </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows an input mask for the establishment of a DELTA level, </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows an input mask for the establishment of an ALPHA level, </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows an input mask for the establishment of a BETA level, </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows an input mask for the establishment of a GAMMA level, </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows in a flow diagram the processing logic of the information management program in accordance with the invention, </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> illustrates a block diagram of the basic components of the information management program in accordance with the invention, </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows the storage of an interpretation structure in the database in accordance with the invention, </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows the storage of allocation rules in the database in accordance with the invention, </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> shows in a flow diagram the processing components of the interpretation module, and </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> shows a functional processing schematic of a transformation service of the interpretation module in accordance with the invention.</paragraph>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> The data management system in accordance with the present invention is based on a structure of the database in hierarchy levels, whereby each hierarchy level has an information part, the elements of which, the information elements, form a data set. In this context a data set will be understood as a set of data elements of the same or different types which are treated as a unit from logical points of view. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The information elements of a superior hierarchy level have intensional character; in other words they determine the data scheme of the information elements in the next lower hierarchy level associated therewith. Conversely, the information elements of a subordinate hierarchy level function, in accordance with this relationship, as extensional data objects, the structure of which is defined by the associated information elements of the next higher hierarchy level, which information elements are to be understood as meta-data elements. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> In the example of <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> set <highlight><bold>119</bold></highlight> of associated information elements<highlight><subscript>sup </subscript></highlight><highlight><bold>111</bold></highlight>, <highlight><bold>112</bold></highlight> to <highlight><bold>113</bold></highlight> of a superior hierarchy level <highlight><bold>110</bold></highlight> is indicated, wherein each of the information elements<highlight><subscript>sup </subscript></highlight><highlight><bold>111</bold></highlight>, <highlight><bold>112</bold></highlight> to <highlight><bold>113</bold></highlight> contains its own format instruction. Such a format instruction includes typically a plurality of format characteristics such as for example a descriptive element, a field length indication, a field data type etc. Each set of associated information elements<highlight><subscript>sup </subscript></highlight><highlight><bold>111</bold></highlight>, <highlight><bold>112</bold></highlight> to <highlight><bold>113</bold></highlight> thus determines a database scheme. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The information elements<highlight><subscript>sub </subscript></highlight><highlight><bold>130</bold></highlight>, <highlight><bold>140</bold></highlight> to <highlight><bold>150</bold></highlight> of the directly subordinate hierarchy level <highlight><bold>120</bold></highlight>, linked with the information element set <highlight><bold>119</bold></highlight>, form a database instantiation of the database scheme defined by the information element set <highlight><bold>119</bold></highlight>. Each of the information elements<highlight><subscript>sub </subscript></highlight><highlight><bold>130</bold></highlight>, <highlight><bold>140</bold></highlight> to <highlight><bold>150</bold></highlight> is a set of data elements, whereby each of the data elements <highlight><bold>131</bold></highlight>, <highlight><bold>132</bold></highlight> to <highlight><bold>156</bold></highlight> represents an instantiation of a format instruction, as is defined in the information elements<highlight><subscript>sup </subscript></highlight><highlight><bold>111</bold></highlight>, <highlight><bold>112</bold></highlight> to <highlight><bold>113</bold></highlight>. An information element<highlight><subscript>sub </subscript></highlight><highlight><bold>130</bold></highlight>, <highlight><bold>140</bold></highlight> or <highlight><bold>150</bold></highlight> can thus also be seen as a tupel of a database defined by means of a set <highlight><bold>119</bold></highlight> of information elements<highlight><subscript>sup </subscript></highlight><highlight><bold>111</bold></highlight>, <highlight><bold>112</bold></highlight> to <highlight><bold>113</bold></highlight>. The sequence of the data elements in an information elements<highlight><subscript>sub </subscript></highlight>may thereby deviate from the sequence of the information elements<highlight><subscript>sup </subscript></highlight><highlight><bold>111</bold></highlight>, <highlight><bold>112</bold></highlight> to <highlight><bold>113</bold></highlight> in the set <highlight><bold>119</bold></highlight>. Typically, the sequence of the data elements is determined via special format characteristics within the information elements<highlight><subscript>sup </subscript></highlight><highlight><bold>111</bold></highlight>, <highlight><bold>112</bold></highlight> to <highlight><bold>113</bold></highlight>. The sequence of the data elements within the information elements<highlight><subscript>sub </subscript></highlight><highlight><bold>130</bold></highlight>, <highlight><bold>140</bold></highlight> to <highlight><bold>150</bold></highlight> is in contrast identical, whereby however not all data elements need be occupied or, expressed differently, there need not be present for each of the information elements<highlight><subscript>sup </subscript></highlight><highlight><bold>111</bold></highlight>, <highlight><bold>112</bold></highlight> to <highlight><bold>113</bold></highlight> an instantiation in each of the information elements<highlight><subscript>sub </subscript></highlight><highlight><bold>130</bold></highlight>, <highlight><bold>140</bold></highlight> to <highlight><bold>150</bold></highlight>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> So that the individual data elements within an information element can be distinguished from one another, a field separator, in the example of <cross-reference target="DRAWINGS">FIG. 1 a</cross-reference> &ldquo;&verbar;&rdquo;, is placed at the end of each data element. The instantiation of the field separator is, as explained below, selectable. Within an information element it marks the end of a preceding data element and, if present, the beginning of the next data element follows from the field separator. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> The organization of the information elements in accordance with a first exemplary embodiment of the present invention illustrated in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> gives an overview of the hierarchy levels <highlight><bold>21</bold></highlight>, <highlight><bold>22</bold></highlight> and <highlight><bold>23</bold></highlight> and the dependencies between the information elements of these hierarchy levels. The database in accordance with the invention is established in three hierarchy levels <highlight><bold>21</bold></highlight>, <highlight><bold>22</bold></highlight> and <highlight><bold>23</bold></highlight>. In the highest hierarchy level <highlight><bold>21</bold></highlight>, designated as the ALPHA level in the following, the database schemes for the second hierarchy level <highlight><bold>22</bold></highlight>, designated as the BETA level in the following, are defined. Each information element of the ALPHA level is part of a set <highlight><bold>119</bold></highlight> of information elements <highlight><bold>111</bold></highlight>, <highlight><bold>112</bold></highlight> to <highlight><bold>113</bold></highlight>, the ALPHA level in general accommodating a plurality of these sets <highlight><bold>119</bold></highlight>, designated in the Figure as &agr;<highlight><subscript>11 </subscript></highlight>to &agr;<highlight><subscript>sk</subscript></highlight>. For simplified referencing, in the following an arbitrary set of information elements of the ALPHA level will in general be designated as &agr;<highlight><subscript>xy</subscript></highlight>. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> For each set &agr;<highlight><subscript>xy </subscript></highlight>there are typically present in the BETA level a plurality of information elements<highlight><subscript>sub </subscript></highlight><highlight><bold>130</bold></highlight>, <highlight><bold>140</bold></highlight> to <highlight><bold>150</bold></highlight> which in turn can be brought together as sets <highlight><bold>119</bold></highlight> of information elements<highlight><subscript>sup </subscript></highlight><highlight><bold>111</bold></highlight>, <highlight><bold>112</bold></highlight> to <highlight><bold>113</bold></highlight>, designated in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> as &bgr;<highlight><subscript>111 </subscript></highlight>to &bgr;<highlight><subscript>srl</subscript></highlight>. Analogously to the ALPHA level, in the following an arbitrary set of the information elements of the BETA level will in general be designated as &bgr;<highlight><subscript>xyz</subscript></highlight>. Each set of information elements of the BETA level &bgr;<highlight><subscript>xyz </subscript></highlight>defines a database scheme for a class of information elements of the third hierarchy level (<highlight><bold>23</bold></highlight>), designated as the GAMMA level, &ggr;<highlight><subscript>xyzu</subscript></highlight>. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Differently from the information element set &bgr;<highlight><subscript>xyz </subscript></highlight>of the BETA level, the information elements sets &ggr;<highlight><subscript>xyzu </subscript></highlight>of the GAMMA level contain no format instructions, but the actual information in a structure as is determined in the corresponding information elements sets of the BETA level and further in the ALPHA level. A grouping of individual information elements of the GAMMA level &ggr;&prime;<highlight><subscript>xyzu </subscript></highlight>to information element sets &ggr;<highlight><subscript>xyzu </subscript></highlight>is not necessary but can however be employed as a further structural element in the present database. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Optionally, there may be defined, as illustrated in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, an ordering level (<highlight><bold>25</bold></highlight>) for the formation of the information packets. Differently than in the ALPHA and BETA levels in this ordering level, designated as the DELTA level in the following, no data scheme for subordinate hierarchy levels is determined. Rather, the elements &dgr;<highlight><subscript>x </subscript></highlight>of the DELTA level serve for the assembling of the information elements sets of the ALPHA or BETA level into logical units. Therewith there is attained a grouping of information within a common ordering level. An information element &dgr;<highlight><subscript>x </subscript></highlight>of the DELTA level thus has no definition-forming character, but a purely designatory and/or descriptive character. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> Advantageously, each information element set of the ALPHA level &agr;<highlight><subscript>xy </subscript></highlight>and of the BETA level &bgr;<highlight><subscript>xyz </subscript></highlight>has one or two information elements having purely descriptive character. Such an element of the set &agr;<highlight><subscript>xy </subscript></highlight>or &bgr;<highlight><subscript>xyz </subscript></highlight>is no direct component of the defined database scheme, but assumes the role of the designation and/or description of the database scheme. Thus, for this kind of information element in a set &bgr;<highlight><subscript>xyz </subscript></highlight>there is no correspondence in a definition set &agr;<highlight><subscript>xy </subscript></highlight>of the ALPHA level. However, for the understandability of the data storage and as superior search criteria they make a contribution which is not to be underestimated. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> The basis of the database is formed by the definition of the format instructions of the information elements &agr;<highlight><subscript>xy </subscript></highlight>of the ALPHA level or, expressed briefly, the basic fields. The setting of the basic fields is protected, and thus cannot be altered during the operation of the database. With this it is ensured that the database always processes the same logic. At the abstract logical level of the database in accordance with the invention, the basic fields are components of a basic foundation which contains at least indications concerning the name, the data type and the length of a format instruction of the ALPHA level. These three items of information, namely the name of a field, the data type of a field and the length of a field express themselves beyond this through all data structures of all hierarchy levels. All data fields satisfy at least this basic scheme. In the basic foundation there may be defined additional fields. These are likewise established in accordance with the basic scheme. With this one obtains a structure of the basic foundation having a first section for basic elements and a second section for extension elements. In a particular embodiment, the instantiation of the basic fields may be effected and altered by a user or automatically by means of an application. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> The instantiations of basic fields indicated in the following table are contained in the basic foundation as a standard:  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="7">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="35PT" align="left"/>
<colspec colname="2" colwidth="28PT" align="left"/>
<colspec colname="3" colwidth="28PT" align="center"/>
<colspec colname="4" colwidth="42PT" align="left"/>
<colspec colname="5" colwidth="28PT" align="center"/>
<colspec colname="6" colwidth="28PT" align="center"/>
<thead>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="6" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>Selection</entry>
<entry></entry>
<entry>Selec-</entry>
</row>
<row>
<entry></entry>
<entry>Field</entry>
<entry></entry>
<entry></entry>
<entry>of</entry>
<entry>Re-</entry>
<entry>tion</entry>
</row>
<row>
<entry></entry>
<entry>Desig-</entry>
<entry>Data</entry>
<entry></entry>
<entry>permitted</entry>
<entry>quired</entry>
<entry>alter-</entry>
</row>
<row>
<entry></entry>
<entry>nation</entry>
<entry>Type</entry>
<entry>Length</entry>
<entry>values</entry>
<entry>Field</entry>
<entry>able</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="6" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="7">
<colspec colname="1" colwidth="28PT" align="left"/>
<colspec colname="2" colwidth="35PT" align="left"/>
<colspec colname="3" colwidth="28PT" align="left"/>
<colspec colname="4" colwidth="28PT" align="char" char="."/>
<colspec colname="5" colwidth="42PT" align="left"/>
<colspec colname="6" colwidth="28PT" align="center"/>
<colspec colname="7" colwidth="28PT" align="center"/>
<tbody valign="top">
<row>
<entry>Basic</entry>
<entry>Field</entry>
<entry>Alpha-</entry>
<entry>50</entry>
<entry></entry>
<entry>Yes</entry>
<entry>No</entry>
</row>
<row>
<entry>element</entry>
<entry>Name</entry>
<entry>numeric</entry>
</row>
<row>
<entry>of the</entry>
<entry>Field</entry>
<entry>Nu-</entry>
<entry>2</entry>
<entry></entry>
<entry>Yes</entry>
<entry>No</entry>
</row>
<row>
<entry>basic</entry>
<entry>Length</entry>
<entry>meric</entry>
</row>
<row>
<entry>found-</entry>
<entry>Field</entry>
<entry>Alpha-</entry>
</row>
<row>
<entry>ation</entry>
<entry>Instan-</entry>
<entry>numeric</entry>
<entry>1</entry>
<entry></entry>
<entry>Yes</entry>
<entry>No</entry>
</row>
<row>
<entry></entry>
<entry>tiation</entry>
</row>
<row>
<entry>Exten-</entry>
<entry>Field</entry>
<entry>Alpha</entry>
<entry>1</entry>
<entry>S &equals; Key</entry>
<entry>No</entry>
<entry>No</entry>
</row>
<row>
<entry>sion of</entry>
<entry>Status</entry>
<entry></entry>
<entry></entry>
<entry>D &equals; Data</entry>
</row>
<row>
<entry>the</entry>
<entry>Status</entry>
<entry>Nu-</entry>
<entry>1</entry>
<entry></entry>
<entry>No</entry>
<entry>No</entry>
</row>
<row>
<entry>basic</entry>
<entry>sequence</entry>
<entry>meric</entry>
</row>
<row>
<entry>found-</entry>
<entry>Status</entry>
<entry>Alpha-</entry>
<entry>1</entry>
<entry>&tilde;</entry>
<entry>No</entry>
<entry>Yes</entry>
</row>
<row>
<entry>ation</entry>
<entry>separator</entry>
<entry>numeric</entry>
</row>
<row>
<entry></entry>
<entry>Field</entry>
<entry>Alpha-</entry>
<entry>1</entry>
<entry>&verbar;</entry>
<entry>No</entry>
<entry>Yes</entry>
</row>
<row>
<entry></entry>
<entry>separator</entry>
<entry>numeric</entry>
</row>
<row>
<entry></entry>
<entry>Dyna-</entry>
<entry>Alpha</entry>
<entry>1</entry>
<entry>D &equals; Dyna-</entry>
<entry>No</entry>
<entry>Yes</entry>
</row>
<row>
<entry></entry>
<entry>mising</entry>
<entry></entry>
<entry></entry>
<entry>misable</entry>
</row>
<row>
<entry></entry>
<entry>field</entry>
</row>
<row>
<entry></entry>
<entry>Binary</entry>
<entry>Alpha</entry>
<entry>1</entry>
<entry>O &equals; Folder</entry>
<entry>No</entry>
<entry>No</entry>
</row>
<row>
<entry></entry>
<entry>storage</entry>
<entry></entry>
<entry></entry>
<entry>D &equals; File</entry>
</row>
<row>
<entry></entry>
<entry>Instan-</entry>
<entry>Alpha-</entry>
<entry>1</entry>
<entry>A &equals; Alpha</entry>
<entry>No</entry>
<entry>Yes</entry>
</row>
<row>
<entry></entry>
<entry>tiation</entry>
<entry>numeric</entry>
<entry></entry>
<entry>C &equals; Alpha-</entry>
</row>
<row>
<entry></entry>
<entry>Standard</entry>
<entry></entry>
<entry></entry>
<entry>numeric</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>9 &equals; Numeric</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>X &equals; hexa-</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>decimal</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>B &equals; Binary</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>F &equals; Bin-</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>Fixed</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>L &equals; Listbox</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>S &equals; Selec-</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>tion of</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>system-</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>defined</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry>criteria</entry>
</row>
<row><entry namest="1" nameend="7" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> Attention is direct to the fact that these settings are standard or default settings of exemplary character which can at any time be provided differently or altered corresponding to the above-mentioned particular embodiment in the course of the primary structuring of the database in accordance with the invention. However, these settings are to be understood, for the definition and administration of a database which has already been built, as not further alterable, since they are placed in a protected region of the database. Alteration of the settings in the case of a database which is already been built can be carried out only in the process of a general reorganization to a new build of the database. Extensions of the default settings are, however, also possible with a database which has already been built. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> An information element of ALPHA level is a first instantiation of the definitions as they are effected in the basic fields of the basic foundation. There need not be, however, a data element for each basic field of the basic foundation. Basic fields which in the &ldquo;required field&rdquo; column have a &ldquo;no&rdquo; entry are optional; in case of need they may be employed, but their employment is not mandatory. Basic fields with a remark &ldquo;yes&rdquo; in the &ldquo;required field&rdquo; column are, on the other hand, obligatory. The anchor information elements of the ALPHA level take up a special position. They represent merely an instantiation of the basic elements name, data type and length. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> This basic field &ldquo;field name&rdquo; defines an alphanumeric field having a length of 50 characters. A data element in an information element of the ALPHA level, which data element is associated with the definition of this basic field, contains the name of this information element, is a maximum of 50 characters long and employs characters of the alphanumeric data type. &ldquo;Field length&rdquo; defines a numeric data type with a maximum of two characters for a data element. This data element in an information element of the ALPHA level serves for indicating the maximum length of an associated data element in the information elements of the BETA level. Since &ldquo;99&rdquo; is the largest number that can be represented with two characters, no data element of the BETA level can thus exceed 99 characters. The basic field definition &ldquo;field instantiation&rdquo; defines an alphanumeric data field of a length of one character in the information elements of the ALPHA level. A selection of permitted values is not defined with the basic elements of the basic foundation in the example, but is possible. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> The three basic field definitions so far mentioned can be designated as basic elements of the basic foundation, since they define the minimum necessary information for the building of a database scheme. They are the prerequisite for the building of a structure in the ALPHA level and lay fixedly defined thereabove. The information elements of the ALPHA level are, however, only a first instantiation of the basic fields. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> The first extended basic field definition &ldquo;field status&rdquo; opens up the possibility of indicating whether the data element classified thereby belongs the key part or the data part of an information element. The sequence of data elements with the same status definition can be determined with the aid of an indication in the extension basic field &ldquo;status sequence&rdquo;. The field definition for this provides, in the example of the above table, a numeric field of one character length. The character indicated in the field definition of the extended basic field &ldquo;status separator&rdquo; serves for the separation of the key part from the data part in the information elements. Usually, but not necessarily, a key part precedes the data part in the information elements. The status separator &ldquo;&tilde;&rdquo; indicated in the table can, in accordance with the indication in the column &ldquo;selection alterable&rdquo;, be replaced by another character at any time. The same applies for the determination of &ldquo;&verbar;&rdquo; as field separator and the character &ldquo;D&rdquo; in the extended basic definition &ldquo;dynamising field&rdquo;. The classification of an information element as dynamisable, as is effected with a corresponding entry in the dynamising field of an information element of the ALPHA level, means that the corresponding field instantiation in data elements of information elements of the BETA level can be automatically altered by means of an interpretation program, thus are dynamic. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> As can be understood from the above table, the employment of a field separator is optional. The employment of a field separator is not necessary for example in the case of an employment of fixed field lengths. Dynamisable fields or fields which do not have fixed length however make the employment of such a separator obligatory. Further, alternatively to the illustration, the system may employ a fixed predetermined field separator as standard, so that the necessity for a corresponding definition in the basic foundation is removed. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> In the penultimate extension basic field &ldquo;binary storage&rdquo; of the above table there are determined two characters for determining the storage of binary files. The code character &ldquo;O&rdquo; indicates that binary files are to be physically stored outside the database, whereas the code character &ldquo;D&rdquo; indicates that binary files are to be stored in the data area of the database. In the first case of storage of binary files outside the database, the files are stored in folders and sub-folders the ordered structure of which mirrors the rankings of the hierarchy levels and the key elements. The information management program accesses these files with the aid of the information stored in the information elements of the GAMMA level of the database. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> In the last extension basic field &ldquo;instantiation standard&rdquo; a selection of permitted values is defined which can be selected in the matching data fields of the ALPHA level and of the BETA level as codes for determining a data type for associated data fields of the respectively subordinate hierarchy level. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 3</cross-reference> there is illustrated a simplified, exemplary scheme of information storage in a database in accordance with the invention. For realization of the hierarchy structure, the information storage is effected in a metastructure <highlight><bold>24</bold></highlight> together with <highlight><bold>37</bold></highlight> and <highlight><bold>38</bold></highlight>, which is illustrated in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> as a table. The metastructure is at the same time an instantiation of a link structure <highlight><bold>24</bold></highlight> for the connection of information on different hierarchy levels. For each hierarchy level there exists in this metastructure an internal data field which is defined as a fixed field and in the following will be designated as hierarchy field. In the exemplary embodiment having four hierarchy levels on which <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is based there are thus four hierarchy fields defined, the field &ldquo;Delta&rdquo; <highlight><bold>34</bold></highlight> for the DELTA level, the field &ldquo;Alpha&rdquo; <highlight><bold>31</bold></highlight> for the alpha level the field &ldquo;Beta&rdquo; <highlight><bold>32</bold></highlight> for the BETA level and the field &ldquo;Gamma&rdquo; <highlight><bold>33</bold></highlight> for the GAMMA level. The sequence of the hierarchy fields indicated in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is sensible for the performance of the- database, but may be modified in correspondence to other needs. The metastructure contains a further internal data field designated by &ldquo;information&rdquo; in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, for receiving the information elements. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> The size and instantiation of the hierarchy fields is defined in accordance with the requirements upon building the database. Size and instantiation are dependent upon the number of sequences to be expected in the database. By sequence, there is to be understood an entry of data in the form of an information element with the associated attributes of the metastructure in the database. In order, for example, to make possible 9,999,999,999 sequences in the database the internal fields can be defined with a length of ten characters with numerical instantiation. In the case of very large data quantities a binary data type suggests itself. In order to alter a definition of the internal data fields in an already existing database, its sequences are exported completely and then, with a modified definition of the data fields, reimported. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> The storage logic is put into effect via entries in the hierarchy fields, called attributes in the following. The association of a sequence to a particular hierarchy level is controlled via the presence of attributes in the hierarchy fields. If one determines a ranking between the hierarchy fields such that the highest rank is taken by the field &ldquo;Delta&rdquo;, followed by the field &ldquo;Alpha&rdquo;, and therebelow the field &ldquo;Beta&rdquo;, and the field &ldquo;Gamma&rdquo; takes up the lowest rank, the association of a sequence to its hierarchy level can be determined in that the identity of the lowest ranking hierarchy field is determined, which still has an attribute. A sequence of the Gamma level has, if a Delta level exists, consequently an attribute in all four hierarchy fields, whereas in the case of a sequence of the BETA level attributes are present only in the hierarchy fields &ldquo;Delta&rdquo;, &ldquo;Alpha&rdquo;, &ldquo;Beta&rdquo;. Correspondingly in the case of a sequence of the ALPHA level only the &ldquo;Delta&rdquo; and &ldquo;Alpha&rdquo; fields are filled with an attribute and in the case of sequences of the DELTA level attributes are present only in the &ldquo;Delta&rdquo; field. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> The linking of information elements of lower hierarchy levels with information elements sets of higher hierarchy levels is controlled via the value of the attributes in the hierarchy fields. Sequences having identical attributes in the same hierarchy fields are associated with one another. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> Two arbitrary information elements of the GAMMA level are members of the same group &ggr;xyzu within this hierarchy level if their sequences have identical attribute values in the hierarchy fields. The information element with identical value in the field &ldquo;RNR&rdquo; and in the hierarchy field &ldquo;Gamma&rdquo; is the anchor information element <highlight><bold>39</bold></highlight> of this group. The further members of this group are derived from this anchor information element. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> The data scheme for an information element &ggr;&prime;<highlight><subscript>xyzu </subscript></highlight>of the GAMMA level is determined by an information element set &bgr;<highlight><subscript>xyz </subscript></highlight>the sequences of which have exactly the same attribute value in the hierarchy fields &ldquo;Beta&rdquo; and &ldquo;Alpha&rdquo;. Analogously to this, the data scheme for an information element of the BETA level is located in an information element set &agr;<highlight><subscript>xy </subscript></highlight>the sequences of which have identical values in the hierarchy field &ldquo;Alpha&rdquo;. In the case of the presence of a DELTA level, in both situations the attribute values in the hierarchy field &ldquo;Delta&rdquo; must also agree. All sequences which have the same attribute value in the hierarchy field &ldquo;Delta&rdquo; belong to the same logical unit. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> In the simplified example of <cross-reference target="DRAWINGS">FIG. 3</cross-reference> there is defined a single logical unit, the DELTA element &dgr;<highlight><subscript>001 </subscript></highlight>having the attribute value &ldquo;001&rdquo; (in the hierarchy field &ldquo;Delta&rdquo;). All further sequences of the database in the example are members of this logical,unit, since they have an identical attribute value in the hierarchy field &ldquo;Delta&rdquo;. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> On the ALPHA level, exactly one information element set &agr;<highlight><subscript>001010 </subscript></highlight>is defined with an attribute value &ldquo;010&rdquo; in the hierarchy field &ldquo;Alpha&rdquo;. The associated sequences encompass the running numbers &ldquo;010&rdquo; to &ldquo;017&rdquo; in the internal data field &ldquo;RNR&rdquo; of the metastructure. The attributes in the internal data field &ldquo;RNR&rdquo; <highlight><bold>35</bold></highlight> serve for the unique identification of a sequence or of an information element in the database in accordance with the invention. Size and data type correspond to the same criteria as apply for hierarchy fields. &ldquo;RNR&rdquo; is only one example of a field designation and can be freely selected, as can also the names of the hierarchy fields, for each database. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> Each information element in the information element set &agr;<highlight><subscript>001010 </subscript></highlight>is a data set consisting of data elements the definition of which was effected in the basic fields of the basic foundation. A special position is taken up by the information element with the associated attribute value &ldquo;010&rdquo; in the field &ldquo;RNR&rdquo;, which is solely an instantiation of the basic field &ldquo;field name&rdquo; and contains a short description for designation of the information element set &agr;<highlight><subscript>001010</subscript></highlight>. It is the anchor information element of this information element set having the attribute value &ldquo;010&rdquo; in the hierarchy field &ldquo;Alpha&rdquo;. This &ldquo;anchor&rdquo; forms the basis for the inheritance of the definition of &agr;<highlight><subscript>001010 </subscript></highlight>by information elements on the BETA-level which likewise have the attribute value &ldquo;010&rdquo; in the hierarchy field &ldquo;Alpha&rdquo;, but since in itself it represents no definition parameter it is not itself inherited by these. Along with the anchor information element reserved for the short description there can be provided a further element for receiving a long description. This also does not represent a definition parameter and is consequently not inherited by information elements of the BETA-level. Differently from the anchor information element it forms no basis for inheritance. The information elements which are not used for descriptions, called standard information elements in the following, are an instantiation of the data scheme defined in the basic foundation. However, only the core elements of the basic foundation are obligatory. The employment of further basic fields is, in accordance with the layout of the above table, optional. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> For simplified representation, in the following an information element with an associated attribute value &ldquo;xyz&rdquo; in the internal data field &ldquo;RNR&rdquo; will be referred to as information element or data set having the running number xyz. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> The data set with the running number 011 contains in the first data element the basic field &ldquo;field name&rdquo; with the instantiation &ldquo;field short designation&rdquo;, separated by the field separator &ldquo;&verbar;&rdquo;, in the second data element the basic field &ldquo;data length&rdquo; with the instantiation &ldquo;<highlight><bold>25</bold></highlight>&rdquo; and further, separated by a field separator, in the third data element the basic field &ldquo;field instantiation&rdquo; with the code character &ldquo;C&rdquo; as instantiation. The code character &ldquo;D&rdquo; in the fourth data element indicates that the associated definition in a data set of the BETA-level is dynamic. Overall, this data set defines exactly one field, or exactly one data element in an associated information element of the BETA-level. An instantiation of this data element contains a short designation of the information element which contains it, having a maximum length of 25 characters of alphanumeric data type. An automatic alteration of the data element format by means of an interpretation program is allowed or, in other words, the data element format is dynamic. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> Analogously, the data set having the running number 012 defines a field for the indication of a field length, whereby maximum eight characters of alphanumeric data type are allowed for the indication of a field length (the field length relates to a data element of the GAMMA-level). In this case also a dynamisation of the instantiations of this field definition on the BETA-level is provided. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> The further data sets of the information element set &agr;<highlight><subscript>001010</subscript></highlight>, which define fields as data elements of the information elements of the BETA-level, determine a dynamisable data element for the definition of a field character of a length of one character, of the alphanumeric type, and also non-dynamisable data elements for the determination of a field status (one character long, data type: selection of system defining criterium), a status sequence (two characters long, data type: numeric), a reference (one character long, data type: list box) and a status separator (one character long, data type: alphanumeric). Reference means that information is referenced, for example from other fields or files. In the indicated example the referenced information is offered in a list box for the selection of a part information item. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> The sequences having a running number from &ldquo;020&rdquo; to &ldquo;024&rdquo; inclusive, define the information element set &bgr;<highlight><subscript>001010020</subscript></highlight>. The information element having the running number &ldquo;020&rdquo; is the anchor information element of &bgr;<highlight><subscript>001010020 </subscript></highlight>and contains a short description with the content &ldquo;Folder&rdquo;. Analogously to the information element sets of the ALPHA-level there can also be provided in the information element sets of the BETA-level an information element for a long description. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> Corresponding to the definitions in &agr;<highlight><subscript>001010</subscript></highlight>, a data set of &bgr;<highlight><subscript>001010020 </subscript></highlight>consists of data elements which are instantiations of the fields &ldquo;fields short designation&rdquo;, &ldquo;length&rdquo;, &ldquo;field character&rdquo;, &ldquo;status&rdquo;, &ldquo;status sequence&rdquo;, &ldquo;reference&rdquo; and &ldquo;status separator&rdquo;. Data elements which have no value for a field in a data set are however omitted. Each data set or each data element of &bgr;<highlight><subscript>001010020 </subscript></highlight>in turn represents a field definition for a data element in a associated information element of the GAMMA-level. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> Apart from the descriptive element, the information element set &bgr;<highlight><subscript>001010020 </subscript></highlight>is divided into two part sets. The first part set consists of the sequences having the running numbers &ldquo;021&rdquo; to &ldquo;023&rdquo; and defines the data scheme of the key part of an associated information element of the GAMMA-level; the second part set having the running numbers &ldquo;024&rdquo; and &ldquo;025&rdquo; defines the data scheme of the data part of an associated information element of the GAMMA-level. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> The data set having the running number &ldquo;021&rdquo; contains the instantiations of the field definitions from the information elements having the running number &ldquo;011&rdquo;, &ldquo;012&rdquo;, &ldquo;014&rdquo; and &ldquo;015&rdquo;. It defines a field having the description &ldquo;Folder No.&rdquo; of five characters length with alphanumeric field instantiation, having key status. In the status sequence this field takes up rank <highlight><bold>1</bold></highlight>, i.e. in the key part of an associated information element of the GAMMA-level it stands in first position. The data set with the running number &ldquo;022&rdquo; contains a further instantiation of these field definitions. It defines a field with the description &ldquo;Sub-folder No.&rdquo; of four characters length, of numeric data type, having key status. The status sequence is 2, i.e. in the key part of an associated information element of the GAMMA-level it stands in second place. The data set with the running number &ldquo;023&rdquo; is a instantiation of the field definition of the information elements having the running number &ldquo;011&rdquo; to &ldquo;016&rdquo; in the indicated field sequence. The alphanumeric key field with the status sequence <highlight><bold>3</bold></highlight> and the length <highlight><bold>10</bold></highlight> uses a reference connection of the name &ldquo;Title&rdquo; in order to select, via a listbox, a journal. Thus, the first part set of &bgr;<highlight><subscript>001010020 </subscript></highlight>contains three sequences for the definition of key elements of associated information elements of the GAMMA-level whereby the instantiations of the first two key elements can be freely input, and the instantiation of the third data element is effected as a selection from a predetermined reference list. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> In the second part set of &bgr;<highlight><subscript>001010020 </subscript></highlight>for the definition of the data part of information elements of the GAMMA-level there is defined in the first data set with the running number &ldquo;024&rdquo; a data element at the beginning of the data part of an associated information element of the GAMMA-level having the description &ldquo;Keyword-<highlight><bold>1</bold></highlight>&rdquo;, fifteen characters long and of alphanumeric data type, and a reference connection having the name &ldquo;Article&rdquo;. By means of the reference indication, the instantiation of an associated data element is restricted to values from a reference list &ldquo;Articles&rdquo;, similarly as above. The second data set having the running number &ldquo;025&rdquo; defines, by means of the indication of the status sequence, the second data element in the data part of an associated information of the GAMMA-level. It carries the designation &ldquo;Documents&rdquo;, has a field length of 12 characters, and is of binary data type. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> In the GAMMA-level, the example of <cross-reference target="DRAWINGS">FIG. 3</cross-reference> has three sequences with the running numbers &ldquo;032&rdquo;, &ldquo;044&rdquo; and &ldquo;033&rdquo;. The two first-mentioned sequences have, with &ldquo;032&rdquo;, an identical attribute value in the field &ldquo;Gamma&rdquo; and are therefore grouped within the GAMMA-level. As can be readily seen from the Figure, the information elements of these sequences are built up in accordance with the same scheme. The first data element, which corresponds to the field &ldquo;Folder No&rdquo;, contains the value &ldquo;21&rdquo;, analogously thereto the second data element contains as &ldquo;Sub-folder No&rdquo; the value &ldquo;0102&rdquo;. The third data element corresponds to the field &ldquo;Journals&rdquo; and receives its value via the reference connection &ldquo;Title&rdquo;, which is defined in the sequence with the running number &ldquo;023&rdquo;. The following tilde, the status separator, indicates that with the third element the key part of the information element ends. The structure of the key part assumes the function of a logical ordering of the information structure, which in the case of the employment of a field for the binary storage with the value &ldquo;0&rdquo;, together with the structure of the hierarchy levels is transformed into an actual storage structure supported by the usual operating systems. The field &ldquo;Keyword-<highlight><bold>1</bold></highlight>&rdquo; is occupied in both information elements with the value &ldquo;Shares&rdquo;. This value is selected via the reference connection &ldquo;Articles&rdquo;. The second data element of this data part corresponds to the field &ldquo;Documents&rdquo; and contains in the first information element of the group the value &ldquo;Shares.doc&rdquo; and in the second the value &ldquo;Shares2.doc&rdquo;. The information element having the running number 032 is the anchor information element of this group. The second member of the group having the running number 044 is derived from this. This can also be seen from the temporal referencing of the two sequences in the internal data fields &ldquo;DATEFROM&rdquo; <highlight><bold>37</bold></highlight> and &ldquo;DATETO&rdquo; <highlight><bold>38</bold></highlight>, from which it is apparent that the period of validity of the information element with the greater running number directly adjoins on the period of validity of the anchor information element. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> The third information element of the GAMMA-level having the associated running number &ldquo;033&rdquo; differs in the key part from the first two only through a different value of the selected journal (&ldquo;DM&rdquo;). The data part contains exclusively the value (&ldquo;Real Estate&rdquo;) from the reference connection &ldquo;Articles&rdquo;. The value for the field &ldquo;Documents&rdquo; is left open in the example. The information element thus designates only a logical storage location, but no document. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> As already mentioned, the instantiations of the information elements of the BETA-level can be automatically altered by means of an interpretation program, insofar as the field definitions in the associated information element set are characterized as dynamisable. Thus, for example, field lengths, instantiations or also other information can be altered. This occurs through an analysis of the information elements of the GAMMA-level for example upon the inputting of data or in general, when the interpretation program accesses the data,of the GAMMA-level. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> In order here to ensure the consistency of the information, a temporal referencing is associated with each information element. This temporal reference dates the validity of an information element. In the embodiment of the database in accordance with the invention as is illustrated schematically simplified in the example of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the metastructure includes two further internal date fields, &ldquo;DATEFROM&rdquo; <highlight><bold>37</bold></highlight> for receiving an initial, and &ldquo;DATETO&rdquo; <highlight><bold>38</bold></highlight> for receiving a final value of the validity. As is the case also with other data fields, the names of these internal data fields for the temporal referencing are freely selectable when building the database. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> Similar information items having different temporal referencing indicate different validities. A correct interpretation of the data sets in the information elements is effected via a checking of the validity. In order, for example, to alter the data structure of a data element, initially a new sequence is created as a copy of the original and for this copy a new temporal referencing is determined. In the superior hierarchy level or levels there are now applied information element sets corresponding to the new data structure. These contain in the hierarchy fields the same attributes as were associated with the original sequence, but have as temporal referencing the value of the sequence copy. Finally, the data structure of the information element of the sequence copy is appropriately modified. The indicated sequence is one of many possibilities and can be determined upon building of the database. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> Building and administering the data structure of the database in accordance with the invention are effected by means of an information management program the process steps of which will be described in more detail below. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the input mask <highlight><bold>40</bold></highlight> for the optional building of a DELTA-level is illustrated. For a user, the building of a DELTA-level is confined to the definition of a first element &dgr;<highlight><subscript>x </subscript></highlight>in this level. &dgr;<highlight><subscript>x </subscript></highlight>is built by the input of a description <highlight><bold>41</bold></highlight> into an input field <highlight><bold>42</bold></highlight>. In <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, &ldquo;Administration&rdquo; is employed as description. In a further embodiment of the present invention there may be additionally input a description of the element. The allocation of an attribute in the field &ldquo;Delta&rdquo;, in the example of <cross-reference target="DRAWINGS">FIG. 3</cross-reference> the value &ldquo;001&rdquo;, is normally effected automatically. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows the input mask for the building of an ALPHA-level provided by the building of a set of sequences for the determination of an information element set &agr;<highlight><subscript>xy</subscript></highlight>. In a first input mask <highlight><bold>50</bold></highlight> the description <highlight><bold>52</bold></highlight> of the information element set is input. In the example, the description &ldquo;Clipboard&rdquo;. As previously for the DELTA-level, here also in a further exemplary embodiment of the present invention there may also be indicated additionally a description of the information element set. In a second input mask <highlight><bold>51</bold></highlight> the individual information elements of &agr;<highlight><subscript>xy </subscript></highlight>are defined in succession. For clarity, in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, only the basic fields <highlight><bold>53</bold></highlight> of the core definitions of the basic foundation are indicated. In the indicated example, the data elements <highlight><bold>54</bold></highlight> of an information element (each data element corresponds in each case to an instantiation of a basic field definition) are input into input fields <highlight><bold>55</bold></highlight> below the field description <highlight><bold>53</bold></highlight>. Already defined information elements <highlight><bold>56</bold></highlight> are indicated therebelow. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> The input mask for the BETA-level in turn consists of two part masks, as illustrated in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. Analogously to the levels of the superior hierarchy levels there is input into a first part mask <highlight><bold>60</bold></highlight> a designation <highlight><bold>62</bold></highlight> of the information element set &bgr;<highlight><subscript><highlight><subscript>xyz</subscript></highlight></subscript></highlight>, and, if applicable also a description. The second part mask <highlight><bold>61</bold></highlight> contains designations <highlight><bold>64</bold></highlight> of the information elements of the information element set <highlight><subscript>&agr;</subscript></highlight><highlight><subscript><highlight><subscript>xy </subscript></highlight></subscript></highlight>previously selected as template, and in relation thereto input fields <highlight><bold>63</bold></highlight> for the input of the actual instantiations <highlight><bold>65</bold></highlight> of these fields for an information element of the BETA-level. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> The necessity for a designation or a description is not present on the GAMMA-level, since here the description of the type as effected on the BETA-level is sufficient. The input mask <highlight><bold>70</bold></highlight> of the GAMMA-level presents, as illustrated in the example of <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the designations <highlight><bold>71</bold></highlight> of the information elements of the information element set &bgr;<highlight><subscript>xyz </subscript></highlight>previously selected as template with indication of and ordered in accordance with the status <highlight><bold>72</bold></highlight> of the corresponding field. The input fields <highlight><bold>73</bold></highlight> for the input of the current instantiation <highlight><bold>75</bold></highlight> of this field in a current information element of the GAMMA-level are placed in optical relationship to their designations. In the case of a reference field, a listbox <highlight><bold>75</bold></highlight> assumes the role of an input field. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> Advantageously the input masks present further information, such as for example ordering (status sequence <highlight><bold>76</bold></highlight>) or associated (status indication <highlight><bold>72</bold></highlight>) information, but also the designation <highlight><bold>77</bold></highlight> and/or description of the information elements of superior hierarchy levels selected as templates. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> The issue of the attribute values into the hierarchy fields is effected automatically in order to avoid that duplicate values, and thus unclear associations, arise. The issue attribute values can be realized for example by means of a counter, which for each input of an information element set issues an unique value as attribute for the internal data field &ldquo;RNR&rdquo;. Therewith, each sequence of the database is unique. In the case of anchor information element the attribute value in the field &ldquo;RNR&rdquo; is passed into the corresponding hierarchy field. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> In the case of building of a new DELTA-element, its anchor information element thus has the same value in the hierarchy field &ldquo;Delta&rdquo; as in the internal data field &ldquo;RNR&rdquo;. An anchor information element of the ALPHA-level has the same values in the fields &ldquo;Alpha&rdquo; and &ldquo;RNR&rdquo;, an anchor information element of the BETA-level has the same values in the fields &ldquo;Beta&rdquo; and &ldquo;RNR&rdquo; and an anchor information element of the GAMMA-level has the same values in the fields &ldquo;Gamma&rdquo; and &ldquo;RNR&rdquo;. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> An overview of an example of processing logic of the information management program in accordance with the present invention is given by the simplified flow diagram <highlight><bold>800</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. At the beginning, in step S<highlight><bold>810</bold></highlight> a query is raised whether an element should be created within a predetermined, that is already existing, group. The expression &ldquo;group&rdquo; relates in this context to a logical unit such as is provided by a &dgr;-element consisting of one or two information elements on the DELTA level. If the answer is no, in step S<highlight><bold>820</bold></highlight> the creation of a group is suggested and if this suggestion is agreed it is asked in step S<highlight><bold>830</bold></highlight> whether a, or a new, &dgr;-element should be created. In the case of a positive answer, in step S<highlight><bold>832</bold></highlight> the fields for the &dgr;-element (designation, possibly also description) are displayed to be filled in, and in the following step S<highlight><bold>833</bold></highlight> the &dgr;-element is finally taken up, whereby for the case that the first &dgr;-element of the database is involved, at the same time the DELTA level is created. If the query S<highlight><bold>830</bold></highlight> is answered with no, a termination of the input mode is effected in step S<highlight><bold>831</bold></highlight>. A negative answer to the query S<highlight><bold>820</bold></highlight> goes directly over to step S<highlight><bold>811</bold></highlight>, since the employment of a group for creation of information sets is not positively required. After creation of the &dgr;-element, the processing logic begins again at step S<highlight><bold>810</bold></highlight>, whereafter in step S<highlight><bold>811</bold></highlight> fields for the input of a designation and/or description of an information element set of the ALPHA-level are displayed. In step S<highlight><bold>812</bold></highlight> the instantiations of the basic field definitions for this information element set are input in the form of one or more information elements. The thus effected Alpha definitions are taken over by information elements on the BETA-level in step S<highlight><bold>813</bold></highlight>. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> After a query S<highlight><bold>840</bold></highlight> whether further information is to be created (a no answer leads to the termination S<highlight><bold>831</bold></highlight> of the current input mode), in step S<highlight><bold>841</bold></highlight> an information element set of the ALPHA-level can be selected. In step S<highlight><bold>842</bold></highlight> there are displayed fields for the input of a designation and/or description of an information element set of the BETA-level. In the following step S<highlight><bold>843</bold></highlight> the selected ALPHA definitions are effected and the instantiations of the &bgr;-information elements is effected. Finally, the new information element set of the BETA-level is taken over in step S<highlight><bold>844</bold></highlight>. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> The input of information element into the GAMMA-level begins in step S<highlight><bold>845</bold></highlight> with the selection of a desired BETA definition, that is the field definitions as they are determined in a particular &bgr;-information element set. The input of designations and/or descriptions, as in the ALPHA and BETA-levels, is not required, but analogously to further data input in these hierarchy steps the instantiations of one or more <highlight><bold>65</bold></highlight> -information elements are input in step S<highlight><bold>846</bold></highlight> on the basis of the selected Beta definitions. The taking-up of this data is effected in step S<highlight><bold>847</bold></highlight> and in the last step all generated data is finally stored. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> The information management program permits access to all information elements of the BETA-, GAMMA- and DELTA-levels. Through input of a designating and/or descriptive element of the DELTA-level, an information element set of the ALPHA-level, information element set of the BETA-level or of an information element or a part of an information element, all relevant stored information can be found and output. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> The block diagram of <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows the basic components of the information management program <highlight><bold>90</bold></highlight> in accordance with the invention. The task of the administration module <highlight><bold>91</bold></highlight> is the control of the data storage in a database <highlight><bold>94</bold></highlight> corresponding to the needs of the database and the making available of an accesses to this database. The making available of masks for the input of data and for the creation of queries is realized via the interface <highlight><bold>92</bold></highlight> for input/output of data. The interface to user programs which access the data of the database is formed by the interpretation module <highlight><bold>93</bold></highlight>. It makes it possible for database users, such as for example user programs, to access the data without knowledge of structures and field attributes or the systematic organization of the database. The required data is then passed on by the interpretation module <highlight><bold>93</bold></highlight> either together with the field definitions to the user program or passed on formatted corresponding to requirements of the user program. Vice versa, the interpretation module can apply structure templates, i.e. field definitions, to data directed thereto and can thus itself effect field content allocations and field content transfers, without having to taking into consideration the individual applications. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> The basis of this translation of data structures is the storing of an interpretation structure in the database itself. An example of this is given in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>. The available interpretation structures are assembled under the element &ldquo;IT&rdquo; of the DELTA-level. On the ALPHA-level the structure elements necessary for the translation are defined, and the structure definitions are located on the BETA-level. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> The translation of the data structures is effected in accordance with allocation rules which in turn are themselves stored in the database. This is possible since the parameters of the rules can be represented as elements of a database. <cross-reference target="DRAWINGS">FIG. 11</cross-reference> gives an example for such a storage of allocation rules. As previously the interpretation structure itself, the allocation rules are also assembled under the element &ldquo;IT&rdquo; of the DELTA-level. In the ALPHA-level the basic elements necessary for the determination of the rules are defined. The information elements of the BETA-level set the formats for the fields of an allocation rule, and building therefrom each information element of the GAMMA-level contains an allocation rule in the form of a parameter set. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> In the example of <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, the temporal referencing of the information elements is used to restrict the validity of a document type. In information element set &ldquo;1032&rdquo; the &ldquo;reminder&rdquo; loses is validity on 4.1.2001 and is replaced by the &ldquo;further reminder&rdquo; with the beginning of 5.1.2001. Beyond this, there can be employed for example references in an information element of the GAMMA-level in order to determine consequential rules. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> The communication between an application program and the interpretation module is built upon the issue of requests to the interpretation module., A request contains at least indications concerning its nature or kind, the source data to be translated, the system from which the source data originates, in other words a designation of the delivering system, and a designation of the target system and an output point for the target information. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> The database may here itself accommodate the delivering and/or target system, but also external databases may be considered as delivering and as target systems. Particularly in the latter case, the interpretation module assumes the tasks for example of the translation, conversion and transformation of data and data structures of different origins and other information, so that a user program can exchange data between different data processing devices without knowing their structures. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> The processing schematic of the interpretation module is illustrated in the flow diagram of <cross-reference target="DRAWINGS">FIG. 12</cross-reference>. Initially, the request data of the user program is read in step S<highlight><bold>1201</bold></highlight>. The request data contains a key, which indicates the kind or nature of the request, e.g. a transformation service. On the basis of this key the interpretation module seeks the data for interpretation of the request data in the database, in step S<highlight><bold>1202</bold></highlight>. In the following step S<highlight><bold>1203</bold></highlight> these information element sets in the BETA- and ALPHA-level belonging to the key are read out and thus finally in step S<highlight><bold>1204</bold></highlight> the data part of the request, which contains the detail indications concerning the request, is interpreted. From these indications the interpretation module determines in step S<highlight><bold>1205</bold></highlight> the structure name of the delivering system and, possibly, the kind of file opening. With the knowledge of the structure name, the read-in of the structure of the delivering system, as is illustrated for example in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, can be effected from the database in step S<highlight><bold>1206</bold></highlight>. For reliable identification of the data of the delivering system these receive a tracking number in step S<highlight><bold>1207</bold></highlight>. The length of the tracking number is read from a length field, i.e. from a data element which is an instantiation of a field for the length indication. In the following step S<highlight><bold>1208</bold></highlight>, the data of the delivering system is stored internally corresponding to the structure of the database, whereby suitable information element sets, i.e. information element sets reproducing the structure of the delivering system, are created on the ALPHA-level and on the BETA-level. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> Analogously there is now affected the reading-in of the structure of the target system from the database, in step S<highlight><bold>1209</bold></highlight>, whereby also here the output data receives a tracking number corresponding to the indications in the length fields in step S<highlight><bold>1210</bold></highlight>. The creation of a structure in a database for receiving the output data, that is the data for the target system, in step <highlight><bold>1211</bold></highlight> likewise contains as in step S<highlight><bold>1208</bold></highlight> the creation of suitable information element sets on the ALPHA-level and on the BETA-level. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> In the next step S<highlight><bold>1212</bold></highlight> the requirements of the request are read. The allocation rules (see e.g. <cross-reference target="DRAWINGS">FIG. 11</cross-reference>) corresponding to these requirements are then read out of the database in step S<highlight><bold>1213</bold></highlight> and in step S<highlight><bold>1214</bold></highlight> stored in an internal structure consisting of information element sets on ALPHA, BETA and GAMMA-levels. In the next step S<highlight><bold>1215</bold></highlight> there is effected the interpretation of the rules for the transformation, calculation or translation on the basis of the field types and finally the transfer of the field contents from the input structure into the output structure in step S<highlight><bold>1216</bold></highlight>. Requirements which are not contained within a request are not carried out. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> An example of a request of the interpretation module is a transformation service. The transformation service relieves the database systems communicating with one another from the necessity for each partner system to have its own interface. Instead of this, the necessary data is requested via the transformation service of the interpretation module and is received in the system&apos;s own structure. The interpretation module assumes responsibility for the information exchange and at the same time the translation of delivered content into target content. This is schematically illustrated in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. A target system, system C <highlight><bold>1301</bold></highlight> requires data from two delivering systems, System A <highlight><bold>1303</bold></highlight> and System B <highlight><bold>1305</bold></highlight> via the interpretation module. The structures of the delivering systems <highlight><bold>1303</bold></highlight> and <highlight><bold>1306</bold></highlight> and of the target system <highlight><bold>1302</bold></highlight> are mimicked internally corresponding to the systematics of the database. In accordance with the allocation rules, the field contents of the delivering systems are now transferred into the structure of the target system. Thereby on the one hand the sequence of the fields may be altered, but also the data type of the field may also be altered. Further, not all field contents need to be transferred, and moreover the content of a field of a delivering system may be divided and each part thereof passed to its own field of the target system. Conversely, the content of a plurality of fields of the delivering systems can be combined in one field of the target system. The allocation rules may further also contain instructions for the interpretation of a field content, whereby the result of the interpretation can then be written in a field of the target system. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> At this point it is noted that the described transformation is only one selected example for the purpose of illustration of the manner of functioning of the interpretation module. Further application functions are for example, amongst others, the storing and interpretation of data for program control without programming, the storing and interpretation and output of information of all common formats, the storing of tests of external programs, rule-based controls of workflows without programming. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> In a preferred exemplary embodiment of the present invention the described services of the interpretation module <highlight><bold>93</bold></highlight> are provided with the aid of a central control device <highlight><bold>98</bold></highlight> to a demand oriented interface control system, so that a client-server-client-communication can be realized. The central control device <highlight><bold>98</bold></highlight> can be realized to be independently runnable, but not functionally independent from the information management program <highlight><bold>90</bold></highlight> in accordance with the invention. The communication of the central control device <highlight><bold>98</bold></highlight> with the administration module <highlight><bold>91</bold></highlight> of the information management program <highlight><bold>90</bold></highlight> is effected via the interpretation module <highlight><bold>93</bold></highlight>. On the other hand, the information management program <highlight><bold>90</bold></highlight> can work with the database in accordance with the invention independently of the central control device <highlight><bold>98</bold></highlight>, in the manner of peer-to-peer-communication. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> The task of the central control device <highlight><bold>98</bold></highlight> is the control of requests from delivering systems <highlight><bold>95</bold></highlight> or target systems <highlight><bold>96</bold></highlight> to the information management program <highlight><bold>90</bold></highlight>, whereby the processing of a request is undertaken in the above described way by the interpretation module <highlight><bold>93</bold></highlight>. The central control device <highlight><bold>98</bold></highlight> makes use of the interpretation module <highlight><bold>93</bold></highlight> and the rule and structure information stored in the database for controlling the requests from the most diverse systems. Via the central control device <highlight><bold>98</bold></highlight>, differing systems <highlight><bold>95</bold></highlight> and <highlight><bold>96</bold></highlight>, having different requirements and operating with different data formats, can communicate with one another or exchange data, since this device <highlight><bold>98</bold></highlight> brings about a decoupling of the communication in that it assumes responsibility for matching the requests from the various systems. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> On the basis of predetermined rules, held ready in the database, the central control device <highlight><bold>98</bold></highlight> assumes responsibility, via the interpretation module <highlight><bold>93</bold></highlight>, for the checking of the data of a delivering system for correctness or integrity. Fields for the target system can, in case of need, be filled directly by means of the interpretation module <highlight><bold>93</bold></highlight> from the central control device <highlight><bold>98</bold></highlight> on the basis of information of the delivering system. The central control device can moreover also fill fields for the target system without accessing field contents of the delivering system. Examples for this are inter alia the insertion of transformation relevant information such as for example a running number, or the insertion of values which assist in avoiding a &ldquo;divide by zero&rdquo; error in the target system. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> If a request contains a particular processing dateline, the central control device assumes responsibility for monitoring this dateline and brings about the timely completion of the request. Requests without explicit processing datelines are carried out at the next possible time point. Thus, an acquisition of delivery data can be effected at different times from different, or also from the same, delivering system, just as the passing on of the transformed data to the target system can be effected at a different time point. The communication between the systems can thus be organized independently of the run times of the two systems. If desired, the systems receive return reports concerning the processing condition of the sent requests, which may be useful for example to access processing information of the target system. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> A full documentation of all processes is provided by monitoring statistics which are effected in parallel. Each individual part procedure is recorded and is thereby checkable at any time. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> The described method allows the creation of a plurality of different data structures in a simple manner on all systems and platforms, without conventional database. The data management system contains in itself the definition of the fields and data structures. Thus, in user programs which access the data of the database these structure definitions can be largely omitted. If, however, a user program needs the structure itself, this can also be requested from the database. The interpretation module offers, with the structure information and allocation rules stored in the database, the possibility for user programs to request data from other database Systems without knowledge of the structure of the systems. The central control device further ensures communication between many different kinds of delivering and receiver media. The database of the database can, in the simplest case be effected as a flat-file database with a metastructure corresponding to a table, the data can however be stored distributed also in a plurality of files. </paragraph>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. Database (<highlight><bold>100</bold></highlight>) for receiving information in the form of arbitrarily structured data sets in at least one storage device of one or more data processing devices, having hierarchy levels (<highlight><bold>119</bold></highlight>, <highlight><bold>129</bold></highlight>), whereby 
<claim-text>a superior hierarchy level (<highlight><bold>119</bold></highlight>) contains information elements (<highlight><bold>111</bold></highlight>, <highlight><bold>112</bold></highlight>, <highlight><bold>113</bold></highlight>) for a definition of the, structure of information elements (<highlight><bold>130</bold></highlight>, <highlight><bold>140</bold></highlight>, <highlight><bold>150</bold></highlight>) of a subordinate hierarchy level (<highlight><bold>129</bold></highlight>), and </claim-text>
<claim-text>a subordinate hierarchy level (<highlight><bold>129</bold></highlight>) contains information elements (<highlight><bold>130</bold></highlight>, <highlight><bold>140</bold></highlight>, <highlight><bold>150</bold></highlight>) in an instantiation (<highlight><bold>131</bold></highlight>-<highlight><bold>136</bold></highlight>, <highlight><bold>141</bold></highlight>-<highlight><bold>146</bold></highlight>, <highlight><bold>151</bold></highlight>-<highlight><bold>156</bold></highlight>) in accordance with a structure which is defined by at least one information element (<highlight><bold>111</bold></highlight>, <highlight><bold>112</bold></highlight>, <highlight><bold>113</bold></highlight>) of the superior hierarchy level, </claim-text>
<claim-text>a first hierarchy level (<highlight><bold>21</bold></highlight>) contains information elements for the definition of the structure of information elements of a second hierarchy level (<highlight><bold>22</bold></highlight>), </claim-text>
<claim-text>a second hierarchy level (<highlight><bold>22</bold></highlight>) contains information elements for the definition of the structure of information elements of a third hierarchy level (<highlight><bold>23</bold></highlight>), </claim-text>
<claim-text>a third hierarchy level (<highlight><bold>23</bold></highlight>) contains information elements for receiving information, and </claim-text>
<claim-text>a link structure (<highlight><bold>24</bold></highlight>) connects the information on different hierarchy levels, characterized in that </claim-text>
<claim-text>the link structure (<highlight><bold>24</bold></highlight>) contains in a first internal data field (<highlight><bold>31</bold></highlight>) a first attribute for the unique association of an information element with an information element or with a set of information elements of the first hierarchy level (<highlight><bold>21</bold></highlight>), in a second internal data field (<highlight><bold>32</bold></highlight>) a second attribute for the unique association of an information element with an information element or with a set of information elements of the second hierarchy level (<highlight><bold>22</bold></highlight>), in a third internal data </claim-text>
<claim-text>field (<highlight><bold>33</bold></highlight>) a third attribute for the unique association of an information element with a set of information elements of the third hierarchy level (<highlight><bold>23</bold></highlight>), and </claim-text>
<claim-text>the allocation of an information element to a hierarchy level is determined from the existence of and/or the values of the attributes in the first, second and third internal data fields of the link structure. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. Database according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>in a basic foundation a definition of the structure of information elements of the first hierarchy level (<highlight><bold>21</bold></highlight>) is effected. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. Database according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> or <highlight><bold>2</bold></highlight>, 
<claim-text>characterized by 
<claim-text>an ordering level (<highlight><bold>25</bold></highlight>) for the grouping of elements of the first hierarchy level (<highlight><bold>21</bold></highlight>) and/or elements of the second hierarchy level (<highlight><bold>22</bold></highlight>). </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. Database according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>a fourth internal data field (<highlight><bold>34</bold></highlight>) contains a fourth attribute for the unique association of an information element with an information element or with a set of information elements of the ordering level (<highlight><bold>25</bold></highlight>). </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. Database according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference> or <highlight><bold>4</bold></highlight>, 
<claim-text>characterized in that, 
<claim-text>the allocation of an information element to the ordering level is determined from the existence of and/or the value of the attribute in the fourth internal data field of the link structure. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. Database according to any of <dependent-claim-reference depends_on="CLM-00001">claims 1</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00005">5</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>the build-up of the link structure (<highlight><bold>24</bold></highlight>) is provided by the combination of the values of the first, second and third attributes, and in the case of the existence of an ordering level, additionally through the value of the fourth attribute. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. Database according to any of <dependent-claim-reference depends_on="CLM-00001">claims 1</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00006">6</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>in a fifth internal data field (<highlight><bold>35</bold></highlight>) of the link structure, a fifth attribute for a unique identification is associated with each information element. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. Database according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>there is provided a sixth internal data field (<highlight><bold>36</bold></highlight>) of the link structure for receiving information elements of the hierarchy levels. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. Database according to any of <dependent-claim-reference depends_on="CLM-00001">claims 1</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00008">8</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>there is associated with each information element a time value for determining its temporal referencing. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. Database according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>the temporal referencing is assembled of an initial value and a final value. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. Database according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>the initial value and final value of the temporal referencing are taken into internal data fields (<highlight><bold>37</bold></highlight>, <highlight><bold>38</bold></highlight>) of the link structure. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. Database according to any of <dependent-claim-reference depends_on="CLM-00008">claims 8</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00011">11</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>an alteration of an information element involves the following steps: </claim-text>
<claim-text>generation of a new information element as a copy of the information element to be altered, </claim-text>
<claim-text>alteration of the new information element, and </claim-text>
<claim-text>allocation of a new temporal referencing to the new information element. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. Database according to any of <dependent-claim-reference depends_on="CLM-00001">claims 1</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00012">12</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>the definitions determined in an information element or in a set of information elements of the first hierarchy level (<highlight><bold>21</bold></highlight>) form the template for the instantiation of an information element of the second hierarchy level (<highlight><bold>22</bold></highlight>) having an identical value of the attribute in the first internal data field (<highlight><bold>31</bold></highlight>) of the link structure, and </claim-text>
<claim-text>the definitions determined in a information element or in a set of information elements of the second hierarchy level (<highlight><bold>22</bold></highlight>) form the template for the instantiation of an information element of the third hierarchy level (<highlight><bold>23</bold></highlight>) having an identical value of the attribute in the second internal data field (<highlight><bold>32</bold></highlight>) of the link structure. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. Database according to any of <dependent-claim-reference depends_on="CLM-00001">claims 1</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00013">13</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>each set of information elements has an anchor information element (<highlight><bold>39</bold></highlight>) for which the value of the attribute in its internal data field (<highlight><bold>31</bold></highlight>, <highlight><bold>32</bold></highlight>, or <highlight><bold>33</bold></highlight>) of the link structure designating its allocation to a hierarchy level is identical with the value of the attribute in the fifth internal data field (<highlight><bold>35</bold></highlight>) of the link structure associated therewith. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. Database according to any of <dependent-claim-reference depends_on="CLM-00001">claims 1</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00014">14</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>each set of information elements which does not belong to the third hierarchy level (<highlight><bold>23</bold></highlight>) has at least one information element having a content descriptive of this set of information elements. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. Database according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>one of these information elements having descriptive content is the anchor information element (<highlight><bold>39</bold></highlight>). </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. Method for setting-up and for administering a database in accordance with a database according to any of <dependent-claim-reference depends_on="CLM-00001">claims 1</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00016">16</dependent-claim-reference> comprising steps for establishing the hierarchy levels, for establishing information elements within these hierarchy levels, and for the production of links between information elements on different hierarchy levels. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. Method according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>a plurality of individual databases are assembled to one logical database. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. Method according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> or <highlight><bold>18</bold></highlight>, 
<claim-text>characterized in that, 
<claim-text>an interpretation of data sets from a delivering system external to the database is effected on the basis of data structure information concerning the delivering system, which information is stored in the form of one or more information elements in the database. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. Method according to any of claims <highlight><bold>17</bold></highlight>, <highlight><bold>18</bold></highlight> or <highlight><bold>19</bold></highlight>, 
<claim-text>characterized in that, 
<claim-text>a structuring of data sets for output to a target system external to the database is effected on the basis of data structure information concerning the target system, which information is stored in the form of one or more information elements in the database. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. Method according to any of <dependent-claim-reference depends_on="CLM-00017">claims 17</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00020">20</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>a transfer of data sets from a first structure to a second structure is effected in accordance with allocation rules which are stored in the database in the form of one or more information elements. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. Method according to any of <dependent-claim-reference depends_on="CLM-00017">claims 17</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00021">21</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>a communication of application programs with the database is effected in the form of requests to the database. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. Method according to <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>a request to the database contains at least indications concerning the kind or nature of the request. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. Method according to <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference> or <highlight><bold>23</bold></highlight>, 
<claim-text>characterized in that, 
<claim-text>a control of requests from application programs to the database is effected by means of a central control device (<highlight><bold>98</bold></highlight>). </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. Method according to <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>the central control device (<highlight><bold>98</bold></highlight>) undertakes a check of the integrity of data from a request on the basis of rules which are stored in the databank of the database in the form of one or more information elements. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. Method according to <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> or <highlight><bold>25</bold></highlight>, 
<claim-text>characterized in that, 
<claim-text>a request to the database has a processing dateline and the central control device (<highlight><bold>98</bold></highlight>) brings about the completion of the request by the processing dateline. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. Method according to <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, <highlight><bold>25</bold></highlight> or <highlight><bold>26</bold></highlight>, 
<claim-text>characterized in that, 
<claim-text>the central control device (<highlight><bold>98</bold></highlight>) carries out part requests of at least two application programs, the part requests together forming a common request to the database, independently of one another corresponding to the needs of each part request. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. Method according to any of <dependent-claim-reference depends_on="CLM-00024">claims 24</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00027">27</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>the central control device (<highlight><bold>98</bold></highlight>) informs an application program about the state of processing of a request. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. Method according to any of <dependent-claim-reference depends_on="CLM-00024">claims 24</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00028">28</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>the central control device (<highlight><bold>98</bold></highlight>) creates additional data on the basis of information in the database. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. Information management program (<highlight><bold>90</bold></highlight>) for being executed on one or more data processing devices having means for carrying out a method in accordance with any of <dependent-claim-reference depends_on="CLM-00017">claims 17</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00029">29</dependent-claim-reference>. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. Information management program according to <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>the information management program (<highlight><bold>90</bold></highlight>) and the database administered by the information management program are operated on different data processing devices. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. Apparatus for receiving and administering information in the form of arbitrarily structured data sets having 
<claim-text>at least one data processing facility, </claim-text>
<claim-text>at least one storage device for receiving the data sets, and </claim-text>
<claim-text>a device for executing a database management program in accordance with any of <dependent-claim-reference depends_on="CLM-00022">claims 22</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00031">31</dependent-claim-reference>. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. Apparatus according to <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference>, 
<claim-text>characterized in that, 
<claim-text>at least one data processing facility of the apparatus exchanges data via a network connection. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. Apparatus according to <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference> or <highlight><bold>33</bold></highlight>, 
<claim-text>characterized in that, 
<claim-text>at least one data processing facility of the apparatus is accessible via a public network.</claim-text>
</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>9</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004960A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004960A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004960A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004960A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004960A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004960A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004960A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004960A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004960A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004960A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004960A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030004960A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
