<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002509A1-20030102-D00000.TIF SYSTEM "US20030002509A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002509A1-20030102-D00001.TIF SYSTEM "US20030002509A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002509A1-20030102-D00002.TIF SYSTEM "US20030002509A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002509A1-20030102-D00003.TIF SYSTEM "US20030002509A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002509A1-20030102-D00004.TIF SYSTEM "US20030002509A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002509A1-20030102-D00005.TIF SYSTEM "US20030002509A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002509A1-20030102-D00006.TIF SYSTEM "US20030002509A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002509A1-20030102-D00007.TIF SYSTEM "US20030002509A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002509A1-20030102-D00008.TIF SYSTEM "US20030002509A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002509A1-20030102-D00009.TIF SYSTEM "US20030002509A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002509A1-20030102-D00010.TIF SYSTEM "US20030002509A1-20030102-D00010.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002509</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10147279</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020515</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L012/28</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>370</class>
<subclass>395720</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>370</class>
<subclass>428000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Distributed shared memory packet switch</title-of-invention>
</technical-information>
<continuity-data>
<non-provisional-of-provisional>
<document-id>
<doc-number>60291284</doc-number>
<document-date>20010517</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Jan</given-name>
<family-name>Vandenhoudt</family-name>
</name>
<residence>
<residence-non-us>
<city>Turnhout</city>
<country-code>BE</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Alan</given-name>
<family-name>Mimms</family-name>
</name>
<residence>
<residence-us>
<city>Spokane</city>
<state>WA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>CHRISTIE, PARKER &amp; HALE, LLP</name-1>
<name-2></name-2>
<address>
<address-1>350 WEST COLORADO BOULEVARD</address-1>
<address-2>SUITE 500</address-2>
<city>PASADENA</city>
<state>CA</state>
<postalcode>91105</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A shared memory packet switch fabric whose scheduling task is distributed to multiple egress schedulers residing on multiple egress control units and whose data storage is distributed to multiple packet buffer units, where the schedulers and the packet buffer units are interconnected via high speed links. An ingress control unit receives and transmits a packet to one of a plurality of packet buffer units (PBUs) making up the switch fabric. The receiving PBU stores the packet in memory and transmits a notification message with the memory information to all interested egress control units. If an egress control unit receiving the notification has enough queue space, it stores the memory information in its queue. The egress control unit then transmits a booking message indicating that it is to request the packet in the future. When the packet is to be scheduled for forwarding according to a scheduling algorithm run by the egress control unit, the egress control unit transmits a request message for retrieving the packet from the PBU. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS-REFERENCE TO RELATED APPLICATION(S) </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application claims the benefit of U.S. provisional application No. 60/291,284 filed on May 17, 2001, the content of which is incorporated herein by reference.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This invention relates generally to packet switching systems, and more particularly, to a shared memory switch fabric whose scheduling is distributed to multiple egress schedulers. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> A switch fabric in a data communications switch facilitates the transport of data packets received from an ingress port to an egress port for forwarding the packet to a destination. The switch fabric may be implemented as a crossbar switch, cell switch, or shared memory packet switch. One advantage of the shared memory packet switch when compared to other types of switch fabrics is its robustness under high traffic loads. Shared memory packet switches generally provide for lower packet loss and lower latency than other types of switch fabrics. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Shared memory packet switches, however, utilize a single central logic that makes scheduling decisions for all packets destined for all egress ports. As fabric size increases, this also increases the burden on the central logic. Thus, shared memory packet switches often suffer from a lack of scalability beyond a data rate 100 Gbit/sec. In addition, the number of electrical interfaces needed to support the bandwidth for a larger system discourages the larger switch fabric size. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Although crossbar fabrics, cell fabrics, or other switch fabrics implementing a virtual output queue (VOQ) scheduling may be scaled beyond the size of shared memory packet switches, they suffer from lack of robustness and are also susceptible to head of line blockage during high traffic loads. In addition, although switch fabrics implementing VOQ scheduling distribute the scheduling task to various ingress schedulers instead of relying on a single central scheduler, they suffer from the disadvantage that each ingress port must maintain its own set of egress queues for each egress port, magnifying the number of queues that need to be created and maintained. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Accordingly, there is a need for a switch fabric that is easily scalable without compromising its robustness under high traffic loads. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The present invention is directed to a shared memory packet switch fabric whose scheduling task is distributed to multiple egress schedulers residing on multiple egress control units. The switch fabric includes a number of switch and data storage devices where each device manages a fraction of the traffic. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> According to one embodiment, a packet switching system includes a plurality of ingress control units, a plurality of egress control units, and a switch fabric coupled to the plurality of ingress control units and the plurality of egress control units. The switch fabric is used to store packets received by the plurality of ingress control units, and each egress control unit identifies and requests from the switch fabric a packet destined for the egress control unit according to its respective scheduling algorithm. The switch fabric retrieves and transmits the requested packet to the requesting egress control unit for forwarding the packet to a destination. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> According to another embodiment, the switch fabric transmits a notification message to one or more egress control units and each of the receiving egress control units determines, based on a filling level of its respective queue, whether to discard the notification message or store in the queue the memory information included in the notification message. The egress control unit storing the memory information in its respective queue transmits to the switch fabric a booking message for indicating that it is to request the stored packet in the future. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The egress control unit storing the memory information in its respective queue transmits to the switch fabric a request message to retrieve the stored packet. The switch fabric receiving the request message retrieves and transmits the requested packet. When no further requests for the packet are anticipated, the memory location associated with the stored packet is freed. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> It should be appreciated, therefore, that the present invention avoids the need to burden a single centralized scheduling logic with an increased switch fabric size. The distribution of the scheduling task to multiple egress control units that identify and request from the switch fabric a packet according to their scheduling algorithm eliminates such a burden and allows the switch fabric to be easily scalable. In addition, implementing the switch fabric as a shared memory switch fabric allows the switching system to take advantage of the robustness offered by such shared memory switch fabrics.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> These and other features, aspects and advantages of the present invention will be more fully understood when considered with respect to the following detailed description, appended claims, and accompanying drawings where: </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a schematic block diagram of a packet switching system having M ingress control units, N packet buffer units, and M egress control units according to one embodiment of the invention; </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a schematic block diagram of an exemplary ingress control unit according to one embodiment of the invention; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a schematic layout diagram of a data packet including a notification tag that is generated by the ingress control unit of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> according to one embodiment of the invention; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a schematic block diagram of an exemplary packet buffer unit according to one embodiment of the invention; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a schematic layout diagram of a PBN buffer in the packet buffer unit of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> according to one embodiment of the invention; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a schematic layout diagram of a FGRP subscription table resident in the packet buffer unit of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> according to one embodiment of the invention; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a schematic block diagram of an exemplary egress control unit according to one embodiment of the invention; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a process flow diagram illustrating the processing steps performed by the ingress control unit of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> according to one embodiment of the invention; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a process flow diagram illustrating the processing steps performed by the packet buffer unit of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> according to one embodiment of the invention; and </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a process flow diagram illustrating the processing steps performed by the egress control unit of <cross-reference target="DRAWINGS">FIG. 7</cross-reference> according to one embodiment of the invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a schematic block diagram of a packet switching system according to one embodiment of the invention. The system includes M ingress control units (ICUs) <highlight><bold>10</bold></highlight> and M egress control units (ECUs) <highlight><bold>12</bold></highlight> coupled to a switch fabric <highlight><bold>14</bold></highlight> via high speed serial links <highlight><bold>18</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>18</bold></highlight><highlight><italic>b</italic></highlight>. The switch fabric <highlight><bold>14</bold></highlight> is made up of N packet buffer units (PBUs) <highlight><bold>16</bold></highlight> storing and forwarding packets received from one or more ICUs <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Each ICU <highlight><bold>10</bold></highlight> may have one or more associated input ports <highlight><bold>20</bold></highlight> and each ECU may have one or more associated output ports <highlight><bold>22</bold></highlight>. In addition, each ICU and ECU includes a link <highlight><bold>18</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>18</bold></highlight><highlight><italic>b </italic></highlight>to each PBU <highlight><bold>16</bold></highlight> so that each ICU and ECU may communicate with each PBU. According to one embodiment, the input/output ports <highlight><bold>20</bold></highlight>, <highlight><bold>22</bold></highlight> for each ICU/ECU <highlight><bold>10</bold></highlight>, <highlight><bold>12</bold></highlight> together transmit at a total data rate of 10 Gbit/sec, and each link <highlight><bold>18</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>18</bold></highlight><highlight><italic>b </italic></highlight>transmits at a data rate of 1 Gbit/sec. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> At any given time, all or a subset of the ICUs <highlight><bold>10</bold></highlight> receive data packets which are destined for all or a subset of the output ports <highlight><bold>22</bold></highlight>. The packets may include, but are not limited to Ethernet frames, ATM cells, TCP/IP and/or UDP/IP packets, and may also include other Layer 2 (Data link/MAC Layer), Layer 3 (Network layer), or Layer 4 (Transport Layer) data units. Upon receipt of a packet by an ICU, the ICU forwards the packet to a PBU for storing. The PBU stores the packet in memory and transmits a notification to all ECUs that may be interested in receiving the packet. If a receiving ECU has enough space in its appropriate queue, it queues a reference to a memory address that may be used to retrieve the packet from the PBU, and transmits an indication to the PBU, referred to as a booking message, that the reference to the address has been queued. The booking message prompts the PBU to keep the packet in memory until requested by all of the booking ECUs, after which the memory is freed up. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> When it is time to forward the packet to its destination, the ECUs that have booked the packet transmit a request to the PBU <highlight><bold>16</bold></highlight> to retrieve the packet. The PBU retrieves the packet and transmits it to the requesting ECUs which forward the packet via one or more associated egress ports. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a schematic block diagram of an exemplary ICU <highlight><bold>10</bold></highlight> according to one embodiment of the invention. The ICU in the illustrated embodiment includes an ingress data store <highlight><bold>30</bold></highlight> which is coupled to an ingress processor <highlight><bold>32</bold></highlight> which is in turn coupled to an ingress interface <highlight><bold>34</bold></highlight>. The ingress data store <highlight><bold>30</bold></highlight> may be a first-in-first-out (FIFO) buffer for receiving and temporarily storing inbound data packets The ingress data store <highlight><bold>30</bold></highlight> may be desirable if the data rate of one or more of the ingress ports <highlight><bold>20</bold></highlight> is lower or higher than the data rate of the high speed serial links <highlight><bold>18</bold></highlight><highlight><italic>a </italic></highlight>to the PBUs. An embodiment may exist, however, where the ICU <highlight><bold>10</bold></highlight> does not include an ingress data store <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The ingress packet processor <highlight><bold>32</bold></highlight> performs policing, accounting, forwarding, and any other packet processing task for the packet as is conventional in the art. In addition, the ingress packet processor <highlight><bold>32</bold></highlight> attaches a notification tag to the packet and selects a PBU <highlight><bold>16</bold></highlight> in the switch fabric that is to receive and store the packet. According to one embodiment of the invention, each link <highlight><bold>18</bold></highlight><highlight><italic>a </italic></highlight>from the ICU <highlight><bold>10</bold></highlight> to the PBU <highlight><bold>16</bold></highlight> is associated with a weight that is dynamically updated based on the load or filling level of its associated PBU. The ingress packet processor <highlight><bold>32</bold></highlight> selects a link <highlight><bold>18</bold></highlight><highlight><italic>a</italic></highlight>, and hence, an associated PBU, based on a pseudo random algorithm adjusted by the weight information, helping the workload to be balanced among the various PBUs. The packet with the appended notification tag is then transmitted on the selected link via the ingress interface <highlight><bold>34</bold></highlight> for storing in the selected PBU. Updates on the load of the various PBUs may be received via the high speed serial links <highlight><bold>18</bold></highlight><highlight><italic>a </italic></highlight>or via a separate low speed serial control link (not shown). </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a schematic layout diagram of a data packet <highlight><bold>90</bold></highlight> including a notification tag <highlight><bold>92</bold></highlight> that is generated by the ingress processor <highlight><bold>32</bold></highlight> according to one embodiment of the invention. In an alternative embodiment, the notification tag is generated by a network processor prior to forwarding the packet to the ICU <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> According to the embodiment illustrated in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the notification tag includes a flow group field <highlight><bold>94</bold></highlight>, priority field <highlight><bold>96</bold></highlight>, packet buffer number (PBN) field <highlight><bold>98</bold></highlight>, and an optional source identifier (SID) <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The flow group field <highlight><bold>94</bold></highlight> includes a flow group number indicative of a flow group associated with the packet. According to one embodiment of the invention, a flow group includes a list of ECUs that have subscribed to the flow group. An ECU subscribes to a flow group if one or more of its egress ports belong to the flow group. A port is associated with a flow group upon its initiation, either via hardware or software, and such information included in a forwarding table that is consulted at ingress for determining the egress ports for the packet. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The priority field <highlight><bold>94</bold></highlight> indicates a differentiated services codepoint (DCSP) value indicating a type of quality of service (QoS) to be rendered to the packet. This information may be obtained from the packet&apos;s header data and included in the notification tag. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The source identifier <highlight><bold>100</bold></highlight> also included in the notification tag indicates an ingress port on which the packet was received. The source identifier may also be obtained from the packet&apos;s header data. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The PBN field <highlight><bold>98</bold></highlight> includes a reference to a memory location in the PBU <highlight><bold>16</bold></highlight> that is selected to store the packet. Unlike the other fields of the notification tag, the PBN field <highlight><bold>98</bold></highlight> is filled by the PBU <highlight><bold>16</bold></highlight> once such a memory location is identified. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a schematic block diagram of an exemplary PBU <highlight><bold>16</bold></highlight> according to one embodiment of the invention. The PBU in the illustrated embodiment includes a central memory <highlight><bold>40</bold></highlight> for storing packets received from the ICUs <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> The PBU <highlight><bold>16</bold></highlight> further includes a PBN buffer <highlight><bold>42</bold></highlight> which may be implemented as a dynamic random access memory (DRAM) or a static RAM (SRAM). Each entry in the PBN buffer <highlight><bold>42</bold></highlight> includes an address, referred to as a PBN address, of a pointer to the central memory <highlight><bold>40</bold></highlight> where at least a portion of the packet is stored. According to one embodiment of the invention, the PBN address is the address of a first pointer of a linked list of pointers to memory locations where different portions of the packet are stored. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> Each PBN address stored in the PBU buffer <highlight><bold>42</bold></highlight> is associated with a plurality of booking bits reflective of the links <highlight><bold>18</bold></highlight><highlight><italic>b </italic></highlight>and their corresponding ECUs that have locally queued a reference to the PBN address in a corresponding queue and have indicated, via a booking action, an interest in receiving the packet associated with the PBN address. Each booking bit may also optionally be associated with a booking count indicative of the number of bookings received for the PBN address. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The PBN buffer <highlight><bold>42</bold></highlight> is coupled to a memory manager <highlight><bold>44</bold></highlight> which controls the free memory space in the central memory <highlight><bold>40</bold></highlight>, assigns the free memory space to new packets that need to be stored in the central memory, and assists in the retrieval of packets from the central memory. A free PBN store <highlight><bold>46</bold></highlight> is used for maintaining track of free memory locations that may be allocated to new incoming packets. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The PBU <highlight><bold>16</bold></highlight> also includes a central notification logic <highlight><bold>48</bold></highlight> coupled to a flow group (FGRP) subscription table <highlight><bold>50</bold></highlight>. The FGRP subscription table <highlight><bold>50</bold></highlight> indicates, for each particular flow group, an ECU that has subscribed to the flow group. According to one embodiment, the central notification logic <highlight><bold>48</bold></highlight> determines the flow group associated with the incoming packet and transmits notifications to ECUs that have subscribed to that flow group and would therefore be interested in receiving the packet. According to one embodiment of the invention, the notifications are all or a portion of the notification tag appended to the incoming packet. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> The PBU <highlight><bold>16</bold></highlight> further includes a switch interface <highlight><bold>52</bold></highlight> communicating with the ICUs <highlight><bold>10</bold></highlight> and ECUs <highlight><bold>12</bold></highlight> via the high speed serial links <highlight><bold>18</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>18</bold></highlight><highlight><italic>b</italic></highlight>. The switch interface <highlight><bold>52</bold></highlight> receives different types of packets from the ICUs <highlight><bold>10</bold></highlight> and ECUs <highlight><bold>12</bold></highlight>, and separates the different types of packets for forwarding to the appropriate components within the PBU. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> For example, the switch interface <highlight><bold>52</bold></highlight> receives from the ICUs <highlight><bold>10</bold></highlight> inbound packets with notification tags. The notification tags are stripped off of the data packets and transmitted to the central notification logic <highlight><bold>48</bold></highlight> for completing the PBN field <highlight><bold>98</bold></highlight> and for transmitting all or a portion of the notification tag as a notification message to the appropriate ECUs <highlight><bold>12</bold></highlight>. The data portion of the packet is transmitted to the central memory <highlight><bold>40</bold></highlight> for storage. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The switch interface <highlight><bold>52</bold></highlight> further receives booking messages and packet request messages from the ECUs <highlight><bold>12</bold></highlight> which are forwarded to the memory manager <highlight><bold>44</bold></highlight> for booking or retrieving packets for the ECUs. The switch interface <highlight><bold>52</bold></highlight> also receives subscription and unsubscription messages for subscribing and unsubscribing to particular flow groups. The subscription and unsubscription messages are transmitted to the central notification logic <highlight><bold>48</bold></highlight> for updating the FGRP subscription table <highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a schematic layout diagram of the PBN buffer <highlight><bold>42</bold></highlight> according to one embodiment of the invention. The PBN buffer includes a plurality of entries where each entry includes a PBN entry number <highlight><bold>60</bold></highlight>, a plurality of associated booking bits <highlight><bold>62</bold></highlight>, and a PBN address <highlight><bold>64</bold></highlight>. A new entry is added to the PBN buffer by the memory manager when a new packet is stored in the central memory <highlight><bold>40</bold></highlight>. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The PBN entry number <highlight><bold>60</bold></highlight> (also referred to as a reference to the PBN) is used as a reference to the booking bits <highlight><bold>62</bold></highlight> and associated PBN address <highlight><bold>64</bold></highlight>. According to one embodiment, the PBN entry number <highlight><bold>60</bold></highlight> is stored in the PBN field <highlight><bold>98</bold></highlight> of a notification tag <highlight><bold>92</bold></highlight>. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The PBN address <highlight><bold>64</bold></highlight> (also referenced simply as the PBN) is a start address of a linked list of pointers to memory locations storing different portions of a particular packet. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The booking bits <highlight><bold>62</bold></highlight> indicate the ECUs <highlight><bold>12</bold></highlight> that have booked a packet by queuing the associated PBN entry number in an egress queue. According to one embodiment, each booking bit is associated with a particular ECU. Each bit is set upon receipt of a booking message from the corresponding ECU and each bit is unset upon receipt of a packet request message from its ECU with a release bit indication. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a schematic layout diagram of the FGRP subscription table <highlight><bold>50</bold></highlight> resident in each PBU according to one embodiment of the invention. The table preferably includes a flow group number <highlight><bold>70</bold></highlight>, or any other type of identifier, and a plurality of subscription bits <highlight><bold>72</bold></highlight> indicative of the ECUs <highlight><bold>12</bold></highlight> that have subscribed to the group. According to one embodiment of the invention, each subscription bit is associated with a particular ECU. Each bit is set upon receipt of a subscription message from the corresponding ECU, and each bit is unset upon receipt of an unsubscription message from its corresponding ECU. The subscription information in the FGRP subscription table <highlight><bold>50</bold></highlight> is used for determining the ECUs subscribing to the flow group indicated in an inbound packet that may be interested in receiving the packet and are hence to receive a notification message from the PBU. Subscription and unsubscription to particular flow groups may be done in hardware or in software. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a schematic block diagram of an exemplary ECU <highlight><bold>12</bold></highlight> according to one embodiment of the invention. According to the illustrated embodiment, the ECU <highlight><bold>12</bold></highlight> includes an egress interface <highlight><bold>70</bold></highlight> communicating with the PBUs <highlight><bold>16</bold></highlight> over the high speed serial links <highlight><bold>18</bold></highlight><highlight><italic>b</italic></highlight>. The egress interface <highlight><bold>70</bold></highlight> receives different types of packets from the PBUs, and processes and forwards those packets to the appropriate egress components. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> According to one embodiment of the invention, the egress interface <highlight><bold>70</bold></highlight> transmits data packets retrieved from the PBUs to an egress data store <highlight><bold>72</bold></highlight> for temporarily storing the packet prior to forwarding over one or more egress ports <highlight><bold>22</bold></highlight>. The egress data store <highlight><bold>72</bold></highlight> may be implemented as a first-in-first-out (FIFO) buffer. The egress data store <highlight><bold>72</bold></highlight> may be desirable if the data rate of one or more of the egress ports <highlight><bold>22</bold></highlight> is lower or higher than the data rate of the high speed serial links <highlight><bold>18</bold></highlight><highlight><italic>b </italic></highlight>from the PBUs. An embodiment may exist, however, where the ECU <highlight><bold>12</bold></highlight> does not include an egress data store <highlight><bold>72</bold></highlight>. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> The egress interface <highlight><bold>70</bold></highlight> further receives notification message packets from the PBUs <highlight><bold>16</bold></highlight> and forwards them to an egress notification logic <highlight><bold>74</bold></highlight>. According to one embodiment of the invention, the notification message is the notification tag appended to a packet received by a PBU. In response, the egress notification logic <highlight><bold>74</bold></highlight> determines whether to book or discard a packet associated with a notification message. In this regard, the egress notification logic <highlight><bold>74</bold></highlight> determines the egress ports <highlight><bold>22</bold></highlight> that are to forward the packet based on the flow group number transmitted with the notification message. The egress notification logic <highlight><bold>74</bold></highlight> queries a FGRP port table <highlight><bold>80</bold></highlight> with the flow group information and determines the one or more egress ports <highlight><bold>22</bold></highlight> that are associated with the indicated flow group. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The egress notification logic <highlight><bold>74</bold></highlight> determines the queue levels of the egress queues <highlight><bold>76</bold></highlight> associated with the subscribed ports. If the queue levels are too high, as determined based on a congestion control algorithm currently being utilized, the notification is discarded. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> Otherwise, if the packet may be enqueued, the egress notification logic <highlight><bold>74</bold></highlight> enqueues the reference to the PBN transmitted in the notification message in an egress queue <highlight><bold>76</bold></highlight> that is selected based on the flow group field <highlight><bold>94</bold></highlight> and the priority field <highlight><bold>96</bold></highlight> of the notification message. The egress notification logic <highlight><bold>74</bold></highlight> further transmits a booking message to the PBU <highlight><bold>16</bold></highlight> that transmitted the notification message, indicating that the reference to the PBN was enqueued. According to one embodiment, the booking message includes at least the reference to the PBN uniquely identifying the packet to be booked The ECU transmits a single booking request even if more than one egress port is subscribed to the flow group indicated in the FGRP field <highlight><bold>94</bold></highlight>. The PBU can however receive multiple booking requests for the same PBN if the packet is to be transmitted by several ECUs. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> The ECU <highlight><bold>12</bold></highlight> includes an egress scheduler <highlight><bold>78</bold></highlight> that dequeues the reference PBNs from each egress queue <highlight><bold>76</bold></highlight> according to a particular scheduling algorithm, such as, for example, a weighted round robin algorithm, class based dequeuing, or the like. When a packet associated with an enqueued reference to a PBN is scheduled to be forwarded as determined by the scheduling mechanism, the egress notification logic <highlight><bold>74</bold></highlight> transmits a packet request message to the PBU. According to one embodiment, the packet request message includes the reference to the PBN and a release bit. If set, the release bit indicates that the request is a last request for the packet, allowing the booking bit for the packet to be cleared. The packet indicated in the request message is retrieved by the PBU and transmitted to the requesting ECU. The packet is then forwarded via one or more appropriate egress ports. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a process flow diagram illustrating the processing steps performed by the exemplary ICU <highlight><bold>10</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> according to one embodiment of the invention. The process starts, and in step <highlight><bold>110</bold></highlight>, the ingress port <highlight><bold>20</bold></highlight> receives an inbound data packet. In step <highlight><bold>112</bold></highlight>, the ingress processor <highlight><bold>32</bold></highlight> generates a notification tag and attaches the tag to the packet. In step <highlight><bold>114</bold></highlight>, the ingress processor selects a PBU <highlight><bold>16</bold></highlight> based on a pseudo random algorithm that is conventional in the art, adjusted by the weight associated with each PBU. In step <highlight><bold>116</bold></highlight>, the ICU forwards the data packet with the notification tag to the selected PBU. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> The ICU <highlight><bold>10</bold></highlight> further receives feedback packets from the PBUs <highlight><bold>16</bold></highlight> via either their associated high speed serial links or <highlight><bold>18</bold></highlight><highlight><italic>a </italic></highlight>or a separate control link (not shown). According to one embodiment, the feedback packets indicate the load of the transmitting PBUs. The load information is used, in step <highlight><bold>113</bold></highlight>, to modify the weight associated with each PBU which is used in determining a PBU that is to receive a next incoming packet. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a process flow diagram illustrating the processing steps performed by the PBU <highlight><bold>16</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> according to one embodiment of the invention. The process starts, and in step <highlight><bold>120</bold></highlight>, the PBU receives a packet transmitted by an ICU or ECU. In step <highlight><bold>122</bold></highlight>, a determination is made as to whether the packet is a data packet transmitted by an ICU. If the packet is a data packet, the notification tag appended to the packet is removed in step <highlight><bold>124</bold></highlight> by the switch interface <highlight><bold>52</bold></highlight>. The notification tag is transmitted to the central notification logic <highlight><bold>48</bold></highlight> and the data packet transmitted to the memory manager <highlight><bold>44</bold></highlight>. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> In steps <highlight><bold>126</bold></highlight> and <highlight><bold>128</bold></highlight>, the memory manager <highlight><bold>44</bold></highlight> queries the free PBN store <highlight><bold>46</bold></highlight> for a PBN address to an available memory location and stores all or a portion of the packet in the memory location. A linked list of pointers to memory locations is generated based on the PBN address and any remaining portion of the packet is stored in the memory locations. In step <highlight><bold>130</bold></highlight>, the PBN address is stored in the PBN buffer <highlight><bold>42</bold></highlight>. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> The central notification logic <highlight><bold>48</bold></highlight> then proceeds to transmit notifications of the newly arrived packet to the ECUs <highlight><bold>12</bold></highlight> that have subscribed to the flow group indicated by the packet&apos;s notification tag. In this regard, the central notification logic <highlight><bold>48</bold></highlight>, in step <highlight><bold>132</bold></highlight>, retrieves a flow group number from the notification tag. In step <highlight><bold>134</bold></highlight>, the central notification logic <highlight><bold>48</bold></highlight> queries the FGRP subscription table <highlight><bold>50</bold></highlight> and identifies the ECUs belonging to the indicated flow group. In step <highlight><bold>136</bold></highlight>, the central notification logic <highlight><bold>48</bold></highlight> proceeds to transmit the notification tag to the identified ECUs as a notification message. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> Referring now to step <highlight><bold>140</bold></highlight>, if a received packet is a booking message from an ECU indicating that the PBU is to maintain a packet in memory until requested by the ECU, the booking message is forwarded to the memory manager <highlight><bold>44</bold></highlight>. The memory manager determines the ECU transmitting the message and the PBN entry number of the packet to be booked. In step <highlight><bold>142</bold></highlight>, the booking bit for the corresponding PBN entry number and ECU is set in the PBN buffer <highlight><bold>42</bold></highlight>. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> If the received packet is a packet request message from an ECU, as determined in step <highlight><bold>146</bold></highlight>, the packet is forwarded to the memory manager <highlight><bold>44</bold></highlight>. The memory manager <highlight><bold>44</bold></highlight> retrieves a PBN address based on the PBN entry number indicated in the message and uses the PBN address as a start address of a linked list of pointers to memory locations and retrieves, in step <highlight><bold>148</bold></highlight>, the contents stored in the memory locations. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> The memory manager further determines, in step <highlight><bold>152</bold></highlight>, whether a release bit is set in the packet request message. If the answer is YES, no other packet requests are expected from this particular ECU and the booking bit associated with the PBN for the ECU is unset in step <highlight><bold>154</bold></highlight>. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> In step <highlight><bold>156</bold></highlight>, a determination is made as to whether all the booking bits are cleared. If the answer is YES, no other requests are expected for the packet and the PBN address and associated memory locations are freed in step <highlight><bold>158</bold></highlight>. The freed PBN is further returned to the free PBN store in step <highlight><bold>164</bold></highlight>. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> In an alternative embodiment, instead of a release bit for clearing booking bits and freeing memory locations, a booking count is maintained for each PBN entry which increases upon receipt of a booking message and decreases upon receipt of a packet request message for the particular PBN entry. When the booking count reaches 0, the memory locations associated with the PBN address are freed. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Referring now to step <highlight><bold>160</bold></highlight>, if the received packet is a subscription message, the message is relayed to the central notification logic <highlight><bold>48</bold></highlight> which retrieves a flow group number from the message. The central notification logic then proceeds to set the transmitting control unit&apos;s subscription bit for the indicated flow group. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a process flow diagram illustrating the processing steps performed by the ECU <highlight><bold>12</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 7</cross-reference> according to one embodiment of the invention. The process starts, and in step <highlight><bold>170</bold></highlight>, the egress scheduler <highlight><bold>78</bold></highlight> runs a scheduling algorithm for forwarding packets via its egress port(s) <highlight><bold>22</bold></highlight>. In step <highlight><bold>172</bold></highlight>, the egress scheduler <highlight><bold>78</bold></highlight> selects a queue based on the scheduling algorithm and in step <highlight><bold>174</bold></highlight>, transmits a packet request for the queue. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> In step <highlight><bold>176</bold></highlight>, the ECU <highlight><bold>12</bold></highlight> receives an inbound packet and a determination is made in steps <highlight><bold>178</bold></highlight> and <highlight><bold>156</bold></highlight> as to whether the packet is a notification packet or a data packet. If the packet is a data packet requested by the ECU, the packet is forwarded to a destination in step <highlight><bold>190</bold></highlight> via an egress port <highlight><bold>22</bold></highlight>. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> If the packet is a notification packet, it is forwarded to the egress notification logic <highlight><bold>74</bold></highlight> which, in step <highlight><bold>180</bold></highlight>, retrieves from the notification the PBN entry number, flow group number, and priority information. In step <highlight><bold>182</bold></highlight>, the egress notification logic queries the flow group port table <highlight><bold>80</bold></highlight> and identifies one or more egress queues <highlight><bold>76</bold></highlight> associated with the indicated flow group and priority. In step <highlight><bold>184</bold></highlight>, a determination is made as to whether the filling level of the identified queues are too high. If the answer is YES, the notification is discarded for each queue for which filling level is too high. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> If the answer is NO for at least one queue, a booking request for booking the packet associated with the PBN entry number is transmitted, in step <highlight><bold>186</bold></highlight>, for the identified queue(s). In step <highlight><bold>188</bold></highlight>, the PBN entry number is enqueued in each queue for which the filling level permitted the queuing. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> Although this invention has been described in certain specific embodiments, those skilled in the art will have no difficulty devising variations which in no way depart from the scope and spirit of the present invention. It is therefore to be understood that this invention may be practiced otherwise than is specifically described. Thus, the present embodiments of the invention should be considered in all respects as illustrative and not restrictive, the scope of the invention to be indicated by the appended claims and their equivalents rather than the foregoing description. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A packet switching system including a plurality of ingress control units, a plurality of egress control units, and a switch fabric coupled to the plurality of ingress control units and the plurality of egress control units, characterized in that packets received by the plurality of ingress control units are stored in the switching fabric, and each egress control unit identifies and requests from the switch fabric a packet destined for the egress control unit according to its respective scheduling algorithm, the switch fabric retrieving and transmitting the requested packet to the requesting egress control unit for forwarding the packet to a destination. </claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The packet switching system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the switch fabric includes a plurality of storage units each having a memory for storing the packets received from the plurality of ingress control units. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The packet switching system of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, further characterized in that each ingress control unit selects one of the plurality of storage units for storing a packet based on a pseudo random algorithm. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The packet switching system of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the pseudo random algorithm is modified based on load information of each storage unit. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The packet switching system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further characterized in that the switch fabric transmits a notification message to one or more egress control units, the notification message including address information that may be used for retrieving at least a portion of a stored packet. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The packet switching system of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, further characterized in that each of the egress control units receiving the notification message determines, based on a filling level of its respective queue, whether to discard the notification message or store in the queue the address information included in the notification message. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The packet switching system of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, further characterized in an egress control unit storing the address information in the queue transmits to the switch fabric a booking message for indicating that it is to request the stored packet in the future. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The packet switching system of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, further characterized in that an egress control unit storing the address information in its queue transmits to the switch fabric a request message to retrieve the stored packet. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The packet switching system of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the switch fabric releases a memory location associated with the stored packet if no more request messages are to be transmitted by the egress control unit to retrieve the stored packet. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The packet switching system of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein content of the notification message is based on tag data associated with the stored packet. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The packet switching system of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the tag data includes a group indicia indicative of a group of egress control units that are to receive the notification message. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The packet switching system of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the one or more egress control units transmit a subscription message including the group indicia to the switch fabric for allowing the switch fabric to associate the one or more egress control units with the group indicia. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The packet switching system of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the switch fabric is a shared memory switch fabric. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A method for transmitting packets via a packet switching system including a plurality of ingress control units, a plurality of egress control units, and a switch fabric coupled to the plurality of ingress and egress control units, the method comprising: 
<claim-text>receiving a packet via one of the ingress control units; </claim-text>
<claim-text>storing the packet in the switch fabric; </claim-text>
<claim-text>transmitting via the switch fabric a notification message to one or more egress control units, the notification message including an address information associated with the stored packet; </claim-text>
<claim-text>receiving at the switch fabric a request message transmitted by the one or more egress control units, the request message including the address information; </claim-text>
<claim-text>retrieving the packet based on the address information; and </claim-text>
<claim-text>transmitting the retrieved packet to each requesting egress control unit. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the switch fabric includes a plurality of storage units each having a memory, and the method further comprises selecting based on a pseudo random algorithm one of the plurality of storage units for storing the packet in its associated memory. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the pseudo random algorithm is modified based on load information of each storage unit. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, further comprising: 
<claim-text>receiving the notification message at the one or more egress control units; and </claim-text>
<claim-text>determining, based on a filling level of a queue in each receiving egress control unit, whether to discard the notification message or store in the queue the address information included in the notification message. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> further comprising transmitting to the switch fabric a booking message for indicating that an egress control unit transmitting the booking message is to request the stored packet in the future. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> further comprising releasing a memory location associated with the stored packet if no more request messages are to be transmitted by the egress control unit to retrieve the stored packet. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein content of the notification message is based on tag data associated with the stored packet. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the tag data includes a group indicia and the method further comprises identifying at the switch fabric the one or more egress control units associated with the group indicia for transmitting the notification message. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> further comprising transmitting to the switch fabric a subscription message including the group indicia for allowing the switch fabric to associate the one or more egress control units with the group indicia. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the switch fabric is a shared memory switch fabric.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002509A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002509A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002509A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002509A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002509A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002509A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002509A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002509A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002509A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002509A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002509A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
