<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004000A1-20030102-D00001.TIF SYSTEM "US20030004000A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00002.TIF SYSTEM "US20030004000A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00003.TIF SYSTEM "US20030004000A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00004.TIF SYSTEM "US20030004000A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00005.TIF SYSTEM "US20030004000A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00006.TIF SYSTEM "US20030004000A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00007.TIF SYSTEM "US20030004000A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00008.TIF SYSTEM "US20030004000A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00009.TIF SYSTEM "US20030004000A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00010.TIF SYSTEM "US20030004000A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00011.TIF SYSTEM "US20030004000A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00012.TIF SYSTEM "US20030004000A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00013.TIF SYSTEM "US20030004000A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00014.TIF SYSTEM "US20030004000A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00015.TIF SYSTEM "US20030004000A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00016.TIF SYSTEM "US20030004000A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00017.TIF SYSTEM "US20030004000A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00018.TIF SYSTEM "US20030004000A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00019.TIF SYSTEM "US20030004000A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00020.TIF SYSTEM "US20030004000A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00021.TIF SYSTEM "US20030004000A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00022.TIF SYSTEM "US20030004000A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00023.TIF SYSTEM "US20030004000A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00024.TIF SYSTEM "US20030004000A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00025.TIF SYSTEM "US20030004000A1-20030102-D00025.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00026.TIF SYSTEM "US20030004000A1-20030102-D00026.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00027.TIF SYSTEM "US20030004000A1-20030102-D00027.TIF" NDATA TIF>
<!ENTITY US20030004000A1-20030102-D00028.TIF SYSTEM "US20030004000A1-20030102-D00028.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004000</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10150746</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020517</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-150694</doc-number>
</priority-application-number>
<filing-date>20010521</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>A63F009/24</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>463</class>
<subclass>043000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Medium on which a game program is recorded, game apparatus, and method for carrying out a game</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Gen</given-name>
<family-name>Suzuki</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>KONAMI CORPORATION</organization-name>
<assignee-type>03</assignee-type>
</assignee>
<correspondence-address>
<name-1>SUGHRUE MION, PLLC</name-1>
<name-2></name-2>
<address>
<address-1>1010 EL CAMINO REAL, SUITE 300</address-1>
<city>MENLO PARK</city>
<state>CA</state>
<postalcode>94025</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A computer implements a status data computing function P1 for acquiring information about a game entity&apos;s action and, on the basis of the acquired information, computing status data that represents game status in response to the action, a game status output function P2 for preparing and outputting game status based on the status data, a motivation parameter computing function P3 for computing a motivation parameter that represents the entity&apos;s mental state on the basis of the game status, and a motivation reflecting function P4 for causing the computed status data to reflect the motivation parameter. Because the output game status reflects the entity&apos;s mental state, it is possible to enjoy the psychological developments in the game, with the entity&apos;s mental state reflected in the game. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to a medium with a game program recorded thereon, which prepares and outputs game status in response to an entity&apos;s action. The invention also relates to a game apparatus and a method for carrying out a game. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of the Prior Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> A program for a game in which some players compete for records is known. As an example, a golf game is programmed for some players to compete while playing the holes of a golf course on a screen. The game user controls one of the players. Environmental conditions of the course, such as the wind and the geographical features, can be reflected in the carries, the directions in which the hit balls go, and so on. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> However, because the mental states of the players, who are the game entities, are not considered, each player&apos;s plays do not reflect his or her and the other players&apos; nice and bad shots. Consequently, the game is not sufficiently interesting. In a real golf game, the players&apos; mental states greatly influence their plays, and therefore they use psychological tactics. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> An object of the present invention is to provide a medium having a game program recorded thereon that enables a game to reflect an entity&apos;s mental state so that the psychological developments in the game can be enjoyed. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Another object of the invention is to provide a game apparatus that enables a game to reflect an entity&apos;s mental state so that the psychological developments in the game can be enjoyed. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Still another object of the invention is to provide a method for carrying out a game that reflects an entity&apos;s mental state so that the psychological developments in the game can be enjoyed. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> In accordance with an aspect of the present invention, there is provided a medium on which a game program for preparing and outputting game status in response to an entity&apos;s action is recorded. The program causes a computer to implement: </paragraph>
<paragraph id="P-0010" lvl="2"><number>&lsqb;0010&rsqb;</number> a status data computing function for acquiring information about the entity&apos;s action and, on the basis of the acquired information, computing status data representing the game status; </paragraph>
<paragraph id="P-0011" lvl="2"><number>&lsqb;0011&rsqb;</number> a game status output function for preparing and outputting game status based on the status data; </paragraph>
<paragraph id="P-0012" lvl="2"><number>&lsqb;0012&rsqb;</number> a motivation parameter computing function for computing a motivation parameter representing the entity&apos;s mental state on the basis of the game status; and </paragraph>
<paragraph id="P-0013" lvl="2"><number>&lsqb;0013&rsqb;</number> a motivation reflecting function for causing the computed status data to reflect the motivation parameter. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The status data computing function acquires information about the entity&apos;s action and computes status data based on the acquired information. The game status output function prepares and outputs game status based on the computed status data, which represents the game status in response to the entity&apos;s action. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The motivation parameter computing function computes a motivation parameter representing the entity&apos;s mental state on the basis of the prepared game status. The motivation reflecting function causes the computed status data to reflect the computed motivation parameter. Then, the game status output function prepares and outputs game status based on the status data reflecting the motivation parameter. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Because the output game status reflects the entity&apos;s mental state, it is possible to enjoy the psychological developments in the game with the mental state reflected in the game. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The output game status includes status resulting from the entity&apos;s action and status not resulting from it. The status data representing the game status may be one datum or more data. If there are two or more status data, the motivation parameter may be reflected at different rates between them. This makes the game status delicately reflect the entity&apos;s mental state. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> In accordance with another aspect of the present invention, there is provided a medium on which a game program for preparing and outputting game statuses in response to the actions of at least two entities is recorded. Each of the statuses is associated with one of the entities. The program causes a computer to implement: </paragraph>
<paragraph id="P-0019" lvl="2"><number>&lsqb;0019&rsqb;</number> a status data computing function for acquiring information about the entities&apos; actions and, on the basis of the acquired information, computing status data each representing one of the game statuses; </paragraph>
<paragraph id="P-0020" lvl="2"><number>&lsqb;0020&rsqb;</number> a game status output function for preparing and outputting game statuses based on the status data; </paragraph>
<paragraph id="P-0021" lvl="2"><number>&lsqb;0021&rsqb;</number> a motivation parameter computing function for computing motivation parameters each representing the mental state of one of the entities on the basis of the respective game statuses; and </paragraph>
<paragraph id="P-0022" lvl="2"><number>&lsqb;0022&rsqb;</number> a motivation reflecting function for causing the computed status data to each reflect the associated motivation parameter. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The motivation parameter computing function computes the motivation parameters each for one of the entities. Each of the computed motivation parameters is reflected in the status data computed for one of the entities. Consequently, each entity&apos;s game status can reflect his or her mental state. This makes the game more enjoyable or interesting. This program is suitable for a game in which two or more entities compete, for example. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The motivation parameter computing function may involve computing the motivation parameter for each entity on the basis of the status data on the other entity. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> In this case, the motivation parameter for each entity is computed on the basis of the status data on the other entity. Consequently, each entity&apos;s mental state varies with the other entity&apos;s game status. This makes it possible to enjoy the entities&apos; tactics. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> In order for each entity&apos;s mental state to vary with the other entity&apos;s game status, the status data may be values associated with the respective entities&apos; records. In this case, the motivation parameter computing function involves computing the motivation parameter for each entity with this parameter varied with the difference between the status data on the entities. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Specifically, the motivation parameter representing each entity&apos;s mental state varies with the difference between the entities&apos; records. Consequently, each entity&apos;s mental state reflects all of the entities&apos; records. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> In order to vary the motivation parameters, as stated above, the motivation parameter computing function may involve computing the motivation parameter for each entity by enlarging this parameter with the remainder of the status datum about him or her from which the status datum on the other entity is subtracted. In the meantime, the motivation reflecting function may involve increasing the computed status data in value with the motivation parameter. In this case, the motivation parameter representing each entity&apos;s mental state increases with his or her record relative to the other entity&apos;s record. The status datum associated with each entity&apos;s record increases in value with the associated motivation parameter. This is suitable for a game in which larger values represent better records. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> For a golf game or another game in which lower scores represent better records, the motivation parameter for each entity may increase as the remainder in value of the status datum about him or her from which the status datum on the other entity is subtracted decreases. In the meantime, as the motivation parameter increases, the computed status datum about him or her may decrease in value. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The status data may be classified into a first type and a second type. The first type of status data larger in value and the second type of status data smaller in value represent better records. The first type of status datum on each entity may be increased in value as the associated motivation parameter increases. The second type of status datum on each entity may be decreased in value as the associated motivation parameter increases. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> This makes each entity&apos;s mental state reflect his or her and the other entity&apos;s records. Consequently, the game is more enjoyable. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> In order to assign the entities different characters, the motivation parameter computing function may involve computing the motivation parameter for each entity on the basis of character data about him or her acquired from a character data storage area in which character data on the entities&apos; characters are stored. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> In this case, the motivation parameter computing function involves acquiring the character datum on each entity from the character data storage area and computing the associated motivation parameter. This makes the entities&apos; mental states vary with their characters. Consequently, the game can be more enjoyable. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> In order to use the character data, the motivation parameter computing function may include a character selection entry function for receiving the selective entry of the entities&apos; characters. This computing function may involve computing the motivation parameter for each entity by acquiring from the character data storage area the character datum about the associated character entered selectively in the area. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> In this case, the motivation parameter computing function involves computing the motivation parameter for each entity by acquiring from the character data storage area the character datum about the associated character entered selectively in the area by the character selection entry function. This makes it possible to enjoy the game by selecting the entities&apos; characters. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Alternatively, in order to assign the entities different characters, the motivation parameter computing function may include a mental value setting function for receiving the setting entry of mental values each based on one of the entities&apos; characters. This computing function may involve computing the motivation parameter for each entity on the basis of the associated mental value set and entered. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> In this case, the motivation parameter computing function involves computing the motivation parameter for each entity on the basis of the mental value based on his or her character set and entered by means of the character selection entry function. This makes it possible to enjoy the game by setting the entities&apos; characters. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The motivation parameters, which are parameters for representing their mental states, may each consist of two or more parameters. As an example, the motivation parameter for each entity may include an internal parameter and an external parameter. The motivation parameter computing function may involve computing the motivation parameter for each entity by computing the associated internal parameter based on the status data on him or her and the associated external parameter based on the status data on the other entity. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> In this case, the internal parameter for each entity is computed on the basis of the status data about him or her, while the external parameter for each entity is computed on the basis of the status data about the other entity. Accordingly, each entity&apos;s mental state varies with both entities&apos; game statuses. This makes the game more enjoyable. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> With the type of the status data on each entity, the motivation reflecting function may vary the ratio between the associated internal and external parameters reflected in the status data. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> In this case, the ratio between the internal and external parameters reflected in the status data about each entity varies with the data type. This makes the game status complexly vary and the game more enjoyable. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The game status output function, which is a function for preparing and outputting game status based on the status data, may include a motivation display function for displaying the motivation parameters. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> Because the motivation display function displays the motivation parameters, it is possible to enjoy the game while watching the display of the entities&apos; mental states. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The game status output function may also include a function for audibly outputting the motivation parameters. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> Because this function audibly outputs the motivation parameters, which represent the entities&apos; mental state, it is possible to make the game more enjoyable. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The motivation display function may display the motivation parameter for each entity by averaging the associated internal and external parameters. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> In this case, because the average of the internal and external parameters is displayed as the motivation parameter, it is easier to grasp the entity&apos;s mental state. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> Alternatively, the motivation parameters may be computed as weighted depending on the game statuses etc. The internal and external parameters for each entity may be displayed separately if the game program is applied to a game for which it is preferable that the internal and external factors in the entities&apos; mental states be displayed separately. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> This makes it easier to grasp the entities&apos; mental states, and consequently makes the game more enjoyable. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> The motivation display function may display the motivation parameters in color phases. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> With the motivation parameters displayed in color phases, it is possible to know the entities&apos; mental states at a glance. This makes the game more enjoyable. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> The motivation display function may display the motivation parameters in electrocardiographic waves. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> With the motivation parameters displayed in electrocardiographic waves, it is possible to grasp the entities&apos; mental states as images. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> The motivation display function may display the motivation parameters in the form of the looks in the entities&apos; faces. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> With the motivation parameters displayed in the form of the looks in the entities&apos; faces, it is possible to know the entities&apos; mental states at a glance. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> The motivation parameters may be displayed as numerical values so that the entities&apos; mental states can be delicately displayed. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> The present invention can be applied to various games. As an example, the entities may be golf players. The status data computing function may compute the status data representing a golf game status in response to each player&apos;s play. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> Because each golf player&apos;s game status reflects his or her mental state, it is possible to enjoy the psychological developments in the game, which reflects the players&apos; mental states. The status data computing function may compute the status data about each player by acquiring information about his or her swing. The game status output function may prepare and output golf game status based on the computed status data. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> The status data on each player may be any or a combination of his or her score, ranking and carry, the distance between his or her ball and a target, and the type of the place where the ball is positioned. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> This makes it possible to enjoy the psychological developments in the golf game, which reflects the players&apos; mental states. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> The game program may also be applied to fishing, bowling and other games. In these cases, the entities are fishermen, bowlers, etc. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> In many cases, the data of the game program according to the invention are recorded on record media, which are then distributed. The recorded data can be read suitably from the media into computers. The record media may be magnetic recording media, magneto-optical recording media or any other record media that may be developed in future. The game program may consist of software and hardware parts. Part of the program may be recorded on record media and read in suitably as the need arises. The program may be reproduced as primary and secondary copies. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> The game program may be implemented by a computer. The present invention may be applied as a substantial system including such a computer. In other words, the invention may be effective as this system as well. The foregoing modifications may be adapted for the system. Such a system may be used alone or as incorporated in an apparatus for use with another system, and may include various forms. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> As a matter of course, the present invention resides basically in the procedures predetermined for the foregoing functions. Accordingly, the invention can also be applied as a method.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a schematic diagram of a game apparatus that implements a game program according to a first embodiment of the present invention. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a schematic diagram of a game program that implements various functions of the invention. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a table of structures of status data. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a table of structures of character data for internal parameters. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a table of structures of character data for external parameters. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a table of structures of climate-dependent data in a modified embodiment of the invention. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a mental value table. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a character table. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a motivation ratio table. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a flowchart of the whole process according to the game program. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a flowchart of the information entry process by means of the motivation parameter computing function of the invention. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a display of a character selection screen. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a display of a mental value setting screen. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a display of an initial game status screen. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a flowchart of the process for acquiring information about players&apos; actions by means of the status data computing function of the invention. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a flowchart of the process for computing status data by means of the status data computing and motivation reflecting functions of the invention. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 17 and 18</cross-reference> area flowchart of the process for computing motivation parameters by means of the motivation parameter computing function of the invention. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a chart of the process for computing internal and external parameter variation values. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a chart of the process for computing a general parameter. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> is a flowchart of the process for outputting game status by means of the game status output function of the invention. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a color conversion table. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> is a display of a game status screen. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> is a table of structures of differential status data in a second embodiment of the invention. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is a table of structures of character data for external parameters in the second embodiment. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> is a flowchart of the process for computing a motivation parameter according to the second embodiment. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 27</cross-reference> is a display of scores in a third embodiment of the invention. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28</cross-reference> is a flowchart of the process for outputting game status in the third embodiment.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> Embodiments of the present invention are described below in the following order.</paragraph>
<paragraph id="P-0093" lvl="1"><number>&lsqb;0093&rsqb;</number> 1. Schematic Hardware Structure of Game apparatus </paragraph>
<paragraph id="P-0094" lvl="1"><number>&lsqb;0094&rsqb;</number> 2. Schematic Structure of Game Program </paragraph>
<paragraph id="P-0095" lvl="1"><number>&lsqb;0095&rsqb;</number> 3. Data Structures </paragraph>
<paragraph id="P-0096" lvl="1"><number>&lsqb;0096&rsqb;</number> 4. Operation of Game Program </paragraph>
<paragraph id="P-0097" lvl="1"><number>&lsqb;0097&rsqb;</number> 5. Second Embodiment </paragraph>
<paragraph id="P-0098" lvl="1"><number>&lsqb;0098&rsqb;</number> 6. Third Embodiment</paragraph>
<paragraph id="P-0099" lvl="7"><number>&lsqb;0099&rsqb;</number> 1. Schematic Hardware Structure of Game Apparatus </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a schematic diagram of a golf game apparatus <highlight><bold>100</bold></highlight> that implements a game program according to a first embodiment of the present invention. The game apparatus <highlight><bold>100</bold></highlight> is a golf simulator, on which entities in the form of virtual players play golf. One or more users can enjoy a simulation golf game by entering instructions for one or more of the golf players into the game apparatus <highlight><bold>100</bold></highlight>. A program, which will be described later on, makes it possible to control one or more of the golf players automatically without entering the users&apos; instructions. The golf players compete with each other for records in the golf game. Actions and/or motions of each golf player reflect the scores, the shots, etc. of not only his or her own but also the other players, who are the competitors. This enables the users to enjoy the psychological developments in the simulation game as if they were playing a real golf game. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> The present invention may also be applied to a fishing game apparatus, on which virtual fishermen compete for the kinds and/or number of caught fish, a vaulting game apparatus, on which virtual vaulters compete for the height of a box that they can vault, or a baseball game apparatus, on which virtual players compete for personal title scores. The invention may further be applied to a karate, swordsmanship or dancing game apparatus, or another game apparatus for form or shape evaluation, on which no virtual players compete for records. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the game apparatus <highlight><bold>100</bold></highlight> consists essentially of a main machine <highlight><bold>10</bold></highlight>, a storage element cassette <highlight><bold>20</bold></highlight>, a console panel <highlight><bold>30</bold></highlight> and a television <highlight><bold>40</bold></highlight>. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> The main machine <highlight><bold>10</bold></highlight> includes a bus <highlight><bold>11</bold></highlight>, which includes an address bus, a data bus and a controller bus. The bus <highlight><bold>11</bold></highlight> is connected to a CPU <highlight><bold>12</bold></highlight>, a ROM <highlight><bold>13</bold></highlight>, a RAM <highlight><bold>14</bold></highlight>, a signal processor <highlight><bold>15</bold></highlight><highlight><italic>a, </italic></highlight>a picture processor <highlight><bold>15</bold></highlight><highlight><italic>b, </italic></highlight>interfaces <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>and <highlight><bold>16</bold></highlight><highlight><italic>b, </italic></highlight>a display process circuitry <highlight><bold>16</bold></highlight><highlight><italic>c, </italic></highlight>and an audio process circuitry <highlight><bold>16</bold></highlight><highlight><italic>d. </italic></highlight>The storage element cassette <highlight><bold>20</bold></highlight> and the console panel <highlight><bold>30</bold></highlight> are connected to the interfaces <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>and <highlight><bold>16</bold></highlight><highlight><italic>b </italic></highlight>respectively. The television <highlight><bold>40</bold></highlight> includes a Braun tube <highlight><bold>41</bold></highlight> and an amplifier <highlight><bold>42</bold></highlight>, which are connected to the display process circuitry <highlight><bold>16</bold></highlight><highlight><italic>c </italic></highlight>and the audio process circuitry <highlight><bold>16</bold></highlight><highlight><italic>d </italic></highlight>respectively by cables. The television <highlight><bold>40</bold></highlight> also includes a speaker <highlight><bold>43</bold></highlight>, which is connected to the amplifier <highlight><bold>42</bold></highlight>. The CPU <highlight><bold>12</bold></highlight> controls the whole of the game apparatus <highlight><bold>100</bold></highlight> in a centralized fashion according to the programs stored in the ROM <highlight><bold>13</bold></highlight> and the storage element cassette <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> The game apparatus <highlight><bold>100</bold></highlight> is designed as a domestic game apparatus. The system <highlight><bold>100</bold></highlight> might be designed as a game apparatus to which a personal computer or a workstation fitted with a keyboard and a mouse is applied. The storage element cassette <highlight><bold>20</bold></highlight> of this system might be replaced with a hard disc. The console panel <highlight><bold>30</bold></highlight> of this system might be replaced with a keyboard and a mouse. The television <highlight><bold>40</bold></highlight> of this system might be replaced with a display for exclusive use with a personal computer. Alternatively, the system <highlight><bold>100</bold></highlight> might be designed as a game apparatus for business use, into which all of the components of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> are integrated. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> The ROM <highlight><bold>13</bold></highlight> of the main machine <highlight><bold>10</bold></highlight> is a read only memory in which an operating system (OS) is stored. When the main machine <highlight><bold>10</bold></highlight> is turned on, the CPU <highlight><bold>12</bold></highlight> executes the OS stored in the ROM <highlight><bold>13</bold></highlight>, and reads the game program from the storage element cassette <highlight><bold>20</bold></highlight> via the interface <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>into the RAM <highlight><bold>14</bold></highlight>. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> The storage element cassette <highlight><bold>20</bold></highlight> is a record medium including a ROM <highlight><bold>21</bold></highlight> and a RAM <highlight><bold>22</bold></highlight>, which are housed in a plastic case. The ROM <highlight><bold>21</bold></highlight> is a read only memory in which the game program for implementing various functions and various data are stored. The RAM <highlight><bold>22</bold></highlight> is a random access memory that is backed up by a battery (not shown), and in which various data can be stored. The CPU <highlight><bold>12</bold></highlight> also reads data suitably from the ROM <highlight><bold>21</bold></highlight> and RAM <highlight><bold>22</bold></highlight> via the interface <highlight><bold>16</bold></highlight><highlight><italic>a, </italic></highlight>and writes data suitably via the interface <highlight><bold>16</bold></highlight><highlight><italic>a </italic></highlight>in the RAM <highlight><bold>22</bold></highlight>. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> The storage element cassette <highlight><bold>20</bold></highlight> might be replaced by a hard disc, a flexible disc, a CD-ROM or another record medium, from which the OS, the game program and various data can be read into the RAM <highlight><bold>14</bold></highlight> by a drive for the record medium. If a CD-ROM were used, no data could be written in it, but data could be written in the RAM <highlight><bold>14</bold></highlight> of the main machine <highlight><bold>10</bold></highlight> instead. A nonvolatile memory might also be used. Alternatively, a modem might be connected to a communication line so that an external file server could be accessed for downloading. The communication line would be a transmission medium for the present invention. Of course, a record medium might be incorporated directly in the circuit board of the main machine <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> The console panel <highlight><bold>20</bold></highlight> is fitted with letter keys (not shown) for letter entry, cursor keys and a stick (not shown) for cursor movement, a determination key for entry determination, and so on. The letter, cursor and determination keys are push buttons. When these keys are pushed, signals corresponding to them are generated and output to the interface <highlight><bold>16</bold></highlight><highlight><italic>b. </italic></highlight>The stick is supported by an elastic member so as to incline freely over 360 degrees, and functions like a joystick. When the stick inclines, a signal corresponding to the direction of inclination is generated and output to the interface <highlight><bold>16</bold></highlight><highlight><italic>b. </italic></highlight>The CPU <highlight><bold>12</bold></highlight> can execute various types of processing with the signals output from the console panel <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> The console panel <highlight><bold>30</bold></highlight> might be replaced by a keyboard and a mouse. If the game apparatus <highlight><bold>100</bold></highlight> were designed as a game apparatus for business use, numeric buttons, letter buttons and other buttons might be displayed so that the users&apos; fingers could touch them for entry. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> The television <highlight><bold>40</bold></highlight> for display and audio output may be a general television, which includes an external input terminal, a Braun tube, an amplifier and a speaker. of course, a video player (tape deck) or a DVD player (reproducer) may be incorporated into the television <highlight><bold>40</bold></highlight>. The television <highlight><bold>40</bold></highlight> might also be replaced by a display without an amplifier and a speaker. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> The signal processor <highlight><bold>15</bold></highlight><highlight><italic>a </italic></highlight>in the main machine <highlight><bold>10</bold></highlight> generates and processes three-dimensional data on the motions of the golf players, which will be output to the Braun tube <highlight><bold>41</bold></highlight>, display data for displaying motivation parameters, which will be explained later on, and other data. The signal processor <highlight><bold>15</bold></highlight><highlight><italic>a </italic></highlight>also generates audio data based on the audio data on the ADPCM (adaptive differential pulse code modulation) system that is read from the storage element cassette <highlight><bold>20</bold></highlight> into the RAM <highlight><bold>14</bold></highlight>. The audio data output from the signal processor <highlight><bold>15</bold></highlight><highlight><italic>a </italic></highlight>is then supplied to the audio process circuitry <highlight><bold>16</bold></highlight><highlight><italic>d, </italic></highlight>which converts it into an analog sound signal. The sound signal is then supplied to the amplifier <highlight><bold>42</bold></highlight>, which amplifies it. The amplified signal is then supplied to the speaker <highlight><bold>43</bold></highlight>. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> The picture processor <highlight><bold>15</bold></highlight><highlight><italic>b </italic></highlight>causes the display data generated by the signal processor <highlight><bold>15</bold></highlight><highlight><italic>a </italic></highlight>to be written in a predetermined display area in the RAM <highlight><bold>14</bold></highlight>. The written display data is then supplied to the display process circuitry <highlight><bold>16</bold></highlight><highlight><italic>c, </italic></highlight>which converts it into an ordinary NTSC signal. The NTSC signal is then supplied to the Braun tube <highlight><bold>41</bold></highlight>. </paragraph>
<paragraph id="P-0113" lvl="7"><number>&lsqb;0113&rsqb;</number> 2. Schematic Structure of Game Program </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a schematic diagram of the game program P that implements various functions of the present invention. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> The game program P has a status data computing function P<highlight><bold>1</bold></highlight>, a game status output function P<highlight><bold>2</bold></highlight>, a motivation parameter computing function P<highlight><bold>3</bold></highlight> and a motivation reflecting function P<highlight><bold>4</bold></highlight>. The status data computing function P<highlight><bold>1</bold></highlight> acquires information about the actions of the golf players. On the basis of the acquired information, this function P<highlight><bold>1</bold></highlight> computes status data associated with the respective actions. When computing the status data, the function P<highlight><bold>1</bold></highlight> refers to the data in the game status data storage area of the ROM <highlight><bold>21</bold></highlight> of the storage element cassette <highlight><bold>20</bold></highlight>. The game status output function P<highlight><bold>2</bold></highlight> prepares golf game statuses based on the computed status data. On the basis of the prepared game statuses, this function P<highlight><bold>2</bold></highlight> outputs a picture, objects, a sound signal, etc. through the Braun tube <highlight><bold>41</bold></highlight> and the speaker <highlight><bold>43</bold></highlight> of the television <highlight><bold>40</bold></highlight>. The status data and the game statuses are associated with the respective players. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> The motivation parameter computing function P<highlight><bold>3</bold></highlight> computes the motivation parameters provided for the respective golf players on the basis of the prepared game statuses. The motivation parameters for each player represent his or her mental state, and include an internal parameter and an external parameter. The internal parameter for each player is based on the status data about him or her. The external parameter for each player is based on the status data about the other players. The motivation parameter computing function P<highlight><bold>3</bold></highlight> includes a character selection entry function P<highlight><bold>31</bold></highlight> and a mental value setting function P<highlight><bold>32</bold></highlight>. The motivation parameter computing function P<highlight><bold>3</bold></highlight> acquires character data from the character data storage area of the ROM <highlight><bold>21</bold></highlight>. This function P<highlight><bold>3</bold></highlight> acquire, by means of setting entry, mental values corresponding to the players&apos; characters. The motivation reflecting function P<highlight><bold>4</bold></highlight> causes the status data about each player that is computed by the status data computing function P<highlight><bold>1</bold></highlight> to reflect the associated motivation parameters. Then, the game status output function P<highlight><bold>2</bold></highlight> prepares and outputs a game status based on the status data reflecting the motivation parameters for each player. The game status output function P<highlight><bold>2</bold></highlight> includes a motivation display function P<highlight><bold>21</bold></highlight>, which displays the motivation parameters on the television <highlight><bold>40</bold></highlight>. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> Consequently, the golf game statuses output through the television <highlight><bold>40</bold></highlight> reflect not only the wind, the topography and other environmental conditions but also the players&apos; motivations, which are mental states. This enables the system users to enjoy the golf players&apos; psychological developments. </paragraph>
<paragraph id="P-0118" lvl="7"><number>&lsqb;0118&rsqb;</number> 3. Data Structures </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> Various data necessary for the progress of a golf game on the basis of the players&apos; actions are stored in the game status data storage area of the ROM <highlight><bold>21</bold></highlight>. The stored data include data about the geographical features of the golf course, data for the calculation of ball loci, data for the display of the players&apos; characters and scores, and sound data output for nice and bad shots. Some of the stored data are acquired when the players make actions. The acquired data are used for the computation of the status data. Some of the stored data are acquired in response to the computed status data so that the statuses of the golf game in progress can be prepared and output. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows status data D<highlight><bold>1</bold></highlight> generated as the golf game progresses. The status data D<highlight><bold>1</bold></highlight> are values associated with the players&apos; records. The status data D<highlight><bold>1</bold></highlight> about each player include his or her score, ranking and carry (yards), the distance (yards) between his or her ball lie and a target point, the type of the place where his or her ball lies, and the look in his or her face. The place types are represented by the values assigned to a bunker, a green, etc. The looks in the faces change with the motivation parameters, and are represented by the five values assigned to looks, which range from a bright look to a dark look. The status data D<highlight><bold>1</bold></highlight> are stored in the RAM <highlight><bold>14</bold></highlight>. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> The internal parameter for each player varies with his or her score, piece of play, etc. The internal parameter rises if, for example, the player has a good shot or a good score, or makes a good recovery from the pinch in a bunker or near a pond. The internal parameter drops if, for example, the player has a bad shot or a bad score. The external parameter for each player varies with the other players&apos; scores, pieces of play, etc. The external parameter drops if, for example, a competitor has a good shot or makes a good recovery from the pinch in a bunker or near a pond. The external parameter rises if, for example, a competitor has a bad score. Each player&apos;s score is to be influenced more strongly by the accompanying players&apos; scores than the scores of the players not accompanying him or her. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> The internal and external parameters are integers ranging from 0 to 99. <cross-reference target="DRAWINGS">FIGS. 4 and 5</cross-reference> show character data for the computation of the parameters. The character data are stored in the character data storage area of the ROM <highlight><bold>21</bold></highlight>. The character data are values for giving characters to the players, and may represent the following characters: </paragraph>
<paragraph id="P-0123" lvl="2"><number>&lsqb;0123&rsqb;</number> burning with other players&apos; super shots; </paragraph>
<paragraph id="P-0124" lvl="2"><number>&lsqb;0124&rsqb;</number> strong on short holes and therefore tenser there; </paragraph>
<paragraph id="P-0125" lvl="2"><number>&lsqb;0125&rsqb;</number> weak on long holes and therefore less tense there; and </paragraph>
<paragraph id="P-0126" lvl="2"><number>&lsqb;0126&rsqb;</number> strong at the last moment and therefore tenser at the last three holes. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> The character data consist of character data D<highlight><bold>2</bold></highlight> and D<highlight><bold>3</bold></highlight> for the computation of the internal and external parameters respectively. The character data are classified under serial character identification numbers and the items of the status data D<highlight><bold>1</bold></highlight>. As an example, the character ID number <highlight><bold>1</bold></highlight> represents a frivolous or thoughtless player. The character datum D<highlight><bold>2</bold></highlight> about this player in terms of scores is &plus;3, &plus;2, or &minus;3, for example, if his or her score is &minus;5 or less (good score), &minus;4 through &minus;1, or &plus;5 or more (bad score), respectively. Contrariwise, the character datum D<highlight><bold>3</bold></highlight> about this player is &minus;3, for example, if another player&apos;s score is &minus;5 or less. As another example, the character ID number <highlight><bold>2</bold></highlight> represents a calm or cool player. The character datum D<highlight><bold>2</bold></highlight> about this player in terms of scores is 0 regardless of his or her score. Thus, the stored character data differ between the character ID numbers, and can be used for the computation of the motivation parameters to give various characters to the players. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> In a modified embodiment of the present invention, a motivation parameter varies with the climate. This embodiment requires climate-dependent data D<highlight><bold>4</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, which are classified under the character ID numbers in terms of the weather, the wind, etc. As an example, the climate-dependent data D<highlight><bold>4</bold></highlight> for the character ID number <highlight><bold>1</bold></highlight> in terms of the weather is &plus;2, 0 or &minus;2 if the weather is fine, cloudy or rainy respectively. In this case, the motivation parameter rises in fine weather and drops in rainy weather. It is thus possible to use the climate-dependent data D<highlight><bold>4</bold></highlight> for the computation of the motivation parameter, enabling each player&apos;s motivation to reflect the weather. The climate-dependent data D<highlight><bold>4</bold></highlight> might be used for the computation of the foregoing external parameter. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a mental value table Ta<highlight><bold>1</bold></highlight> showing mental values, each of which is associated with one of the character ID numbers. This table Ta<highlight><bold>1</bold></highlight> is stored in the character data storage area. The mental values are ability values, each of which is associated with a player&apos;s character. The mental values are integers ranging from 1 to 10. A player whose mental value is small is moody or temperamental. If this player has a bad shot, for example, he or she is liable to be less tense, and is slow to recover motivation. A player whose mental value is great is calm or cool. Even if this player has a bad shot, he or she is not liable to be less tense, and is quick to recover motivation. In other words, a greater mental value represents higher ability of a player. If a user of the game apparatus <highlight><bold>100</bold></highlight> increases the mental value of a player handled by him or her, the game is easy for him or her, and it is easy for him or her to make a good score. If a user of this system increases the mental value of a player controlled automatically by the system, the game is difficult for the user, and it is difficult for him or her to make a good score. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> The mental values can also be set on the console panel <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a character table Ta<highlight><bold>2</bold></highlight>, which is prepared in the RAM <highlight><bold>14</bold></highlight>, for assigning each of the virtual players AAA, BBB and CCC one of the character data etc. In the character table Ta<highlight><bold>2</bold></highlight>, each player is associated with one of the character ID numbers, each of which is associated with one of the mental values. The players AAA, BBB, and CCC are frivolous or thoughtless, nervous about the competitors, and calm or cool, respectively. The players&apos; characters can be selected on the console panel <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> The motivation parameters for each player include, not only an internal parameter and an external parameter, but also a general parameter, which is computed from the internal and external parameters. The general parameter represents the player&apos;s mental state, and is an integer ranging from 0 to 99. As stated already, the motivation parameters are computed differently with the respective character data for the different players, and differently with the respective types of status data D<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> The internal and external parameters can be reflected at predetermined rates in the computation of the status data. <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a motivation ratio table Ta<highlight><bold>3</bold></highlight>, which is stored in the ROM <highlight><bold>21</bold></highlight>, showing the rates of reflection of the internal parameter. Each of these rates is associated with one item of the status data D<highlight><bold>1</bold></highlight>. Each of the rates of reflection of the external parameter is the remainder of 1 from which the associated rate in the table Ta<highlight><bold>3</bold></highlight> is subtracted. As an example, the rate of reflection of the internal parameter in the score is 0.5. Consequently, the rate of reflection of the external parameter in the score is 1&minus;0.5&equals;0.5. As another example, the rate of reflection of the internal parameter in the carry is 0.8. Consequently, the rate of reflection of the external parameter in the carry is 1&minus;0.8&equals;0.2. These rates of reflection in the carry are based on the fact that a golf game is more enjoyable if each player&apos;s mental state reflects his or her carry more than the other players&apos; distances of carry. The rate of reflection of the internal parameter in the distance between each current ball position and a target is 0.2. This low rate is based on the fact that a golf game is more enjoyable if each player&apos;s mental state reflects the other players&apos; distances more than his or her distance. </paragraph>
<paragraph id="P-0134" lvl="7"><number>&lsqb;0134&rsqb;</number> 4. Operation of Game Program </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a flowchart of the whole of a process according to the game program P, which implements the foregoing functions. After the game apparatus <highlight><bold>100</bold></highlight> is turned on, a system user enters information into it (step S<highlight><bold>105</bold></highlight>). The program then judges whether to start a golf game (step S<highlight><bold>110</bold></highlight>). If the conditions for the step S<highlight><bold>110</bold></highlight> are not met, the step S<highlight><bold>110</bold></highlight> is repeated. If the conditions are met, the process moves to the step S<highlight><bold>115</bold></highlight>. At the step S<highlight><bold>115</bold></highlight>, various initial data are generated, and initial game statuses are prepared and output. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> After the step S<highlight><bold>115</bold></highlight>, the program P acquires information on the players&apos; swinging actions (step S<highlight><bold>120</bold></highlight>). On the basis of the acquired information, the program computes status data on the respective players by using the motivation parameters for the respective players (step S<highlight><bold>125</bold></highlight>). On the basis of the computed status data, the program computes motivation parameters (step S<highlight><bold>130</bold></highlight>), and prepares and outputs present game statuses (step S<highlight><bold>135</bold></highlight>). </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> Then, the program P judges whether to end the game (step S<highlight><bold>140</bold></highlight>). If one of the players is playing, the conditions are not met, and the steps S<highlight><bold>120</bold></highlight>-S<highlight><bold>140</bold></highlight> are repeated. If the play finishes, the conditions are met, and the process ends. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> The steps of this process are described below in detail occasionally with reference to display screens on the television <highlight><bold>40</bold></highlight> etc. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a flowchart of the process of information entry at the step S<highlight><bold>105</bold></highlight>, which can be implemented by part of the motivation parameter computing function P<highlight><bold>3</bold></highlight>. First, a game entry setting screen (not shown) is displayed on the television <highlight><bold>40</bold></highlight>. This enables the system user to set the number of players by pressing some keys on the console panel <highlight><bold>30</bold></highlight>. Thus, the number of players is acquired (step S<highlight><bold>202</bold></highlight>). In this embodiment, the number of players is set at three. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> After the number of players is set, a character selection screen <highlight><bold>51</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, is displayed on the television <highlight><bold>40</bold></highlight>. This enables the system user to enter the players&apos; names in the player name entry column <highlight><bold>51</bold></highlight><highlight><italic>a </italic></highlight>of the selection screen <highlight><bold>51</bold></highlight> through the console panel <highlight><bold>30</bold></highlight>. Thus, the players&apos; names is acquired (step S<highlight><bold>204</bold></highlight>). The system user can control the player whose name stands at the top of the entry column <highlight><bold>51</bold></highlight><highlight><italic>a. </italic></highlight>An accompanying player selection column <highlight><bold>51</bold></highlight><highlight><italic>b </italic></highlight>enables the system user to select any or none of the other two players to accompany the player controlled by the user. In this embodiment, all of the three players accompany each other. Second character data (not shown) for the external parameter are stored in the ROM <highlight><bold>21</bold></highlight> and differ from the character data D<highlight><bold>3</bold></highlight>. Computations can be done with reference to the second character data to vary the external parameter for the manually controlled player on the basis of the record of any player who does not accompany him or her. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> Subsequently, the character selection entry function P<highlight><bold>31</bold></highlight> enables the system user to select for each player a character in the character selection column <highlight><bold>51</bold></highlight><highlight><italic>c </italic></highlight>on the character selection screen <highlight><bold>51</bold></highlight> through the console panel <highlight><bold>30</bold></highlight>. Thus, the players&apos; characters are acquired (step S<highlight><bold>206</bold></highlight>). In the character selection column <highlight><bold>51</bold></highlight><highlight><italic>c, </italic></highlight>letter data from a character letter data table (not shown) are displayed. In this table, each of the character ID numbers is assigned to a letter datum such as &ldquo;FRIVOLOUS OR THOUGHTLESS&rdquo;. The displayed letter data can be changed over with the cursor keys on the console panel <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> A &ldquo;NEXT&rdquo; button <highlight><bold>51</bold></highlight><highlight><italic>d </italic></highlight>is provided under the player name column <highlight><bold>51</bold></highlight><highlight><italic>a. </italic></highlight>It is possible to set many players&apos; names etc. by pressing the determination key with the pointer <highlight><bold>51</bold></highlight><highlight><italic>e </italic></highlight>positioned on the &ldquo;NEXT&rdquo; button <highlight><bold>51</bold></highlight><highlight><italic>d. </italic></highlight>A &ldquo;USE&rdquo; button <highlight><bold>51</bold></highlight><highlight><italic>f </italic></highlight>and a &ldquo;NONUSE&rdquo; button <highlight><bold>51</bold></highlight><highlight><italic>g </italic></highlight>are provided below the&ldquo;NEXT&rdquo; button <highlight><bold>51</bold></highlight><highlight><italic>d. </italic></highlight>The selection of the button <highlight><bold>51</bold></highlight><highlight><italic>f </italic></highlight>or <highlight><bold>51</bold></highlight><highlight><italic>g </italic></highlight>determines whether or not to use the mental values for the computation of the motivation parameters (step S<highlight><bold>208</bold></highlight>). If the determination key is pressed with the pointer <highlight><bold>51</bold></highlight><highlight><italic>e </italic></highlight>positioned on the&ldquo;USE&rdquo; button <highlight><bold>51</bold></highlight><highlight><italic>f </italic></highlight>by means of the stick on the console panel <highlight><bold>30</bold></highlight>, the mental value setting function P<highlight><bold>32</bold></highlight> displays a mental value setting screen <highlight><bold>52</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. This setting screen <highlight><bold>52</bold></highlight> includes a mental value entry column <highlight><bold>52</bold></highlight><highlight><italic>a, </italic></highlight>where mental values are displayed by reference to the mental value table Ta<highlight><bold>1</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 7</cross-reference>) in the ROM <highlight><bold>21</bold></highlight>. The displayed mental values can be changed at the console panel <highlight><bold>30</bold></highlight>. Mental values can be set in the entry column <highlight><bold>52</bold></highlight><highlight><italic>a </italic></highlight>through the console panel <highlight><bold>30</bold></highlight>. Thus, the mental values are acquired (step S<highlight><bold>210</bold></highlight>). A &ldquo;SETTING END&rdquo; button <highlight><bold>52</bold></highlight><highlight><italic>b </italic></highlight>is provided under the entry column <highlight><bold>52</bold></highlight><highlight><italic>a. </italic></highlight>If this button <highlight><bold>52</bold></highlight><highlight><italic>b </italic></highlight>is selected, the process moves to the step S<highlight><bold>212</bold></highlight>. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> If the &ldquo;NONUSE&rdquo; button <highlight><bold>51</bold></highlight><highlight><italic>g </italic></highlight>is selected at the step S<highlight><bold>208</bold></highlight>, the process of information entry skips the step S<highlight><bold>210</bold></highlight> and moves to the step S<highlight><bold>212</bold></highlight>. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> At the step S<highlight><bold>212</bold></highlight>, a character table Ta<highlight><bold>2</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is made in the RAM <highlight><bold>14</bold></highlight> on the basis of the acquired player names, characters and mental values. Then, the process of information entry ends. This causes the step S<highlight><bold>110</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10</cross-reference> to be executed, displaying a game start screen (not shown), which includes a game start button. If this start button is selected, the process of <cross-reference target="DRAWINGS">FIG. 10</cross-reference> moves to the step S<highlight><bold>115</bold></highlight>, where the game starts. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> The initial data generated at the step S<highlight><bold>115</bold></highlight> include the initial scores (0) and other status data on the respective players, and the initial data of the internal, external and general parameters. In this embodiment, the internal, external and general parameters are variables TI, TO and T respectively, each of which is 70. The game apparatus <highlight><bold>100</bold></highlight> prepares initial game statuses based on the players, initial status data and the motivation parameters for the players, and displays a game status screen <highlight><bold>53</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>. Various game statuses are displayed on this screen <highlight><bold>53</bold></highlight>, and include players <highlight><bold>53</bold></highlight><highlight><italic>a, </italic></highlight>the number of whom is set at the step S<highlight><bold>202</bold></highlight>, score indicators <highlight><bold>53</bold></highlight><highlight><italic>b, </italic></highlight>and mental lamps <highlight><bold>53</bold></highlight><highlight><italic>c </italic></highlight>indicating the motivation parameters for them. The displayed status data also include the geographical features of and the weather at the golf course. The mental lamps <highlight><bold>53</bold></highlight><highlight><italic>c </italic></highlight>indicate the motivation parameters in color phases. The color phases of the lamps <highlight><bold>53</bold></highlight><highlight><italic>c </italic></highlight>are lighter green for larger general parameters and darker blue for smaller general parameters. If one of the players eagles a hole or gets a miraculous or super shot, his or her lamp <highlight><bold>53</bold></highlight><highlight><italic>c </italic></highlight>temporarily becomes red, imaging his or her excitement. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> With the game status screen <highlight><bold>53</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 14</cross-reference>) displayed, information on the players&apos; actions is acquired at the step S<highlight><bold>120</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a flowchart of the process for acquiring information on the players&apos; actions. First, information on the player who swings a golf club is acquired (step S<highlight><bold>252</bold></highlight>). The RAM <highlight><bold>14</bold></highlight> is provided with a counter p (not shown) in it for controlling the swinging order. Every time the step S<highlight><bold>252</bold></highlight> is executed, the counter p increments by 1. When the count of the counter p exceeds the number of players, the counter is reset to 1. The counts of the counter p correspond to the players AAA, BBB and CCC in that order in the character table Ta<highlight><bold>2</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. Thus, the information on the player who swings is acquired. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> Next, it is judged if the information acquired at the step S<highlight><bold>252</bold></highlight> is on the player controlled by the system user (step S<highlight><bold>254</bold></highlight>). In this embodiment, the condition for the step S<highlight><bold>254</bold></highlight> is met when the count of the counter is 1, that is to say, if the acquired information is on the first player AAA in the character table Ta<highlight><bold>2</bold></highlight>. If this condition is met, various swinging conditions are selected in the condition entry column <highlight><bold>53</bold></highlight><highlight><italic>d </italic></highlight>provided in a left and lower portion of the game status screen <highlight><bold>53</bold></highlight>. The swinging conditions include the golf club and the distance between the current ball position and a target point. Thus, the swinging conditions (step S<highlight><bold>256</bold></highlight>) are acquired. It is possible to select the club etc. by referring to a table (not shown) stored in the ROM <highlight><bold>21</bold></highlight>, and acquiring information on them from this table. Subsequently, information on the swinging actions are entered with the stick etc. on the console panel <highlight><bold>30</bold></highlight>. Thus, the information on the swinging actions are acquired (step S<highlight><bold>258</bold></highlight>). Then, the process of information acquisition ends. The information on the swinging actions includes the speeds at which the players swing their arms and the directions in which the arms move. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> If the condition is not met at the step S<highlight><bold>254</bold></highlight>, the information acquired at the step S<highlight><bold>252</bold></highlight> is on one of the players controlled automatically by the game apparatus <highlight><bold>100</bold></highlight>. Then, the process of information acquisition moves to the step S<highlight><bold>260</bold></highlight>, where various swinging conditions are decided and thus acquired. As an example, the club selection involves calculating the distance between the current position and the cup, and selecting a club from a table (not shown) in which different ranges of distance are each associated with a club. The selection may involve generating a random number and adding it to the distance between the current position and the cup so that a different club may be selected for the same distance. Subsequently, the player&apos;s swinging actions are decided, and information on them is acquired (step S<highlight><bold>262</bold></highlight>). Then, the process ends. Another table (not shown) may be provided in which different ranges of distance are each associated with a speed at which a player swings his or her arm. It is possible to acquire from this table the speed at which the player swings his or her arm. The direction to the cup may be calculated from the player&apos;s position so that the direction in which his or her arms move can be acquired. The acquisition of speed and direction may involve generating other random numbers so as to vary the speed at which the arms are swung and the direction in which they are moved. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> After the process of acquiring information on the players&apos; actions, the step S<highlight><bold>125</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is executed to compute status data. <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a flowchart showing the process of status data computation occasionally with operation expressions. This process includes sequentially computing various status data with the motivation parameters used by the motivation reflecting function P<highlight><bold>4</bold></highlight>. The processing at the steps S<highlight><bold>302</bold></highlight>-S<highlight><bold>308</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 16</cross-reference> realizes the reflecting function P<highlight><bold>4</bold></highlight>. When the process is executed initially, all of the internal, external and general parameters of the motivation parameters are 70 as predetermined. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> First, intermediate status data for the computation of final status data are sequentially computed. At the step S<highlight><bold>302</bold></highlight>, the initial ball velocity V<highlight><bold>1</bold></highlight> that has not been corrected is computed. The initial velocity is equivalent to the club head speed and can be computed from the speed at which the player&apos;s arms are swung. Next, the initial ball velocity is corrected with the motivation parameters (step S<highlight><bold>304</bold></highlight>). The general parameter for each player may be represented as a variable T(p) The variable p is the count of the counter p. A correction factor A<highlight><bold>1</bold></highlight> increases with the general parameter and may be expressed as follows:</paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>A</italic></highlight><highlight><bold>1</bold></highlight>&equals;&lcub;<highlight><italic>T</italic></highlight>(<highlight><italic>p</italic></highlight>)&plus;99&rcub;/198&emsp;&emsp;(1).</in-line-formula></paragraph>
<paragraph id="P-0151" lvl="7"><number>&lsqb;0151&rsqb;</number> The initial ball velocity V<highlight><bold>1</bold></highlight> can be corrected by being multiplied by the correction factor A<highlight><bold>1</bold></highlight>. As the general parameter T(p) ranges from 0 to 99, the correction factor A<highlight><bold>1</bold></highlight> ranges from 0.5 to 1. A larger general parameter makes the correction factor A<highlight><bold>1</bold></highlight> larger and accordingly causes the initial velocity V<highlight><bold>1</bold></highlight> to be corrected to a larger value. A smaller general parameter causes the initial velocity V<highlight><bold>1</bold></highlight> to be corrected to a smaller value. As a result, a larger general parameter makes the carry larger. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> At the step S<highlight><bold>306</bold></highlight>, the angle of shot deviation &agr;<highlight><bold>1</bold></highlight> that has not been corrected is computed. It is possible to compute the angle of shot deviation by generating a random number and multiplying the angle by a predetermined value. Next, the angle of shot deviation is corrected with the motivation parameter (step S<highlight><bold>308</bold></highlight>). For example, the angle of shot deviation &agr;<highlight><bold>1</bold></highlight> may be corrected by being divided by the correction factor A<highlight><bold>1</bold></highlight>, which is found from the expression (1). A larger general parameter causes the angle of shot deviation &agr;<highlight><bold>1</bold></highlight> to be corrected to a smaller value. A smaller general parameter causes the angle of shot deviation &agr;<highlight><bold>1</bold></highlight> to be corrected to a larger value. As a result, a larger general parameter makes the shot deviation smaller. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> After other intermediate status data are computed (not shown), the final status data are computed sequentially on the basis of them (step S<highlight><bold>310</bold></highlight>). The final status data are the status data D<highlight><bold>1</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. As an example, the carry may be computed with the initial ball velocity V<highlight><bold>1</bold></highlight>, the angle of shot deviation &agr;<highlight><bold>1</bold></highlight>, etc. by reference to various data in the game status data storage area of the ROM <highlight><bold>21</bold></highlight>. These various data include data on the geographical features of the golf course, data for ball locus calculation, and data for the correction of the influence of the climate such as the wind. The current ball position is found out during the carry computation. The type of the place where the ball has stopped is acquired by reference to the data on the geographical features of the golf course in the game status data storage area. The place type is one of a green, a bunker, etc. In addition, the score, the ranking, etc. are computed. The computation of the look in the player&apos;s face involves converting the general parameter into an integer ranging from 1 to 5, and may involve dividing this parameter by 20, adding 1 to the quotient and rounding off the fraction of the sum. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> Subsequently at the step S<highlight><bold>312</bold></highlight>, the status data D<highlight><bold>1</bold></highlight> in the RAM <highlight><bold>14</bold></highlight> are updated to the status data computed at the step S<highlight><bold>310</bold></highlight>. Then, the process of status data computation ends. </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> Thus, the game apparatus <highlight><bold>100</bold></highlight> executes the steps S<highlight><bold>252</bold></highlight>-S<highlight><bold>262</bold></highlight>, S<highlight><bold>310</bold></highlight> and S<highlight><bold>312</bold></highlight> to acquire information on the players&apos; actions, and executes the step S<highlight><bold>125</bold></highlight> to compute the status data representing the game statuses associated with the actions on the basis of the acquired information. In other words, the computer implements the status data computing function P<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> After the process of status data computation, the motivation parameters are computed at the step S<highlight><bold>130</bold></highlight>. <cross-reference target="DRAWINGS">FIGS. 17 and 18</cross-reference> are a flowchart showing the process of motivation parameter computation occasionally with operation expressions. This process includes sequentially computing the internal, external and general parameters of the motivation parameters. </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> First, the character ID number for the player for whom a motivation parameter is to be computed is acquired from the character table Ta<highlight><bold>2</bold></highlight> in the RAM <highlight><bold>14</bold></highlight> (step S<highlight><bold>402</bold></highlight>). Next, the character data D<highlight><bold>2</bold></highlight> that are associated with the acquired ID number are acquired from the character data storage area in the ROM <highlight><bold>21</bold></highlight> (step S<highlight><bold>404</bold></highlight>). </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> If this particular player is AAA, for example, the character ID number <highlight><bold>1</bold></highlight> is acquired from the character table Ta<highlight><bold>2</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, and the character data D<highlight><bold>21</bold></highlight> are acquired from the character data D<highlight><bold>2</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> Thereafter, internal parameter variation values &Dgr;TI(n) are computed sequentially by reference to the status data on the player in the status data D<highlight><bold>1</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 3</cross-reference>) in the RAM <highlight><bold>14</bold></highlight> (step S<highlight><bold>406</bold></highlight>) The variable n varies to correspond to the various items of the status data D<highlight><bold>1</bold></highlight>. The variable n is 1 for the score and 2 for the ranking, for example, in the status data D<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0160" lvl="0"><number>&lsqb;0160&rsqb;</number> In the example shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the status data D<highlight><bold>11</bold></highlight> are associated with the player AAA. If the variable n is 1, the status datum D<highlight><bold>11</bold></highlight> is the score of &minus;3. If this player&apos;s score ranges from &minus;4 to &minus;1, the character datum D<highlight><bold>21</bold></highlight> associated with the score is &plus;2, and accordingly the internal parameter variation value &Dgr;TI(<highlight><bold>1</bold></highlight>) is &plus;2. If the variable n is 2, the status datum D<highlight><bold>11</bold></highlight> is the ranking of 1. If this player&apos;s ranking is 1, the associated character datum D<highlight><bold>21</bold></highlight> is &plus;3, and accordingly the internal parameter variation value &Dgr;TI(<highlight><bold>2</bold></highlight>) is &plus;3. <cross-reference target="DRAWINGS">FIG. 19</cross-reference> shows the internal parameter variation values &Dgr;TI(n) computed sequentially in this way for the player AAA. </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> At the step S<highlight><bold>408</bold></highlight>, an overall internal parameter variation value &Dgr;TI is computed by reference to the motivation ratio table Ta<highlight><bold>3</bold></highlight> in the ROM <highlight><bold>21</bold></highlight>. The computation involves multiplying each internal parameter variation value &Dgr;TI(n) by the associated rate of motivation R in the motivation ratio table Ta<highlight><bold>3</bold></highlight>, and adding the products. In the example shown in <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, the internal parameter variation value &Dgr;TI(<highlight><bold>1</bold></highlight>) and the rate of motivation that are associated with the score are &plus;2 and 0.5 respectively. The product of the variation value and the rate of motivation is &plus;1.0. Similar multiplication is done for the ranking and the other items. All of the products are added together, and the sum is &plus;6.2, which is the overall internal parameter variation value &Dgr;TI. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> The step S<highlight><bold>410</bold></highlight> is the step of acquiring from the character data storage area in the ROM <highlight><bold>21</bold></highlight> the character data D<highlight><bold>3</bold></highlight> that are associated with the character ID number acquired at the step S<highlight><bold>402</bold></highlight>. If the player is AAA, the character data D<highlight><bold>31</bold></highlight> are acquired from the character data D<highlight><bold>3</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. Thereafter, external parameter variation values &Dgr;TO(n) are computed sequentially by reference to the status data on the other player or players in the status data D<highlight><bold>1</bold></highlight> in the RAM <highlight><bold>14</bold></highlight> (step S<highlight><bold>412</bold></highlight>). If the other players are plural, the variation values &Dgr;TO(n) computed for them are averaged. </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> In the example shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the status data on the players other than the player AAA are D<highlight><bold>12</bold></highlight> and D<highlight><bold>13</bold></highlight>. The scores of the players BBB and CCC are &plus;2 and 0 respectively. The character data D<highlight><bold>31</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 5</cross-reference>) that are associated with the score are &plus;2 and 0 if the score ranges from &plus;1 to &plus;4 and is 0, respectively. The external parameter variation value &Dgr;TI(<highlight><bold>1</bold></highlight>) for the variable n of 1 is &plus;1, which is the average of &plus;2 and 0. <cross-reference target="DRAWINGS">FIG. 19</cross-reference> also shows the external parameter variation values &Dgr;TO(n) computed sequentially in this way. </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> At the step S<highlight><bold>414</bold></highlight>, an overall external parameter variation value &Dgr;TO is computed by reference to the motivation ratio table Ta<highlight><bold>3</bold></highlight> in the ROM <highlight><bold>21</bold></highlight>. As stated already, each of the rates of reflection of the external parameter is the remainder of 1 from which the associated rate in the ratio table Ta<highlight><bold>3</bold></highlight> is subtracted. The computation of the overall external parameter variation value &Dgr;TO involves multiplying each external parameter variation value &Dgr;TO(n) by the remainder (1&minus;R) of 1 from which the associated rate of motivation R in the ratio table Ta<highlight><bold>3</bold></highlight> is subtracted, and adding the products together. In the example shown in <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, the external parameter variation value &Dgr;TO(<highlight><bold>1</bold></highlight>) associated with the carry is &minus;1.5, and the rate of motivation for the external parameter (1&minus;R) is 0.2. The product of &minus;1.5 and 0.2 for the carry is &minus;0.3. The sum of all the products is &plus;4.9, which is the overall external parameter variation value &Dgr;TO. </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> After the parameter variation values &Dgr;TI and &Dgr;TO are found, the process of motivation parameter computation moves to the step S<highlight><bold>422</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>. At the step S<highlight><bold>422</bold></highlight>, it is judged whether to use the mental values for the motivation parameter computation. If it is decided at the step S<highlight><bold>208</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 11</cross-reference>) that the mental values shall not be used, the condition for the step S<highlight><bold>422</bold></highlight> is not met. Then, the process skips the steps S<highlight><bold>424</bold></highlight> and S<highlight><bold>426</bold></highlight>, and moves to the step S<highlight><bold>428</bold></highlight>. If it is decided that the mental values shall be used, the mental value M for each player is acquired from the character table Ta<highlight><bold>2</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 8</cross-reference>) in the RAM <highlight><bold>14</bold></highlight> (step S<highlight><bold>424</bold></highlight>). In the example shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, the mental value M of 3 is acquired for the player AAA. </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> Thereafter, the parameter variation values &Dgr;TI and &Dgr;TO are corrected with the mental values M (step S<highlight><bold>426</bold></highlight>). A correction factor A<highlight><bold>2</bold></highlight> may be expressed as follows:</paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>A</italic></highlight><highlight><bold>2</bold></highlight>&equals;<highlight><italic>M/</italic></highlight>5&emsp;&emsp;(2).</in-line-formula></paragraph>
<paragraph id="P-0167" lvl="7"><number>&lsqb;0167&rsqb;</number> Because the mental values M are integers between 1 and 10, the correction factor A<highlight><bold>2</bold></highlight> ranges from 0.2 to 2. If the internal parameter variation value &Dgr;TI is larger than 0 (&Dgr;TI&gt;0), it is corrected by being multiplied by the correction factor A<highlight><bold>2</bold></highlight>. If this variation value &Dgr;TI is smaller than 0 (&Dgr;TI&lt;0), it is corrected by being divided by the correction factor A<highlight><bold>2</bold></highlight>. As stated already, a player is not liable to be less tense and is quicker to recover motivation if his or her mental value M is larger. If the mental value M is such a large value that the correction factor A<highlight><bold>2</bold></highlight> may be larger than 1, the correction increases the internal parameter variation values &Dgr;TI. In this case, if the variation value &Dgr;TI is negative, its absolute value is decreased. Likewise, the external parameter variation value &Dgr;TO is corrected. </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> At the step S<highlight><bold>428</bold></highlight>, the internal and external parameters TI and TO are computed with the parameter variation values &Dgr;TI and &Dgr;TO. Specifically, the computation involves adding the internal and external parameter variation values &Dgr;TI and &Dgr;TO to the internal and external parameters TI and TO respectively to update the parameters TI and TO. After the addition, the updated parameters TI and TO are rounded off to be integral. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> The next step S<highlight><bold>430</bold></highlight> is the step of computing the general parameter T by averaging the parameters TI and TO. During this step, the sum of the parameters TI and TO is rounded off so that the general parameter T may be integral. </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> If the parameter variation values &Dgr;TI and &Dgr;TO that have not been corrected are &plus;6.2 and &plus;4.9 respectively, and if the correction factor A<highlight><bold>2</bold></highlight> is 0.6, which is associated with the mental value M of 3, as shown in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>, the corrected variation values &Dgr;TI and &Dgr;TO are &plus;3.7 and &plus;2.9 respectively. As also shown, the internal and external parameters TI and TO that have not been corrected may both be 70. The corrected variation values &Dgr;TI and &Dgr;TO are added to these parameters TI and TO respectively, and the sums are rounded off, so that the parameters TI and TO are 74 and 73 respectively. Then, the parameters TI and TO are averaged, and the average of them is rounded off, so that the general parameter is 74. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> At the step S<highlight><bold>432</bold></highlight>, it is judged if there is another player for whom the motivation parameters are to be computed. If so, the steps S<highlight><bold>402</bold></highlight>-S<highlight><bold>432</bold></highlight> are repeated. If not, the process of motivation parameter computation ends. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> Thus, the game apparatus <highlight><bold>100</bold></highlight> computes the motivation parameters, which represent the players&apos; mental states, on the basis of the game statuses by the process of information entry at the step S<highlight><bold>105</bold></highlight> and the process of motivation parameter computation at the step S<highlight><bold>130</bold></highlight>. The computation of the motivation parameters includes computing the motivation parameters for each player on the basis of the status data on the other players, acquiring the character data on him or her from the character data storage area, and computing the motivation parameters based on the acquired character data. In other words, the computer implements the motivation parameter computing function P<highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> The process of motivation parameter computation is followed by the step S<highlight><bold>135</bold></highlight>, which is a process for outputting the game statuses. <cross-reference target="DRAWINGS">FIG. 21</cross-reference> is a flowchart of this process. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> First, game statuses are prepared on the basis of the status data generated (step S<highlight><bold>502</bold></highlight>) by the process of status data computation at the step S<highlight><bold>125</bold></highlight>. The game statuses include display data on the balls, which result from the players&apos; swinging actions, audio output data on the carry, display data on the players&apos; scores and ranking, display data on the players, and display data on the geographical features of the golf course that do not directly influence the swinging actions. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> Thereafter, the general parameter T computed by the process of motivation parameter computation at the step S<highlight><bold>130</bold></highlight> is converted into an integral parameter T<highlight><bold>1</bold></highlight> ranging from 1 to 15 (step S<highlight><bold>504</bold></highlight>). Because the general parameter T is an integer ranging from 0 to 99, the conversion may include the steps of dividing the general parameter T by 7, adding 1 to the quotient and rounding off the fraction of the sum. Alternatively, the conversion may involve using a conversion table (not shown). For the reflection of the different players&apos; characters, the general parameters T for the players may be converted in different ways into parameters T<highlight><bold>1</bold></highlight>. Next, on the basis of the parameters T<highlight><bold>1</bold></highlight> for the players, color display data are generated (step S<highlight><bold>506</bold></highlight>) for displaying the mental lamps <highlight><bold>53</bold></highlight><highlight><italic>c </italic></highlight>on the game status screen <highlight><bold>53</bold></highlight>, which is shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>. <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a color conversion table Ta<highlight><bold>4</bold></highlight>, which is provided in the ROM <highlight><bold>21</bold></highlight>, and in which the parameters T<highlight><bold>1</bold></highlight> are assigned the colors representing the mental lamps <highlight><bold>53</bold></highlight><highlight><italic>c. </italic></highlight>The generation of color display data involves acquiring from the color conversion table Ta<highlight><bold>4</bold></highlight> the colors associated with the parameters T<highlight><bold>1</bold></highlight>. Each general parameter T is the average of the associated internal and external parameters. Accordingly, after the internal and external parameters are averaged, the resultant motivation parameter is displayed. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> As an example, if the general parameter T for one of the players is 80, the resultant parameter T<highlight><bold>1</bold></highlight> is 12. In this case, slightly deep green is acquired from the color conversion table Ta<highlight><bold>4</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 22</cross-reference>. This results in the generation of color display data for making the color of the associated mental lamp <highlight><bold>53</bold></highlight><highlight><italic>c </italic></highlight>slightly deep green. As another example, if the general parameter T is 39, the resultant parameter T<highlight><bold>1</bold></highlight> is 6, and deep yellow is acquired. This results in the generation of color display data for making the color of the mental lamp <highlight><bold>53</bold></highlight><highlight><italic>c </italic></highlight>deep yellow. </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> If one of the players eagles a hole, shoots (hits) a ball from a bunker direct into the cup, or gets another miraculous or super shot, a red color display datum is generated. </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> After the step S<highlight><bold>506</bold></highlight>, the general parameter T is converted into an integral parameter T<highlight><bold>2</bold></highlight> ranging from 1 to 5 (step S<highlight><bold>508</bold></highlight>). The conversion may include the steps of dividing the general parameter T by 20, adding 1 to the quotient and rounding off the fraction of the sum. Alternatively, the conversion may involve using a conversion table (not shown). The general parameters T for the different players may be converted in different ways into parameters T<highlight><bold>2</bold></highlight>. Next, on the basis of the parameters T<highlight><bold>2</bold></highlight> for the players <highlight><bold>53</bold></highlight><highlight><italic>a </italic></highlight>(<cross-reference target="DRAWINGS">FIG. 14</cross-reference>), face display data are generated (step S<highlight><bold>510</bold></highlight>) for the players&apos; faces displayed on the game status screen <highlight><bold>53</bold></highlight>. In the ROM <highlight><bold>21</bold></highlight>, a conversion table (not shown) is provided in which each of the parameters T<highlight><bold>2</bold></highlight> is assigned a face display datum. The face display data are generated by reference to this conversion table. As the parameter T<highlight><bold>2</bold></highlight> for each player increases from 1 to 5, the look in his or her face turns dark, slightly dark, usual, slightly cheerful, and cheerful in that order. As an example, if the general parameter T for one of the players is 80, the resultant parameter T<highlight><bold>2</bold></highlight> is 5. In this case, the face display datum for a cheerful look is generated. As another example, if the general parameter T is 39, the resultant parameter T<highlight><bold>2</bold></highlight> is 2. In this case, the face display datum for a slightly dark look is generated. </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> Thereafter, the prepared game statuses and the generated color and face display data are output to the television <highlight><bold>40</bold></highlight> (step S<highlight><bold>512</bold></highlight>). Subsequently, the game status output process ends. Then, the television <highlight><bold>40</bold></highlight> displays a game status screen <highlight><bold>54</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 23</cross-reference> and announces the carry etc. There may be a case where the general parameter T for the player AAA, who corresponds to a player <highlight><bold>54</bold></highlight>a<highlight><bold>1</bold></highlight> on the status screen <highlight><bold>54</bold></highlight>, is 80. In this case, the face display datum for a cheerful look is generated, as stated above, and consequently the player <highlight><bold>54</bold></highlight>a<highlight><bold>1</bold></highlight> looks cheerful. In the meantime, the color display datum for slightly deep green is generated, and consequently the color of the mental lamp <highlight><bold>54</bold></highlight>c<highlight><bold>1</bold></highlight> corresponding to the player AAA is slightly deep green. As another example, if the general parameter T for the player BBB is 39, the corresponding player <highlight><bold>54</bold></highlight>a<highlight><bold>2</bold></highlight> looks slightly dark, and the color of the corresponding mental lamp <highlight><bold>54</bold></highlight>c<highlight><bold>2</bold></highlight> is deep yellow. </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> That is to say, the processes at the steps S<highlight><bold>504</bold></highlight>-S<highlight><bold>512</bold></highlight> makes the computer implement the motivation display function P<highlight><bold>21</bold></highlight> for displaying the motivation parameters. The motivation of each player is represented by the look in his or her face and one of the color phases. Consequently, the user of the game apparatus <highlight><bold>100</bold></highlight> can know the players&apos; mental states at a glance and enjoy the game while visually recognizing the displays about the mental states. Because the displayed motivation parameters are the averages of the internal and external parameters, it is easy to grasp the players&apos; mental states. </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> Thus, the game apparatus <highlight><bold>100</bold></highlight> executes the steps S<highlight><bold>502</bold></highlight>-S<highlight><bold>512</bold></highlight> to prepare and output golf game statuses based on the status data. That is to say, the computer implements the game status output function P<highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> After the game status output process, it is judged whether to end the game (step S<highlight><bold>140</bold></highlight>). If one of the players is playing, the steps S<highlight><bold>120</bold></highlight>-S<highlight><bold>140</bold></highlight> are repeated. Then, the motivation parameters, which consist of the internal and external parameters computed at the step S<highlight><bold>130</bold></highlight>, are used for the steps S<highlight><bold>302</bold></highlight>-S<highlight><bold>308</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 16</cross-reference>, which implement the motivation reflecting function P<highlight><bold>4</bold></highlight>. As a result, status data reflecting the motivation parameters representing the players&apos; mental states are computed. At the step S<highlight><bold>135</bold></highlight>, golf game statuses based on the status data are prepared and output. </paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> That is to say, each player&apos;s motivation, which varies with various status data, is reflected in the status data provided for him or her, and in his or her game status. It is consequently possible to enjoy the psychological developments in the game with the players&apos; mental states reflected in the game. Each player&apos;s mental state varies with his or her and the other players&apos; game statuses. It is consequently possible to enjoy the players&apos; tactics or strategies and therefore make the game more enjoyable. </paragraph>
<paragraph id="P-0184" lvl="7"><number>&lsqb;0184&rsqb;</number> 5. Second Embodiment </paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> Two or more virtual players compete in the first embodiment. It is alternatively possible to enjoy a golf game with one virtual player by setting the number of players at 1 at the step S<highlight><bold>202</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>. The status data on this player reflects the internal parameter representing his or her mental state. In this case, the external parameters based on the status data on any other players are not used. Consequently, the game status output from the television <highlight><bold>40</bold></highlight> reflects the player&apos;s mental state. This makes the golf game reflect the mental state, making it possible to enjoy the psychological developments in the game. If the climate data D<highlight><bold>4</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> are used for the motivation parameter computation, the game status can reflect the mental state and the climate such as the weather and wind. This makes it possible to enjoy more complex golf game status. </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> As stated already, the reflection of the motivation parameters in the status data during the process of status data computation shown in <cross-reference target="DRAWINGS">FIG. 16</cross-reference> involves the multiplication and division by correction factors at the steps S<highlight><bold>302</bold></highlight>-S<highlight><bold>308</bold></highlight>. Alternatively, the reflection of the motivation parameters in the status data may involve converting the status data by reference to a status data conversion table (not shown) in which each of the motivation parameters is associated with one of the status data that have not been converted. This conversion table may be stored in the ROM <highlight><bold>21</bold></highlight> of the storage element cassette. Different correction factors or different status data conversion tables might be provided for the internal and external parameters so that the status data could directly reflect the respective parameters. </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> When the motivation parameters for each player are computed by the process shown in <cross-reference target="DRAWINGS">FIGS. 17 and 18</cross-reference>, these parameters may be varied with the difference between the status data on him or her and each of the other players. In this case, differential (or subtractive) status data D<highlight><bold>5</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference> may be generated for each player and stored in the RAM <highlight><bold>14</bold></highlight>. Each of the differential status data D<highlight><bold>5</bold></highlight> is the remainder of one of the status data on the player from which the associated status datum on one of the other players is subtracted. The status data D<highlight><bold>5</bold></highlight> and D<highlight><bold>1</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 3</cross-reference>) have the same items such as the score. The differential status data D<highlight><bold>5</bold></highlight> are classified under the other players. There may be a case where status data D<highlight><bold>1</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> are prepared. In this case, the differential status datum D<highlight><bold>5</bold></highlight> for the score that is associated with the comparative player BBB is the remainder of the status datum D<highlight><bold>1</bold></highlight> of &minus;3 from which the status datum D<highlight><bold>1</bold></highlight> of &plus;2 is subtracted, leaving &minus;5. Likewise, the differential status datum D<highlight><bold>5</bold></highlight> for the score that is associated with the comparative player CCC is the remainder of the status datum D<highlight><bold>1</bold></highlight> of &minus;3 from which the status datum D<highlight><bold>1</bold></highlight> of 0 is subtracted, leaving &minus;3. </paragraph>
<paragraph id="P-0188" lvl="0"><number>&lsqb;0188&rsqb;</number> In place of the character data D<highlight><bold>3</bold></highlight>, character data D<highlight><bold>6</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 25</cross-reference> may be stored in the character data storage area of the ROM <highlight><bold>21</bold></highlight> for the computation of the external parameters by reference to the differential status data D<highlight><bold>5</bold></highlight>. The items of the character data D<highlight><bold>6</bold></highlight> correspond to those of the differential status data D<highlight><bold>5</bold></highlight>. The data stored at the items are based on the differential values. </paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> The external parameters may be computed with the differential status data D<highlight><bold>5</bold></highlight> and the character data D<highlight><bold>6</bold></highlight> according to the flowchart shown in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>, which replaces the steps S<highlight><bold>410</bold></highlight>-S<highlight><bold>414</bold></highlight>. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> In this case, the step S<highlight><bold>408</bold></highlight>, where the internal parameter variation value &Dgr;TI for each player is computed, is followed by the step S<highlight><bold>442</bold></highlight>, where each status datum on each of the other players is subtracted from the associated status datum on that player, leaving a differential status datum D<highlight><bold>5</bold></highlight>. At the next step S<highlight><bold>444</bold></highlight>, the character data associated with the character ID number acquired at the step S<highlight><bold>402</bold></highlight> are acquired out of the character data D<highlight><bold>6</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 25</cross-reference>. For the player AAA, who is associated with the character ID number <highlight><bold>1</bold></highlight>, the character data D<highlight><bold>61</bold></highlight> are acquired out of the data D<highlight><bold>6</bold></highlight>. At the next step S<highlight><bold>446</bold></highlight>, the external parameter variation values &Dgr;TO(n) are computed sequentially by reference to the differential status data D<highlight><bold>5</bold></highlight> in the RAM <highlight><bold>14</bold></highlight>. If there are two or more other players, variation values &Dgr;TO(n) computed for them are averaged. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> In the example shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference>, the differential status data D<highlight><bold>5</bold></highlight> with respect to the scores (variable n&equals;1) of the comparative players BBB and CCC are &minus;5 and &minus;3 respectively. The character datum D<highlight><bold>61</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 25</cross-reference>) for the score is &minus;2 for the score between &minus;9 and &minus;2. Accordingly, the character data D<highlight><bold>61</bold></highlight> of &minus;2 are acquired with respect to the players BBB and CCC. The external parameter variation value &Dgr;TO(<highlight><bold>1</bold></highlight>) is &minus;2, which is the average of these character data. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> At the next step S<highlight><bold>448</bold></highlight>, an overall external parameter variation value &Dgr;TO is computed by reference to the motivation ratio table Ta<highlight><bold>3</bold></highlight> in the ROM <highlight><bold>21</bold></highlight>. Similarly to the step S<highlight><bold>414</bold></highlight>, the computation of the overall external parameter variation value &Dgr;TO involves multiplying each external parameter variation value &Dgr;TO(n) by the remainder (1&minus;R) of 1 from which the associated rate of motivation R in the ratio table Ta<highlight><bold>3</bold></highlight> is subtracted, and adding the products together. </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> The step S<highlight><bold>448</bold></highlight> is followed by the steps S<highlight><bold>422</bold></highlight>-S<highlight><bold>432</bold></highlight> for computing the internal, external and general parameters TI, TO and T. Then, at the step S<highlight><bold>135</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the game statuses are output, and the motivation parameters are displayed. If the game is continued, the status data computation reflects the motivation parameters at the step S<highlight><bold>125</bold></highlight>. As a result, each player&apos;s motivation, which varies with the various status data, varies with his or her and the other players&apos; game statuses. This makes it possible to enjoy the players&apos; tactics. </paragraph>
<paragraph id="P-0194" lvl="7"><number>&lsqb;0194&rsqb;</number> 6. Third Embodiment </paragraph>
<paragraph id="P-0195" lvl="0"><number>&lsqb;0195&rsqb;</number> In the game status output process shown in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>, the motivation parameters can be indicated by the mental lamps and in other forms. </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> As an example, <cross-reference target="DRAWINGS">FIG. 27</cross-reference> shows the indication of motivation parameters in electrocardiographic waves. specifically, <cross-reference target="DRAWINGS">FIG. 27</cross-reference> shows score indicators <highlight><bold>55</bold></highlight><highlight><italic>b, </italic></highlight>which may replace the score indicators <highlight><bold>53</bold></highlight><highlight><italic>b </italic></highlight>on the game status screen <highlight><bold>53</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>. Each player is associated with the electrocardiographic wave <highlight><bold>55</bold></highlight><highlight><italic>c </italic></highlight>indicated in one of the score indicators <highlight><bold>55</bold></highlight><highlight><italic>b. </italic></highlight></paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28</cross-reference> is a flowchart according to which the electrocardiographic waves <highlight><bold>55</bold></highlight><highlight><italic>c </italic></highlight>may be indicated, and which may replace the steps S<highlight><bold>504</bold></highlight> and S<highlight><bold>506</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>. </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> In this case, the step S<highlight><bold>502</bold></highlight>, where game statuses are prepared, is followed by the step S<highlight><bold>522</bold></highlight>, where the general parameter T is converted into a parameter T<highlight><bold>3</bold></highlight> that is an integer between 1 and 5. As is the case with the parameter T<highlight><bold>2</bold></highlight>, the conversion into the parameter T<highlight><bold>3</bold></highlight> may include the steps of dividing the general parameter T by 20, adding 1 to the quotient and rounding off the fraction of the sum. Next, based on the parameter T<highlight><bold>3</bold></highlight>, display data for the associated electrocardiographic wave <highlight><bold>55</bold></highlight><highlight><italic>c </italic></highlight>are generated at the step S<highlight><bold>524</bold></highlight>. The ROM <highlight><bold>21</bold></highlight> has a conversion table in which each parameter T<highlight><bold>3</bold></highlight> is associated with a wave train frequency and a wave amplitude value. The electrocardiographic waves <highlight><bold>55</bold></highlight><highlight><italic>c </italic></highlight>are generated by reference to the conversion table. As an example, if the general parameter T is 80, the associated parameter T<highlight><bold>3</bold></highlight> is 5. In this case, as shown in <cross-reference target="DRAWINGS">FIG. 27</cross-reference>, such display data are generated that electrocardiographic waves <highlight><bold>55</bold></highlight>c<highlight><bold>1</bold></highlight> are formed, which include 3 wave trains and have an amplitude value of 5. </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> Thereafter, at the step S<highlight><bold>512</bold></highlight>, the display data in electrocardiographic waves are output together with the game statuses to the television <highlight><bold>40</bold></highlight>, on which the electrocardiographic waves <highlight><bold>55</bold></highlight><highlight><italic>c </italic></highlight>(<cross-reference target="DRAWINGS">FIG. 27</cross-reference>) are displayed. The displayed waves <highlight><bold>55</bold></highlight><highlight><italic>c </italic></highlight>are associated with the motivation parameters for the respective players. Thus, the players&apos; motivations are indicated in electrocardiographic waves, which enable the user of the game apparatus <highlight><bold>100</bold></highlight> to know the mental states of the players as images at a glance. </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> As described hereinbefore, the present invention enables a game status to reflect the mental state of an entity such as a golf player in various manners and forms. This makes it possible to provide a game program that causes a game to reflect an entity&apos;s mental state so that the psychological developments in the game can be enjoyed. The program can be provided as recorded on a medium. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">We claim: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A medium on which a game program for preparing and outputting game status in response to an entity&apos;s action is recorded, the program causing a computer to implement: 
<claim-text>a status data computing function for acquiring information about said entity&apos;s action and, on the basis of the acquired information, computing status data representing the game status; </claim-text>
<claim-text>a game status output function for preparing and outputting game status based on the status data; </claim-text>
<claim-text>a motivation parameter computing function for computing a motivation parameter representing said entity&apos;s mental state on the basis of the game status; and </claim-text>
<claim-text>a motivation reflecting function for causing the computed status data to reflect the motivation parameter. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A medium on which a game program for preparing and outputting game statuses in response to the actions of at least two entities is recorded, each of the statuses being associated with one of said entities, the program causing a computer to implement: 
<claim-text>a status data computing function for acquiring information about said entities&apos; actions and, on the basis of the acquired information, computing status data each representing one of the game statuses; </claim-text>
<claim-text>a game status output function for preparing and outputting game statuses based on the status data; </claim-text>
<claim-text>a motivation parameter computing function for computing motivation parameters each representing the mental state of one of said entities on the basis of the respective game statuses; and </claim-text>
<claim-text>a motivation reflecting function for causing the computed status data to each reflect the associated motivation parameter. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The medium on which the game program defined in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> is recorded wherein the motivation parameter computing function involves computing the motivation parameter for each of the entities on the basis of the status data on the other entity. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The medium on which the game program defined in <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference> is recorded wherein the status data are values associated with the respective entities&apos; records, the motivation parameter computing function involving computing the motivation parameter for each of the entities with the parameter varied with the difference between the status data on the entities. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The medium on which the game program defined in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> is recorded wherein the motivation parameter computing function involves computing the motivation parameter for each of the entities on the basis of a character datum on the entity&apos;s character acquired from a character data storage area in which character data on the entities&apos; characters are stored. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The medium on which the game program defined in <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference> is recorded wherein the motivation parameter computing function includes a character selection entry function for receiving the selective entry of the entities&apos; characters, the motivation parameter computing function involving computing the motivation parameter for each of the entities by acquiring from the character data storage area the character datum about the associated character entered selectively in the area. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The medium on which the game program defined in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> is recorded wherein the motivation parameter computing function includes a mental value setting function for receiving the setting entry of mental values each based on one of the entities&apos; characters, the motivation parameter computing function involving computing the motivation parameter for each of the entities on the basis of the associated mental value set and entered. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The medium on which the game program defined in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> is recorded wherein the motivation parameters include internal and external parameters, the motivation parameter computing function involving computing the motivation parameter for each of the entities by computing the associated internal parameter based on the associated status data and the associated external parameter based on the status data on the other entity. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The medium on which the game program defined in <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> is recorded wherein the motivation reflecting function involves varying, with the type of the status data on each of the entities, the ratio between the associated internal and external parameters reflected in the status data. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The medium on which the game program defined in <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> is recorded wherein the game status output function includes a motivation display function for displaying the motivation parameters. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The medium on which the game program defined in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> is recorded wherein the motivation display function involves displaying the motivation parameter for each of the entities by averaging the associated internal and external parameters. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The medium on which the game program defined in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> is recorded wherein the motivation display function involves displaying the motivation parameters in color phases. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The medium on which the game program defined in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> is recorded wherein the motivation display function involves displaying the motivation parameters in electrocardiographic waves. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The medium on which the game program defined in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> is recorded wherein the motivation display function involves displaying the motivation parameters in the form of the looks in the entities&apos; faces. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The medium on which the game program defined in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> is recorded wherein the entities are golf players, the status data computing function involves computing the status data representing a golf game status in response to the play of each of the players. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The medium on which the game program defined in <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> is recorded wherein the status data on each of the players is any or a combination of the player&apos;s score, the player&apos;s ranking, the player&apos;s carry, the distance between the player&apos;s ball and a target, and the type of the place where the ball is positioned. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A game apparatus for preparing and outputting game status in response to an entity&apos;s action, comprising: 
<claim-text>status data computing means for acquiring information about the entity&apos;s action and, on the basis of the acquired information, computing status data representing the game status; </claim-text>
<claim-text>game status output means for preparing and outputting game status based on the status data; </claim-text>
<claim-text>motivation parameter computing means for computing a motivation parameter representing the entity&apos;s mental state on the basis of the game status; and </claim-text>
<claim-text>motivation reflecting means for causing the computed status data to reflect the motivation parameter. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A method for carrying out a game by preparing and outputting game status in response to an entity&apos;s action, comprising: 
<claim-text>a status data computing step for acquiring information about the entity&apos;s action and, on the basis of the acquired information, computing status data representing the game status; </claim-text>
<claim-text>a game status output step for preparing and outputting game status based on the status data; </claim-text>
<claim-text>a motivation parameter computing step for computing a motivation parameter representing the entity&apos;s mental state on the basis of the game status; and </claim-text>
<claim-text>a motivation reflecting step for causing the computed status data to reflect the motivation parameter.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>NONE</representative-figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004000A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004000A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004000A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004000A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004000A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004000A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004000A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004000A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004000A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004000A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030004000A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030004000A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030004000A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030004000A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030004000A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030004000A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030004000A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030004000A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030004000A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030004000A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030004000A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030004000A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030004000A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030004000A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030004000A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00026">
<image id="EMI-D00026" file="US20030004000A1-20030102-D00026.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00027">
<image id="EMI-D00027" file="US20030004000A1-20030102-D00027.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00028">
<image id="EMI-D00028" file="US20030004000A1-20030102-D00028.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
