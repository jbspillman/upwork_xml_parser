<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005280A1-20030102-D00000.TIF SYSTEM "US20030005280A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005280A1-20030102-D00001.TIF SYSTEM "US20030005280A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005280A1-20030102-D00002.TIF SYSTEM "US20030005280A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005280A1-20030102-D00003.TIF SYSTEM "US20030005280A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005280A1-20030102-D00004.TIF SYSTEM "US20030005280A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005280A1-20030102-D00005.TIF SYSTEM "US20030005280A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005280A1-20030102-D00006.TIF SYSTEM "US20030005280A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005280A1-20030102-D00007.TIF SYSTEM "US20030005280A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030005280A1-20030102-D00008.TIF SYSTEM "US20030005280A1-20030102-D00008.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005280</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10151747</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020517</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L009/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>713</class>
<subclass>150000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method and system for integrating security mechanisms into session initiation protocol request messages for client-proxy authentication</title-of-invention>
</technical-information>
<continuity-data>
<non-provisional-of-provisional>
<document-id>
<doc-number>60298239</doc-number>
<document-date>20010614</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Nikhil</given-name>
<middle-name>P.</middle-name>
<family-name>Bobde</family-name>
</name>
<residence>
<residence-us>
<city>Bellevue</city>
<state>WA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Ann</given-name>
<family-name>Demirtjis</family-name>
</name>
<residence>
<residence-us>
<city>Redmond</city>
<state>WA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Mu</given-name>
<family-name>Han</family-name>
</name>
<residence>
<residence-us>
<city>Redmond</city>
<state>WA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>Microsoft Corporation</organization-name>
<address>
<city>Redmond</city>
<state>WA</state>
<country>
<country-code>US</country-code>
</country>
</address>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>LEYDIG VOIT &amp; MAYER, LTD</name-1>
<name-2></name-2>
<address>
<address-1>TWO PRUDENTIAL PLAZA, SUITE 4900</address-1>
<address-2>180 NORTH STETSON AVENUE</address-2>
<city>CHICAGO</city>
<state>IL</state>
<postalcode>60601-6780</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method and system is provided to integrate the Kerberos security mechanism into the message flow of the signaling operation under the Session Initiation Protocol to allow a SIP client and a SIP proxy to authenticate each other. When the SIP proxy receives an request message, such an INVITE request, from the SIP client, it responds with a challenge message indicating that authentication based on Kerberos is required. In response, the SIP client sends a second request message with a proxy authorization header containing authentication data, including a Kerberos server ticket for the Proxy, to allow the proxy to authenticate the client&apos;s user. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">RELATED CASES </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application claims the priority of U.S. Provisional Application No.60/298,239, filed Jun. 14, 2001.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">TECHNICAL FIELD OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This invention relates generally to communications between devices over a computer network, and more particularly to the integration of a security mechanism, such as one based on the Kerberos authentication protocol, into network communications that use the Session Initiation Protocol (SIP) as the signaling protocol for establishing a communication session. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The Session Initiation Protocol (SIP) is a signaling protocol that provides a mechanism for a computing device to locate another device it wants to communicate with over a computer network and to establish a communication session therewith. SIP is a versatile protocol and has been used for establishing communication sessions in many different scenarios. For instance, SIP is used for Internet conferencing, telephony, presence, event notification, and instant messaging. An important strength of SIP is its support of personal mobility by providing the ability to reach a called party (user) under a single, location-independent address even when the called party has moved to a different computer. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> One common mode of session initiation operation under the SIP is the &ldquo;proxy mode.&rdquo; By way of example, a SIP client (the &ldquo;caller&rdquo;) may send a SIP request message, such as an INVITE message, identifying the intended recipient (the &ldquo;callee&rdquo;) by an e-mail like address. This request message is typically first sent to an outbound SIP proxy of the sending SIP client. The outbound SIP proxy then forwards the request message, often through other intermediate SIP proxies, to an SIP proxy with which the intended recipient client has registered, which then sends the INVITE to the recipient. The acceptance message (&ldquo;<highlight><bold>200</bold></highlight> OK&rdquo;) of the recipient client is returned through the signaling chain to the caller, which can then communicate with the callee through a media channel that is typically different from the signaling channel. Besides communicating with another SIP client, a SIP client may also talk to SIP servers for purposes such as registering itself with a SIP registrar by sending a REGISTER request. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Although SIP has been widely implemented for various applications, it was designed mainly for signaling operations. It does not explicitly provide or require a security mechanism for protecting the security and privacy of the communication sessions. In many cases, however, it is desirable to require a SIP client that sends a request to authenticate its user to an outbound SIP proxy, and to also require the proxy to authenticate itself to the SIP client. Moreover, it is also often necessary to protect the integrity of the SIP request messages. Both the client-proxy authentication and message integrity require the use of a reliable security mechanism. Thus, there is a need to combine a reliable security mechanism with the SIP signaling operation to allow authentication between a SIP client and an outbound SIP proxy. The technical challenge is, however, how to fit the desired security mechanism into the SIP signaling framework so that the two mechanisms for different purposes can be performed together effectively. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> In view of the foregoing, the present invention provides a scheme to integrate a security mechanism, such as the Kerberos protocol or the NTLM protocol, into the message flow of the SIP signaling operation to allow a SIP client and a SIP proxy to authenticate each other. In accordance with the invention, when the proxy receives a SIP request message from the SIP client, it responds with a challenge message indicating that authentication according to a pre-selected security mechanism is required. In response, the SIP client sends a second, or revised, version of the request message with a proxy authorization header that includes authentication data for authenticating the client to the server according to the security mechanism. In the case where the Kerberos security mechanism is used, the proxy authorization header includes data representing a Kerberos server ticket obtained by the client for accessing the proxy. If the authentication of the client&apos;s user based on the proxy authorization header data is successful, the SIP proxy forwards the request through the SIP message signaling path between the SIP client and the intended recipient of the request message. If the SIP client requires mutual authentication, the SIP proxy adds a proxy authentication information header to the next message it sends to the client. This message may be, for example, a &ldquo;<highlight><bold>200</bold></highlight> OK&rdquo; SIP response generated by a callee SIP client in response to an INVITE request or a &ldquo;<highlight><bold>200</bold></highlight> OK&rdquo; response generated by a SIP registrar server in response to a REGISTER message. The proxy authentication information header contains the authentication data for the client to authenticate the SIP proxy.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> While the appended claims set forth the features of the present invention with particularity, the invention, together with its objects and advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings of which: </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram generally illustrating an exemplary computer system on which the present invention may be implemented; </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a schematic diagram showing a Session Initiation Protocol (SIP) system including a SIP client and a SIP proxy server that authenticate each other during a session signaling phase; </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a schematic diagram showing exchange of signaling messages between the SIP client and the SIP proxy server for authentication purposes; </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a schematic diagram showing a state machine representing the operation of security mechanisms in conjunction within the framework of SIP; </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a schematic diagram showing exchange of signaling messages for the SIP client to perform authentication operations with multiple SIP proxies; </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a schematic diagram showing the message flow in a process of pre-authentication between the SIP client and the proxy using the Kerberos security mechanism; </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a schematic diagram showing the message flow in a challenged-authentication process between the SIP client and the proxy using the Kerberos security mechanism; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a schematic diagram showing the message flow in a challenged-authentication process between the SIP client and the proxy using the NTLM security mechanism; and </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a schematic diagram showing the message flow in a process of pre-authentication between the SIP client and the proxy using the NTLM security mechanism.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Turning to the drawings, wherein like reference numerals refer to like elements, the invention is illustrated as being implemented in a suitable computing environment. Although not required, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed by a personal computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multi-processor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The following description begins with a description of a general-purpose computing device that may be used in an exemplary system for implementing the invention, and the invention will be described in greater detail with reference to FIGS. <highlight><bold>2</bold></highlight>-<highlight><bold>9</bold></highlight>. Turning now to <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> general purpose computing device is shown in the form of a conventional personal computer <highlight><bold>20</bold></highlight>, including a processing unit <highlight><bold>21</bold></highlight>, a system memory <highlight><bold>22</bold></highlight>, and a system bus <highlight><bold>23</bold></highlight> that couples various system components including the system memory to the processing unit <highlight><bold>21</bold></highlight>. The system bus <highlight><bold>23</bold></highlight> may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory includes read only memory (ROM) <highlight><bold>24</bold></highlight> and random access memory (RAM) <highlight><bold>25</bold></highlight>. A basic input/output system (BIOS) <highlight><bold>26</bold></highlight>, containing the basic routines that help to transfer information between elements within the personal computer <highlight><bold>20</bold></highlight>, such as during start-up, is stored in ROM <highlight><bold>24</bold></highlight>. The personal computer <highlight><bold>20</bold></highlight> further includes a hard disk drive <highlight><bold>27</bold></highlight> for reading from and writing to a hard disk <highlight><bold>60</bold></highlight>, a magnetic disk drive <highlight><bold>28</bold></highlight> for reading from or writing to a removable magnetic disk <highlight><bold>29</bold></highlight>, and an optical disk drive <highlight><bold>30</bold></highlight> for reading from or writing to a removable optical disk <highlight><bold>31</bold></highlight> such as a CD ROM or other optical media. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The hard disk drive <highlight><bold>27</bold></highlight>, magnetic disk drive <highlight><bold>28</bold></highlight>, and optical disk drive <highlight><bold>30</bold></highlight> are connected to the system bus <highlight><bold>23</bold></highlight> by a hard disk drive interface <highlight><bold>32</bold></highlight>, a magnetic disk drive interface <highlight><bold>33</bold></highlight>, and an optical disk drive interface <highlight><bold>34</bold></highlight>, respectively. The drives and their associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the personal computer <highlight><bold>20</bold></highlight>. Although the exemplary environment described herein employs a hard disk <highlight><bold>60</bold></highlight>, a removable magnetic disk <highlight><bold>29</bold></highlight>, and a removable optical disk <highlight><bold>31</bold></highlight>, it will be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, random access memories, read only memories, storage area networks, and the like may also be used in the exemplary operating environment. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> A number of program modules may be stored on the hard disk <highlight><bold>60</bold></highlight>, magnetic disk <highlight><bold>29</bold></highlight>, optical disk <highlight><bold>31</bold></highlight>, ROM <highlight><bold>24</bold></highlight> or RAM <highlight><bold>25</bold></highlight>, including an operating system <highlight><bold>35</bold></highlight>, one or more applications programs <highlight><bold>36</bold></highlight>, other program modules <highlight><bold>37</bold></highlight>, and program data <highlight><bold>38</bold></highlight>. A user may enter commands and information into the personal computer <highlight><bold>20</bold></highlight> through input devices such as a keyboard <highlight><bold>40</bold></highlight> and a pointing device <highlight><bold>42</bold></highlight>. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit <highlight><bold>21</bold></highlight> through a serial port interface <highlight><bold>46</bold></highlight> that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, game port or a universal serial bus (USB) or a network interface card. A monitor <highlight><bold>47</bold></highlight> or other type of display device is also connected to the system bus <highlight><bold>23</bold></highlight> via an interface, such as a video adapter <highlight><bold>48</bold></highlight>. In addition to the monitor, personal computers typically include other peripheral output devices, not shown, such as speakers and printers. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The personal computer <highlight><bold>20</bold></highlight> may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer <highlight><bold>49</bold></highlight>. The remote computer <highlight><bold>49</bold></highlight> may be another personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the personal computer <highlight><bold>20</bold></highlight>, although only a memory storage device <highlight><bold>50</bold></highlight> has been illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The logical connections depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> include a local area network (LAN) <highlight><bold>51</bold></highlight> and a wide area network (WAN) <highlight><bold>52</bold></highlight>. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> When used in a LAN networking environment, the personal computer <highlight><bold>20</bold></highlight> is connected to the local network <highlight><bold>51</bold></highlight> through a network interface or adapter <highlight><bold>53</bold></highlight>. When used in a WAN networking environment, the personal computer <highlight><bold>20</bold></highlight> typically includes a modem <highlight><bold>54</bold></highlight> or other means for establishing communications over the WAN <highlight><bold>52</bold></highlight>. The modem <highlight><bold>54</bold></highlight>, which may be internal or external, is connected to the system bus <highlight><bold>23</bold></highlight> via the serial port interface <highlight><bold>46</bold></highlight>. In a networked environment, program modules depicted relative to the personal computer <highlight><bold>20</bold></highlight>, or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> In the description that follows, the invention will be described with reference to acts and symbolic representations of operations that are performed by one or more computers, unless indicated otherwise. As such, it will be understood that such acts and operations, which are at times referred to as being computer-executed, include the manipulation by the processing unit of the computer of electrical signals representing data in a structured form. This manipulation transforms the data or maintains it at locations in the memory system of the computer, which reconfigures or otherwise alters the operation of the computer in a manner well understood by those skilled in the art. The data structures where data is maintained are physical locations of the memory that have particular properties defined by the format of the data. However, while the invention is being described in the foregoing context, it is not meant to be limiting as those of skill in the art will appreciate that various of the acts and operations described hereinafter may also be implemented in hardware. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the present invention is directed to a way to integrate a security mechanism, especially one implementing the Kerberos authentication protocol, into the request messages under the Session Initiation Protocol (SIP) to enable a SIP client <highlight><bold>72</bold></highlight> and a SIP proxy server <highlight><bold>74</bold></highlight> to authenticate each other and for protecting the integrity of the signaling messages. The SIP is defined in Request For Comments (RFC) 2543, which is hereby incorporated by reference in its entirety. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> By way of example, as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, in a typical session initiation operation, a user <highlight><bold>76</bold></highlight> (e.g., &ldquo;Ann&rdquo;) of a SIP client <highlight><bold>72</bold></highlight> (the &ldquo;caller&rdquo;) that wants to talk to another user <highlight><bold>80</bold></highlight> (e.g., &ldquo;Bob&rdquo;) sends an INVITE message <highlight><bold>82</bold></highlight> that identifies Bob as the intended recipient for the INVITE. This INVITE is sent to an outbound proxy server <highlight><bold>74</bold></highlight> for the caller SIP client&apos;s domain. As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the INVITE message may be passed through multiple SIP proxies involved in the signaling operation before it reaches the SIP client <highlight><bold>86</bold></highlight> (the callee) of Bob&apos;s computer <highlight><bold>88</bold></highlight>. In a preferred embodiment, the security of the SIP signaling messages being transferred between the SIP proxies in the signaling path is protected by sending the messages under the IPSec protocol or through a pipe under the Secured Sockets Layer (SSL) protocol. It will be appreciated that although in this example the SIP request is an INVITE request, the authentication scheme described below can also be used for other types of SIP requests, such as REGISTER, MESSAGE, SUBSCRIBE, SERVICE, etc. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> For ensuring the security of the signaling operation and the integrity of the signaling messages, the outbound SIP proxy server <highlight><bold>74</bold></highlight> may require authentication of the user <highlight><bold>76</bold></highlight> of the caller SIP client <highlight><bold>72</bold></highlight> before forwarding the INVITE message <highlight><bold>82</bold></highlight> through the signaling path <highlight><bold>90</bold></highlight>. In accordance with the invention, referring now to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the proxy server <highlight><bold>74</bold></highlight> responds by sending a challenge message <highlight><bold>96</bold></highlight> to the SIP client <highlight><bold>72</bold></highlight>. The challenge message <highlight><bold>96</bold></highlight> contains the status code &ldquo;<highlight><bold>407</bold></highlight> Proxy Authentication Required&rdquo; as defined in the SIP specification for indicating that the client <highlight><bold>72</bold></highlight> has to first authenticate the user with the proxy <highlight><bold>74</bold></highlight>. Pursuant to the SIP specification, the challenge message <highlight><bold>96</bold></highlight> (referred to hereinafter as the &ldquo;<highlight><bold>407</bold></highlight> message&rdquo;) includes a &ldquo;Proxy-Authenticate&rdquo; header field <highlight><bold>98</bold></highlight> that contains data indicating the security mechanism the client should use for authentication. The syntax and contents of the Proxy-Authenticate header is described in greater detail below. In a preferred embodiment, Kerberos is the preferred security mechanism, but the SIP framework also allows the use of the security mechanism based on the NTLM protocol. In the following description, it is assumed that a security mechanism based on the Kerberos protocol is used unless otherwise indicated. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Still referring to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, when the SIP client <highlight><bold>72</bold></highlight> receives the <highlight><bold>407</bold></highlight> message <highlight><bold>96</bold></highlight> from the proxy server <highlight><bold>74</bold></highlight> in response to the INVITE message <highlight><bold>82</bold></highlight>, it decides from the Proxy-Authenticate header <highlight><bold>98</bold></highlight> that the proxy server requires authentication of the user by means of the Kerberos mechanism. The client <highlight><bold>72</bold></highlight> then obtains a server ticket <highlight><bold>108</bold></highlight> from a Kerberos Key Distribution Center (KDC) <highlight><bold>100</bold></highlight> for the SIP proxy server <highlight><bold>74</bold></highlight> if it has not already obtained one. In one implementation, the KDC <highlight><bold>100</bold></highlight> is part of the domain controller <highlight><bold>102</bold></highlight> for the proxy server <highlight><bold>74</bold></highlight>. After obtaining the server ticket <highlight><bold>108</bold></highlight>, the client <highlight><bold>72</bold></highlight> sends another INVITE message <highlight><bold>110</bold></highlight>. This time, however, the INVITE message <highlight><bold>110</bold></highlight> includes a Proxy-Authorization header field <highlight><bold>112</bold></highlight>, pursuant to the SIP specification. The Proxy-Authorization header field <highlight><bold>112</bold></highlight> includes the server ticket <highlight><bold>108</bold></highlight> for accessing the proxy, which includes the session key <highlight><bold>116</bold></highlight> to be used. The syntax and contents of the Proxy-Authorization. header field is described in greater detail below. Optionally, the Proxy-Authorization header may also include a request for mutual-authentication, i.e., asking the proxy server <highlight><bold>74</bold></highlight> to authenticate itself to the client <highlight><bold>72</bold></highlight>. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> When the SIP proxy server <highlight><bold>74</bold></highlight> receives the resent INVITE message <highlight><bold>110</bold></highlight> with the Kerberos server ticket embedded therein, it extracts the server ticket and verifies the validity of the ticket by decrypting it with its long-term key shared with the KDC <highlight><bold>100</bold></highlight>. If the ticket is valid, the user <highlight><bold>76</bold></highlight> is authenticated, and the SIP proxy server <highlight><bold>74</bold></highlight> forwards the INVITE message <highlight><bold>110</bold></highlight> to the next proxy <highlight><bold>120</bold></highlight> on the signaling path. If the client <highlight><bold>72</bold></highlight> has requested mutual authentication in the Proxy-Authorization header <highlight><bold>112</bold></highlight> of the INVITE message <highlight><bold>110</bold></highlight>, the proxy server <highlight><bold>74</bold></highlight> will sign future packets from the server to the client using a session key associated with the Kerberos server ticket. This message includes a Proxy-Authentication Information header <highlight><bold>124</bold></highlight> that contains the credentials of the proxy <highlight><bold>74</bold></highlight> to allow the client <highlight><bold>72</bold></highlight> to authenticate the proxy. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Ultimately, the INVITE message <highlight><bold>110</bold></highlight> reaches the callee, i.e., the SIP client <highlight><bold>86</bold></highlight> of Bob&apos;s computer <highlight><bold>88</bold></highlight>. If the callee accepts the call invitation, it returns a &ldquo;<highlight><bold>200</bold></highlight> OK&rdquo; message <highlight><bold>126</bold></highlight>, which is then routed back to the caller. Once the call connection is established, the caller can communicate with the callee directly without having to go through the SIP proxies involved in the signaling phase. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, in accordance with the invention, the operation of establishing the authentication security association (SA) with between the SIP client <highlight><bold>72</bold></highlight> and the SIP proxy server <highlight><bold>74</bold></highlight> can be viewed as a state machine <highlight><bold>128</bold></highlight>. In the embodiment shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the preferred security mechanism is Kerberos, but optionally the NTLM security mechanism can also be used, and the state machine diagram reflects the inclusion of that option. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the states are shown in circles, and the operations performed in connection with the states are shown in rectangular blocks. As shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, one state in the state machine is the &ldquo;SECURITY_STATE_NONE&rdquo; state <highlight><bold>132</bold></highlight>, in which no security SA has been established. When the client <highlight><bold>72</bold></highlight> receives a <highlight><bold>407</bold></highlight> challenge from the proxy <highlight><bold>74</bold></highlight> in response to an INVITE sent by the client or when the client decides to do a pre-authentication with the proxy, the client enters into a &ldquo;SECURITY_STATE_ACQUIRING_SA&rdquo; state <highlight><bold>136</bold></highlight>, in which the client acquires the security association data required for authentication, which depends on the security mechanism selected. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Generally, the security association is defined as a state in which the client and the SIP proxy have exchanged a shared secret in a secure manner such that this secret can be used to authenticate and protect the integrity of any subsequent messages exchanged by the client and the proxy. If the security mechanism is Kerberos, the security association includes the Kerberos server ticket for the proxy and the session key. In the case of Kerberos, the obtained SA is complete, i.e., it is sufficient for the proxy to authenticate the user of the SIP client. The client then sends this SA-related information (e.g., Kerberos session key encrypted with the server&apos;s secret) to the proxy (step <highlight><bold>138</bold></highlight>). If the proxy sends back a signed <highlight><bold>200</bold></highlight> OK message (step <highlight><bold>140</bold></highlight>), the authentication is successful and the security association is established, i.e., the client is in the SA Established state <highlight><bold>142</bold></highlight>. If, however, the proxy sends a <highlight><bold>407</bold></highlight> challenge instead (step <highlight><bold>146</bold></highlight>), the client assumes that the proxy is in a bad state so that it cannot validate the client&apos;s good credentials. The client then waits for a &ldquo;back-off&rdquo; time (e.g., 5 minutes) before trying to send SIP messages again (step <highlight><bold>148</bold></highlight>). </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> After entering the SA Established state <highlight><bold>142</bold></highlight>, the client can send further messages to the proxy without having to do the authentication again, as long as the security association has not expired. If, however, the proxy sends a <highlight><bold>407</bold></highlight> challenge (step <highlight><bold>150</bold></highlight>), the client assumes that the proxy has for some reason dropped the established security association. As a result, the client enters the SA Dropped state <highlight><bold>156</bold></highlight>, and moves back to the SECURITY_STATE_ACQUIRING_SA state <highlight><bold>136</bold></highlight> to acquire a new SA for redoing the authentication with the proxy. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> As mentioned above, the NTLM mechanism can be optionally selected for user authentication. The state migration for NTLM is largely identical to that for Kerberos, but with the difference that the NTLM acquires only a partial SA the first time (step <highlight><bold>158</bold></highlight>), and sends the incomplete SA to the proxy in a first message. More specifically, in the case of NTLM, the first request from the client with the SA related information carries the client&apos;s security related capabilities (e.g., the version of the protocol it supports, the signing algorithms it supports, etc.) In response, the server sends a second <highlight><bold>407</bold></highlight> challenge (step <highlight><bold>160</bold></highlight>) that contains its a own authentication data, including its NTLM related capabilities and a random byte string typically called &ldquo;nonce&rdquo;. In response, the client signs a hash of its own name and the &ldquo;nonce&rdquo; value sent by the proxy using its credentials. This is handled internally by the NTLM implementation. The server verifies the client&apos;s authentication data and gets the session key with the help of the domain controller. If the SIP proxy is not the intended recipient, it then forwards the SIP request to the next hop in the signaling path, and signs the next message (e.g., a <highlight><bold>200</bold></highlight> OK message from the recipient) to the sender SIP client (step <highlight><bold>140</bold></highlight>). </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The syntax of the various SIP headers involved in the message exchange between the SIP client and the SIP proxy for authentication purposes is described below. </paragraph>
</section>
<section>
<heading lvl="1">The <highlight><bold>407</bold></highlight> Response </heading>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> As mentioned above, if the SIP proxy server <highlight><bold>74</bold></highlight> wants to challenge the identity of the SIP client (or its user) that sent an INVITE message, it sends a <highlight><bold>407</bold></highlight> message with a Proxy-Authenticate header back to the client. The syntax of Proxy-Authenticate header in a preferred embodiment requiring the use of the Kerberos security mechanism for authentication is as follows:</paragraph>
<paragraph id="P-0037" lvl="1"><number>&lsqb;0037&rsqb;</number> Proxy-Authenticate&equals;&ldquo;Proxy-Authenticate&rdquo; scheme kerb-challenge gssapi-data  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="49PT" align="left"/>
<colspec colname="2" colwidth="154PT" align="left"/>
<thead>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>Scheme</entry>
<entry>&equals; &ldquo;kerberos&rdquo; &verbar; &ldquo;NTLM&rdquo; &verbar; &ldquo;Negotiate&rdquo;</entry>
</row>
<row>
<entry></entry>
<entry>kerb-challenge</entry>
<entry>&equals; 1&num;( realm &verbar; targetname &verbar; &lsqb; opaque &rsqb; &verbar; qop-</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="77PT" align="left"/>
<colspec colname="1" colwidth="140PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>options &verbar; ggssapi-data )</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="63PT" align="left"/>
<colspec colname="2" colwidth="140PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>targetname</entry>
<entry>&ensp;&equals; &ldquo;targetname&rdquo; &ldquo;&equals;&rdquo; &lt;&ldquo;&gt; URI ( 1*SP URI )</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="49PT" align="left"/>
<colspec colname="2" colwidth="154PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>URI</entry>
<entry>&equals; absoluteURI &verbar; abs_path</entry>
</row>
<row>
<entry></entry>
<entry>opaque</entry>
<entry>&equals; &ldquo;opaque&rdquo; &ldquo;&equals;&rdquo; quoted-string</entry>
</row>
<row>
<entry></entry>
<entry>qop-options</entry>
<entry>&equals; &ldquo;qop&rdquo; &ldquo;&equals;&rdquo; &lt;&ldquo;&gt; 1&num;qop-value &lt;&rdquo;&gt;</entry>
</row>
<row>
<entry></entry>
<entry>qop-value</entry>
<entry>&equals; &ldquo;auth&rdquo; &verbar; &ldquo;auth-int&rdquo; &verbar; token</entry>
</row>
<row>
<entry></entry>
<entry>gssapi-data</entry>
<entry>&equals; &ldquo;gssapi-data&rdquo; &ldquo;&equals;&rdquo; ( token &verbar; quoted-string)</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The syntax of the Proxy-Authenticate header described here is similar to the &ldquo;WWW-Authenticate Response Header&rdquo; defined in IETF RFC 2617 entitled &ldquo;HTTP Authentication: Basic and Digest Access Authentication,&rdquo; which is hereby incorporated by reference in its entirety. The optional parameters &ldquo;algorithm&rdquo; and &ldquo;stale&rdquo; have been dropped. The &ldquo;scheme&rdquo; field of the header allows the client to choose which authentication mechanism among the ones proposed by the server it wants to use to authenticate itself to the server. The client preferably chooses the Kerberos mechanism if it can support that mechanism, and otherwise chooses the NTLM authentication mechanism. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The realm parameter is the unique identifier of the SIP service provider to which the SIP proxy belongs and the client is trying to access. The realm string is displayed to the user to help her identify the correct set of credentials she needs to provide in order to authenticate. The &ldquo;targetname&rdquo; parameter is a always required and is used to carry the FQDN for the SIP proxy. The actual contents of this parameter help the client to keep track of which proxy it is establishing an SA with. It helps the proxy to determine whether the response is meant for itself or some other proxy. The &ldquo;opaque&rdquo; parameter is used by the server to index the particular SA being established and has to be echoed in any future Proxy-Authorization header the client generates for the SA, as will be described below. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> In this embodiment, it is assumed that the Generic Security Service Application Programming Interface (GSS-API) as defined in IETF RFC 2078 (which is hereby incorporated by reference in its entirety) has been implemented and is used for securely exchanging messages between communicating applications. The GSS-API allows, among other things, a communicating application to authenticate the user associated with another application. The gssapi-data field in the Proxy-Authenticate header and the Proxy-Authorization header described below is for holding the data returned during the SA negotiation phase by the Security APIs that implement NTLM and Kerberos security packages. These APIs return the gssapi data that need to be sent from the client to the proxy and vice versa. The gssapi data are opaque to the SIP client and proxy implementation and are interpreted only by the security API. The qop parameter tells the client the level of security the server wants to client to adhere to. The qop parameter value is always set to &ldquo;auth&rdquo; indicating the security level provided by this mechanism is user authentication. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The following is an example of a Proxy-Authenticate header field:</paragraph>
<paragraph id="P-0042" lvl="1"><number>&lsqb;0042&rsqb;</number> Proxy-Authenticate: Negotiate </paragraph>
<paragraph id="P-0043" lvl="2"><number>&lsqb;0043&rsqb;</number> realm&equals;&ldquo;Microsoft RTC Service provider&rdquo;, </paragraph>
<paragraph id="P-0044" lvl="2"><number>&lsqb;0044&rsqb;</number> opaque&equals;&ldquo;ABCDEF456789 &rdquo;</paragraph>
<paragraph id="P-0045" lvl="2"><number>&lsqb;0045&rsqb;</number> qop&equals;&ldquo;auth&rdquo;, </paragraph>
<paragraph id="P-0046" lvl="2"><number>&lsqb;0046&rsqb;</number> gssapi-data&equals;&ldquo;ABCD345678yuikjhlbcdfsaqwety&rdquo;</paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Typically the SIP proxy would challenge the identity of the SIP client if it is provisioned to allow only authorized clients and the incoming SIP packet from the client does not contain any signature. The SIP proxy would also challenge a client if it has lost the security association for this SIP URI (due a reboot, etc.). If there is a mismatch between the authorization parameters that the client is using and what the SIP proxy is expecting, the SIP proxy would challenge the client using a <highlight><bold>407</bold></highlight> message carrying the exact authorization parameters that SIP proxy wants the client to comply with. </paragraph>
</section>
<section>
<heading lvl="1">Client&apos;s Response to a <highlight><bold>407</bold></highlight> Challenge </heading>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> In response to a <highlight><bold>407</bold></highlight> challenge, the SIP client would try to generate a signature complying with the authentication parameters sent by the SIP proxy through the <highlight><bold>407</bold></highlight> challenge message. The SIP client would increment the Cseq value and resend the initial SIP request that was challenged along with the authorization information carried in a Proxy-Authorization request header. The syntax of the Proxy-Authorization request header in a preferred embodiment is as follows:  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<thead>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>Proxy-Authorization &equals; &ldquo;Proxy-Authorization&rdquo; &ldquo;:&rdquo; scheme kerb-</entry>
</row>
<row>
<entry></entry>
<entry>response realm message-qop targetname</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="49PT" align="left"/>
<colspec colname="2" colwidth="140PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>kerb-response</entry>
<entry>&equals; 1&num;( &lsqb;crand&rsqb; &verbar; &lsqb;response&rsqb; &verbar; &lsqb;opaque&rsqb; &verbar;</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry>&thinsp;&thinsp;&thinsp;&lsqb;gssapi-data&rsqb; )</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="56PT" align="left"/>
<colspec colname="2" colwidth="133PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&emsp;message-qop</entry>
<entry>&equals; &ldquo;qop&rdquo; &ldquo;&equals;&rdquo; qop-value</entry>
</row>
<row>
<entry></entry>
<entry>&emsp;crand</entry>
<entry>&equals; &ldquo;crand&rdquo; &ldquo;&equals;&rdquo; crand-value</entry>
</row>
<row>
<entry></entry>
<entry>&emsp;crand-value</entry>
<entry>&equals; crand-value</entry>
</row>
<row>
<entry></entry>
<entry>&emsp;response</entry>
<entry>&equals; &ldquo;response&rdquo; &ldquo;&equals;&rdquo; request-digest</entry>
</row>
<row>
<entry></entry>
<entry>&emsp;request-digest</entry>
<entry>&equals; &lt;&ldquo;&gt; 32LHEX &lt;&rdquo;&gt;</entry>
</row>
<row>
<entry></entry>
<entry>&emsp;LHEX</entry>
<entry>&equals; &ensp;&ldquo;0&rdquo; &verbar; &ldquo;1&rdquo; &verbar; &ldquo;2&rdquo; &verbar; &ldquo;3&rdquo; &verbar;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="91PT" align="left"/>
<colspec colname="1" colwidth="126PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&ensp;&ldquo;4&rdquo; &verbar; &ldquo;5&rdquo; &verbar; &ldquo;6&rdquo; &verbar; &ldquo;7&rdquo; &verbar;</entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&ldquo;8&rdquo; &verbar; &ldquo;9&rdquo; &verbar; &ldquo;a&rdquo; &verbar; &ldquo;b&rdquo; &verbar;</entry>
</row>
<row>
<entry></entry>
<entry>&ensp;&ldquo;c&rdquo; &verbar; &ldquo;d&rdquo; &verbar; &ldquo;e&rdquo; &verbar; &ldquo;f&rdquo;</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The syntax of the Proxy-Authorization header described here is similar to the &ldquo;Authorization Request Header&rdquo; defined in IETF RFC 2617, except that the optional parameters &ldquo;algorithm&rdquo; and &ldquo;URI&rdquo; have been dropped. The Proxy-Authorization header is added after the request URI and the Via headers The signature is computed using the session key across following fields: </paragraph>
<paragraph id="P-0050" lvl="2"><number>&lsqb;0050&rsqb;</number> The From header URI </paragraph>
<paragraph id="P-0051" lvl="2"><number>&lsqb;0051&rsqb;</number> The To header URI </paragraph>
<paragraph id="P-0052" lvl="2"><number>&lsqb;0052&rsqb;</number> The From header tag </paragraph>
<paragraph id="P-0053" lvl="2"><number>&lsqb;0053&rsqb;</number> The To header tag </paragraph>
<paragraph id="P-0054" lvl="2"><number>&lsqb;0054&rsqb;</number> The &ldquo;crand&rdquo; parameter in the Proxy-Authorization or the &ldquo;srand&rdquo; parameter in the Proxy-Authentication-Info header </paragraph>
<paragraph id="P-0055" lvl="2"><number>&lsqb;0055&rsqb;</number> The Expires value in the SIP message Expires header. </paragraph>
<paragraph id="P-0056" lvl="1"><number>&lsqb;0056&rsqb;</number> The message body of the SIP message is not included in the signature. A proxy-authorization header contains either the gssapi-data parameter or the response (signature) parameter. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> The following are examples of a Proxy-Authorization header in a client&apos;s response to a <highlight><bold>407</bold></highlight> challenge:</paragraph>
<paragraph id="P-0058" lvl="1"><number>&lsqb;0058&rsqb;</number> Proxy-Authorization: Negotiate </paragraph>
<paragraph id="P-0059" lvl="2"><number>&lsqb;0059&rsqb;</number> realm&equals;&ldquo;Microsoft RTC Service Provider&rdquo;, </paragraph>
<paragraph id="P-0060" lvl="2"><number>&lsqb;0060&rsqb;</number> response&equals;&ldquo;ABCD87564cvx&rdquo;, </paragraph>
<paragraph id="P-0061" lvl="2"><number>&lsqb;0061&rsqb;</number> opaque&equals;&ldquo;ABCD1234&rdquo;, </paragraph>
<paragraph id="P-0062" lvl="2"><number>&lsqb;0062&rsqb;</number> crand&equals;&ldquo;1234&rdquo;</paragraph>
<paragraph id="P-0063" lvl="2"><number>&lsqb;0063&rsqb;</number> qop&equals;&ldquo;auth&rdquo;</paragraph>
<paragraph id="P-0064" lvl="2"><number>&lsqb;0064&rsqb;</number> targetname&equals;&ldquo;serverl.domainA.microsoft.com&rdquo;</paragraph>
<paragraph id="P-0065" lvl="1"><number>&lsqb;0065&rsqb;</number> OR</paragraph>
<paragraph id="P-0066" lvl="1"><number>&lsqb;0066&rsqb;</number> Proxy-Authorization: Negotiate </paragraph>
<paragraph id="P-0067" lvl="2"><number>&lsqb;0067&rsqb;</number> realm&equals;&ldquo;Microsoft RTC Service Provider&rdquo;, </paragraph>
<paragraph id="P-0068" lvl="2"><number>&lsqb;0068&rsqb;</number> opaque&equals;&ldquo;ABCD1234&rdquo;, </paragraph>
<paragraph id="P-0069" lvl="2"><number>&lsqb;0069&rsqb;</number> gssapi-data&equals;&ldquo;ABCDEF123456&rdquo;, </paragraph>
<paragraph id="P-0070" lvl="2"><number>&lsqb;0070&rsqb;</number> qop&equals;&ldquo;auth&rdquo;, </paragraph>
<paragraph id="P-0071" lvl="2"><number>&lsqb;0071&rsqb;</number> targetname&equals;&ldquo;serverl.domainA.microsoft.com&rdquo;</paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> Besides responding to a <highlight><bold>407</bold></highlight> challenge from the proxy, the client would also send this header when it registers with the SIP proxy for the first time. The Proxy-Authorization header would contain the &ldquo;gssapi-data&rdquo; parameter when the SIP client registers with the proxy server and is in the process of initializing a security association for a session. </paragraph>
</section>
<section>
<heading lvl="1">Mutual Authentication </heading>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> Establishing a mutual authentication between the SIP proxy and the SIP client might be required in certain deployment scenarios. The client finds out from the provisioning profile it has for the particular proxy server whether mutual authentication is required or not. If the mutual authentication is enabled, the client initializes its security association for mutual authentication, using the standard version of the GSS API. Also, if mutual authentication is enabled, the server needs to sign every packet it sends to the SIP client. This signature is carried in the Proxy-Authentication-Information request header. The syntax of the Proxy-Authenticate-Information is as follows:  
<table-cwu id="TABLE-US-00003">
<number>3</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="84PT" align="left"/>
<colspec colname="2" colwidth="119PT" align="left"/>
<thead>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>ProxyAuthenticationInfo &equals;</entry>
<entry>&ldquo;Proxy-Authentication-Info&rdquo; &ldquo;:&rdquo;</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry>auth-info</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="35PT" align="left"/>
<colspec colname="2" colwidth="168PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>auth-info</entry>
<entry>&equals; 1&num;( message-qop&verbar; response-auth &verbar; srand )</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>response-auth &equals; &ldquo;rspauth&rdquo; &ldquo;&equals;&rdquo; response-digest</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="56PT" align="left"/>
<colspec colname="2" colwidth="147PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>response-digest</entry>
<entry>&equals; &lt;&ldquo;&gt; *LHEX &lt;&rdquo;&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="42PT" align="left"/>
<colspec colname="2" colwidth="161PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>srand</entry>
<entry>&equals; &ldquo;srand&rdquo; &ldquo;&equals;&rdquo; srand-value</entry>
</row>
<row>
<entry></entry>
<entry>srand-value</entry>
<entry>&equals; quoted-string</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> The &ldquo;rspauth&rdquo; parameter in the Proxy-Authentication-Info header carries the signature (of the authenticating proxy) for this response. The &ldquo;srand&rdquo; parameter is used by the server after the SA establishment phase to sign the messages it sends to the client. This parameter is a random string generated by the server itself and is used to introduce an element of randomness in the hash/signature of the message generated. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> The following is an example of the Proxy-Authentication-Information:  
<table-cwu id="TABLE-US-00004">
<number>4</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<thead>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>Proxy-Authentication-Info: Negotiate</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="175PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>realm&equals;&ldquo;Microsoft RTC Service Provider&rdquo;,</entry>
</row>
<row>
<entry></entry>
<entry>qop &equals; &ldquo;auth&rdquo;,</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="28PT" align="left"/>
<colspec colname="2" colwidth="147PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>rspauth</entry>
<entry>&equals; &ldquo;ABCD87564cvx&rdquo;,</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="21PT" align="left"/>
<colspec colname="2" colwidth="154PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>srand</entry>
<entry>&equals; &ldquo;9876543210&rdquo;,</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="175PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>targetname&equals;&ldquo;server1.domainA.microsoft.com&rdquo;</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> Generally, in the SIP framework, a SIP client may establish a security association with a SIP proxy during a registration process using a REGISTER request. The registration allows the SIP client to receive messages from the SIP proxy. When the SIP client registers with the SIP proxy, it can at the same time authenticate its user with the SIP proxy server by sending the authentication data, such as a Kerberos ticket, along in the REGISTER message. If the SIP client has already registered and authenticated itself with the SIP proxy, when the client sends a SIP request, such as an INVITE, the request message from the client will be signed using the Kerberos session key exchanged during the SA establishing process. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> Nevertheless, a SIP client is not required to register with the server before it can send out a request message to the SIP proxy. In the case where the caller has not authenticated itself with the proxy (even if the SIP client has already registered with the proxy), the SIP proxy does not forward the request to the next hop. Instead, the proxy sends a challenge to the SIP client. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> The challenge indicates that the client needs to establish a security association with this SIP server. The client can establish the SA by resending the request with the security association data, or alternatively it can do so by refreshing its registration with this server if one is already in place but the SA has not been established. Establishing the SA using the registration refresh and then sending the SIP request with a valid signature has the advantage that it also makes sure that the registration is in a good state. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> Also, every time a SIP client un-registers with SIP proxy, the security association (SA) between the two is lost and a new security association has to be negotiated again. Moreover, when the registration of a SIP client expires, the proxy server will remove its corresponding security context from its list of SAs. Every time a SIP client refreshes its registration it has to refresh the authentication security association. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> In a preferred embodiment that uses a security mechanism based on the Kerberos protocol, a Kerberos ticket is requested from a Kerberos Key Distribution Center (KDC) every time the SIP client registers with the SIP proxy if the authentication of the user of the sending SIP client is required by the SIP proxy/registrar. When the SIP client receives the Kerberos ticket, it decrypts this ticket. The decrypted ticket contains the session key and some other properties of this Kerberos session. This ticket also contains the session key and other session related parameters encrypted with the server&apos;s credentials. This part is returned in a pOutput parameter in the gssapi-data field and is sent in the re-INVITE request to the proxy. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> To facilitate a clear understanding of the operation of the security mechanism within the framework of SIP, a particular example of client-to-proxy Kerberos authentication is described below with reference to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. In this example, it is assumed that the SIP proxy server <highlight><bold>74</bold></highlight> has created a shared secret key with the KDC <highlight><bold>170</bold></highlight> in the domain &ldquo;domainA.Microsoft.com: S_server<highlight><bold>1</bold></highlight>&rdquo;, where &ldquo;server<highlight><bold>1</bold></highlight>&rdquo; is used in this example as the code name for a SIP proxy/registrar. The KDC <highlight><bold>170</bold></highlight> knows the proxy server <highlight><bold>74</bold></highlight> as server_ID &equals;serverl.domainB.microsoft.com. The proxy server <highlight><bold>74</bold></highlight> also acquires a credentials handle to be ready to respond to an incoming authentication request from the client. Server credentials are used to authenticate the proxy server <highlight><bold>74</bold></highlight> to the SIP client <highlight><bold>74</bold></highlight> in security protocols that support server authentication or mutual authentication. The proxy server <highlight><bold>74</bold></highlight> obtains a handle to its credentials defined by the service account used to start the server. It does so by calling the function AcquireCredentialsHandle of the Security Support Provider Interface (SSPI). </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> In the example of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the user <highlight><bold>76</bold></highlight> of the SIP client <highlight><bold>72</bold></highlight> is Ann. Ann has an account in an NT domain and logs on her account when she starts the day with the following information: </paragraph>
<paragraph id="P-0083" lvl="2"><number>&lsqb;0083&rsqb;</number> User_ID/principal name&equals;ann&commat;microsoft.com </paragraph>
<paragraph id="P-0084" lvl="2"><number>&lsqb;0084&rsqb;</number> Preferred_email&equals;ann&commat;microsoft.com </paragraph>
<paragraph id="P-0085" lvl="2"><number>&lsqb;0085&rsqb;</number> User_domain&equals;domainA.Microsoft.com </paragraph>
<paragraph id="P-0086" lvl="2"><number>&lsqb;0086&rsqb;</number> Workstation&equals;ann<highlight><bold>1</bold></highlight>.domainA.Microsoft.com </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> When Ann wants to call Bob, she starts the SIP client <highlight><bold>72</bold></highlight> on her workstation <highlight><bold>78</bold></highlight> (the SIP client may start automatically as a service but should run in the security context of the user). The SIP client <highlight><bold>72</bold></highlight> finds its outbound proxy server <highlight><bold>74</bold></highlight> using DNS. The outbound proxy server <highlight><bold>74</bold></highlight> to use in this example is identified as Server<highlight><bold>1</bold></highlight>.domainB.Microsoft.com. Ann indicates that she wants to talk to bob&commat;microsoft.com. Her SIP client <highlight><bold>72</bold></highlight> then sends an INVITE message <highlight><bold>82</bold></highlight> to Server<highlight><bold>1</bold></highlight>.domainB.Microsoft.com. The INVITE message includes the following information: </paragraph>
<paragraph id="P-0088" lvl="2"><number>&lsqb;0088&rsqb;</number> INVITE bob&commat;microsoft.com </paragraph>
<paragraph id="P-0089" lvl="2"><number>&lsqb;0089&rsqb;</number> From: ann&commat;microsoft.com </paragraph>
<paragraph id="P-0090" lvl="2"><number>&lsqb;0090&rsqb;</number> To: bob&commat;microsoft.com </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> For purposes of keeping the description of the example concise and clear, not all data contained in this INVITE message or other messages exchanged in the signaling processing are shown. The SIP proxy server <highlight><bold>74</bold></highlight> has been configured to require that all INVITE requests be authenticated for calls made to the Microsoft.com user name space. As a result, the SIP proxy server <highlight><bold>74</bold></highlight> responds to the INVITE by sending a <highlight><bold>407</bold></highlight> message <highlight><bold>96</bold></highlight> asking the SIP client <highlight><bold>74</bold></highlight> to use Kerberos to authenticate the user, Ann. The <highlight><bold>407</bold></highlight> message includes the following data:</paragraph>
<paragraph id="P-0092" lvl="1"><number>&lsqb;0092&rsqb;</number> Proxy-Authenticate: Kerberos realm&equals;domainB.Microsoft.com targetname&equals;&ldquo;server<highlight><bold>1</bold></highlight>.domainA.Microsoft.com&rdquo; opaque&equals;&ldquo;someopaquedata&rdquo;</paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> The opaque value is initialized by the proxy to identify the security context to use for this call. To that end, the proxy server <highlight><bold>74</bold></highlight> calls the function AcceptSecurityContext at this time and returns in opaque the base <highlight><bold>64</bold></highlight> encoded result of pOutput. The opaque value is used by the client and server to identify a security context to use for a particular server for the purposes of authentication continuation or re-authentication of subsequent requests to the same server using the Authorization request header. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> When the SIP client <highlight><bold>72</bold></highlight> on Ann&apos;s workstation gets the <highlight><bold>407</bold></highlight> message <highlight><bold>96</bold></highlight> indicating that authentication is required, it checks if it has a valid session key for talking to Server<highlight><bold>1</bold></highlight>.domainB.Microsoft.com. If it does not have one yet, it needs to contact the KDC in its domain to get a session key for accessing the outbound SIP proxy. In this example, the client knows from the realm specified in the <highlight><bold>407</bold></highlight> message that the proxy is in a different domain than its own. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> To establish a secured connection to the proxy server <highlight><bold>74</bold></highlight>, the client <highlight><bold>72</bold></highlight> acquires an outbound credentials handle before sending an authentication request to the proxy. This is performed by calling functions of SSPI. The SSPI provides the means for networked applications to call one of several security support providers (SSP) to establish authenticated connections and to exchange data securely over those connections. There are two client-side SSPI functions involved in the authentication setup. The AcquireCredentialsHandle function obtains a reference to previously obtained logon credentials. The function InitializeSecurityContext creates the initial authentication request security tokens. The call to initializeSecurityContext passes in the pInput the opaque value obtained from the <highlight><bold>407</bold></highlight> message. The client sets a tfContextReq parameter of the function to request MUTUAL_AUTH. A pfContextAttr pointer is the way the Kerberos module <highlight><bold>180</bold></highlight> tells the client that mutual-auth has been &ldquo;requested&rdquo;. This information is part of the KERB_AS_REQ created by the Kerberos module <highlight><bold>180</bold></highlight> of the client and passed in a secBuffer (pOutput) that tells the server (here the SIP proxy) the client wants mutual authentication. Since this is part of the KERB request, there is no need for a SIP mechanism (header/parameter) to request mutual authentication. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> In the example shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, calling the API function InitializeSecurityContext causes the following Kerberos logic to happen. First, the client <highlight><bold>72</bold></highlight> asks the KDC <highlight><bold>170</bold></highlight> for the domainA.Microsoft.com domain to give it a server ticket to the Proxy server <highlight><bold>74</bold></highlight> in DomainB. The KDC <highlight><bold>170</bold></highlight> for domainA.Microsoft.com sends the client <highlight><bold>72</bold></highlight> a referral ticket to the KDC <highlight><bold>172</bold></highlight> for corp.Microsoft.com. This referral ticket is encrypted in the inter-domain key shared by the two KDCs. With the referral ticket, the client asks the KDC <highlight><bold>172</bold></highlight> for corp.Microsoft.com to give it a server ticket to the server in DomainB. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> In response, the KDC <highlight><bold>172</bold></highlight> sends the client a referral ticket to the KDC <highlight><bold>176</bold></highlight> for DomainB. This ticket is encrypted in the inter-domain key the KDC <highlight><bold>172</bold></highlight> shares with the DomainB KDC <highlight><bold>176</bold></highlight>. The client then asks the KDC <highlight><bold>176</bold></highlight> for DomainB to give it a ticket to the proxy server <highlight><bold>74</bold></highlight> in DomainB. The KDC <highlight><bold>176</bold></highlight> sends back a server ticket <highlight><bold>108</bold></highlight> for accessing the proxy server <highlight><bold>74</bold></highlight>. The KDC <highlight><bold>176</bold></highlight> encrypts one copy of this session key with Ann&apos;s logon session key, and embeds another copy of the session key in the server ticket, along with Ann&apos;s authorization data, and encrypts the server ticket with the proxy server&apos;s long-term key. The KDC <highlight><bold>176</bold></highlight> then sends these credentials back to the client <highlight><bold>72</bold></highlight> in a Kerberos Ticket-Granting Service Reply (KRB_TGS_REP). </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> The call to InitializeSecurityContext thus causes the Kerberos module <highlight><bold>180</bold></highlight> of the client machine to initiate a TGS exchange with the KDC. The value returned by this exchange is the session key for signing messages to be sent to the proxy. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> Thereafter, the SIP client <highlight><bold>72</bold></highlight> creates a new INVITE message <highlight><bold>110</bold></highlight> (also called the &ldquo;re-INVITE&rdquo; message) to be sent to the SIP proxy. This new INVITE message <highlight><bold>110</bold></highlight> includes a proxy-authorization header as described above, with the GSS-API data therein containing the server ticket the client received from the KDC <highlight><bold>176</bold></highlight>. The session key is the value returned in the pOutput buffer returned by the InitializeSecurityContext call. Thus, the new INVITE message <highlight><bold>110</bold></highlight> includes the following data: </paragraph>
<paragraph id="P-0100" lvl="2"><number>&lsqb;0100&rsqb;</number> INVITE bob&commat;microsoft.com </paragraph>
<paragraph id="P-0101" lvl="2"><number>&lsqb;0101&rsqb;</number> From: ann&commat;microsoft.com </paragraph>
<paragraph id="P-0102" lvl="2"><number>&lsqb;0102&rsqb;</number> To: bob&commat;microsoft.com </paragraph>
<paragraph id="P-0103" lvl="2"><number>&lsqb;0103&rsqb;</number> Proxy-authorization: gss-scheme opaque gssapi-rdata </paragraph>
<paragraph id="P-0104" lvl="2"><number>&lsqb;0104&rsqb;</number> Opaque&equals;someopaquedata </paragraph>
<paragraph id="P-0105" lvl="2"><number>&lsqb;0105&rsqb;</number> Gssapi-rdata&equals;base<highlight><bold>64</bold></highlight> &lcub;pOutput&rcub;&equals;session key to the proxy </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> This INVITE does the equivalent of a KRB_AP_REQ to the proxy server. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> To protect the integrity of the messages and authenticate itself (i.e., prove the source of the message), the client signs the INVITE message <highlight><bold>110</bold></highlight> with the session key. Otherwise a third party could sniff the INVITE, get the Opaque and Gssapi-data values and send a bogus INVITE to the same server to make a call between itself and whatever destination it chooses. This means a client&apos;s authentication could be &ldquo;stolen&rdquo; for as long as the session key to the server is valid (8 hrs by default). Signing the INVITE doesn&apos;t stop a third party from grabbing the Opaque and Gssapi-rdata, but it can stop that party from creating a new INVITE to call whomever it wants. The server would have to be configured to only accept signed requests for this problem to be avoided. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> The client <highlight><bold>72</bold></highlight> uses the MakeSignature API and calls it for setting the phcontext to the security context used in this call (the one identify in the opaque of the <highlight><bold>407</bold></highlight>) and passing the content to sign in pMessage. The output of this call is the signed message returned in pMessage. The client adds the signature to the INVITE <highlight><bold>110</bold></highlight>. When the proxy server <highlight><bold>74</bold></highlight> receives the resent INVITE message <highlight><bold>110</bold></highlight>, it checks the opaque value in the Proxy-Authorization header and correlates it with a given phContext value (handle to a given security context). It takes the gssapi-rdata out and passes it to its Kerberos module <highlight><bold>182</bold></highlight> by calling the AcceptSecurityContext API function and passing the gssapi-rdata value obtained from the proxy-authorization header in the pInput component of the API function. The Kerberos module <highlight><bold>182</bold></highlight> decrypts the server ticket using the long-term key of the proxy, and extracts Ann&apos;s authorization data and the session key. It uses the session key to decrypt Ann&apos;s authenticator and then evaluates the timestamp inside. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> If the authenticator passes the test, the Kerberos module <highlight><bold>182</bold></highlight> looks for a mutual authentication flag in the client&apos;s request. If the flag is set, the Kerberos module <highlight><bold>182</bold></highlight> uses the session key to encrypt the time from Ann&apos;s authenticator and returns the result in a Kerberos Application Reply (KRB_AP_REP). This causes the call to AcceptSecurityContext to return a SEC_E_OK return value with the authenticator passed through the API using the pOutput buffer. Once the user is authenticated, the SIP proxy/registrar will process the request and forward the INVITE message to the next hop in the SIP signaling path. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> The SIP component of the Proxy then uses the next message it forwards to the SIP client to pass to the client the proxy&apos;s authenticator so that the client can authenticate the server. In the illustrated example, the message is a &ldquo;<highlight><bold>200</bold></highlight> OK&rdquo; message. This message is not originated by the SIP proxy. Rather, the <highlight><bold>200</bold></highlight> response is generated by the callee in response to the INVITE request. The SIP proxy merely signs it with the session key before forwarding this response to the caller. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> As described above, the authenticator is in the Proxy-Authentication-Information header. The header also includes the opaque value for the client to match this response to the right security context. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> When the SIP client <highlight><bold>72</bold></highlight> on Ann&apos;s workstation receives the &ldquo;<highlight><bold>200</bold></highlight> OK&rdquo; message, it extracts the Proxy-Authentication-Information header and calls InitializeSecurityContext with the phContext value set top the value in opaque and the pInput buffer set to response-digest. The Kerberos module <highlight><bold>180</bold></highlight> on the client decrypts the proxy&apos;s authenticator with the session key it shares with proxy and compares the time returned by the proxy with the time in the client&apos;s original authenticator. If the times match, the call to InitializeSecurityContext will return a SEC_E_OK and the client knows that the proxy is genuine. Else, the client should drop the call. There is no point in sending a CANCEL to kill the call since the client cannot trust the server to do anything it asks it to do. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> In the example described above, the authentication occurs in a scenario in which the SIP first sends an INVITE without authentication, and then sends the authentication data in another INVITE in response to a <highlight><bold>407</bold></highlight> message from the proxy indicating that authentication is required. Alternatively, the client can include the required authentication data in the first INVITE sent to the proxy. To that end, the client <highlight><bold>72</bold></highlight> obtains the server ticket for the proxy from the KDC <highlight><bold>176</bold></highlight> before it is used by the user to make a call under SIP. The authentication data required are then put in the Proxy-Authorization request header as described above. Doing this avoids the need for the proxy to send the <highlight><bold>407</bold></highlight> challenge to the client to ask for authentication data. Also, even though only one SIP proxy is involved in the example of authentication operation described above, there are typically multiple SIP proxies in the SIP signaling path between the caller and the callee, and more than one of them may require the caller&apos;s client for authentication. For instance, in the simplified case shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, there is another SIP proxy server <highlight><bold>120</bold></highlight> in additional to the outbound proxy server <highlight><bold>74</bold></highlight> of the SIP client, and both proxies require client authentication before forwarding the INVITE message. In this case, the client <highlight><bold>72</bold></highlight> first goes through the same process as described above in connection with <cross-reference target="DRAWINGS">FIG. 4</cross-reference> to authenticate itself with the outbound SIP server <highlight><bold>74</bold></highlight>. After the proxy server <highlight><bold>74</bold></highlight> authenticates the client, it sends the INVITE to the second proxy <highlight><bold>120</bold></highlight>, which then sends a <highlight><bold>407</bold></highlight> challenge <highlight><bold>190</bold></highlight> to the client. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> In response, the client sends another new INVITE <highlight><bold>192</bold></highlight> with a Proxy-Authorization header containing a Kerberos server ticket for the second Proxy server <highlight><bold>120</bold></highlight>. After authenticating the client, the second proxy passes the INVITE <highlight><bold>192</bold></highlight> to the callee. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> The following description provides additional examples of how the Proxy Authenticate, Proxy Authorization, and Proxy-Authentication Information headers are used in scenarios of different message flows for performing authentication based on the Kerberos or NTLM security mechanism. Turning to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, in this case, the SIP client <highlight><bold>72</bold></highlight> performs a Kerberos-based pre-authentication when the client registers with the proxy server. The client sends a REGISTER request <highlight><bold>200</bold></highlight> that includes a Proxy-Authorization header containing the Kerberos server ticket for the proxy and a request for mutual authentication as described above. After authenticating the client based on the server ticket, the proxy returns a <highlight><bold>200</bold></highlight> OK message <highlight><bold>202</bold></highlight> with a Proxy Authentication Information header containing the proxy&apos;s authentication data that the client can use to authenticate the proxy. Exemplary contents of the REGISTER and <highlight><bold>200</bold></highlight> OK messages are as follows.  
<table-cwu id="TABLE-US-00005">
<number>5</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<thead>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>REGISTER sip:nickn&commat;microsoft.com SIP/2.0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Via: SIP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markmmarkm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Call-ID: 123456789&commat;microsoft.com</entry>
</row>
<row>
<entry></entry>
<entry>CSeq: 1 REGISTER</entry>
</row>
<row>
<entry></entry>
<entry>Contact: &lt;sip:123.45.67.89:5060&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authorization: Negotiate</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry>realm&equals;&ldquo;Microsoft RTC Service Provider&rdquo;, qop &equals; &ldquo;auth&rdquo;, gssapi-</entry>
</row>
<row>
<entry>data &equals; &ldquo;34fcbaed78902QWERTY&rdquo;, targetname&equals;</entry>
</row>
<row>
<entry>&ldquo;server1.doaminA.microsoft.com&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry></entry>
<entry>Content-Length: 0</entry>
</row>
<row>
<entry></entry>
<entry>Via: SIP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authentication-Info: Negotiate qop&equals; auth, &ensp;rspauth&equals;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry>&ldquo;ABCD87564cvx&rdquo;, &ensp;srand &equals; &ldquo;9876543210&rdquo; realm&equals;&ldquo;Microsoft RTC</entry>
</row>
<row>
<entry>Service Provider&rdquo; targetname&equals;&ldquo;server1.doaminA.microsoft.com&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Call-ID: 123456789&commat;ms.com</entry>
</row>
<row>
<entry></entry>
<entry>CSeq: 1 REGISTER</entry>
</row>
<row>
<entry></entry>
<entry>Contact: &ldquo;Nick North&rdquo; &lt;sip:&commat;www.xxx.yyy.zzz&gt;</entry>
</row>
<row>
<entry></entry>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry></entry>
<entry>Content-Length: 0</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows a scenario of Kerberos-based challenged authentication. In this example, the client <highlight><bold>72</bold></highlight> first sends an INVITE <highlight><bold>206</bold></highlight> without any Proxy-Authorization information to the proxy <highlight><bold>74</bold></highlight>. The proxy responds with a <highlight><bold>407</bold></highlight> message <highlight><bold>208</bold></highlight> with an Proxy-Authenticate header to indicate that authentication is requires. In respond to the <highlight><bold>407</bold></highlight> message, the client sends a REGISTER request <highlight><bold>210</bold></highlight> with a Proxy-Authorization header containing the required Kerberos authentication data. The Proxy returns a &ldquo;<highlight><bold>200</bold></highlight> OK&rdquo; message <highlight><bold>212</bold></highlight> with a Proxy Authentication Information header containing authentication information about the proxy itself. After authenticating the proxy based on the data in the Proxy Authentication Information header, the client sends a second INVITE <highlight><bold>214</bold></highlight> with the Proxy-Authorization header. Exemplary messages in this process are provided below.  
<table-cwu id="TABLE-US-00006">
<number>6</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<thead>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>SIP/2.0 407 Proxy Authorization Required</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Via: SIP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Call-ID: 12345600&commat;PC1.ms.com</entry>
</row>
<row>
<entry></entry>
<entry>CSeq: 1 INVITE</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authenticate: Negotiate realm&equals;&ldquo;Microsoft RTC Service</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Provider&rdquo;, targetname &equals;&ldquo; server1.doaminA.microsoft.com&rdquo;, qop &equals;</entry>
</row>
<row>
<entry></entry>
<entry>&ldquo;auth&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Contact: &lt;sip:123.45.67.89:5060&gt;</entry>
</row>
<row>
<entry></entry>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry></entry>
<entry>Content-Length: 0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>REGISTER sip:nickn&commat;microsoft.com SIP/2.0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Via: SIP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Call-ID: 123456789&commat;microsoft.com</entry>
</row>
<row>
<entry></entry>
<entry>CSeq: 1 REGISTER</entry>
</row>
<row>
<entry></entry>
<entry>Contact: &lt;sip:123.45.67.89:5060&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authorization: Negotiate &ensp;realm&equals;&ldquo;Microsoft RTC</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Service Provider&rdquo;, opaque&equals; &ldquo;ABCD1234&rdquo;, &ensp;qop &equals; &ldquo;auth&rdquo;, gssapi-</entry>
</row>
<row>
<entry></entry>
<entry>data &equals;&ldquo;34fcbaed78902QWERTY&rdquo;</entry>
</row>
<row>
<entry></entry>
<entry>targetname&equals;&ldquo;server1.domainA.microsoft.com&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry></entry>
<entry>Content-Length: 0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>SIP/2.0 200 OK</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Via: SIP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authentication-Info: Negotiate qop&equals; &ldquo;auth&rdquo;,</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="21PT" align="left"/>
<colspec colname="1" colwidth="196PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&ensp;rspauth&equals; &ldquo;ABCD87564cvx&rdquo;, &ensp;srand &equals; &ldquo;9876543210&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>targetname&equals;&ldquo;server1.doaminA.microsoft.com&rdquo; realm&equals;&ldquo;Microsoft</entry>
</row>
<row>
<entry></entry>
<entry>RTC Service Provider&rdquo;,</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Call-ID: 123456789&commat;ms.com</entry>
</row>
<row>
<entry></entry>
<entry>CSeq: 1 REGISTER</entry>
</row>
<row>
<entry></entry>
<entry>Contact: &lt;sip:123.45.67.89:5060&gt;</entry>
</row>
<row>
<entry></entry>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry></entry>
<entry>Content-Length: 0</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> Turning now to <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, as mentioned above, in a preferred embodiment the NTLM security mechanism can be optionally used for the client-proxy authentication. In this case, the client first sends an INVITE message <highlight><bold>220</bold></highlight> without authentication data, and the proxy returns a <highlight><bold>407</bold></highlight> message. The Proxy Authenticate header of this <highlight><bold>407</bold></highlight> message <highlight><bold>222</bold></highlight> indicates that NTLM should be used for authentication. The client then sends a REGISTER message <highlight><bold>224</bold></highlight> with a Proxy Authentication header containing the authentication data of the client according to the NTLM protocol. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> As mentioned above in connection with the state machine of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the authentication data sent by the client allows the proxy to authenticate the client but the security association is not completely established based on the authentication data, so the proxy sends another <highlight><bold>407</bold></highlight> challenge <highlight><bold>226</bold></highlight> to the client, again with a Proxy Authenticate header. The client then sends another REGISTER request <highlight><bold>228</bold></highlight>, with a Proxy Authorization header containing the authentication data required to complete the security association. The proxy server completes the security association based on the data in the second REGISTER request and returns a &ldquo;<highlight><bold>200</bold></highlight> OK&rdquo; message <highlight><bold>232</bold></highlight> with a Proxy Authentication Information header containing authentication data about the proxy. Based on the authentication data in the &ldquo;<highlight><bold>200</bold></highlight> OK&rdquo; message <highlight><bold>232</bold></highlight>, the client authenticates the proxy, and then sends out another INVITE message <highlight><bold>236</bold></highlight>. Exemplary messages for this process are provided below.  
<table-cwu id="TABLE-US-00007">
<number>7</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<thead>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>SIP/2.0 407 Proxy Authorization Required</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Via: SIP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Call-ID: 12345600&commat;PC1.ms.com</entry>
</row>
<row>
<entry></entry>
<entry>CSeq: 1 INVITE</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authenticate: NTLM realm&equals;&ldquo;Microsoft RTC Service</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Provider&rdquo;, targetname&equals;&ldquo;server1.domainA.microsoft.com&rdquo;,</entry>
</row>
<row>
<entry></entry>
<entry>opaque&equals;&ldquo;ABCD1234&rdquo;, qop &equals;&ldquo;auth&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Contact: &lt;sip:123.45.67.89:5060&gt;</entry>
</row>
<row>
<entry></entry>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry></entry>
<entry>Content-Length: 0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>REGISTER sip:nickn&commat;microsoft.com SIP/2.0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Via: SIP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Call-ID: 123456789&commat;microsoft.com</entry>
</row>
<row>
<entry></entry>
<entry>CSeq: 1 REGISTER</entry>
</row>
<row>
<entry></entry>
<entry>Contact: &lt;sip:123.45.67.89:5060&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authorization: NTLM realm&equals;&ldquo;Microsoft RTC Service</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Provider&rdquo;,  opaque&equals;&ldquo;ABCD1234&rdquo;, &ensp;qop &equals; &ldquo;auth&rdquo;, gssapi-data &equals;</entry>
</row>
<row>
<entry></entry>
<entry>&ldquo;34fcbaed78902QWERTY&rdquo;</entry>
</row>
<row>
<entry></entry>
<entry>targetname&equals;&ldquo;server1.domainA.microsoft.com&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry></entry>
<entry>Content-Length: 0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>SIP/2.0 407 Proxy Authorization Required</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Via: SIP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Call-ID: 12345600&commat;PC1.ms.com</entry>
</row>
<row>
<entry></entry>
<entry>CSeq: 1 INVITE</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authenticate: NTLM realm&equals;&ldquo;Microsoft RTC Service</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Provider&rdquo;, targetname&equals;&ldquo; server1.domainA.microsoft.com&rdquo;,</entry>
</row>
<row>
<entry></entry>
<entry>opaque&equals;&ldquo;ABCD1234&rdquo;, qop &equals; &ldquo;auth&rdquo;,</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>gssapi-data &equals; &ldquo;QWERTY789564NMJHKLasdcfg&rdquo;</entry>
</row>
<row>
<entry></entry>
<entry>Contact: &lt;sip:123.45.67.89:5060&gt;</entry>
</row>
<row>
<entry></entry>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry></entry>
<entry>Content-Length: 0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>REGISTER sip:nickn&commat;microsoft.com SIP/2.0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Via: SIP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Call-ID: 123456789&commat;microsoft.com</entry>
</row>
<row>
<entry></entry>
<entry>CSeq: 2 REGISTER</entry>
</row>
<row>
<entry></entry>
<entry>Contact: &lt;sip:123.45.67.89:5060&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authorization: NTLM realm&equals;&ldquo;Microsoft RTC Service</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Provider&rdquo;, gssapi-data &equals; &ldquo;qqertyuioKMNFO09876&rdquo; opaque&equals;</entry>
</row>
<row>
<entry></entry>
<entry>&ldquo;ABCD1234&rdquo;, &ensp;qop &equals; &ldquo;auth&rdquo;,</entry>
</row>
<row>
<entry></entry>
<entry>targetname&equals;&ldquo;server1.domainA.microsoft.com&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry></entry>
<entry>Content-Length: 0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>SIP/2.0 200 OK</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Via: SIP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authentication-Info: NTLM realm&equals;&ldquo;Microsoft RTC</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Service Provider&rdquo; qop&equals; &ldquo;auth&rdquo;,</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>rspauth&equals; &ldquo;ABCD87564cvx&rdquo;, &ensp;srand &equals; &ldquo;9876543210&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>targetname&equals;&ldquo;server1.domainA.microsoft.com&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Call-ID: 123456789&commat;ms.com</entry>
</row>
<row>
<entry></entry>
<entry>CSeq: 2 REGISTER</entry>
</row>
<row>
<entry></entry>
<entry>Contact: &lt;sip:123.45.67.89:5060&gt;</entry>
</row>
<row>
<entry></entry>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry></entry>
<entry>Content-Length: 0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>INVITE sip: markm&commat;proxy1.wcom.com &ensp;SIP/2.0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Via: SIP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authorization: NTLM realm&equals;&ldquo;Microsoft RTC Service</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Provider&rdquo;, crand&equals;&ldquo;913082051&rdquo;,</entry>
</row>
<row>
<entry></entry>
<entry>response&equals;&ldquo;12345ABCDEF78909BCADE56&rdquo;, opaque&equals;</entry>
</row>
<row>
<entry></entry>
<entry>&ldquo;ABCD1234&rdquo;, &ensp;qop &equals; &ldquo;auth&rdquo;, targetname&equals;</entry>
</row>
<row>
<entry></entry>
<entry>&ldquo;server1.domainA.microsoft.com&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="189PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Call-ID: 12345601&commat;PC1.ms.com</entry>
</row>
<row>
<entry></entry>
<entry>CSeq: 2 INVITE</entry>
</row>
<row>
<entry></entry>
<entry>Contact: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry></entry>
<entry>Content-Type: application/sdp</entry>
</row>
<row>
<entry></entry>
<entry>Content-Length: xxx</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows a scenario of NTLM-based pre-authentication. The message flow of this case is similar to that of the Kerberos-based pre-authentication, but with the addition of a <highlight><bold>407</bold></highlight> challenge and a REGISTER message. Specifically, the client sends a REGISTER message <highlight><bold>240</bold></highlight> containing a Proxy Authorization header that indicates that NTLM is used and contains NTLM authentication data and a request for mutual authentication. The proxy authenticates the client based on the received NTLM authentication data and returns a <highlight><bold>407</bold></highlight> challenge <highlight><bold>242</bold></highlight> with a Proxy Authenticate header. The client then sends a second REGISTER request <highlight><bold>244</bold></highlight> with a Proxy Authorization header containing the NTLM authentication data for completing the security association with the proxy. The proxy then returns a &ldquo;<highlight><bold>200</bold></highlight> OK&rdquo; message <highlight><bold>246</bold></highlight> with Proxy Authentication Information. After authenticating the proxy, the client sends a second INVITE message <highlight><bold>248</bold></highlight> to the proxy. Exemplary messages for this process are provided below.  
<table-cwu id="TABLE-US-00008">
<number>8</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<thead>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>REGISTER sip:nickn&commat;microsoft.com SIP/2.0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Via: STP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Call-ID: 123456789&commat;microsoft.com</entry>
</row>
<row>
<entry></entry>
<entry>CSeq: 1 REGISTER</entry>
</row>
<row>
<entry></entry>
<entry>Contact: &lt;sip:123.45.67.89:5060&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authorization: NTLM realm&equals;&ldquo;Microsoft RTC Service</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry>Provider&rdquo;, opaque&equals;&ldquo;ABCD1234&rdquo;, &ensp;qop &equals; &ldquo;auth&rdquo;, gssapi-data &equals;</entry>
</row>
<row>
<entry>&ldquo;34fcbaed78902QWERTY&rdquo;,</entry>
</row>
<row>
<entry>targetname&equals;&ldquo;server1.domainA.microsoft.com&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry></entry>
<entry>Content-Length: 0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry>SIP/2.0 407 Proxy Authorization Required</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Via: SIP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Call-ID: 12345600&commat;PC1.ms.com</entry>
</row>
<row>
<entry></entry>
<entry>CSeq: 1 INVITE</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authenticate: NTLM realm&equals;&ldquo;Microsoft RTC Service</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry>Provider&rdquo;, targetname &equals;&ldquo; server1.domainA.microsoft.com&rdquo;,</entry>
</row>
<row>
<entry>opaque&equals;&ldquo;ABCD1234&rdquo;, qop &equals;&ldquo;auth&rdquo;,</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>gssapi-data &equals; &ldquo;QWERTY789564NMJHKLasdcfg&rdquo;,</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry>targetname&equals;&ldquo;server1.domainA.microsoft.com&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Contact: &lt;sip:123.45.67.89:5060&gt;</entry>
</row>
<row>
<entry></entry>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry></entry>
<entry>Content-Length: 0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry>REGISTER sip:nickn&commat;microsoft.com SIP/2.0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Via: SIP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Call-ID: 123456789&commat;microsoft.com</entry>
</row>
<row>
<entry></entry>
<entry>CSeq: 2 REGISTER</entry>
</row>
<row>
<entry></entry>
<entry>Contact: &lt;sip:123.45.67.89:5060&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authorization: NTLM realm&equals;&ldquo;Microsoft RTC Service</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry>Provider&rdquo;,gssapi-data &equals; &ldquo;qqertyuioKMNFO09876&rdquo; opaque&equals;</entry>
</row>
<row>
<entry>&ldquo;ABCD1234&rdquo;, &ensp;qop &equals; &ldquo;auth&rdquo;,</entry>
</row>
<row>
<entry>targetname&equals;&ldquo;server1.domainA.microsoft.com&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry></entry>
<entry>Content-Length: 0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry>SIP/2.0 200 OK</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Via: SIP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authentication-Info: NTLM qop&equals; &ldquo;auth&rdquo;,</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="7PT" align="left"/>
<colspec colname="1" colwidth="210PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>&ensp;rspauth&equals;&ldquo;ABCD87564cvx&rdquo;, &ensp;srand&equals; &ldquo;9876543210&rdquo;,</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry>targetname&equals;&ldquo;server1.domainA.microsoft.com&rdquo;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry></entry>
<entry>Call-ID: 123456789&commat;ms.com</entry>
</row>
<row>
<entry></entry>
<entry>CSeq: 2 REGISTER</entry>
</row>
<row>
<entry></entry>
<entry>Contact: &lt;sip:123.45.67.89:5060&gt;</entry>
</row>
<row>
<entry></entry>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry></entry>
<entry>Content-Length: 0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry>INVITE sip: markm&commat;proxy1.wcom.com SIP/2.0</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Via: SIP/2.0/UDP www.xxx.yyy.zzz:5060</entry>
</row>
<row>
<entry></entry>
<entry>Proxy-Authorization: NTLM realm&equals;&ldquo;Microsoft RTC Service</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="left"/>
<tbody valign="top">
<row>
<entry>Provider&rdquo;, crand&equals;&ldquo;913082051&rdquo;,</entry>
</row>
<row>
<entry>response&equals;&ldquo;12345ABCDEF78909BCADE56&rdquo;, opaque&equals; &ldquo;ABCD1234&rdquo;,</entry>
</row>
<row>
<entry>qop &equals; &ldquo;auth&rdquo; targetname&equals;&ldquo;server1.domainA.microsoft.com&rdquo;</entry>
</row>
<row>
<entry>From: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry>To: &ldquo;Mark Mars&rdquo; &lt;sip:markm&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry>Call-ID: 12345601&commat;PC1.ms.com</entry>
</row>
<row>
<entry>CSeq: 2 INVITE</entry>
</row>
<row>
<entry>Contact: &ldquo;Nick North&rdquo; &lt;sip:nickn&commat;microsoft.com&gt;</entry>
</row>
<row>
<entry>User-Agent: Microsoft-RTC/1.0</entry>
</row>
<row>
<entry>Content-Type: application/sdp</entry>
</row>
<row>
<entry>Content-Length: xxx</entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> In view of the many possible embodiments to which the principles of this invention may be applied, it should be recognized that the embodiment described herein with respect to the drawing figures is meant to be illustrative only and should not be taken as limiting the scope of invention. For example, those of skill in the art will recognize that the elements of the illustrated embodiment shown in software may be implemented in hardware and vice versa or that the illustrated embodiment can be modified in arrangement and detail without departing from the spirit of the invention. Therefore, the invention as described herein contemplates all such embodiments as may come within the scope of the following claims and equivalents thereof. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A computer-readable medium having computer-executable instructions to perform steps by a Session Initiation Protocol (SIP) proxy to authenticate a user of a SIP client, the steps comprising: 
<claim-text>receiving a first request message from the SIP client; </claim-text>
<claim-text>determining that the first request message does not contain authentication data for authenticating the user of the SIP client; </claim-text>
<claim-text>sending a challenge message containing a code indicating that authentication is required; </claim-text>
<claim-text>receiving a second request message from the SIP client, the second request message including a proxy-authorization header containing authentication data for authenticating the user of the SIP client according to a selected authentication protocol; </claim-text>
<claim-text>authenticating the user of the SIP client using the authentication data in the proxy-authorization header of the second request message. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the first and second request messages are SIP INVITE requests. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, having further computer-executable instructions for performing the step of: after successfully authenticating the user of the SIP client, forwarding the second request message to a SIP signaling path leading to an intended callee identified in the request message. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the selected authentication protocol is the Kerberos protocol, and wherein the authentication data in the proxy-authorization header includes data representing a Kerberos server ticket for accessing the SIP proxy. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein the step of authenticating includes calling a Kerberos module to check validity of the Kerberos server ticket and extracting from the Kerberos server ticket a session key for use in communicating with the SIP client. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the authentication data in the proxy-authorization header includes data requesting mutual authentication between the SIP client and the SIP proxy, and wherein the computer-readable medium has further computer-executable instructions for performing the step of returning to the SIP client a message having a proxy-authentication information header containing authentication data of the SIP proxy for use by the SIP client to authenticate the SIP proxy. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the selected authentication protocol is the NTLM protocol. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A computer-readable medium having computer-executable instructions for a Session Initiation Protocol (SIP) client to perform steps for authenticating a user of the SIP client to a SIP proxy in connection with initiating a session through the SIP proxy, the steps comprising: 
<claim-text>sending a first request message for an intended callee to the SIP proxy; </claim-text>
<claim-text>receiving a challenge message sent by the SIP proxy in response to the first request message indicating that authentication is required; </claim-text>
<claim-text>constructing a proxy-authorization header containing authentication data for authenticating the user according to a selected authentication protocol; </claim-text>
<claim-text>sending a second request message for the intended callee, the second request message including the constructed proxy-authorization header. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the first and second request messages are SIP INVITE requests. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the selected authentication protocol is the Kerberos protocol, and wherein the authentication data in the proxy-authorization header include data representing a Kerberos server ticket for accessing the SIP proxy. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the step of constructing the proxy-authorization header includes obtaining the Kerberos server ticket from a Kerberos Key Distribution Center. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the proxy-authorization header includes data representing a request for mutual authentication between the SIP client and the SIP proxy, and wherein the computer-readable medium includes further computer-executable instructions for performing the steps of: 
<claim-text>receiving a response message from the SIP proxy in response to the second request message; </claim-text>
<claim-text>extracting from a proxy-authentication information header contained in the response message authentication data for the SIP proxy; and </claim-text>
<claim-text>authenticating the SIP proxy based on the authentication data for the SIP proxy extracted from the proxy-authentication information header. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, having further computer-executable instructions for the SIP client to perform the steps of: 
<claim-text>obtaining user authentication data for authenticating the user of the SIP client according to the selected authentication protocol; and </claim-text>
<claim-text>transmitting a REGISTER message to the SIP proxy for registration with the SIP proxy, the REGISTER message having a proxy-authorization header containing the authentication data for authenticating the user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the selected authentication protocol is the Kerberos protocol, and wherein the authentication data for the user include data representing a Kerberos server ticket obtained from a Kerberos Key Distribution Center for accessing the SIP proxy. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the selected authentication protocol is the NTLM protocol. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A method for a Session Initiation Protocol (SIP) proxy to authenticate a user of a SIP client during a session initiation operation, comprising the steps of: 
<claim-text>receiving a first request message from the SIP client; </claim-text>
<claim-text>determining that the first request message does not contain authentication data for authenticating the user of the SIP client; </claim-text>
<claim-text>sending a message containing a &ldquo;<highlight><bold>407</bold></highlight> Proxy Authentication Required&rdquo; status code to the SIP client to indicate that authentication is required; </claim-text>
<claim-text>receiving a second request message from the SIP client, the second request message including a proxy-authorization header containing user authentication data for authenticating the user of the SIP client, the user authentication data including data representing a Kerberos server ticket for accessing the SIP proxy; </claim-text>
<claim-text>authenticating the user of the SIP client using the Kerberos server ticket and extracting a session key from the Kerberos server ticket for encrypting communications with the SIP client; and </claim-text>
<claim-text>forwarding the second request message to a SIP signaling path leading to an intended callee identified in the INVITE message. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A method as in <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the first and second request messages are SIP INVITE requests. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A method as in <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the authentication data in the proxy-authorization header in the second request message include data requesting mutual authentication between the SIP client and the SIP proxy, and wherein the method further includes the step of returning to the SIP client a message having a proxy-authentication information header containing authentication data for use by the SIP client to authenticate the SIP proxy. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A method for a Session Initiation Protocol (SIP) client to authenticate a user of the SIP client to a SIP proxy in connection with initiating a session through the SIP proxy, the steps comprising: 
<claim-text>sending a first request message for an intended callee to the SIP proxy; </claim-text>
<claim-text>receiving a challenge message sent by the SIP proxy in response to the first request message indicating that authentication is required; </claim-text>
<claim-text>constructing a proxy-authorization header containing user authentication data for authenticating the user, the user authentication data including data representing a Kerberos server ticket for accessing the SIP proxy; </claim-text>
<claim-text>sending a second request message for the intended callee, the second request message including the constructed proxy-authorization header. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A method as in <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein the step of constructing the proxy-authorization header includes obtaining the Kerberos server ticket from a Kerberos Key Distribution Center. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. A method as in <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein the step of constructing the proxy-authorization header includes inserting a request in the proxy-authorization header for mutual authentication between the SIP client and the SIP proxy, and wherein the method further includes the steps of: 
<claim-text>receiving a response message from the SIP proxy in response to the second request message; </claim-text>
<claim-text>extracting from a proxy-authentication information header contained in the response message authentication data for the SIP proxy; and </claim-text>
<claim-text>authenticating the SIP proxy based on the authentication data for the SIP proxy extracted from the proxy-authentication information header. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. A method as in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the first and second request messages are SIP INVITE requests. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A method for a Session Initiation Protocol (SIP) client to perform authentication with a SIP proxy, comprising the steps of: 
<claim-text>obtaining authentication data for authenticating the SIP client according to the Kerberos authentication protocol, the authentication data including a server ticket for accessing the SIP proxy; </claim-text>
<claim-text>transmitting a REGISTER message to the SIP proxy for registration with the SIP proxy, the REGISTER message having a proxy-authorization header containing the authentication data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A method as in <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein the proxy-authorization header includes a request for mutual authentication with the SIP server, and wherein the method further includes the steps of 
<claim-text>receiving a response message from the SIP proxy in response to the REGISTER message; </claim-text>
<claim-text>extracting from a proxy-authentication information header contained in the response message authentication data for the SIP proxy; and </claim-text>
<claim-text>authenticating the SIP proxy based on the authentication data for the SIP proxy extracted from the proxy-authentication information header. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A computer-readable medium having stored thereon a data structure representing a Session Initiation Protocol (SIP) request message, comprising: 
<claim-text>a plurality of SIP headers including a proxy-authorization header having a data field containing data representing a Kerberos server ticket for accessing a SIP proxy; and </claim-text>
<claim-text>a message body. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the proxy-authorization header has a second data field having a signature generated by signing a portion of the SIP request message using a session key associated with the Kerberos server ticket. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the SIP request message is a SIP INVITE request. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. A computer-readable medium as in <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the SIP request message is a SIP REGISTER request.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>4</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005280A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005280A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005280A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005280A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005280A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005280A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005280A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005280A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030005280A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
