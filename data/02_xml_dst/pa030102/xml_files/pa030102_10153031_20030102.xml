<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005141A1-20030102-D00000.TIF SYSTEM "US20030005141A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005141A1-20030102-D00001.TIF SYSTEM "US20030005141A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005141A1-20030102-D00002.TIF SYSTEM "US20030005141A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005141A1-20030102-D00003.TIF SYSTEM "US20030005141A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005141A1-20030102-D00004.TIF SYSTEM "US20030005141A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005141A1-20030102-D00005.TIF SYSTEM "US20030005141A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005141A1-20030102-D00006.TIF SYSTEM "US20030005141A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005141A1-20030102-D00007.TIF SYSTEM "US20030005141A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030005141A1-20030102-D00008.TIF SYSTEM "US20030005141A1-20030102-D00008.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005141</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10153031</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020520</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-150890</doc-number>
</priority-application-number>
<filing-date>20010521</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/16</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>709</class>
<subclass>231000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Information-processing apparatus, information-processing method, network system, and program</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Masato</given-name>
<family-name>Horiguchi</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>William S. Frommer, Esq.</name-1>
<name-2>FROMMER LAWRENCE &amp; HAUG LLP</name-2>
<address>
<address-1>745 Fifth Avenue</address-1>
<city>New York</city>
<state>NY</state>
<postalcode>10151</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">This invention relates to an information-processing apparatus for transmitting streaming data through a network, including: an addition element for adding information used for carrying out processing on streaming data to the streaming data; a storage element for storing the streaming data and the information added to the streaming data by the addition element; and a transmission element for transmitting the streaming data which is stored by the storage element and which includes the information. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> In general, the present invention relates to an information-processing apparatus, an information-processing method, a network system, and a program. More specifically, the present invention relates to an information-processing apparatus, an information-processing method, a network system, and a program, which can exchange streaming data without regard to the type of the compression and decompression technique of the streaming data by addition of a program to be executed for carrying out processing on the streaming data to the streaming data and transmission of the program along with the streaming data. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> There are many servers for distributing streaming data such as audio data and moving-picture data, which can be displayed in a real-time manner while the data is being received through the Internet. Picture or audio information is input through a video camera and a microphone and converted into data by a video-capture card and/or a sound card before being compressed by using an encoder. The compressed data is kept by a distribution server as a file of streaming data to be transmitted to a client as requested by the client on an on-demand basis. In addition to such an on-demand system, there is also provided a system in which compressed data is distributed to a plurality of clients at the same time. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> In either system, while receiving distributed streaming data, a client uses a decoder conforming to the technique of compressing the received streaming data to decompress the data before outputting the data to a display unit and/or a speaker. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> However, there are a number of data compression and decompression techniques such as an MPEG (Moving Picture (coding) Expert Group) 2 or 4, MP3 (MPEG Audio Layer-3) and ATRAC (Adaptive Transform Acoustic Coding (trademark)). For this reason, the system described above has a problem that the client must have many decoders if the client receives various kinds of streaming data compressed by using a variety of compression techniques. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> In addition, there is also raised a problem that the distribution server must adopt several different compression techniques for different kinds of streaming data in order to keep up with demands raised by a number of clients. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Moreover, a client can be a portable terminal such as a PDA (Personal Digital Assistant). In this case, since a space for a storage device and the storage capacity thereof are small in the portable terminal, it is difficult for the client to have a plurality of decoders. Thus, there is raised a problem that the portable terminal can be used only for handling streaming data compressed by adoption of a certain compression and decompression technique. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> It is thus an object of the present invention addressing the problems described above to provide a capability of exchanging streaming data without regard to the type of the compression and decompression technique of the streaming data by addition of a program to be executed for carrying out processing on the streaming data to the streaming data and by transmission of the program along the streaming data. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> According to a first aspect of the present invention, there is provided an information-processing apparatus for transmitting streaming data through a network, including: an addition element for adding information used for carrying out processing on streaming data to the streaming data; a storage element for storing the streaming data and the information added to the streaming data by the addition element; and a transmission element for transmitting the streaming data which is stored by the storage element and which includes the information. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> According to a second aspect of the present invention, there is provided an information-processing method adopted by an information-processing apparatus for transmitting streaming data through a network, including: an addition step of adding information used for carrying out processing on streaming data to the streaming data; a storage step of storing the streaming data and the information added to the streaming data in the addition step; and a transmission step of transmitting the streaming data which is stored in the storage step and which includes the information. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> According to a third aspect of the present invention, there is provided a program to be executed by a computer for controlling an information-processing apparatus for transmitting streaming data through a network, the program including: an addition step of adding information used for carrying out processing on streaming data to the streaming data; a storage step of storing the streaming data and the information added to the streaming data in the addition step; and a transmission step of transmitting the streaming data which is stored in the storage step and which includes the information. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> According to a fourth aspect of the present invention, there is provided an information-processing apparatus for receiving streaming data through a network, including: a reception element for receiving streaming data to which information used in carrying out processing on the streaming data is added; a processing element for carrying out processing on the streaming data received by the reception element in accordance with the information added to the streaming data; and an output element for outputting a result of the processing carried out on the streaming data by the processing element. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> According to a fifth aspect of the present invention, there is provided an information-processing method adopted by an information-processing apparatus for receiving streaming data through a network, including: a reception step of receiving streaming data to which information used in carrying out processing on the streaming data is added; a processing step of carrying out processing on the streaming data received in the reception step in accordance with the information added to the streaming data; and an output step of outputting a result of the processing carried out on the streaming data in the processing step. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> According to a sixth aspect of the present invention, there is provided a program to be executed by a computer for controlling an information-processing apparatus for receiving streaming data through a network, the program including: a reception step of receiving streaming data to which information used in carrying out processing on the streaming data is added; a processing step of carrying out processing on the streaming data received in the reception step in accordance with the information added to the streaming data; and an output step of outputting a result of the processing carried out on the streaming data in the processing step. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> According to a seventh aspect of the present invention, there is provided a network system including a first information-processing apparatus connected to a network and used for transmitting streaming data and a second information-processing apparatus connected to the network and used for receiving the streaming data, wherein the first information-processing apparatus includes: an addition element for adding information used for carrying out processing on streaming data to the streaming data; a storage element for storing the streaming data and the information added to the streaming data by the addition element; and a transmission element for transmitting the streaming data, which is stored by the storage element and includes the information, and wherein the second information-processing apparatus includes: a reception element for receiving streaming data to which information used in carrying out processing on the streaming data is added; a processing element for carrying out processing on the streaming data received by the reception element in accordance with the information added to the streaming data; and an output element for outputting a result of the processing carried out on the streaming data by the processing element.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The above and other objects, features and advantages of the present invention will be apparent from the following detailed description of the preferred embodiment of the invention in conjunction with the accompanying drawings, in which: </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a diagram showing a typical configuration of a network system to which the present invention is applied; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram showing the configuration of a distribution server shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram showing the configuration of a PDA shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flowchart representing distribution processing carried out by the distribution server to transmit streaming data to the PDA shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a diagram showing a typical configuration of an RTP packet; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flowchart representing streaming-data reception processing carried out by the PDA shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is an explanatory diagram used for describing processing carried out by a CPU shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> on decoder data using a RAM to acquire a decoder; </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is an explanatory diagram used for describing processing carried out by the CPU shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> on decoder data using the RAM to create a decoder; </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is an explanatory diagram used for describing processing carried out by the CPU shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> on decoder data using the RAM to decompress MPEG4 data by using a decoder; and </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is an explanatory diagram used for describing processing to decode MPEG4 data by execution of a decoder program written in Java (registered trademark).</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT </heading>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a diagram showing a typical configuration of a network system to which the present invention is applied. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> A distribution server <highlight><bold>1</bold></highlight> for distributing streaming data is connected to the Internet <highlight><bold>2</bold></highlight> A PDA (Personal Digital Assistant) <highlight><bold>3</bold></highlight> receiving streaming data distributed by way of the Internet <highlight><bold>2</bold></highlight> is also connected to the Internet <highlight><bold>2</bold></highlight>. While the figure shows only one distribution server <highlight><bold>1</bold></highlight> and one PDA <highlight><bold>3</bold></highlight>, in actuality, a plurality of such servers and a plurality of PDAs may be connected to the Internet <highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram showing the configuration of the distribution server <highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> A CPU (Central Processing Unit) <highlight><bold>11</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> carries out various kinds of processing by execution of programs stored in advance in a ROM (Read-Only Memory) <highlight><bold>12</bold></highlight> or programs loaded from a storage unit <highlight><bold>23</bold></highlight> into a RAM (Random-Access Memory) <highlight><bold>13</bold></highlight>. The RAM <highlight><bold>13</bold></highlight> is also appropriately used for storing, among others, data required in carrying out the various kinds of processing. The CPU <highlight><bold>11</bold></highlight>, the ROM <highlight><bold>12</bold></highlight> and the RAM <highlight><bold>13</bold></highlight> are connected to each other by a bus <highlight><bold>14</bold></highlight>. An input/output interface <highlight><bold>20</bold></highlight> is also connected to the bus <highlight><bold>14</bold></highlight>. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The input/output interface <highlight><bold>20</bold></highlight> is connected to an input unit <highlight><bold>21</bold></highlight>, an output unit <highlight><bold>22</bold></highlight>, the storage unit <highlight><bold>23</bold></highlight> and a communication unit <highlight><bold>24</bold></highlight>. The input unit <highlight><bold>21</bold></highlight> includes a keyboard and a mouse. The output unit <highlight><bold>22</bold></highlight> includes a display unit such as a CRT (Cathode Ray Tube) or an LCD (Liquid-Crystal Display) and a speaker. The storage unit <highlight><bold>23</bold></highlight> includes a hard disc or the like. The communication unit <highlight><bold>24</bold></highlight> includes a modem and a terminal adapter. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The storage unit <highlight><bold>23</bold></highlight> is used for storing streaming data for distribution. The streaming data for distribution includes MPEG4 data (Moving Picture (coding) Expert Group 4 data) obtained as a result of compression of moving-picture data and decoder data, which is a program functioning as a decoder for decompressing (decoding) the MPEG4 data. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The communication unit <highlight><bold>24</bold></highlight> carries out processing of communication through the Internet <highlight><bold>2</bold></highlight>. The communication unit <highlight><bold>24</bold></highlight> distributes the streaming data stored in the storage unit <highlight><bold>23</bold></highlight> for distribution by using an RTP (Real-Time Transport Protocol)/RTSP (Real-Time Streaming Protocol) protocol. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> If necessary, the input/output interface <highlight><bold>20</bold></highlight> is also connected to a driver <highlight><bold>30</bold></highlight>. On the driver <highlight><bold>30</bold></highlight>, there is mounted a magnetic disc <highlight><bold>41</bold></highlight>, an optical disc <highlight><bold>42</bold></highlight>, a magneto-optical disc <highlight><bold>43</bold></highlight> or a semiconductor memory <highlight><bold>44</bold></highlight>. A computer program read out from the magnetic disc <highlight><bold>41</bold></highlight>, the optical disc <highlight><bold>42</bold></highlight>, the magneto-optical disc <highlight><bold>43</bold></highlight> or the semiconductor memory <highlight><bold>44</bold></highlight> is installed in the storage unit <highlight><bold>23</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram showing the configuration of the PDA <highlight><bold>3</bold></highlight>. As shown in the figure, the PDA <highlight><bold>3</bold></highlight> includes components ranging from a CPU <highlight><bold>111</bold></highlight> to a semiconductor memory <highlight><bold>144</bold></highlight>, which correspond to respectively the CPU <highlight><bold>11</bold></highlight> to the semiconductor memory <highlight><bold>44</bold></highlight> in the distribution server <highlight><bold>1</bold></highlight>. Since the basic configuration of the PDA <highlight><bold>3</bold></highlight> is the same as the distribution server <highlight><bold>1</bold></highlight>, its explanation is not repeated. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> At a request made by the PDA <highlight><bold>3</bold></highlight>, the distribution server <highlight><bold>1</bold></highlight> transmits streaming data to the PDA <highlight><bold>3</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flowchart representing distribution processing carried out by the distribution server <highlight><bold>1</bold></highlight> to transmit streaming data to the PDA <highlight><bold>3</bold></highlight>. This distribution processing is explained by referring to a flowchart shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> as follows. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> As shown in the figure, the flowchart begins with a step S<highlight><bold>1</bold></highlight> at which the CPU <highlight><bold>11</bold></highlight> employed in the distribution server <highlight><bold>1</bold></highlight> controls the communication unit <highlight><bold>24</bold></highlight>, forming a judgment as to whether or not a request for transmission of streaming data has been received from the PDA <highlight><bold>3</bold></highlight>. If the outcome of the judgment indicates that such a request has not been received, the judgment is formed repeatedly till the outcome of the judgment indicates that a request has been received. If the CPU <highlight><bold>11</bold></highlight> determines that a request for transmission of streaming data has been received from the PDA <highlight><bold>3</bold></highlight>, the flow of the distribution processing goes on to a step S<highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> At the step S<highlight><bold>2</bold></highlight>, the CPU <highlight><bold>11</bold></highlight> transmits decoder data of the streaming data specified in the transmission request received from the PDA <highlight><bold>3</bold></highlight> to the PDA <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a diagram showing a typical configuration of an RTP packet containing decoder data or streaming data to be transmitted. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> As shown in the figure, an RTP packet includes a fixed-length header <highlight><bold>200</bold></highlight> and a data portion <highlight><bold>220</bold></highlight> containing streaming data to be transmitted. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> The header <highlight><bold>200</bold></highlight> of an RTP packet includes version bits <highlight><bold>201</bold></highlight>, a padding bit <highlight><bold>202</bold></highlight>, an extension bit <highlight><bold>203</bold></highlight>, a CSRC (contributing source) <highlight><bold>210</bold></highlight> which indicates IDs (identifiers) of sender parties, a CSRC count <highlight><bold>204</bold></highlight>, a marker <highlight><bold>205</bold></highlight>, a payload type <highlight><bold>206</bold></highlight>, a sequence number <highlight><bold>207</bold></highlight>, a time stamp <highlight><bold>208</bold></highlight>, and a SSRC (synchronization source) <highlight><bold>209</bold></highlight>. The version bits <highlight><bold>201</bold></highlight> show a version of the RTP. The padding bit <highlight><bold>202</bold></highlight> set at 1 indicates that at least a padding octet is inserted into the end of the packet. The extension bit <highlight><bold>203</bold></highlight> indicates the existence of an extension. The CSRC count <highlight><bold>204</bold></highlight> is the number of IDs of the sender parties cataloged in the CSRC <highlight><bold>210</bold></highlight>. The payload type <highlight><bold>206</bold></highlight> is the type of data to be transmitted. The sequence number <highlight><bold>207</bold></highlight> is used for detecting a lost packet for a case in which data is recovered in accordance with an order. The time stamp <highlight><bold>208</bold></highlight> is used for recording a time. The SSRC <highlight><bold>209</bold></highlight> is the ID of a sender. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> On the other hand, the data portion <highlight><bold>220</bold></highlight> includes a start packet bit <highlight><bold>221</bold></highlight>, an end packet bit <highlight><bold>222</bold></highlight>, a data length <highlight><bold>223</bold></highlight> and streaming data <highlight><bold>224</bold></highlight>. When set, the start packet bit <highlight><bold>221</bold></highlight> indicates that this packet is the first packet of data to be transmitted. By the same token, when set, the end packet bit <highlight><bold>222</bold></highlight> indicates that this packet is the last packet of data to be transmitted. The data length <highlight><bold>223</bold></highlight> indicates the length of data contained in this packet. The streaming data <highlight><bold>224</bold></highlight> is data to be transmitted. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The CPU <highlight><bold>11</bold></highlight> employed in the distribution server <highlight><bold>1</bold></highlight> transmits decoder data to the PDA <highlight><bold>3</bold></highlight> as described above in the form of packets shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. In this case, the CPU <highlight><bold>11</bold></highlight> sets PLUG_IN in the payload type <highlight><bold>206</bold></highlight> and fills the streaming data <highlight><bold>224</bold></highlight> with the decoder data. As the transmission of the decoder data is completed, the flow of the distribution processing goes on to a step S<highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> At the step S<highlight><bold>3</bold></highlight>, the CPU <highlight><bold>11</bold></highlight> transmits MPEG4 data also in the form of packets shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> to the PDA <highlight><bold>3</bold></highlight>. The MPEG4 data is obtained as a result of compression of the streaming data desired by the PDA <highlight><bold>3</bold></highlight> in the request for transmission. In this case, the CPU <highlight><bold>11</bold></highlight> sets MPEG4 in the payload type <highlight><bold>206</bold></highlight> and fills the streaming data <highlight><bold>224</bold></highlight> with the streaming data. As the transmission of the streaming data is completed, the distribution processing is ended. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The transmitted RTP packets are received by the PDA <highlight><bold>3</bold></highlight>, which made the request for transmission of data. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flowchart representing reception processing carried out by the PDA <highlight><bold>3</bold></highlight> to receive streaming data from the distribution server <highlight><bold>1</bold></highlight>. This reception processing is explained by referring to the flowchart shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> as follows. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> As shown in the figure, the flowchart begins with a step S<highlight><bold>21</bold></highlight> at which the CPU <highlight><bold>111</bold></highlight> employed in the PDA <highlight><bold>3</bold></highlight> controls the communication unit <highlight><bold>124</bold></highlight> to transmit a request for transmission of streaming data to the distribution server <highlight><bold>1</bold></highlight> by way of the Internet <highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Then, at the next step S<highlight><bold>22</bold></highlight>, the CPU <highlight><bold>111</bold></highlight> controls the communication unit <highlight><bold>124</bold></highlight> to receive the RTP packet from the distribution server <highlight><bold>1</bold></highlight>. The CPU <highlight><bold>111</bold></highlight> then refers to the payload type <highlight><bold>206</bold></highlight> of the header <highlight><bold>200</bold></highlight> of the received RTP packet. The payload type <highlight><bold>206</bold></highlight> is found out to be PLUG IN, indicating that the RTP packet contains decoder data. Thus, the CPU <highlight><bold>111</bold></highlight> acquires the decoder data from the RTP packet. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is an explanatory diagram used for describing processing of the decoder data using the RAM <highlight><bold>113</bold></highlight>. The CPU <highlight><bold>111</bold></highlight> stores the acquired decoder data in a playback area <highlight><bold>301</bold></highlight> of the RAM <highlight><bold>113</bold></highlight>. The decoder data is accumulated and assembled in the playback area <highlight><bold>301</bold></highlight>. The CPU <highlight><bold>111</bold></highlight> carries out the processing to acquire data, beginning with a first packet having a set start packet bit <highlight><bold>221</bold></highlight> and ending with a last packet having a set end packet bit <highlight><bold>222</bold></highlight>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> As the CPU <highlight><bold>111</bold></highlight> acquires the last packet, the flow of the reception processing goes on to a step S<highlight><bold>23</bold></highlight> at which a decoder <highlight><bold>302</bold></highlight> is created in the RAM <highlight><bold>113</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is an explanatory diagram used for describing processing of data using the RAM <highlight><bold>113</bold></highlight>. The CPU <highlight><bold>111</bold></highlight> forms the decoder <highlight><bold>302</bold></highlight> assembled in the playback area <highlight><bold>301</bold></highlight> in another area of the RAM <highlight><bold>113</bold></highlight>. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> When the CPU <highlight><bold>111</bold></highlight> completes the creation of the decoder <highlight><bold>302</bold></highlight>, the flow of the reception processing goes on to a step S<highlight><bold>24</bold></highlight> at which the CPU <highlight><bold>111</bold></highlight> controls the communication unit <highlight><bold>124</bold></highlight> to start processing to receive other RTP packets containing MPEG4 data from the distribution server <highlight><bold>1</bold></highlight>. The CPU <highlight><bold>111</bold></highlight> then refers to the payload type <highlight><bold>206</bold></highlight> of the header <highlight><bold>200</bold></highlight> of a received RTP packet. The payload type <highlight><bold>206</bold></highlight> is found out to be MPEG4, indicating that the RTP packet contains streaming data. Thus, the CPU <highlight><bold>111</bold></highlight> acquires the streaming data from the RTP packet. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> After the CPU <highlight><bold>111</bold></highlight> starts the acquisition of MPEG4 data, the flow of the reception processing goes on to a step S<highlight><bold>25</bold></highlight> to form a judgment as to whether or not the acquisition of the MPEG4 data, that is, the streaming data, has been completed. If the outcome of the judgment indicates that the acquisition of the MPEG4 data has not been completed as evidenced by the fact that a last packet having a set end packet bit <highlight><bold>222</bold></highlight> has not been received, the reception processing goes on to a step S<highlight><bold>26</bold></highlight> at which the CPU <highlight><bold>111</bold></highlight> decompresses the acquired MPEG4 data by using the decoder <highlight><bold>302</bold></highlight>, converting the data into picture data. As the processing to convert the MPEG4 data into picture data is completed, the flow of the reception processing goes on to a step S<highlight><bold>27</bold></highlight> at which the picture data obtained as a result of the conversion processing is supplied to the output unit <highlight><bold>122</bold></highlight> to be displayed on the display unit. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> Then, at the next step S<highlight><bold>28</bold></highlight>, the CPU <highlight><bold>111</bold></highlight> receives a new packet and acquires MPEG4 data from the new packet. After the CPU <highlight><bold>111</bold></highlight> acquires the MPEG data, the flow of the reception processing goes back to the step S<highlight><bold>25</bold></highlight> to repeat processing of the step and the subsequent steps. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is an explanatory diagram used for describing processing of the MPEG4 data using the RAM <highlight><bold>113</bold></highlight>. The CPU <highlight><bold>111</bold></highlight> supplies the acquired MPEG4 data to the playback area <highlight><bold>301</bold></highlight> of the RAM <highlight><bold>113</bold></highlight> through the decoder <highlight><bold>302</bold></highlight>, which decompresses the MPEG4 data. Then, the CPU <highlight><bold>111</bold></highlight> supplies picture data obtained as a result of decompression of the MPEG4 data to the output unit <highlight><bold>122</bold></highlight> by way of the playback area <highlight><bold>301</bold></highlight> to be displayed on the display unit. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> As the outcome of the judgment formed at the step S<highlight><bold>25</bold></highlight> indicates that the acquisition of the MPEG4 data is completed as evidenced by the fact that a last packet having a set end packet bit <highlight><bold>222</bold></highlight> has been received, the reception processing goes on to a step S<highlight><bold>29</bold></highlight> at which the CPU <highlight><bold>111</bold></highlight> deletes the decoder <highlight><bold>302</bold></highlight> created in the RAM <highlight><bold>113</bold></highlight> from the RAM <highlight><bold>113</bold></highlight>. As the deletion is completed, the CPU <highlight><bold>111</bold></highlight> ends the reception processing. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> By carrying out the processing described above, streaming data can be exchanged by any apparatus without regard to the type of the compression and decompression technique. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> In addition, by execution of a decoder program written in Java (registered trademark), streaming data can be created without regard to the type of the CPU on the reception side. Thus, the distribution server <highlight><bold>1</bold></highlight> can further reduce the amount of streaming data stored in the storage unit <highlight><bold>23</bold></highlight>. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> In this case, a VM (Virtual Machine) <highlight><bold>311</bold></highlight> for Java (registered trademark) is required in order to execute the decoder. <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is an explanatory diagram used for describing processing to decode MPEG4 data by execution of a decoder program written in Java (registered trademark). As shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the decoder <highlight><bold>312</bold></highlight> created in the RAM <highlight><bold>113</bold></highlight> exchanges data with the playback area <highlight><bold>301</bold></highlight> through the VM <highlight><bold>311</bold></highlight> for Java (registered trademark) in order to carry out processing to decode MPEG4 data. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> In the embodiment described above, streaming data once kept in the distribution server <highlight><bold>1</bold></highlight> is transmitted to a client at a request made by the client on an on-demand basis. However, the scope of the present invention is not limited to this embodiment. For example, streaming data can also be transmitted to a client in a real-time manner or distributed to a plurality of clients at the same time. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> In addition, while the storage unit <highlight><bold>23</bold></highlight> employed in the distribution server <highlight><bold>1</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is used for storing streaming data consisting of MPEG4 data obtained as a result of compression of picture data and decoder data used as a decoder for decompressing the MPEG4 data, the scope of the present invention is not limited to this scheme. For example, the MPEG4 data and the decoder can be kept in separate files and, when the MPEG4 data and the decoder are transmitted, they are combined. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> In the above description, PLUG_IN or MPEG4 is set in the payload type <highlight><bold>206</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. In actuality, however, predetermined numbers are set in place of PLUG_IN or MPEG4. That is to say, PLUG_IN or MPEG4 do not have to be set in the payload type <highlight><bold>206</bold></highlight> for decoder data or MPEG4 data respectively. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> In the embodiment described above, distributed data is MPEG4 moving-picture data. However, the distributed data is not limited to MPEG4 moving-picture data. For example, distributed data can also be MPEG2 moving-picture data, MP3 (MPEG Audio Layer-3) musical data or ATRAC (Adaptive Transform Acoustic Coding, trademark) musical data. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> In addition, while distributed streaming data is explained in this specification as data consisting of MPEG4 data obtained as a result of compression of picture data and decoder data used as a decoder for decompressing the MPEG4 data, the scope of the present invention is not limited to this scheme. For example, the streaming data may also include encrypted MPEG4 data and a descrambler for descrambling the encrypted MPEG4 data. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> Furthermore, the distribution server <highlight><bold>1</bold></highlight> may also include a program in the streaming data. The program is to be executed to carry out degradation processing on the streaming data on the basis of copy information specified at a copy time of the streaming data. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Moreover, when a relay station or the like is used in the distribution of streaming data, the relay station transforms the streaming data into a bit rate proper for the network, through which the streaming data is to be distributed. In this case, in order to make the streaming data distributable, the distribution server may include an encoder for carrying out an encoding process proper for the streaming data or a transcoder for carrying out transcoding in the distributed streaming data. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> In addition, when a relay station or the like is used in the distribution of streaming data, in order to make the relay station capable of encrypting and distributing the streaming data, the distribution server may include a scrambler for scrambling or a descrambler for descrambling in the distributed streaming data. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> Furthermore, the client to which the present invention is applied is not limited to a PDA, but can also be a mobile phone, a game terminal or a personal computer. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> If the sequential processing is implemented by software, programs composing the software are installed from a network or a recording medium in a computer including embedded dedicated hardware or another computer such as a general-purpose personal computer capable of carrying out a variety of functions by execution of a variety of programs installed in the personal computer. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> As show in <cross-reference target="DRAWINGS">FIGS. 2 and 3</cross-reference>, the recording medium for recording programs to be installed in the computer including embedded dedicated hardware or the general-purpose personal computer can be a package medium such as the magnetic disc <highlight><bold>41</bold></highlight> or <highlight><bold>141</bold></highlight> including a floppy disc, the optical disc <highlight><bold>42</bold></highlight> or <highlight><bold>142</bold></highlight> including a CD-ROM (Compact-Disc Read-Only Memory) and a DVD (Digital Versatile Disc), the magneto-optical disc <highlight><bold>43</bold></highlight> or <highlight><bold>143</bold></highlight> including an MD (MiniDisc) or the semiconductor memory <highlight><bold>44</bold></highlight> or <highlight><bold>144</bold></highlight>. Provided separately from the main unit of the distribution server <highlight><bold>1</bold></highlight> or the PDA <highlight><bold>3</bold></highlight>, the package medium is distributed to users to present the programs recorded therein to the users. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> Instead of installing the programs in the computer including embedded dedicated hardware or the general-purpose personal computer from a package medium or a network, the programs can also be stored in advance the ROM <highlight><bold>12</bold></highlight> or <highlight><bold>112</bold></highlight> embedded along with the CPU <highlight><bold>11</bold></highlight> or the CPU <highlight><bold>111</bold></highlight> in the distribution server <highlight><bold>1</bold></highlight> or the PDA <highlight><bold>3</bold></highlight> respectively. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> It should be noted that, in this specification, steps composing a program recorded in a recording medium include mainly pieces of processing to be executed sequentially in accordance with a predetermined order along the time axis. However, the steps are not necessarily the pieces of processing to be executed sequentially. Instead, the steps may include pieces of processing to be executed concurrently or individually. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> In addition, the technical term &lsquo;network system&rsquo; used in this specification means the entire system including a plurality of apparatus. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> In accordance with the present invention, a first information-processing apparatus, first information-processing method, and first program, streaming data is stored along with information (decoder) added to the streaming data to be used in processing carried out on the streaming data, and the streaming data including the information is transmitted. As a result, the distributed streaming data can be regarded as data of one type. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> In accordance with the present invention, a second information-processing apparatus, second information-processing method, and second program, streaming data is received along with information (decoder) added to the streaming data to be used in processing carried out on the streaming data, the streaming data is processed in accordance with the information and a result of the processing carried out on the streaming data is output. As a result, it is not necessary to provide a decoder in advance. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> In the network system provided by the present invention, the first information-processing apparatus transmits streaming data including information (decoder) added to the streaming data to be used in processing carried out on the streaming data, and the second information-processing apparatus receives the streaming data along with information (decoder), carrying out processing on the streaming data in accordance with the information before outputting a result of the processing carried out on the streaming data. As a result, streaming data can be exchanged without regard to the type of the technique for compressing and decompressing the streaming data. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. An information-processing apparatus for transmitting streaming data through a network, comprising: 
<claim-text>addition means for adding information used for carrying out processing on streaming data to said streaming data; </claim-text>
<claim-text>storage means for storing said streaming data and said information added to said streaming data by said addition means; and </claim-text>
<claim-text>transmission means for transmitting said streaming data which is stored by said storage means and which includes said information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. An information-processing apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said information includes a decoder for decoding said streaming data. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. An information-processing apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said information includes an encoder for encoding said streaming data. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. An information-processing apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said information includes a transcoder for transcoding said streaming data. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. An information-processing apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said information includes a scrambler for scrambling said streaming data. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. An information-processing apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said information includes a descrambler for descrambling said streaming data. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. An information-processing method adopted by an information-processing apparatus for transmitting streaming data through a network, comprising: 
<claim-text>an addition step of adding information used for carrying out processing on streaming data to said streaming data; </claim-text>
<claim-text>a storage step of storing said streaming data and said information added to said streaming data in said addition step; and </claim-text>
<claim-text>a transmission step of transmitting said streaming data which is stored in said storage step and which includes said information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A program to be executed by a computer for controlling an information-processing apparatus for transmitting streaming data through a network, said program comprising: 
<claim-text>an addition step of adding information used for carrying out processing on streaming data to said streaming data; </claim-text>
<claim-text>a storage step of storing said streaming data and said information added to said streaming data in said addition step; and </claim-text>
<claim-text>a transmission step of transmitting said streaming data which is stored in said storage step and which includes said information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. An information-processing apparatus for receiving streaming data through a network, comprising: 
<claim-text>reception means for receiving streaming data to which information used in carrying out processing on said streaming data is added; </claim-text>
<claim-text>processing means for carrying out processing on said streaming data received by said reception means in accordance with said information added to said streaming data; and </claim-text>
<claim-text>output means for outputting a result of said processing carried out on said streaming data by said processing means. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. An information-processing method adopted by an information-processing apparatus for receiving streaming data through a network, comprising: 
<claim-text>a reception step of receiving streaming data to which information used in carrying out processing on said streaming data is added; </claim-text>
<claim-text>a processing step of carrying out processing on said streaming data received in said reception step in accordance with said information added to said streaming data; and </claim-text>
<claim-text>an output step of outputting a result of said processing carried out on said streaming data in said processing step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A program to be executed by a computer for controlling an information-processing apparatus for receiving streaming data through a network, said program comprising: 
<claim-text>a reception step of receiving streaming data to which information used in carrying out processing on said streaming data is added; </claim-text>
<claim-text>a processing step of carrying out processing on said streaming data received in said reception step in accordance with said information added to said streaming data; and </claim-text>
<claim-text>an output step of outputting a result of said processing carried out on said streaming data in said processing step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A network system comprising a first information-processing apparatus connected to a network and used for transmitting streaming data and a second information-processing apparatus connected to said network and used for receiving said streaming data, 
<claim-text>wherein said first information-processing apparatus includes: 
<claim-text>addition means for adding information used for carrying out processing on streaming data to said streaming data; </claim-text>
<claim-text>storage means for storing said streaming data and said information added to said streaming data by said addition means; and </claim-text>
<claim-text>transmission means for transmitting said streaming data, which is stored by said storage means and includes said information, and </claim-text>
</claim-text>
<claim-text>wherein said second information-processing apparatus includes: 
<claim-text>reception means for receiving streaming data to which information used in carrying out processing on said streaming data is added; </claim-text>
<claim-text>processing means for carrying out processing on said streaming data received by said reception means in accordance with said information added to said streaming data; and </claim-text>
<claim-text>output means for outputting a result of said processing carried out on said streaming data by said processing means.</claim-text>
</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>6</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005141A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005141A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005141A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005141A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005141A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005141A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005141A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005141A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030005141A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
