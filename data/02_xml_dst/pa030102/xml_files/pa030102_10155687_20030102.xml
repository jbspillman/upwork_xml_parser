<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030001013A1-20030102-D00000.TIF SYSTEM "US20030001013A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030001013A1-20030102-D00001.TIF SYSTEM "US20030001013A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030001013A1-20030102-D00002.TIF SYSTEM "US20030001013A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030001013A1-20030102-D00003.TIF SYSTEM "US20030001013A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030001013A1-20030102-D00004.TIF SYSTEM "US20030001013A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030001013A1-20030102-D00005.TIF SYSTEM "US20030001013A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030001013A1-20030102-D00006.TIF SYSTEM "US20030001013A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030001013A1-20030102-D00007.TIF SYSTEM "US20030001013A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030001013A1-20030102-D00008.TIF SYSTEM "US20030001013A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030001013A1-20030102-D00009.TIF SYSTEM "US20030001013A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030001013A1-20030102-D00010.TIF SYSTEM "US20030001013A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030001013A1-20030102-D00011.TIF SYSTEM "US20030001013A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030001013A1-20030102-D00012.TIF SYSTEM "US20030001013A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030001013A1-20030102-D00013.TIF SYSTEM "US20030001013A1-20030102-D00013.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030001013</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10155687</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020523</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-195222</doc-number>
</priority-application-number>
<filing-date>20010627</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2002-120799</doc-number>
</priority-application-number>
<filing-date>20020423</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06K007/10</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>G06K007/14</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>235</class>
<subclass>454000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Information recording medium, information processing method, information processing apparatus, and program</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Yoshikazu</given-name>
<family-name>Akamine</family-name>
</name>
<residence>
<residence-non-us>
<city>Kitatsuru-gun</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>Olympus Optical Co., Ltd.</organization-name>
<address>
<city>Tokyo</city>
<country>
<country-code>JP</country-code>
</country>
</address>
<assignee-type>03</assignee-type>
</assignee>
<correspondence-address>
<name-1>FRISHAUF, HOLTZ, GOODMAN &amp; CHICK, PC</name-1>
<name-2></name-2>
<address>
<address-1>767 THIRD AVENUE</address-1>
<address-2>25TH FLOOR</address-2>
<city>NEW YORK</city>
<state>NY</state>
<postalcode>10017-2023</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A script file containing contents for controlling files, folders, applications, devices, and other objects is recorded as an optically readable coded image on an information recording medium together with the heading of each genre, a symbolic illustration representing each control content, and an accurate explanation of the control content by texts. When the operator reads a desired coded image by an information processing apparatus, a decoder decodes the script file of the coded image. A scripting host application loads and executes the script file. The script file controls various application programs such as a Web browser and mailer, files, folders, devices, and other objects. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">CROSS-REFERENCE TO RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is based upon and claims the benefit of priority from the prior Japanese Patent Applications No. 2001-195222, filed Jun. 27, 2001; and No. 2002-120799, filed Apr. 23, 2002, the entire contents of both of which are incorporated herein by reference. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The present invention relates to an information recording medium having a portion which bears a coded image such as an optically readable dot pattern obtained by encoding digital information. The present invention also relates to an information processing method of reading the coded image from the information recording medium and processing the image, an information processing apparatus for reading the coded image from the information recording medium and processing the image, and a program which causes a program-compatible device such as a computer to operate as the information processing apparatus. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> 2. Description of the Related Art </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Various image recording methods and image recording apparatuses have conventionally been proposed. According to these apparatuses and methods, visually recognizable images directly readable by a human eye, such as texts (or characters), symbols, figures, patterns, photographic images, and computer graphic images, and optically readable speech-coded images including one- or two-dimensional barcodes obtained by performing encoding processing including compression, modulation, and error correction coding for audio data are printed on a sheet-like printing medium such as a paper sheet or film. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Such methods and apparatuses are disclosed in, e.g., Jpn. Pat. Appln. KOKAI Publication No. 60-244146, U.S. Pat. No. 5,896,403, U.S. Pat. No. Re. 36,589, and U.S. Pat. No. 6,134,695. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> According to these references, speech is printed on a sheet surface. Visually recognizable images and speech can be integrated on the sheet surface. The speech-coded image is read by a dedicated reader. The user can easily listen to the speech on the spot while seeing the visually recognizable image. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Of these references, U.S. Pat No. 5,896,403, U.S. Pat. No. Re. 36,589, and U.S. Pat. No. 6,134,695 disclose methods of encoding data such as speech into a dot code serving as a speech-coded image which can be optically read with ease by manual scanning, and printing the dot code together with a visually recognizable image on a sheet-like printing medium such as a paper sheet. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows the physical format structure of such a dot code. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> A dot code <highlight><bold>1</bold></highlight> is constituted by two-dimensionally arraying a plurality of blocks <highlight><bold>2</bold></highlight> adjacent to each other. Each block <highlight><bold>2</bold></highlight> is formed from a data dot pattern <highlight><bold>3</bold></highlight>, markers <highlight><bold>4</bold></highlight>, and a block address pattern <highlight><bold>5</bold></highlight>. The data dot pattern <highlight><bold>3</bold></highlight> is a portion where data segmented into blocks of audio data to be recorded exist in a predetermined two-dimensional array as dot images of black or white dots corresponding to data values &ldquo;1&rdquo; or &ldquo;0&rdquo; (in many cases, &ldquo;white&rdquo; as the ground color of a printing medium is directly read). The markers <highlight><bold>4</bold></highlight> are used to detect reference points for reading dots (data dots) within the data dot pattern <highlight><bold>3</bold></highlight>. The markers <highlight><bold>4</bold></highlight> have a predetermined number of successive black dots set at the four corners of each block. The block address pattern <highlight><bold>5</bold></highlight> is laid out between markers so as to identify a plurality of different blocks in read. The block address pattern <highlight><bold>5</bold></highlight> contains an error detection/correction code. Note that vertical and horizontal lines in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> conveniently represent the positions of respective dots. White dots correspond to the ground color of a sheet surface itself. In <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> block address value is written within a square representing a block for descriptive convenience, but no numerical value is actually recorded. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> This dot code <highlight><bold>1</bold></highlight> allows reconstructing the entire original data from data included in respective blocks as far as an address assigned to each block <highlight><bold>2</bold></highlight> can be detected for each block together with data dots included in the block even if the whole dot code <highlight><bold>1</bold></highlight> is larger than an image pickup field <highlight><bold>6</bold></highlight> of the reader, in other words, the dot code <highlight><bold>1</bold></highlight> cannot be sensed at one shot by the reader. Data such as speech can be actually printed on a sheet surface and can be easily read even by manual scanning. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Such a dot code is not limited to the above-described audio data, but can contain so-called multimedia information including video data, text data, and the like in an optically readable format. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> An example of a device which processes such multimedia information is a personal computer (to be simply referred to as a PC hereinafter). </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> Therefore, it is conceivable that multimedia information recorded as a dot code is transmitted to the PC and processed on the PC. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> However, association between the dot code and the PC has not been fully discussed yet, and several problems exist. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> For example, to reconstruct multimedia information recorded as a dot code, the PC must possess all control programs, parameters, application data files, and the like which are assumed to be used. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The operator must start up a reconstruction application program. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Considering the above situation, the present applicant has proposed as U.S. patent application Ser. No. 09/722,942 an information recording medium which allows reconstructing read multimedia information from a dot code even if the PC does not possess all control programs, parameters, application data files, and the like which are assumed to be used, an information processing method and information processing apparatus capable of reconstructing information even if the operator does not start up a reconstruction application program, and a program recording medium which stores a program for causing the computer to operate as the information processing apparatus. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> In the PC use environment such as Microsoft&reg; Windows&reg;, Mac OS&trade;, or LINUX&reg;, advanced Web browser software such as Microsoft&reg; Internet Explorer or Netscape&reg; Navigator is distributed free of charge by the Internet or a CD-ROM. In selling and shipping PCs, the Web browser software is generally installed. Further, Web browser software is being installed as standard equipment in information home appliances such as a net TV and set-top BOX, and portable information terminals such as a recent cellular telephone and PDA (Personal Digital Assistants). As for the content description language of the Web browser software, an HTML (HyperText Markup Language) script is used as a standard language except for cellular telephones which use a CHTML (Compact HyperText Markup Language) script or HDML (Handheld Device Markup Language) script. In the future, contents will be described by a common XHTML (the Extensible HyperText Markup Language) script. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The Web browser such as Microsoft&reg; Internet Explorer or Netscape&reg; Navigator includes Java&trade; Virtual Machine as standard equipment. By reading a Java&trade; class file together with the script file, the same file can be commonly used on different computers regardless of the OS such as Windows&reg;, Mac OS&trade;, LINUX&reg;, or UNIX&reg;. Java&trade; Virtual Machine is being installed not only in PCs having different OSs but also in cellular telephones, PDAs, and some stay-at-home type information terminals. An environment where the same program complying with Java&trade; can be commonly used on each platform regardless of the OS or device is becoming available. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The script language means a program language other than a general-purpose program language such as a C language or assembler program. The script language adopts a programming scheme which executes a source program in an interpreter form. Most of script languages are programs which execute a source file as a text file. An engine for operating such a program exists at any portion on a machine. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> For example, as for Windows&reg;, an active scripting host referred to Windows Scripting Host is installed as standard equipment in Windows&reg; 98 or later. Windows Scripting Host loads a file described by a script language such as Visual Basic&reg; Scripting Edition (to be simply referred to as VBScript hereinafter) or JScript&reg; and operates as an interpreter, thereby being able to control an OS, device, file, or application. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Recently, a scripting host application irrespective of the OS exists on every OS. Scripting host applications can load the same script to control OSs, devices, files, or applications even on different OSs. For example, as for a script language Tcl/Tk, scripting host applications are prepared for respective OSs such as Windows&reg;, Mac OS&trade;, UNIX&reg;, LINUX&reg;, and BSD. By installing this scripting host application in advance, script files of the same description commonly run on every OS. Perl, Ruby, and Python are also script languages which can be used commonly between many OSs. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> An active script assumed to be loaded into an interpreter such as the above-mentioned scripting host application, particularly the active scripting host is displayed as an object such as a filed icon on a desktop. In this case, as far as the extension of the script file is registered in correspondence with the activation of a proper scripting host application in, e.g., the Windows&reg; environment, the script file is loaded into the scripting host application only by double-clicking the icon by the operator. The script program is executed in a way described in the script file. This enables various objects such as copying, movement, and deletion of a designated file or folder, editing of file contents, control and information acquisition of an application program or internal/external device, and interactive control between these objects. As one of the objects, the settings of a registry which holds pieces of setting information about the OS, application, and hardware environment can be easily changed. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> More specifically, as for application control as one of the objects, various routine works are described as script files such that information designated by a Web browser is collected, and data using spreadsheet software are accumulated and graphed. By double-clicking the icon, a target work is completed to shorten the working time of the operator. If a work is automatically executed on the background, the operator can spend a time on another work without any consciousness of the cumbersome work. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> For example, the registry of Windows&reg; can be changed by, e.g., operating a GUI (Graphical User Interface) accessory to an OS or application by the operator, and indirectly, safely changing the registry file. However, many setting contents can only be changed by directly editing the registry file using an application program such as a registry editing tool. For example, repetitively installing and uninstalling programs leaves data unnecessary for general use of the operator in the registry. These data can only be deleted by directly editing the registry file. Directly editing the registry file is, however, risky for an operator who does not have expert knowledge about PC, and may destruct a system or file. If a change method of directly editing registry information is correctly described using a script, even an operator who does not have expert knowledge about PC can instantaneously obtain intended settings only by double-clicking the filed icon of the described method. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> In a company, a computer expert or system manager prepares for script files complying with respective purposes. These script files are loaded into an operator&apos;s machine via e-mail or by a magnetic disk or the like. The operator can double-click the file to attain the target result. Many convenient files for respective purposes may fill a desktop <highlight><bold>7</bold></highlight> with icons <highlight><bold>8</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. Subfolders may be prepared to classify and store files for each purpose. However, the operator can recognize the function by only a file name <highlight><bold>9</bold></highlight> displayed below the icon <highlight><bold>8</bold></highlight>. The file name <highlight><bold>9</bold></highlight> cannot clearly express distinct operation differences. The operation becomes complicated, and it is difficult to search for a file which realizes target operation. If many icons <highlight><bold>8</bold></highlight> exist, the operator may double-click a wrong icon with a mouse or the like to activate unwanted operation at high probability while searching for a target file. This impairs the original convenience. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> As another problem, not all offices or home can ensure an expert who creates a script in accordance with the purpose of each operator. In recent years, scenes with the use of computers have abruptly increased at home and in various fields along with the spread of the Internet and e-commerce. For example, computers are daily used in various service industries such as public agencies, schools, medical/welfare facilities, retail/wholesale trades, insurance/financial business, food service industry, and transport industry which do not require any computer expert usually. At the same time, higher working efficiency and utility are required for each case. In many cases, most of operators do not have knowledge about scripts or do not have a programmer who can easily create a script in accordance with each demand. At homes where many PC beginners exist, it must be more difficult to ensure such an expert. Demands arise for an original script file function capable of realizing settings which are difficult for a PC beginner, and automatic control of files or applications only by performing a simple operation such as double-click. </paragraph>
</section>
<section>
<heading lvl="1">BRIEF SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The present invention has been made in consideration of the above situation, and has as its object to provide an information recording medium, information processing method, information processing apparatus, and program which allow the user to easily designate an object associated with an information processing apparatus for processing digital information, and to process or control the object. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> According to a first aspect of the present invention, there is provided an information recording medium comprising: </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> a portion where a visually recognizable image directly read by a human eye is recorded; and </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> a portion where digital information is recorded as an optically readable coded image obtained by encoding the digital information, </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> wherein the digital information contains a script to designate an object associated with an information processing apparatus which processes digital information obtained by optically reading and decoding the coded image and to perform at least one of processing and control. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> According to a second aspect of the present invention, there is provided an information processing method comprising: </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> obtaining a script by optically reading an optically readable coded image from an information recording medium which includes a portion where digital information is recorded as the optically readable coded image obtained by encoding the digital information, the digital information containing the script to designate an object associated with an information processing apparatus which processes digital information obtained by optically reading and decoding the coded image and to perform at least one of processing and control; and </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> analyzing the obtained script and performing the at least one of processing and control. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> According to a third aspect of the present invention, there is provided an information processing apparatus comprising: </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> a reader which optically reads an optically readable coded image from an information recording medium which includes a portion where digital information is recorded as the optically readable coded image obtained by encoding the digital information, the digital information containing a script to designate an object associated with the information processing apparatus which processes digital information obtained by optically reading and decoding the coded image and to perform at least one of processing and control; </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> a decoder which obtains an original script from the coded image read by the reader; and </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> an information processor which analyzes the script obtained by the decoder and performs at least one of the processing and control. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> According to a fourth aspect of the present invention, there is provided a program to cause a computer to realize following functions, comprising: </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> a function of obtaining a script by optically reading an optically readable coded image from an information recording medium which includes a portion where digital information is recorded as the optically readable coded image obtained by encoding the digital information, the digital information containing the script to designate an object associated with an information processing apparatus which processes digital information obtained by optically reading and decoding the coded image and to perform at least one of processing and control; and </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> a function of analyzing the obtained script and performing the at least one of processing and control. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> Additional objects and advantages of the invention will be set forth in the description which follows, and in part will be obvious from the description, or may be learned by practice of the invention. The objects and advantages of the invention may be realized and obtained by means of the instrumentalities and combinations particularly pointed out hereinafter. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWING </heading>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The accompanying drawings, which are incorporated in and constitute a part of the specification, illustrate embodiments of the invention and, together with the general description given above and the detailed description of the embodiments given below, serve to explain the principles of the invention. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a view showing the physical format structure of a dot code as an example of an optically readable coded image; </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a view showing a display example for explaining conventional problems; </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram showing a cellular telephone with a Web browser function to which an information processing apparatus according to the first embodiment is applied; </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a view showing the logic format structure of an optically readable coded image recorded on an information recording medium according to the first embodiment of the present invention; </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram showing an information processing apparatus according to the first embodiment; </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a view showing the information recording medium according to the first embodiment; </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a view showing the logic format structure of a coded image recorded on an information recording medium according to the second embodiment of the present invention; </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a block diagram showing an information processing apparatus according to the second embodiment; </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a view for explaining MS-Agent; </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a view showing the logic format structure of a coded image recorded on an information recording medium according to the third embodiment of the present invention; </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a block diagram showing an information processing apparatus according to the third embodiment; </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a view showing the hyperlink relationship between HTML files; </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a view showing the logic format structure of a coded image recorded on an information recording medium according to the fourth embodiment of the present invention; </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a block diagram showing an information processing apparatus according to the fourth embodiment; </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a flow chart showing the operation of the information processing apparatus according to the fourth embodiment; </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a view showing a display example according to the fourth embodiment; </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a view showing another display example according to the fourth embodiment; </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18A</cross-reference> is a view showing the logic format structure of the first coded image recorded on an information recording medium according to the fifth embodiment of the present invention; </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18B</cross-reference> is a view showing the logic format structure of the second coded image recorded on the information recording medium according to the fifth embodiment of the present invention; </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a view showing the information recording medium according to the fifth embodiment; </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a view showing a Web browser display screen; </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> is a view showing the logic format structure of a coded image recorded on an information recording medium according to the sixth embodiment of the present invention; </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a block diagram showing an information processing apparatus according to the sixth embodiment; </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> is a flow chart showing the operation of the information processing apparatus according to the sixth embodiment; </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> is a view showing the display transition in the sixth embodiment; </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is a view showing the logic format structure of a coded image for inputting a password; </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> is a view showing another logic format structure of the coded image recorded on the information recording medium according to the sixth embodiment; </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 27</cross-reference> is a block diagram showing an information processing apparatus corresponding to the coded image of <cross-reference target="DRAWINGS">FIG. 26</cross-reference>; </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28</cross-reference> is a flow chart showing the operation of the information processing apparatus corresponding to the coded image of <cross-reference target="DRAWINGS">FIG. 26</cross-reference>; </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29</cross-reference> is a view showing the display transition on the information processing apparatus corresponding to the coded image of <cross-reference target="DRAWINGS">FIG. 26</cross-reference>; </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is a view showing the logic format structure of a coded image recorded on an information recording medium according to the seventh embodiment of the present invention; </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 31</cross-reference> is a block diagram showing an information processing apparatus according to the seventh embodiment; </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 32</cross-reference> is a flow chart showing the operation of the information processing apparatus according to the seventh embodiment; </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33</cross-reference> is a view showing a dialog box displayed in the seventh embodiment; </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 34</cross-reference> is a view showing the logic format structure of a coded image recorded on an information recording medium according to the eighth embodiment of the present invention; </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 35</cross-reference> is a block diagram showing an information processing apparatus according to the eighth embodiment; </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 36</cross-reference> is a flow chart showing the operation of the information processing apparatus according to the eighth embodiment; and </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 37</cross-reference> is a view showing a dialog box displayed in the eighth embodiment.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> Preferred embodiments of the present invention will be described below with reference to the accompanying drawings. </paragraph>
<paragraph id="P-0085" lvl="7"><number>&lsqb;0085&rsqb;</number> &lsqb;First Embodiment&rsqb;</paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> An information processing apparatus according to the first embodiment of the present invention will be described. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 3, a</cross-reference> cellular telephone <highlight><bold>10</bold></highlight> with a Web browser function to which the information processing apparatus according to the first embodiment is applied is constituted by a reader <highlight><bold>12</bold></highlight>, operation unit <highlight><bold>14</bold></highlight>, display <highlight><bold>16</bold></highlight>, communication unit <highlight><bold>18</bold></highlight>, and information processor <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> The reader <highlight><bold>12</bold></highlight> has a function of optically reading a coded image such as the above-described dot code <highlight><bold>1</bold></highlight>. The reader <highlight><bold>12</bold></highlight> includes a lens <highlight><bold>12</bold></highlight>A, an image pickup unit <highlight><bold>12</bold></highlight>B for picking up a coded image via the lens <highlight><bold>12</bold></highlight>A, a decoder <highlight><bold>12</bold></highlight>C for reconstructing a file or data from the coded image picked up by the image pickup unit <highlight><bold>12</bold></highlight>B, and an information input unit <highlight><bold>12</bold></highlight>D for temporarily storing the file or data reconstructed by the decoder <highlight><bold>12</bold></highlight>C and sending it to the information processor <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> The operation unit <highlight><bold>14</bold></highlight> is a key input unit having a ten-key pad for dial and several function keys. The display <highlight><bold>16</bold></highlight> is a liquid crystal display. The communication unit <highlight><bold>18</bold></highlight> performs speech communication and exchange of information via a base station (not shown) by radio. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> The information processor <highlight><bold>20</bold></highlight> executes information processing using a file or data input from the information input unit <highlight><bold>12</bold></highlight>D, information input via the operation unit <highlight><bold>14</bold></highlight>, and/or information obtained via the communication unit <highlight><bold>18</bold></highlight>. The information processor <highlight><bold>20</bold></highlight> transmits information via the communication unit <highlight><bold>18</bold></highlight> and/or displays information on the display <highlight><bold>16</bold></highlight>. More specifically, the information processor <highlight><bold>20</bold></highlight> includes a script analysis/execution unit <highlight><bold>20</bold></highlight>A for analyzing and executing information contents from the information input unit <highlight><bold>12</bold></highlight>D, operation unit <highlight><bold>14</bold></highlight> and communication unit <highlight><bold>18</bold></highlight>, and a various application programs such as a Web browser <highlight><bold>20</bold></highlight>B and a mailer <highlight><bold>20</bold></highlight>C. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> In this embodiment, the reader <highlight><bold>12</bold></highlight> is integrated with the cellular telephone <highlight><bold>10</bold></highlight>. Alternatively, the cellular telephone <highlight><bold>10</bold></highlight> may include the operation unit <highlight><bold>14</bold></highlight>, display <highlight><bold>16</bold></highlight>, communication unit <highlight><bold>18</bold></highlight> and information processor <highlight><bold>20</bold></highlight>, and the reader <highlight><bold>12</bold></highlight> may be connected as a separate device to the information processor <highlight><bold>20</bold></highlight> by wire or radio. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> The information processing apparatus in this embodiment can also be applied to a PC, PDA, set-top BOX, net TV, and the like. In this case, the reader <highlight><bold>12</bold></highlight> is constituted as a separate device. In the set-top BOX or net TV, the reader <highlight><bold>12</bold></highlight> can be assembled into a remote controller. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> An optically readable coded image (e.g., dot code 1) recorded on an information recording medium according to the first embodiment of the present invention will be explained. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a view showing the logic format structure of a coded image <highlight><bold>22</bold></highlight>. The coded image <highlight><bold>22</bold></highlight> contains a file header <highlight><bold>24</bold></highlight> and a script file <highlight><bold>26</bold></highlight>. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> The file header <highlight><bold>24</bold></highlight> contains various pieces of information such as the type of file contained in the coded image <highlight><bold>22</bold></highlight>, compression/non-compression of the file, the compression scheme, and the file name. The script file <highlight><bold>26</bold></highlight> can be read, analyzed, and executed by a scripting host application. The script description contents include contents for processing or controlling various data files and folders, application programs, internal and external devices, and other objects. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, in the information processing apparatus according to the first embodiment, the image pickup unit <highlight><bold>12</bold></highlight>B picks up the coded image <highlight><bold>22</bold></highlight>, and the decoder <highlight><bold>12</bold></highlight>C reconstructs the file header <highlight><bold>24</bold></highlight> and script file <highlight><bold>26</bold></highlight>. A scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a </italic></highlight>corresponding to the script analysis/execution unit <highlight><bold>20</bold></highlight>A loads and executes the script file <highlight><bold>26</bold></highlight> to process or control various application programs such as the Web browser <highlight><bold>20</bold></highlight>B or the mailer <highlight><bold>20</bold></highlight>C, file or folder, internal or external device, and other objects. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a view showing an information recording medium <highlight><bold>28</bold></highlight> according to the first embodiment. On the information recording medium <highlight><bold>28</bold></highlight>, the coded images <highlight><bold>22</bold></highlight> are printed. The coded images <highlight><bold>22</bold></highlight> are classified for respective control contents into genres which are easy to search and are convenient for the operator, and are edited every page. A heading <highlight><bold>30</bold></highlight> is attached to each page of each classified control genre. A symbolic illustration <highlight><bold>32</bold></highlight> representing each control content and an accurate explanation <highlight><bold>34</bold></highlight> of the control content by characters are printed near the corresponding coded image <highlight><bold>22</bold></highlight>. The printout information recording mediums <highlight><bold>22</bold></highlight> are provided to a target operator. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> Assuming Windows&reg; 98, Windows Scripting Host (to be simply referred to as WSH hereinafter) is generally used as the scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>. As the script file <highlight><bold>26</bold></highlight>, a file with an extension &ldquo;.vbs&rdquo; described by VBScript or a file with an extension &ldquo;.JS&rdquo; described by JScript&reg; is recorded. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> Examples of contents for processing or controlling objects including application programs, files, and other devices by using the script file <highlight><bold>26</bold></highlight> are as follows: </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> To activate a setup dialog for an application program, file, or control panel </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> To stop power, to reboot the machine, to restart a window, to suspend, to log off, or the like </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> To empty the Trash, or to eject CD-ROM form an internal or externally connected CD-ROM drive </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> To set a default printer on the basis of a seal affixed to a printer manual </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> To create a URL or file shortcut on a desktop </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> To automatically register a URL in Favorites </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> Window operation: to close all windows, to align windows vertically or horizontally, to make windows overlap each other, or the like </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> To control access/write to text files, wordprocessor software documents, or spreadsheet software data files, or the like </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> To create, delete, or copy file or folder, or the like </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> To detect and display hardware information such as a hard disk capacity </paragraph>
<paragraph id="P-0110" lvl="7"><number>&lsqb;0110&rsqb;</number> In any case, according to the first embodiment, the contents of control or processing are classified for respective purposes, the classified contents are edited and printed as coded images together with simple illustrations and the descriptions of accurate control/processing contents to provide a publication. The publication is provided to any operator including a home user. The operator gets the publication, and can easily find out target control or processing by referring to illustrations. The operator can safely carry the control or processing into effect by confirming the descriptions of accurate control/processing contents. Further, the operator can easily execute the control or processing only by tracing the coded image. </paragraph>
<paragraph id="P-0111" lvl="7"><number>&lsqb;0111&rsqb;</number> &lsqb;Second Embodiment&rsqb;</paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> The second embodiment of the present invention will be described. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a view showing the logic format structure of a coded image <highlight><bold>22</bold></highlight> recorded on an information recording medium according to the second embodiment. The coded image <highlight><bold>22</bold></highlight> contains a file header <highlight><bold>24</bold></highlight>, a script file <highlight><bold>26</bold></highlight>, and a plurality of text files <highlight><bold>36</bold></highlight>. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> In this embodiment, the coded image <highlight><bold>22</bold></highlight> is the above-described dot code <highlight><bold>1</bold></highlight> which can record a large capacity of data. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, in an information processing apparatus according to the second embodiment, the coded image <highlight><bold>22</bold></highlight> is picked up by an image pickup unit <highlight><bold>12</bold></highlight>B. The file header <highlight><bold>24</bold></highlight>, script file <highlight><bold>26</bold></highlight>, and text files <highlight><bold>36</bold></highlight> are reconstructed by a decoder <highlight><bold>12</bold></highlight>C, and temporarily stored in an information input unit <highlight><bold>12</bold></highlight>D. Then, a scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a </italic></highlight>corresponding to a script analysis/execution unit <highlight><bold>20</bold></highlight>A loads and executes the script file <highlight><bold>26</bold></highlight> to control three objects, i.e., Agent control, speak engine, and character file functioning as three application programs. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> The second embodiment also assumes Windows&reg; 98. WSH installed as standard equipment in Windows&reg; 98 or later is used as the scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>. In addition, MS-Agent is utilized as an agent function which can be controlled by a script capable of controlling WSH. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> MS-Agent is a Microsoft technique installed as standard equipment in Windows&reg; 98 or later. While a prepared agent character <highlight><bold>38</bold></highlight> moves in accordance with a script, the contents of a text file or the contents of a text described in the script are displayed as a balloon <highlight><bold>40</bold></highlight> in accordance with the script description, as shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. Alternatively, the contents of a text displayed in the balloon <highlight><bold>40</bold></highlight> are read aloud by speech synthesis in synchronism with the display of the balloon <highlight><bold>40</bold></highlight>. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> This agent function is realized by controlling the three application programs, i.e., Agent control (MS-Agent.exe), speak engine (TV_enua.exe), and character file (Genie.exe or the like) by the WSH which refers to the script contents. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> Hence, a script file such as VBScript described to control the agent character <highlight><bold>38</bold></highlight> is printed as a coded image on a paper medium such as a guidebook, advertisement leaflet, or product catalogue serving as the information recording medium according to the second embodiment. The operator can receive an easy-to-understand guidance, advertisement, or explanation by the motion of the agent character <highlight><bold>38</bold></highlight> and text-to-speech synthesis in a programmable manner in accordance with the contents of the printed matter. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> For example, a VBScript file (file with an extension &ldquo;.vbs&rdquo;) as the script file, and additional information about the article contents of a magazine are recorded as a plurality of displayable text files A, B, . . . , Z on a coded image <highlight><bold>22</bold></highlight> printed on the magazine. The VBScript file is loaded into WSH to control the applications (Agent control, speak engine, and character file). The operation of the agent character <highlight><bold>38</bold></highlight> on the screen, balloon display of the contents of the text file <highlight><bold>36</bold></highlight>, and reading of the contents of the text file <highlight><bold>36</bold></highlight> by text-to-speech synthesis are synchronized. Meanwhile, the text files A, B, . . . , Z are read aloud in a programmable manner. The contents of the text files A, B, . . . , Z are expressed in a programmable manner together with the motion of the agent character <highlight><bold>38</bold></highlight>, display of the balloon <highlight><bold>40</bold></highlight>, and speech synthesis. Note that the &ldquo;programmable manner&rdquo; means various condition branches and decisions in executing the script program. For example, the text files A, B, . . . are messages used at respective time points. The time point when the script is executed is referred to and determined. A corresponding text file <highlight><bold>36</bold></highlight> is loaded from the text files A, B, . . . , thereby expressing the message corresponding to the time point. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> In the second embodiment, text data exists as the text file <highlight><bold>36</bold></highlight>. If, however, text data is directly described in the script file <highlight><bold>26</bold></highlight>, the text file <highlight><bold>36</bold></highlight> can be omitted. Information which controls the agent character <highlight><bold>38</bold></highlight> is recorded in the script file <highlight><bold>26</bold></highlight> and directly activates WSH. In some cases, control information for the agent character <highlight><bold>38</bold></highlight> is described in an HTML script, XML (Extensible Markup Language), or XSL (Extensible Stylesheet Language) script, and the script file <highlight><bold>26</bold></highlight> activates Internet Explorer serving as a Web browser which loads the HTML script, XML script, or XSL script. In general, MS-Agent runs not on Netscape&reg; Navigator but on Internet Explorer. The script file <highlight><bold>26</bold></highlight> controls to activate Internet Explorer. This control can be omitted if plug-in software for Netscape&reg; Navigator is provided and installed. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> As described above, the second embodiment utilizes the feature of the dot code <highlight><bold>1</bold></highlight> capable of recording a large capacity of data in an extensible way. In addition to the script file <highlight><bold>26</bold></highlight> and binary data such as another script file, the text file <highlight><bold>36</bold></highlight>, image/speech/sound data or a Java class file can be recorded on a coded image. In reconstruction, the recorded data are used together with the script. The another script file, the text file <highlight><bold>36</bold></highlight>, the another binary data or the like can be displayed and used in a programmable manner. The contents can be utilized only on the sheet surface without the mediacy of any network. The operator can immediately enjoy the contents without any communication cost. The value-added publication or paper medium can be further improved. </paragraph>
<paragraph id="P-0123" lvl="7"><number>&lsqb;0123&rsqb;</number> &lsqb;Third Embodiment&rsqb;</paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> The third embodiment of the present invention will be described. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a view showing the logic format structure of a coded image <highlight><bold>22</bold></highlight> recorded on an information recording medium according to the third embodiment. The coded image <highlight><bold>22</bold></highlight> contains a file header <highlight><bold>24</bold></highlight>, a script file <highlight><bold>26</bold></highlight>, and a plurality of HTML files <highlight><bold>42</bold></highlight>. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> In this embodiment, the coded image <highlight><bold>22</bold></highlight> is the above-described dot code <highlight><bold>1</bold></highlight> which can record a larger capacity of data than a barcode or the like. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, in an information processing apparatus according to the third embodiment, the coded image <highlight><bold>22</bold></highlight> is picked up by an image pickup unit <highlight><bold>12</bold></highlight>B. The file header <highlight><bold>24</bold></highlight>, script file <highlight><bold>26</bold></highlight>, and HTML files <highlight><bold>42</bold></highlight> are reconstructed by a decoder <highlight><bold>12</bold></highlight>C, and temporarily stored in an information input unit <highlight><bold>12</bold></highlight>D. Then, a scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a </italic></highlight>corresponding to a script analysis/execution unit <highlight><bold>20</bold></highlight>A loads and executes the script file <highlight><bold>26</bold></highlight>. The HTML files <highlight><bold>42</bold></highlight> as objects are browsed by a Web browser <highlight><bold>20</bold></highlight>B serving as another object. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> The third embodiment assumes that the scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a </italic></highlight>is an active scripting host such as WSH or Tcl/Tk which can run not only on Windows&reg; but also on Mac OS&trade;, LINUX&reg;, or UNIX&reg;, and that Web browser software can be used. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> The plurality of HTML files <highlight><bold>42</bold></highlight> are recorded on the coded image <highlight><bold>22</bold></highlight>. When the HTML file <highlight><bold>42</bold></highlight> is displayed on Web browser software, texts and images displayed within the page are hypertext-linked to another HTML file, as shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>. The script file <highlight><bold>26</bold></highlight> to be loaded, analyzed, and executed by the scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a </italic></highlight>is recorded on the coded image <highlight><bold>22</bold></highlight>. The script file <highlight><bold>26</bold></highlight> is so described as to be activated in a designated state (window display position, display size, text size, and the like) on the Web browser <highlight><bold>20</bold></highlight>B on which an HTML file A is designated among the plurality of HTML files <highlight><bold>42</bold></highlight>. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> When the coded image <highlight><bold>22</bold></highlight> is optically read, the script file <highlight><bold>26</bold></highlight> is loaded into the scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>. Web browser software described in the script file <highlight><bold>26</bold></highlight> is activated in a designated state. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> For example, an information provider who creates and provides an information recording medium according to the third embodiment may want to limit browser software used by the operator to a specific one depending on the contents of the HTML file <highlight><bold>42</bold></highlight>. That is, Web browser software of company A and Web browser software of company B are different in corresponding HTML commands and usable functions, which further change depending on the version. Web browser software desired by the information provider may also change depending on contents. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> In many cases, the operator wants to change the window display position or minimize the window display size from the relationship with another application in use or another displayed Web content. Also, control of increasing the text size is effective for, e.g., an elder operator in consideration of the convenience of a target operator for each publication. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> In accordance with the description of the script file <highlight><bold>26</bold></highlight>, the HTML file A is loaded into the Web browser software controlled in accordance with this description. The HTML file A has a hypertext relationship with HTML files B and C. These files are associated with each other and constitute a hierarchical structure. The coded image <highlight><bold>22</bold></highlight> can be summed up for each theme or purpose. This provides easy browsing and utilization, and increases choices of the layout design of the coded image <highlight><bold>22</bold></highlight>. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> Note that an information processing method of transferring only the HTML file A to Web browser software without recording the script file <highlight><bold>26</bold></highlight> on the coded image <highlight><bold>22</bold></highlight> may be adopted. The HTML files <highlight><bold>42</bold></highlight> need not be limited to the three HTML files A, B, and C. Each HTML file <highlight><bold>42</bold></highlight> may be hypertext-linked to an external HTML file not recorded on the coded image <highlight><bold>22</bold></highlight>. Instead of the HTML file <highlight><bold>42</bold></highlight>, an XML, XSL, or XHTML file may be employed, or a CHTML, HDML, or WML file used in a cellular telephone may be used. A GIF image or JPEG image, sound information such as a Java applet or MIDI file, and audio information such as a WAVE file which are read out from such HTML files may be recorded on the coded image <highlight><bold>22</bold></highlight>. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> Two examples of the detailed recording contents and utilization method of the third embodiment, and their merits will be described. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> 1) Pieces of manual or dictionary information are associated with each other and recorded on a coded image. This provides supplemental remarks which exploit the merits of the hypertext without occupying space. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> 2) As a means for accessing the homepage of each shop on the Web via a coded image printed on the shop guide page of a guidebook for restaurants or shops, the URL of one shop is recorded in the coded image, and this coded image is read by a cellular telephone with a coded-image reading function to easily access the target homepage. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> This coded image may contain not only the URL of one shop but an HDML or CHTML file including the URLs of a plurality of shops such as chain stores. In this case, the space on the sheet surface can be saved in comparison with separately encoding and printing the URLs of shops. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> A plurality of HDML or CHTML files hierarchized and linked to each other by using a hypertext or the like may be recorded in a coded image. A target shop can be easily searched for by a cellular telephone having the coded-image reading function. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> If a script which allows making a call by cursor designation on the display is described in the HDML or CHTML file, the operator can easily make a call after the search. For example, after reading the code, the operator of the cellular telephone sequentially selects area search&rarr;prefecture&rarr;city&rarr;shop (country&rarr;state&rarr;city&rarr;shop) on the display with the cursor or the like. The operator can find out a target shop and directly call the shop. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> This merit can be provided offline from the sheet surface of a guidebook or the like without network connection. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> With a structure which enables directly registering information obtained by reading the coded image in a database prepared inside the cellular telephone, the operator can always receive the above-mentioned merit without the guidebook if only to read the coded image and register information. Also, the shop can keep the operator as a regular customer. </paragraph>
<paragraph id="P-0143" lvl="7"><number>&lsqb;0143&rsqb;</number> &lsqb;Fourth Embodiment&rsqb;</paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> The fourth embodiment of the present invention will be described. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a view showing the logic format structure of a coded image <highlight><bold>22</bold></highlight> recorded on an information recording medium according to the fourth embodiment. The coded image <highlight><bold>22</bold></highlight> contains a file header <highlight><bold>24</bold></highlight> and a script file <highlight><bold>26</bold></highlight>. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> The fourth embodiment also assumes that a scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a </italic></highlight>is an active scripting host such as WSH or Tcl/Tk which can run not only on Windows&reg; but also on Mac OS&trade;, LINUX&reg;, or UNIX&reg;, and that Web browser software can be used. The script file <highlight><bold>26</bold></highlight> which can be loaded into the scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a </italic></highlight>and can be activated is recorded on the coded image <highlight><bold>22</bold></highlight>. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> In the information processing apparatus according to the fourth embodiment, as shown in <cross-reference target="DRAWINGS">FIGS. 14 and 15</cross-reference>, a decoder <highlight><bold>12</bold></highlight>C reconstructs the script file <highlight><bold>26</bold></highlight> after the start of reading the coded image <highlight><bold>22</bold></highlight> (step S<highlight><bold>10</bold></highlight>). The reconstructed script file <highlight><bold>26</bold></highlight> is activated by the scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>, e.g., an active scripting host such as WSH and the contents of the script file are analyzed and executed (step S<highlight><bold>12</bold></highlight>). The description contents of the script file <highlight><bold>26</bold></highlight> are as follows. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> Whether a file on a CD-ROM as a designated object exists on each drive is searched for (step S<highlight><bold>14</bold></highlight>). That is, which of drives &ldquo;D:&rdquo; or &ldquo;E:&rdquo; is a CD-ROM drive <highlight><bold>44</bold></highlight> changes depending on the environment of the operator. Further, it is unknown whether a target CD-ROM is set in the CD-ROM drive <highlight><bold>44</bold></highlight> and a target file exists. Thus, a target file must be searched for. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> If the target file exists as a result of search (YES in step S<highlight><bold>16</bold></highlight>), an HTML file is created in accordance with the contents described in the script file <highlight><bold>26</bold></highlight>, and a description for reading out the file on the CD-ROM is added to the HTML file to complete the HTML file (step S<highlight><bold>18</bold></highlight>). The HTML file is opened on a designated Web browser application (step S<highlight><bold>20</bold></highlight>). The file is read out from the CD-ROM drive <highlight><bold>44</bold></highlight> in accordance with the description of the HTML file, and designated display is performed. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> If the file is determined not to exist as a result of search (NO in step S<highlight><bold>16</bold></highlight>), a message that the designated file does not exist is displayed (step S<highlight><bold>22</bold></highlight>). </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> In the fourth embodiment, predetermined information representing whether a target file exists is acquired from a CD-ROM serving as an object, and then processing is done. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> Detailed file contents of the fourth embodiment, an information recording medium which records the contents, a utilization method, and the merits will be described. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> 1) A coded image at a given point is loaded. Then, a designated landscape image is read out from a CD-ROM. As shown in <cross-reference target="DRAWINGS">FIG. 16</cross-reference>, the image is horizontally scrolled on the Web browser. This image can be used for a map which reproduces the 360&deg; circumference of the place, a travel/hotel/shop/restaurant guide, or an information magazine for renting or real estate. In this case, a panoramic image viewed from that place can be directly reproduced from the point on the map or the guidebook article. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> 2) A plurality of moving picture files are read out from a CD-ROM, and the moving pictures are simultaneously played back at corresponding positions on the screen. Merits for respective applications are as follows: </paragraph>
<paragraph id="P-0155" lvl="2"><number>&lsqb;0155&rsqb;</number> {circle over (1)} Catalogue and sales promotion goods: Sales are promoted using three-sides moving pictures of a car, vehicle, pet, building, and the like. As for the building, changes with seasons and the time can be simultaneously confirmed from three side-views A, B and C by compressing the time interval, as shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>. </paragraph>
<paragraph id="P-0156" lvl="2"><number>&lsqb;0156&rsqb;</number> {circle over (2)} Teaching material and manual: The moving pictures of a given object are played back from various angles in temporary synchronism with each other, which helps understanding. </paragraph>
<paragraph id="P-0157" lvl="2"><number>&lsqb;0157&rsqb;</number> {circle over (3)} Textbook for Japanese dance or another dance: Dance images are played back from various angles in synchronism with each other, and the temporal relationship and three-dimensional form are grasped. The words of a song or an explanation is scrolled, which helps understanding together with a text. </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> In the fourth embodiment, an HTML file is created from the script file <highlight><bold>26</bold></highlight> recorded on the coded image <highlight><bold>22</bold></highlight>, and the Web browser <highlight><bold>20</bold></highlight>B is activated. The above object may be achieved by recording an HTML file on the coded image <highlight><bold>22</bold></highlight> and describing JavaScript or VBScript in the HTML file. Alternatively, only a simple HTML file may be recorded on the coded image <highlight><bold>22</bold></highlight> if the drive name of the CD-ROM drive <highlight><bold>44</bold></highlight> is determined in advance. </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> When the script file <highlight><bold>26</bold></highlight> is recorded on the coded image <highlight><bold>22</bold></highlight> to create an HTML file, and the Web browser <highlight><bold>20</bold></highlight>B is activated, the activation method of the Web browser <highlight><bold>20</bold></highlight>B can be designated in detail from the script file <highlight><bold>26</bold></highlight>. </paragraph>
<paragraph id="P-0160" lvl="7"><number>&lsqb;0160&rsqb;</number> &lsqb;Fifth Embodiment&rsqb;</paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> The fifth embodiment of the present invention will be described. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> The fifth embodiment also assumes that a scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a </italic></highlight>is an active scripting host such as WSH assuming Windows&reg; or Tcl/Tk which can run on Mac OS&trade;, LINUX&reg;, or UNIX&reg;, and that Web browser software serving as an object can be used. </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> The fifth embodiment uses first and second coded images. As shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>A, the first coded image <highlight><bold>22</bold></highlight>-<highlight><bold>1</bold></highlight> contains a file header <highlight><bold>24</bold></highlight>-<highlight><bold>1</bold></highlight>, a script file <highlight><bold>26</bold></highlight> which can be loaded into a scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a </italic></highlight>and can be activated, an HTML file <highlight><bold>42</bold></highlight> serving as an object input to a Web browser <highlight><bold>20</bold></highlight>B activated by the script file <highlight><bold>26</bold></highlight>, a Java class file <highlight><bold>46</bold></highlight> serving as an object read out from the HTML file <highlight><bold>42</bold></highlight>, and an image file, text file, and the like serving as objects which are referred to from the HTML file or Java class file. As shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>B, the second coded image <highlight><bold>22</bold></highlight>-<highlight><bold>2</bold></highlight> contains a file header <highlight><bold>24</bold></highlight>-<highlight><bold>2</bold></highlight> and browser form input data <highlight><bold>48</bold></highlight>. </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> In the fifth embodiment, as shown in <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, the first and second coded images <highlight><bold>22</bold></highlight>-<highlight><bold>1</bold></highlight> and <highlight><bold>22</bold></highlight>-<highlight><bold>2</bold></highlight> are recorded on an information recording medium such as a newspaper or magazine. After the start of reading the first coded image <highlight><bold>22</bold></highlight>-<highlight><bold>1</bold></highlight>, a decoder <highlight><bold>12</bold></highlight>C reconstructs the script file <highlight><bold>26</bold></highlight>. The reconstructed script file <highlight><bold>26</bold></highlight> is activated by a scripting host application, e.g., an active scripting host such as WSH. The contents of the script file <highlight><bold>26</bold></highlight> are analyzed and executed. In this case, the description contents of the script file <highlight><bold>26</bold></highlight> are to activate Web browser software by the HTML file <highlight><bold>42</bold></highlight> recorded on the first coded image <highlight><bold>22</bold></highlight>-<highlight><bold>1</bold></highlight>. In activating the Web browser <highlight><bold>20</bold></highlight>B, the type of Web browser <highlight><bold>20</bold></highlight>B may be designated, or an activation method such as the browser window position or size may be designated. If the activated HTML file <highlight><bold>42</bold></highlight> contains such a description as to designate, load, and display the Java class file <highlight><bold>46</bold></highlight> recorded on the first coded image <highlight><bold>22</bold></highlight>-<highlight><bold>1</bold></highlight>, the class file containing the program as described above is loaded. </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> In the fifth embodiment, the class file is a program which reproduces a &ldquo;go&rdquo; game, as shown in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>. Immediately after the operator reads the first coded image <highlight><bold>22</bold></highlight>-<highlight><bold>1</bold></highlight>, the Web browser <highlight><bold>20</bold></highlight>B is activated to allow using a Java applet which reproduces the &ldquo;go&rdquo; game. </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> The display contents of the Java applet change depending on a data input to the Web browser form. For example, in this case, a browser form &lt; button <highlight><bold>50</bold></highlight>A and browser form &gt; button <highlight><bold>50</bold></highlight>B are displayed. The buttons <highlight><bold>50</bold></highlight>A or <highlight><bold>50</bold></highlight>B are turned on to display the game result of the Java applet forward or backward. </paragraph>
<paragraph id="P-0167" lvl="0"><number>&lsqb;0167&rsqb;</number> The browser form input data <highlight><bold>48</bold></highlight> is recorded on the second coded image <highlight><bold>22</bold></highlight>-<highlight><bold>2</bold></highlight>. If the second coded image <highlight><bold>22</bold></highlight>-<highlight><bold>2</bold></highlight> is reconstructed during display of an object displayed as a result of reconstructing the first coded image <highlight><bold>22</bold></highlight>-<highlight><bold>1</bold></highlight>, an information processor <highlight><bold>20</bold></highlight> can input data to a corresponding browser form by referring to the browser form input data <highlight><bold>48</bold></highlight> recorded on the second coded image <highlight><bold>22</bold></highlight>-<highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> For example, in this case, &lt; and &gt; button inputs are prepared as the browser form input data <highlight><bold>48</bold></highlight>. Only by reading the second coded image <highlight><bold>22</bold></highlight>-<highlight><bold>2</bold></highlight>, the same effects as turning on the browser form &lt; button <highlight><bold>50</bold></highlight>A or browser form &gt; button <highlight><bold>50</bold></highlight>B can be obtained. The game progress can be fed forward or backward. When the information processing apparatus according to the fifth embodiment is a PC, only a coded image can be scanned while the operator need not exchange a coded-image reader for reading the first coded image <highlight><bold>22</bold></highlight>-<highlight><bold>1</bold></highlight> with a mouse for click. As a result, user I/Fs can be integrated. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> The designated Web browser <highlight><bold>20</bold></highlight>B is immediately activated only by manually scanning the first coded image <highlight><bold>22</bold></highlight>-<highlight><bold>1</bold></highlight>. The Web browser <highlight><bold>20</bold></highlight>B loads a Java applet, allowing quickly using a desired application. The game result can be fed forward or backward only by scanning the second coded image <highlight><bold>22</bold></highlight>-<highlight><bold>2</bold></highlight>, e.g., coded images &lt; or &gt; on an information recording medium such as a magazine or newspaper. For a PC system, the operator need not hold a mouse, and user I/Fs can be integrated. For a cellular telephone <highlight><bold>10</bold></highlight> which incorporates a reader <highlight><bold>12</bold></highlight> but does not have any mouse, the forward/backward result can be displayed on the screen of the display <highlight><bold>16</bold></highlight> only by tracing a coded image on the cellular telephone main body. </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> Detailed file contents of a coded image in the fifth embodiment, an information recording medium which records the contents, and a utilization method will be described. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> 1) A java program for simulating physics, mathematics, astronomy, economics, or another phenomenon is recorded near an explanatory figure on a teaching material, magazine, or the like. The target phenomenon is reproduced, and the parameters are changed only on the coded image <highlight><bold>22</bold></highlight>-<highlight><bold>2</bold></highlight>, in which the browser form input data <highlight><bold>48</bold></highlight> is recorded, to display the result. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> 2) A java program is recorded on a fortune-telling magazine. This program allows inputting parameters such as Feng Sui, constellation, blood type, and biorhythm only on the coded image <highlight><bold>22</bold></highlight>-<highlight><bold>2</bold></highlight>, in which the browser form input data <highlight><bold>48</bold></highlight> (text box, radio button, combo box, or the like) is recorded, displaying the fortune-telling result. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> 3) A script program for searching a CD-ROM or network for a moving picture or program and downloading the searched result is recorded on a coded image. In this case, the coded image <highlight><bold>22</bold></highlight>-<highlight><bold>2</bold></highlight> on which the browser form input data <highlight><bold>48</bold></highlight> is recorded for the answer entry of each question is printed. The operator answers each question by scanning the coded image by means of a cellular telephone <highlight><bold>10</bold></highlight> which incorporates a reader <highlight><bold>12</bold></highlight>. Then, the answer results for respective answer entries are sequentially input to the script program. The final search result is downloaded as a moving image or program from the CD-ROM or network. The downloaded result is displayed, reproduced, and executed. </paragraph>
<paragraph id="P-0174" lvl="7"><number>&lsqb;0174&rsqb;</number> &lsqb;Sixth Embodiment&rsqb;</paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> The sixth embodiment of the present invention will be described. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> The sixth embodiment also assumes that a scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a </italic></highlight>is WSH or another scripting host such as Tcl/Tk on the assumption of an OS other than Windows&reg; as far as the environment has a Web browser. </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 21, a</cross-reference> coded image <highlight><bold>22</bold></highlight> contains a file header <highlight><bold>24</bold></highlight>, a script file <highlight><bold>26</bold></highlight> which is loaded into the scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>, analyzed, and executed, and an HTML file <highlight><bold>42</bold></highlight> serving as an object which is loaded into a Web browser <highlight><bold>20</bold></highlight>B and displayed. The HTML file <highlight><bold>42</bold></highlight> is a hidden information page. </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> In an information processing apparatus according to the sixth embodiment, as shown in <cross-reference target="DRAWINGS">FIGS. 22 and 23</cross-reference>, a decoder <highlight><bold>12</bold></highlight>C reconstructs the script file <highlight><bold>26</bold></highlight> after the start of reading the coded image <highlight><bold>22</bold></highlight> (step S<highlight><bold>10</bold></highlight>). </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> The script file <highlight><bold>26</bold></highlight> is described such that after being loaded into the scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>, a dialog &ldquo;1&rdquo; <highlight><bold>52</bold></highlight> serving as a first dialog box as shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference> is displayed. The scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a </italic></highlight>executes the contents of the reconstructed script file <highlight><bold>26</bold></highlight> to display the dialog &ldquo;1&rdquo; <highlight><bold>52</bold></highlight> (step S<highlight><bold>30</bold></highlight>). </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> The dialog &ldquo;1&rdquo; <highlight><bold>52</bold></highlight> has a password input box <highlight><bold>54</bold></highlight>. The script file <highlight><bold>26</bold></highlight> is described such that if the operator manually inputs a password, a password check routine at the timing at which the operator clicks an OK button <highlight><bold>56</bold></highlight> is started, and whether the input password is correct or incorrect is checked. If the input password is determined to be correct (YES in step S<highlight><bold>32</bold></highlight>), designated Web browser software is activated to load the HTML file <highlight><bold>42</bold></highlight> on which the hidden information page is described. As a result, a hidden information page <highlight><bold>58</bold></highlight> is displayed (step S<highlight><bold>34</bold></highlight>). </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> If the input password is determined to be incorrect (NO in step S<highlight><bold>32</bold></highlight>), the scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a </italic></highlight>displays a dialog &ldquo;2&rdquo; <highlight><bold>60</bold></highlight> serving as a second dialog box in accordance with the description of the script file <highlight><bold>26</bold></highlight> (step S<highlight><bold>36</bold></highlight>). The script file <highlight><bold>26</bold></highlight> is further described such that if the operator clicks an OK button <highlight><bold>62</bold></highlight>, i.e., if the operator is to input a password again (YES in step S<highlight><bold>38</bold></highlight>), the dialog &ldquo;1&rdquo; <highlight><bold>52</bold></highlight> is displayed again; if the operator clicks a cancel button <highlight><bold>64</bold></highlight> (NO in step S<highlight><bold>38</bold></highlight>), the processing ends. </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> In the sixth embodiment, a hidden information page is stored in the coded image <highlight><bold>22</bold></highlight> printed on the sheet surface of an information recording medium. This hidden information page can be acquired by inputting a correct password. This is suitable for members-only information services using printing media. As an example of such services, the coded image <highlight><bold>22</bold></highlight> is printed on an information recording medium such as a generally printed/published/distributed newspaper, magazine, or leaflet, and a password is given to only a member. As hidden information, detailed information or the latest information concerning a generally distributed printed matter, a special price or hidden information, prospect information by a famous expert, or the like is recorded on the coded image <highlight><bold>22</bold></highlight>. This information can be provided to only a member who pays membership fees. </paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> In the sixth embodiment, a password is manually input. Alternatively, information such as a password can be encoded into an image. That is, as described in the fifth embodiment, a password is recorded on the browser form input data <highlight><bold>48</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 25</cross-reference>. The coded image <highlight><bold>22</bold></highlight> containing the browser form input data <highlight><bold>48</bold></highlight> is recorded on a membership card (not shown) serving as an information recording medium. This membership card is distributed to a member. The member can input the password only by reading the coded image <highlight><bold>22</bold></highlight>. </paragraph>
<paragraph id="P-0184" lvl="0"><number>&lsqb;0184&rsqb;</number> The hidden information page is recorded on the HTML file <highlight><bold>42</bold></highlight> stored in the coded image <highlight><bold>22</bold></highlight>. Instead of recording hidden information on the HTML file <highlight><bold>42</bold></highlight>, the hidden information may be set on a network, and only link information may be described in the HTML file <highlight><bold>42</bold></highlight>. Alternatively, hidden information may be set on both the HTML file <highlight><bold>42</bold></highlight> and a linked network. In this case, the values of information such as significance, concealment, information amount, real-time distribution, and discount may be differed, and a password input means may be provided for each information. As this password input means, different passwords may be set for respective pieces of hidden information, or one password may be used to determine disclosure of pieces of hidden information. </paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> The sixth embodiment employs a script file assuming the scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>. Alternatively, as shown in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>, three HTML files <highlight><bold>42</bold></highlight> may be recorded as the coded image <highlight><bold>22</bold></highlight>. More specifically, in an HTML file &ldquo;1&rdquo;, a TOP page having a function of checking an input password is described by describing a Java script. In an HTML file &ldquo;2&rdquo;, an NG page displayed when a password is incorrect is described. In an HTML file &ldquo;3&rdquo;, a member page including hidden information is described. Further, as shown in <cross-reference target="DRAWINGS">FIGS. 27 and 28</cross-reference>, the decoder <highlight><bold>12</bold></highlight>C may reconstruct the three HTML files <highlight><bold>42</bold></highlight> after the start of reading the coded image <highlight><bold>22</bold></highlight> (step S<highlight><bold>10</bold></highlight>). These HTML files <highlight><bold>42</bold></highlight> may be temporarily saved by the information input unit <highlight><bold>12</bold></highlight>D. An HTML file <highlight><bold>42</bold></highlight> which designates an information processing method according to the sixth embodiment may be transferred to the Web browser <highlight><bold>20</bold></highlight>B to activate the Web browser <highlight><bold>20</bold></highlight>B. In this case, the HTML file &ldquo;1&rdquo; in which the TOP page is described is transferred to the Web browser <highlight><bold>20</bold></highlight>B. </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> Subsequent processing depends on the Web browser <highlight><bold>20</bold></highlight>B and the described contents of the HTML file <highlight><bold>42</bold></highlight>. First, as shown in <cross-reference target="DRAWINGS">FIG. 29, a</cross-reference> TOP page <highlight><bold>66</bold></highlight> having a password input box <highlight><bold>68</bold></highlight> is displayed (step S<highlight><bold>40</bold></highlight>). A password may be input to the password input box <highlight><bold>68</bold></highlight> via an operation unit (keyboard) <highlight><bold>14</bold></highlight>, as described above. Alternatively, a password may be input by reading the coded image <highlight><bold>22</bold></highlight> containing the browser form input data <highlight><bold>48</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 25</cross-reference>. </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> If the input password is correct (YES in step S<highlight><bold>42</bold></highlight>), a member page <highlight><bold>70</bold></highlight> described in the HTML file &ldquo;3&rdquo; is displayed (step S<highlight><bold>44</bold></highlight>). If the input password is incorrect (NO in step S<highlight><bold>42</bold></highlight>), an NG page <highlight><bold>72</bold></highlight> described in the HTML file &ldquo;2&rdquo; is displayed (step S<highlight><bold>46</bold></highlight>). In this case, an HTML script which returns the display to the TOP page <highlight><bold>66</bold></highlight> upon the lapse of a predetermined time is preferably described in the HTML file &ldquo;2&rdquo;. </paragraph>
<paragraph id="P-0188" lvl="7"><number>&lsqb;0188&rsqb;</number> &lsqb;Seventh Embodiment&rsqb;</paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> The seventh embodiment of the present invention will be described. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is a view showing the logic format structure of a coded image <highlight><bold>22</bold></highlight> recorded on an information recording medium according to the seventh embodiment. The coded image <highlight><bold>22</bold></highlight> contains a file header <highlight><bold>24</bold></highlight>, a script file <highlight><bold>26</bold></highlight>, and a data file <highlight><bold>74</bold></highlight>. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> The data file <highlight><bold>74</bold></highlight> is an object such as a binary file used by a text file or each application program. The script file <highlight><bold>26</bold></highlight> can be loaded into a scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a</italic></highlight>, and can be activated to add, delete, or edit the contents of the data file <highlight><bold>74</bold></highlight>. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIGS. 31 and 32</cross-reference>, in an information processing apparatus according to the seventh embodiment, the coded image <highlight><bold>22</bold></highlight> is sensed by an image pickup unit <highlight><bold>12</bold></highlight>B. The script file <highlight><bold>26</bold></highlight> and data file <highlight><bold>74</bold></highlight> are reconstructed by a decoder <highlight><bold>12</bold></highlight>C, and temporarily stored in an information input unit <highlight><bold>12</bold></highlight>D (step S<highlight><bold>10</bold></highlight>). Then, a scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a </italic></highlight>corresponding to a script analysis/execution unit <highlight><bold>20</bold></highlight>A loads, analyzes, and executes the script file <highlight><bold>26</bold></highlight>, and a dialog box <highlight><bold>76</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 33</cross-reference> is displayed (step S<highlight><bold>50</bold></highlight>). </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> The dialog box <highlight><bold>76</bold></highlight> has an operator answer text box <highlight><bold>78</bold></highlight>. The script file <highlight><bold>26</bold></highlight> is described as follows: if the operator manually inputs an answer to an inquiry, the data file <highlight><bold>74</bold></highlight> saved in the information input unit <highlight><bold>12</bold></highlight>D is processed at a timing when the operator clicks an OK button <highlight><bold>80</bold></highlight> (YES in step S<highlight><bold>52</bold></highlight>) in accordance with the answer input to the answer text box <highlight><bold>78</bold></highlight> (step S<highlight><bold>54</bold></highlight>). A target application program serving as an object described in the script file in advance is activated to load the data file <highlight><bold>74</bold></highlight> (step S<highlight><bold>56</bold></highlight>). If a cancel button <highlight><bold>82</bold></highlight> of the dialog box <highlight><bold>76</bold></highlight> is clicked (YES in step S<highlight><bold>58</bold></highlight>), the processing ends. </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> After the data file <highlight><bold>74</bold></highlight> is processed in accordance with the click of the OK button <highlight><bold>80</bold></highlight>, another dialog box may be displayed to make another inquiry. </paragraph>
<paragraph id="P-0195" lvl="0"><number>&lsqb;0195&rsqb;</number> Detailed file contents of a coded image in the seventh embodiment, an information recording medium which records the contents, and a utilization method will be described. </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> 1) Automatic homepage building templates: A dialog box displayed in accordance with the script file <highlight><bold>26</bold></highlight>, e.g., a VBScript description inquires profiles such as the birthday, name, and address of the operator. The operator answers the inquiries, finally building a self-introduction homepage. </paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> 2) Wordprocessor templates: A dialog box displayed in accordance with a VBScript description inquires necessary items of the operator. The operator answers the inquiries to complete a fixed-form wordprocessor document. </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> 3) New Year&apos;s card templates: Fixed forms for letters or New Year&apos;s cards are printed on pages. A script which allows completing contents by answering a message box is encoded into an image for each page. The operator easily searches a book for a fixed form with a target or favorite document or design (the operator can directly find out a favorite one because of a book). The operator answers the inquiries to complete a greeting document or New Year&apos;s card file. </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> 4) Application preparation tool: A fixed form to be applied to a public agency or service counter is completed on wordprocessor software via inquiries to the operator. </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> 5) Quote preparation tool: A script is encoded into an image which controls spreadsheet software via an answer to a message box so as to provide the calculation results of monthly payments and payments in bonus months for each payment pattern on, e.g., the loan repayment page of a life insurance brochure or a catalogue for various goods. </paragraph>
<paragraph id="P-0201" lvl="0"><number>&lsqb;0201&rsqb;</number> 6) Presentation material preparation tool: Presentation software is controlled via input of necessary items such as the company name, product name, and product concept in accordance with inquiries on a message box that cause the operator to answer questions. The necessary items are filled to complete fixed-form presentation materials. </paragraph>
<paragraph id="P-0202" lvl="0"><number>&lsqb;0202&rsqb;</number> In this case, the application program to be activated may be a scripting host application, and the data file may be the source script file of the scripting host application. </paragraph>
<paragraph id="P-0203" lvl="7"><number>&lsqb;0203&rsqb;</number> &lsqb;Eighth Embodiment&rsqb;</paragraph>
<paragraph id="P-0204" lvl="0"><number>&lsqb;0204&rsqb;</number> The eighth embodiment of the present invention will be described. </paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> In the eighth embodiment, a coded image <highlight><bold>22</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 34</cross-reference> which contains a program source file <highlight><bold>84</bold></highlight> serving as an object, and a script file <highlight><bold>26</bold></highlight> for editing the contents of the source file <highlight><bold>84</bold></highlight> by answering questions on a message dialog box and for determining the compile method of the edited source file <highlight><bold>84</bold></highlight> is printed on a program menu book serving as an information recording medium. Even a PC beginner can create an original execution program by answering simple questions. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> More specifically, as shown in <cross-reference target="DRAWINGS">FIGS. 35 and 36</cross-reference>, in an information processing apparatus according to the eighth embodiment, a desired program source file is selected from the program menu book. A corresponding coded image <highlight><bold>22</bold></highlight> is picked up by an image pickup unit <highlight><bold>12</bold></highlight>B. The script file <highlight><bold>26</bold></highlight> and source file <highlight><bold>84</bold></highlight> are reconstructed by a decoder <highlight><bold>12</bold></highlight>C, and temporarily stored in an information input unit <highlight><bold>12</bold></highlight>D (step S<highlight><bold>10</bold></highlight>). Then, a scripting host application <highlight><bold>20</bold></highlight><highlight><italic>a </italic></highlight>loads and executes the script file <highlight><bold>26</bold></highlight>. A dialog box <highlight><bold>86</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 37</cross-reference> is displayed (step S<highlight><bold>60</bold></highlight>). </paragraph>
<paragraph id="P-0207" lvl="0"><number>&lsqb;0207&rsqb;</number> The dialog box <highlight><bold>86</bold></highlight> has an operator answer text box <highlight><bold>88</bold></highlight>. The script file <highlight><bold>26</bold></highlight> is described as follows: if the operator manually inputs an answer to an inquiry, the source file <highlight><bold>84</bold></highlight> saved in the information input unit <highlight><bold>12</bold></highlight>D is edited and processed at a timing when the operator clicks an OK button <highlight><bold>90</bold></highlight> (YES in step S<highlight><bold>62</bold></highlight>) in accordance with the answer input to the answer text box <highlight><bold>88</bold></highlight> (step S<highlight><bold>64</bold></highlight>). </paragraph>
<paragraph id="P-0208" lvl="0"><number>&lsqb;0208&rsqb;</number> As for a method of compiling the edited program source file after the contents of the source file <highlight><bold>84</bold></highlight> are edited, the script file <highlight><bold>26</bold></highlight> is described as follows: a dialog box (not shown) is similarly displayed (step S<highlight><bold>66</bold></highlight>). If the operator inputs an answer to an inquiry and clicks an OK button (step S<highlight><bold>68</bold></highlight>), a compiling method is designated in accordance with the answer (step S<highlight><bold>70</bold></highlight>). A compiler is activated (step S<highlight><bold>72</bold></highlight>), and the edited program source file is compiled to create and activate an execution program (step S<highlight><bold>74</bold></highlight>). </paragraph>
<paragraph id="P-0209" lvl="0"><number>&lsqb;0209&rsqb;</number> As a desired example by the operator in creation of an execution program, a resource such as an image or speech is contained in an execution program so as not to be externally extracted, or is moved to the outside so as to enable the user to exchange the resource. </paragraph>
<paragraph id="P-0210" lvl="0"><number>&lsqb;0210&rsqb;</number> The compiler for compiling a program source file is, e.g., hsped2.exe serving as both the editor and compiler of Hot Soup Processor&reg;. The program source file is, e.g., a file with an extension &ldquo;.AS&rdquo; which can be edited and compiled by hsped2.exe. </paragraph>
<paragraph id="P-0211" lvl="0"><number>&lsqb;0211&rsqb;</number> The present invention has been described based on the above embodiments. The present invention is not limited to the above embodiments, and can be variously changed and modified within the spirit and scope of the present invention. </paragraph>
<paragraph id="P-0212" lvl="0"><number>&lsqb;0212&rsqb;</number> For example, the above embodiments have exemplified a dot code as an optically readable coded image. As the form of the coded image, various coded images can be employed in addition to the dot code. </paragraph>
<paragraph id="P-0213" lvl="0"><number>&lsqb;0213&rsqb;</number> In the seventh and eighth embodiments, the script file <highlight><bold>26</bold></highlight> and source file <highlight><bold>84</bold></highlight> may be set on a server where they can be acquired via a network including the Internet or in a hard disk, CD-ROM, or another accessible memory. Only address information of the script file <highlight><bold>26</bold></highlight> and source file <highlight><bold>84</bold></highlight> on the server or memory may be recorded on the coded image <highlight><bold>22</bold></highlight>. Then, the same processing as that described in the seventh or eighth embodiment may be performed. As the address information, a URL or URI (Uniform Resource Identifier) may be recorded. Alternatively, a numerical value corresponding to the URL or URI may be recorded. The same processing as that described in the seventh or eighth embodiment may be done by referring to a table representing the correspondence between the URL or URI and the numerical value set on the network or in the memory such as a CD-ROM or hard disk. </paragraph>
<paragraph id="P-0214" lvl="0"><number>&lsqb;0214&rsqb;</number> Additional advantages and modifications will readily occur to those skilled in the art. Therefore, the invention in its broader aspects is not limited to the specific details, representative devices, and illustrated examples shown and described herein. Accordingly, various modifications may be made without departing from the spirit or scope of the general inventive concept as defined by the appended claims and their equivalents. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. An information recording medium comprising: 
<claim-text>a portion where a visually recognizable image directly read by a human eye is recorded; and </claim-text>
<claim-text>a portion where digital information is recorded as an optically readable coded image obtained by encoding the digital information, </claim-text>
<claim-text>wherein the digital information contains a script to designate an object associated with an information processing apparatus which processes digital information obtained by optically reading and decoding the coded image and to perform at least one of processing and control. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A medium according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the digital information contains the script in a file form. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A medium according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the object includes a data file. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A medium according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the object includes a program. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A medium according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the object includes at least one of an internal device of the information processing apparatus and an external device connected to the information processing apparatus. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A medium according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the digital information further contains data used for the at least one of processing and control. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A medium according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the script is so described as to acquire predetermined information from the object in order to perform the at least one of processing and control for the designated object. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A medium according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the visually recognizable image includes at least one of a symbolic illustration representing a content and an explanation using texts of the content for each content of the at least one of processing and control. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A medium according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the coded image can be manually read. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A medium according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein 
<claim-text>the coded image is formed by arraying a plurality of blocks, and </claim-text>
<claim-text>each block includes: 
<claim-text>a data dot pattern on which dots are arrayed in correspondence with the digital information; </claim-text>
<claim-text>a marker to search for a reading reference point of each dot on the data dot pattern; and </claim-text>
<claim-text>a block address pattern to identify each block. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. An information processing method comprising: 
<claim-text>obtaining a script by optically reading an optically readable coded image from an information recording medium which includes a portion where digital information is recorded as the optically readable coded image obtained by encoding the digital information, the digital information containing the script to designate an object associated with an information processing apparatus which processes digital information obtained by optically reading and decoding the coded image and to perform at least one of processing and control; and </claim-text>
<claim-text>analyzing the obtained script and performing the at least one of processing and control. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the digital information contains the script in a file form. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the object includes a data file. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the object includes a program. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the object includes at least one of an internal device of the information processing apparatus and an external device connected to the information processing apparatus. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the digital information further contains data used for the at least one of processing and control. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the script is so described as to acquire predetermined information from the object in order to perform the at least one of processing and control for the designated object. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the coded image can be manually read. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein 
<claim-text>the coded image is formed by arraying a plurality of blocks, and </claim-text>
<claim-text>each block includes: 
<claim-text>a data dot pattern on which dots are arrayed in correspondence with the digital information; </claim-text>
<claim-text>a marker to search for a reading reference point of each dot on the data dot pattern; and </claim-text>
<claim-text>a block address pattern to identify each block. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. An information processing apparatus comprising: 
<claim-text>a reader which optically reads an optically readable coded image from an information recording medium which includes a portion where digital information is recorded as the optically readable coded image obtained by encoding the digital information, the digital information containing a script to designate an object associated with said information processing apparatus which processes digital information obtained by optically reading and decoding the coded image and to perform at least one of processing and control; </claim-text>
<claim-text>a decoder which obtains an original script from the coded image read by said reader; and </claim-text>
<claim-text>an information processor which analyzes the script obtained by said decoder and performs the at least one of processing and control. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the digital information contains the script in a file form. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the object includes a data file. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the object includes a program. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the object includes at least one of an internal device of said information processing apparatus and an external device connected to said information processing apparatus. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the digital information further contains data used for the at least one of processing and control. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the script is so described as to acquire predetermined information from the object in order to perform the at least one of processing and control for the designated object. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein said information processing apparatus is constituted integrally with said reader to optically read the coded image. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein said information processing apparatus is constituted separately from said reader to optically read the coded image. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the coded image can be manually read. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, wherein 
<claim-text>the coded image is formed by arraying a plurality of blocks, and </claim-text>
<claim-text>each block includes: 
<claim-text>a data dot pattern on which dots are arrayed in correspondence with the digital information; </claim-text>
<claim-text>a marker to search for a reading reference point of each dot on the data dot pattern; and </claim-text>
<claim-text>a block address pattern to identify each block. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. A program to cause a computer to realize following functions, comprising: 
<claim-text>a function of obtaining a script by optically reading an optically readable coded image from an information recording medium which includes a portion where digital information is recorded as the optically readable coded image obtained by encoding the digital information, the digital information containing the script to designate an object associated with an information processing apparatus which processes digital information obtained by optically reading and decoding the coded image and to perform at least one of processing and control; and </claim-text>
<claim-text>a function of analyzing the obtained script and performing the at least one of processing and control. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. A program according to <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein the digital information contains the script in a file form. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. A program according to <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein the object includes a data file. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. A program according to <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein the object includes a program. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. A program according to <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein the object includes at least one of an internal device of the information processing apparatus and an external device connected to the information processing apparatus. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. A program according to <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein the digital information further contains data used for the at least one of processing and control. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. A program according to <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein the script is so described as to acquire predetermined information from the object in order to perform the at least one of processing and control for the designated object. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. A program according to <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein the coded image can be manually read. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. A program according to <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein 
<claim-text>the coded image is formed by arraying a plurality of blocks, and each block includes: 
<claim-text>a data dot pattern on which dots are arrayed in correspondence with the digital information; </claim-text>
<claim-text>a marker to search for a reading reference point of each dot on the data dot pattern; and </claim-text>
<claim-text>a block address pattern to identify each block.</claim-text>
</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>5</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030001013A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030001013A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030001013A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030001013A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030001013A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030001013A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030001013A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030001013A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030001013A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030001013A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030001013A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030001013A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030001013A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030001013A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
