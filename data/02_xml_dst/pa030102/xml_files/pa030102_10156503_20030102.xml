<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005010A1-20030102-M00001.NB SYSTEM "US20030005010A1-20030102-M00001.NB" NDATA NB>
<!ENTITY US20030005010A1-20030102-M00001.TIF SYSTEM "US20030005010A1-20030102-M00001.TIF" NDATA TIF>
<!ENTITY US20030005010A1-20030102-M00002.NB SYSTEM "US20030005010A1-20030102-M00002.NB" NDATA NB>
<!ENTITY US20030005010A1-20030102-M00002.TIF SYSTEM "US20030005010A1-20030102-M00002.TIF" NDATA TIF>
<!ENTITY US20030005010A1-20030102-M00003.NB SYSTEM "US20030005010A1-20030102-M00003.NB" NDATA NB>
<!ENTITY US20030005010A1-20030102-M00003.TIF SYSTEM "US20030005010A1-20030102-M00003.TIF" NDATA TIF>
<!ENTITY US20030005010A1-20030102-M00004.NB SYSTEM "US20030005010A1-20030102-M00004.NB" NDATA NB>
<!ENTITY US20030005010A1-20030102-M00004.TIF SYSTEM "US20030005010A1-20030102-M00004.TIF" NDATA TIF>
<!ENTITY US20030005010A1-20030102-M00005.NB SYSTEM "US20030005010A1-20030102-M00005.NB" NDATA NB>
<!ENTITY US20030005010A1-20030102-M00005.TIF SYSTEM "US20030005010A1-20030102-M00005.TIF" NDATA TIF>
<!ENTITY US20030005010A1-20030102-M00006.NB SYSTEM "US20030005010A1-20030102-M00006.NB" NDATA NB>
<!ENTITY US20030005010A1-20030102-M00006.TIF SYSTEM "US20030005010A1-20030102-M00006.TIF" NDATA TIF>
<!ENTITY US20030005010A1-20030102-D00000.TIF SYSTEM "US20030005010A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005010A1-20030102-D00001.TIF SYSTEM "US20030005010A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005010A1-20030102-D00002.TIF SYSTEM "US20030005010A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005010A1-20030102-D00003.TIF SYSTEM "US20030005010A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005010A1-20030102-D00004.TIF SYSTEM "US20030005010A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005010A1-20030102-D00005.TIF SYSTEM "US20030005010A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005010A1-20030102-D00006.TIF SYSTEM "US20030005010A1-20030102-D00006.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005010</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10156503</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020529</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>708</class>
<subclass>403000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Efficient quantum computing operations</title-of-invention>
</technical-information>
<continuity-data>
<non-provisional-of-provisional>
<document-id>
<doc-number>60294089</doc-number>
<document-date>20010529</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Richard</given-name>
<family-name>Cleve</family-name>
</name>
<residence>
<residence-non-us>
<city>Calgary</city>
<country-code>CA</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>John</given-name>
<family-name>Watrous</family-name>
</name>
<residence>
<residence-non-us>
<city>Calgary</city>
<country-code>CA</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>Neifeld IP Law, PC</name-1>
<name-2></name-2>
<address>
<address-1>2001 Jefferson Davis Hwy, Suite 1001</address-1>
<city>Arlington</city>
<state>VA</state>
<postalcode>22202</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method for quantum computing, comprising creating an n qubit Fourier basis state of a n qubit computational basis state, generating multiple copies of the n qubit Fourier basis state in additional sets of n qubits, and estimating the phase of the Fourier basis state from the copies of the Fourier basis state. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> CROSS-REFERENCE TO RELATED APPLICATIONS </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This application claims priority under 35 USC 119(e) to U.S. provisional application serial No. 60/294,089, filed May 29, 2002.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The present invention relates to the field of computing and more particularly to quantum computing. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> 2. Description of the Background </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> In electronic circuits a gate is a digital logic operation embodied in a circuit having at least one digital input, or bit, and having one digital output, or bit, wherein the circuit generates a value of the output that depends upon the values of the inputs. The gate references the manipulation of the input bits to generate the value of the output bit. Measures of circuit efficiencies include speed of performing their operation and number of gates required to perform their operation. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The input size of a circuit means the number of bits that are in the input. The most common circuit input measurements are the depth of the circuit and the size of the circuit. The depth of the circuit relates to the highest number of gates that must be traversed by a signal before an answer is computed. The size of a circuit is the total number of gates in the whole circuit. For example, a circuit that computes simple addition of 2 n-bit binary integers has input size of 2 n. These values as functions allow predicting the size of a circuit as the input size varies. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> If a function that expresses the size of a circuit for computing a specified computation grows very quickly as the input size increases then that computation problem is only efficiently solvable for small inputs. Thus when comparing sizes of circuits as expressed by a function of the input size one compares their asymptotic growth, that is their growth as the input size approaches infinity. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> A circuit has polynomial size if the circuit has a size that is expressed as a polynomial of the input size. A circuit has logarithmic depth if the depth of the circuit is expressed as a logarithm of the input size. A special notation, called big-Oh (&ldquo;O&rdquo;) notation, is used to express functions, and thus circuit sizes or depths, in a way that only expresses the class of the function. For example, O(n<highlight><superscript>2</superscript></highlight>) is the class of functions whose size increases polynomially with increasing input size no faster than some constant coefficient times n<highlight><superscript>2. </superscript></highlight>This notation is more specific than just claiming polynomial size. Generally a circuit is considered efficient if it has polynomial size. In the current Invention, the primary concern is the depth of a circuit. The terminology of an efficient circuit here generally refers to the fact that its depth is either logarithmic or poly-logarithmic. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The same notations for describing circuit efficiency are used to describe the probability of error of a given circuit. The probability of error of a circuit may be expressed as a function of the circuit&apos;s input size. Probability of a circuit producing an error is denoted by an epsilon, &egr;. Exponentially small probability of error means that the probability of error is 1/&fnof;(n), where &fnof;(n) is in O(2<highlight><superscript>n</superscript></highlight>). Probability of error is 1/&fnof;(n), in a circuit design, is generally considered to be acceptable because errors caused by circuit malfunction or other problems exist with higher probabilities than this probability. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> Quantum computation or quantum information processing (QIP) has developed methods for using quantum information for computing. Quantum states are denoted with the ket symbol and written in the form &verbar;x&gt; where x represents a quantum wave function. A superposition defining a single qubit&apos;s state is written &verbar;x&gt;&equals;&agr;&verbar;0&gt;&plus;&bgr;&verbar;1&gt; where alpha and beta are complex number weighting coefficients. The sum alpha squared plus beta squared is normalized to one so that the probability of the observable quantity associated with &verbar;x&gt; is one. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> A problem implementing quantum circuits is data loss due to interaction of qubits with particles in the environment causing changes in the qubit&apos;s quantum mechanical state. The loss of qubit data due to interaction with the environment is named decoherance. Generally applicable methods for combatting decoherence exist. For instance, implementing quantum error correcting codes or decoherence free subsystems may reduce decoherence. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The present inventors recognized that minimizing depth of quantum circuits may speed up computation and reduce data loss by reducing time qubits in the circuit are exposed to interaction with the environment since increasing quantum circuit depth increases quantum computing time. Thus, the present inventors recognized that logarithmic or poly-logarithmnic depth circuits offer a great advantage over polynomial depth circuits. In classical computing, it is important to define what physical states correspond to a &ldquo;0&rdquo; or a &ldquo;1&rdquo; in a mathematical computation. Similarly, in quantum computing, it is important to define a computational basis. For a single qubit, the states &verbar;0&gt; and &verbar;1&gt;, representing the number 0 and 1 respectively. For n qubits, the computational basis is simply defined as the tensor product space of the individual qubits of the 2<highlight><superscript>n </superscript></highlight>possibilities from &verbar;00 . . . 0&gt;, &verbar;00 . . . 1&gt;, &verbar;00 . . . 10&gt; to &verbar;11111&gt;. For simplicity, when discussing an n-qubit register as a single entity, it is common to simply refer to the state of all zeroes &verbar;00 . . . 0&gt; as &verbar;0&gt;. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> Certain quantum computing mathematical operations, also called gates, are much like logical gates AND and NOT classical computing functions. Common quantum computing gates include the Hadamard gate. The Hadamard gate acts on a single qubit. The Hadamard gate converts the qubit state  
<math-cwu id="MATH-US-00001">
<number>1</number>
<math>
<mrow>
  <mrow>
    <mrow>
      <mrow>
        <mo>&LeftBracketingBar;</mo>
        <mn>0</mn>
      </mrow>
      <mo>&RightAngleBracket;</mo>
    </mrow>
    <mo>&it;</mo>
    <mstyle>
      <mtext>&emsp;</mtext>
    </mstyle>
    <mo>&it;</mo>
    <mstyle>
      <mtext>to</mtext>
    </mstyle>
    <mo>&it;</mo>
    <mstyle>
      <mtext>&emsp;</mtext>
    </mstyle>
    <mo>&it;</mo>
    <mfrac>
      <mn>1</mn>
      <msqrt>
        <mn>2</mn>
      </msqrt>
    </mfrac>
    <mo>&it;</mo>
    <mrow>
      <mrow>
        <mo>&LeftBracketingBar;</mo>
        <mn>0</mn>
      </mrow>
      <mo>&RightAngleBracket;</mo>
    </mrow>
  </mrow>
  <mo>+</mo>
  <mrow>
    <mrow>
      <mfrac>
        <mn>1</mn>
        <msqrt>
          <mn>2</mn>
        </msqrt>
      </mfrac>
      <mo>&it;</mo>
      <mrow>
        <mo>&LeftBracketingBar;</mo>
        <mn>1</mn>
      </mrow>
    </mrow>
    <mo>&RightAngleBracket;</mo>
  </mrow>
</mrow>
</math>
<mathematica-file id="MATHEMATICA-00001" file="US20030005010A1-20030102-M00001.NB"/>
<image id="EMI-M00001" wi="216.027" he="19.93005" file="US20030005010A1-20030102-M00001.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0015" lvl="7"><number>&lsqb;0015&rsqb;</number> converts the qubit state  
<math-cwu id="MATH-US-00002">
<number>2</number>
<math>
<mrow>
  <mrow>
    <mrow>
      <mrow>
        <mo>&LeftBracketingBar;</mo>
        <mn>1</mn>
      </mrow>
      <mo>&RightAngleBracket;</mo>
    </mrow>
    <mo>&it;</mo>
    <mstyle>
      <mtext>&emsp;</mtext>
    </mstyle>
    <mo>&it;</mo>
    <mstyle>
      <mtext>to</mtext>
    </mstyle>
    <mo>&it;</mo>
    <mstyle>
      <mtext>&emsp;</mtext>
    </mstyle>
    <mo>&it;</mo>
    <mfrac>
      <mn>1</mn>
      <msqrt>
        <mn>2</mn>
      </msqrt>
    </mfrac>
    <mo>&it;</mo>
    <mrow>
      <mrow>
        <mo>&LeftBracketingBar;</mo>
        <mn>0</mn>
      </mrow>
      <mo>&RightAngleBracket;</mo>
    </mrow>
  </mrow>
  <mo>-</mo>
  <mrow>
    <mrow>
      <mrow>
        <mfrac>
          <mn>1</mn>
          <msqrt>
            <mn>2</mn>
          </msqrt>
        </mfrac>
        <mo>&it;</mo>
        <mrow>
          <mo>&LeftBracketingBar;</mo>
          <mn>1</mn>
        </mrow>
      </mrow>
      <mo>&RightAngleBracket;</mo>
    </mrow>
    <mo>.</mo>
  </mrow>
</mrow>
</math>
<mathematica-file id="MATHEMATICA-00002" file="US20030005010A1-20030102-M00002.NB"/>
<image id="EMI-M00002" wi="216.027" he="19.93005" file="US20030005010A1-20030102-M00002.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0016" lvl="7"><number>&lsqb;0016&rsqb;</number> Another common gate is the quantum controlled-NOT gate, which acts in some ways as the classical XOR. The quantum controlled-NOT gate acts on two qubits, a control qubit and a qubit to be negated. If the control qubit is in state &verbar;1&gt; then the second qubit is negated, otherwise nothing occurs. If the second qubit is initially &verbar;0&gt;, then this gate will XOR the state of the control qubit onto the second bit. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Another common two-qubit gate is the controlled phase shift gate, sometimes referred to as &ldquo;the controlled &thgr;&rdquo; gate. The controlled &thgr; gate maps &verbar;x&gt;&verbar;y&gt; to e<highlight><superscript>i&thgr;xy </superscript></highlight>&verbar;x&gt;&verbar;y&gt;. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> All quantum computing operations ma) be composed of combinations of quantum one bit gates and quantum two bit controlled-NOT gates, and those gates have been realized in physical systems, such as quantum computing NMR systems. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The discrete Fourier transformation is referred to herein after as DFT. DFT is a mathematical mapping from one finite set of complex numbers to another set of complex numbers of similar size. DFT is defined by the following equation for two sets of complex numbers (&agr;<highlight><subscript>0</subscript></highlight>, &agr;<highlight><subscript>1</subscript></highlight>, . . . &agr;<highlight><subscript>m-1</subscript></highlight>), and (&bgr;<highlight><subscript>0</subscript></highlight>,&bgr;<highlight><subscript>1</subscript></highlight>, . . . &bgr;<highlight><subscript>m-1</subscript></highlight>) where  
<math-cwu id="MATH-US-00003">
<number>3</number>
<math>
<mrow>
  <msub>
    <mi>&beta;</mi>
    <mi>x</mi>
  </msub>
  <mo>=</mo>
  <mrow>
    <mfrac>
      <mn>1</mn>
      <msqrt>
        <mi>m</mi>
      </msqrt>
    </mfrac>
    <mo>&it;</mo>
    <mrow>
      <munderover>
        <mo>&Sum;</mo>
        <mrow>
          <mi>y</mi>
          <mo>=</mo>
          <mn>0</mn>
        </mrow>
        <mrow>
          <mi>m</mi>
          <mo>-</mo>
          <mn>1</mn>
        </mrow>
      </munderover>
      <mo>&it;</mo>
      <mrow>
        <msup>
          <mrow>
            <mo>(</mo>
            <msup>
              <mi>&ee;</mi>
              <mrow>
                <mn>2</mn>
                <mo>&it;</mo>
                <mrow>
                  <mi>Ih</mi>
                  <mo>/</mo>
                  <mi>m</mi>
                </mrow>
              </mrow>
            </msup>
            <mo>)</mo>
          </mrow>
          <mrow>
            <mi>x</mi>
            <mo>&CenterDot;</mo>
            <mi>y</mi>
          </mrow>
        </msup>
        <mo>&it;</mo>
        <msub>
          <mi>&alpha;</mi>
          <mi>y</mi>
        </msub>
      </mrow>
    </mrow>
  </mrow>
</mrow>
</math>
<mathematica-file id="MATHEMATICA-00003" file="US20030005010A1-20030102-M00003.NB"/>
<image id="EMI-M00003" wi="216.027" he="25.9119" file="US20030005010A1-20030102-M00003.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0020" lvl="7"><number>&lsqb;0020&rsqb;</number> DFT can be computed with depth O(mlogm) by the fast Fourier transform. DFT has many useful applications because of its computational efficiency expressed by its low order depth. The efficiency of the DFT is one of the most important algorithms in classical computing. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Application of the DFT to transform the amplitudes of particular qubits or collections of qubits in quantum circuits is called the Quantum Fourier Transformation, referred to herein after as the QFT. Current methods for performing exact or approximate QFT on n qubits have polynomial depth. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> QFT already has many applications in quantum computing, such as algorithms of Shor to efficiently compute discrete logarithms and factor numbers. See Shor, &ldquo;Polynomial-Time Algorithms for Prime Factorization and Discrete Logarithms on a Quantum Computer&rdquo; SIAM Journal of Computing, Volume 26, Number 5, pages 1484-1509 (1997) and D. Boneh and R. J. Lipton, &ldquo;Advances in Cryptology: Proceedings of Crypto&apos;95&rdquo;, Lecture Notes in Computer Science, Vol., 963, 424 (1995). Current RSA cryptography systems make use of the assumption that factoring large numbers is generally a computationally time intensive task for large integers. Shor&apos;s algorithm contravenes that assumption. Therefore, current cryptography systems are no longer secure. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> A computational basis state of size n is defined to be a state &verbar;x&gt; representing an arbitrary n-bit binary number. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> A Fourier basis state for a computational basis state is the QFT of the computational basis state. Thus, the &verbar;Px&gt; is the QFT of the computational basis state &verbar;x&gt;, which means that &verbar;Px&gt; is the result of applying the QFT to &verbar;x&gt;. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The paper, Cleve and Watrous, &ldquo;Fast parallel circuits for the quantum Fourier transform&rdquo; in Proceedings of the 41st Annual IEEE Symposium on Foundations of Computer Science (FOCS &apos;00), pages 526-536 (2000), is incorporated herein by reference. Universal quantum gates and universal quantum computers are disclosed in &ldquo;Elementary gates for quantum computation&rdquo; Barenco, Bennett, Cleve, DiVincenzo, Margolus, Shor, Sleator, Smolin, and Weinfuirter, Physical Review A, Volume 52, Number 5, pages 3457-3467 (1995), which is incorporated herein by reference. Quantum gates designed to avoid erroneous data caused by decoherence are disclosed in Gottesman, &ldquo;Stabilizer Codes and Quantum Error Correction&rdquo; http://xxx.lanl.gov/abs/quant-ph/9705052, which is incorporated herein by reference. </paragraph>
<paragraph id="P-0026" lvl="7"><number>&lsqb;0026&rsqb;</number> Quantum computing with local gates and models for scaling quantum computing are disclosed in Fault-Tolerant Quantum Computation with Local Gates&rdquo;, D. Gottesman http://xxx.lanl.gov/abs/quant-ph/9903099 and &ldquo;Efficient Linear Optics Quantum Computation&rdquo; by Knill, Laflamme and Milburn, http://xxx.lanl.gov/abs/quant-ph/0006088, Braunstein and Lo, &ldquo;Scalable Quantum Computers&rdquo; (2000), which are incorporated herein by reference. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The quantum operations defined herein below are physical operations performed on quantum states of the qubits defining a data processing component of a quantum computing circuit. Quantum computing circuits include sets of universal quantum gates. A universal quantum gate is a fundamental logical building block from which any quantum circuit can be embodied. Universal quantum gates have been successfully implemented in a 7 qubit quantum computer to factor the number 15. That computer employed nuclear spin &frac12; moments as qubits, and employed nuclear magnetic resonance technology to perform operations on those qubits analogous to classical gates to factor the number 15. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> It is an object of the invention to provide systems and methods for efficient quantum computing. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> It is another object of the invention to provide systems and methods for efficiently performing QFT. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> It is another object of the invention to provide systems and methods for efficiently performing QFT for state spaces of dimension 2<highlight><superscript>n</superscript></highlight>. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> It is another object of the invention to provide systems and methods for efficiently performing QFT for state spaces of arbitrary dimension. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> In one aspect, the invention provides a system and method for quantum computing, comprising (1) creating an n qubit Fourier basis state of a n qubit computational basis state, (2) generating multiple copies of the n qubit Fourier basis state in additional sets of n qubits, and (3) estimating the phase of the Fourier basis state from the copies of the Fourier basis state. Additional aspects of this invention include erasing the computational basis state from the b qubits whose values represent the computational basis state; and erasing said multiple copies of the n qubit Fourier basis state. In additional aspects, this invention provides a system and method for estimating the phase x of a quantum state using a quantum circuit and multiple copies of a Fourier state&verbar;Px&gt; of modulus m, said method comprising simulating measurements on multiple copies of a state; obtaining an approximation to the fractional part of 2<highlight><superscript>&minus;h </superscript></highlight>x for each j; reconstructing an approximation &tilde;x to x wherein a depth of the quantum circuit is O(Polynomial(log(log m))). </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> In another aspect, the invention provides a system and method for performing QFT for a modulus m, comprising creating a Fourier basis state &verbar;Px&gt; of a computational basis state x; multiply copying the Fourier basis state; erasing the computational basis state by estimating the phase of the Fourier basis state; reversing the multiply copying operation; and wherein the depth of the circuit is O(Polynomial(log log m)). In additional aspects, this invention provides a system and method where m&equals;2<highlight><superscript>n </superscript></highlight>for a positive integer n; simulating measurements on multiple copies of a state; wherein said estimating the phase of the Fourier basis state comprises simulating measurements on multiple copies of a state. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> In another aspect, the invention provides a system and method for performing Fourier transformation with respect to a modulus m where m&equals;m<highlight><subscript>1</subscript></highlight>m<highlight><subscript>2 </subscript></highlight>. . . m<highlight><subscript>k </subscript></highlight>for m<highlight><subscript>i </subscript></highlight>pair wise relatively prime and m<highlight><subscript>j </subscript></highlight>in O(log m) of a computational basis state &verbar;x&gt;, comprising storing a modular representation of &verbar;x&gt; defined by the following transformation: </paragraph>
<paragraph lvl="0"><in-line-formula>&verbar;x&gt;&verbar;0,0, . . . , 0&gt; to &verbar;0&gt;<highlight><bold>51</bold></highlight> xmod m<highlight><subscript>1</subscript></highlight>&gt;, &verbar;xmod m<highlight><subscript>2</subscript></highlight>&gt;, . . . , &verbar;xmod m<highlight><subscript>k</subscript></highlight>&gt;, </in-line-formula></paragraph>
<paragraph id="P-0035" lvl="7"><number>&lsqb;0035&rsqb;</number> where m<highlight><subscript>i </subscript></highlight>for 1&equals;1 to k are pair wise relatively prime integers in O(logm) such that modulus m&equals;m<highlight><subscript>1</subscript></highlight>m<highlight><subscript>2 </subscript></highlight>. . . m<highlight><subscript>k </subscript></highlight>multiplies each S<highlight><bold>1002</bold></highlight><highlight><italic>i </italic></highlight>by an integer, g<highlight><subscript>i</subscript></highlight>; and computing the QFT modulus m<highlight><subscript>i </subscript></highlight>in logarithmic depth. Additional aspects of this invention include applying Fourier Transform to each component m<highlight><subscript>i</subscript></highlight>; wherein a depth of the operation is O(Polynomial(log(log m))). </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> In yet another aspect, the invention provides a system and method for factoring a large integer m or solving a hidden linear form problem of input size of order log(m) bits comprising classical pre-processing; quantum computing comprising: (1) creating an n qubit Fourier basis state of a n qubit computational basis state, and (2) generating multiple copies of the n qubit Fourier basis state in additional sets of n qubits, and (3) estimating the phase of the Fourier basis state from the copies of the Fourier basis state; and classical post-processing. An additional aspect of this invention that operations are of depth O(Polynominal(log log m)). </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> These and other objects of the invention are also provided by a system and method for estimating the phase of a quantum state including means for generating multiple copies of a Fourier transform of the quantum state. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> One method of the invention comprises five steps. First, quantum gates are manipulated to create a Fourier basis state from a computational basis state. Second, the Fourier basis state is copied multiple times. Third, the phase of the Fourier basis state is estimated from the Fourier basis states. Fourth, the estimated phase is used to erase the computational basis state from the input qubits. Fifth, the copies of the Fourier basis state are erased by a reverse of the operation that copied them. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Systems defining qubits include spin Y&frac12; particles whose quantized property can be measured and manipulated by external stimuli and means for providing the external stimuli. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> One example of a qubit includes spin &frac12; nuclei and equipment designed to generate nuclear magnetic resonance in the nuclei to change and measure the spin state of the nuclei. A more specific example is an organic molecule that provide different local fields at different molecular Carbon nuclei sites in the molecule. The nuclear moment of C<highlight><superscript>13 </superscript></highlight>is sensitive to local fields. Fabricating such an organic molecule with the isotope C<highlight><superscript>13 </superscript></highlight>in different molecular carbon sites in the molecule provides different resonance frequencies for nuclear magnetically resonating the C<highlight><superscript>13 </superscript></highlight>nuclei, depending upon the molecular position of the C<highlight><superscript>13 </superscript></highlight>atoms, thereby enabling the different sites to be used as a distinct qubits. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Another example of a qubit is a superconducting current loop maintained between two quantized current states (the so-called flux states in the quantum computing community), and a device to measure the current and to apply magnetic fields in the neighborhood of the loop to change and measure the current in the loop. Applied magnetic fields may change the state of the loop by changing the (relative energy difference and the height of the tunneling barrier between the two flux states in the) Hamiltonian of the superconducting current loop in a well-controlled time-dependent manner. The state of the superconducting loop may be measured by, for example, a separate DC-SQUID that acts as a magnetometer. Other designs for superconducting qubits include using charge eigenstates or a combination or superposition of flux/charge states as qubits. In one recent work, the measured quality factor of quantum coherence is reported to be about 25,000, which is sufficiently high that solid-state quantum computers based on this type of circuits would have utility. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> Another example of a qubit is an ion trap in which quantum information is stored and processed in the internal states of trapped ions and/or collective vibrational modes of the trapped ions. Ions are cooled by various laser cooling and evaporation cooling techniques and then trapped by possibly time-dependent electromagnetic fields in a mesoscopic area. Trapped ions and means for exciting those ions (such as laser pulses) may, therefore be used for quantum computing. The presence or absence of fluorescence can be used for detection and the output of such a quantum information processor. Quantum correlations, also called entanglement, between trapped ions have recently been experimentally observed. The power of decoherence free subsystems in reducing decoherence has been experimentally demonstrated in ion traps. There are also proposals for the transfer of ions between a network of ion traps. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> Another example of qubits are cavity quantum electro-dynamics where quantum information is stored and processed in cavity electromagnetic modes or internal states of atoms traversing the cavity. Cavity quantum electro-dynamics include excitation sources for exciting the modes or molecules such as lasers and microwave sources coupled to the cavity and detection sources such as power meters or photon counters. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> Other examples of qubits include quantum dots, linear quantum optics plus single photon detectors, neutral atoms in optical lattices, electrons flowing on Helium, surface acoustic waves and silicon-based proposals. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The present invention also includes a method for computing Shor&apos;s quantum factoring algorithm with a combination of logarithmic depth quantum circuits, and polynomial depth classical circuits. This method first randomly chooses an integer and checks if it shares any factors with the integer to be factored. Failing this it proceeds onto the quantum portion of the process that determines information about the order of the random integer in Z_N (i.e., Z with A subscript N, which is a ring of numbers from 0 to N-1 under standard addition and multiplication modulo N and the periodicity refers to the standard multiplication operation modulo N) by using the QFT. This is followed by classical implementation of the continued fractions algorithm and some post-processing to complete the process. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The present invention also provides a method that is a parallelization of Shor&apos;s mixed radix method for computing the QFT. This method is quite similar to Shor&apos;s method, but parallelizes particular steps so that the entire method runs in logarithmic depth.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE FIGURES </heading>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Embodiments of the invention are described in connection with the following figures and their descriptions. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is an exemplary representation of quantum operations for calculating QFT for modulo 2<highlight><superscript>n</superscript></highlight>; </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is an exemplary representation of operations forming element <highlight><bold>5002</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, which is the Fourier state computation for modulo 2<highlight><superscript>n</superscript></highlight>; </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is an exemplary representation of operations forming element <highlight><bold>5004</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, which is the Fourier state reproducer operation; </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is an exemplary representation of operations forming element <highlight><bold>5006</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, which is the Fourier phase estimator operation; </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a representation of one preferred embodiment of QFT computation for arbitrary modulus; </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a representation of one preferred embodiment of Shor&apos;s quantum factoring algorithm with logarithmic depth quantum circuits; </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a representation of one preferred embodiment of Shor&apos;s mixed-radix method for the quantum Fourier transform with logarithmic depth circuits for arbitrary modulus; and </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a schematic view of a quantum computer. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>7</bold></highlight> represent time evolution of qubits in a physical system forming the data processing unit of a quantum computer. In FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>7</bold></highlight>, time increases from left to right. In FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>7</bold></highlight>, each horizontal line represents the information content of the spin states of a spin &frac12; particle, a qubit of the data processing unit. Rectangles represent physical operations performed on the qubits whose lines intersect the rectangle. In FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>7</bold></highlight>, numbers in the range <highlight><bold>0</bold></highlight>-<highlight><bold>40</bold></highlight> label sequential times. In FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>7</bold></highlight>, numbers in the range <highlight><bold>1000</bold></highlight> to <highlight><bold>1010</bold></highlight> label sets of approximately equal numbers, n, of qubits. In FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>7</bold></highlight>, numbers in the range <highlight><bold>5000</bold></highlight>-<highlight><bold>5032</bold></highlight> label rectangles representing physical operations on qubits. Numbers representing inverses of a physical operation have an &ldquo;I&rdquo; suffix. An inverse of a quantum operation requires the same depth and size as the operation. Modulus 2<highlight><superscript>n </superscript></highlight>herein refers indirectly to the fact that there are 2<highlight><superscript>n </superscript></highlight>basis states necessary to describe the state of n spin &frac12; particles </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> represents computing a QFT modulo 2<highlight><superscript>n </superscript></highlight>of an initial basis state &verbar;x&gt;. <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a time sequence in which arrow <highlight><bold>2</bold></highlight> indicates direction of increasing time. In the time sequence, dashed lines <highlight><bold>00</bold></highlight>, <highlight><bold>10</bold></highlight>, <highlight><bold>20</bold></highlight>, <highlight><bold>30</bold></highlight>, <highlight><bold>40</bold></highlight> are specified times. Each horizontal line represents the quantum state as a function of time of a spin &frac12; particle. Each dot <highlight><bold>4</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>4</bold></highlight><highlight><italic>b</italic></highlight>, <highlight><bold>4</bold></highlight><highlight><italic>c </italic></highlight>represents additional quantum states of additional spin &frac12; particles. Boxes <highlight><bold>5002</bold></highlight>, <highlight><bold>5004</bold></highlight>, and <highlight><bold>5006</bold></highlight> each represent operations involving a plurality of spin l particles. The spin &frac12; particles involved in an operation represented by each box <highlight><bold>5002</bold></highlight>, <highlight><bold>5004</bold></highlight>, <highlight><bold>5006</bold></highlight>, are the spin &frac12; particles the representative lines for which intersect that box. Elements <highlight><bold>1000</bold></highlight>, <highlight><bold>1002</bold></highlight>, <highlight><bold>1004</bold></highlight>.<highlight><bold>1</bold></highlight>, . . . , <highlight><bold>1004</bold></highlight>.M each represent the quantum states of a set of n qubits, often referred to herein below preceded by a &ldquo;Q&rdquo; to denote that they each represent sets of qubits. As shown, element Q<highlight><bold>1000</bold></highlight> represents a set of quantum states including states of particles represented by horizontal lines and dots <highlight><bold>4</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>4</bold></highlight><highlight><italic>b</italic></highlight>, <highlight><bold>4</bold></highlight><highlight><italic>c</italic></highlight>. Each set of three dots adjacent each one of quantum states of sets of qubits Q<highlight><bold>1000</bold></highlight>, Q<highlight><bold>1002</bold></highlight>, Q<highlight><bold>1004</bold></highlight>.<highlight><bold>1</bold></highlight>, . . . Q<highlight><bold>1004</bold></highlight>.M represent that fact that each of those elements includes n qubits. M is O(logn). Q<highlight><bold>1004</bold></highlight>.<highlight><bold>1</bold></highlight> . . . Q<highlight><bold>1004</bold></highlight>.M are referred to herein below as ancilla qubits. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> QFT <highlight><bold>5000</bold></highlight> represents the result of operations <highlight><bold>5002</bold></highlight>, <highlight><bold>5004</bold></highlight>, <highlight><bold>5006</bold></highlight>, and <highlight><bold>5004</bold></highlight>I in the time sequence shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> An evolution operator in quantum mechanics is linear. Therefore, to specify the action of an evolution operator on a general state, it is sufficient to specify its action on the computational basis &verbar;x&gt; and extend such an action by linearity. The fact that an evolution operator U is a linear operator acting on a Hilbert space H means that U (alpha &verbar;a&gt;&plus;beta&verbar;b&gt;)&equals;alpha (U&verbar;a&gt;)&plus;beta (U&verbar;b) ) for all complex values of alpha and beta and for all vectors &verbar;a&gt; and &verbar;b&gt; in H. For this reason, to define a linear operator U in a Hilbert space H, one only needs to specify the resulting states U&verbar;u<highlight><subscript>13 </subscript></highlight>i&gt;&apos;s for a basis &verbar;u_i&gt;&apos;s in the Hilbert space, H. In the context of quantum computing, it is often convenient to pick &verbar;u_i&gt;&apos;s as a computational basis in H. Consider at time t&equals;00: qubits Q<highlight><bold>1000</bold></highlight> have been initialized to be in a computational basis state, &verbar;x&gt;, qubits <highlight><bold>1002</bold></highlight> have been set to an initial state &verbar;0&gt;, and qubits Q<highlight><bold>1004</bold></highlight><highlight><italic>i </italic></highlight>for i&equals;1 to n have each been initialized to the initial state &verbar;0&gt;. &verbar;x&gt; contains n qubits, and it can therefore represent a predetermined number from 1 to2<highlight><superscript>n </superscript></highlight>(or any predetermined one of n values in some representation). The states &verbar;0&gt; is defined in the chosen representation to represent numeric zero. Thus, at t&equals;00, Q<highlight><bold>1000</bold></highlight>&equals;&verbar;x&gt;, and Q<highlight><bold>1002</bold></highlight> and Q<highlight><bold>1004</bold></highlight><highlight><italic>i </italic></highlight>each equal &verbar;0&gt;. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>: operation <highlight><bold>5002</bold></highlight> is applied at time between <highlight><bold>00</bold></highlight> and <highlight><bold>10</bold></highlight> to qubit sets Q<highlight><bold>1000</bold></highlight> and Q<highlight><bold>1002</bold></highlight>; operation <highlight><bold>5004</bold></highlight> is applied at time between <highlight><bold>10</bold></highlight> and <highlight><bold>20</bold></highlight> to qubit sets Q<highlight><bold>1002</bold></highlight>, Q<highlight><bold>1004</bold></highlight>.<highlight><bold>1</bold></highlight>, . . . Q<highlight><bold>1004</bold></highlight>.M; operation <highlight><bold>5006</bold></highlight> is applied at time between <highlight><bold>20</bold></highlight> and <highlight><bold>30</bold></highlight> to qubit sets Q<highlight><bold>1000</bold></highlight>, Q<highlight><bold>1002</bold></highlight>, Q<highlight><bold>1004</bold></highlight>.<highlight><bold>1</bold></highlight> . . . Q<highlight><bold>1004</bold></highlight>.M; and operation <highlight><bold>5004</bold></highlight>I is applied at time between <highlight><bold>30</bold></highlight> and <highlight><bold>40</bold></highlight> to qubit sets Q<highlight><bold>1002</bold></highlight>, Q<highlight><bold>1004</bold></highlight>.<highlight><bold>1</bold></highlight> . . . <highlight><bold>1004</bold></highlight>.M. M is in O(logn), since O(nlogn) ancilla qubits <highlight><bold>1004</bold></highlight> . . . <highlight><bold>1004</bold></highlight>.M are needed as extra workspace for the implementation of the QFT algorithm disclosed herein to efficiently provided exponentially small errors in the QFT output. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Operation <highlight><bold>5002</bold></highlight> is applied to Q<highlight><bold>1000</bold></highlight> and Q<highlight><bold>1002</bold></highlight>. Operation <highlight><bold>5002</bold></highlight> converts qubits Q<highlight><bold>1002</bold></highlight> to the Fourier basis state, &verbar;Px&gt; (also referred to herein as &verbar;&PSgr;x), leaving Q<highlight><bold>1000</bold></highlight>&equals;&verbar;x&gt;, and Q<highlight><bold>1004</bold></highlight>&equals;&verbar;0&gt;. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> Operation <highlight><bold>5004</bold></highlight> is applied to Q<highlight><bold>1002</bold></highlight> and Q<highlight><bold>10041</bold></highlight> . . . Q<highlight><bold>1004</bold></highlight>M. Operation <highlight><bold>5004</bold></highlight> copies &verbar;Px&gt; from Q<highlight><bold>1002</bold></highlight> to each Q<highlight><bold>1004</bold></highlight><highlight><italic>i</italic></highlight>. Operation <highlight><bold>5004</bold></highlight> leaves Q<highlight><bold>1000</bold></highlight>&equals;&verbar;x&gt; and Q<highlight><bold>1002</bold></highlight>&equals;&verbar;Px&gt;. We name operation <highlight><bold>5004</bold></highlight> the Fourier state reproducer operation. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> Operation <highlight><bold>5006</bold></highlight> gives an estimate of the value of x from a finite number of copies of the state &verbar;Px&gt;. An error may occur in such an estimation. An error as defined herein refers to an event in the context of classical probability theory in which the estimated value of x is different from the actual value of x. Different types of errors mean different events corresponding to the different estimated values of x. In quantum mechanics, the total error probability is the sum of the error probabilities of all possible types of errors and is given by a sum of the squared amplitude for all possible types of errors. Now, O(log (n/epsilon)) copies of &verbar;Px&gt; are needed to ensure that the total error probability is at most epsilon. In other words, the number of copies of &verbar;Px&gt; must grow at least logarithmically with n, for any fixed bound, epsilon, on the total error probability. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Operation <highlight><bold>5006</bold></highlight> acts on all qubits. Operation <highlight><bold>5006</bold></highlight> with high probability erases the initial basis state from Q<highlight><bold>1000</bold></highlight> placing Q<highlight><bold>1000</bold></highlight> in &verbar;0&gt;, leaving Q<highlight><bold>1002</bold></highlight> and each Q<highlight><bold>1004</bold></highlight><highlight><italic>i </italic></highlight>in &verbar;Px&gt;. As discussed in the preceding paragraph, O(logn) copies of &verbar;Px&gt; are used by operation <highlight><bold>5006</bold></highlight> to ensure that the error probability is bounded by some small epsilon. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> By definition, the inverse of an operation applied immediately after the application of the operation places a set of quantum states upon which the operation acts in the same state in which the set of quantum states existed immediately prior to the operation. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> Operation <highlight><bold>5004</bold></highlight>I represents an operation that is the inverse of operation <highlight><bold>5004</bold></highlight>. Operation <highlight><bold>5004</bold></highlight>I changes each Q<highlight><bold>1004</bold></highlight><highlight><italic>i </italic></highlight>from &verbar;Px&gt; to &verbar;0&gt;, and it leaves Q<highlight><bold>1000</bold></highlight> in &verbar;0&gt; and Q<highlight><bold>1002</bold></highlight> in &verbar;Px&gt;. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> The useful data output for QFT <highlight><bold>5000</bold></highlight> consists of the value represented by the state &verbar;Px&gt; of the n qubits Q<highlight><bold>1002</bold></highlight>. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> The QFT method of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> results with high probability in the Fourier basis state &verbar;Px&gt; (Fourier basis state having phase x) of the computational basis state &verbar;x&gt; stored in qubits <highlight><bold>1002</bold></highlight> and all the qubits <highlight><bold>1004</bold></highlight> . . . <highlight><bold>1004</bold></highlight>.M in the state in which they started, denoted &verbar;0&gt;. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> Operations <highlight><bold>5002</bold></highlight>, <highlight><bold>5004</bold></highlight>, and <highlight><bold>5006</bold></highlight> are each poly-logarithmic depth quantum circuits, as shown below. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows details of operation <highlight><bold>5002</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows times <highlight><bold>02</bold></highlight>, <highlight><bold>04</bold></highlight>, <highlight><bold>06</bold></highlight>, and <highlight><bold>08</bold></highlight>, and operations <highlight><bold>5010</bold></highlight>, <highlight><bold>5012</bold></highlight>.<highlight><bold>1</bold></highlight> . . . <highlight><bold>5012</bold></highlight>.<highlight><italic>n</italic></highlight>, and <highlight><bold>5010</bold></highlight>I. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, operation <highlight><bold>5010</bold></highlight> operates on Q<highlight><bold>1000</bold></highlight> and Q<highlight><bold>1006</bold></highlight>.<highlight><bold>1</bold></highlight>, . . . , Q<highlight><bold>1006</bold></highlight>.<highlight><italic>n </italic></highlight>Operation <highlight><bold>5010</bold></highlight> copies &verbar;x&gt; into Q<highlight><bold>1006</bold></highlight><highlight><italic>i </italic></highlight>for i&equals;1 to n, and leaves Q<highlight><bold>1000</bold></highlight> in &verbar;x&gt; and Q<highlight><bold>1002</bold></highlight> in &verbar;0&gt;. There are O(n<highlight><superscript>2</superscript></highlight>) ancilla qubits, Q<highlight><bold>1006</bold></highlight>, which will hold approximately n copies of Q<highlight><bold>1000</bold></highlight> at time <highlight><bold>04</bold></highlight>-<highlight><bold>06</bold></highlight>. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> Operation <highlight><bold>5012</bold></highlight>.<highlight><bold>1</bold></highlight> operates on one qubit of Q<highlight><bold>1002</bold></highlight> and Q<highlight><bold>1006</bold></highlight>.<highlight><bold>1</bold></highlight>, operation <highlight><bold>5012</bold></highlight>.<highlight><bold>2</bold></highlight> operates on another qubit of Q<highlight><bold>1002</bold></highlight> and Q<highlight><bold>1006</bold></highlight>.<highlight><bold>2</bold></highlight>, . . . , and operation Q<highlight><bold>5012</bold></highlight>.<highlight><italic>n </italic></highlight>operates on the nth qubit of Q<highlight><bold>1002</bold></highlight> and Q<highlight><bold>1006</bold></highlight>.<highlight><italic>n</italic></highlight>. Operations <highlight><bold>5012</bold></highlight>.<highlight><italic>i </italic></highlight>changes Q<highlight><bold>1002</bold></highlight> from &verbar;0&gt; to &verbar;Px&gt;, and keeps Q<highlight><bold>1006</bold></highlight><highlight><italic>i</italic></highlight>, for all i&equals;1 to n, as &verbar;x&gt;, and leaves Q<highlight><bold>1000</bold></highlight> in &verbar;x&gt;. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> Operation <highlight><bold>5010</bold></highlight>I is the inverse of operation <highlight><bold>5010</bold></highlight>. It operates on Q<highlight><bold>1000</bold></highlight> and Q<highlight><bold>1006</bold></highlight>.<highlight><bold>1</bold></highlight> . . . Q<highlight><bold>1006</bold></highlight>.M. Operation <highlight><bold>50101</bold></highlight> changes Q<highlight><bold>1006</bold></highlight>.<highlight><italic>i </italic></highlight>from &verbar;x&gt; to &verbar;0&gt; for all i. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> In <highlight><bold>5010</bold></highlight>, a first layer of controlled NOT gates contains n gates, effectively XORing the classical input qubits <highlight><bold>1000</bold></highlight> onto the qubits <highlight><bold>1006</bold></highlight>.<highlight><bold>1</bold></highlight>. This doubles the number of instances of &verbar;x&gt;. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> In <highlight><bold>5010</bold></highlight>, operating on a second layer of controlled NOT gates contains 2n gates that then copy the qubits in Q<highlight><bold>1000</bold></highlight> and Q<highlight><bold>1006</bold></highlight>.<highlight><bold>1</bold></highlight> onto the qubits Q<highlight><bold>1006</bold></highlight>.<highlight><bold>2</bold></highlight> and Q<highlight><bold>1006</bold></highlight>.<highlight><bold>3</bold></highlight>. The second layer also doubles the number of instances of &verbar;x&gt;. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> In <highlight><bold>5010</bold></highlight>, operating on a third layer of controlled NOT gates, 4n gates, copy qubits in Q<highlight><bold>1000</bold></highlight>, Q<highlight><bold>1006</bold></highlight>.<highlight><bold>1</bold></highlight>, Q<highlight><bold>1006</bold></highlight>.<highlight><bold>2</bold></highlight>, and Q<highlight><bold>1006</bold></highlight>.<highlight><bold>3</bold></highlight> into qubit sets Q<highlight><bold>1006</bold></highlight>.<highlight><bold>4</bold></highlight> to Q<highlight><bold>1006</bold></highlight>.<highlight><bold>7</bold></highlight>. The third layer also doubles the number of instances of &verbar;x&gt;. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> In <highlight><bold>5010</bold></highlight>, operating each additional layer of controlled NOT gates doubles the number of instances of &verbar;x&gt;. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> Since the number of gates in each additional layer of controlled NOT gates doubles the number of instances of &verbar;x&gt;, <highlight><bold>5010</bold></highlight> operates to copy Q<highlight><bold>1000</bold></highlight> n times with logarithmic depth in n, the number of input gates. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> The inventors recognized that not all of the ancilla qubits <highlight><bold>1006</bold></highlight> that are copied by operation <highlight><bold>5010</bold></highlight> are required for operation <highlight><bold>5012</bold></highlight> so the size of operation <highlight><bold>5010</bold></highlight> can be reduced by using only the lesser number of copies resulting in O(n<highlight><superscript>2</superscript></highlight>) ancilla bits, instead of exactly n<highlight><superscript>2 </superscript></highlight>instances. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> Operation <highlight><bold>5002</bold></highlight> makes use of the fact that the Fourier basis state can be expressed as a factorization into n qubits for modulus 2<highlight><superscript>n</superscript></highlight>. Cleve, Ekert, Macchiavello, and Mosca present this factorization in &ldquo;Quantum Algorithms Revisited&rdquo;, Proceedings of the Royal Society of London, Series A, Volume 454, Number 1969, pages 339-354, which is incorporated herein by reference. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> Operation <highlight><bold>5012</bold></highlight>.<highlight><italic>i </italic></highlight>computes the phase of the ith output qubit in Q<highlight><bold>1002</bold></highlight>. Each <highlight><bold>5012</bold></highlight>.<highlight><italic>i </italic></highlight>contains one Hadamard gate operation, O(n) controlled NOT gate operations and i controlled phase shift gate operations. Only one output qubit from Q<highlight><bold>1002</bold></highlight> is input into each operation <highlight><bold>5012</bold></highlight>.<highlight><italic>i</italic></highlight>. The n qubits from Q<highlight><bold>1006</bold></highlight>.<highlight><italic>i </italic></highlight>are also inputs into each operation <highlight><bold>5012</bold></highlight>.<highlight><italic>i</italic></highlight>. In addition, n-1 ancillary qubits, not shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, are also inputs into each operation <highlight><bold>5012</bold></highlight>.<highlight><italic>i</italic></highlight>. Those n-1 ancillary qubits are each prepared in the state &verbar;0&gt;. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> Operation <highlight><bold>5012</bold></highlight>.<highlight><italic>i </italic></highlight>consists of four steps. The first step is to apply a single Hadamard gate to the output qubit from Q<highlight><bold>1002</bold></highlight>. The second step is a concatenation of controlled NOT gates. More specifically, in the first layer of the second step, a single controlled NOT gate is applied with the output qubit from Q<highlight><bold>1002</bold></highlight> as the source and one of the additional ancillary qubit as the target. Note that such a controlled NOT gate creates two entangled copies of the original output qubit from Q<highlight><bold>1002</bold></highlight>. In other words, the number of entangled copies of the output qubit from Q<highlight><bold>1002</bold></highlight> is doubled by the first layer of the second step. In the second layer of the second step, two controlled NOT gates are applied. Each of the two entangled copies is now used as the source of each of the two controlled NOT gates. Two of the additional ancillary qubits are used as the two target qubits of the two controlled NOT gates. Note that, after the second layer of the second step, the number of entangled copies of the original output qubit from Q<highlight><bold>1002</bold></highlight> is four. In other words, the second layer of the second step doubles the number of the entangled copies. These four entangled copies can now be used as the source in subsequent layers of the second step of controlled NOT gates. Since each layer of the second step doubles the number of entangled copies of the output qubit from Q<highlight><bold>1002</bold></highlight>, by applying only O (log n) layers of controlled NOT gates, one can generate n entangled copies of the output qubit from Q<highlight><bold>1002</bold></highlight>. This completes the second step of operation <highlight><bold>5012</bold></highlight>.<highlight><italic>i</italic></highlight>. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> The third step of operation <highlight><bold>5012</bold></highlight>.<highlight><italic>i </italic></highlight>is a parallel application of controlled phase shift gates. It is, thus, of constant depth. Each of the n entangled copies of the output qubit from Q<highlight><bold>1002</bold></highlight> is now used as a target qubit of a controlled phase shift gate. Each of the n qubits in Q<highlight><bold>1006</bold></highlight>.<highlight><italic>i </italic></highlight>is used as a source qubit of a controlled phase shift gate. Conditional on the state of the source qubit, a controlled phase shift gate may rotate the phase of the target qubit by a certain degree, changing the values of the amplitude vector. The angle or degree of phase shift depends on the particular qubit and the particular value of i of the set Q<highlight><bold>1006</bold></highlight>.<highlight><italic>i</italic></highlight>. More concretely, if one labels the qubits of Q<highlight><bold>1006</bold></highlight>.<highlight><italic>i </italic></highlight>backwards from n to 1, i.e., &verbar;x&gt;&equals;&verbar;x_n . . . x<highlight><subscript>&mdash;</subscript></highlight>2x<highlight><subscript>&mdash;</subscript></highlight>1&gt;, then the phase shift in the controlled phase shift gate that applies to &verbar;x_j&gt; is given by 2&lcub;j-i&rcub; Pi. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> The fourth step of operation <highlight><bold>5012</bold></highlight>.<highlight><italic>i </italic></highlight>is the inverse of the step of operation <highlight><bold>5012</bold></highlight>.<highlight><italic>i</italic></highlight>. All four steps of operation <highlight><bold>5012</bold></highlight>.<highlight><italic>i </italic></highlight>can be done in logarithmic depth in n. Therefore, operation <highlight><bold>5012</bold></highlight>.<highlight><italic>i </italic></highlight>as a whole can be done in logarithmic depth in n. The above description of <highlight><bold>5012</bold></highlight>.<highlight><italic>i </italic></highlight>refers to an exact preparation of the Fourier basis state. However, an approximate preparation of the Fourier basis state can be done with even fewer gates. Such an approximate preparation may, for example, simply throw away controlled phase shift gates where the phase shifts are insignificant. Such an approximate preparation is often sufficient in applications including Shor&apos;s factoring algorithm. The process of operation <highlight><bold>5012</bold></highlight>.<highlight><italic>i </italic></highlight>is described in detail in &ldquo;Fast parallel circuits for quantum Fourier transform&rdquo; cited herein above. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows details of operation <highlight><bold>5004</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows times <highlight><bold>12</bold></highlight>, <highlight><bold>14</bold></highlight>, <highlight><bold>16</bold></highlight>, and operations <highlight><bold>5020</bold></highlight> and <highlight><bold>5022</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows operations resulting in copying of the Fourier basis states into the <highlight><bold>1004</bold></highlight>.<highlight><bold>1</bold></highlight>, . . . <highlight><bold>1004</bold></highlight>.M. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> Operation <highlight><bold>5020</bold></highlight> operates on Q<highlight><bold>1004</bold></highlight>.<highlight><bold>1</bold></highlight>, . . . , Q<highlight><bold>1004</bold></highlight>.M. Operation <highlight><bold>5020</bold></highlight> changes each Q<highlight><bold>1004</bold></highlight><highlight><italic>i </italic></highlight>from &verbar;0&gt; to &oplus;P0&gt;, and leaves Q<highlight><bold>1000</bold></highlight> in &verbar;x&gt; and Q<highlight><bold>1002</bold></highlight> in &verbar;Px&gt;. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> Operation <highlight><bold>5022</bold></highlight> operates on Q<highlight><bold>1002</bold></highlight> and Q<highlight><bold>1004</bold></highlight>.<highlight><italic>i </italic></highlight>. . . , Q<highlight><bold>1004</bold></highlight>.M. Operation <highlight><bold>5022</bold></highlight> changes Q<highlight><bold>1004</bold></highlight>.<highlight><bold>1</bold></highlight>, . . . , Q<highlight><bold>1004</bold></highlight>.M from &verbar;P0&gt; to &verbar;Px&gt;. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> For any computational basis states &verbar;x&gt; and &verbar;y&gt;, applying an operation that maps &verbar;x&gt;&verbar;y&gt; to &verbar;x&gt;&verbar;y&minus;x&gt; to an initial input &verbar;Px&gt;&verbar;Py&gt; results in an output state &verbar;Px&plus;y&gt; &verbar;Py&gt;. Applying this operation to an initial input &verbar;P<highlight><subscript>&mdash;</subscript></highlight>0&gt;&verbar;Px&gt; copies the Fourier basis state&verbar;Px&gt; resulting in &verbar;Px&gt;&verbar;Py&gt;. This operation is easily implemented in quantum computing since &verbar;P<highlight><subscript>&mdash;</subscript></highlight>0&gt; can be obtained by applying a Hadamard gate to n qubits initialized to zero. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> Operation <highlight><bold>5020</bold></highlight> computes the state &verbar;P<highlight><subscript>&mdash;</subscript></highlight>0&gt; M times in each of the qubits <highlight><bold>1004</bold></highlight>.<highlight><italic>i </italic></highlight>for i from 1 to M. In this case, M has value O(logn). Operation <highlight><bold>5020</bold></highlight> computes &verbar;P<highlight><subscript>&mdash;</subscript></highlight>0&gt; for each <highlight><bold>1004</bold></highlight>.<highlight><italic>i</italic></highlight>. Operation <highlight><bold>5020</bold></highlight> is the Hadamard transformation of dimension n. Operation <highlight><bold>5020</bold></highlight> applies one Hadamard gate to each of the qubits in <highlight><bold>1004</bold></highlight>.<highlight><italic>i </italic></highlight>in parallel. Operation <highlight><bold>5020</bold></highlight> has constant depth. At time <highlight><bold>14</bold></highlight>, the Q<highlight><bold>1002</bold></highlight> still contain the state &verbar;Px&gt; from time <highlight><bold>12</bold></highlight> and the qubits <highlight><bold>1004</bold></highlight> contain O(logn) copies of &verbar;P<highlight><subscript>&mdash;</subscript></highlight>0&gt;. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> The state &verbar;P<highlight><subscript>&mdash;</subscript></highlight>0&gt; &verbar;Px&gt; transformed according to the mapping &verbar;x&gt; &verbar;y&gt; to &verbar;x&gt; &verbar;y&minus;x&gt; (reversible subtraction) results in &verbar;Px&gt; &verbar;Px&gt;. Thus to copy the qubits <highlight><bold>1002</bold></highlight> into the qubits <highlight><bold>1004</bold></highlight>.<highlight><bold>1</bold></highlight> we have to apply the reversible subtraction on these qubits. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> Operation <highlight><bold>5022</bold></highlight> takes as input at time <highlight><bold>14</bold></highlight> the qubits <highlight><bold>1002</bold></highlight> and <highlight><bold>1004</bold></highlight>. There are two alternative embodiments for Operation <highlight><bold>5022</bold></highlight>. In the first embodiment (Embodiment A), of operation <highlight><bold>5022</bold></highlight>, a simple standard divide and conquer technique is applied. The first layer of Embodiment A takes Q<highlight><bold>1002</bold></highlight> and one of the sets Q<highlight><bold>1004</bold></highlight>, say Q<highlight><bold>1004</bold></highlight>.<highlight><bold>1</bold></highlight>, as the input. It applies a modulo 2<highlight><superscript>n </superscript></highlight>subtraction operation, which is defined by </paragraph>
<paragraph lvl="0"><in-line-formula>&verbar;x&gt;&verbar;y&gt; to &verbar;x&gt;&verbar;y&minus;x&gt;, </in-line-formula></paragraph>
<paragraph id="P-0092" lvl="7"><number>&lsqb;0092&rsqb;</number> with Q<highlight><bold>1004</bold></highlight>.<highlight><bold>1</bold></highlight> as the first n-qubit register and Q<highlight><bold>1002</bold></highlight> as the second n-qubit register. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> As noted in preceding paragraphs, this gives two copies of &verbar;Px&gt;. The number of copies of &verbar;Px&gt; is doubled by the first layer of Embodiment A. The second layer of Embodiment A takes Q<highlight><bold>1002</bold></highlight>, Q<highlight><bold>1004</bold></highlight>.<highlight><bold>1</bold></highlight>, Q<highlight><bold>1004</bold></highlight>.<highlight><bold>2</bold></highlight> and Q.<highlight><bold>1004</bold></highlight>.<highlight><bold>3</bold></highlight> as the inputs. It applies a modulo 2n subtraction operation with Q<highlight><bold>1004</bold></highlight>.<highlight><bold>2</bold></highlight> as the first register and Q<highlight><bold>1002</bold></highlight> as the second register. In parallel, it also applies a modulo 2<highlight><superscript>n </superscript></highlight>subtraction operation with Q<highlight><bold>1004</bold></highlight>.<highlight><bold>3</bold></highlight> as the first register and Q<highlight><bold>1004</bold></highlight>.<highlight><bold>1</bold></highlight> as the second register. The result of the second layer of Embodiment A is four copies of &verbar;Px&gt;. Therefore, the second layer of Embodiment A doubles the Number of copies of &verbar;Px&gt;. In summary, the number of copies &verbar;Px&gt; is doubled each time a layer of Embodiment A is applied. Therefore, only O(log M) layers of Embodiment A is required to generate M copies of &verbar;Px&gt;. The total depth of the circuit of Embodiment A is O (log M log n)&equals;O ((log n) (log log n)) Because M&equals;O (log n). </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> The second Embodiment (Embodiment B) of operation <highlight><bold>5022</bold></highlight> can reduce this depth further to O (log n). The inventors recognized that this reduction in depth can be achieved by combining and paralleling two standard operations in classical circuit design. The first operation called carry-save adder allows computation of the reversible subtraction operation in constant depth. Then the parallel process of telescoping subtraction (the inverse of the more common parallel prefix addition) can join enough carry-save adders in parallel in a way similar to the layering of controlled-NOT gates in operation <highlight><bold>5010</bold></highlight>. Note that the (reversible) prefix addition is defined as the following Mapping: &verbar;x<highlight><subscript>&mdash;</subscript></highlight>1&gt;&gt;&verbar;x<highlight><subscript>&mdash;</subscript></highlight>2&gt;. . . &verbar;x_k&gt; to &verbar;x<highlight><subscript>&mdash;</subscript></highlight>1&gt;&verbar;x<highlight><subscript>&mdash;</subscript></highlight><highlight><bold>1&plus;x</bold></highlight><highlight><subscript>&mdash;</subscript></highlight>2&gt;. . . &verbar;s<highlight><subscript>&mdash;</subscript></highlight><highlight><bold>1&plus;x</bold></highlight><highlight><subscript>&mdash;</subscript></highlight>2&plus;. . . x_k&gt;. The (reversible) telescoping subtraction is defined as the following mapping: &verbar;s<highlight><subscript>&mdash;</subscript></highlight>1&gt;&verbar;x<highlight><subscript>&mdash;</subscript></highlight>2&gt; . . . &verbar;x_k&gt; to &verbar;x<highlight><subscript>&mdash;</subscript></highlight>1&gt;&verbar;x<highlight><subscript>&mdash;</subscript></highlight>2&minus;x<highlight><subscript>&mdash;</subscript></highlight>1&gt;. . . &verbar;x _k&minus;x&lcub;k1&rcub;&gt;. The parallelization of these operations is described in detail in &ldquo;Fast parallel circuits for the quantum Fourier transform&rdquo; cited herein above. This accomplishes the task of performing O(logn) subtractions in logarithmic depth. At time <highlight><bold>16</bold></highlight> the qubits <highlight><bold>1002</bold></highlight> will remain in state &verbar;Px&gt; from time <highlight><bold>14</bold></highlight>, but the qubits <highlight><bold>1004</bold></highlight> now contain O(logn) copies of &verbar;Px&gt; in each <highlight><bold>1004</bold></highlight>.<highlight><italic>i. </italic></highlight></paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows details of operation <highlight><bold>5006</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows times <highlight><bold>21</bold></highlight>, <highlight><bold>22</bold></highlight>, <highlight><bold>24</bold></highlight>, <highlight><bold>26</bold></highlight>, <highlight><bold>27</bold></highlight>,<highlight><bold>28</bold></highlight> and operations <highlight><bold>5024</bold></highlight>, <highlight><bold>5030</bold></highlight>, <highlight><bold>5034</bold></highlight>, <highlight><bold>5030</bold></highlight>I, and <highlight><bold>5024</bold></highlight>I. <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows operations resulting in setting Q<highlight><bold>1000</bold></highlight> from &verbar;x&gt; to &verbar;0&gt; with high probability. Hereafter, high probability means that the total error probability is small. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> Operation <highlight><bold>5024</bold></highlight> operates on all ancilla qubits of Q<highlight><bold>1004</bold></highlight>.<highlight><italic>i </italic></highlight>and Q<highlight><bold>1008</bold></highlight>.<highlight><italic>i</italic></highlight>. Initially, at T&equals;21, each of Q<highlight><bold>10004</bold></highlight>.<highlight><bold>1</bold></highlight> is in some state &verbar;Px&gt;, Q<highlight><bold>1008</bold></highlight>.<highlight><italic>i </italic></highlight>is prepared in the state &verbar;0&gt;, Q<highlight><bold>1010</bold></highlight> is also prepared in the state &verbar;0&gt;, whereas Q<highlight><bold>1000</bold></highlight> is in some state &verbar;x&gt;. Operation <highlight><bold>5024</bold></highlight> copies the state of Q<highlight><bold>1004</bold></highlight>.<highlight><italic>i </italic></highlight>into Q<highlight><bold>1008</bold></highlight>.<highlight><italic>i</italic></highlight>. Operation <highlight><bold>5024</bold></highlight> simulates the effect of a measurement on the qubits Q<highlight><bold>1004</bold></highlight>.<highlight><italic>i. </italic></highlight></paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> Q<highlight><bold>1008</bold></highlight> consists of O(nlog n) qubits. Q<highlight><bold>010</bold></highlight> consists of n qubits. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> Operation <highlight><bold>5030</bold></highlight> operates on Q<highlight><bold>1008</bold></highlight>.<highlight><italic>i </italic></highlight>Q<highlight><bold>1010</bold></highlight> and some additional ancillary qubits (not shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>) to change Q<highlight><bold>1010</bold></highlight> from &verbar;0&gt; to &verbar;x&gt; with high probability. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> Operation <highlight><bold>5034</bold></highlight> operates on Q<highlight><bold>1010</bold></highlight> and Q<highlight><bold>1000</bold></highlight> to change Q<highlight><bold>1000</bold></highlight> from &verbar;x&gt; to &verbar;0&gt; with high probability. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> Operation <highlight><bold>5030</bold></highlight>I is the inverse operation of operation <highlight><bold>5030</bold></highlight>, it maps the state of Q<highlight><bold>1010</bold></highlight> from &verbar;x&gt; to &verbar;<highlight><bold>0</bold></highlight>&gt;. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> Operation <highlight><bold>5024</bold></highlight>I is the inverse operation of operation <highlight><bold>5024</bold></highlight>, it maps the state of Q<highlight><bold>1008</bold></highlight>.<highlight><italic>i </italic></highlight>back to &verbar;0&gt;. Therefore, the overall operation of <highlight><bold>5006</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> maps the state of Q<highlight><bold>10004</bold></highlight>.<highlight><italic>i </italic></highlight>and Q<highlight><bold>1000</bold></highlight> from &verbar;Px&gt; &verbar;Px&gt;. . . &verbar;Px&gt; &verbar;x&gt; to &verbar;Px&gt; &verbar;Px&gt;. . . &verbar;Px&gt; &verbar;0&gt; with high probability. In other words, the state of Q<highlight><bold>1000</bold></highlight> is erased with high probability. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> In operation <highlight><bold>5024</bold></highlight>, each qubit in Q<highlight><bold>1004</bold></highlight><highlight><italic>i </italic></highlight>has a measurement simulated by using a controlled NOT gate to XOR the qubit onto a qubit from qubits <highlight><bold>1008</bold></highlight>. Since the qubit has not truly been observed its state remain undisturbed, but entangled with the new qubit. The new qubits are then used to control quantum operations that depend on the value of the observation in the same way that the actual result would be used to control quantum operations. All of the controlled-NOT gates can operate concurrently, so this operation has constant depth. At time <highlight><bold>22</bold></highlight> the qubits <highlight><bold>1008</bold></highlight> store entangled copies of the qubits <highlight><bold>1004</bold></highlight>. The entanglement between the qubits and those from which they were copied is such that observation of both qubits would give redundant information. The ancilla qubits extracts the measurement outcome from the qubit, without requiring a measurement. We call this extraction a pseudo measurement. The copying of the ancilla qubits described above is a unitary transformation. Such a unitary description of an operation&mdash;the copying operation in the current example&mdash;is sometimes called &ldquo;the Church of the Larger Hilbert space&rdquo;. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> Operation <highlight><bold>5030</bold></highlight> uses the results of these pseudo measurements (i.e., the states of Q<highlight><bold>1008</bold></highlight>.<highlight><italic>i</italic></highlight>) to estimate the phase &verbar;x&gt;. It takes as input the qubits <highlight><bold>1010</bold></highlight> upon which it will store &verbar;x&gt; at time <highlight><bold>24</bold></highlight>. Operation <highlight><bold>5030</bold></highlight> has two parts. The first part of operation <highlight><bold>5030</bold></highlight> computes an encoded representation of &verbar;x&gt;. Many copies are needed so that the probability of error is sufficiently small that we can be relatively sure the estimation of &verbar;x&gt; is correct. For each qubit in &verbar;Px&gt;, half of the qubits are measured against the basis  
<math-cwu id="MATH-US-00004">
<number>4</number>
<math>
<mrow>
  <mrow>
    <mrow>
      <mrow>
        <mrow>
          <mrow>
            <mrow>
              <mrow>
                <mrow>
                  <mo>{</mo>
                  <mrow>
                    <mfrac>
                      <mn>1</mn>
                      <msqrt>
                        <mn>2</mn>
                      </msqrt>
                    </mfrac>
                    <mo>&it;</mo>
                    <mrow>
                      <mo>&LeftBracketingBar;</mo>
                      <mn>0</mn>
                    </mrow>
                  </mrow>
                </mrow>
                <mo>&RightAngleBracket;</mo>
              </mrow>
              <mo>+</mo>
              <mrow>
                <mfrac>
                  <mn>1</mn>
                  <msqrt>
                    <mn>2</mn>
                  </msqrt>
                </mfrac>
                <mo>&it;</mo>
                <mrow>
                  <mo>&LeftBracketingBar;</mo>
                  <mn>1</mn>
                </mrow>
              </mrow>
            </mrow>
            <mo>&RightAngleBracket;</mo>
          </mrow>
          <mo>,</mo>
          <mrow>
            <mfrac>
              <mn>1</mn>
              <msqrt>
                <mn>2</mn>
              </msqrt>
            </mfrac>
            <mo>&it;</mo>
            <mrow>
              <mo>&LeftBracketingBar;</mo>
              <mn>0</mn>
            </mrow>
          </mrow>
        </mrow>
        <mo>&RightAngleBracket;</mo>
      </mrow>
      <mo>-</mo>
      <mrow>
        <mfrac>
          <mn>1</mn>
          <msqrt>
            <mn>2</mn>
          </msqrt>
        </mfrac>
        <mo>&it;</mo>
        <mrow>
          <mo>&LeftBracketingBar;</mo>
          <mn>1</mn>
        </mrow>
      </mrow>
    </mrow>
    <mo>&RightAngleBracket;</mo>
  </mrow>
  <mo>}</mo>
</mrow>
</math>
<mathematica-file id="MATHEMATICA-00004" file="US20030005010A1-20030102-M00004.NB"/>
<image id="EMI-M00004" wi="216.027" he="18.00225" file="US20030005010A1-20030102-M00004.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0104" lvl="7"><number>&lsqb;0104&rsqb;</number> he other half are measured against the basis  
<math-cwu id="MATH-US-00005">
<number>5</number>
<math>
<mrow>
  <mrow>
    <mrow>
      <mrow>
        <mrow>
          <mrow>
            <mrow>
              <mrow>
                <mrow>
                  <mrow>
                    <mo>{</mo>
                    <mrow>
                      <mfrac>
                        <mn>1</mn>
                        <msqrt>
                          <mn>2</mn>
                        </msqrt>
                      </mfrac>
                      <mo>&it;</mo>
                      <mrow>
                        <mo>&LeftBracketingBar;</mo>
                        <mn>0</mn>
                      </mrow>
                    </mrow>
                  </mrow>
                  <mo>&RightAngleBracket;</mo>
                </mrow>
                <mo>+</mo>
                <mrow>
                  <mfrac>
                    <mi>i</mi>
                    <msqrt>
                      <mn>2</mn>
                    </msqrt>
                  </mfrac>
                  <mo>&it;</mo>
                  <mrow>
                    <mo>&LeftBracketingBar;</mo>
                    <mn>1</mn>
                  </mrow>
                </mrow>
              </mrow>
              <mo>&RightAngleBracket;</mo>
            </mrow>
            <mo>,</mo>
            <mrow>
              <mfrac>
                <mn>1</mn>
                <msqrt>
                  <mn>2</mn>
                </msqrt>
              </mfrac>
              <mo>&it;</mo>
              <mrow>
                <mo>&LeftBracketingBar;</mo>
                <mn>0</mn>
              </mrow>
            </mrow>
          </mrow>
          <mo>&RightAngleBracket;</mo>
        </mrow>
        <mo>-</mo>
        <mrow>
          <mfrac>
            <mi>i</mi>
            <msqrt>
              <mn>2</mn>
            </msqrt>
          </mfrac>
          <mo>&it;</mo>
          <mrow>
            <mo>&LeftBracketingBar;</mo>
            <mn>1</mn>
          </mrow>
        </mrow>
      </mrow>
      <mo>&RightAngleBracket;</mo>
    </mrow>
    <mo>}</mo>
  </mrow>
  <mo>.</mo>
</mrow>
</math>
<mathematica-file id="MATHEMATICA-00005" file="US20030005010A1-20030102-M00005.NB"/>
<image id="EMI-M00005" wi="216.027" he="21.12075" file="US20030005010A1-20030102-M00005.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0105" lvl="7"><number>&lsqb;0105&rsqb;</number> These two types of measurements can place the qubit into one of four categories. The inventors, in their paper cited herein above, describe why these measurements help categorize &verbar;Px&gt;. The first two categories are <highlight><bold>0</bold></highlight>, and <highlight><bold>1</bold></highlight>. These reflect the cases in which the exact value of the qubit can be estimated from the measurement. If this case proves to be uninformative, for instance when half the measurements say <highlight><bold>0</bold></highlight> and the other half say <highlight><bold>1</bold></highlight>, then a second class of measurement may be used to determine the qubit&apos;s value as a function of the next qubit&apos;s value. Two possibilities arise, either the qubit is the same as the next qubit, or the qubit is the opposite of the next qubit. The two possibilities are denoted P and N, respectively, for propagate and negate. The estimation process will take the results of the simulated measurement and output an encoded string for the phase in terms of the classes <highlight><bold>0</bold></highlight>,<highlight><bold>1</bold></highlight>, P, and N. Because only pseudo measurements are used instead of real measurements, the result of first part of operation <highlight><bold>5050</bold></highlight> is a superposition over all possible encodings. The weights on each possible encoding correspond exactly to the probability that the encoding would have been generated had there been a measurement of the states of ancilla qubits Q<highlight><bold>1008</bold></highlight><highlight><italic>i</italic></highlight>. Because we have used O(logn) copies of the state &verbar;Px&gt;, we can effectively reduce the probability of error in this operation to an exponentially small value, and thus the majority of weight in the superposition is on the correct encoding of &verbar;x&gt;. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> We will now describe the second part of operation <highlight><bold>5030</bold></highlight>. In the second part of the operation <highlight><bold>5030</bold></highlight>, the encoded string, stored in some ancillary qubits not shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, Is input into a decoder. The second part of the operation <highlight><bold>5030</bold></highlight> decodes the input, the encoded form of x, to obtain x with high probability. The decoding can be done by a parallel implementation of a matrix multiplication algorithm. The inventors discussed this decoding operation in detail in Cleve and Watrous, Quant-ph/0006004. Parallelization of this decoding algorithm can be done by the parallel prefix method, cited herein above. The output of <highlight><bold>5030</bold></highlight> is the phase of the Fourier basis state with exponentially small probability of error. Finally, operation <highlight><bold>5034</bold></highlight> XORs the estimated phase of &verbar;x&gt; is stored in Q<highlight><bold>1010</bold></highlight> onto the state stored in qubits Q<highlight><bold>1000</bold></highlight>. Operation <highlight><bold>5034</bold></highlight> alters the values of Q<highlight><bold>1000</bold></highlight> to state &verbar;0&gt; with high probability (a probability defined by the number of sets of ancilla Q<highlight><bold>1004</bold></highlight><highlight><italic>i</italic></highlight>, Q<highlight><bold>1008</bold></highlight><highlight><italic>i</italic></highlight>, involved in <highlight><bold>5024</bold></highlight> and <highlight><bold>5030</bold></highlight>). </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> A string of symbols from the set &lcub;P, N, <highlight><bold>0</bold></highlight>, <highlight><bold>1</bold></highlight>&rcub; is created from the results of the observations, according to operation <highlight><bold>5030</bold></highlight>, and then this string is decoded to approximate the computational basis state, according to operation <highlight><bold>5032</bold></highlight>. Decoding the string is done using parallel prefix method to ensure logarithmic depth. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> Operation <highlight><bold>5030</bold></highlight>I is the inverse operation <highlight><bold>5030</bold></highlight>. Operation <highlight><bold>5024</bold></highlight>I is simply the inverse operation <highlight><bold>5024</bold></highlight>. The operations <highlight><bold>5030</bold></highlight>I and <highlight><bold>5024</bold></highlight>I together reset the states of the ancilias Q<highlight><bold>1008</bold></highlight>.<highlight><italic>i </italic></highlight>Q<highlight><bold>1010</bold></highlight> and other ancillary qubits (employed in operation <highlight><bold>5030</bold></highlight>, but not shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>) all to &verbar;0&gt;. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows a method for computing the QFT of a computational basis state of an arbitrary modulus, which is a whole Number that is not necessarily a power of 2. Let n be the integral part of Log m&plus;O (1), where the integral part of log m means the largest integer that is smaller than log m. <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows operation A<highlight><bold>5000</bold></highlight> at times A<highlight><bold>00</bold></highlight>, A<highlight><bold>05</bold></highlight>, A<highlight><bold>10</bold></highlight>, A<highlight><bold>15</bold></highlight>, A<highlight><bold>20</bold></highlight>, A<highlight><bold>25</bold></highlight>, and A<highlight><bold>30</bold></highlight>, and sequential operations A<highlight><bold>5002</bold></highlight>, A<highlight><bold>5004</bold></highlight>, <highlight><bold>5000</bold></highlight>I, <highlight><bold>5005</bold></highlight>, A<highlight><bold>5006</bold></highlight>, and sets of qubits A<highlight><bold>1000</bold></highlight>, A<highlight><bold>1002</bold></highlight>, A<highlight><bold>1004</bold></highlight>.<highlight><italic>i </italic></highlight>for i&equals;1 to M, and A<highlight><bold>1006</bold></highlight><highlight><italic>i </italic></highlight>for i&equals;1 to M. <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows operations providing the QFT for an arbitrary modulus. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> At time A<highlight><bold>00</bold></highlight>, qubits A<highlight><bold>1000</bold></highlight> are initialized to a computational basis state &verbar;x&gt;, A<highlight><bold>1002</bold></highlight>, A<highlight><bold>1004</bold></highlight><highlight><italic>i</italic></highlight>, AND A<highlight><bold>1006</bold></highlight><highlight><italic>i </italic></highlight>for i&equals;1 to M are initialized to &verbar;0&gt;. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> After time A<highlight><bold>00</bold></highlight>, operation A<highlight><bold>5002</bold></highlight> operates on A<highlight><bold>1000</bold></highlight> and A<highlight><bold>1002</bold></highlight>, changes A<highlight><bold>1002</bold></highlight> from &verbar;0&gt; to &verbar;Px&gt;, and leaves all other qubits unchanged. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> After time A<highlight><bold>05</bold></highlight>, operation A<highlight><bold>5004</bold></highlight> operates on qubits A<highlight><bold>1002</bold></highlight> and A<highlight><bold>1004</bold></highlight><highlight><italic>i </italic></highlight>for all i&equals;1 to M, copies &verbar;Px&gt; from A<highlight><bold>1002</bold></highlight> to A<highlight><bold>1004</bold></highlight><highlight><italic>i</italic></highlight>, and leaves all other qubits unchanged. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> Operation <highlight><bold>5000</bold></highlight>I is an inverse of a QFT of modulus 2<highlight><superscript>n</superscript></highlight>. After time A<highlight><bold>10</bold></highlight>, operation <highlight><bold>5000</bold></highlight>I operates on each A<highlight><bold>1004</bold></highlight><highlight><italic>i </italic></highlight>(as explained in the description of FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>4</bold></highlight>). Operations <highlight><bold>5000</bold></highlight>I may be performed concurrently. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> After operations <highlight><bold>5000</bold></highlight>I, operation <highlight><bold>5005</bold></highlight> operates on all A<highlight><bold>1004</bold></highlight><highlight><italic>i </italic></highlight>and A<highlight><bold>1006</bold></highlight><highlight><italic>i</italic></highlight>, copies the state of each A<highlight><bold>1004</bold></highlight><highlight><italic>i </italic></highlight>into a corresponding A<highlight><bold>1006</bold></highlight><highlight><italic>i</italic></highlight>, and leaves A<highlight><bold>1000</bold></highlight>, A<highlight><bold>1002</bold></highlight>, and A<highlight><bold>1004</bold></highlight><highlight><italic>i </italic></highlight>unchanged. Operation <highlight><bold>5005</bold></highlight> simulates the effect of a measurement on A<highlight><bold>1004</bold></highlight>.<highlight><italic>i </italic></highlight></paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> After time A<highlight><bold>15</bold></highlight>, operation A<highlight><bold>5006</bold></highlight> operates on A<highlight><bold>1000</bold></highlight> and A<highlight><bold>1006</bold></highlight><highlight><italic>i</italic></highlight>, changes A<highlight><bold>1000</bold></highlight> from &verbar;x&gt; to &verbar;0&gt; with high probability, and leaves the state of A<highlight><bold>1006</bold></highlight>.<highlight><italic>i </italic></highlight>unchanged. Mathematically, the operation A<highlight><bold>5006</bold></highlight> maps &verbar;x&gt; (F<highlight><bold>55</bold></highlight> dagger&rcub;<highlight><subscript>&mdash;</subscript></highlight>&lcub;2<highlight><superscript>n</superscript></highlight>&rcub;&verbar;Px&gt;)(F&lcub;dagger&rcub;<highlight><subscript>&mdash;</subscript></highlight>&lcub;2<highlight><superscript>n </superscript></highlight>&verbar;Px&gt;) . . . (F&lcub;dagger&rcub;<highlight><subscript>&mdash;</subscript></highlight>&lcub;2<highlight><superscript>n</superscript></highlight>&rcub;&verbar;Px&gt;) to &verbar;0<highlight><bold>22</bold></highlight> (F&lcub;dagger&rcub;<highlight><subscript>&mdash;</subscript></highlight>&lcub;2<highlight><superscript>n </superscript></highlight>&verbar;Px&gt;)(F&lcub;dagger&rcub;<highlight><subscript>&mdash;</subscript></highlight>&lcub;2<highlight><superscript>n</superscript></highlight>&rcub;&verbar;Px&gt;) . . . (F&lcub;dagger&rcub;<highlight><subscript>&mdash;</subscript></highlight>&lcub;2<highlight><superscript>n</superscript></highlight>&rcub; &verbar;Px&gt;) with high probability. In summary, operation A<highlight><bold>5006</bold></highlight> estimates the value of x using Registers A<highlight><bold>1006</bold></highlight>.<highlight><italic>i </italic></highlight>and subtract the estimated value from the register A<highlight><bold>1000</bold></highlight>. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> After time A<highlight><bold>20</bold></highlight>, operation <highlight><bold>5005</bold></highlight>I, the inverse of <highlight><bold>5005</bold></highlight>, operates on all of A<highlight><bold>1004</bold></highlight>.<highlight><italic>i </italic></highlight>and A<highlight><bold>1008</bold></highlight>.<highlight><italic>i </italic></highlight>and resets the state of each of A<highlight><bold>1008</bold></highlight>.<highlight><italic>i </italic></highlight>to &verbar;0&gt;. Afterwards, the operation <highlight><bold>5000</bold></highlight> operates on each of A<highlight><bold>1004</bold></highlight>.<highlight><italic>i</italic></highlight>, changes the state of Each of A<highlight><bold>1004</bold></highlight>.<highlight><italic>i </italic></highlight>from (F&lcub;dagger&rcub;<highlight><subscript>&mdash;</subscript></highlight>&lcub;2<highlight><superscript>n</superscript></highlight>&rcub; &verbar;Px&gt;) to &verbar;Px&gt;. Here, the expression F<highlight><bold>55</bold></highlight> dagger&rcub; means the adjoint/inverse operator of F, which is the quantum Fourier Transform operator. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> A<highlight><bold>5004</bold></highlight>I is the inverse of A<highlight><bold>5004</bold></highlight>. After time A<highlight><bold>25</bold></highlight>, operation A<highlight><bold>5004</bold></highlight>I operates on A<highlight><bold>1002</bold></highlight> and A<highlight><bold>1004</bold></highlight><highlight><italic>i</italic></highlight>, changes A<highlight><bold>1004</bold></highlight><highlight><italic>i </italic></highlight>to &verbar;0&gt; for all i and leaves all other qubits unchanged. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> Preferably, A<highlight><bold>1004</bold></highlight> and A<highlight><bold>1006</bold></highlight> contain the same number of qubits, nM, where M is O (log n) and n is the number of qubits in A<highlight><bold>1000</bold></highlight>. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> A<highlight><bold>5002</bold></highlight> compute the Fourier basis state for modulus m. The depth of the operations A<highlight><bold>5002</bold></highlight> is poly-logarithmic in contrast to the logarithmic depth of <highlight><bold>5000</bold></highlight>. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> Operation A<highlight><bold>5004</bold></highlight> is also polylogarithmnic in contrast with the logarithmic depth of operation <highlight><bold>5004</bold></highlight>. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> Both operations A<highlight><bold>5002</bold></highlight> and A<highlight><bold>5004</bold></highlight> result states of corresponding qubits as operations <highlight><bold>5002</bold></highlight> and <highlight><bold>5004</bold></highlight>. At time A<highlight><bold>05</bold></highlight> the Fourier basis state with phase x, &verbar;Px&gt; has been computed by A<highlight><bold>5002</bold></highlight> and stored in qubits A<highlight><bold>1002</bold></highlight>. At time A<highlight><bold>10</bold></highlight> this Fourier basis state has been copied O(logn) times into qubits A<highlight><bold>1004</bold></highlight>. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> The major difference between operation <highlight><bold>5000</bold></highlight> and operation A <highlight><bold>5000</bold></highlight> is the operation for estimating the phase. In operation A<highlight><bold>5000</bold></highlight>, operations <highlight><bold>5000</bold></highlight> finish the computation of &verbar;Px&gt; in A<highlight><bold>1002</bold></highlight>. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> At time A<highlight><bold>10</bold></highlight> the inverse QFT with modulus 2<highlight><superscript>n </superscript></highlight>for some sufficiently large n, operation <highlight><bold>5000</bold></highlight>I, is performed on each copy of the Fourier basis state stored in qubits <highlight><bold>1004</bold></highlight>. Measurements are simulated on these copies again through the use of controlled NOT gates as in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. In A<highlight><bold>5006</bold></highlight>, the A<highlight><bold>1006</bold></highlight><highlight><italic>i </italic></highlight>are used to compute &verbar;ym2<highlight><superscript>(&minus;n)</superscript></highlight>&verbar;mod m for each computational basis state y. The output of the above computation of the integral part of (y m 2<highlight><superscript>&lcub;&minus;n&rcub;</superscript></highlight>&plus;0.5) is, with a high probability, equal to x. Therefore, in A<highlight><bold>5006</bold></highlight>, such an output can be used to erase &verbar;x&gt; stored in A<highlight><bold>1000</bold></highlight>. This can be used to erase &verbar;x&gt; by XORing A<highlight><bold>1000</bold></highlight> and A<highlight><bold>1006</bold></highlight><highlight><italic>i </italic></highlight>together in operation A<highlight><bold>5006</bold></highlight>, as shown in the description of <highlight><bold>5006</bold></highlight> in FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>4</bold></highlight>. At time A<highlight><bold>30</bold></highlight>, &verbar;Px&gt; is stored in A<highlight><bold>1002</bold></highlight> and A<highlight><bold>1000</bold></highlight> has changed to state &verbar;0&gt; with a high probability. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows a method F<highlight><bold>5000</bold></highlight> for factoring based on Shor&apos;s algorithm. Method F<highlight><bold>5000</bold></highlight> produces a factor of an n-bit composite number, N, with high probability. F<highlight><bold>5000</bold></highlight> includes classical operations performed on classical electronic circuits either digital or analog, and quantum operations on qubits. The quantum operations require only poly-logarithmic depth. The classical operations require circuits of polynomial depth. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> When qubits are used in classical portions of the operation they are assumed to not be in superposition. That is they will always be in one computational basis state, the same as classical bits. This will be discussed in further detail below. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows sequential times F<highlight><bold>00</bold></highlight>, F<highlight><bold>02</bold></highlight>, F<highlight><bold>04</bold></highlight>, F<highlight><bold>06</bold></highlight>, F<highlight><bold>08</bold></highlight>, F<highlight><bold>10</bold></highlight>, and F<highlight><bold>12</bold></highlight>, and operations F<highlight><bold>5002</bold></highlight>, F<highlight><bold>5004</bold></highlight>, F<highlight><bold>5006</bold></highlight>, <highlight><bold>5000</bold></highlight>, F<highlight><bold>5008</bold></highlight>, and F<highlight><bold>5010</bold></highlight>. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> Qubit sets F<highlight><bold>1000</bold></highlight>, F<highlight><bold>1002</bold></highlight>, F<highlight><bold>1004</bold></highlight> each contain n qubits. F<highlight><bold>1006</bold></highlight> preferably contains about 2 n qubits; it is of size about 2 n. F<highlight><bold>1008</bold></highlight> preferably contains n qubits; it is of size n. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> F<highlight><bold>1006</bold></highlight> and F<highlight><bold>1008</bold></highlight> must be qubits. F<highlight><bold>1000</bold></highlight>, F<highlight><bold>1002</bold></highlight>, F<highlight><bold>1004</bold></highlight>, and F<highlight><bold>1010</bold></highlight> maybe qubits or classical bits. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> At time equals F<highlight><bold>00</bold></highlight>, F<highlight><bold>1000</bold></highlight> are initialize to &verbar;N&gt;, the quantum state representing the binary representation of the number, N, which is to be factorized., and all other qubits are initialized to &verbar;0&gt;. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> After time F<highlight><bold>00</bold></highlight>, operation F<highlight><bold>5002</bold></highlight> operates on qubits F<highlight><bold>1000</bold></highlight>, F<highlight><bold>1002</bold></highlight>, and F<highlight><bold>1004</bold></highlight>. Operation F<highlight><bold>5002</bold></highlight> changes F<highlight><bold>1004</bold></highlight> to a random number, &ldquo;a&rdquo;, in the range <highlight><bold>2</bold></highlight> to N-<highlight><bold>1</bold></highlight>. F<highlight><bold>5002</bold></highlight> then determines whether &ldquo;a&rdquo; is a factor of N. IF <highlight><bold>5002</bold></highlight> determines that a is a factor of N, F<highlight><bold>5002</bold></highlight> also changes F<highlight><bold>1002</bold></highlight> to represent a, &verbar;a&gt;. Shor&apos;s factoring algorithm has a subroutine on modular exponentiation. The inventors recognized that the modular exponentiation step can be shifted to the classical computation step. While it is not shown explicitly in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, it should be understood that such modular exponentiation step can be done in, for example, the time between A<highlight><bold>00</bold></highlight> and A<highlight><bold>05</bold></highlight> by a conventional computer (digital or Analog). </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> After time F<highlight><bold>02</bold></highlight>, quantum operation F<highlight><bold>5004</bold></highlight> operates on qubits F<highlight><bold>1006</bold></highlight> to change F<highlight><bold>1006</bold></highlight> to a uniform superposition over all computational basis states of the 2 n qubits. That is to say, up to a normalization constant, the state is given by &verbar;0&gt;&plus;&verbar;1&gt;&plus;&verbar;2&gt;&plus;. . . &plus;&verbar;2<highlight><superscript>n&minus;1</superscript></highlight>&gt;. Quantum operation F<highlight><bold>1006</bold></highlight> applies one Hadamard gate operation to each qubit in F<highlight><bold>1006</bold></highlight>. Quantum operation F<highlight><bold>1006</bold></highlight> has constant depth. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> After time F<highlight><bold>04</bold></highlight>, quantum operation F<highlight><bold>5006</bold></highlight> operates on qubits F<highlight><bold>1000</bold></highlight>, F<highlight><bold>1004</bold></highlight>. Operation F<highlight><bold>5006</bold></highlight> is linear. Therefore, to define operation F<highlight><bold>5006</bold></highlight>, it is sufficient to define its action on basis states and extend its action to a general state by linearity. For this reason, consider an input state &verbar;x&gt; for the qubits in F<highlight><bold>1006</bold></highlight>. The state of F<highlight><bold>1008</bold></highlight> is &verbar;0&gt;. Operation F<highlight><bold>5006</bold></highlight> keeps the basis state of F<highlight><bold>1006</bold></highlight> unchanged as &verbar;x&gt;. Operation F<highlight><bold>5006</bold></highlight> changes the state of F<highlight><bold>1008</bold></highlight> from &verbar;0&gt; to &verbar;a<highlight><superscript>x </superscript></highlight>mod N&gt;. In summary, F<highlight><bold>5006</bold></highlight> is specified by the unitary transformation &verbar;x&gt;&verbar;y&gt; to &verbar;x&gt;&verbar;y&plus;a<highlight><superscript>x </superscript></highlight>mod N&gt; where the first register refers to F<highlight><bold>1006</bold></highlight> and the second register refers to F<highlight><bold>1008</bold></highlight>. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> After time F<highlight><bold>06</bold></highlight>, operation <highlight><bold>5000</bold></highlight> operates on qubits F<highlight><bold>1006</bold></highlight> to define the QFT of F<highlight><bold>1006</bold></highlight>. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> At time F<highlight><bold>08</bold></highlight>, after QFT <highlight><bold>5000</bold></highlight>, the state of F<highlight><bold>1006</bold></highlight> is measured. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> After time F<highlight><bold>08</bold></highlight>, classical operation F<highlight><bold>5008</bold></highlight> operates on the classical bits prepared as all zeros in F<highlight><bold>1006</bold></highlight>, and on the measured values of F<highlight><bold>1010</bold></highlight>. F<highlight><bold>5008</bold></highlight> applies a continued fraction algorithm to find integers k and r, where 0 is less than or equal to k which is less than r, such that the following inequality is satisfied:  
<math-cwu id="MATH-US-00006">
<number>6</number>
<math>
<mrow>
  <mrow>
    <mo>&LeftBracketingBar;</mo>
    <mrow>
      <mfrac>
        <mi>y</mi>
        <mrow>
          <mrow>
            <mn>2</mn>
            <mo>^</mo>
            <mn>2</mn>
          </mrow>
          <mo>&it;</mo>
          <mi>n</mi>
        </mrow>
      </mfrac>
      <mo>-</mo>
      <mfrac>
        <mi>k</mi>
        <mi>r</mi>
      </mfrac>
    </mrow>
    <mo>&RightBracketingBar;</mo>
  </mrow>
  <mo>&leq;</mo>
  <mfrac>
    <mn>1</mn>
    <mrow>
      <mrow>
        <mn>2</mn>
        <mo>^</mo>
        <mn>2</mn>
      </mrow>
      <mo>&it;</mo>
      <mi>n</mi>
    </mrow>
  </mfrac>
</mrow>
</math>
<mathematica-file id="MATHEMATICA-00006" file="US20030005010A1-20030102-M00006.NB"/>
<image id="EMI-M00006" wi="216.027" he="18.00225" file="US20030005010A1-20030102-M00006.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> If d mod N is not equal to one then the whole process depicted in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> from time F<highlight><bold>00</bold></highlight> should be are repeated. If d mod N equals 1, r is stored in qubits F<highlight><bold>1010</bold></highlight>. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> After time F<highlight><bold>10</bold></highlight>, operation F<highlight><bold>5010</bold></highlight> operates on qubits F<highlight><bold>1002</bold></highlight> and F<highlight><bold>1010</bold></highlight>. If F<highlight><bold>1002</bold></highlight> is not equal to &verbar;0&gt; then no operation is performed. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> In operation F<highlight><bold>5010</bold></highlight>, if F<highlight><bold>1002</bold></highlight> equals &verbar;0&gt;, and r is an odd number, then the whole process depicted in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> from time F<highlight><bold>00</bold></highlight> is performed again, using freshly prepared ancilla qubits. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> In operation F<highlight><bold>5010</bold></highlight>, if F<highlight><bold>1002</bold></highlight> equals &verbar;0&gt;, and r is an even number, then operation F<highlight><bold>5010</bold></highlight> computes the greatest divisor of a<highlight><superscript>r/2</superscript></highlight>&minus;1 and N. If the greatest divisor is 1 then the whole process depicted in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> from time F<highlight><bold>00</bold></highlight> should be repeated. If the greatest divisor is not 1, the greatest divisor is stored in F<highlight><bold>1002</bold></highlight>. Qubits F<highlight><bold>1002</bold></highlight> are the n output qubits of operation F<highlight><bold>5000</bold></highlight>. The state of Qubits F<highlight><bold>1002</bold></highlight> gives a non-trivial factor of N. The factorization algorithm is now complete. Qubits F<highlight><bold>1006</bold></highlight> and F<highlight><bold>1008</bold></highlight> are the only qubits that need to be quantum bits because they are the only information that are involved in a superposition. Qubits or bits F<highlight><bold>1010</bold></highlight> provide work space for the classical post-processing stage. Qubits F<highlight><bold>1010</bold></highlight> are of size n. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> represents a method S<highlight><bold>5000</bold></highlight> for computing the QFT using Shor&apos;s mixed-radix operation in logarithmic depth. <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows sequential times S<highlight><bold>00</bold></highlight>, S<highlight><bold>02</bold></highlight>, S<highlight><bold>04</bold></highlight>, S<highlight><bold>06</bold></highlight>, and S<highlight><bold>08</bold></highlight>, qubit sets S<highlight><bold>1000</bold></highlight>, S<highlight><bold>1002</bold></highlight>.<highlight><italic>i </italic></highlight>. . . S<highlight><bold>1002</bold></highlight>.M, and operations S<highlight><bold>5002</bold></highlight>, S<highlight><bold>5004</bold></highlight>, S<highlight><bold>5006</bold></highlight>.<highlight><italic>i </italic></highlight>for i&equals;1 to M, and S<highlight><bold>5002</bold></highlight>I. S<highlight><bold>1000</bold></highlight> are both the input and the output qubit set of S<highlight><bold>5000</bold></highlight>. S<highlight><bold>5000</bold></highlight> has logarithmic depth. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> The symbol n represents the input size. The symbol m is the modulus with respect to the QFT. There are at most at most O (nlogm/loglogm) qubits S<highlight><bold>1002</bold></highlight>. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> At time S<highlight><bold>00</bold></highlight>, the set of n qubits S<highlight><bold>1000</bold></highlight> is initialized to a computational basis state &verbar;x&gt;, and each set of n qubits S<highlight><bold>1002</bold></highlight>.<highlight><italic>i </italic></highlight>is each initialized to &verbar;0&gt;. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> After time S<highlight><bold>00</bold></highlight>, operation S<highlight><bold>5002</bold></highlight> operates on S<highlight><bold>1000</bold></highlight> and S<highlight><bold>1002</bold></highlight><highlight><italic>i</italic></highlight>, to change the state of S<highlight><bold>1002</bold></highlight> so that S<highlight><bold>1002</bold></highlight> stores the modular representation of &verbar;x&gt;. The modular representation of &verbar;x&gt; is defined by the following transformation: </paragraph>
<paragraph lvl="0"><in-line-formula>&verbar;x&gt;&verbar;0,0, . . . , 0&gt; to &verbar;<highlight><bold>0&gt;&verbar;xmod m</bold></highlight><highlight><subscript>1</subscript></highlight>&gt;, &verbar;xmod m<highlight><subscript>2</subscript></highlight>&gt;, . . . , &verbar;xmod m<highlight><subscript>k</subscript></highlight>&gt;, </in-line-formula></paragraph>
<paragraph id="P-0144" lvl="7"><number>&lsqb;0144&rsqb;</number> where m<highlight><subscript>i </subscript></highlight>for 1&equals;1 to k are pair wise relatively prime integers in O(logm) such that modulus m&equals;m<highlight><subscript>1 </subscript></highlight>m<highlight><subscript>2</subscript></highlight>. . . m<highlight><subscript>k</subscript></highlight>. Here, two numbers are called relatively prime if they have no non-trivial common factors. A most basic method for computing this transformation can be concurrently implemented because m is relatively small. Such methods, related to the Chinese Reminder Theorem, are well known. See, for example, E. Bach and J. Shallit, &ldquo;Algorithmic Number Theory&rdquo; and references cited therein. Operation S<highlight><bold>5002</bold></highlight> changes the values of qubits S<highlight><bold>1002</bold></highlight> to a modular representation of &verbar;x&gt;. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> After time S<highlight><bold>02</bold></highlight>, operation S<highlight><bold>5004</bold></highlight> operates on qubits S<highlight><bold>1002</bold></highlight>. Operation S<highlight><bold>5002</bold></highlight> multiplies each S<highlight><bold>1002</bold></highlight><highlight><italic>i </italic></highlight>by an integer, g<highlight><subscript>i</subscript></highlight>. The g<highlight><subscript>i </subscript></highlight>are defined such that g<highlight><subscript>l</subscript></highlight>&equals;the inverse of (m/m<highlight><subscript>i</subscript></highlight>) mod m<highlight><subscript>i</subscript></highlight>. Here the S<highlight><bold>5004</bold></highlight> may operate concurrently on all sets of S<highlight><bold>1002</bold></highlight><highlight><italic>i</italic></highlight>. See, for example, E. Bach and J. Shallit, &ldquo;Algorithmic Number Theory,&rdquo; MIT Press, 1996, and references cited therein. S<highlight><bold>5004</bold></highlight> changes the values of qubits S<highlight><bold>1002</bold></highlight> to the states: </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> Operations S<highlight><bold>5006</bold></highlight>.<highlight><bold>1</bold></highlight> to S<highlight><bold>5006</bold></highlight>.M are all QFTs of lesser dimension than S<highlight><bold>5000</bold></highlight>. At time S<highlight><bold>04</bold></highlight> each block of qubits S<highlight><bold>1002</bold></highlight>.<highlight><italic>i </italic></highlight>is input into operation S<highlight><bold>5006</bold></highlight>.<highlight><italic>i </italic></highlight>where operation S<highlight><bold>5006</bold></highlight>.<highlight><italic>i </italic></highlight>computes the QFT modulus m, in logarithmic depth. These operations can be implemented in a couple of ways. First, they can recurse on the mixed radix operation in which case the operations S<highlight><bold>5006</bold></highlight>.<highlight><italic>i </italic></highlight>would be replaced with smaller instances of the operation displayed in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. Second, they can be the same operation demonstrated in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, which computes the QFT in logarithmic depth for any modulus. At time S<highlight><bold>06</bold></highlight>, the QFT has been performed on all the blocks S<highlight><bold>1002</bold></highlight>.<highlight><italic>i. </italic></highlight></paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> At time S<highlight><bold>06</bold></highlight>, operation S<highlight><bold>5002</bold></highlight>I is applied to S<highlight><bold>1000</bold></highlight> and all S<highlight><bold>1002</bold></highlight><highlight><italic>i </italic></highlight>to construct &verbar;Px&gt; from its modular representation, store &verbar;Px&gt; in qubits S<highlight><bold>1002</bold></highlight>, and change the values of qubits S<highlight><bold>1002</bold></highlight><highlight><italic>i </italic></highlight>to &verbar;0&gt;. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> schematically illustrates one type of quantum computer, an NMR based quantum computer, for implementing the invention. <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows a quantum computer <highlight><bold>810</bold></highlight> including a quantum data processing sample <highlight><bold>801</bold></highlight>, an RF cavity <highlight><bold>802</bold></highlight>, a set of RF generators <highlight><bold>803</bold></highlight>, an output signal line <highlight><bold>804</bold></highlight>, a magnetic field gradient current source <highlight><bold>805</bold></highlight>, a dewar and DC magnet <highlight><bold>8</bold></highlight> <highlight><bold>06</bold></highlight>, a mixer <highlight><bold>807</bold></highlight>, a pre amplifier <highlight><bold>808</bold></highlight>, and a digitizer <highlight><bold>809</bold></highlight>. In operation, the different resonance frequencies of nuclear moments in sample <highlight><bold>801</bold></highlight> are generated by generators <highlight><bold>803</bold></highlight>. The field gradient <highlight><bold>805</bold></highlight> may be used to thermodymically couple the sample to the environment to initialize the sample 1 to a thermodynamic ground state. The digitizer <highlight><bold>809</bold></highlight> digitizes NMR signal output resulting from operations performed on the qubits of the sample 1. Operations are performed by initializing to a ground state, and then exiting the desires qubits/nuclear moments using generators <highlight><bold>803</bold></highlight> to perform the desired computations. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> Combating decoherence may involve using quantum error correcting codes and decoherence free subsystems. The circuits disclosed above generally refer to the transformation on the encoded or logical qubits, rather than the physical qubits. While the above disclosure has been based on the standard quantum circuit model for a parallel quantum computer, the invention applies to different architectures of quantum information processors. Examples of other architectures of quantum information processors include (a) those where only local gates between neighboring qubits are allowed, (b) those where a number of small quantum information processors are networked together by classical or quantum channels and (c) one-way Quantum computers as disclosed in Raussendorf, Browne, and Briegel, http://xxx.lanl.gov/abs/quant-ph/0108118 and (d) efficient linear optics quantum computation as disclosed in Knill, Laflamme, and Milburn, http://xxx.lanl.gov/abs/quant-ph/0006088. For instance, one can apply standard techniques for transforming circuits from a circuit in a standard parallel quantum computer to a circuit in a quantum computer with only local gates into the circuits disclosed above and in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>-<highlight><bold>7</bold></highlight> to implement the present invention. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> Furthermore, the present invention may be applied to other quantum information units including d-level quantum systems and continuous variables. </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> While the above specification concerns mainly with the depth of a circuit, the invention may also be useful for obtaining a trade-off between the depth and the size of a circuit. By increasing the depth of circuit, one may achieve A QFT with a smaller number of qubits than what is otherwise necessary or convenient. The invention is also compatible with various simplifications and modifications, which allow a further reduction in the depth and/or the size of a circuit. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> The methods illustrated above in connection with FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>7</bold></highlight> are examples of uses of logarithmic and poly logarithmic gate operations of the invention. The invention has been described above in the context of certain useful algorithms. The scope of the invention is more properly defined by the following claims, and those claims and their equivalents are what the inventors claim as their invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">We claim: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for quantum computing, comprising 
<claim-text>(1) creating an n qubit Fourier basis state of a n qubit computational basis state, and </claim-text>
<claim-text>(2) generating multiple copies of the n qubit Fourier basis state in additional sets of n qubits, and </claim-text>
<claim-text>(3) estimating the phase of the Fourier basis state from the copies of the Fourier basis state. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising erasing the computational basis state from the b qubits whose values represent the computational basis state. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising erasing said multiple copies of the n qubit Fourier basis state. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A method for estimating the phase x of a quantum state using a quantum circuit and multiple copies of a Fourier state&verbar;Px&gt; of modulus m, said method comprising: 
<claim-text>simulating measurements on multiple copies of a state; </claim-text>
<claim-text>obtaining an approximation to the fractional part of 2<highlight><superscript>&minus;j </superscript></highlight>x for each j; </claim-text>
<claim-text>reconstructing an approximation &tilde;x to x </claim-text>
<claim-text>wherein a depth of the quantum circuit is O(Polynomial(log(log m))). </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A quantum computing method for performing QFT for a modulus m, comprising: 
<claim-text>creating a Fourier basis state &verbar;Px&gt; of a computational basis state x; </claim-text>
<claim-text>multiply copying the Fourier basis state; </claim-text>
<claim-text>erasing the computational basis state by estimating the phase of the Fourier basis state; </claim-text>
<claim-text>reversing the multiply copying operation; and </claim-text>
<claim-text>wherein the depth of the circuit is O(Polynonial(log log m)). </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference> where m&equals;2<highlight><superscript>n </superscript></highlight>for a positive integer n. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference> further comprising simulating measurements on multiple copies of a state. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference> wherein said estimating the phase of the Fourier basis state comprises simulating measurements on multiple copies of a state. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A method for performing Fourier transformation with respect to a modulus m where m&equals;m<highlight><subscript>1</subscript></highlight>m<highlight><subscript>2</subscript></highlight>. . . m<highlight><subscript>k </subscript></highlight>for m<highlight><subscript>i </subscript></highlight>pair wise relatively prime and m<highlight><subscript>j </subscript></highlight>in O(log m) of a computational basis state &verbar;x&gt;, comprising: 
<claim-text>storing a modular representation of &verbar;x&gt; defined by the following transformation: </claim-text>
<claim-text><in-line-formula>&verbar;x&gt;&verbar;0,0, . . . , 0&gt; to &verbar;<highlight><bold>0&gt;&verbar;xmod m</bold></highlight><highlight><subscript>1</subscript></highlight>&gt;, &verbar;xmod m<highlight><subscript>2</subscript></highlight>&gt;, . . . &verbar;xmod m<highlight><subscript>k</subscript></highlight>&gt;, </in-line-formula></claim-text>
<claim-text>where m<highlight><subscript>i </subscript></highlight>for 1&equals;1 to k are pair wise relatively prime integers in O(logm) such that modulus m&equals;m<highlight><subscript>1</subscript></highlight>m<highlight><subscript>2</subscript></highlight>. . . m<highlight><subscript>k </subscript></highlight>multiplies each S<highlight><bold>1002</bold></highlight><highlight><italic>i </italic></highlight>by an integer, g<highlight><subscript>i</subscript></highlight>; and </claim-text>
<claim-text>computing the QFT modulus m<highlight><subscript>i </subscript></highlight>in logarithmic depth. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> further comprising applying Fourier Transform to each component m<highlight><subscript>i</subscript></highlight>. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> wherein a depth of the operation is O(Polynomial(log(log m))). </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A quantum computing method of factoring a large integer m or solving a hidden linear form problem of input size of order log(m) bits comprising: 
<claim-text>classical pre-processing; </claim-text>
<claim-text>quantum computing comprising: 
<claim-text>(1) creating an n qubit Fourier basis state of a n qubit computational basis state, and </claim-text>
<claim-text>(2) generating multiple copies of the n qubit Fourier basis state in additional sets of n qubits, and </claim-text>
<claim-text>(3) estimating the phase of the Fourier basis state from the copies of the Fourier basis state; and </claim-text>
</claim-text>
<claim-text>classical post-processing. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> wherein operations are of depth O(Polynominal(log log m)). </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A system for quantum computing, comprising 
<claim-text>(1) means for creating an n qubit Fourier basis state of a n qubit computational basis state, and </claim-text>
<claim-text>(2) means for generating multiple copies of the n qubit Fourier basis state in additional sets of n qubits, and </claim-text>
<claim-text>(3) means for estimating the phase of the Fourier basis state from the copies of the Fourier basis state. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> further comprising means for erasing the computational basis state from the b qubits whose values represent the computational basis state. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> further comprising means for erasing said multiple copies of the n qubit Fourier basis state. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A system for estimating the phase x of a quantum state using a quantum circuit and multiple copies of a Fourier state&verbar;Px&gt; of modulus m, said method comprising: 
<claim-text>means for simulating measurements on multiple copies of a state; </claim-text>
<claim-text>means for obtaining an approximation to the fractional part of <highlight><superscript>&minus;j </superscript></highlight>x for each j; </claim-text>
<claim-text>means for reconstructing an approximation &tilde;x to x </claim-text>
<claim-text>wherein a depth of the quantum circuit is O(Polynomial(log(log m))). </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A quantum computing system for performing QFT for a modulus m, comprising: 
<claim-text>means for creating a Fourier basis state &verbar;Px&gt; of a computational basis state x; </claim-text>
<claim-text>means for multiply copying the Fourier basis state; </claim-text>
<claim-text>means for erasing the computational basis state by estimating the phase of the Fourier basis state; </claim-text>
<claim-text>means for reversing the multiply copying operation; and </claim-text>
<claim-text>wherein the depth of the circuit is O(Polynomial(log log m)). </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference> where m&equals;2<highlight><superscript>n </superscript></highlight>for a positive integer n. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference> further comprising simulating measurements on multiple copies of a state. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference> wherein said estimating the phase of the Fourier basis state comprises means for simulating measurements on multiple copies of a state. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. A system for performing Fourier transformation with respect to a modulus m where m&equals;m<highlight><subscript>1</subscript></highlight>m<highlight><subscript>2</subscript></highlight>. . . m<highlight><subscript>k </subscript></highlight>for m<highlight><subscript>i </subscript></highlight>pair wise relatively prime and n, in O(log m) of a computational basis state &verbar;x&gt;, comprising: 
<claim-text>means for storing a modular representation of &verbar;x&gt; defined by the following transformation: </claim-text>
<claim-text><in-line-formula>&verbar;x&gt;&verbar;0,0 . . . , 0&gt; to &verbar;<highlight><bold>0&gt;&verbar;xmod m</bold></highlight><highlight><subscript>1</subscript></highlight>&gt;, &verbar;xmod m<highlight><subscript>2</subscript></highlight>&gt;, . . . , &verbar;xmod m<highlight><subscript>k</subscript></highlight>&gt;, </in-line-formula></claim-text>
<claim-text>where m<highlight><subscript>1 </subscript></highlight>for 1&equals;1 to k are pair wise relatively prime integers in O(logm) such that modulus m&equals;m<highlight><subscript>1</subscript></highlight>m<highlight><subscript>2</subscript></highlight>. . . m<highlight><subscript>k </subscript></highlight>multiplies each S<highlight><bold>1002</bold></highlight><highlight><italic>i </italic></highlight>by an integer, g<highlight><subscript>i</subscript></highlight>; and </claim-text>
<claim-text>means for computing the QFT modulus m<highlight><subscript>i </subscript></highlight>in logarithmic depth. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference> further comprising means for applying Fourier Transform to each component m<highlight><subscript>i</subscript></highlight>. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference> wherein a depth of the operation is O(Polynomial(log(log m))). </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A quantum computing system of factoring a large integer m or solving a hidden linear form problem of input size of order log(m) bits comprising: 
<claim-text>means for classical pre-processing; </claim-text>
<claim-text>means for quantum computing comprising: 
<claim-text>(1) means for creating an n qubit Fourier basis state of a n qubit computational basis state, and </claim-text>
<claim-text>(2) means for generating multiple copies of the n qubit Fourier basis state in additional sets of n qubits, and </claim-text>
<claim-text>(3) means for estimating the phase of the Fourier basis state from the copies of the Fourier basis state; and </claim-text>
</claim-text>
<claim-text>means for classical post-processing. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference> wherein operations are of depth O(Polynominal(log log m)).</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005010A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005010A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005010A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005010A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005010A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005010A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005010A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
