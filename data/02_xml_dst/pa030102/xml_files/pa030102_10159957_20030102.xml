<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004623A1-20030102-D00000.TIF SYSTEM "US20030004623A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004623A1-20030102-D00001.TIF SYSTEM "US20030004623A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004623A1-20030102-D00002.TIF SYSTEM "US20030004623A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004623A1-20030102-D00003.TIF SYSTEM "US20030004623A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004623A1-20030102-D00004.TIF SYSTEM "US20030004623A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004623A1-20030102-D00005.TIF SYSTEM "US20030004623A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004623A1-20030102-D00006.TIF SYSTEM "US20030004623A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004623A1-20030102-D00007.TIF SYSTEM "US20030004623A1-20030102-D00007.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004623</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10159957</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020531</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F007/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>701</class>
<subclass>029000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Scan tool with dropped communications detection and recovery and improved protocol selection</title-of-invention>
</technical-information>
<continuity-data>
<non-provisional-of-provisional>
<document-id>
<doc-number>60295318</doc-number>
<document-date>20010601</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Hamid</given-name>
<family-name>Namaky</family-name>
</name>
<residence>
<residence-us>
<city>South Russell</city>
<state>OH</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Robert</given-name>
<middle-name>Charles</middle-name>
<family-name>Sheppard</family-name>
</name>
<residence>
<residence-us>
<city>Westlake</city>
<state>OH</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Michael</given-name>
<middle-name>F.</middle-name>
<family-name>Gessner</family-name>
</name>
<residence>
<residence-us>
<city>Akron</city>
<state>OH</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Thomas</given-name>
<middle-name>J.</middle-name>
<family-name>Bertosa</family-name>
</name>
<residence>
<residence-us>
<city>Mentor-On-The-Lake</city>
<state>OH</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Robert</given-name>
<middle-name>A.</middle-name>
<family-name>Roberts</family-name>
</name>
<residence>
<residence-us>
<city>South Euclid</city>
<state>OH</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Donald</given-name>
<middle-name>J.</middle-name>
<family-name>Rodemann</family-name>
</name>
<residence>
<residence-us>
<city>Lakewood</city>
<state>OH</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>CALFEE HALTER &amp; GRISWOLD, LLP</name-1>
<name-2></name-2>
<address>
<address-1>800 SUPERIOR AVENUE</address-1>
<address-2>SUITE 1400</address-2>
<city>CLEVELAND</city>
<state>OH</state>
<postalcode>44114</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">An improved scan tool, e.g., for OBD II. According to one aspect of the present invention, the improved scan tool uses a novel method of determining the proper protocol to use to communicate with a vehicle computer network. According to another aspect of the present invention, the improved scan tool determines and automatically recovers from a communications drop-out. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application claims priority to U.S. Provisional Application Serial No. 60/295,318, filed on Jun. 1, 2001, and entitled SCAN TOOL WITH DROPPED COMMUNICATIONS DETECTION AND RECOVERY AND IMPROVED PROTOCOL SELECTION, which is hereby incorporated by reference in its entirety. This application also claims priority to U.S. Provisional Application Serial No. ______, filed May 30, 2002, also entitled SCAN TOOL WITH DROPPED COMMUNICATIONS DETECTION AND RECOVERY AND IMPROVED PROTOCOL SELECTION, and listing Messrs. Namaky, Sheppard, and Gessner as inventors, which is hereby incorporated by reference in its entirety.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates generally to the field of electronic testing devices, and more specifically to an improved &ldquo;off-board device,&rdquo; such as an OBD II scan tool, having dropped communications detection and recovery and further having improved protocol selection. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> &ldquo;Off-board devices,&rdquo; such as scan tools, are known in the art and are testing devices that interface with vehicle diagnostic systems to access, display, and/or print vehicle diagnostic information. OBD II (On-Board Diagnostics version II) Scan Tools are one commonly known type of scan tool and are governed by a number of standards, e.g., SAE J1978 Rev. 1988-02 and SAE J1979 Rev. 1997-09. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> There are a number of problems with the existing scan tools and scan tool specifications. For example, in certain vehicles, e.g., various model years of HYUNDAI, VW, DODGE, and VOLVO vehicles, the known scan tools have communications drop-outs. One minute the user will be using a scan tool and be examining e.g., 28 different parameters, and the next instant there is no response for all but e.g., three, of the parameters. What the user does not know is that one or more controllers, e.g., the engine controller, which is typically the main ODB II controller, has dropped out, leaving only a secondary controller, e.g., a transmission controller, talking with the scan tool. The known scan tools must begin the entire session over again, which can take half a minute or more and must be prompted by the user. As another example, sometimes following the specifications for determining the proper protocol does not result in using the protocol that provides the most relevant information (e.g., the most emissions information). Following the specifications, a scan tool might select a protocol that ends up with far less emissions data than another protocol. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> More specifically, protocol determination is automatic (hands off) determination of which communication protocol the vehicle is using for the OBD II functions. Some vehicles have multiple modules and these modules may use different communication protocols. But only one of these protocols contains all the OBD II information for the vehicle. Therefore, the scan tool must be able to determine which protocol is the correct one to use for OBD II purposes. This automatic determination is specified in a SAE J1978. Furthermore in section 6.4.1 and 6.4.2 the SAE has spelled out a procedure for trying the four (4) protocols and determining which one is the OBD II protocol supported by the vehicle to relate the appropriate functions. In section 6.4.1 the specification spells out that only one protocol is allowed to be used in any one vehicle to access all the supported OBD II functions. This does not mean than a vehicle cannot support more that one protocol, but that only one may be used as the OBD II link. The SAE has published a suggested method for determining the OBD II protocol in J1978 section 6.4.2. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Through on-vehicle testing the inventors of the present invention discovered that this recommended way has flaws: one ends up selecting the wrong protocol as the OBD II link. Therefore a scan tool following the recommendation is unable to determine the correct protocol and therefore unable to use all the covered OBD II functions and read all the available information from the vehicle. One of the vehicles in question, for example, is one that supports both ISO 9141-2 (ISO) and ISO 14230-4 (Keyword 2000). The engine control module uses ISO 14230-4 as its protocol and the transaxle control module uses ISO 9141-2. The engine controller is the module that supports the OBD II functions for the vehicle. But the SAE suggested procedure directs that one test for ISO 9141-2 first and if one receives a reply, then that was the protocol to use for the link. It is the same with ISO 14230-4, if it replies. This causes the scan tool to incorrectly choose the protocol being used by the transaxle as the OBD II protocol for this type of vehicle rather than the protocol being used by the engine controller. Now that the scan tool is using the wrong protocol, ISO 9141-4, it is only talking to the transaxle controller. The engine controller (and all the emissions information it has to offer) is not found. This type of problem can happen in other protocol combinations also. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Also, certain vehicles employ multiple modules that communicate using the same protocol. This type of system is subject to one or more of the modules to losing their active communication with off-board devices, like scan tools. If the scan tool does not realize that one or more of the modules has dropped the link, it will not be showing complete/correct data. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Once again during on-vehicle testing the inventors discovered that multiple module vehicles present certain problems. For example certain VW models that use an engine control module and a transaxle control module presented a problem. After determining the OBD II protocol and initializing both modules for communications, it was noticed that one or the other module would occasionally stop communicating. This problem could be seen while requesting information on several functions, such as the &ldquo;View Data&rdquo; function (also known as the &ldquo;Live Data&rdquo; function). For example, user might notice during one View Data session that two modules report the state of the Malfunction Indicator Lamp (&ldquo;MIL&rdquo;) and might notice on a subsequent View Data session on the same vehicle that only one module reports the MIL&apos;s state. The MIL&apos;s state from the other modules is now unknown. What happened is that, unknown to the user, one of the controllers dropped the communications link, so it did not respond to the request for the state of the MIL. These problems can result in OBD II information being misreported. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> There is a need, therefore, for an improved scan tool. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The present invention is directed toward an improved &ldquo;off-board device.&rdquo; In one embodiment, the &ldquo;off-board device&rdquo; of the present invention is a scan tool. According to one aspect of the present invention, the improved scan tool uses a novel method of determining the proper protocol to use to communicate with a vehicle computer network. According to another aspect of the present invention, the improved scan tool determines and automatically recovers from a communications drop-out. The scan tool of the present invention preferably, but not necessarily, includes both the novel method of determining the proper protocol to use to communicate with a vehicle computer network and the determination and automatic recovery from a communications drop-out. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> It is therefore an advantage of the present invention to provide an improved scan tool that determines the protocol that provides the most relevant vehicle information (e.g., the protocol that provides the most emissions information). </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> It is also an advantage of the present invention to provide an improved scan tool that determines when a module has had a communications drop-out. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> It is another advantage of the present invention to provide an improved scan tool that automatically recovers from a communications drop-out. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> It is a further advantage of this invention to provide an improved scan tool that automatically recovers from a communications drop-out without requiring that the protocol be re-determined. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> It is yet another advantage of the present invention to provide an improved scan tool that determines when a module has had a communications drop-out and that automatically recovers from a communications drop-out. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> These and other advantages of the present invention will become more apparent from a detailed description of the invention. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> In the accompanying drawings, which are incorporated in and constitute a part of this specification, embodiments of the invention are illustrated, which, together with a general description of the invention given above, and the detailed description given below, serve to example the principles of this invention, wherein: </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a high-level block diagram of a scan tool according to the present invention; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of a specific implementation of a scan tool according to the present invention; and </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> FIGS. <highlight><bold>3</bold></highlight>-<highlight><bold>7</bold></highlight> are flow charts showing the novel methods used by the scan tool of the present invention to select the proper protocol, determine whether a communications drop-out has occurred, and recover from a communications drop-out.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> high-level block diagram of both a typical scan tool and a scan tool <highlight><bold>10</bold></highlight> of the present invention is shown. Such a scan tool <highlight><bold>10</bold></highlight> comprises a processor system <highlight><bold>12</bold></highlight> in circuit communication with a communication circuit <highlight><bold>14</bold></highlight>, a display <highlight><bold>16</bold></highlight>, one or more input devices <highlight><bold>18</bold></highlight>, and optional additional storage device(s) <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> &ldquo;Circuit communication&rdquo; as used herein indicates a communicative relationship between devices. Direct electrical, electromagnetic, and optical connections and indirect electrical, electromagnetic, and optical connections are examples of circuit communication. Two devices are in circuit communication if a signal from one is received by the other, regardless of whether the signal is modified by some other device. For example, two devices separated by one or more of the following-amplifiers, filters, transformers, optoisolators, digital or analog buffers, analog integrators, other electronic circuitry, fiber optic transceivers, or even satellites-are in circuit communication if a signal from one is communicated to the other, even though the signal is modified by the intermediate device(s). As another example, an electromagnetic sensor is in circuit communication with a signal if it receives electromagnetic radiation from the signal. As a final example, two devices not directly connected to each other, but both capable of interfacing with a third device, e.g., a CPU, are in circuit communication. Also, as used herein, voltages and values representing digitized voltages are considered to be equivalent for the purposes of this application and thus the term &ldquo;voltage&rdquo; as used herein refers to either a signal, or a value in a processor representing a signal, or a value in a processor determined from a value representing a signal. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The scan tool <highlight><bold>10</bold></highlight> is placed in circuit communication with a vehicle computer network <highlight><bold>30</bold></highlight> having one or more interconnected computers (&ldquo;modules&rdquo;) via a connection link carried by a communication cable <highlight><bold>32</bold></highlight>. The connection cable <highlight><bold>32</bold></highlight> typically has a connector <highlight><bold>34</bold></highlight> affixed thereto that connects to a mating connector <highlight><bold>36</bold></highlight> in circuit communication with the vehicle computer network <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The processor circuit <highlight><bold>12</bold></highlight>, also referred to herein as just processor <highlight><bold>12</bold></highlight>, may be one of virtually any number of processor systems and/or stand-alone processors, such as microprocessors, microcontrollers, and digital signal processors, and has associated therewith, either internally therein or externally in circuit communication therewith, associated RAM, ROM, EPROM, clocks, decoders, memory controllers, and/or interrupt controllers, etc. (all not shown) known to those in the art to be needed to implement a processor circuit. <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows a high-level block diagram of an exemplary scan tool using an MC68306 processor to implement a scan tool having a generic vehicle interface and a specific vehicle interface, and a cartridge EPROM. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The communications circuit <highlight><bold>14</bold></highlight> typically generates one or more communications protocols with which the scan tool <highlight><bold>10</bold></highlight> and the vehicle computer network <highlight><bold>30</bold></highlight> communicate with one-another. The communications circuit <highlight><bold>14</bold></highlight> can be implemented either in hardware, or in software, or in a combination of hardware and software. Typical communications protocols generated by the communication circuit <highlight><bold>14</bold></highlight> of scan tools include but are not limited to: SAE J1850 (VPW), SAE J1850 (PWM), ISO 9141-2, and ISO 142304 (&ldquo;Keyword <highlight><bold>2000</bold></highlight>&rdquo;). The present invention is not intended to be limited to any specific protocol, or even to electrical communications protocols. Other present and future protocols, such as fiber optic and wireless communications protocols, are also contemplated as being within the scope of the present invention. The display <highlight><bold>16</bold></highlight> can be one or more of virtually any type of display, e.g., textual displays (such as n character by m line LCD or plasma displays, etc.), binary displays (such as LEDs, lamps, etc.), graphical displays (such as LCD displays that can display text and bar graphs and the like), etc. The input device(s) typically comprise one or more keys or a keyboard, but may be one or more of virtually any type of input device, such as touch screens, etc. The optional additional storage device(s) <highlight><bold>20</bold></highlight> can comprise, for example, cartridge memories (such as those containing EPROM, EEPROM, or Flash PROM memories), cartridge memories, PC cards, stick memories (such as SONY brand MEMORY STICK packaged memory semiconductors), so-called floppy diskettes, etc. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The processor <highlight><bold>12</bold></highlight> typically executes a computer program stored in its RAM, ROM, Flash memory, and/or its EPROM (all not shown) and/or stored in any of the additional storage device(s) <highlight><bold>20</bold></highlight>, using data stored in any one or more of those memories. For example, the processor <highlight><bold>12</bold></highlight> may execute a computer program from a ROM (not shown) using data (e.g., codes) stored in a cartridge memory <highlight><bold>20</bold></highlight>. In general, the computer program executed by the processor in typical scan tools initializes the scan tool and generates a user interface (e.g., using the input device(s) <highlight><bold>18</bold></highlight>), through which a user causes the scan tool to communicate with the vehicle computer network <highlight><bold>30</bold></highlight> to read certain data from the vehicle computer network <highlight><bold>30</bold></highlight>, format such read data, and display the formatted data on the display <highlight><bold>16</bold></highlight>. At this high level, the scan tool <highlight><bold>10</bold></highlight> according to the present invention works the same: the computer program executed by the processor <highlight><bold>12</bold></highlight> initializes the scan tool <highlight><bold>10</bold></highlight> and generates a user interface (e.g., using the input device(s) <highlight><bold>18</bold></highlight>), through which a user causes the scan tool <highlight><bold>10</bold></highlight> to communicate with the vehicle computer network <highlight><bold>30</bold></highlight> to read certain data from the vehicle computer network <highlight><bold>30</bold></highlight>, format such read data, and display the formatted data on the display <highlight><bold>16</bold></highlight>. A fundamental difference in the present invention is how the scan tool <highlight><bold>10</bold></highlight> of the present invention selects a protocol through which it communicates with the vehicle computer network <highlight><bold>30</bold></highlight>. Another fundamental difference is how the scan tool <highlight><bold>10</bold></highlight> of the present invention detects and recovers from a dropped communications link. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 3, a</cross-reference> high-level flow chart <highlight><bold>100</bold></highlight> showing the code executed by processor <highlight><bold>12</bold></highlight> to determine the proper communications protocol with the vehicle computer network <highlight><bold>30</bold></highlight> is shown. In general, the protocol determining routine of the present invention determines which protocol results in the most relevant data (e.g., the most OBD II emissions data) being available to the scan tool <highlight><bold>10</bold></highlight> from the vehicle computer network <highlight><bold>30</bold></highlight> and selects that protocol as the protocol to use. This necessarily involves checking all (or at least many) of the available protocols (or merely selected protocols) and not merely using the first protocol with which the scan tool establishes a communications link with the vehicle computer network <highlight><bold>30</bold></highlight>. Of course, the scan tool <highlight><bold>10</bold></highlight> must be connected to the vehicle computer network <highlight><bold>30</bold></highlight> via a suitable cable <highlight><bold>32</bold></highlight> or other communications medium, e.g., fiber optic or wireless medium. The code begins at step <highlight><bold>102</bold></highlight>. First, at step <highlight><bold>104</bold></highlight>, a first protocol is selected. In the case of an ODB II scan tool according to the present invention, the first protocol to test might be the SAE J1850 (PWM) protocol. Next, at <highlight><bold>106</bold></highlight>, the processor <highlight><bold>12</bold></highlight> causes the communications circuit <highlight><bold>14</bold></highlight> to attempt to establish a communications link with the vehicle computer network <highlight><bold>30</bold></highlight> using the first protocol. If any modules answer, at step <highlight><bold>108</bold></highlight>, the processor <highlight><bold>12</bold></highlight> causes the communications circuit <highlight><bold>14</bold></highlight> to request data from the module(s) using the first protocol, at <highlight><bold>110</bold></highlight>. The data, if any, transmitted by the module(s) is stored by protocol and module. More specifically to an OBD II scan tool according to the present invention, at step <highlight><bold>110</bold></highlight>, a request that will result in most if not all of the modules responding (such as a Mode 1 PID 0 request, or a Mode 1 PID 1 request) is issued and the number of pieces of information (in the case of a Mode 1 PID 0 request, the supported PIDs; in the case of a Mode 1 PID 1 request, the number of &ldquo;monitors&rdquo;) for all the modules is stored for that protocol. Then, or if no modules responded at test <highlight><bold>108</bold></highlight>, the code tests, at step <highlight><bold>112</bold></highlight>, whether all the protocols have been tested. If not, the code branches at <highlight><bold>113</bold></highlight> to step <highlight><bold>114</bold></highlight>, where another communications protocol is selected to be tested. The protocols can either be tested in a predetermined fashion, or a random fashion, or a combination of predetermined and random. Then the code executes again from step <highlight><bold>106</bold></highlight> through step <highlight><bold>112</bold></highlight> with the next protocol until all the protocols (or selected protocols) have been tested. If none of the protocols generated a response from any modules, then the code preferably informs the user of this fact and provides the user with guidance and a number of options, as discussed below in the text accompanying tasks <highlight><bold>338</bold></highlight> and <highlight><bold>426</bold></highlight>. If one of the protocols did generate a response from a module, then the code branches at <highlight><bold>115</bold></highlight> to step <highlight><bold>116</bold></highlight> where the requested data is analyzed to determine which protocol should be used. In general, the protocol resulting in the most pieces of relevant data being available or transmitted is selected. If there is a tie, a predetermined list of priorities, such as those provided in the OBD II specifications or those predetermined by some other means, can be used to break the tie. For example, suppose that the vehicle computer network <highlight><bold>30</bold></highlight> responds to a Mode 1 PID 1 request by reporting <highlight><bold>7</bold></highlight> monitors for the ISO protocol and by reporting <highlight><bold>8</bold></highlight> monitors for the Keyword 2000 protocol; the Keyword 2000 protocol would be chosen. Supposing that the vehicle computer network <highlight><bold>30</bold></highlight> responds to a Mode 1 PID 1 request by reporting <highlight><bold>7</bold></highlight> monitors for the ISO protocol and by reporting <highlight><bold>7</bold></highlight> monitors for the Keyword 2000 protocol; the ISO protocol would be selected, because that protocol takes precedence over the Keyword 2000 in the specifications. Thereafter, the communications circuit <highlight><bold>14</bold></highlight> communicates with the vehicle computer network <highlight><bold>30</bold></highlight> using that selected protocol, as shown at task <highlight><bold>118</bold></highlight>. As shown at step <highlight><bold>120</bold></highlight>, the scan tool <highlight><bold>10</bold></highlight> then reads and displays data from the vehicle computer network <highlight><bold>30</bold></highlight> in response to user commands, using the selected protocol. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Another important aspect of the present invention is how the scan tool <highlight><bold>10</bold></highlight> of the present invention handles communications drop-outs. In general, the present invention determines whether a module has dropped out or has merely ignored a request for data. Additionally, after a communications drop-out is detected, the present invention preferably communicates with the vehicle computer network <highlight><bold>30</bold></highlight> using the protocol determined by the code shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. The scan tool <highlight><bold>10</bold></highlight> preferably does not re-determine the proper protocol after a drop-out. The resulting time-savings of half a minute-or-so might seem to be trivial, but to a user it can be significant, especially in a situation when communication dropouts are frequent. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 4, a</cross-reference> high-level flow chart <highlight><bold>200</bold></highlight> showing the code executed by processor <highlight><bold>12</bold></highlight> to determine a communications drop-out and recover therefrom is shown. The code begins at <highlight><bold>202</bold></highlight> with the scan tool <highlight><bold>10</bold></highlight> of the present invention determining how many modules respond to the protocol (e.g., OBD II protocol) being used and stores the IDs of the modules. Then whenever requesting data or communicating with the vehicle computer network <highlight><bold>30</bold></highlight>, such as at task <highlight><bold>204</bold></highlight>, the scan tool <highlight><bold>10</bold></highlight> checks to be sure that all the modules that previously responded at step <highlight><bold>202</bold></highlight> answer the request, at <highlight><bold>206</bold></highlight>. If all of the modules answer, at <highlight><bold>208</bold></highlight>, then there has been no communications drop-out and the code branches and can continue at <highlight><bold>209</bold></highlight> either accessing more data or displaying the data, etc. On the other hand, if at <highlight><bold>208</bold></highlight> one or more of the previously identified modules does not respond, the code next determines whether that specific module lost the link or whether that module merely ignored the request issued at step <highlight><bold>204</bold></highlight>, e.g., that module does not support the request sent. On the one hand, if the scan tool <highlight><bold>10</bold></highlight> determines that the module that did not respond is still communicating via that protocol, the scan tool <highlight><bold>10</bold></highlight> of the present invention assumes that that module merely ignored the request, e.g., it does not support the request. On the other hand, if the non-responsive module is also not communicating in response to more basic requests, then the scan tool <highlight><bold>10</bold></highlight> of the present invention concludes that there has been a communications drop-out. More specific to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, if at <highlight><bold>208</bold></highlight> one or more of the previously identified modules does not respond, the code branches at <highlight><bold>210</bold></highlight> to step <highlight><bold>212</bold></highlight>, where the code checks and determines again which modules are still linked, preferably using exactly the same method as used in step <highlight><bold>202</bold></highlight>. In the context of an OBD II scan tool according to the present invention, if a Mode 1 PID 0 request was issued at step <highlight><bold>202</bold></highlight>, then a Mode 1 PID 0 request is preferably also issued at step <highlight><bold>212</bold></highlight>. If at <highlight><bold>214</bold></highlight> the same modules are still linked in response to the request issued at step <highlight><bold>212</bold></highlight> as were linked at step <highlight><bold>202</bold></highlight>, then there has been no communications drop-out and the code branches at <highlight><bold>216</bold></highlight>, and can continue at <highlight><bold>218</bold></highlight> either accessing more data or displaying the data, etc. On the other hand, if at <highlight><bold>214</bold></highlight> the same modules are not still linked in response to the request issued at step <highlight><bold>212</bold></highlight> as were linked at step <highlight><bold>202</bold></highlight>, then there has been a communications drop-out and the code branches at <highlight><bold>220</bold></highlight>, where the code responds to a communications drop-out at <highlight><bold>222</bold></highlight>. At <highlight><bold>222</bold></highlight>, a number of things can be done, such as re-initializing the communications link and/or trying the request at step <highlight><bold>204</bold></highlight> again. Trying the request at step <highlight><bold>204</bold></highlight> again should not be repeated indefinitely, or the code might end up in an endless loop (as might happen, e.g., if the transmitted communication/request at <highlight><bold>204</bold></highlight> was causing one or more of the modules to stop communicating). Also the physical connection or power to the modules might have been lost, causing one or more modules to stop linking. Therefore, eventually, it should be reported to the user that the scan tool <highlight><bold>10</bold></highlight> has detected a communications drop-out, as shown at <highlight><bold>222</bold></highlight>. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The code shown in flowchart form in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is intended to be relatively general. An example of code more specifically tailored to an OBD II environment <highlight><bold>300</bold></highlight> is shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. Referring to that Figure, the code <highlight><bold>300</bold></highlight> begins at <highlight><bold>302</bold></highlight> with the processor <highlight><bold>12</bold></highlight> determining the protocol to use as taught in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> and the text accompanying that Figure. If the protocol has previously been selected, then the process can skip to task <highlight><bold>310</bold></highlight>. (As should be apparent, the protocol need not be determined each time the user uses the device <highlight><bold>10</bold></highlight> to request information from the vehicle computer network <highlight><bold>30</bold></highlight>, i.e., steps <highlight><bold>302</bold></highlight>-<highlight><bold>308</bold></highlight> are preferably done once each time the device <highlight><bold>10</bold></highlight> is connected to the vehicle computer network <highlight><bold>30</bold></highlight>, with subsequent accesses being done at <highlight><bold>312</bold></highlight> using the protocol previously determined at <highlight><bold>302</bold></highlight> and the baseline determined at <highlight><bold>308</bold></highlight>.) Next, at <highlight><bold>304</bold></highlight>, the processor <highlight><bold>12</bold></highlight> initializes all modules in the network <highlight><bold>30</bold></highlight> using the selected protocol. Then at <highlight><bold>306</bold></highlight>, the processor causes the communications circuit <highlight><bold>14</bold></highlight> to send a request that all modules in the network <highlight><bold>30</bold></highlight> should respond to, such as a Mode 1 PID 0 request. Then the processor saves the IDs of the modules that respond to the request, at <highlight><bold>308</bold></highlight>. Then at task <highlight><bold>310</bold></highlight> whenever requesting data or communicating with the vehicle computer network <highlight><bold>30</bold></highlight>, such as at task <highlight><bold>312</bold></highlight>, the scan tool <highlight><bold>10</bold></highlight> checks to be sure that all the modules that previously responded at step <highlight><bold>308</bold></highlight> answer the request, at <highlight><bold>314</bold></highlight>. If all of the modules answer, at <highlight><bold>314</bold></highlight>, then there has been no communications drop-out and the code branches at <highlight><bold>316</bold></highlight> and can continue at <highlight><bold>318</bold></highlight> either accessing more data or displaying the data, etc. On the other hand, if at <highlight><bold>314</bold></highlight> one or more of the previously identified modules does not does not respond to the request issued at <highlight><bold>312</bold></highlight>, the code next determines whether that specific module lost the link or whether that module merely ignored the request issued at step <highlight><bold>204</bold></highlight>, e.g., that module does not support the request sent. If the scan tool <highlight><bold>10</bold></highlight> determines that the module that did not respond is still communicating via that protocol, the scan tool <highlight><bold>10</bold></highlight> assumes that that module merely ignored the request, e.g., it does not support the request. If the non-responsive module is also not communicating in response to more basic requests, then the scan tool <highlight><bold>10</bold></highlight> concludes that there has been a communications drop-out. More specific to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, if at <highlight><bold>314</bold></highlight> one or more of the previously identified modules does not respond, the code branches at <highlight><bold>320</bold></highlight> to step <highlight><bold>322</bold></highlight>, where the code checks and determines again which modules are still linked, preferably using exactly the same method as used in step <highlight><bold>306</bold></highlight>, e.g., by issuing a Mode 1 PID 0 request. If at step <highlight><bold>324</bold></highlight> the same modules are still linked in response to the request issued at step <highlight><bold>322</bold></highlight> as were linked at step <highlight><bold>308</bold></highlight>, then there has been no communications drop-out and the code branches at <highlight><bold>326</bold></highlight>, and can continue at <highlight><bold>328</bold></highlight> either accessing more data or displaying the data, etc. On the other hand, if at <highlight><bold>324</bold></highlight> the same modules are not still linked in response to the request issued at step <highlight><bold>322</bold></highlight> as were linked at step <highlight><bold>308</bold></highlight>, then there has been a communications drop-out and the code branches at <highlight><bold>330</bold></highlight>, where the code increments a counter (previously zeroed) at <highlight><bold>332</bold></highlight>. If at <highlight><bold>334</bold></highlight> the counter has reached a predetermined threshold, e.g., three (3), then the code branches at <highlight><bold>336</bold></highlight> and user is advised of the situation at <highlight><bold>338</bold></highlight> (because there have been n (e.g., three) unsuccessful attempts at communicating with that module). The user is preferably prompted to do one or more of the following: check the physical connections (e.g., the connection between connectors <highlight><bold>34</bold></highlight>, <highlight><bold>36</bold></highlight>), ensure that the ignition key is on, ensure that the PCM power and ground are OK, turn the ignition key off for ten seconds or so, and restart the entire process. If at <highlight><bold>334</bold></highlight> the counter is less than the predetermined number, the scan tool <highlight><bold>10</bold></highlight> of the present invention does one or more of the following things to try to automatically respond to the communications drop-out, such as quieting the link or waiting for an idle period of time (e.g., on the order of from about 8 to about 10 seconds) at <highlight><bold>342</bold></highlight> and attempting to perform a complete or partial initialization of the modules via the selected protocol (or possibly reinitializing all the protocols) at <highlight><bold>344</bold></highlight>. In either event, the code branches at <highlight><bold>346</bold></highlight> to attempt the same request again, preferably using the same protocol determined at step <highlight><bold>302</bold></highlight> without re-determining the protocol. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> Another example of code specifically tailored to an OBD II environment is shown in FIGS. <highlight><bold>6</bold></highlight>-<highlight><bold>7</bold></highlight>. More specifically, <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows a code subroutine that is used in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. In this examples, a more basic request is issued to test whether there has been a communications dropout, and whether any additional modules have linked, before sending a more specific request. Referring first to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, the subroutine <highlight><bold>400</bold></highlight> shown is essentially steps <highlight><bold>322</bold></highlight> through <highlight><bold>342</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, with an additional test <highlight><bold>404</bold></highlight> to see if any more modules responded than had previously responded. The code <highlight><bold>400</bold></highlight> begins at step <highlight><bold>402</bold></highlight> where the code checks and determines again which modules are still linked, preferably using exactly the same method as used in step <highlight><bold>506</bold></highlight>, e.g., by issuing a Mode 1 PID 0 request. Next, at <highlight><bold>404</bold></highlight>, the code determines whether any additional modules have linked to the device <highlight><bold>10</bold></highlight>. If at step <highlight><bold>404</bold></highlight> the same modules are still linked in response to the request issued at step <highlight><bold>402</bold></highlight> as were linked at step <highlight><bold>508</bold></highlight>, then no additional modules have linked and the code branches at <highlight><bold>406</bold></highlight>, and can continue at <highlight><bold>408</bold></highlight> with a test to see if any modules have been dropped. On the other hand, if at <highlight><bold>404</bold></highlight> one or more additional modules have linked to the device <highlight><bold>10</bold></highlight> than were linked at step <highlight><bold>508</bold></highlight>, then the code branches at <highlight><bold>410</bold></highlight>, where the code adds the module IDs of the newly linked modules to the list of module IDs previously generated and continues to step <highlight><bold>408</bold></highlight>. At step <highlight><bold>408</bold></highlight>, the code determines whether any modules have dropped their communication link with the device <highlight><bold>10</bold></highlight> by comparing the list of devices responding to the request issued at step <highlight><bold>402</bold></highlight> to the list of module IDs that was previously generated at step <highlight><bold>508</bold></highlight> and possibly modified at step <highlight><bold>412</bold></highlight>. If so, then there has been no communications drop-out and the code branches at <highlight><bold>414</bold></highlight>, and returns at <highlight><bold>416</bold></highlight> and can continue either accessing more data or displaying the data, etc. On the other hand, if at <highlight><bold>408</bold></highlight> the same modules are not still linked in response to the request issued at step <highlight><bold>402</bold></highlight>, then there has been a communications drop-out and the code branches at <highlight><bold>418</bold></highlight>, where the code increments a counter (previously zeroed) at <highlight><bold>420</bold></highlight>. This counter is tested at <highlight><bold>422</bold></highlight> and if the counter has reached a predetermined threshold, e.g., three (3), then the code branches at <highlight><bold>424</bold></highlight> and user is advised of the situation at <highlight><bold>426</bold></highlight> (i.e., there was a failure to determine a protocol because none of the protocols of <cross-reference target="DRAWINGS">FIG. 3</cross-reference> resulted in a module providing any data or there has been a link failure because there have been n (e.g., three) unsuccessful attempts at communicating with that module). The user is then preferably prompted to do one or more of the following: check the physical connections (e.g., the connection between connectors <highlight><bold>34</bold></highlight>, <highlight><bold>36</bold></highlight>), ensure that the ignition key is on, ensure that the PCM power and ground are OK, turn the ignition key off for ten seconds or so, and restart the entire process. The user is also preferably given the option of exiting or restarting the process. If the user was using either View Data or Live Data, then the user is preferably given the option of continuing the View data or Record Data with only the modules that are responding. The value of n that triggers user intervention could be user-selectable, as could the counter at <highlight><bold>332</bold></highlight> that is tested at <highlight><bold>334</bold></highlight>. If at <highlight><bold>422</bold></highlight> the counter is less than the predetermined number, the scan tool <highlight><bold>10</bold></highlight> of the present invention does one or more of the following things to try to automatically respond to the communications drop-out, such as quieting the link or waiting for an idle period of time (e.g., on the order of from about 8 to about 10 seconds) at <highlight><bold>426</bold></highlight> and returning at <highlight><bold>428</bold></highlight> to attempt to perform a complete or partial initialization of the modules via the selected protocol (or possibly reinitializing all the protocols). </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The example of <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is intended to be used in modes where data is repeatedly acquired from the vehicle computer network, such as with the View Data (also known as Live Data) and Record Data functions. Referring now to <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the code <highlight><bold>500</bold></highlight> begins at <highlight><bold>502</bold></highlight> with the processor <highlight><bold>12</bold></highlight> determining the protocol to use as taught in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> and the text accompanying that Figure. If the protocol has previously been selected, then the process can skip to task <highlight><bold>510</bold></highlight>. (As should be apparent, the protocol need not be determined each time the user uses the device <highlight><bold>10</bold></highlight> to request information from the vehicle computer network <highlight><bold>30</bold></highlight>, i.e., steps <highlight><bold>502</bold></highlight>-<highlight><bold>508</bold></highlight> are preferably done once each time the device <highlight><bold>10</bold></highlight> is connected to the vehicle computer network <highlight><bold>30</bold></highlight>, with subsequent accesses being done at <highlight><bold>512</bold></highlight> using the protocol previously determined at <highlight><bold>502</bold></highlight> and the baseline determined at <highlight><bold>508</bold></highlight>, possibly modified at <highlight><bold>412</bold></highlight>.) Next, at <highlight><bold>504</bold></highlight>, the processor <highlight><bold>12</bold></highlight> initializes all modules in the network <highlight><bold>30</bold></highlight> using the selected protocol. Then at <highlight><bold>506</bold></highlight>, the processor causes the communications circuit <highlight><bold>14</bold></highlight> to send a request that all modules in the network <highlight><bold>30</bold></highlight> should respond to, such as a Mode 1 PID 0 request. Then the processor saves the IDs of the modules that respond to the request, at <highlight><bold>508</bold></highlight>. Then at task <highlight><bold>510</bold></highlight> whenever requesting data or communicating with the vehicle computer network <highlight><bold>30</bold></highlight>, such as at task <highlight><bold>512</bold></highlight>, the scan tool <highlight><bold>10</bold></highlight> checks to be sure that all the modules that previously responded at step <highlight><bold>508</bold></highlight> (possibly modified at step <highlight><bold>412</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>) answer the request, at <highlight><bold>512</bold></highlight>. However, prior to sending a request at <highlight><bold>512</bold></highlight>, the code tests whether all of the previously identified modules are still responding, at <highlight><bold>514</bold></highlight>, by executing the subroutine of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. If the routine of <cross-reference target="DRAWINGS">FIG. 6</cross-reference> returns via task <highlight><bold>428</bold></highlight>, then at least one module has lost its communications link and the code continues at <highlight><bold>516</bold></highlight> to task <highlight><bold>518</bold></highlight>, where the code attempts to perform a complete or partial initialization of the modules via the selected protocol (or possibly reinitializing all the protocols). In either event, the code branches at <highlight><bold>520</bold></highlight> to attempt the same test again, preferably using the same protocol determined at step <highlight><bold>502</bold></highlight> without re-determining the protocol. If at <highlight><bold>514</bold></highlight> the routine of <cross-reference target="DRAWINGS">FIG. 6</cross-reference> returns via task <highlight><bold>416</bold></highlight>, then the code continues at <highlight><bold>522</bold></highlight> to send a request at <highlight><bold>512</bold></highlight>. If all of the modules answer, at <highlight><bold>524</bold></highlight>, then there has been no communications drop-out and the code branches at <highlight><bold>526</bold></highlight> and can continue at <highlight><bold>528</bold></highlight> either accessing more data or displaying the data, etc. On the other hand, if at <highlight><bold>524</bold></highlight> one or more of the previously identified modules does not does not respond to the request issued at <highlight><bold>512</bold></highlight>, the code branches at <highlight><bold>530</bold></highlight> and next determines whether that specific module lost the link or whether that module merely ignored the request issued at step <highlight><bold>512</bold></highlight>, e.g., that module does not support the request sent, by re-executing the routine of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, at <highlight><bold>532</bold></highlight>. If the scan tool <highlight><bold>10</bold></highlight> determines that the module that did not respond is still communicating via that protocol, i.e., the routine of <cross-reference target="DRAWINGS">FIG. 6</cross-reference> returns via task <highlight><bold>416</bold></highlight>, the scan tool <highlight><bold>10</bold></highlight> assumes that that module merely ignored the request, e.g., it does not support the request, and the code continues at <highlight><bold>534</bold></highlight> either accessing more data or displaying the data, etc. If the non-responsive module is also not communicating in response to more basic requests, i.e., the routine of <cross-reference target="DRAWINGS">FIG. 6</cross-reference> returns via task <highlight><bold>428</bold></highlight>, then the scan tool <highlight><bold>10</bold></highlight> concludes that there has been a communications drop-out and the code continues via <highlight><bold>535</bold></highlight> to task <highlight><bold>536</bold></highlight> to perform a complete or partial initialization of the modules via the selected protocol (or possibly reinitializing all the protocols). In either event, the code branches at <highlight><bold>538</bold></highlight> to attempt the same request again, preferably using the same protocol determined at step <highlight><bold>502</bold></highlight> without re-determining the protocol. As discussed above, the example of <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is intended to be used in modes where data is repeatedly acquired from the vehicle computer network. As with <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the code of <cross-reference target="DRAWINGS">FIG. 7</cross-reference> can be used with functions that use a one-time access. Preferably, however, only a subset of the code of <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is used for functions involving a one-time access of the vehicle computer network <highlight><bold>30</bold></highlight>, such as reading diagnostic trouble codes (DTCs), reading oxygen monitors, reading any pending codes, erasing codes, reading vehicle information, etc. In the case of these one-time accesses, one preferably uses only tasks <highlight><bold>502</bold></highlight> through <highlight><bold>522</bold></highlight>, and uses whatever data is returned in response to the request at task <highlight><bold>512</bold></highlight>, without performing the functions of tasks <highlight><bold>524</bold></highlight> through <highlight><bold>536</bold></highlight>. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> While the present invention has been illustrated by the description of embodiments thereof, and while the embodiments have been described in some detail, it is not the intention of the applicant to restrict or in any way limit the scope of the appended claims to such detail. Additional advantages and modifications will readily appear to those skilled in the art, for example, using fiber optic or wireless protocols. Of course, in the OBD II context, a Mode 1 PID 0 request need not be used; other codes might flush out the available modules and monitors. As another example, the teachings of the present invention are not limited to scan tools, per se. They can, for example, be implemented in other off-board devices, such as in PC-based emissions and maintenance test systems, such as those found at many state EPA testing centers and in end-of-line testers used by automobile manufacturers. Therefore, the invention in its broader aspects is not limited to the specific details, representative apparatus and methods, and illustrative examples shown and described. Accordingly, departures may be made from such details without departing from the spirit or scope of the applicant&apos;s general inventive concept. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle, the diagnostic system having one or more modules, comprising the steps of: 
<claim-text>(a) requesting data from one or more of the diagnostic system modules using a first communications protocol; </claim-text>
<claim-text>(b) determining a number of pieces of information received from the one or more modules using the first communications protocol; </claim-text>
<claim-text>(c) requesting data from one or more of the diagnostic system modules using a second communications protocol; </claim-text>
<claim-text>(d) determining a number of pieces of information received from the one or more modules using the second communications protocol; </claim-text>
<claim-text>(e) selecting from the plurality of communications protocols a communications protocol to use for subsequent communications between the off-board device and the diagnostic system using at least the number of pieces of information received from the one or more modules using the first communications protocol and the number of pieces of information received from the one or more modules using the second communications protocol; and </claim-text>
<claim-text>(f) communicating between the off-board device and the diagnostic system using the selected communications protocol. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising the steps of: 
<claim-text>requesting data from one or more of the diagnostic system modules using a third communications protocol; and </claim-text>
<claim-text>determining a number of pieces of information received from the one or more modules using the third communications protocol; and </claim-text>
<claim-text>wherein said step (e) comprises the step of selecting from the plurality of communications protocols a communications protocol to use for subsequent communications between the off-board device and the diagnostic system using at least the number of pieces of information received from the one or more modules using the first communications protocol, the number of pieces of information received from the one or more modules using the second communications protocol, and the number of pieces of information received from the one or more modules using the third communications protocol. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> further comprising the steps of: 
<claim-text>requesting data from one or more of the diagnostic system modules using a fourth communications protocol; and </claim-text>
<claim-text>determining a number of pieces of information received from the one or more modules using the fourth communications protocol; and </claim-text>
<claim-text>wherein said step (e) comprises the step of selecting from the plurality of communications protocols a communications protocol to use for subsequent communications between the off-board device and the diagnostic system using at least the number of pieces of information received from the one or more modules using the first communications protocol, the number of pieces of information received from the one or more modules using the second communications protocol, the number of pieces of information received from the one or more modules using the third communications protocol, and the number of pieces of information received from the one or more modules using the fourth communications protocol. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said step (b) comprises the step of determining a number of diagnostic monitors available using the first communications protocol, wherein said step (d) comprises the step of determining a number of diagnostic monitors available using the second communications protocol, and wherein said step (f) comprises the step of selecting from the plurality of communications protocols a communications protocol to use for subsequent communications between the off-board device and the diagnostic system using at least the number of diagnostic monitors available using the first communications protocol and the number of diagnostic monitors available using the second communications protocol. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said step (b) comprises the step of determining a number of diagnostic monitors available using the first communications protocol, wherein said step (d) comprises the step of determining a number of diagnostic monitors available using the second communications protocol, and wherein said step (f) comprises the step of selecting from the plurality of communications protocols the communications protocol that makes available the highest number of diagnostic monitors. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00022">claim 2:</dependent-claim-reference> 
<claim-text>wherein said step of determining a number of pieces of information received from the one or more modules using the first communications protocol comprises the step of determining a number of diagnostic monitors available using the first communications protocol; </claim-text>
<claim-text>wherein said step of determining a number of pieces of information received from the one or more modules using the second communications protocol comprises the step of determining a number of diagnostic monitors available using the second communications protocol; </claim-text>
<claim-text>wherein said step of determining a number of pieces of information received from the one or more modules using the third communications protocol comprises the step of determining a number of diagnostic monitors available using the third communications protocol; and </claim-text>
<claim-text>wherein said step (f) comprises the step of selecting from the plurality of communications protocols a communications protocol to use for subsequent communications between the off-board device and the diagnostic system using at least the number of diagnostic monitors available using the first communications protocol, the number of diagnostic monitors available using the second communications protocol, and the number of diagnostic monitors available using the third communications protocol. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00022">claim 2:</dependent-claim-reference> 
<claim-text>wherein said step of determining a number of pieces of information received from the one or more modules using the first communications protocol comprises the step of determining a number of diagnostic monitors available using the first communications protocol; </claim-text>
<claim-text>wherein said step of determining a number of pieces of information received from the one or more modules using the second communications protocol comprises the step of determining a number of diagnostic monitors available using the second communications protocol; </claim-text>
<claim-text>wherein said step of determining a number of pieces of information received from the one or more modules using the third communications protocol comprises the step of determining a number of diagnostic monitors available using the third communications protocol; and </claim-text>
<claim-text>wherein said step (f) comprises the step of selecting from the plurality of communications protocols the communications protocol that makes available the highest number of diagnostic monitors. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to claim <highlight><bold>3</bold></highlight>: 
<claim-text>wherein said step of determining a number of pieces of information received from the one or more modules using the first communications protocol comprises the step of determining a number of diagnostic monitors available using the first communications protocol; </claim-text>
<claim-text>wherein said step of determining a number of pieces of information received from the one or more modules using the second communications protocol comprises the step of determining a number of diagnostic monitors available using the second communications protocol; </claim-text>
<claim-text>wherein said step of determining a number of pieces of information received from the one or more modules using the third communications protocol comprises the step of determining a number of diagnostic monitors available using the third communications protocol; </claim-text>
<claim-text>wherein said step of determining a number of pieces of information received from the one or more modules using the fourth communications protocol comprises the step of determining a number of diagnostic monitors available using the fourth communications protocol; and </claim-text>
<claim-text>wherein said step (f) comprises the step of selecting from the plurality of communications protocols a communications protocol to use for subsequent communications between the off-board device and the diagnostic system using at least the number of diagnostic monitors available using the first communications protocol, the number of diagnostic monitors available using the second communications protocol, the number of diagnostic monitors available using the third communications protocol, and the number of diagnostic monitors available using the fourth communications protocol. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to claim <highlight><bold>3</bold></highlight>: 
<claim-text>wherein said step of determining a number of pieces of information received from the one or more modules using the first communications protocol comprises the step of determining a number of diagnostic monitors available using the first communications protocol; </claim-text>
<claim-text>wherein said step of determining a number of pieces of information received from the one or more modules using the second communications protocol comprises the step of determining a number of diagnostic monitors available using the second communications protocol; </claim-text>
<claim-text>wherein said step of determining a number of pieces of information received from the one or more modules using the third communications protocol comprises the step of determining a number of diagnostic monitors available using the third communications protocol; </claim-text>
<claim-text>wherein said step of determining a number of pieces of information received from the one or more modules using the fourth communications protocol comprises the step of determining a number of diagnostic monitors available using the fourth communications protocol; and </claim-text>
<claim-text>wherein said step (f) comprises the step of selecting from the plurality of communications protocols the communications protocol that makes available the highest number of diagnostic monitors. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle, the diagnostic system having one or more modules, comprising the steps of: 
<claim-text>(a) sequentially requesting data from one or more of the diagnostic system modules using a plurality of different communications protocols, one communications protocol at a time; </claim-text>
<claim-text>(b) for each of the communications protocols, receiving data if any from the one or more modules using the communications protocol; </claim-text>
<claim-text>(c) using at least the received data, selecting from the plurality of communications protocols a communications protocol to use for subsequent communications between the off-board device and the diagnostic system; and </claim-text>
<claim-text>(d) communicating between the off-board device and the diagnostic system using the selected communications protocol. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> further comprising the step of determining, for each of the communications protocols, a number of pieces of information received from the one or more modules using the communications protocol, and wherein said step (c) comprises the step of selecting from the plurality of communications protocols the communications protocol that makes available the highest number pieces of information. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> further comprising the step of determining, for each of the communications protocols, a number of diagnostic monitors available using the communications protocol, and wherein said step (c) comprises the step of selecting from the plurality of communications protocols the communications protocol that makes available the highest number of diagnostic monitors. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. An off-board device that communicates with a diagnostic system of a vehicle, the diagnostic system having one or more modules, comprising: 
<claim-text>(a) means for requesting data from one or more of the diagnostic system modules using a first communications protocol; </claim-text>
<claim-text>(b) means for determining a number of pieces of information received from the one or more modules using the first communications protocol; </claim-text>
<claim-text>(c) means for requesting data from one or more of the diagnostic system modules using a second communications protocol; </claim-text>
<claim-text>(d) means for determining a number of pieces of information received from the one or more modules using the second communications protocol; </claim-text>
<claim-text>(e) means for selecting from the plurality of communications protocols a communications protocol to use for subsequent communications between the off-board device and the diagnostic system using at least the number of pieces of information received from the one or more modules using the first communications protocol and the number of pieces of information received from the one or more modules using the second communications protocol; and </claim-text>
<claim-text>(f) means for communicating between the off-board device and the diagnostic system using the selected communications protocol. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. An off-board device that communicates with a diagnostic system of a vehicle, the diagnostic system having one or more modules, comprising: 
<claim-text>(a) means for sequentially requesting data from one or more of the diagnostic system modules using a plurality of different communications protocols, one communications protocol at a time; </claim-text>
<claim-text>(b) means for, for each of the communications protocols, receiving data if any from the one or more modules using the communications protocol; </claim-text>
<claim-text>(c) means for using at least the received data, selecting from the plurality of communications protocols a communications protocol to use for subsequent communications between the off-board device and the diagnostic system; and </claim-text>
<claim-text>(d) means for communicating between the off-board device and the diagnostic system using the selected communications protocol. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle, the diagnostic system having one or more modules, comprising the steps of: 
<claim-text>(a) selecting a communications protocol to use to communicate between the off-board device and the diagnostic system; </claim-text>
<claim-text>(b) sending an initial request using the selected communications protocol that will prompt a response from the modules; </claim-text>
<claim-text>(c) storing information received from the modules in response to the initial request; </claim-text>
<claim-text>(d) requesting data from one or more of the diagnostic system modules using the selected communications protocol; </claim-text>
<claim-text>(e) determining whether one or more of the modules has ceased to communicate using the selected communications protocol by performing at least the steps of (i) sending a subsequent request using the selected communications protocol that will prompt a response from the modules, (ii) receiving information from the modules in response to the subsequent request, and (iii) comparing the stored information received from the modules in response to the initial request with the information received from the modules in response to the subsequent request. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> further comprising the step of, responsive to determining that one or more of the modules has ceased to communicate using the selected communications protocol, executing a partial reinitialization of the one or more modules that has ceased to communicate. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> further comprising the step of, responsive to determining that one or more of the modules has ceased to communicate using the selected communications protocol, executing a complete reinitialization of the one or more modules that has ceased to communicate. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> further comprising the step of, responsive to determining that one or more of the modules has ceased to communicate using the selected communications protocol, executing a partial reinitialization of the selected communications protocol. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> further comprising the step of, responsive to determining that one or more of the modules has ceased to communicate using the selected communications protocol, executing a complete reinitialization of the selected communications protocol. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein said step (c) comprises the step of storing module identification information for each module that responded to the initial request and wherein said step (e)(iii) comprises the step of comparing the identification of the modules that responded to the initial request with the identification of the modules that responded to the subsequent request. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference> further comprising the step of, responsive to determining that one or more of the modules has ceased to communicate using the selected communications protocol, executing a partial reinitialization of the one or more modules that has ceased to communicate. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference> further comprising the step of, responsive to determining that one or more of the modules has ceased to communicate using the selected communications protocol, executing a complete reinitialization of the one or more modules that has ceased to communicate. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference> further comprising the step of, responsive to determining that one or more of the modules has ceased to communicate using the selected communications protocol, executing a partial reinitialization of the selected communications protocol. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference> further comprising the step of, responsive to determining that one or more of the modules has ceased to communicate using the selected communications protocol, executing a complete reinitialization of the selected communications protocol. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to claim <highlight><bold>15</bold></highlight>: 
<claim-text>further comprising the step of determining whether one or more additional modules has begun to communicate using the selected communications protocol by at least comparing the stored information received from the modules in response to the initial request with the information received from the modules in response to a subsequent request and, </claim-text>
<claim-text>responsive to determining that one or more additional modules has begun to communicate using the selected communications protocol, updating the information received from the modules in response to the initial request, and </claim-text>
<claim-text>further wherein said step (e)(iii) comprises the step of comparing the updated stored information received from the modules in response to the initial request with the information received from the modules in response to the subsequent request. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein said step (a) comprises the steps of: 
<claim-text>(1) requesting data from one or more of the diagnostic system modules using a first communications protocol; </claim-text>
<claim-text>(2) determining a number of pieces of information received from the one or more modules using the first communications protocol; </claim-text>
<claim-text>(3) requesting data from one or more of the diagnostic system modules using a second communications protocol; </claim-text>
<claim-text>(4) determining a number of pieces of information received from the one or more modules using the second communications protocol; and </claim-text>
<claim-text>(5) selecting from the plurality of communications protocols a communications protocol to use for subsequent communications between the off-board device and the diagnostic system using at least the number of pieces of information received from the one or more modules using the first communications protocol and the number of pieces of information received from the one or more modules using the second communications protocol. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein said step (a) comprises the steps of: 
<claim-text>(1) requesting data from one or more of the diagnostic system modules using a first communications protocol; </claim-text>
<claim-text>(2) determining a number of pieces of information received from the one or more modules using the first communications protocol; </claim-text>
<claim-text>(3) requesting data from one or more of the diagnostic system modules using a second communications protocol; </claim-text>
<claim-text>(4) determining a number of pieces of information received from the one or more modules using the second communications protocol; </claim-text>
<claim-text>(5) requesting data from one or more of the diagnostic system modules using a third communications protocol; </claim-text>
<claim-text>(6) determining a number of pieces of information received from the one or more modules using the third communications protocol; </claim-text>
<claim-text>(7) requesting data from one or more of the diagnostic system modules using a fourth communications protocol; </claim-text>
<claim-text>(8) determining a number of pieces of information received from the one or more modules using the fourth communications protocol; and </claim-text>
<claim-text>(9) selecting from the plurality of communications protocols a communications protocol to use for subsequent communications between the off-board device and the diagnostic system using at least the number of pieces of information received from the one or more modules using the first communications protocol, the number of pieces of information received from the one or more modules using the second communications protocol, the number of pieces of information received from the one or more modules using the third communications protocol, and the number of pieces of information received from the one or more modules using the fourth communications protocol. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein said step (a) comprises the steps of: 
<claim-text>(1) sequentially requesting data from one or more of the diagnostic system modules using a plurality of different communications protocols, one communications protocol at a time; </claim-text>
<claim-text>(2) for each of the communications protocols, receiving data if any from the one or more modules using the communications protocol; and </claim-text>
<claim-text>(3) using at least the received data, selecting from the plurality of communications protocols a communications protocol to use for subsequent communications between the off-board device and the diagnostic system. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. A method of operating an off-board device to communicate with a diagnostic system of a vehicle according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein said step (a) comprises the steps of: 
<claim-text>(1) sequentially requesting data from one or more of the diagnostic system modules using a plurality of different communications protocols, one communications protocol at a time; </claim-text>
<claim-text>(2) for each of the communications protocols, receiving data if any from the one or more modules using the communications protocol; </claim-text>
<claim-text>(3) determining, for each of the communications protocols, a number of diagnostic monitors available using the communications protocol; and </claim-text>
<claim-text>(4) selecting from the plurality of communications protocols the communications protocol that makes available the highest number of diagnostic monitors.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>3</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004623A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004623A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004623A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004623A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004623A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004623A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004623A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004623A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
