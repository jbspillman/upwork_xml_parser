<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005035A1-20030102-D00000.TIF SYSTEM "US20030005035A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005035A1-20030102-D00001.TIF SYSTEM "US20030005035A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005035A1-20030102-D00002.TIF SYSTEM "US20030005035A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005035A1-20030102-D00003.TIF SYSTEM "US20030005035A1-20030102-D00003.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005035</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10160182</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020604</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>0113568.0</doc-number>
</priority-application-number>
<filing-date>20010604</filing-date>
<country-code>GB</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/16</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>709</class>
<subclass>202000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>709</class>
<subclass>218000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>709</class>
<subclass>219000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Peer-to-peer content popularity</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Peter</given-name>
<middle-name>James</middle-name>
<family-name>Rodgers</family-name>
</name>
<residence>
<residence-non-us>
<city>Wotton-Under-Edge</city>
<country-code>GB</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>HEWLETT PACKARD COMPANY</organization-name>
<assignee-type>03</assignee-type>
</assignee>
<correspondence-address>
<name-1>HEWLETT-PACKARD COMPANY</name-1>
<name-2>Intellectual Property Administration</name-2>
<address>
<address-1>P.O. Box 272400</address-1>
<city>Fort Collins</city>
<state>CO</state>
<postalcode>80527-2400</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The invention concerns the provision of a peer-to-peer content popularity service and particularly to a server, methods and computer program products for providing such a service. A server <highlight><bold>30 </bold></highlight>is provided on a peer-to-peer network. The server <highlight><bold>30 </bold></highlight>is arranged to receive data from supplying client nodes <highlight><bold>10,20 </bold></highlight>concerning search requests received at the supplying client nodes <highlight><bold>10, 20 </bold></highlight>and to aggregate material from the received data to obtain popularity information and to offer popularity information regarding such popular search requests to requesting clients <highlight><bold>10,20. </bold></highlight></paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The invention relates to a peer-to-peer content popularity service and particularly to a server, methods and computer program products for providing such a service. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> In the field of distributed computer networks statistics relating to &ldquo;popularity&rdquo; in the broadest sense are extremely important. For instance, it would be desirable to provide statistics which allow access to data concerning the most popular subjects for users of distributed peer-to-peer systems to be utilised in real time by providers of services to tailor their content in order to appeal to the largest number of people. Similarly, if a particular provider of a service knows what a certain section of the browsing community are most interested in, this can help the service provider to target advertising in a most effective way. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> A peer-to-peer network is one in which any node on the network may function as a client/server. At the time of writing, common peer-to-peer applications are gnutella and Napster for electronic media and Groove for business collaboration. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Napster enables peer-to-peer file sharing by means of direct TCP/IP port to port connection. In addition metadata and service data are delivered by means of the hypertext transfer protocol (HTTP), the same protocol that web browsers and servers utilise. Effectively, each computer connected to the network acts as a server and as a client. In many cases of course the particular nodes constitute empty repositories (i.e. many users have no files which they themselves wish to share). When an individual user logs off, his or her network node effectively disappears. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> As can be seen from the above, a peer-to-peer network has to a large extent a very much more dynamic and transient nature than the world wide web. Nevertheless, such networks do still tend to have a large number of permanently connected client/servers and some form of popularity rating provision would be a useful service to provide to network users. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> It is an aim of embodiments of the present invention to provide a peer-to-peer client server and a metadata aggregation service in which popularity ratings may be provided to users of a peer-to-peer network. It is increasingly the case that distributed file-sharing systems will have consistent and robust metadata. Systems such as the digital object identifier (DOI) provide both a unique &ldquo;bar-code&rdquo; for a digital file but also offer resolution services to definitive metadata associated with that identifier. An example of a definitive metadata naming scheme is the &ldquo;Dublin Core&rdquo; metadata convention. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> A metadata aggregation service can record unique attributes such as the DOI and the metadata. Popularity ratings are easily achieved by monitoring a selected unique attribute. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> It is another aim of the embodiments of the invention to enable demographic information to be gathered for the client/servers. Metadata concerning the content is augmented by demographic data associated with the peer to peer client server. By gathering demographic data it is possible to offer fine grained classifications of popularity by geography, sex, age, interest etc. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> According to a first aspect of the invention, there is provided aserver on a peer-to-peer network, the server being arranged to receive data from supplying client nodes concerning search requests received at the supplying client nodes, the server being arranged to aggregate material from the received data to obtain popularity information and to offer popularity information regarding popular search requests to requesting clients. According to a second aspect of the invention, there is provided a method of providing popularity information to requesting clients on a peer-to-peer network, the method comprising: at a client node in the network, collecting data concerning search requests received at the client node from another one or more nodes in the peer-to-peer network; and sending data relating to the received search requests to aserver. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> A third aspect provides a computer program product for use at a client node in a peer-to-peer network for facilitating the implementation of a method of providing popularity information to requesting clients on the peer-to-peer network, the method comprising: at the client node, collecting data concerning search requests received from another one or more nodes in the peer-to-peer network; and sending data relating to the received search requests to a server. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> In a fourth aspect, there is provided a method of providing popularity information to requesting clients on a peer-to-peer network, the method comprising: at a server receiving data from supplying client nodes concerning search requests received at the supplying client nodes; aggregating material from the received data at the server to obtain popularity information; and offering popularity information regarding popular search requests to a requesting client. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> In a fifth aspect, there is provided a computer program product for use at a server in a peer-to-peer network for facilitating the implementation of a method of providing popularity information to requesting clients on the peer-to-peer network, the method comprising: receiving data from supplying client nodes concerning search requests received at the supplying client nodes; aggregating material from the received data at the server to obtain popularity information; and offering popularity information regarding popular search requests to a requesting client. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The received data preferably is metadata relating to the search requests and/or demographic data relating to parties making the particular search requests. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The popularity information may comprise information concerning most popular search topics. Popularity information may be requested and supplied for particular file types, for instance, music files. Popularity information may be provided based on user demographics. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The server is preferably arranged to offer the popularity information to subscribing clients only. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> Preferably, supplying clients cache peer-to-peer search requests and periodically send lists of fulfilled search requests to the server. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Preferably, data is transferred between a supplying client and the server by means of a document, such as an XML document. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> Preferably, upon receipt of the document from a supplying client, the server aggregates metadata within the document to create lists according to the metadata. Such a list may comprise a list of most popular files, a listing of the timings that those most popular files were requested, and regional/demographic data provided from the client. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> Preferably, the server creates lists according to a unique digital object identifier. The DOI can be used to resolve definitive metadata such as Dublin Core metadata for the object and this metadata may be compiled into the lists. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Alternatively the lists may be inferred from file types, such file types may comprise music files, movie files, picture files, document files, etc. Classification of file types may be by means of examining a file extension. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Subscribing clients may have one of a number of different types of subscription according to service levels. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Preferably, subscribing clients pay a subscription fee to the server in order to have access to information from the server.</paragraph>
</summary-of-invention>
<brief-description-of-drawings>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> For a better understanding of the invention, and to show how embodiments of the same may be carried into effect, reference will now be made, by way of example, to the following figures, in which: </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a schematic block diagram illustrating a peer-to-peer client/server network including a popularity server according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a flow diagram illustrating method steps carried out at a client node for collecting and sending data to a server; and </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a flow diagram illustrating method steps carried out at the server for processing popularity data and offering such information to requesting clients.</paragraph>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, there is shown a peer-to-peer network comprising a plurality of nodes consisting of first type client/servers <highlight><bold>10</bold></highlight>, second type client/servers <highlight><bold>20</bold></highlight> and a popularity server <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, it will be appreciated that although certain connections are shown between selected nodes of the network (a node being any of the first type client/servers <highlight><bold>10</bold></highlight> or second type client/servers <highlight><bold>20</bold></highlight>) in reality, individual first type client/servers <highlight><bold>10</bold></highlight> can communicate directly with each other and with the popularity server <highlight><bold>30</bold></highlight> without a connection via second type client/servers and, indeed, individual second type client/servers may also communicate directly with each other. However, as, in practice, certain nodes (here identified as the second type client/servers <highlight><bold>20</bold></highlight>) within a peer-to-peer network tend to primarily function in a server type role, a simplified representation of the possible connections is shown. This simplification is merely to aid clarity in the description of the invention and to avoid cluttering the Figure. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Typically, each first type client/server <highlight><bold>10</bold></highlight> may be an individual user&apos;s machine, such as a PC. The second type client/servers <highlight><bold>20</bold></highlight> (also referred to as file location servers) provide information to the individual first type client/servers <highlight><bold>10</bold></highlight> in response to search requests from individual first type client/servers <highlight><bold>10</bold></highlight>. The second type client/servers <highlight><bold>20</bold></highlight> may facilitate direct connections between individual first type client/servers <highlight><bold>10</bold></highlight> for the sharing of information. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Since it is a primary function of the second type client/servers <highlight><bold>20</bold></highlight> to fulfil search requests made by individual first type clients/servers <highlight><bold>10</bold></highlight>, it is a relatively simple matter for individual second type client/servers <highlight><bold>20</bold></highlight> to cache the most popular search requests and most popular fulfilled search requests and to pass them periodically to the popularity server <highlight><bold>30</bold></highlight>. Such requests may be passed to the popularity server <highlight><bold>30</bold></highlight>, by means of a document, typically an XML document, constructed at each server <highlight><bold>20</bold></highlight>. Alternatively, it is possible for the popularity server <highlight><bold>30</bold></highlight> to poll individual servers <highlight><bold>20</bold></highlight> and request, at periodic intervals, information on search requests fulfilled. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The popularity server <highlight><bold>30</bold></highlight> upon receiving information from the second type client/servers <highlight><bold>20</bold></highlight> concerning requests fulfilled, sorts and catalogues the metadata of the search requests according to various different criteria. For instance: lists of most popular files and the times the files were requested may be compiled; data may be categorised according to regional and demographic user data; file types may be classified as either music, movies etc., by resolution of a unique ID or by examining file extensions. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> It will be appreciated that the above list is not exhaustive and that data regarding search requests may be catalogued in any number of different ways to facilitate retrieval of popularity ratings. For instance, if a particular client is interested in receiving popularity information concerning the top ten searches made by 30 to 40 year olds in connection with jazz music, the popularity server <highlight><bold>30</bold></highlight> may be arranged to sort among the data provided to it by individual servers <highlight><bold>20</bold></highlight> and to provide the requested information to a requesting client. Here, the term client is used loosely as it refers to any client of the popularity server <highlight><bold>30</bold></highlight> and hence applies to the second type client/servers <highlight><bold>20</bold></highlight> who themselves are &ldquo;clients&rdquo; of the popularity server <highlight><bold>30</bold></highlight> and also applies to first type client/servers <highlight><bold>10</bold></highlight> (which may typically be a user&apos;s PC for instance). </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The popularity server <highlight><bold>30</bold></highlight> may store the popularity data in a number of different ways. For recent histories of the peer to peer network it will store all data and compute popularity lists on demand, e.g. the top 1000 songs by artist currently being shared. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> Recent histories require very large amounts of data to be stored, it is expected that to minimise computation it will be valuable to create longer period historical data generated in common categories, e.g. most popular rock music for the week of Apr. 23, 2001. Longer period charts are valuable for premium rate popularity services. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Individual clients of the popularity server <highlight><bold>30</bold></highlight> may subscribe to the popularity server <highlight><bold>30</bold></highlight> according to a number of different possible service levels. Here, the service levels are described as bronze, silver and gold. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> In a first, bronze, level of service a bronze client simply receives aggregated search metadata relating to its particular place in the peer-to-peer network. In other words, a bronze client is able to obtain information concerning the search requests which it itself serves, but receives that information in an organised fashion from the popularity server <highlight><bold>30</bold></highlight>. Such data may give a global view on what is happening on the network and provide some real time search information to the client. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> In a second, silver, level of service, all of the information provided to bronze clients would be provided, in addition further information perhaps relating to demographic user data etc., can be provided. Silver clients will, in other words, have more options for the types of chart information that they can request and receive from the popularity server <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> In a highest level of service, a gold client may pay a monthly fee to access additional metadata to make &ldquo;rich&rdquo; requests of the server (for instance, &ldquo;what were the most popular songs in California in February 2000&quest;&rdquo;). The popularity server <highlight><bold>30</bold></highlight> can provide lists of most capable nodes to add to a local peer-to-peer network, thereby aiding efficiency of search and retrieval carried out by its gold level clients. In this way, a gold client could perhaps ask the popularity server to provide it with details of a node on a peer-to-peer network having a given file. With such information available to it, such a client can search additional ID3 metadata (albums, artists, etc.) and view most popular songs, movies, etc. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> The popularity server <highlight><bold>30</bold></highlight> given enough information can compile lists to answer relatively complex requests from clients. For instance, a complex request might ask for lists of files downloaded by third parties who had already downloaded some particular other file. It will be appreciated here that the state of a peer-to-peer network is dynamic and that embodiments of the invention provide a real time view of this state to enable monitoring and demand mangement (such as the subsequent provision of heavily sought content at new nodes) and to enable the location of files regardless of the dynamic state of the network. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> A specific example of how the metadata aggregation and how a popularity request may be fulfilled in practice is given hereafter. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, in simple terms, actions carried out at a client node <highlight><bold>10</bold></highlight> or <highlight><bold>20</bold></highlight> comprise a first step <highlight><bold>201</bold></highlight> of collecting data concerning search requests received at the client node from another one or more nodes in the peer-to-peer network and then in a step <highlight><bold>202</bold></highlight> sending data relating to the search requests to the popularity server <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, in simple terms the actions carried out at the popularity server <highlight><bold>30</bold></highlight> comprise: a first step <highlight><bold>301</bold></highlight> of receiving data from supplying client nodes <highlight><bold>10</bold></highlight>,<highlight><bold>20</bold></highlight> concerning search requests received at the client nodes <highlight><bold>10</bold></highlight>,<highlight><bold>20</bold></highlight>; a second step <highlight><bold>302</bold></highlight> of aggregating material from the received data at the server to obtain popularity information; and a third step <highlight><bold>303</bold></highlight> of offering popularity information regarding popular search requests to a requesting client <highlight><bold>10</bold></highlight>,<highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> In the more detailed discussion of one example of implementation of the method which follows it is assumed that a particular first type client/server is a subscriber to the service and the interactions between this client <highlight><bold>10</bold></highlight> and the popularity server <highlight><bold>30</bold></highlight> are described in detail. A first type client/server <highlight><bold>10</bold></highlight> of the peer-to-peer network maintains a local table A of it&apos;s most recently fulfilled file transfers. In an efficient network the second type client/servers <highlight><bold>20</bold></highlight> (file location servers) will maintain a directory of DOI and metadata such that the list of fulfilled file transfers on client <highlight><bold>10</bold></highlight> may be stored as a list of globally unique (to the service) identifiers with an associated count (x) of fulfilled file transfers: </paragraph>
<paragraph id="P-0044" lvl="7"><number>&lsqb;0044&rsqb;</number> A. local popularity list &lsqb;DOI<highlight><subscript>1</subscript></highlight>:x . . . DOI<highlight><subscript>N</subscript></highlight>:z&rsqb;</paragraph>
<paragraph id="P-0045" lvl="7"><number>&lsqb;0045&rsqb;</number> B. local demographic info Sex: xxx yyy Age: xx Geographic Region: New York Interests: aaaa, bbbb, cccc, . . . , zzz </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The client <highlight><bold>10</bold></highlight> periodically posts the local popularity list A and it&apos;s corresponding local demographic information B and a UTC timestamp to the popularity server <highlight><bold>30</bold></highlight> and, upon receiving an acknowledgement, begins compilation of a new list. In times of very large numbers of peers on the network the server <highlight><bold>30</bold></highlight> may negotiate with the aggregation client <highlight><bold>10</bold></highlight> to supply only the most popular subset of the list, thereby reducing the load on popularity server <highlight><bold>30</bold></highlight>. In addition, if the client <highlight><bold>10</bold></highlight> has a low file serving history (as indicated by the list A) the popularity server <highlight><bold>30</bold></highlight> may instruct client <highlight><bold>10</bold></highlight> to increase the time between postings and thus lower the load for popularity server <highlight><bold>30</bold></highlight> and ensure the high use nodes on the network can deliver their popularity data in a timely manner. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> It is preferable that the demographic data be composed of system-wide common codes, for example Jazz might be coded as M245, whereas region NewYork may be coded as R1032. It is preferable that the codes stored in the demographic table of client <highlight><bold>10</bold></highlight> can have been pre-computed at the time of logon to the second type client/server <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> The popularity server <highlight><bold>30</bold></highlight> receives many popularity and demographic lists A:B from the clients of the network. The popularity server <highlight><bold>30</bold></highlight> maintains popularity tables. These tables may be structured in a number ways based upon breadth of search or storage and computation constraints. One such configuration is as follows . . .  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="203PT" align="left"/>
<thead>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center">TABLE 1</entry>
</row>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>Objects</entry>
</row>
<row>
<entry></entry>
<entry>DOI: &lsqb;Standard Dublin Core Metadata . . . Fields&rsqb;: 5 mins: 1 hour</entry>
</row>
<row>
<entry></entry>
<entry>: 1 day: 1 week: 1 year</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number>  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="OFFSET" colwidth="63PT" align="left"/>
<colspec colname="1" colwidth="154PT" align="left"/>
<thead>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center">TABLE 2</entry>
</row>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>Region</entry>
</row>
<row>
<entry></entry>
<entry>Region Code: &lsqb;DOI: x list . . . &rsqb;</entry>
</row>
<row>
<entry></entry>
<entry>. . .</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="1" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> In this example the popularity server <highlight><bold>30</bold></highlight> takes a local popularity list A:B and in turn extracts each DOI, it&apos;s popularity count x, and the demographic codes from B. The aggregator locates the DOI entry in the Objects table, table 1. It adds the count x to each of the time fields, 5mins . . . 1year. It is expected that periodically the counters will be reset or, more elaborately, a rolling average can be computed for each field. Finally the aggregator service examines the region code and adds x to the corresponding DOI entry in the Region table, table 2. Thus we have described a very simple global popularity table. This scheme is illustrative and can be adapted in many ways, for example further demographic sub-tables would certainly be valuable. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The final element of the system is the processing of popularity requests. For example, a client <highlight><bold>10</bold></highlight> of the popularity server <highlight><bold>30</bold></highlight> wishes to find the most popular Jazz music in New York today. It sends a request which can be coded using the common encoding formats described above thus the request might be </paragraph>
<paragraph id="P-0052" lvl="7"><number>&lsqb;0052&rsqb;</number> Request: M245:R1032:T3 </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> Where the codes are M245 Jazz, R1032 New York and T3 is the coding for the last 24hours. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> From this request the popularity server <highlight><bold>30</bold></highlight> may then consult the tables retrieving the list of all DOI&apos;s served in the New York region. Next the popularity server <highlight><bold>30</bold></highlight> computes a Jazz popularity table by taking the DOI list and matching it against the Jazz field in the Dublin core metadata and extracting the DOI, Dublin core metadata and 1day count for each matching entry. Finally the computed popularity table is sorted by the 1 day count and served back to the client. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> It will be appreciated by the skilled man that the invention may be efficiently implemented by means of computer program products embodying the methods described and loaded at the popularity server <highlight><bold>30</bold></highlight> and at the client nodes <highlight><bold>10</bold></highlight>, <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> It will be evident to the skilled man, that many variations can be made within the scope of this invention and that such scope is limited only by the appended claims. </paragraph>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A server on a peer-to-peer network, the server being arranged to receive data from supplying client nodes concerning search requests received at the supplying client nodes, the server being arranged to aggregate material from the received data to obtain popularity information and to offer popularity information regarding such popular search requests to requesting clients. </claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The server of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the received data is metadata relating to the search requests and/or demographic data relating to parties making the search requests. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The server of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, where the popularity information comprises information concerning most popular search topics requested at client level. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The server of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein popularity information may be requested from the server by clients and supplied according to particular client requested criteria. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The server of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the server is arranged to offer the popularity information to subscribing clients only. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A server of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein subscribing clients may have one of a number of different types of subscription according to service levels. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A server according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein subscribing clients pay a subscription fee to the server in order to have access to information from the server. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The server of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein supplying client nodes cache peer-to-peer search requests and periodically send lists of fulfilled search requests to the server. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The server of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein data is transferred between a supplying client node and the server by means of a document. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The server of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein upon receipt of a document from a supplying client, the server aggregates metadata within the document to create lists according to the metadata. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The server of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein such a list may comprise a list of most popular files, a listing of the timings that those most popular files were requested, and regional/demographic data provided from the client. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A server according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the server creates lists classified according to a unique identifier and its associated Dublin Core metadata. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A server according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the server creates lists classified according to file types, such file types may comprise music files, movie files, picture files, document files, etc. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A server according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein classification of file types is achieved by means of examining a file extension. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A method of providing popularity information to requesting clients on a peer-to-peer network, the method comprising: 
<claim-text>at a client node in the network, collecting data concerning search requests received at the client node from another one or more nodes in the peer-to-peer network; and </claim-text>
<claim-text>sending data relating to the received search requests to a server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the data sent by the client node to the server comprises metadata relating to the search requests and/or demographic data relating to parties making the search requests. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the client node is arranged to cache peer-to-peer search requests and periodically send lists of fulfilled search requests to the server. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein data is transferred between a supplying client node and the server by means of a document. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the data sent by the client node to the server comprises metadata relating to search requests fulfilled at the client node. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A computer program product for use at a client node in a peer-to-peer network for facilitating the implementation of a method of providing popularity information to requesting clients on the peer-to-peer network, the method comprising: 
<claim-text>at the client node, collecting data concerning search requests received from another one or more nodes in the peer-to-peer network; and </claim-text>
<claim-text>sending data relating to the received search requests to a server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein when running the program is arranged to enable the monitoring of search requests made to the client node by other nodes on the network and to store metadata relating to the search requests and/or demographic data relating to parties making the search requests. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein when running the program is arranged to enable the caching of peer-to-peer search requests and the transmission of lists of fulfilled search requests to the server. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein data is transferred between a supplying client node and the server by means of a document. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the data sent by the client node to the server comprises metadata relating to search requests fulfilled at the client node. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A method of providing popularity information to requesting clients on a peer-to-peer network, the method comprising: 
<claim-text>at a server receiving data from supplying client nodes concerning search requests received at the supplying client nodes; </claim-text>
<claim-text>aggregating material from the received data at the server to obtain popularity information; and </claim-text>
<claim-text>offering popularity information regarding popular search requests to a requesting client. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the received data is metadata relating to the search requests and/or demographic data relating to parties making the search requests. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, where the popularity information comprises information concerning most popular search topics requested at client level. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein popularity information may be requested from the server by clients and supplied according to particular client requested criteria. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the server is arranged to offer the popularity information to subscribing clients only. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, wherein subscribing clients may have one of a number of different types of subscription according to service levels. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, wherein subscribing clients pay a subscription fee to the server in order to have access to information from the server. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein supplying client nodes cache peer-to-peer search requests and periodically send lists of fulfilled search requests to the server. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein data is transferred between a supplying client node and the server by means of a document. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, wherein upon receipt of a document from a supplying client, the server aggregates metadata within the document to create lists according to the metadata. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 34</dependent-claim-reference>, wherein such a list may comprise a list of most popular files, a listing of the timings that those most popular files were requested, and regional/demographic data provided from the client. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the server creates lists classified according to a unique identifier and its associated Dublin Core metadata. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein the server creates lists classified according to file types, such file types may comprise music files, movie files, picture files, document files, etc. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein classification of file types is achieved by means of examining a file extension. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. A computer program product for use at a server in a peer-to-peer network for facilitating the implementation of a method of providing popularity information to requesting clients on the peer-to-peer network, the method comprising: 
<claim-text>receiving data from supplying client nodes concerning search requests received at the supplying client nodes; </claim-text>
<claim-text>aggregating material from the received data at the server to obtain popularity information; and </claim-text>
<claim-text>offering popularity information regarding popular search requests to a requesting client. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, wherein the received data is metadata relating to the search requests and/or demographic data relating to parties making the search requests. </claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, wherein the popularity information comprises information concerning most popular search topics requested at client level. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, wherein popularity information may be requested from the server by clients and supplied according to particular client requested criteria. </claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00044">claim 42</dependent-claim-reference>, wherein the server is arranged to offer the popularity information to subscribing clients only. </claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00044">claim 43</dependent-claim-reference>, wherein subscribing clients may have one of a number of different types of subscription according to service levels. </claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, wherein periodically lists of fulfilled search requests are sent to the server by supplying client nodes. </claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, wherein data is received at the server from a supplying client node in the form of a document. </claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00044">claim 46</dependent-claim-reference>, wherein in the step of aggregating the server aggregates metadata within the document to create lists according to the metadata. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, wherein in the step of aggregating the server creates lists of most popular files, a listing of the timings that those most popular files were requested, and regional/demographic data provided from the supplying client. </claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, wherein in the step of aggregating the server creates lists classified according to a unique identifier and its associated Dublin Core metadata. </claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, wherein in the step of aggregating the server creates lists classified according to file types, such file types may comprise music files, movie files, picture files, document files, etc. </claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. The program product of <dependent-claim-reference depends_on="CLM-00055">claim 50</dependent-claim-reference>, wherein classification of file types is achieved by means of examining a file extension. </claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. A server on a peer-to-peer network, the server being arranged to receive data from supplying client nodes comprising metadata relating to search requests received at the client nodes and/or demographic data relating to parties making the search requests, the server being arranged to aggregate material from the received data to obtain popularity information and to offer popularity information regarding most popular search topics requested at client level to requesting clients according to particular client requested criteria. </claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. A method of providing popularity information to requesting clients on a peer-to-peer network, the method comprising: 
<claim-text>at a client node in the network, collecting data concerning search requests received at the client node from another one or more nodes in the peer-to-peer network; and </claim-text>
<claim-text>sending data relating to the received search requests to a server, wherein the data sent by the client node to the server comprises metadata relating to the search requests and/or demographic data relating to parties making the search requests. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. A computer program product for use at a client node in a peer-to-peer network for facilitating the implementation of a method of providing popularity information to requesting clients on the peer-to-peer network, the method comprising: 
<claim-text>at the client node, collecting data concerning search requests received from another one or more nodes in the peer-to-peer network; and </claim-text>
<claim-text>sending data relating to the received search requests to a server, wherein when running the program is arranged to enable the monitoring of search requests made to the client node by other nodes on the network and to store metadata relating to the search requests and/or demographic data relating to parties making the search requests. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00055">
<claim-text><highlight><bold>55</bold></highlight>. A method of providing popularity information to requesting clients on a peer-to-peer network, the method comprising: 
<claim-text>at a server receiving data from supplying client nodes concerning search requests received at the supplying client nodes, the received data comprising metadata relating to the search requests and/or demographic data relating to parties making the search requests; </claim-text>
<claim-text>aggregating material from the received data at the server to obtain popularity information which comprises information concerning most popular search topics requested at client level; and </claim-text>
<claim-text>offering popularity information regarding popular search requests to a requesting client according to particular client requested criteria. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. A computer program product for use at a server in a peer-to-peer network for facilitating the implementation of a method of providing popularity information to requesting clients on the peer-to-peer network, the method comprising: 
<claim-text>receiving data from supplying client nodes concerning search requests received at the supplying client nodes, wherein the received data is metadata relating to the search requests and/or demographic data relating to parties making the search requests; </claim-text>
<claim-text>aggregating material from the received data at the server to obtain popularity information, wherein the popularity information comprises information concerning most popular search topics requested at client level; and </claim-text>
<claim-text>offering popularity information regarding popular search requests to a requesting client and supplying such information according to particular client requested criteria.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005035A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005035A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005035A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005035A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
