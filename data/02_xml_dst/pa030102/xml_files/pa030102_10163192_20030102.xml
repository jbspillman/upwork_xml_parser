<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004699A1-20030102-D00000.TIF SYSTEM "US20030004699A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004699A1-20030102-D00001.TIF SYSTEM "US20030004699A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004699A1-20030102-D00002.TIF SYSTEM "US20030004699A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004699A1-20030102-D00003.TIF SYSTEM "US20030004699A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004699A1-20030102-D00004.TIF SYSTEM "US20030004699A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004699A1-20030102-D00005.TIF SYSTEM "US20030004699A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004699A1-20030102-D00006.TIF SYSTEM "US20030004699A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004699A1-20030102-D00007.TIF SYSTEM "US20030004699A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004699A1-20030102-D00008.TIF SYSTEM "US20030004699A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004699A1-20030102-D00009.TIF SYSTEM "US20030004699A1-20030102-D00009.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004699</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10163192</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020604</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F017/50</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>703</class>
<subclass>014000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method and apparatus for evaluating an integrated circuit model</title-of-invention>
</technical-information>
<continuity-data>
<non-provisional-of-provisional>
<document-id>
<doc-number>60296068</doc-number>
<document-date>20010604</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Charles</given-name>
<middle-name>Y.</middle-name>
<family-name>Choi</family-name>
</name>
<residence>
<residence-us>
<city>San Francisco</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Jeffrey</given-name>
<middle-name>A.</middle-name>
<family-name>Ebert</family-name>
</name>
<residence>
<residence-us>
<city>Half Moon Bay</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Adam</given-name>
<family-name>Levinthal</family-name>
</name>
<residence>
<residence-us>
<city>Redwood City</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>BLAKELY SOKOLOFF TAYLOR &amp; ZAFMAN</name-1>
<name-2></name-2>
<address>
<address-1>12400 WILSHIRE BOULEVARD, SEVENTH FLOOR</address-1>
<city>LOS ANGELES</city>
<state>CA</state>
<postalcode>90025</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A system and method that enables a user to design and use an Integrated Circuit (IC) simulation model without having access to confidential information contained within the model. In one embodiment the system includes a secure section where confidential simulation model information is contained and accessed. The user does not have access to this secure section. The user is provided access to the system via a user-interaction section, which provides controlled access to the IC model. The user can then establish and initiate simulations of the IC model, selecting test stimulus associated with the cores used within the IC model. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application claims the benefit of U.S. Provisional Application No. 60/296,068, filed Jun. 4, 2001.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to testing and evaluating the combination of components within an integrated circuit system model. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Electronic computing and communications systems continue to include greater numbers of features and to increase in complexity. At the same time, electronic computing and communications systems decrease in physical size and cost per function. Rapid advances in semiconductor technology such as four-layer deep-sub-micron complimentary metal-oxide semiconductor (CMOS) technology have enabled true integrated circuit (IC) designs, also considered &ldquo;system-on-a-chip&rdquo; (SOC) designs. These complex designs may incorporate, for example, one or more processor components, a digital signal processing (DSP) component, memory, several communications interfaces, and a graphics support component. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> It is more efficient and practical for most IC designers to incorporate components already developed rather than redesigning all the necessary hardware with each new IC design. Often the components within an IC model involve intellectual property (IP) owned by groups other than the creators of the IC model. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Hardware description language, or HDL, code can be used to represent the function of components used in IC design. Two examples of a simulation model representation are Verilog and VHDL. The simulation model of a component enables a detailed and in-depth understanding of how that component operates and interacts with other components. It will be apparent to those of ordinary skill in the art that any manner of representing an IC design or a simulation model of an IC design using an HDL representation or other symbolic representation is considered within the scope of the present invention. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> One of the problems with IC design is that in order for an IC designer to know whether one component will work with another component in order to achieve the designer&apos;s needs, the IC design simulation model must be available for the given component. Because the simulation model provides such valuable insight into the operation and capability of components, those who own the IP for the components do not disclose the simulation model without carefully drafted legal agreements between the two parties. Negotiating such agreements takes time and costs money for all parties. If a designer wants to test out a design or idea, then procuring such agreements is a significant detriment to rapid, efficient and cost-effective design development. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> A system and method that enables a user to design and use an Integrated Circuit (IC) simulation model without having access to confidential simulation information contained within the model is disclosed. In one embodiment the system includes a secure section where confidential simulation model information is contained and accessed. The user does not have access to this secure section. The user is provided access to the system via a user-interaction section, which provides controlled access to the IC model. The user can then establish and initiate simulations of the IC model, selecting test stimulus associated with the cores used within the IC model. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> A core is an electronic design implementable in hardware and typically represented in a hardware description language (HDL). An IC model is a set of interconnected cores, sometimes referred to herein as intellectual property (IP) cores, IP blocks, blocks, or components. The IC model as a whole is typically specified in a top-level netlist, also typically represented using HDL. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The objects, features and advantages of the present invention will be apparent from the following detailed description in which: </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of one embodiment of the present invention. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a more detailed block diagram illustrating an embodiment of the present invention. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a flow diagram illustrating one embodiment of the process of the present invention. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flow diagram illustrating an embodiment of the process of the present invention. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 5, 6</cross-reference>, <highlight><bold>7</bold></highlight> and <highlight><bold>8</bold></highlight> illustrate exemplary screen displays of a graphical user interface (GUI) in accordance with one embodiment of the present invention. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> illustrates the testbench of one embodiment of the present invention. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> The method and system of the present invention enables a designer to design and use a simulation model in a minimum amount of time without the need to access confidential information contained within the model to determine if the operation of the core and components of the simulation model satisfy the designer&apos;s needs. This is achieved in part by avoiding legal negotiation of agreements between a designer (or company) and the owner of the Intellectual Property (IP) to be embodied in the simulation model. In one embodiment, the method and system of the present invention shields disclosure of the proprietary portions of the simulation model, core and/or components to an external designer while giving the designer an understanding about whether or not the components, core or model meet design goals. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of one embodiment of the present invention. System <highlight><bold>100</bold></highlight> couples to user <highlight><bold>102</bold></highlight> through network <highlight><bold>104</bold></highlight>. One example of network <highlight><bold>104</bold></highlight> is the Internet, though any coupling, for example dedicated, distributed, local, wired, wireless, optical or otherwise, between user <highlight><bold>102</bold></highlight> and secure interface <highlight><bold>106</bold></highlight> can fulfill the role of network <highlight><bold>104</bold></highlight>. User <highlight><bold>102</bold></highlight> connects to network <highlight><bold>104</bold></highlight> through any well-known medium, for example a personal computer or a workstation with suitable interface software. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> In the present embodiment, user <highlight><bold>102</bold></highlight> connects to system <highlight><bold>100</bold></highlight> for the purpose of evaluating a simulation model. It is apparent that the present invention is not limited to particular models and is applicable to any multi-element or multi-component integrated circuit system. Furthermore, for purposes of discussion herein, the term &ldquo;model&rdquo; will be used to refer to models as well as systems and components. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> In one embodiment, the user <highlight><bold>102</bold></highlight> utilizes a user interface, such as a graphical user interface (GUI), whereby the user <highlight><bold>102</bold></highlight> selects from various test stimuli associated with semiconductor cores, or components, to design an IC model that meets the design requirements of the user <highlight><bold>102</bold></highlight>. It should be noted that the user interface is not limited to a GUI but can be any interface that enables the user to send information and receive information from system <highlight><bold>100</bold></highlight>. Examples of components include processors, memory, and communication ports, but may further include any portion of a system design, such as an IC model design. In one embodiment, the user <highlight><bold>102</bold></highlight> selects from a list or presentation of available components and designs a custom IC model. In another embodiment, the user <highlight><bold>102</bold></highlight> selects from a predesigned IC model available on system <highlight><bold>100</bold></highlight> for a particular purpose, for example a small office/home office router. In still another embodiment, the user <highlight><bold>102</bold></highlight> may select components and further provide information regarding other components, for example components of the user, to design a custom IC model. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Each component (for example, a processor or memory) <highlight><bold>120</bold></highlight>, <highlight><bold>125</bold></highlight>, <highlight><bold>130</bold></highlight> presented to the user through the GUI <highlight><bold>108</bold></highlight> has corresponding hardware description language (HDL) code that corresponds to the function and response of the particular component. The simulation model is not viewable or accessible by user <highlight><bold>102</bold></highlight>, as the user <highlight><bold>102</bold></highlight> cannot access the simulation model through the secure interface <highlight><bold>106</bold></highlight>. One advantage of using a simulation model is that there is a greater degree of certainty that the software model created with the code can be implemented in actual hardware. The code may be implemented as conventional Verilog or VHDL, though any HDL or other simulation model representation may be used. HDL code is well known in the art and not further discussed herein. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> In one embodiment, the IP of the component or a model provider includes the simulation model of the components/model and in some instances the test stimulus for exercising the simulation model. For purposes of simplifying the discussion below, reference will simply be made to the simulation model whenever possible. The operator of system <highlight><bold>100</bold></highlight> therefore pre-negotiates legal obligations concerning the simulation model of the components/model, for example licensing, use, or non-disclosure agreements, and has access to the appropriate simulation model <highlight><bold>120</bold></highlight>, <highlight><bold>125</bold></highlight>, <highlight><bold>130</bold></highlight> corresponding to each component/model accessible by the user. The intellectual property rights may be owned, for example, by a third party that developed the component and corresponding simulation model and test stimulus. The legal obligations function to protect the rights, including the intellectual property (IP) rights of the third party. As noted above, in the present embodiment, the user <highlight><bold>102</bold></highlight> is prevented from accessing the simulation model, therefore protecting the underlying rights of the third party. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> In one embodiment, model components and associated test stimuli are available for selection by a user via GUI <highlight><bold>108</bold></highlight>. Once user <highlight><bold>102</bold></highlight> indicates the component(s) in a design, or picks a pre-designed IC model, through GUI <highlight><bold>108</bold></highlight>, the user <highlight><bold>102</bold></highlight> selects from available tests in order to simulate the operation and/or behavior of the design. For example, system <highlight><bold>100</bold></highlight> prepares a simulation of an IC model based on the simulation model associated with each of the components and the appropriate input and output signals of the components. The system can then run user selected, system selected and/or user provided tests on the simulation. For example, the user may select certain tests to run using certain signal inputs and/or signal or system constructs. In another embodiment, the user <highlight><bold>102</bold></highlight> provides tests to system <highlight><bold>100</bold></highlight> which are used as a test stimulus for the simulation of the IC model. Thus, tests with respect to a particular design including a particular set of components may, in one embodiment, be pre-established and stored for easy access when needed. Alternately, the tests for different combinations of components or models may be developed at a time of specification by the user. Further, tests for sub-groupings of components may be pre-specified or later specified and applied for simulation of the model. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> System <highlight><bold>100</bold></highlight> couples to network <highlight><bold>104</bold></highlight> through secure interface <highlight><bold>106</bold></highlight>. Secure interface <highlight><bold>106</bold></highlight> enables the user <highlight><bold>102</bold></highlight> to access the GUI <highlight><bold>108</bold></highlight> and prevents user <highlight><bold>102</bold></highlight> from accessing confidential information of third party providers of IP. Examples of a secure interface <highlight><bold>106</bold></highlight> include a conventional firewall incorporated into a computer system router as well as software within a computer (not shown) designed to limit and control access to files. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The system <highlight><bold>100</bold></highlight> may be implemented a variety of ways. For example, the system may be implemented on a personal computer, workstation and the like. Alternately, the system <highlight><bold>100</bold></highlight> may be implemented using a variety of interconnected components such as the system illustrated in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> In the embodiment illustrated by <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, user <highlight><bold>202</bold></highlight> communicates with the system <highlight><bold>200</bold></highlight> via a network or other connection <highlight><bold>204</bold></highlight>, such as the Internet through a secure interface, in the present embodiment, firewall <highlight><bold>206</bold></highlight>. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> One example by which a firewall <highlight><bold>206</bold></highlight> couples to a network is through an Ethernet connection. A firewall can provide network address translation (NAT), Domain Name Server (DNS) and Internet protocol (IP) filtering services for system <highlight><bold>200</bold></highlight>, known in the art and used for communications between the user <highlight><bold>202</bold></highlight> and system <highlight><bold>200</bold></highlight>. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> In the embodiment of the system of the present invention illustrated by <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, firewall <highlight><bold>206</bold></highlight> couples to switches <highlight><bold>208</bold></highlight>, <highlight><bold>209</bold></highlight>. Switches <highlight><bold>208</bold></highlight>, <highlight><bold>209</bold></highlight> operate in conjunction with the firewall <highlight><bold>206</bold></highlight> to direct traffic within system <highlight><bold>200</bold></highlight>. In one embodiment, switch <highlight><bold>208</bold></highlight> controls access to user-interaction subsystem <highlight><bold>210</bold></highlight> (i.e. user-interaction section) and switch <highlight><bold>209</bold></highlight> controls access to computation subsystem <highlight><bold>212</bold></highlight> (i.e. secure section). </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> User interaction subsystem <highlight><bold>210</bold></highlight> includes application server <highlight><bold>214</bold></highlight>, thin client server <highlight><bold>216</bold></highlight>, and user account server <highlight><bold>218</bold></highlight>. In one embodiment, application server <highlight><bold>214</bold></highlight> provides basic user functions such as HTTP, electronic mail, and Virtual Network Computing (VNC) packet routing. Other embodiments including other applications may be implemented. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Thin client server <highlight><bold>216</bold></highlight> provides VNC services which provide screen emulation of a platform or operating system for a GUI, for example Unix. Thin client server <highlight><bold>216</bold></highlight> in conjunction with application server <highlight><bold>214</bold></highlight> allows a user <highlight><bold>202</bold></highlight> with a web browser, for example a Java-enabled web browser, to select and/or design an IC model and to see outputs and inputs of tests for simulation of IC models selected through a GUI generated by application server <highlight><bold>214</bold></highlight> and a web browser accessible by the user <highlight><bold>202</bold></highlight>. Furthermore, in one embodiment, server <highlight><bold>216</bold></highlight> stores a shadow representation of the IP cores made available for selection by the user. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Account server <highlight><bold>218</bold></highlight> creates user accounts and stores IC designs and other information for user <highlight><bold>202</bold></highlight>. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> As noted above, user interaction subsystem <highlight><bold>210</bold></highlight> is located on the DMZ side of firewall <highlight><bold>206</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. Computation subsystem <highlight><bold>212</bold></highlight> (i.e. the secure section) is located on the secured side of the firewall <highlight><bold>206</bold></highlight> and therefore is protected from unauthorized access by the user. Computation subsystem <highlight><bold>212</bold></highlight> includes compute server <highlight><bold>220</bold></highlight>, IP server <highlight><bold>222</bold></highlight>, and database server <highlight><bold>224</bold></highlight>. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Compute server <highlight><bold>220</bold></highlight> performs calculations necessary to enable simulation and/or testing of the simulation models. Thus, in one example, user <highlight><bold>202</bold></highlight> can select the tests to run on the IC model, which was also user selected. In this manner, the user can provide selected input data for simulation and view the output data of the tests without accessing or viewing confidential information having proprietary IP rights attached to the simulation model and its components. Only the compute server <highlight><bold>220</bold></highlight>, located on the secured side of the system, can access the real (not the shadow representation) IC model or IP cores. In one embodiment, thin client server <highlight><bold>216</bold></highlight>, utilizing a network of interconnected components, directs compute server <highlight><bold>220</bold></highlight> to construct a list of tests based on tests available from IP server <highlight><bold>222</bold></highlight>. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> IP server <highlight><bold>222</bold></highlight> accesses simulation model representative of each component and/or model selectable by a user <highlight><bold>202</bold></highlight> to construct a composite IC model. In one example, third party vendors, who own the IP rights attached to the respective components, provide the proprietary simulation model stored on IP server <highlight><bold>222</bold></highlight>. Because this code is in the secure section, the code remains inaccessible to a user, except for selection as part of a simulation. In another example, a secure offsite location coupled to network <highlight><bold>228</bold></highlight> maintains the necessary proprietary simulation model. The simulation model, in one embodiment, also includes code necessary to test the component. This is typically provided by third party vendors, although it may also be provided by the provider of the computation subsystem <highlight><bold>212</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> Database server <highlight><bold>224</bold></highlight> stores and provides access to user registration information. In one embodiment database server <highlight><bold>224</bold></highlight> responds to a structured query language (SQL), a standard interactive and programming language for getting information from and updating the database. However, a variety of types of databases and languages may be used. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Once the user is authorized to enter the system, the user can work on an IC model of interest. In one embodiment, the user accesses a pre-designed IC model for further testing. In another embodiment, the user accesses a standard configuration and combination of components on which to base a particular design of interest to the user. In still another embodiment, the user may establish an original design of a combination of components available. Alternately, the user may provide one or more components of the design to operate in conjunction with other components of third parties. In each case, the user can create a desired IC model without access to proprietary component or test code. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a simplified flow diagram illustrating one embodiment of the process of the present invention. At step <highlight><bold>305</bold></highlight>, it is determined whether the user is authorized to access the system. This step, in one embodiment, also functions to provide the user with other data and information relevant to earlier work performed by the user through this system. At step <highlight><bold>310</bold></highlight>, the user selects a set of cores to be used in the IC model. As noted above, the user may select from a pre-designed IC model or the user may design an IC model by selecting components from a portfolio of existing components (i.e. cores). Alternately, the user may be able to design custom components. In each case, the user cannot access the confidential internal structure of the selected components. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> Using the IC model designed or selected, the user runs the IC model in the secure area of the system (step <highlight><bold>315</bold></highlight>). In one embodiment, the user may run the IC model within a testbench, such as the one illustrated in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>. Testbench <highlight><bold>910</bold></highlight> is a structure that executes the IC model for the purpose of simulation. The testbench <highlight><bold>910</bold></highlight> typically includes a set of tests <highlight><bold>915</bold></highlight> from which a user may select a particular test for exercising the IC model. The testbench <highlight><bold>910</bold></highlight> is normally written in HDL. The user may also provide particular inputs to the tests to be performed. As noted earlier, the user has no access to the secure area and no access to the IP of the components, the testbench, and the tests of the IC model therein, thereby eliminating the need for the user to negotiate with each of the IP owner(s) for access to the IC model or component information for design development and design simulation. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> At step <highlight><bold>320</bold></highlight>, the results of the IC model run are provided to the user. The user is provided the results in the user-interaction system area on the DMZ side of the firewall. Thus, the component and IC model IP remains secure while the user gains the benefit of viewing results of a particular model simulation. Depending upon the simulation results, the user may wish to perform additional simulations, change the inputs to the tests, or even change the IC model/component configuration being simulated, step <highlight><bold>325</bold></highlight>. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flowchart showing steps for creating and evaluating an IC model. A user is initially authorized to access the system at step <highlight><bold>405</bold></highlight>. Access may be attempted through a variety of media including wired, wireless connections, networks and the like. In one embodiment, the identity of the user is viewed prior to access, for example, by requesting a name and password. Name and password information with respect to the users, may be stored in the system, along with any previously designed IC models of the user. After verifying the identity of user and granting access, the application server in combination with the thin client server, in one embodiment, present the user with a GUI to manipulate. Using the GUI, the user can select further options. As noted earlier, the user can interface with the system using a variety of types of interfaces and is not limited to a GUI. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> At step <highlight><bold>410</bold></highlight> the user, using the GUI, determines if any existing IC models perform the functions desired by the user. One example of a function is a router with firewall and print server capabilities. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> If a user finds a model with a desired functionality, step <highlight><bold>420</bold></highlight>, the model is utilized as is or modified as desired. For example, IP cores may be available for addition or substitution of existing cores within the pre-designed IC model. Furthermore, components may be removed from the selected IC model. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The user may also choose to design a new IC model, step <highlight><bold>415</bold></highlight>. In one embodiment, in a drag and drop GUI, the user may select from a list of components and drag graphical representations of selected components into the graphical representation of the IC model. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> At step <highlight><bold>425</bold></highlight>, the user can then generate a top-level netlist of the IC model. In short, the top-level netlist is a description of how all IP cores within the IC model are connected to each other. This netlist provides the user information on the set of tests that can be run on the IC model. The user initiates the process to create the netlist on the thin client server <highlight><bold>216</bold></highlight> (see <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) and the actual creation of the netlist occurs on the compute server <highlight><bold>220</bold></highlight> (see <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> At step <highlight><bold>430</bold></highlight>, in one embodiment, the user selects tests to run on the simulation of the IC model. These tests may be provided by the IP core supplier, the implementer of the embodiment, or by the user. The set of available tests provided to the user is determined by the set of cores used in the IC model. The user can then select a subset of these tests to run on the IC model. The set of tests selected are stored on the thin client server <highlight><bold>216</bold></highlight>. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> At step <highlight><bold>435</bold></highlight>, a testbench for the IC model is created. The testbench <highlight><bold>910</bold></highlight> (as shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference> and described above) provides the ability to run tests on the IC model. This testbench is typically written in a HDL such as Verilog. The set of tests previously selected by the user are passed to this testbench <highlight><bold>910</bold></highlight> for execution when the IC model is run. The creation of this testbench <highlight><bold>910</bold></highlight> is done on the Compute server <highlight><bold>220</bold></highlight> (see <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> At step <highlight><bold>440</bold></highlight>, the IC model is run using the generated testbench <highlight><bold>910</bold></highlight> and the user-selected tests and/or configuration data. An embodiment of this is to simulate the IC model using an HDL simulator. This activity is performed on the Compute server <highlight><bold>220</bold></highlight> (see <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> At step <highlight><bold>445</bold></highlight>, the output of the IC model run can then be viewed by the user. This output provides the user with information on the behavior of the IP cores within an IC model context. This information can help the user determine if the core suits their need. The output results are transferred from the compute server <highlight><bold>220</bold></highlight> to the thin client server <highlight><bold>216</bold></highlight> so that the user can view the results. A variety of views can be provided. One embodiment is to provide a waveform view of the signal activity for each interface of each core. Another is to provide a performance analysis of the activity occurring between the different cores. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> It should be recognized that the design and test process may be repeatedly performed on a user modified IC model. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> As noted above, in one embodiment, a graphical user interface (GUI) is utilized to communicate with the user. FIGS. <highlight><bold>5</bold></highlight>-<highlight><bold>8</bold></highlight> are illustrative of one example of screen displays of a GUI that operates in accordance with the teachings of the present invention. After the user gains access to the system, the user may be provided a display such as that illustrated in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. Screen <highlight><bold>500</bold></highlight> is one example of a GUI offering a predesigned IC model. Model type <highlight><bold>502</bold></highlight> shows a small office/home office network appliance. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> Graphical representation <highlight><bold>510</bold></highlight> is a graphical layout of the predesigned IC model. Components are graphically represented by simple graphic components, for example, CPUs <highlight><bold>512</bold></highlight>, <highlight><bold>514</bold></highlight>, Ethernet controllers <highlight><bold>516</bold></highlight>, <highlight><bold>518</bold></highlight> and USB host controller <highlight><bold>520</bold></highlight>. Graphical representation <highlight><bold>510</bold></highlight> shows components <highlight><bold>512</bold></highlight>, <highlight><bold>514</bold></highlight>, <highlight><bold>516</bold></highlight>, <highlight><bold>518</bold></highlight> and <highlight><bold>520</bold></highlight> coupled to, for example, a graphical representation of a smart interconnect IP core <highlight><bold>522</bold></highlight> with interface ports <highlight><bold>524</bold></highlight>, <highlight><bold>526</bold></highlight>, <highlight><bold>528</bold></highlight> and <highlight><bold>530</bold></highlight>. In another embodiment, components <highlight><bold>512</bold></highlight>, <highlight><bold>514</bold></highlight>, <highlight><bold>516</bold></highlight>, <highlight><bold>518</bold></highlight> and <highlight><bold>520</bold></highlight> couple to a system bus (not shown). Graphical representation <highlight><bold>510</bold></highlight> also shows components coupling to physical leads on a chip, for example component <highlight><bold>520</bold></highlight> is coupled to lead <highlight><bold>532</bold></highlight>. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The present embodiment also includes other information present throughout the GUI to assist the user in the design of a model. These include, but are not limited to, a description of the model function <highlight><bold>534</bold></highlight>, a hardware description <highlight><bold>536</bold></highlight> and listing of component providers <highlight><bold>538</bold></highlight>. Description <highlight><bold>534</bold></highlight> provides information on the purpose and function of the model. Hardware configuration <highlight><bold>536</bold></highlight> provides information on components, e.g. <highlight><bold>512</bold></highlight>, <highlight><bold>514</bold></highlight>, <highlight><bold>516</bold></highlight>, <highlight><bold>518</bold></highlight> and <highlight><bold>520</bold></highlight> within the predesigned IC model. Components include, for example, CPUs, Ethernet controllers, USB host controller, SRAM modules, a DDR memory controller, FLASH memory interface and a network. A brief description accompanies each component identified. The different suppliers or component providers are identified in section <highlight><bold>538</bold></highlight>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows one example of a GUI representing display of an authorized user&apos;s workspace. The workspace gives the user remote access to design tools, including simulation of and/or modification of an IC model. The display <highlight><bold>600</bold></highlight> can be configured as an interactive drag-and-drop GUI in which the user changes the configuration of an IC model graphically by movement of displayed components, whether predesigned or designed by the user. The user selects components and manipulates, e.g. adds, removes or replaces them with a tool, for example, a mouse, track ball, touch screen or the like, or adds components to the IC model in the display. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> illustrates an example display of tests that can be performed by a user for components of the model of interest, in this example, the model of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. In one embodiment, the provider of the components of the IC model determines the tests that are available. Thus, for example, tests <highlight><bold>702</bold></highlight>, <highlight><bold>704</bold></highlight>, <highlight><bold>706</bold></highlight> and <highlight><bold>708</bold></highlight> are available to test the instantiated CPU core named &ldquo;master 2&rdquo;. In another embodiment, the user provides tests to be performed on the IC model. From this example, the user can easily select the tests to be run on this IC model using, for example, a cursor control device. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is an example display of an output of tests performed on an IC model. <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is one embodiment of many different embodiments of display formats and information provided in an output display. The output can take a variety of forms including a graphic display, a listing of signal values and waveforms in any combination. <cross-reference target="DRAWINGS">FIG. 8</cross-reference> illustrates a number of signal waveforms, which include, in one embodiment, input points, output points and test points (neither input or output but an intermediary point of interest) in the design. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> The output display(s) can, in one embodiment, be manipulated to provide a variety of information on the behavior of an IC. For example, as illustrated in <cross-reference target="DRAWINGS">FIG. 8, a</cross-reference> specific point in time in the test is highlighted across the displayed waveforms (e.g. 37,560 ns). </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> It will be appreciated that that more or fewer processes may be incorporated into the method(s) illustrated by FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>8</bold></highlight> without departing from the scope of the invention and that no particular order is implied by the arrangement of blocks (for example as shown in <cross-reference target="DRAWINGS">FIGS. 3 and 4</cross-reference>) shown and described herein. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> It further will be appreciated that the method(s) and structures described in conjunction with FIGS. <highlight><bold>1</bold></highlight>-<highlight><bold>8</bold></highlight> may be embodied in machine-executable instructions, e.g. software. The instructions can be used to cause a general-purpose or special-purpose processor that is programmed with the instructions to perform the operations described. Alternatively, the operations might be performed by specific hardware components that contain hardwired logic for performing the operations, or by any combination of programmed computer components and custom hardware components. The methods may be provided as a computer program product that may include a machine-readable medium having stored thereon instructions that may be used to program a computer (or other electronic devices) to perform the methods. For the purposes of this specification, the terms &ldquo;machine-readable medium&rdquo; shall be taken to include any medium that is capable of storing or encoding a sequence of instructions for execution by the machine and that cause the machine to perform any one of the methodologies of the present invention. The term &ldquo;machine-readable medium&rdquo; shall accordingly be taken to included, but not be limited to, solid-state memories, optical and magnetic disks, and carrier wave signals. Furthermore, it is common in the art to speak of software, in one form or another (e.g., program, procedure, process, application, module, logic . . . ), as taking an action or causing a result. Such expressions are merely a shorthand way of saying that execution of the software by a computer causes the processor of the computer to perform an action or a produce a result. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> In the foregoing specification, the invention is described with reference to specific embodiments thereof. It will, however, be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention as set forth in the appended claims. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A system comprising: 
<claim-text>a computational subsystem configured to perform simulation of an IC model including at least one component, the testing requiring access to confidential information regarding the at least one component; </claim-text>
<claim-text>a user interaction subsystem configured to enable a user to run at least one simulation of the IC model; and </claim-text>
<claim-text>a secure interface coupled between the computational subsystem and the user interaction subsystem, said secure interface permitting the transfer of the user established IC model information and input test selection and/or configuration data to simulate at least part of the IC model and prohibiting user access to the confidential information, said secure interface further permitting the transfer of output simulation results to the user, wherein the user can specify an IC model and simulate at least part of the IC model without access to component confidential information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the confidential information is selected from the group consisting of a simulation model of a component of the IC, a simulation model of an IC, test code to simulate components and test code to simulate an IC model. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the secure interface further permits the computational subsystem to identify to the user tests that can be performed, the tests to be performed and/or test parameters to be used being selectable by the user. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, said user interaction subsystem further includes a user interface, the user capable of inputting information regarding test and/or parameter selection for running the simulation of at least one IC model through the user interface and further capable of receiving information regarding output simulation results through the user interface. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the user accesses the user interaction subsystem through a connection selected from the group consisting of a network connection and a direct connection. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the network connection is selected from the group consisting of a local area network and the Internet. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the user may select from the group consisting of selection of an IC model from system-provided IC models, selection from system-provided components to form an IC model, modification of a selected system-provided IC model, generation of an IC model of user designed components, generation of an IC model of system-provided components and user designed components. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the at least one simulation selection is dependent upon at least one of the IC models and at least one component. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the input test selection and/or configuration data is selected from the group consisting of signal inputs and test code. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The system as set forth in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further including a testbench upon which the IC model is simulated. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A method comprising: 
<claim-text>providing a computational subsystem configured to perform simulation of an IC model including at least one component, the testing requiring access to confidential information regarding the at least one component; </claim-text>
<claim-text>providing a user interaction subsystem configured to enable a user to run at least one simulation of the IC model; and </claim-text>
<claim-text>providing a secure interface coupled between the computational subsystem and the user interaction subsystem, said secure interface permitting the transfer of the user established IC model information and input test selection and/or configuration data to simulate at least part of the IC model and prohibiting user access to the confidential information, said secure interface further permitting the transfer of output simulation results to the user, wherein the user can specify an IC model and simulate at least part of the IC model without access to component confidential information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the confidential information is selected from the group consisting of a simulation model of a component of the IC, a simulation model of an IC, test code to simulate components and test code to simulate an IC model. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the secure interface further permits the computational subsystem to identify to the user tests that can be performed, the tests to be performed and/or test parameters to be used being selectable by the user. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, further permitting the user to input information regarding test and/or parameter selection for running the simulation of at least one IC model through a user interface and further receive information regarding output simulation results through the user interface. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the user accesses the user interaction subsystem through a connection selected from the group consisting of a network connection and a direct connection. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the network connection is selected from the group consisting of a local area network and the Internet. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the user may select from the group consisting of selection of an IC model from system-provided IC models, selection from system-provided components to form an IC model, modification of a selected system-provided IC model, generation of an IC model of user designed components, generation of an IC model of system-provided components and user designed components. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The method as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the at least one simulation selection is dependent upon at least one of the IC models and at least one component. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The method as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the input test selection and/or configuration data is selected from the group consisting of signal inputs and test code. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The method as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, further including providing a testbench upon which the IC model is simulated.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004699A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004699A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004699A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004699A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004699A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004699A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004699A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004699A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004699A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004699A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
