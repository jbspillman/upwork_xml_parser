<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030001858A1-20030102-D00000.TIF SYSTEM "US20030001858A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030001858A1-20030102-D00001.TIF SYSTEM "US20030001858A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030001858A1-20030102-D00002.TIF SYSTEM "US20030001858A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030001858A1-20030102-D00003.TIF SYSTEM "US20030001858A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030001858A1-20030102-D00004.TIF SYSTEM "US20030001858A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030001858A1-20030102-D00005.TIF SYSTEM "US20030001858A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030001858A1-20030102-D00006.TIF SYSTEM "US20030001858A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030001858A1-20030102-D00007.TIF SYSTEM "US20030001858A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030001858A1-20030102-D00008.TIF SYSTEM "US20030001858A1-20030102-D00008.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030001858</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10164303</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020116</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G09G005/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>345</class>
<subclass>582000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Creation of a mosaic image by tile-for-pixel substitution</title-of-invention>
</technical-information>
<continuity-data>
<non-provisional-of-provisional>
<document-id>
<doc-number>60262576</doc-number>
<document-date>20010118</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Thomas</given-name>
<family-name>Jack</family-name>
</name>
<residence>
<residence-non-us>
<city>Pully/Lausanne</city>
<country-code>CH</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>John MOETTELI</name-1>
<name-2>BUGNION S.A.</name-2>
<address>
<address-1>Case postale 375</address-1>
<city>Geneva</city>
<postalcode>1211</postalcode>
<country>
<country-code>CH</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A target mosaic image is created by replacing each pixel in a smaller source image with an appropriately colorized tile image. Tiles may repeat, be non-square and/or non-rectangular, and be multi-sized. For artistic effect, selected areas of the target image may be excluded from tiling on the basis of user-supplied criteria. This methodology is in marked contrast to all other known methods for creating mosaic images (including the well-known method of Robert Silvers &lsqb;U.S. Pat. No. 6,137,498&rsqb;, wherein the best match to the attributes of target regions/subregions are sought from a library of tile image candidates). Claims are also made with regard to several methodologies which support the mosaic image creation. These claims include a methodology for positioning tiles which minimizes eye-detectable patterns of repeat images, a process for tile multi-sizing such that inappropriate sizes are not positioned to the detriment of the output image, a method for colorizing tiles, a method for automatically adjusting image lightness and contrast, an image resizing methodology, and a pattern-recognition algorithm for the automatic creation of tile images. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This invention relates to graphics software and, more particularly, to graphics software that implements a method of creating a mosaic image. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Other known methods for creating mosaic images (including the well-known method of Silvers, U.S. Pat. No. 6,137,498) attempt to select a best match to the attributes of target regions/subregions from a library of tile image candidates. Such a selection requires significant computer resources due to a step in which a match to the attributes of target regions/subregions from a library of tile image candidates is sought. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Therefore, what is needed is a method which is simpler to implement and which requires less computer resources. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> This method creates the mosaic image by replacing each pixel in a smaller source image with an appropriately colorized tile image. In a submethod of the method, tiles are positioned in such a way as to minimize eye-detectable patterns of repeat images. In another submethod of the invention, a process for tile multi-sizing such that inappropriate sizes are not positioned to the detriment of the output image. In another submethod, a tile colorizing method is provided. In another submethod, a method for automatically adjusting image lightness and contrast is provided. In another submethod, an image resizing methodology is provided. In another submethod, a pattern-recognition algorithm is provided for the automatic creation of tile images. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> An object of the invention is to reduce necessary computer resources by eliminating a step in which a match to the attributes of target regions/subregions from a library of tile image candidates is sought. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a flow chart of the method of the preferred embodiment. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a flow chart of the tile creation submethod of the preferred embodiment </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a screen print of a control interface of the invention. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> FIG <highlight><bold>4</bold></highlight> is a flow chart of the source-for-output image creation submethod of the invention. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a screen print of another control interface for defining the source-for-output image of the invention. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a screen print of another control interface for setting image parameters. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 7</cross-reference><highlight><italic>a </italic></highlight>and <highlight><bold>7</bold></highlight><highlight><italic>b </italic></highlight>are examples of different tiling formats possible with the invention. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is an example of the effect of nonadjacent tiling. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is an example of the effect of excluding files which lack or possess a certain characteristic. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a process flow chart of the tile positioning submethod of the invention. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference><highlight><italic>a </italic></highlight>and <highlight><bold>11</bold></highlight><highlight><italic>b </italic></highlight>are examples of random and non-random tile multi-sizing. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a flow chart of the tile sizing submethod of the invention. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> are examples of tile-image candidates for use with the method of the invention. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is an example of the selection of a prototype tile. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> shows the positioning of a first possible tile and a last possible tile, which make up an output image of the invention. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a panel showing source and target tile colorization, in grey scale representation. The left image is pink and the right image is orange-yellow. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a panel of an example resulting in improved tile colorization. The upper and lower left images are pink. The right side images are light green. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT </heading>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the method of the invention creates the mosaic image by replacing each pixel in a smaller source image with an appropriately colorized tile image. In a first step <highlight><bold>12</bold></highlight>, the method <highlight><bold>10</bold></highlight> creates tiles using a library of digital images from any source. In a second step <highlight><bold>14</bold></highlight>, the source image that will generate the output image is created or selected from among the tile images. In a third step <highlight><bold>16</bold></highlight>, the parameters for the output image are set. In a fourth step <highlight><bold>20</bold></highlight>, the positions for the tiles are determined. In a fifth step <highlight><bold>22</bold></highlight>, the sizes for the tiles are determined. In a sixth step <highlight><bold>24</bold></highlight>, the output image is created. In optional sixth steps <highlight><bold>26</bold></highlight><highlight><italic>a, </italic></highlight><highlight><bold>26</bold></highlight><highlight><italic>b, </italic></highlight>the output image is printed, saved, or converted. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 2, a</cross-reference> tile creation step <highlight><bold>12</bold></highlight> includes several substeps. In a first substep <highlight><bold>30</bold></highlight>, the user selects the output tile dimensions. In a second substep <highlight><bold>32</bold></highlight>, the first or next library image is retrieved from the library of digital images. In a third substep <highlight><bold>34</bold></highlight>, the user is provided with an interface <highlight><bold>36</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>) to select and size a square of a selected area <highlight><bold>40</bold></highlight> of a candidate tile image <highlight><bold>42</bold></highlight> to define the tile size and the information about that square selection is saved in memory, e.g., the user sized, selected, and &ldquo;saved&rdquo; a square of 53&times;53 pixels starting at coordinate <highlight><bold>24</bold></highlight>, <highlight><bold>62</bold></highlight> of the original image. In a fourth optional substep, the interface <highlight><bold>36</bold></highlight> provides a designation tick box <highlight><bold>46</bold></highlight> enables the user to designate a tile as mirrorable. In a fifth substep <highlight><bold>44</bold></highlight>, the selected area <highlight><bold>40</bold></highlight> is automatically resized and saved and if mirrorable, a mirrored image is created and also saved. In a sixth substep <highlight><bold>50</bold></highlight>, the user is queried as to whether to create another tile from the same image. In a seventh substep <highlight><bold>52</bold></highlight>, if the user makes a selection so as to indicate his desire to create another tile image from the same image, the submethod returns to the third substep <highlight><bold>34</bold></highlight> and continues. In the user fails to indicate his desire to create another tile image using the same image, in substep <highlight><bold>54</bold></highlight>, the submethod queries the user if this is the last image. If not, the submethod goes to substep <highlight><bold>34</bold></highlight> and continues. If yes, in substep <highlight><bold>56</bold></highlight>, the lightness, contrast and color of all tiles are automatically adjusted for similarity with the characteristics of the pixel of the Source-for-Output image that the tile is replacing (described in more detail below). </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 4, a</cross-reference> flowchart of the source-for-output image creation submethod <highlight><bold>14</bold></highlight> is shown. In a first substep <highlight><bold>60</bold></highlight>, the user selects an image <highlight><bold>62</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>) for the Source-For-Output image. In a second substep <highlight><bold>62</bold></highlight>, using the data input fields <highlight><bold>64</bold></highlight> and <highlight><bold>66</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>), the user selects dimensions (e.g., 40&times;48 pixels, as shown). In a third substep <highlight><bold>64</bold></highlight>, the user uses a rectangular icon <highlight><bold>70</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>) to select and size an area <highlight><bold>72</bold></highlight> that is enlarged in an adjacent window <highlight><bold>74</bold></highlight> (shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>). In a fourth substep <highlight><bold>76</bold></highlight>, using controls <highlight><bold>80</bold></highlight>, lightness and contrast may be manually or automatically adjusted. In other words, lightness and contrast may simply be adjusted to target values using ordinary adjustment techniques. In a fifth substep <highlight><bold>82</bold></highlight>, if not already performed, using controls <highlight><bold>83</bold></highlight>, the user may optionally modify the color of individual pixels. In a sixth substep <highlight><bold>84</bold></highlight>, the selected area is automatically resized and saved. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, after preparation of the file images and the Source-for-Output image, the user, using a set parameter interface <highlight><bold>86</bold></highlight> sets parameters that will determine the size and attributes of the Output image. If uniform tile sizing is desired, then the minimum tile size must equal the maximum tile size. <cross-reference target="DRAWINGS">FIGS. 7</cross-reference><highlight><italic>a </italic></highlight>and <highlight><bold>7</bold></highlight><highlight><italic>b, </italic></highlight>respectively, show an example of uniform and non-uniform tile sizing. As shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, an example of tiling having spacing between adjacent tiles is shown (spacing factor&gt;minimum tile size). If no space is desired between tiles, then the default spacing value must equal the minimum tile size. Referring to <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, the user may elect to not include tiles below a specified &ldquo;light&rdquo; value, or define some other user-supplied criteria upon which to decide whether or not tiles should appear in the image. In this example, all &ldquo;light&rdquo; values greater than 150 are excluded for artistic effect. For better comprehension, it is noted that &ldquo;0&rdquo; is black and &ldquo;255&rdquo; is white. Essentially therefore, pixels in the Source-for-Output image whose grey values (GVs, 0-255) are greater than, or lighter than, 150 are excluded from tile-substitution. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> A tile is assigned to each pixel of the Source-for-Output image. If there are more tiles than pixels, then all the tiles cannot be used, and the tiles are randomly assigned to each pixel coordinate. If there are more pixel coordinates than tiles, then tiles must be repeated. The purpose of this algorithm is to position the tiles such that repeated tiles are as far apart as possible while avoiding any eye-detectable placement pattern. This is a completely automated process. In an optional submethod, between the steps of selecting a source image for enhancement and reading selected pixels of the source image, the source image may be processed to yield the desired resolution and thus the desired pixel size. For example, if the desired resolution of the target image is 50&times;50 pixels, and the Source-for-Output resolution is 200&times;200 over the same graphic area, then the optional submethod averages the characteristics of four adjacent pixels to create a pseudo-pixel from which further processing as described below may be performed. In other words, four adjacent pixels are considered as one large pixel for the purpose of creating the mosaic image. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the fourth step <highlight><bold>20</bold></highlight> for determining the positions for the tiles which minimises eye-detectable patterns of repeat images is shown. In a first substep <highlight><bold>90</bold></highlight>, the submethod <highlight><bold>20</bold></highlight> calculates maximum possible distance (MAXDIST) between tile repeats, based on the number of pixels in the Source-for-Output image and the number of tiles. Any tile assignation where the distance between repeats is less than MAXDIST is unacceptable. In a second substep <highlight><bold>92</bold></highlight>, one occurrence of each tile is randomly placed. In a third substep <highlight><bold>94</bold></highlight>, a for-loop is executed. In this loop, for each tile occurrence, the tile is tentatively assigned to the &lsqb;next&rsqb; unassigned pixel coordinate and then, the nearest same-tile assignment (DIST) is determined. If the DIST is lesser than MAXDIST, then the loop returns to the next unassigned pixel coordinate and continues in the for-loop. If DIST is OK, then, in a third substep <highlight><bold>100</bold></highlight>, the submethod <highlight><bold>20</bold></highlight> asks the user whether there are more tile occurrences. If yes, then the submethod <highlight><bold>20</bold></highlight> returns to the beginning of the for-loop <highlight><bold>94</bold></highlight>. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> A tile size is assigned to each pixel coordinate. When the user elects non-uniform tile sizing, tile sizing is not random. If it were random, larger tiles may be positioned inappropriately to the detriment of the output image. An example of an image having had random tile multi-sizing is shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference><highlight><italic>a. </italic></highlight>An example of an image having had non-random tile multi-sizing is shown in FIG-<highlight><bold>11</bold></highlight><highlight><italic>b. </italic></highlight>Tile multi-sizing helps ensure that that inappropriate sizes are not positioned to the detriment of the output image. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, the fifth step <highlight><bold>22</bold></highlight> of the method <highlight><bold>10</bold></highlight> is comprised of several substeps. In a first substep <highlight><bold>110</bold></highlight>, for each pixel in the Source-for-Output image, the sum of the absolute differences in RGB color values is calculated from all neighbouring pixels (SUMDIFF). In a second substep <highlight><bold>112</bold></highlight>, the pixel coordinates of the Source-for-Output are sorted by SUMDIFF. In a third substep <highlight><bold>114</bold></highlight>, a scale is assigned to tile sizes such that the smallest tile sized is assigned to the pixel coordinate with the largest SUMDIFF, the largest tile size being assigned to the pixel coordinate with the smallest SUMDIFF, and all the others are linearly scaled in-between. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> Referring now to FIGS. <highlight><bold>13</bold></highlight>-<highlight><bold>15</bold></highlight>, a pattern-recognition algorithm is provided for the automatic creation of tile images. The pattern-recognition algorithm automatically as creates tiles from similar source images, typically human portraits. Referring to <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, four tile-image candidates are shown. Referring to <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, the user is presented with an interface <highlight><bold>120</bold></highlight> to select a tile-image candidate and prepare a prototype tile <highlight><bold>122</bold></highlight>. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> For the prototype tile <highlight><bold>122</bold></highlight>, the R, G, and B values are rounded to a pre-selected number, e.g. 50. For instance, the rounded color values for a pixel of RGB(<highlight><bold>126</bold></highlight>,<highlight><bold>88</bold></highlight>,<highlight><bold>220</bold></highlight>) would be RGB(<highlight><bold>150</bold></highlight>,<highlight><bold>100</bold></highlight>,<highlight><bold>200</bold></highlight>). The frequency distribution of rounded colors is remembered by the program (e.g., RGB(<highlight><bold>150</bold></highlight>,<highlight><bold>100</bold></highlight>,<highlight><bold>200</bold></highlight>) occurs 17 times in the prototype tile). Invisible to the user, the method then loops through each remaining tile-image candidate, performing the following substeps. In a first substep, starting at the upper left corner, each possible tile of the same size as the prototype tile <highlight><bold>122</bold></highlight> is selected. <cross-reference target="DRAWINGS">FIGS. 15</cross-reference><highlight><italic>a </italic></highlight>and <highlight><bold>15</bold></highlight><highlight><italic>b </italic></highlight>show the fist and last possible tile positions <highlight><bold>124</bold></highlight> and <highlight><bold>126</bold></highlight> respectively. In a second substep, for each possible tile, the distribution of rounded color values is calculated in the same manner as for the prototype tile. In a third substep, the possible tile which is most similar to the prototype tile on the basis of rounded color distribution is selected as the tile for that tile-image candidate. Similarity judgement is based on Mean Average Deviation (MAD). For example, if RGB(<highlight><bold>150</bold></highlight>,<highlight><bold>100</bold></highlight>,<highlight><bold>200</bold></highlight>) occurs 17 times in the prototype image and 20 times in the possible file, then the absolute difference for this rounded color value is 3. The absolute differences for all rounded color values are summed for each possible tile, and the possible tile with the smallest absolute difference is deemed the most similar. Note that in order to speed processing, the user may elect to not consider all tile possibilities. In a fourth substep, the user is presented with the auto-tiles selected. The interface (not shown) allows the user to delete a file by right-clicking it, or to adjust the square by &lsquo;directional&rsquo; clicking&mdash;e.g., clicking in the bottom-left of the middle tile would adjust the square down and to the left. The user may then click to save tiles when finished with deletions/adjustments. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> Referring now to FIGS. <highlight><bold>15</bold></highlight>-<highlight><bold>17</bold></highlight>, the tile colorization process will be described in more detail. This process is a relatively complex and important subprocess of the invention. After the user has selected a subset of an image as his Source-for-Output image, the color of each pixel in the Source-for-Output image will become the target color of a tile. Since the tile itself is composed of many colors, the goal of the tile colorization process is to colorize the tile such that its overall color impression is that of the target color. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> In order to colorize an individual tile pixel, the following are needed: </paragraph>
<paragraph id="P-0035" lvl="2"><number>&lsqb;0035&rsqb;</number> the target RGB </paragraph>
<paragraph id="P-0036" lvl="2"><number>&lsqb;0036&rsqb;</number> the overall GV of the tile to be colorized </paragraph>
<paragraph id="P-0037" lvl="2"><number>&lsqb;0037&rsqb;</number> the GV of the individual tile pixel to be colorized </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The RGB values of each pixel in the tile is colorized according to the following algorithm:</paragraph>
<paragraph lvl="0"><in-line-formula>Target tile color value&equals;target color value&minus;(uncolorized tile avg GY&mdash;this tile pixel GV)</in-line-formula></paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> For example: </paragraph>
<paragraph id="P-0040" lvl="2"><number>&lsqb;0040&rsqb;</number> The target color for a tile is RGB(<highlight><bold>214</bold></highlight>,<highlight><bold>162</bold></highlight>,<highlight><bold>66</bold></highlight>). </paragraph>
<paragraph id="P-0041" lvl="2"><number>&lsqb;0041&rsqb;</number> For the tile to be colorized, the average uncolorized GV is 172. </paragraph>
<paragraph id="P-0042" lvl="2"><number>&lsqb;0042&rsqb;</number> The uncolorized color values for the tile point to be colorized is RGB(<highlight><bold>110</bold></highlight>,<highlight><bold>120</bold></highlight>,<highlight><bold>130</bold></highlight>). The GV is 120. </paragraph>
<paragraph id="P-0043" lvl="2"><number>&lsqb;0043&rsqb;</number> The R value for this tile point will be R&equals;214&minus;(172&minus;120)&equals;162 </paragraph>
<paragraph id="P-0044" lvl="2"><number>&lsqb;0044&rsqb;</number> The G value for this tile point will be R&equals;162&minus;(172&minus;120)&equals;110 </paragraph>
<paragraph id="P-0045" lvl="2"><number>&lsqb;0045&rsqb;</number> The B value for this tile point will be R&equals;66&minus;(172&minus;120)&equals;14 </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The colorized RGB value for the tile point will be RGB(<highlight><bold>162</bold></highlight>,<highlight><bold>110</bold></highlight>,<highlight><bold>14</bold></highlight>). </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Any calculated R, B, or B value which is less than 0 is changed to 0, and every calculated R, B, or B value which is greater than 255 is changed to 255. Note that any colorization methodology will suffice as long as <highlight><bold>1</bold></highlight>the colorized tile is a visual match with the point color from the Source-for-Output image. This algorithm works particularly well for colorizing tiles which are extremely light or extremely dark. This is important, especially with white points in the Source-for-Output image, which could appear as pictureless tiles with an ineffective algorithm. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> Note as well that better tile colorization is achievable with reduced contrast. Consider the example of <cross-reference target="DRAWINGS">FIG. 18</cross-reference>. There is a tradeoff between tile clarity and effective tile colorization. The more complex the Source-for-Output image, the greater need for effective tile colorization. Portraits tend to be less complex images, with sharper tiles more important than perfect tile colorization. Often, a desirable &ldquo;ghostly&rdquo; effect is achieved with very low-contrast tiles (i.e., one must study the large output mosaic to even notice that the tiles represent images). This may be achieved via a user selectable interface or by manually adjusting the tile contrast internally to achieve this special effect. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> Multiple variations and modifications are possible in the embodiments of the invention described here. Tiles may repeat, be non-square and/or non-rectangular, and be multi-sized. For artistic effect selected areas of the target image may be excluded from tiling on the basis of user-supplied criteria. Although certain illustrative embodiments of the invention have been shown and described here, a wide range of modifications, changes, and substitutions is contemplated in the foregoing disclosure. In some instances, some features of the present invention may be employed without a corresponding use of the other features. Accordingly, it is appropriate that the foregoing description be construed broadly and understood as being given by way of illustration and example only, the spirit and scope of the invention being limited only by the appended claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for creating a target mosaic image, the method comprising the steps of: 
<claim-text>(a) selecting a source image for enhancement; </claim-text>
<claim-text>(b) reading selected pixels of the source image; and </claim-text>
<claim-text>(c) creating the target mosaic image patterned upon the source image by replacing pixels with image tiles having color characteristics corresponding to pixels in the source image. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein a subroutine which minimizes repeat patterns of image tile positioning is applied between steps (b) and (c). </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein, after step (c), the image tile&apos;s size is reconciled to differing color distribution within the source image. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein, between steps (a) and (b), the source image is processed to yield the desired resolution and thus the desired size in pixels. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the target mosaic image is resized with respect to the source image.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>2</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030001858A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030001858A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030001858A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030001858A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030001858A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030001858A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030001858A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030001858A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030001858A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
