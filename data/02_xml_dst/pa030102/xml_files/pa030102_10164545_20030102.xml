<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002742A1-20030102-D00000.TIF SYSTEM "US20030002742A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00001.TIF SYSTEM "US20030002742A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00002.TIF SYSTEM "US20030002742A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00003.TIF SYSTEM "US20030002742A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00004.TIF SYSTEM "US20030002742A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00005.TIF SYSTEM "US20030002742A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00006.TIF SYSTEM "US20030002742A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00007.TIF SYSTEM "US20030002742A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00008.TIF SYSTEM "US20030002742A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00009.TIF SYSTEM "US20030002742A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00010.TIF SYSTEM "US20030002742A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00011.TIF SYSTEM "US20030002742A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00012.TIF SYSTEM "US20030002742A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00013.TIF SYSTEM "US20030002742A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00014.TIF SYSTEM "US20030002742A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00015.TIF SYSTEM "US20030002742A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00016.TIF SYSTEM "US20030002742A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00017.TIF SYSTEM "US20030002742A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00018.TIF SYSTEM "US20030002742A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00019.TIF SYSTEM "US20030002742A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00020.TIF SYSTEM "US20030002742A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00021.TIF SYSTEM "US20030002742A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00022.TIF SYSTEM "US20030002742A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00023.TIF SYSTEM "US20030002742A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00024.TIF SYSTEM "US20030002742A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00025.TIF SYSTEM "US20030002742A1-20030102-D00025.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00026.TIF SYSTEM "US20030002742A1-20030102-D00026.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00027.TIF SYSTEM "US20030002742A1-20030102-D00027.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00028.TIF SYSTEM "US20030002742A1-20030102-D00028.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00029.TIF SYSTEM "US20030002742A1-20030102-D00029.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00030.TIF SYSTEM "US20030002742A1-20030102-D00030.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00031.TIF SYSTEM "US20030002742A1-20030102-D00031.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00032.TIF SYSTEM "US20030002742A1-20030102-D00032.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00033.TIF SYSTEM "US20030002742A1-20030102-D00033.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00034.TIF SYSTEM "US20030002742A1-20030102-D00034.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00035.TIF SYSTEM "US20030002742A1-20030102-D00035.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00036.TIF SYSTEM "US20030002742A1-20030102-D00036.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00037.TIF SYSTEM "US20030002742A1-20030102-D00037.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00038.TIF SYSTEM "US20030002742A1-20030102-D00038.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00039.TIF SYSTEM "US20030002742A1-20030102-D00039.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00040.TIF SYSTEM "US20030002742A1-20030102-D00040.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00041.TIF SYSTEM "US20030002742A1-20030102-D00041.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00042.TIF SYSTEM "US20030002742A1-20030102-D00042.TIF" NDATA TIF>
<!ENTITY US20030002742A1-20030102-D00043.TIF SYSTEM "US20030002742A1-20030102-D00043.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002742</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10164545</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020610</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-175081</doc-number>
</priority-application-number>
<filing-date>20010611</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-178310</doc-number>
</priority-application-number>
<filing-date>20010613</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06K009/36</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>382</class>
<subclass>239000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>382</class>
<subclass>251000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Image compression method and apparatus, image expansion method and apparatus, and storage medium</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Yutaka</given-name>
<family-name>Sano</family-name>
</name>
<residence>
<residence-non-us>
<city>Miyagi</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Hiroyuki</given-name>
<family-name>Sakuyama</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Taku</given-name>
<family-name>Kodama</family-name>
</name>
<residence>
<residence-non-us>
<city>Kanagawa</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>OBLON SPIVAK MCCLELLAND MAIER &amp; NEUSTADT PC</name-1>
<name-2>FOURTH FLOOR</name-2>
<address>
<address-1>1755 JEFFERSON DAVIS HIGHWAY</address-1>
<city>ARLINGTON</city>
<state>VA</state>
<postalcode>22202</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">An image compression apparatus includes a tile specifying section specifying rectangular tiles having an arbitrary size with respect to an image, an image dividing section dividing the image using the specified rectangular tiles, a bit-plane decomposing section decomposing each of the specified tiles dividing the image into bit-planes, a bit-plane ordering section ordering the bit-planes decomposing each of the specified tiles depending on a coding sequence, a layer forming section forming layers by the ordered bit-planes, and a suppressing section suppressing a quantization rate of a region low relative to other regions of the image. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application claims the benefit of Japanese Patent Applications No. 2001-175081 filed Jun. 11, 2001 and No. 2001-178310 filed Jun. 13, 2001, in the Japanese Patent Office, the disclosure of which is hereby incorporated by reference. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The present invention generally relates to image compression methods and apparatuses, image expansion methods and apparatuses, and storage media, and more particularly to an image compression method and apparatus, an image expansion method and apparatus, and a computer-readable storage medium which stores a program for causing a computer to carry out an image compression and/or an image expansion so as to suppress a quantization rate in a vicinity of a tile boundary. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> 2. Description of the Related Art </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Due to improvements made in image input techniques and image output techniques, there are increased demands to improve the high definition property of color still images. One example of an image input apparatus is a digital camera (DC), and helped by reduced cost of high-performance charge coupled devices (CCDs) having 3,000,000 or more pixels, such high-performance CCDs are widely used for digital cameras in the popular price range. It is expected that products using CCDs having 5,000,000 or more pixels will be put on the market in the near future. Such high-performance input devices, typified by the CCDs, have been realized mainly due to improvements in silicon processes and device technologies, and have solved the tradeoff problem between miniaturizing the input device and suppressing signal-to-noise (S/N) ratio. This trend of increasing the number of pixels of the input device is expected to continue. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> On the other hand, considerable improvements have also been made in image output devices and image display devices, such as hard-copy devices including laser printers, ink jet printers and thermal printers, and soft-copy devices including flat panel displays made of CRTs, liquid crystal displays (LCDs) and plasma display panels (PDPs). The high definition property of such image output devices and image display devices have improved considerably, and the cost has greatly been reduced. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Because of these high-performance and inexpensive image input devices and image output devices on the market, the use of high-definition still images have become popular. It is expected that the demands for high-definition still images will increase in the future in various fields. Actually, the developments in personal computers (PCs) and network-related technologies including the Internet have accelerated such trends. Especially in recent years, mobile equipments such as portable telephones and lap-top computers have become extremely popular, and there are more and more opportunities to transmit or receive high-definition images via a communication means. Consequently, it is expected that the demands to further improve the performance or function of the image compression and/or expansion techniques will increase so as to facilitate processing of the high-definition still images. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> As one of image compression and expansion algorithms for facilitating the processing of such high-definition still images, the JPEG (Joint Photographic Experts Group) system is popularly used. In addition, the JPEG2000 which has become an international standard in 2001 uses an image compression and expansion algorithm with a high performance which is further improved compared to the JPEG. Hence, the JPEG2000 is extremely flexible and extendible with respect to various functions and various applications. Accordingly, there is much expectation on the JPEG2000 as a next-generation high-definition still image compression and expansion format which will succeed the JPEG. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a system block diagram for explaining the operating principle of the JPEG algorithm. The JPEG algorithm is realized by a color space transform and inverse transform section <highlight><bold>40</bold></highlight>, a discrete cosine transform and inverse transform section <highlight><bold>41</bold></highlight>, a quantization and inverse quantization section <highlight><bold>42</bold></highlight>, and an entropy coding and decoding section <highlight><bold>43</bold></highlight>. Normally, a non-independent-function is used in order to obtain a high compression rate, and the so-called lossless (or no-loss) compression and expansion will not be carried out. Although the original image data is not stored in their entirety, no problems will occur from the practical point of view. For this reason, the JPEG system can suppress the amount of memory capacity required to carry out the compression and expansion processes and to store the compressed image data. In addition, the JPEG system greatly contributes to reducing the time which is required for the data transmission and reception. Because of these advantages, the JPEG system is presently the most popularly used still image compression and expansion algorithm. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a system block diagram for explaining the operating principle of the JPEG2000 algorithm. The JPEG algorithm is realized by a color space transform and inverse transform section <highlight><bold>50</bold></highlight>, a two-dimensional wavelet transform and inverse transform section <highlight><bold>51</bold></highlight>, a quantization and inverse quantization section <highlight><bold>52</bold></highlight>, an entropy coding and decoding section <highlight><bold>53</bold></highlight>, and a tag processing section <highlight><bold>54</bold></highlight>. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> As described above, the JPEG system is the most popularly used still image compression and expansion system at the present. However, the demands to further improve the high definition properties of still images continue to increase, and the technical limits of the JPEG system are beginning to surface. For example, block noise and mosquito noise appearing in the image were not conspicuous in the past, but are gradually becoming more conspicuous as the high definition property of the original image improves. In other words, the image deterioration of the JPEG file which did not cause problems in the past are now becoming notable and no longer negligible from the practical point of view. As a result, image quality improvement at the low bit rate, that is, in the high compression rate region, is recognized as the most important problem to be solved for the algorithm. The JPEG2000 was developed as an algorithm capable of eliminating this problem, and it is expected that the JPEG2000 system will be used concurrently with the existing JPEG system. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> When <cross-reference target="DRAWINGS">FIGS. 1 and 2</cross-reference> are compared, it may be seen that the transformation method is one of the largest differences between the JPEG and the JPEG2000. The JPEG system employs the discrete cosine transform (DCT), while the JPEG2000 system employs the discrete wavelet transform (DWT). Compared to the DCT, the DWT has an advantage in that the image quality is good in the high compression region, which is the main reason for employing the DWT in the JPEG2000 system. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Another large difference between the JPEG and the JPEG2000 is that the JPEG2000 additionally uses a functional block called the tag processing section <highlight><bold>54</bold></highlight> at the last stage for forming codes. The tag processing section <highlight><bold>54</bold></highlight> generates the compressed data as a code stream at the time of the compression operation, and interprets the code stream necessary for the expansion at the time of the expansion operation. The JPEG2000 can realize various convenient functions by the code stream. For example, <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a diagram showing an example of a subband at each decomposition level for a case where the decomposition level is 3. It is possible to freely stop the still image compression and expansion operation at an arbitrary level corresponding to the octave division in the DWT of the block base shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> At the original image input and output sections shown in <cross-reference target="DRAWINGS">FIGS. 1 and 2</cross-reference>, the color space transform and inverse transform sections <highlight><bold>40</bold></highlight> and <highlight><bold>50</bold></highlight> are connected in most cases. For example, a transformation from the RGB colorimetric system made up of red (R), green (G) and blue (B) components of the primary color system or, from the YMC colorimetric system made up of yellow (Y), magenta (M) and cyan (C) components of the complementary color system, to the YUV or YCrCb colorimetric system or, an inverse transformation, is carried out in the color space transform and inverse transform sections <highlight><bold>40</bold></highlight> and <highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Next, a description will be given of the JPEG2000 algorithm. The technical terms related to the JPEG2000 are in conformance with the JPEG2000 Final Draft International Standard (FDIS). Typical technical terms are defined as follows. </paragraph>
<paragraph id="P-0016" lvl="2"><number>&lsqb;0016&rsqb;</number> 1. &ldquo;Bit-Plane&rdquo;: A two-dimensional array of bits. In this Recommendation International Standard a bit-plane refers to all the bits of the same magnitude in all coefficients or samples. This could refer to a bit-plane in a component, tile-component, code-block, region of interest, or other. </paragraph>
<paragraph id="P-0017" lvl="2"><number>&lsqb;0017&rsqb;</number> 2. &ldquo;Code-Block&rdquo;: A rectangular grouping of coefficients from the same subband of a tile-component. </paragraph>
<paragraph id="P-0018" lvl="2"><number>&lsqb;0018&rsqb;</number> 3. &ldquo;Decomposition Level&rdquo;: A collection of wavelet subbands where each coefficient has the same spatial impact or span with respect to the source component samples. These include the HL, LH, and HH subbands of the same two-dimensional subband decomposition. For the last decomposition level the LL subband is also included. </paragraph>
<paragraph id="P-0019" lvl="2"><number>&lsqb;0019&rsqb;</number> 4. &ldquo;Layer&rdquo;: A collection of compressed image data from coding pass of one, or more, code-blocks of a tile-component. Layers have an order for encoding and decoding and decoding that must be preserved. </paragraph>
<paragraph id="P-0020" lvl="2"><number>&lsqb;0020&rsqb;</number> 5. &ldquo;Precinct&rdquo;: A one rectangular region of a transformed tile-component, within each resolution level, used for limiting the size of packets. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a diagram showing an example of each component of a color image divided into tiles. Generally, each of components <highlight><bold>70</bold></highlight>, <highlight><bold>71</bold></highlight> and <highlight><bold>72</bold></highlight> (RGB primary color system in this case) of the original image is divided into rectangular regions (tiles) <highlight><bold>70</bold></highlight><highlight><subscript>t</subscript></highlight>, <highlight><bold>71</bold></highlight><highlight><subscript>t </subscript></highlight>and <highlight><bold>72</bold></highlight><highlight><subscript>t </subscript></highlight>in the color image as shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. Each of the tiles, such as R<highlight><bold>00</bold></highlight>, R<highlight><bold>01</bold></highlight>, . . . , R<highlight><bold>15</bold></highlight>, G<highlight><bold>00</bold></highlight>, G<highlight><bold>01</bold></highlight>, . . . , G<highlight><bold>15</bold></highlight>, B<highlight><bold>00</bold></highlight>, B<highlight><bold>01</bold></highlight>, . . . , B<highlight><bold>15</bold></highlight>, becomes a basic unit for executing the compression and expansion process. Accordingly, the compression and expansion operation is independently carried out for every component and for every tile. At the time of the coding, the data of each tile of each component is input to the color space transform and inverse transform section <highlight><bold>50</bold></highlight> and subjected to a color space transform, and is thereafter subjected to a two-dimensional wavelet transform (forward transform) in the two-dimensional wavelet transform section <highlight><bold>51</bold></highlight> and spatially divided into frequency bands. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> described above shows the subband at each decomposition level for the case where the decomposition level is 3. In other words, the two-dimensional wavelet transform is carried out with respect to the tile original image (<highlight><bold>0</bold></highlight>LL) (decomposition level <highlight><bold>0</bold></highlight> (<highlight><bold>60</bold></highlight>)) obtained by the tile-division of the original image, so as to separate the subbands (<highlight><bold>1</bold></highlight>LL, <highlight><bold>1</bold></highlight>HL, <highlight><bold>1</bold></highlight>LH, <highlight><bold>1</bold></highlight>HH) indicated by the decomposition level <highlight><bold>1</bold></highlight> (<highlight><bold>61</bold></highlight>). The two-dimensional wavelet transform is then carried out with respect to the low-frequency component <highlight><bold>1</bold></highlight>LL at this level, so as to separate the subbands (<highlight><bold>2</bold></highlight>LL, <highlight><bold>2</bold></highlight>HL, <highlight><bold>2</bold></highlight>LH, <highlight><bold>2</bold></highlight>HH) indicated by the decomposition level <highlight><bold>2</bold></highlight> (<highlight><bold>62</bold></highlight>). Similarly thereafter, the two-dimensional wavelet transform is also carried out with respect to the low-frequency component <highlight><bold>2</bold></highlight>LL, so as to separate the subbands (<highlight><bold>3</bold></highlight>LL, <highlight><bold>3</bold></highlight>HL, <highlight><bold>3</bold></highlight>LH, <highlight><bold>3</bold></highlight>HH) indicating the decomposition level <highlight><bold>3</bold></highlight> (<highlight><bold>63</bold></highlight>). </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Furthermore, in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the color of the subband which is the target of the coding at each decomposition level is indicated by gray. For example, when the decomposition level is 3, the subbands (<highlight><bold>3</bold></highlight>HL, <highlight><bold>3</bold></highlight>LH, <highlight><bold>3</bold></highlight>HH, <highlight><bold>2</bold></highlight>HL, <highlight><bold>2</bold></highlight>LH, <highlight><bold>2</bold></highlight>HH, <highlight><bold>1</bold></highlight>HL, <highlight><bold>1</bold></highlight>LH, <highlight><bold>1</bold></highlight>HH) indicated by gray are the coding targets, and the <highlight><bold>3</bold></highlight>LL subband is not coded. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Next, the bits which are the coding targets are determined in the specified coding order, and context is generated from the peripheral bits of the target bit in the quantization and inverse quantization section <highlight><bold>52</bold></highlight>. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The wavelet coefficients after the quantization process ended are divided into non-overlapping rectangular regions called precincts, for each of the individual subbands. The precincts are introduced to efficiently utilize the memory upon implementation. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a diagram for explaining one example of the relationship of the precinct and the code block. An original image <highlight><bold>80</bold></highlight> is divided into 4 tiles <highlight><bold>80</bold></highlight><highlight><subscript>t0</subscript></highlight>, <highlight><bold>80</bold></highlight><highlight><subscript>t1</subscript></highlight>, <highlight><bold>80</bold></highlight><highlight><subscript>t2 </subscript></highlight>and <highlight><bold>80</bold></highlight><highlight><subscript>t3 </subscript></highlight>at the decomposition level <highlight><bold>1</bold></highlight>. As shown in <cross-reference target="DRAWINGS">FIG. 5, a</cross-reference> precinct <highlight><bold>80</bold></highlight><highlight><subscript>p4</subscript></highlight>, for example, is made up of 3 spatially matching rectangular regions, and the same holds true for a precinct <highlight><bold>80</bold></highlight><highlight><subscript>p6</subscript></highlight>. Furthermore, each precinct is divided into non-overlapping rectangular blocks called code blocks. In this particular example, each precinct is divided into 12 code blocks <highlight><bold>0</bold></highlight> to <highlight><bold>11</bold></highlight>, and for example, a code block <highlight><bold>80</bold></highlight><highlight><subscript>b1 </subscript></highlight>indicates a code block number <highlight><bold>1</bold></highlight>. The code block becomes a basic unit when carrying out the entropy coding. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The coefficients after the wavelet transform may be quantized and coded as they are. However, in order to improve the coding efficiency, the JPEG2000 decomposes the coefficient values into bit-plane units, and the bit-planes may be ordered for every pixel or code block. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a diagram for explaining the procedure for ordering the bit-planes. In the particular example shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, an original image <highlight><bold>90</bold></highlight> (32&times;32 pixels) is divided into 4 tiles <highlight><bold>90</bold></highlight><highlight><subscript>t0</subscript></highlight>, <highlight><bold>90</bold></highlight><highlight><subscript>t1</subscript></highlight>, <highlight><bold>90</bold></highlight><highlight><subscript>t2 </subscript></highlight>and <highlight><bold>90</bold></highlight><highlight><subscript>t3 </subscript></highlight>each having 16&times;16 pixels. The sizes of the code block and the precinct at the decomposition level <highlight><bold>1</bold></highlight> respectively are 4&times;4 pixels and 8&times;8 pixels. The numbers of the precincts and the code blocks are assigned in a raster sequence. In this particular example, numbers <highlight><bold>0</bold></highlight> to <highlight><bold>3</bold></highlight> are assigned to the precincts, and numbers <highlight><bold>0</bold></highlight> to <highlight><bold>3</bold></highlight> are assigned to the code blocks. A mirroring method is used for the pixel expansion with respect to the outside of the tile boundary, and the wavelet transform is carried out by a independent-function (<highlight><bold>5</bold></highlight>, <highlight><bold>3</bold></highlight>) integer transform filter to obtain the wavelet coefficients of the decomposition level <highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> In addition, <cross-reference target="DRAWINGS">FIG. 6</cross-reference> also generally shows the typical layer structure for the tile <highlight><bold>90</bold></highlight><highlight><subscript>t0 </subscript></highlight>(tile <highlight><bold>0</bold></highlight>) precinct <highlight><bold>90</bold></highlight><highlight><subscript>p3 </subscript></highlight>(precinct <highlight><bold>3</bold></highlight>) and the code block <highlight><bold>90</bold></highlight><highlight><subscript>b3 </subscript></highlight>(code block <highlight><bold>3</bold></highlight>). A code block <highlight><bold>90</bold></highlight><highlight><subscript>w3 </subscript></highlight>after the transform is obtained by subjecting the code block <highlight><bold>90</bold></highlight><highlight><subscript>b3 </subscript></highlight>to the wavelet transform by the independent-function (<highlight><bold>5</bold></highlight>, <highlight><bold>3</bold></highlight>) integer transform filter and obtaining the wavelet coefficient values of the decomposition level <highlight><bold>1</bold></highlight>. The code block <highlight><bold>90</bold></highlight><highlight><subscript>w3 </subscript></highlight>after the transform is vided into the subbands (<highlight><bold>1</bold></highlight>LL, <highlight><bold>1</bold></highlight>HL, <highlight><bold>1</bold></highlight>LH, <highlight><bold>1</bold></highlight>HH), and the wavelet coefficient values are allocated to each of the subbands. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The layer structure is easier to understand when the wavelet coefficient values are viewed from a horizontal direction (bit-plane direction). One layer is made up of an arbitrary number of bit-planes. In this example, each of the layers <highlight><bold>0</bold></highlight>, <highlight><bold>1</bold></highlight>, <highlight><bold>2</bold></highlight> and <highlight><bold>3</bold></highlight> is made up of 3 bit-planes <highlight><bold>1</bold></highlight>, <highlight><bold>3</bold></highlight> and <highlight><bold>1</bold></highlight>. The layer which includes a bit-plane closer to the LSB becomes the quantizing target earlier, and the layer including the bit-plane closer to the MSB becomes the quantizing target later and remains unquantized to the last. The method of discarding the layer closer to the LSB is called truncation, and the quantization rate can finely be controlled by this truncation. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> In the entropy coding section <highlight><bold>53</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the coding with respect to the tiles of each of the components is carried out by probability estimation from the context and target bits. Hence, the coding process is carried out in units of tiles for all of the components of the original image. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Finally, the tag processing section <highlight><bold>54</bold></highlight> carries out a process of connecting all code data from the entropy coding section <highlight><bold>53</bold></highlight> into one code stream and adding a tag to this code stream. <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a simplified diagram showing an example of the code stream structure. As shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, tag information called a header is added to the head of the code stream and to the head of the partial tile forming each tile. A main header <highlight><bold>100</bold></highlight> is added to the head of the code stream, and a tile-part header <highlight><bold>101</bold></highlight> is added to the head of the partial file. The coded data (bit stream <highlight><bold>102</bold></highlight>) of each tile follows the tile-part header <highlight><bold>101</bold></highlight>. An end tag <highlight><bold>103</bold></highlight> is also added to the end of the code stream. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> On the other hand, at the time of the decoding, contrary to that at the time of the coding, the image data is generated from the code stream of each tile of each component, as will now be described briefly in conjunction with <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. In this case, the tag processing section <highlight><bold>54</bold></highlight> interprets the tag information added to the code stream which is input from the outside, decomposes the code stream into the code stream of each tile of each component, and carries out the decoding process for every code stream of each tile of each component. The position of the bit which is the target of the decoding is determined by the order based on the tag information within the code stream, and the quantization and inverse quantization section <highlight><bold>52</bold></highlight> generates the context from the arrangement of the peripheral bits (which have already been decoded) of the target bit position. The entropy coding and decoding section <highlight><bold>53</bold></highlight> carries out a decoding according to the probability estimation from the context and the code stream to generate the target bit, and the target bit is written at the target bit position. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The data decoded in this manner has been spatially divided for every frequency band. Hence, the decoded data is subjected to a two-dimensional wavelet inverse transform in the two-dimensional wavelet transform and inverse transform section <highlight><bold>51</bold></highlight>, so as to restore each tile of each component of the image data. The restored data is transformed into the original colorimetric system data by the color space transform and inverse transform section <highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> In the case of the conventional JPEG compression and expansion system, the tile used in the JPEG2000 may be regarded as a square block having each side made up of 8 pixels and used for the two-dimensional discrete cosine transform. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> The description given heretofore relates to the general still image. However, the technique described above may be extended to the moving (or dynamic) image. In other words, each frame of the moving image may be formed by one still image, and the still images may be displayed at an optimum frame rate for the application so as to obtain the moving image. Video data is obtained by coding the original still image or decoding compressed still image data, continuously, and thus, the compression and expansion operation is basically the same as that for the still image. Such an compression and expansion operation is sometimes also referred to as a motion still image compression and expansion process. This function of carrying out the motion still image compression and expansion process does not exist in the MPEG system video file which is presently used popularly for the moving image. Since this function of carrying out the motion still image compression and expansion process has an advantage in that high-quality still images can be edited in units of frames, there is much attention on this function for business use in broadcasting stations or the like. Hence, this function has the possibility of eventually being used by the general consumers. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> The specification required of the motion still image compression and expansion algorithm but greatly differs from that required of the general still image compression and expansion algorithm is the processing speed (or rate). This is because the processing speed determines the frame rate which greatly affects the quality of the moving image. Because of the need to carry out the process in real-time, the method of realizing the motion still image compression and expansion algorithm is limited to methods having a high dependency on the hardware such as ASIC and DSP. Although it may eventually become possible in the future to realize a sufficiently high speed process by software, it seems necessary until then to wait for further progress in the fields such as semiconductor process and device techniques and software parallel compiler techniques. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> However, according to the conventional techniques, there is a problem in that the tile boundary becomes conspicuous when the compression and expansion process is carried out under a high compression rate condition. The amount of data of the image becomes extremely large when the original image which is the target of the compression and expansion process is spatially large in area or includes large number of gradation levels for each of the color components. The concept of using tiles was developed to simultaneously cope with the demands to improve the high-definition still image described above and the technical problem of increasing amount of image data. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> If the original image having an extremely large amount of data is processed as it is, an extremely large memory region is required to provide a working area for processing the image data and to provide an area for holding the processed result. In addition, the processing time required for the compression or expansion becomes extremely long. In order to avoid such problems, the original image is divided into units called tiles (blocks in the case of the JPEG) which are rectangular regions, and the compression and expansion process is normally carried out for each of such regions. By employing this concept of spatially dividing the original image into tiles, it has become possible to suppress the increase in the required memory capacity and processing time to a practical level. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> However, the division of the original image into tiles has introduced a new problem, namely, the conspicuous tile boundary described above. This phenomenon of conspicuous tile boundary occurs when the compressed image data which is generated under a high compression rate condition by nonreversibly compressing (lossy encoding) the original image is expanded (decoded) back to the original image. Particularly when displaying a high-definition still image having a large area or moving image frequently using a high compression rate, the conspicuous tile boundary subjectively causes considerable effects even if the image quality within the tile is maintained satisfactory. Hence, this conspicuous tile boundary may cause serious consequences in the future with respect to one advantage of the JPEG2000, that is, the reduced image quality deterioration under the high compression rate. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a diagram showing an example of an image which is obtained by compressing the original image to 1/75 by a lossless (no-loss) compression and thereafter expanding the compressed image. <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a diagram showing an example of an error image between the original image and the image after expansion. In <cross-reference target="DRAWINGS">FIGS. 8 and 9</cross-reference>, portions indicated by arrows <highlight><bold>110</bold></highlight><highlight><italic>a </italic></highlight>and <highlight><bold>111</bold></highlight><highlight><italic>a </italic></highlight>correspond to boundaries of the mutually adjacent tiles. It may be seen that a conspicuous discontinuous line exists at these portions <highlight><bold>110</bold></highlight><highlight><italic>a </italic></highlight>and <highlight><bold>111</bold></highlight><highlight><italic>a. </italic></highlight></paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> When the image is compressed at a high compression rate and then expanded, it may be regarded that the two-dimensional wavelet transform process causes the conspicuous tile boundary. In other words, when the lowpass filter and highpass filter in the horizontal direction and the lowpass filter and highpass filter in the vertical direction carry out the respective filtering operations, the region which is the target of the operations extends outside the tile where the image data does not exist. The rate at which the operation target region extends outside the tile increases as the decomposition level increases. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> According to the JPEG2000 format, various filters such as the non-independent-function (<highlight><bold>9</bold></highlight>, <highlight><bold>7</bold></highlight>) floating point transform filter and the independent-function (<highlight><bold>5</bold></highlight>, <highlight><bold>3</bold></highlight>) integer transform filter are recommended for use as the wavelet filter. For the sake of convenience, the detailed operation of the wavelet transform and the reason why the tile boundary appears will now be described for a case where the independent-function (<highlight><bold>5</bold></highlight>, <highlight><bold>3</bold></highlight>) integer transform filter is used as the wavelet filter. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a diagram showing a pixel expansion using the mirroring method. As shown in <cross-reference target="DRAWINGS">FIG. 10, a</cross-reference> case will be considered where characters &ldquo;RICOH&rdquo; are arranged in one row of a target tile <highlight><bold>112</bold></highlight>. It is assumed that each character corresponds to the value of 1 pixel, and the first character &ldquo;R&rdquo; is the kth pixel and the last character &ldquo;H&rdquo; is the mth pixel. When carrying out the wavelet transform with respect to this tile <highlight><bold>112</bold></highlight>, several pixels before the kth pixel and several pixels after the mth pixel become necessary. Hence, it is necessary to extend the pixels outside a tile boundary <highlight><bold>112</bold></highlight><highlight><italic>a </italic></highlight>according to the mirroring method, as shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>. Expanded pixels are denoted by a reference numeral <highlight><bold>113</bold></highlight>. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> In the (<highlight><bold>5</bold></highlight>, <highlight><bold>3</bold></highlight>) independent-function wavelet filter, the values of the odd numbered pixels and the wavelet coefficient values of the even numbered pixels are respectively calculated according to formulas (1) and (2), where C(2i&plus;1), C(2i), . . . are wavelet coefficient values and P(2i&plus;1), P(2i), . . . are pixel values.</paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>C</italic></highlight>(2<highlight><italic>i&plus;</italic></highlight>1)&equals;<highlight><italic>P</italic></highlight>(2<highlight><italic>i&plus;</italic></highlight>1)&minus;&verbar;_(<highlight><italic>P</italic></highlight>(2<highlight><italic>i</italic></highlight>)&plus;<highlight><italic>P</italic></highlight>(2<highlight><italic>i&plus;</italic></highlight>2))/2_&verbar; for <highlight><italic>k&minus;</italic></highlight>1&lE;2<highlight><italic>k&plus;</italic></highlight>1&lt;<highlight><italic>m&plus;</italic></highlight>1&emsp;&emsp;(1)</in-line-formula></paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>C</italic></highlight>(2<highlight><italic>i</italic></highlight>)&equals;<highlight><italic>O</italic></highlight>(2<highlight><italic>i</italic></highlight>)&plus;&verbar;_(<highlight><italic>C</italic></highlight>(2<highlight><italic>I&minus;</italic></highlight>1)&plus;<highlight><italic>C</italic></highlight>(2<highlight><italic>I&plus;</italic></highlight>1)&plus;2)/4_&verbar; for <highlight><italic>k&lE;</italic></highlight>2<highlight><italic>I&lt;m&plus;</italic></highlight>1&emsp;&emsp;(2)</in-line-formula></paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 11A through 11G</cross-reference> are diagrams showing pixel values and wavelet coefficient values when the decomposition level is 1, for the case where a lossless (no-loss) (<highlight><bold>5</bold></highlight>, <highlight><bold>3</bold></highlight>) independent-function wavelet transform is carried out with respect to a square tile made up of 16&times;16 pixels. In <cross-reference target="DRAWINGS">FIG. 11</cross-reference>A, the numerals arranged outside the tile indicate the pixel values extended by the mirroring method. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> A vertical direction highpass filter operation shown in <cross-reference target="DRAWINGS">FIG. 11B and a</cross-reference> vertical direction lowpass filter operation shown in <cross-reference target="DRAWINGS">FIG. 11C</cross-reference> are carried out with respect to the tile having the pixel values shown in <cross-reference target="DRAWINGS">FIG. 11A</cross-reference>. Next, a horizontal direction lowpass filter operation and a horizontal direction highpass filter operation are carried out with respect to the result of the vertical direction lowpass filter operation shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>C, so as to obtain the LL component shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>D and the HL component shown in <cross-reference target="DRAWINGS">FIG. 11E</cross-reference> of the wavelet coefficients at the decomposition level <highlight><bold>1</bold></highlight>. On the other hand, a horizontal direction lowpass filter operation and a horizontal direction highpass filter operation are carried out with respect to the result of the vertical direction highpass filter operation shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>B, so as to obtain the LH component shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>F and the HH component shown in <cross-reference target="DRAWINGS">FIG. 11G</cross-reference> of the wavelet coefficients at the decomposition level <highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 12A through 12C</cross-reference> are diagrams showing examples of pixel values of a square tile made up of 16&times;16 pixels which is obtained by carrying out an inverse transform from the wavelet coefficients derived in <cross-reference target="DRAWINGS">FIGS. 11A through 11G</cross-reference>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12A</cross-reference> shows the coefficient values of each of the subbands of the decomposition level <highlight><bold>1</bold></highlight>, which are obtained by the forward wavelet transform described above in conjunction with <cross-reference target="DRAWINGS">FIGS. 11A through 11G</cross-reference>, and are rearranged by interleaving. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12B</cross-reference> shows the result which is obtained by carrying out the horizontal direction inverse transform filter operation on the odd number pixels, followed by the horizontal direction inverse transform filter operation on the even numbered pixels, with respect to the coefficient values shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>A, and <cross-reference target="DRAWINGS">FIG. 12C</cross-reference> shows the result which is obtained by carrying out the vertical direction inverse transform filter operation on the even number pixels, followed by the vertical direction inverse transform filter operation on the odd numbered pixels. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a diagram showing an example of the comparison result which is obtained by comparing the pixel values of the original image shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>A and the pixel values which are obtained by carrying out the lossless transform and inverse transform by the pixel expansion according to the mirroring method shown in <cross-reference target="DRAWINGS">FIG. 12C</cross-reference>. In the case shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, the error is indicated by a difference between the individual pixels. It may be seen from <cross-reference target="DRAWINGS">FIG. 13</cross-reference> that, the pixel values after the compression and expansion process perfectly match the pixel values of the original image, for all of the tiles. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 14A through 14G</cross-reference> are diagrams showing pixel values and wavelet coefficient values when the decomposition level is 1, for the case where a lossy (<highlight><bold>5</bold></highlight>, <highlight><bold>3</bold></highlight>) independent-function wavelet transform is carried out with respect to a square tile made up of 16&times;16 pixels. In <cross-reference target="DRAWINGS">FIG. 14</cross-reference>A, the numerals arranged outside the tile indicate the pixel values extended by the mirroring method. However, in order to facilitate comparison with <cross-reference target="DRAWINGS">FIG. 11</cross-reference>A, <cross-reference target="DRAWINGS">FIG. 14A</cross-reference> shows the result of the quantization and inverse quantization. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> A vertical direction highpass filter operation shown in <cross-reference target="DRAWINGS">FIG. 14B and a</cross-reference> vertical direction lowpass filter operation shown in <cross-reference target="DRAWINGS">FIG. 14C</cross-reference> are carried out with respect to the tile having the pixel values shown in <cross-reference target="DRAWINGS">FIG. 14A</cross-reference>. Next, a horizontal direction lowpass filter operation and a horizontal direction highpass filter operation are carried out with respect to the result of the vertical direction lowpass filter operation shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>C, so as to obtain the LL component shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>D and the HL component shown in <cross-reference target="DRAWINGS">FIG. 14E</cross-reference> of the wavelet coefficients at the decomposition level <highlight><bold>1</bold></highlight>. On the other hand, a horizontal direction lowpass filter operation and a horizontal direction highpass filter operation are carried out with respect to the result of the vertical direction highpass filter operation shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>B, so as to obtain the LH component shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>F and the HH component shown in <cross-reference target="DRAWINGS">FIG. 14G</cross-reference> of the wavelet coefficients at the decomposition level <highlight><bold>1</bold></highlight>. In this particular example, the quantization step size is 4 (LL component)/32 (HL &amp; HH components)/64 (HH component). The wavelet coefficient values after the quantization are obtained by adding the original positive or negative sign to the floor function of the value obtained by dividing the coefficient of each subband by the quantization step size. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 15A through 15C</cross-reference> are diagrams showing examples of pixel values of a square tile made up of 16&times;16 pixels which is obtained by carrying out an inverse transform from the wavelet coefficients after the quantization and inverse quantization and are derived in <cross-reference target="DRAWINGS">FIGS. 14A through 14G</cross-reference>. The forward and reverse wavelet transforms are similar to those for the lossless independent-function wavelet transform, and a detailed description thereof will be omitted. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a diagram showing an example of the comparison result which is obtained by comparing the pixel values of the original image shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>A and the pixel values which are obtained by carrying out the lossy transform and inverse transform by the pixel expansion according to the mirroring method shown in <cross-reference target="DRAWINGS">FIG. 15C</cross-reference>. In this example, unlike the case where the lossless transform and inverse transform (quantization step size <highlight><bold>1</bold></highlight>) are carried out, errors are generated. Large errors are seen particularly near the tile boundary. This is the cause of the tile boundary becoming visually conspicuous at the low bit rate. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Conventionally, in order to eliminate the problems described above, a proposal has been made to use the image data of the adjacent tiles, that is, to mutually overlap the boundaries of the adjacent tiles (although the adjacent tile boundaries should not overlap according to the baseline system of the JPEG2000). In addition, the tile boundary which becomes visually conspicuous as a result is subjected to a so-called post-filtering process or the like by employing completely different image processing algorithms for each to make the tile boundary less conspicuous. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> Accordingly, it is a general object of the present invention to provide a novel and useful image compression method and apparatus, image expansion method and apparatus, and computer-readable storage medium, in which the problems described above are eliminated. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> Still another object of the present invention, is to provide an image compression method and apparatus, image expansion method and apparatus, and a computer-readable storage medium, which employ a method of eliminating the above described problems different from the conventional methods which overlap the tiles or carry out the post-filtering process, and greatly suppress the tile boundary from becoming conspicuous when the image data which is obtained by subjecting the original image to a lossy compression under a high compression rate condition is decoded back into the original image. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> A further object of the present invention is to provide an image compression apparatus comprising a tile specifying section specifying rectangular tiles having an arbitrary size with respect to an image; an image dividing section dividing the image using the specified rectangular tiles; a bit-plane decomposing section decomposing each of the specified tiles dividing the image into bit-planes; a bit-plane ordering section ordering the bit-planes decomposing each of the specified tiles depending on a coding sequence; a layer forming section forming layers by the ordered bit-planes; and a suppressing section suppressing a quantization rate of a region low relative to other regions of the image. According to the image compression apparatus of the present invention, it is possible to make the tile boundary inconspicuous so that the image quality deterioration is suppressed at the tile boundary, even if the compression rate is high. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> The suppressing section may suppress the quantization rate of a region in a vicinity of a tile boundary, by shifting a bit-plane of the region with respect to a bit-plane of a region separated from the tile boundary and having a relatively higher quantization rate, so as to be included in a higher layer of the layers formed by the ordered bit-planes. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> The suppressing section may select the region in which the quantization rate is suppressed by a region of interest (ROI) process. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> The suppressing section may hold coefficient values of the region in which the quantization rate is suppressed prior to quantization. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> The code blocks may constitute a minimum unit of a collection of bit-planes restructured in a layer different from that of bit-planes in a region which is separated from a tile boundary and has a quantization rate high relative to others, and at least one code block may be non-adjacent to an outer edge of a tile. Alternatively, precincts may constitute a minimum unit of a collection of bit-planes restructured in a layer different from that of bit-planes in a region which is separated from a tile boundary and has a quantization rate high relative to others, and at least one precinct may be non-adjacent to an outer edge of a tile. In either case, the mutual relationship of the code block and the precinct with respect to the tile is prescribed in the coefficient domain and the spatial domain, when the bit-planes are restructured into a different layer. Hence, the distortion at the tile boundary can effectively be suppressed under various conditions, such as the size of the original image (VGA, HDTV, etc.), the performance of the processing apparatus (memory capacity, processing speed, etc.), and the specification required of the application (processing speed, image quality, cost, etc.). </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Another object of the present invention is to provide an image compression method comprising a tile specifying step specifying rectangular tiles having an arbitrary size with respect to an image; an image dividing step dividing the image using the specified rectangular tiles; a bit-plane decomposing step decomposing each of the specified tiles dividing the image into bit-planes; a bit-plane ordering step ordering the bit-planes decomposing each of the specified tiles depending on a coding sequence; a layer forming step forming layers by the ordered bit-planes; and a suppressing step suppressing a quantization rate of a region low relative to other regions of the image. According to the image compression method of the present invention, it is possible to make the tile boundary inconspicuous so that the image quality deterioration is suppressed at the tile boundary, even if the compression rate is high. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> Still another object of the present invention is to provide a computer-readable storage medium which stores a program for causing a computer to carry out an image compression, where the program comprises a tile specifying procedure causing the computer to specify rectangular tiles having an arbitrary size with respect to an image; an image dividing procedure causing the computer to divide the image using the specified rectangular tiles; a bit-plane decomposing procedure causing the computer to decompose each of the specified tiles dividing the image into bit-planes; a bit-plane ordering procedure causing the computer to order the bit-planes decomposing each of the specified tiles depending on a coding sequence; a layer forming procedure causing the computer to form layers by the ordered bit-planes; and a suppressing procedure causing the computer to suppress a quantization rate of a region low relative to other regions of the image. According to the computer-readable storage medium of the present invention, it is possible to make the tile boundary inconspicuous so that the image quality deterioration is suppressed at the tile boundary, even if the compression rate is high. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> A further object of the present invention is to provide an image expansion apparatus for expanding compressed image data obtained by specifying rectangular tiles having an arbitrary size with respect to an image, dividing the image using the specified rectangular tiles, decomposing each of the specified tiles dividing the image into bit-planes, ordering the bit-planes decomposing each of the specified tiles depending on a coding sequence, forming layers by the ordered bit-planes, and a suppressing step suppressing a quantization rate of a region low relative to other regions of the image, comprising an input section receiving the compressed image data; and an expanding section expanding the compressed image data based on information related to the specified tiles. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> Another object of the present invention is to provide an image expansion method for expanding compressed image data obtained by specifying rectangular tiles having an arbitrary size with respect to an image, dividing the image using the specified rectangular tiles, decomposing each of the specified tiles dividing the image into bit-planes, ordering the bit-planes decomposing each of the specified tiles depending on a coding sequence, forming layers by the ordered bit-planes, and a suppressing step suppressing a quantization rate of a region low relative to other regions of the image, comprising an input step receiving the compressed image data; and an expanding step expanding the compressed image data based on information related to the specified tiles. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> Still another object of the present invention is to provide a computer-readable storage medium which stores a program for causing a computer to carry out an image expansion with respect to compressed image data which is obtained by specifying rectangular tiles having an arbitrary size with respect to an image, dividing the image using the specified rectangular tiles, decomposing each of the specified tiles dividing the image into bit-planes, ordering the bit-planes decomposing each of the specified tiles depending on a coding sequence, forming layers by the ordered bit-planes, and a suppressing step suppressing a quantization rate of a region low relative to other regions of the image, where the program comprises an input procedure causing the computer to receive the compressed image data; and an expanding procedure causing the computer to expand the compressed image data based on information related to the specified tiles. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> A further object of the present invention is to provide an image compression apparatus comprising means for dividing an original image into a plurality of tiles; means for interpolating data in a periphery of each of the tiles and carrying out a wavelet transform; means for quantizing transformed wavelet coefficient values to compress image data of the original image; and reducing means for reducing a quantization rate of the wavelet coefficient values in a region in a vicinity of a tile boundary to a value lower than that of other regions. According to the image compression apparatus of the present invention, it is possible to eliminate the discontinuity at the tile boundary. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> Another object of the present invention is to provide an image compression method comprising the steps of dividing an original image into a plurality of tiles; interpolating data in a periphery of each of the tiles and carrying out a wavelet transform; quantizing transformed wavelet coefficient values to compress image data of the original image; and reducing a quantization rate of the wavelet coefficient values in a region in a vicinity of a tile boundary to a value lower than that of other regions. According to the image compression method of the present invention, it is possible to eliminate the discontinuity at the tile boundary. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> Still another object of the present invention is to provide a computer-readable storage medium which stores a program for causing a computer to carry out an image compression, where the program comprises a procedure causing the computer to divide an original image into a plurality of tiles; a procedure causing the computer to interpolate data in a periphery of each of the tiles and carrying out a wavelet transform; a procedure causing the computer to quantize transformed wavelet coefficient values to compress image data of the original image; and a procedure causing the computer to reduce a quantization rate of the wavelet coefficient values in a region in a vicinity of a tile boundary to a value lower than that of other regions. According to the computer-readable storage medium of the present invention, it is possible to eliminate the discontinuity at the tile boundary. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> Other objects and further features of the present invention will be apparent from the following detailed description when read in conjunction with the accompanying drawings.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a system block diagram for explaining the operating principle of the JPEG algorithm; </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a system block diagram for explaining the operating principle of the JPEG2000 algorithm; </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a diagram showing an example of a subband at each decomposition level for a case where the decomposition level is 3; </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a diagram showing an example of each component of a color image divided into tiles; </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a diagram for explaining one example of the relationship of the precinct and the code block; </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a diagram for explaining the procedure for ordering the bit-planes; </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a simplified diagram showing an example of the code stream structure; </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a diagram showing an example of an image which is obtained by compressing the original image to 1/75 by a lossless (no-loss) compression and thereafter expanding the compressed image; </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a diagram showing an example of an error image between the original image and the image after expansion; </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a diagram showing a pixel expansion using the mirroring method; </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 11A through 11G</cross-reference> are diagrams showing pixel values and wavelet coefficient values when the decomposition level is 1, for the case where a lossless (no-loss) (<highlight><bold>5</bold></highlight>, <highlight><bold>3</bold></highlight>) independent-function wavelet transform is carried out with respect to a square tile made up of 16&times;16 pixels; </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 12A through 12C</cross-reference> are diagrams showing examples of pixel values of a square tile made up of 16&times;16 pixels which is obtained by carrying out an inverse transform from the wavelet coefficients derived in <cross-reference target="DRAWINGS">FIGS. 11A through 11G</cross-reference>; </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a diagram showing an example of the comparison result which is obtained by comparing the pixel values of the original image shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>A and the pixel values which are obtained by carrying out the lossless transform and inverse transform by the pixel expansion according to the mirroring method shown in <cross-reference target="DRAWINGS">FIG. 12C</cross-reference>; </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 14A through 14G</cross-reference> are diagrams showing pixel values and wavelet coefficient values when the decomposition level is 1, for the case where a lossy (<highlight><bold>5</bold></highlight>, <highlight><bold>3</bold></highlight>) independent-function wavelet transform is carried out with respect to a square tile made up of 16&times;16 pixels; </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 15A through 15C</cross-reference> are diagrams showing examples of pixel values of a square tile made up of 16&times;16 pixels which is obtained by carrying out an inverse transform from the wavelet coefficients after the quantization and inverse quantization and are derived in <cross-reference target="DRAWINGS">FIGS. 14A through 14G</cross-reference>; </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a diagram showing an example of the comparison result which is obtained by comparing the pixel values of the original image shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>A and the pixel values which are obtained by carrying out the lossy transform and inverse transform by the pixel expansion according to the mirroring method shown in <cross-reference target="DRAWINGS">FIG. 15C</cross-reference>; </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a system block diagram showing a first embodiment of an image compression and/or expansion apparatus according to the present invention; </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a diagram for explaining the wavelet transform with respect to the original image made up of 4 tiles; </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a diagram for explaining the wavelet transform with respect to the original image made up of 4 tiles; </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 20A through 20D</cross-reference> are diagrams showing the relationship of the precinct of each subband and the code block for the decomposition level <highlight><bold>1</bold></highlight>, with respect to the tiles shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>; </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 21A and 21B</cross-reference> are diagrams showing states before and after layer restructuring applied with the present invention; </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a diagram showing a state after the layer restructuring for the decomposition level <highlight><bold>2</bold></highlight>; </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> is a diagram showing another embodiment of the layer restructuring; </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> is a diagram showing an application of the present invention to the still image; </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is a diagram showing an application of the present invention to the moving image; </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> is a diagram showing a result of restructuring which is made so that all code blocks included in the precinct become included in a higher layer; </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 27</cross-reference> is a diagram showing an improved geometrical relationship of the block codes with respect to the tile; </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28</cross-reference> is a diagram showing an improved geometrical relationship of the precincts with respect to the tile; </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 29A and 29B</cross-reference> are diagrams showing an embodiment of the ROI process; </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is a diagram showing the wavelet coefficient values of the pixels of <highlight><bold>1</bold></highlight>HL, <highlight><bold>1</bold></highlight>LH and <highlight><bold>1</bold></highlight>HH adjacent to the tile boundary and prior to the quantization, having the prescribed format; </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 31</cross-reference> is a flow chart for explaining an embodiment of the image compression method according to the present invention; </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 32</cross-reference> is a flow chart for explaining an embodiment of the image expansion method according to the present invention; </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33</cross-reference> is a system block diagram for explaining a fourth embodiment of the image compression apparatus according to the present invention; </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 34</cross-reference> is a flow chart for explaining the operation of the fourth embodiment; </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 35</cross-reference> is a flow chart for explaining the operation of the fourth embodiment; </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 36</cross-reference> is a diagram showing a processed result obtained by the fourth embodiment; and </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 37</cross-reference> is a diagram for explaining a region applied with the fourth embodiment.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0110" lvl="7"><number>&lsqb;0110&rsqb;</number> &lsqb;First Embodiment&rsqb;</paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a system block diagram showing a first embodiment of an image compression and/or expansion apparatus according to the present invention. The image compression and/or expansion apparatus shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference> includes a color space transform and inverse transform section <highlight><bold>10</bold></highlight>, a first component <highlight><bold>11</bold></highlight>, a second component <highlight><bold>12</bold></highlight>, a third component <highlight><bold>13</bold></highlight>, and a code stream processing section <highlight><bold>14</bold></highlight>. The first component <highlight><bold>11</bold></highlight> includes an interpolation method selector <highlight><bold>11</bold></highlight><highlight><italic>a</italic></highlight>, a wavelet transform and inverse transform section <highlight><bold>11</bold></highlight><highlight><italic>b</italic></highlight>, a quantization rate selector <highlight><bold>11</bold></highlight><highlight><italic>c</italic></highlight>, a quantization and inverse quantization section <highlight><bold>11</bold></highlight><highlight><italic>d</italic></highlight>, and an entropy coding and decoding section <highlight><bold>11</bold></highlight><highlight><italic>e</italic></highlight>. Similarly, the second component <highlight><bold>12</bold></highlight> includes an interpolation method selector <highlight><bold>12</bold></highlight><highlight><italic>a</italic></highlight>, a wavelet transform and inverse transform section <highlight><bold>12</bold></highlight><highlight><italic>b</italic></highlight>, a quantization rate selector <highlight><bold>12</bold></highlight><highlight><italic>c</italic></highlight>, a quantization and inverse quantization section <highlight><bold>12</bold></highlight><highlight><italic>d</italic></highlight>, and an entropy coding and decoding section <highlight><bold>12</bold></highlight><highlight><italic>e</italic></highlight>. In addition, the third component <highlight><bold>13</bold></highlight> includes an interpolation method selector <highlight><bold>13</bold></highlight><highlight><italic>a</italic></highlight>, a wavelet transform and inverse transform section <highlight><bold>13</bold></highlight><highlight><italic>b</italic></highlight>, a quantization rate selector <highlight><bold>13</bold></highlight><highlight><italic>c</italic></highlight>, a quantization and inverse quantization section <highlight><bold>13</bold></highlight><highlight><italic>d</italic></highlight>, and an entropy coding and decoding section <highlight><bold>13</bold></highlight><highlight><italic>e. </italic></highlight></paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> In the image compression and/or expansion apparatus shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, only one transform and inverse transform section is shown for each processing block so as to cope with the image compression and expansion, but it is of course possible to provide a transform section and an inverse transform section separately from each other. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> The image compression and/or expansion apparatus shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is intended for processing a still image. The processes of the first, second and third components <highlight><bold>11</bold></highlight>, <highlight><bold>12</bold></highlight> and <highlight><bold>13</bold></highlight> are carried out in parallel. The color space in this case is RGB or YUV. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> A description will be given of the first component <highlight><bold>11</bold></highlight> for the case where the compression is carried out. In the interpolation method selector <highlight><bold>11</bold></highlight><highlight><italic>a</italic></highlight>, the interpolation method of obtaining the wavelet coefficient values and pixel values extended outside the tile boundary. The interpolation method may be selected from the method using the mirroring method, centrosymmetric interpolation method, method using the actual adjacent tile pixel values or the like. It is assumed for the sake of convenience that the mirroring method is used in this particular case. Next, the wavelet transform and inverse transform section <highlight><bold>11</bold></highlight><highlight><italic>b </italic></highlight>carries out a wavelet transform with respect to the original image. The quantization rate selector <highlight><bold>11</bold></highlight><highlight><italic>c </italic></highlight>creates a new layer with respect to the bit-plane of the code block adjacent to the tile boundary, of the wavelet coefficient values obtained by the mirroring method. More particularly, more younger layer numbers such as layers <highlight><bold>0</bold></highlight>, <highlight><bold>1</bold></highlight>, <highlight><bold>2</bold></highlight>, . . . are reassigned to the bit-plane, so that the data will not be discarded even when the truncation is made. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 18 and 19</cross-reference> are diagrams for explaining the wavelet transform with respect to the original image made up of 4 tiles. In <cross-reference target="DRAWINGS">FIG. 18</cross-reference>, an original image <highlight><bold>20</bold></highlight> is divided into 4 tiles. <highlight><bold>20</bold></highlight><highlight><subscript>t0 </subscript></highlight>indicates the tile <highlight><bold>0</bold></highlight>, <highlight><bold>20</bold></highlight><highlight><subscript>t1 </subscript></highlight>indicates the tile <highlight><bold>1</bold></highlight>, <highlight><bold>20</bold></highlight><highlight><subscript>t2 </subscript></highlight>indicates the tile <highlight><bold>2</bold></highlight>, and <highlight><bold>20</bold></highlight><highlight><subscript>t3 </subscript></highlight>indicates the tile <highlight><bold>3</bold></highlight>. For example, the tile <highlight><bold>20</bold></highlight><highlight><subscript>t3 </subscript></highlight>shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference> includes a precinct <highlight><bold>20</bold></highlight><highlight><subscript>p1 </subscript></highlight>indicating the 1st precinct of each of <highlight><bold>1</bold></highlight>HL, <highlight><bold>1</bold></highlight>LH and <highlight><bold>1</bold></highlight>HH, and the precinct <highlight><bold>20</bold></highlight><highlight><subscript>p1 </subscript></highlight>includes a code block <highlight><bold>20</bold></highlight><highlight><subscript>b9 </subscript></highlight>indicating a 9th code block. In <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, an original image <highlight><bold>21</bold></highlight> is divided into 4 tiles. <highlight><bold>21</bold></highlight><highlight><subscript>t0 </subscript></highlight>indicates the tile <highlight><bold>0</bold></highlight>, <highlight><bold>21</bold></highlight><highlight><subscript>t1 </subscript></highlight>indicates the tile <highlight><bold>1</bold></highlight>, <highlight><bold>21</bold></highlight><highlight><subscript>t2 </subscript></highlight>indicates the tile <highlight><bold>2</bold></highlight>, and <highlight><bold>21</bold></highlight><highlight><subscript>t3 </subscript></highlight>indicates the tile <highlight><bold>3</bold></highlight>. For example, the tile <highlight><bold>21</bold></highlight><highlight><subscript>t3 </subscript></highlight>shown in <cross-reference target="DRAWINGS">FIG. 19</cross-reference> includes a precinct <highlight><bold>21</bold></highlight><highlight><subscript>p8 </subscript></highlight>indicating the 8th precinct of each of <highlight><bold>2</bold></highlight>HL, <highlight><bold>2</bold></highlight>LH and <highlight><bold>2</bold></highlight>HH, and the precinct <highlight><bold>21</bold></highlight><highlight><subscript>p8 </subscript></highlight>includes a code block <highlight><bold>21</bold></highlight><highlight><subscript>b9 </subscript></highlight>indicating a 9th code block. Although the top left ends of the tile <highlight><bold>0</bold></highlight> and the original image match in this particular case, it is of course possible to have an offset therebetween. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> shows the relationship between the precinct and the code block for the decomposition level <highlight><bold>1</bold></highlight>, and <cross-reference target="DRAWINGS">FIG. 19</cross-reference> shows the relationship between the precinct and the code block for the decomposition level <highlight><bold>2</bold></highlight>. In this case, the number of tiles is 4, the number of precincts is 9, and the number of code blocks is 12. The size of the precinct and the code block can be specified for each decomposition. For the sake of convenience, the number of precincts and the number of code blocks for the decomposition level <highlight><bold>1</bold></highlight> are the same as those for the decomposition level <highlight><bold>2</bold></highlight>. In <cross-reference target="DRAWINGS">FIGS. 18 and 19</cross-reference>, shaded portions indicate the code blocks of each subband of HL, LH and HH adjacent to the tile boundary, which become the target of the layer restructuring which will be described later. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 20A through 20D</cross-reference> are diagrams showing the relationship of the precinct of each subband and the code block for the decomposition level <highlight><bold>1</bold></highlight>, with respect to the tiles <highlight><bold>20</bold></highlight><highlight><subscript>t0 </subscript></highlight>through <highlight><bold>20</bold></highlight><highlight><subscript>t3 </subscript></highlight>shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>. <cross-reference target="DRAWINGS">FIG. 20A</cross-reference> shows the relationship with respect to the tile <highlight><bold>20</bold></highlight><highlight><subscript>t0</subscript></highlight>, <cross-reference target="DRAWINGS">FIG. 20B</cross-reference> shows the relationship with respect to the tile <highlight><bold>20</bold></highlight><highlight><subscript>t1</subscript></highlight>, <cross-reference target="DRAWINGS">FIG. 20C</cross-reference> shows the relationship with respect to the tile <highlight><bold>20</bold></highlight><highlight><subscript>t2</subscript></highlight>, and <cross-reference target="DRAWINGS">FIG. 20D</cross-reference> shows the relationship with respect to the tile <highlight><bold>20</bold></highlight><highlight><subscript>t3</subscript></highlight>. In <cross-reference target="DRAWINGS">FIGS. 20A through 20D</cross-reference>, the ordinate indicates the precinct number, and the abscissa indicates the code block number. Shaded portions indicate the code blocks adjacent to the tile boundary. For example, in the tile <highlight><bold>20</bold></highlight><highlight><subscript>t0 </subscript></highlight>shown in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>A, the precinct number <highlight><bold>7</bold></highlight> indicates that the 2nd, 3rd, 6th, 7th, 10th and 11th code blocks are adjacent to the tile boundary, and the precinct number <highlight><bold>4</bold></highlight> is located at a position non-adjacent to the tile outer edge portion. Hence, it may be seen that in each tile, the code blocks included in the precinct number <highlight><bold>4</bold></highlight> are non-adjacent to the tile boundary. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 21A and 21B</cross-reference> are diagrams showing states before and after the layer restructuring applied with the present invention. <cross-reference target="DRAWINGS">FIG. 21B</cross-reference> shows the layer before the layer restructuring, and <cross-reference target="DRAWINGS">FIG. 21A</cross-reference> shows the layer after the layer restructuring. Before the layer restructuring, the same layers are formed in each of <highlight><bold>2</bold></highlight>HL and <highlight><bold>2</bold></highlight>HL, <highlight><bold>2</bold></highlight>HH, <highlight><bold>1</bold></highlight>HL and <highlight><bold>1</bold></highlight>LH, and <highlight><bold>1</bold></highlight>HH as shown in <cross-reference target="DRAWINGS">FIG. 21B</cross-reference>. Similarly to the case shown in <cross-reference target="DRAWINGS">FIG. 20</cross-reference>A, the decomposition level <highlight><bold>1</bold></highlight>, the tile <highlight><bold>20</bold></highlight><highlight><subscript>t0 </subscript></highlight>(tile <highlight><bold>0</bold></highlight>), and the precinct number <highlight><bold>7</bold></highlight> will be considered in this case. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> The ordinate in <cross-reference target="DRAWINGS">FIGS. 21A and 21B</cross-reference> indicates the 12-bit wavelet coefficients, and MSB is assigned to the most significant layer while the LSB is assigned to the least significant layer. The abscissa indicates the code block numbers arranged in the order of the subbands starting from <highlight><bold>1</bold></highlight>HH (made up of code block numbers <highlight><bold>8</bold></highlight>, <highlight><bold>9</bold></highlight>, <highlight><bold>10</bold></highlight> and <highlight><bold>11</bold></highlight>) from the right, <highlight><bold>1</bold></highlight>LH (made up of code block numbers <highlight><bold>4</bold></highlight>, <highlight><bold>5</bold></highlight>, <highlight><bold>6</bold></highlight> and <highlight><bold>7</bold></highlight>), <highlight><bold>1</bold></highlight>HL (made up of code block numbers <highlight><bold>0</bold></highlight>, <highlight><bold>1</bold></highlight>, <highlight><bold>2</bold></highlight> and <highlight><bold>3</bold></highlight>), <highlight><bold>2</bold></highlight>HH, <highlight><bold>2</bold></highlight>LH and <highlight><bold>2</bold></highlight>HL. The layers are formed by the bit-planes of each of the code blocks, and the layers <highlight><bold>0</bold></highlight>, <highlight><bold>1</bold></highlight>, . . . , <highlight><bold>9</bold></highlight> are formed in sequence from the most significant layer. More important data to be stored (data which are not discarded) are included for higher layers and for higher decomposition levels. As shown in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>B, the layers of the bit-planes are formed in a stepped shape. Hence, if the layer <highlight><bold>9</bold></highlight> is to be discarded by truncation as a layer including the bit-plane close to the LSB, for example, 4 bits are discarded in the code block of <highlight><bold>1</bold></highlight>HH and 1 bit is discarded in the code block of <highlight><bold>2</bold></highlight>HL. In <cross-reference target="DRAWINGS">FIG. 21A, a</cross-reference> white line between the layer <highlight><bold>9</bold></highlight> and the layer <highlight><bold>8</bold></highlight> shows for the sake of convenience the boundary with the layer <highlight><bold>9</bold></highlight> discarded upon truncation. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 21</cross-reference>B, the code blocks having the code block numbers <highlight><bold>2</bold></highlight>, <highlight><bold>3</bold></highlight>, <highlight><bold>6</bold></highlight>, <highlight><bold>7</bold></highlight>, <highlight><bold>10</bold></highlight> and <highlight><bold>11</bold></highlight> which are indicated in gray are adjacent to the tile boundary. Hence, after the layer restructuring, the bit-planes of these code blocks are shifted to a higher layer with respect to the bit-planes of the other code blocks having the code block numbers <highlight><bold>0</bold></highlight>, <highlight><bold>1</bold></highlight>, <highlight><bold>4</bold></highlight>, <highlight><bold>5</bold></highlight>, <highlight><bold>8</bold></highlight> and <highlight><bold>9</bold></highlight> which are non-adjacent to the tile boundary, so as to be included in the layer <highlight><bold>0</bold></highlight>, for example. This means that, when the wavelet coefficient values are discarded by the truncation, the quantization rate is suppressed to &frac14; compared to the portions non-adjacent to the tile boundary. In other words, with respect to the code blocks of <highlight><bold>1</bold></highlight>HH having the code block numbers <highlight><bold>10</bold></highlight> and <highlight><bold>11</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>B, for example, when the layer <highlight><bold>9</bold></highlight> is discarded, the quantization rate amounts to 4 bits and is 16. But after the layer restructuring, with respect to the code blocks of <highlight><bold>1</bold></highlight>HH having the code block numbers <highlight><bold>10</bold></highlight> and <highlight><bold>11</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>A, when the layer <highlight><bold>9</bold></highlight> is discarded, the quantization rate amounts to 2 bits and is 4, thereby resulting in the suppression of the quantization rate to &frac14;. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> The layer to which the bit-planes of the regions in the vicinity of the tile boundary are shifted is not limited to the layer <highlight><bold>0</bold></highlight>, and the bit-planes may be shifted to be included in the higher layers such as the layer <highlight><bold>1</bold></highlight> or the layer <highlight><bold>2</bold></highlight>. In any case, the bit-planes are shifted so as to be included in a higher layer, so that the data will not be discarded upon truncation. After determining the quantization rate at the tile boundary vicinity, the wavelet coefficients are quantized by the quantization and inverse quantization section <highlight><bold>11</bold></highlight><highlight><italic>d</italic></highlight>, <highlight><bold>12</bold></highlight><highlight><italic>d </italic></highlight>and <highlight><bold>13</bold></highlight><highlight><italic>d</italic></highlight>, and then encoded in the entropy coding and decoding sections <highlight><bold>11</bold></highlight><highlight><italic>e</italic></highlight>, <highlight><bold>12</bold></highlight><highlight><italic>e </italic></highlight>and <highlight><bold>13</bold></highlight><highlight><italic>e</italic></highlight>. Finally, the code stream is generated by the code stream processing section <highlight><bold>14</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> In the particular case described above, a plurality of layers are processed. However, it is possible to carry out the processing by regarding a plurality of layers as a single layer. For example, when the layers <highlight><bold>0</bold></highlight> through <highlight><bold>8</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 21B</cross-reference> are regarded as a single layer, the bit-planes which are adjacent to the tile boundary are shifted with respect to the bit-planes which are separated from the tile boundary so as to be included in the bit-planes of the higher layer side, so that the bit-planes on the lower layer side (the bit-planes of the layers <highlight><bold>7</bold></highlight> and <highlight><bold>8</bold></highlight> in this case) become added with respect to the original layer, after the layer restructuring shown in <cross-reference target="DRAWINGS">FIG. 21A</cross-reference>. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> The layer restructuring is made for the decomposition level <highlight><bold>1</bold></highlight> in this embodiment, but may of course be similarly made for the decomposition level <highlight><bold>2</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a diagram showing a state after the layer restructuring for the decomposition level <highlight><bold>2</bold></highlight>. Similarly to the case shown in <cross-reference target="DRAWINGS">FIG. 21</cross-reference>A, the tile <highlight><bold>20</bold></highlight><highlight><subscript>t0 </subscript></highlight>(tile <highlight><bold>0</bold></highlight>) and the precinct number <highlight><bold>7</bold></highlight> will be considered in this case. In this case, the code blocks having the code block numbers <highlight><bold>2</bold></highlight>, <highlight><bold>3</bold></highlight>, <highlight><bold>6</bold></highlight>, <highlight><bold>7</bold></highlight>, <highlight><bold>10</bold></highlight> and <highlight><bold>11</bold></highlight> and adjacent to the tile boundary are shifted so as to be included in a layer one level higher. In other words, compared to the portions non-adjacent to the tile boundary, the quantization rate is suppressed to &frac12; at the portions adjacent to the tile boundary. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> is a diagram showing another embodiment of the layer restructuring. In this embodiment of the layer restructuring, the layer restructuring is made only when the wavelet coefficient values in the tile boundary vicinity obtained by the interpolation method are larger than a predetermined value which is specified in advance. This is based on experience since the wavelet coefficient values in the tile boundary vicinity become larger when a large distortion occurs at the tile boundary. Although the code blocks <highlight><bold>2</bold></highlight> and <highlight><bold>3</bold></highlight> of the <highlight><bold>1</bold></highlight>HL subband are adjacent to the tile boundary, the wavelet coefficient values are smaller than the predetermined values, and thus, the layer restructuring is not made in the <highlight><bold>1</bold></highlight>HL subband. On the other hand, for both the subbands <highlight><bold>1</bold></highlight>LH and <highlight><bold>1</bold></highlight>HH, the layer restructuring is made because the wavelet coefficient values are larger than the predetermined value. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> Furthermore, when the wavelet coefficient values in the tile boundary vicinity obtained by the interpolation method are larger than the predetermined value, it may be regarded that the distortion at the tile boundary becomes larger as the difference between the wavelet coefficient values and the predetermined value becomes larger, in correspondence with the magnitude of the difference. Accordingly, it is easier to control the quantization rate by determining the shift amount of the bit-planes. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> is a diagram showing an application of the present invention to the still image. <cross-reference target="DRAWINGS">FIG. 24</cross-reference> shows a first component <highlight><bold>22</bold></highlight>, a second component <highlight><bold>23</bold></highlight> and a third component <highlight><bold>24</bold></highlight>. For example, the first component <highlight><bold>22</bold></highlight> includes a tile boundary <highlight><bold>22</bold></highlight><highlight><italic>a</italic></highlight>, a suppressed portion <highlight><bold>22</bold></highlight><highlight><italic>b </italic></highlight>where the quantization rate is suppressed, and an uncontrolled portion <highlight><bold>23</bold></highlight><highlight><italic>b </italic></highlight>where the quantization rate was not controlled. <cross-reference target="DRAWINGS">FIG. 24</cross-reference> schematically shows a state where the quantization rate is suppressed at the tile boundary vicinity. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is a diagram showing an application of the present invention to the moving image. <cross-reference target="DRAWINGS">FIG. 25</cross-reference> shows a state where the quantization rate is controlled at the tile boundary vicinity for each of frames <highlight><bold>25</bold></highlight>, <highlight><bold>26</bold></highlight> and <highlight><bold>27</bold></highlight> (frames <highlight><bold>1</bold></highlight>, <highlight><bold>2</bold></highlight> and <highlight><bold>3</bold></highlight>). </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> In <cross-reference target="DRAWINGS">FIGS. 24 and 25</cross-reference>, black portions indicate the regions where the quantization rate is suppressed to a low rate. On the other hand, non-black portions indicate regions where the quantization rate is not suppressed even though at the tile boundary vicinity, because the wavelet coefficient values at the tile boundary vicinity is smaller than the predetermined value as described above in conjunction with <cross-reference target="DRAWINGS">FIG. 23</cross-reference> and there was no need for the layer restructuring. In other words, the tile boundary was originally inconspicuous at these non-black portions. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> In the embodiment described heretofore, the layer restructuring is finely made in units of code blocks. In this case, the quantization rate may be set to an optimum value which minimizes the distortion at the tile boundary. On the other hand, when the original image size is large, the processing time may become long. In a case where the high-speed processing is a priority as in the case of displaying the moving image, it is conceivable to make the layer restructuring in units of precincts. Although an optimum quantization rate may not be selected in this case, there is an advantage in that the processing can be carried out in real-time. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> is a diagram showing a result of restructuring which is made so that all code blocks included in the precinct become included in a higher layer. <cross-reference target="DRAWINGS">FIG. 26</cross-reference> shows a case where, if a predetermined number of blocks within the precinct, such as one-half or more code blocks, are adjacent to the tile boundary, the restructuring is made so that all of the code blocks included in this precinct become included in a higher layer. In this particular case, entire subbands of <highlight><bold>1</bold></highlight>HL, <highlight><bold>1</bold></highlight>LH and <highlight><bold>1</bold></highlight>HH are uniformly absorbed by the higher layer. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> When the quantization rate at the tile boundary vicinity is reduced in order to reduce the distortion at the tile boundary, the compression rate of the image is consequently reduced as a result. Hence, in order to minimize the undesirable reduction in the compression rate, it is conceivable to improve the geometrical relationship of the precincts or the code blocks with respect to the tile. In other words, if a precinct or code block non-adjacent to the tile boundary is created, the quantization rate at this precinct or code block may be remain high compared to that at the tile boundary, which would in turn suppress reduction in the compression rate of the image as a whole. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 27 and 28</cross-reference> are diagrams respectively showing improved geometrical relationships of the block codes and the precincts with respect to the tile. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 27, a</cross-reference> tile <highlight><bold>28</bold></highlight><highlight><subscript>t </subscript></highlight>is divided into precincts <highlight><bold>28</bold></highlight><highlight><subscript>p</subscript></highlight>, and precinct <highlight><bold>28</bold></highlight><highlight><subscript>p </subscript></highlight>is divided into code blocks <highlight><bold>28</bold></highlight><highlight><subscript>b</subscript></highlight>. A 4th code block <highlight><bold>28</bold></highlight><highlight><subscript>b4 </subscript></highlight>is non-adjacent to the tile outer edge, and the quantization rate at this 4th code block <highlight><bold>28</bold></highlight><highlight><subscript>b4 </subscript></highlight>can be made higher than that at the tile boundary. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 28, a</cross-reference> tile <highlight><bold>29</bold></highlight><highlight><subscript>t </subscript></highlight>is divided into precincts <highlight><bold>29</bold></highlight><highlight><subscript>p</subscript></highlight>, and a 4th precinct <highlight><bold>29</bold></highlight><highlight><subscript>p4 </subscript></highlight>is non-adjacent to the tile outer edge, and the quantization rate at this 4th precinct <highlight><bold>29</bold></highlight><highlight><subscript>p4 </subscript></highlight>can be made higher than that at the tile boundary. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> The effect of compression differs depending on the number of subbands and the decomposition level of the bit-plane which is restructured to a different layer. For example, if the decomposition level is 1, it is possible to reduce the processing time, but the image quality becomes slightly rough. If the decomposition level is 2 or more, the image quality further improves, but the processing time increases. The same holds true for the number of subbands which are divided. Hence, these parameters may be appropriately set to suit the environment and purpose of employing the image compression and/or expansion apparatus. </paragraph>
<paragraph id="P-0136" lvl="7"><number>&lsqb;0136&rsqb;</number> &lsqb;Second Embodiment&rsqb;</paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> The first embodiment described above uses the layer restructuring. However, it is possible to improve the state of distortion at the tile boundary by controlling the quantization rate at the tile boundary vicinity depending on a region of interest (ROI) process, as done in this second embodiment. According to the extended specifications of the JPEG2000 (which is not yet definite in June 2001), the prospect is that it will be able to uniformly reduce the quantization rate for arbitrary shapes. More particularly, one ROI bit-plane is prepared separately from the wavelet coefficient values, and the bits of this ROI bit-plane are set to 1 with respect to the pixel positions which are to be processed as the ROI, while the bits of the ROI bit-plane are reset to 0 with respect to other pixel positions, so that the quantization rate can easily be controlled. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 29A and 29B</cross-reference> are diagrams showing an embodiment of the ROI process. In this case, an original image <highlight><bold>30</bold></highlight> is divided into 4 tiles <highlight><bold>30</bold></highlight><highlight><subscript>t0</subscript></highlight>, <highlight><bold>30</bold></highlight><highlight><subscript>t1</subscript></highlight>, <highlight><bold>30</bold></highlight><highlight><subscript>t2 </subscript></highlight>and <highlight><bold>30</bold></highlight><highlight><subscript>t3</subscript></highlight>, and a cross-shaped ROI <highlight><bold>31</bold></highlight> having a predetermined width along each tile boundary is specified. In <cross-reference target="DRAWINGS">FIG. 29</cross-reference>A, the ROI <highlight><bold>31</bold></highlight> is specified with a width of 8 pixels. The wavelet coefficient values generated from the pixel values existing in this cross-shaped region are reduced of the quantization rate based on a predetermined value which is specified in advance. As a result, the distortion at the tile boundary is improved (reduced). In addition, <cross-reference target="DRAWINGS">FIG. 29B</cross-reference> shows the ROI <highlight><bold>31</bold></highlight> which is set with respect to the tile boundary region on the inner side of the image belong to within 1 frame. </paragraph>
<paragraph id="P-0139" lvl="7"><number>&lsqb;0139&rsqb;</number> &lsqb;Third Embodiment&rsqb;</paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> As another method, it is conceivable to hold the wavelet coefficient values at the tile boundary vicinity before the quantization separately from the wavelet coefficient values after the quantization. In JPEG2000, a COM marker is prescribed for inserting a comment at a predetermined position in the code. An arbitrary number of such COM markers may be inserted within the main header or the tile-part header, and a maximum of 65535 bytes of data can be inserted succeeding the COM marker. Hence, in this third embodiment, the COM marker is inserted in the tile-part header, and the wavelet coefficient values of the pixels of <highlight><bold>1</bold></highlight>HL, <highlight><bold>1</bold></highlight>LH and <highlight><bold>1</bold></highlight>HH adjacent to the tile boundary and prior to the quantization are inserted with a prescribed format succeeding the COM marker. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is a diagram showing the wavelet coefficient values of the pixels of <highlight><bold>1</bold></highlight>HL, <highlight><bold>1</bold></highlight>LH and <highlight><bold>1</bold></highlight>HH adjacent to the tile boundary and prior to the quantization, having the prescribed format. In <cross-reference target="DRAWINGS">FIG. 30</cross-reference>, an original image <highlight><bold>32</bold></highlight> is divided into 4 tiles <highlight><bold>32</bold></highlight><highlight><subscript>t0</subscript></highlight>, <highlight><bold>32</bold></highlight><highlight><subscript>t1</subscript></highlight>, <highlight><bold>32</bold></highlight><highlight><subscript>t2 </subscript></highlight>and <highlight><bold>32</bold></highlight><highlight><subscript>t3</subscript></highlight>, and a shaded region <highlight><bold>33</bold></highlight> includes the wavelet coefficient values of the pixels of <highlight><bold>1</bold></highlight>HL, <highlight><bold>1</bold></highlight>LH and <highlight><bold>1</bold></highlight>HH adjacent to the tile <highlight><bold>32</bold></highlight><highlight><subscript>t0 </subscript></highlight>and prior to the quantization. For the sake of convenience, the coefficients on the 4 sides of each of the subbands of <highlight><bold>1</bold></highlight>HL, <highlight><bold>1</bold></highlight>LH and <highlight><bold>1</bold></highlight>HH are stored clockwise, as &ldquo;top side&rdquo; --&gt;&ldquo;right side&rdquo;--&gt;&ldquo;bottom side&rdquo;--&gt;&ldquo;left side&rdquo;, in a sequence &ldquo;<highlight><bold>1</bold></highlight>HL&rdquo;--&gt;&ldquo;<highlight><bold>1</bold></highlight>LH&rdquo;--&gt;&ldquo;<highlight><bold>1</bold></highlight>HH&rdquo;, with a fixed length of 2 bytes per coefficient. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> The contents of the COM marker, that is, the writing sequence (format) such as that described above, may be freely selected, so that the contents are, meaningless in general to a third party attempting to decode the data. In other words, the decoding is normally made based on the quantized coefficients existing within the code. However, in a case where it is possible to know the contents of the COM marker, it is possible not to use the quantized values existing within the code but to make the decoding using accurate values embedded i<highlight><bold>1</bold></highlight>n Lue COM marker, with respect to the wavelet coefficient values at the tile boundary. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> The use of 9&times;7 and 5&times;3 wavelet transform filters is prescribed in the JPEG2000. When such filters are used, wavelet coefficient values of 25 pixels and the peripheral 81 pixels become necessary at the maximum in order to obtain 1 pixel value by the wavelet inverse transform. Furthermore, each one of the wavelet coefficient values contributes to the derivation of a large number of pixel values. Accordingly, the accurate wavelet coefficient values at the tile boundary which are read from the COM marker become important data for the inverse transform which is carried out to derive the pixel values existing at the tile boundary. As a result, it is possible to reduce the quantization error of the pixel values at the tile boundary vicinity, and to make the tile boundary inconspicuous. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 31</cross-reference> is a flow chart for explaining an embodiment of the image compression method according to the present invention. This embodiment of the image compression method is carried out with respect to the JPEG2000 system. First, a step S<highlight><bold>1</bold></highlight> transforms the image into color spaces. Then, a step S<highlight><bold>2</bold></highlight> specifies rectangular tiles with an arbitrary size with respect to the image, and divides the image using the specified rectangular tiles. After the division into the tiles, a step S<highlight><bold>3</bold></highlight> further divides each-tile into code blocks, and carries out a DWT transform with respect to the divided code blocks. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> After the DWT transform, a step S<highlight><bold>4</bold></highlight> decomposes the code block into bit-planes, and the decomposed bit-planes are ordered from the MSB to the LSB depending on the coding sequence of the decomposed bit-planes. The ordered bit-planes are used to form layers which are ordered from the highest layer to the lowest layer. The bit-plane of the tile boundary vicinity region where the quantization rate is to be relatively suppressed to a low value, is shifted so as to be included in one of higher layers of the ordered layers, with respect to the bit-plane of the region separated from the tile boundary and where the quantization rate is to be relatively maintained to a high value. A layer restructuring to a different layer is made in this manner, and a quantization is then carried out. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> After these processes of the step S<highlight><bold>4</bold></highlight>, a step S<highlight><bold>5</bold></highlight> carries out an entropy coding from the higher layers of the quantized layers. In addition, a step S<highlight><bold>6</bold></highlight> carries out a tag process, and the process ends. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> As a function of the JPEG2000, it is possible to specify the region where the quantization rate is to be suppressed to a low value by the ROI process. In addition, it is possible to hold the coefficients of the region where the quantization rate is to be suppressed to the low value before the quantization, and refer to the held coefficients at the time of the expansion. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 32</cross-reference> is a flow chart for explaining an embodiment of the image expansion method according to the present invention. First, a step S<highlight><bold>11</bold></highlight> interprets the tag information based on the tile division information of the compressed image. A step S<highlight><bold>12</bold></highlight> carries out an entropy decoding, and a step S<highlight><bold>13</bold></highlight> carries out an inverse quantization. A step S<highlight><bold>14</bold></highlight> carries out a SWT inverse transform, and a step S<highlight><bold>15</bold></highlight> restores the tiles. A step S<highlight><bold>16</bold></highlight> connects the restored tiles and carries out a color space inverse transform so as to generate the expanded image, and the process ends. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> The embodiments of the image compression apparatus, image expansion apparatus, image compression method and image expansion method according to the present invention are described above, but the present invention is also applicable to a computer system. More particularly, a computer-readable storage medium according to the present invention stores a computer program for causing a computer or information processing apparatus, such as a personal computer, to carry out a process using the image compression method and/or the image expansion method of the present invention, so that the computer functions as the image compression apparatus and/or the image expansion apparatus of the present invention. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> In other words, the computer-readable storage medium is formed by a recording medium which stores a computer program for causing a computer to function as any of the described embodiments of the image compression apparatus and/or the image expansion apparatus. The recording medium may be selected from CD-ROMs, magneto-optical disks, DVD-ROMs, floppy disks, flash memories, memory cards, memory sticks, various kinds of ROMs, various kinds of RAMs, and any media capable of storing the computer program in a computer-readable form. The computer which executes the computer program may read the computer program from the computer-readable storage medium which is loaded into the computer or, read the computer program from the computer-readable storage medium via a communication means such as a modem via one or more networks. In addition, the computer program may be preinstalled in the computer-readable storage medium, such as a hard disk drive (HDD), of the computer. </paragraph>
<paragraph id="P-0151" lvl="7"><number>&lsqb;0151&rsqb;</number> &lsqb;Fourth Embodiment&rsqb;</paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 33</cross-reference> is a system block diagram for explaining a fourth embodiment of the image compression apparatus according to the present invention. The image compression apparatus shown in <cross-reference target="DRAWINGS">FIG. 33</cross-reference> includes an image memory <highlight><bold>101</bold></highlight>, a color space transform section <highlight><bold>102</bold></highlight>, a tile separating section <highlight><bold>103</bold></highlight>, an interpolation section <highlight><bold>104</bold></highlight>, a wavelet transform section <highlight><bold>105</bold></highlight>, a quantization rate selector <highlight><bold>106</bold></highlight>, a quantization section <highlight><bold>107</bold></highlight>, an entropy coding section <highlight><bold>108</bold></highlight>, a code stream processing section <highlight><bold>109</bold></highlight>, a controller <highlight><bold>110</bold></highlight>, an input/output (I/O) section <highlight><bold>111</bold></highlight> for inputting image data, an input/output section <highlight><bold>112</bold></highlight> for outputting compressed image data, and a CPU <highlight><bold>113</bold></highlight> which are connected via a bus <highlight><bold>114</bold></highlight>. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 34 and 35</cross-reference> are flow charts for explaining the operation of the fourth embodiment. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 34</cross-reference>, the controller <highlight><bold>110</bold></highlight> reads the image data from the input/output section <highlight><bold>111</bold></highlight> and stores the image data in the image memory <highlight><bold>101</bold></highlight> in a step S<highlight><bold>21</bold></highlight>. In a case where the input image is a moving image, the image data is alternately stored in regions A and B (not shown) within the image memory <highlight><bold>101</bold></highlight>. </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> After the image data amounting to 1 frame are stored in the image memory <highlight><bold>101</bold></highlight> in the step S<highlight><bold>21</bold></highlight>, the color space transform section <highlight><bold>102</bold></highlight> separates and transforms the stored image data into red (R), green (G) and blue (B) components in a seep S<highlight><bold>22</bold></highlight>. It is of course possible to separate and transform the stored image data into yellow (Y), magenta (M) and cyan (C) components of the complementary color system or, to luminance (Y), red color difference (U) and blue color difference (V) components (YUV components) or, to YCrCb components, instead of into the RGB components. </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> The tile separating section <highlight><bold>103</bold></highlight> divides each of the image data separated into the R, G and B components into tiles made up of 16&times;16 pixels, for example, in a step S<highlight><bold>23</bold></highlight>. </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> The interpolation section <highlight><bold>104</bold></highlight> reads the divided tiles, and interpolates the image data at the tile outer periphery by a first interpolation method, namely, the mirroring method, in a step S<highlight><bold>24</bold></highlight>. </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> The wavelet transform section <highlight><bold>105</bold></highlight> carries out a wavelet transform with respect to the tiles which are interpolated in the step S<highlight><bold>24</bold></highlight>, and stores transformed wavelet coefficient values (WT<highlight><bold>1</bold></highlight>) into a memory (not shown) in a step S<highlight><bold>25</bold></highlight>. The memory may be provided separately from the image memory <highlight><bold>101</bold></highlight> or, be a part of a memory unit which also includes the image memory <highlight><bold>101</bold></highlight>. </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> The interpolation section <highlight><bold>104</bold></highlight> reads the same tile as that read in the step S<highlight><bold>24</bold></highlight>, and interpolates the image data at the tile periphery by a second interpolation method in a step S<highlight><bold>26</bold></highlight>. The second interpolation method may use pixel values of tiles adjacent to the read tile. </paragraph>
<paragraph id="P-0160" lvl="0"><number>&lsqb;0160&rsqb;</number> The wavelet transform section <highlight><bold>105</bold></highlight> carries out a wavelet transform with respect to the tiles which are interpolated in the step S<highlight><bold>26</bold></highlight>, and stores transformed wavelet coefficient values (WT<highlight><bold>2</bold></highlight>) into the above described memory in a step S<highlight><bold>27</bold></highlight>. </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> The quantization rate selector <highlight><bold>106</bold></highlight> decides whether or not a difference exists between the wavelet coefficient values WT<highlight><bold>1</bold></highlight> and WT<highlight><bold>2</bold></highlight> at the tile boundary vicinity, in a step S<highlight><bold>28</bold></highlight>. The process advances to a step S<highlight><bold>29</bold></highlight> if the decision result in the step S<highlight><bold>28</bold></highlight> is YES, and the process advances to a step S<highlight><bold>30</bold></highlight> if the decision result in the step S<highlight><bold>28</bold></highlight> is NO. The step S<highlight><bold>28</bold></highlight> can make the decision by judging the difference of the individual coefficient values of the wavelet coefficient values WT<highlight><bold>1</bold></highlight> and WT<highlight><bold>2</bold></highlight> or, judging whether a sum of square of the difference of the individual coefficient values is greater than or equal to a predetermined value. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> The quantization rate selector <highlight><bold>106</bold></highlight> selects the quantization rate at the vicinity of the tile for which the decision result is YES in the step S<highlight><bold>28</bold></highlight>, in the step S<highlight><bold>29</bold></highlight>. </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> The quantization section <highlight><bold>107</bold></highlight> carries out a quantization with respect to the wavelet coefficient values WT<highlight><bold>1</bold></highlight> subjected to the wavelet transform in the step S<highlight><bold>25</bold></highlight>, in the step S<highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> With respect to the coefficient values at the tile boundary vicinity for which the quantization rate is selected in the step S<highlight><bold>29</bold></highlight>, the quantization is carried out at a quantization rate lower than the quantization rate with respect to the other coefficient values. </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> For example, the step <highlight><bold>29</bold></highlight> outputs <highlight><bold>1</bold></highlight> if the difference is 5 or greater in the step S<highlight><bold>28</bold></highlight>, outputs <highlight><bold>2</bold></highlight> if the difference is 7, and outputs <highlight><bold>3</bold></highlight> if the difference is 9. The step S<highlight><bold>30</bold></highlight> reduces the quantization rate by 1 rank if 1 is output in the step S<highlight><bold>29</bold></highlight>, reduces the quantization rate by 2 ranks if 2 is output in the step S<highlight><bold>29</bold></highlight>, and the like. In other words, the step S<highlight><bold>30</bold></highlight> reduces the quantization rate depending on the difference. </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> It is possible to reduce the quantization rate to a predetermined rank or to set the quantization rate to 1, that is, so as not to carry out the quantization, if the difference is greater than or equal to a predetermined value. </paragraph>
<paragraph id="P-0167" lvl="0"><number>&lsqb;0167&rsqb;</number> The quantization rate may be reduced in arbitrary units. For example, the quantization rate may be reduced in units of coefficients (pixels), units of code blocks or, in units of subbands. </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> The quantization section <highlight><bold>107</bold></highlight> stores the data quantized in the step S<highlight><bold>30</bold></highlight> and the data having the reduced quantization rate, the code blocks or the subbands, in a step S<highlight><bold>31</bold></highlight>, and the process advances to a step S<highlight><bold>32</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 35</cross-reference>. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 35</cross-reference>, the controller <highlight><bold>110</bold></highlight> decides whether or not all of the tiles of the R, G and B components of 1 frame are quantized, in the step S<highlight><bold>32</bold></highlight>. If the decision result in the step S<highlight><bold>32</bold></highlight> is NO, the process returns to the step S<highlight><bold>23</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 34</cross-reference>, and the steps S<highlight><bold>23</bold></highlight> through S<highlight><bold>32</bold></highlight> are repeated. The process advances to a step S<highlight><bold>33</bold></highlight> if the decision result in the step S<highlight><bold>32</bold></highlight> is YES. </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> The entropy coding section <highlight><bold>108</bold></highlight> carries out a known coding process in the step S<highlight><bold>33</bold></highlight>. The code stream processing section <highlight><bold>109</bold></highlight> generates a code stream in a step S<highlight><bold>34</bold></highlight>, and the code stream is output from the input/output section <highlight><bold>112</bold></highlight> in a step S<highlight><bold>35</bold></highlight>. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> The controller <highlight><bold>110</bold></highlight> decides whether or not a next input image exists, in a step S<highlight><bold>36</bold></highlight>. If the decision result in the step S<highlight><bold>36</bold></highlight> is YES, the process returns to the step S<highlight><bold>21</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 34</cross-reference>, and the steps S<highlight><bold>21</bold></highlight> through <highlight><bold>36</bold></highlight> are repeated. On the other hand, the process ends if the decision result in the step S<highlight><bold>36</bold></highlight> is NO. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 36</cross-reference> is a diagram showing a processed result obtained by the fourth embodiment. In <cross-reference target="DRAWINGS">FIG. 36</cross-reference>, the tile boundary is indicated by a reference numeral <highlight><bold>501</bold></highlight>, and a region <highlight><bold>502</bold></highlight> with the hatching is located at the tile boundary vicinity. The quantization rate is reduced in the region <highlight><bold>502</bold></highlight>. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> The region <highlight><bold>502</bold></highlight> does not exist at some portions of the tile boundary vicinity. At these portions, the difference between the wavelet coefficient values obtained by the mirroring method and the interpolation method using adjacent pixels is small, and the quantization rate does not need to be reduced. At these portions, a discontinuity originally does not occur at the tile boundary <highlight><bold>501</bold></highlight>. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> The step S<highlight><bold>26</bold></highlight> carries out the interpolation using the adjacent pixels in this embodiment. However, the step S<highlight><bold>26</bold></highlight> may carry out the interpolation using a method other than the mirroring method of interpolation carried out in the step S<highlight><bold>24</bold></highlight>, such as the interpolation using centrosymmetric method. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> Furthermore, the interpolation carried out in the step S<highlight><bold>24</bold></highlight> is not limited to the mirroring method. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 37</cross-reference> is a diagram for explaining a region applied with the fourth embodiment. In <cross-reference target="DRAWINGS">FIG. 37</cross-reference>, the tile boundary is indicated by a reference numeral <highlight><bold>601</bold></highlight>. A region <highlight><bold>602</bold></highlight> indicated by the hatching may be specified, and this fourth embodiment may be applied with respect to this region <highlight><bold>602</bold></highlight>, while the steps S<highlight><bold>26</bold></highlight> through S<highlight><bold>29</bold></highlight> are omitted with respect to the other regions. </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> In addition, although the step S<highlight><bold>22</bold></highlight> separates the image data into the R, G and B components and this fourth embodiment is applied to each of the R, G and B components, it is possible to apply this fourth embodiment to only the image data of the G component which visually contributes the most. In this case, the steps S<highlight><bold>26</bold></highlight> through S<highlight><bold>29</bold></highlight> may be omitted with respect to the image data of the R and B components. </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> Similarly, if the image data is separated into Y, U and V components, it is possible to apply this fourth embodiment to only the image data of the Y component. </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> In a case where the input image is monochromatic, the step S<highlight><bold>22</bold></highlight> may be omitted. </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> Moreover, the steps S<highlight><bold>26</bold></highlight> through S<highlight><bold>29</bold></highlight> may be omitted, and the step S<highlight><bold>30</bold></highlight> in this case may carry out the quantization by reducing the quantization rate with respect to all regions in the tile boundary vicinity compared to other regions. </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> According to this fourth embodiment, it is possible to eliminate the discontinuity at the tile boundary of the expanded image, because the quantization rate of the wavelet coefficient values in the regions at the tile boundary vicinity is reduced compared to the quantization rate at regions other than the tile boundary vicinity. </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> Further, the present invention is not limited to these embodiments, but various variations and modifications may be made without departing from the scope of the present invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. An image compression apparatus comprising: 
<claim-text>a tile specifying section specifying rectangular tiles having an arbitrary size with respect to an image; </claim-text>
<claim-text>an image dividing section dividing the image using the specified rectangular tiles; </claim-text>
<claim-text>a bit-plane decomposing section decomposing each of the specified tiles dividing the image into bit-planes; </claim-text>
<claim-text>a bit-plane ordering section ordering the bit-planes decomposing each of the specified tiles depending on a coding sequence; </claim-text>
<claim-text>a layer forming section forming layers by the ordered bit-planes; and </claim-text>
<claim-text>a suppressing section suppressing a quantization rate of a region low relative to other regions of the image. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said suppressing section suppresses the quantization rate of a region in a vicinity of a tile boundary, by shifting a bit-plane of said region with respect to a bit-plane of a region separated from the tile boundary and having a relatively higher quantization rate, so as to be included in a higher layer of the layers formed by the ordered bit-planes. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said suppressing section selects the region in which the quantization rate is suppressed by a region of interest (ROI) process. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein said suppressing section carries out the region of interest (ROI) process with respect to pixels or, code blocks or, precincts, in the vicinity of the tile boundary. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein said suppressing section carries out the region of interest (ROI) process with respect to a region in a vicinity of a tile boundary. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein said suppressing section carries out the region of interest (ROI) process which is specified by an ROI. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said suppressing section holds coefficient values of the region in which the quantization rate is suppressed prior to quantization. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein said suppressing section holds the coefficient values in tile-part headers. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein code blocks constitute a minimum unit of a collection of bit-planes restructured in a layer different from that of bit-planes in a region which is separated from a tile boundary and has a quantization rate high relative to others, and at least one code block is non-adjacent to an outer edge of a tile. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein precincts constitute a minimum unit of a collection of bit-planes restructured in a layer different from that of bit-planes in a region which is separated from a tile boundary and has a quantization rate high relative to others, and at least one precinct is non-adjacent to an outer edge of a tile. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein bit-planes restructured in a layer different from that of bit-planes in a region which is separated from a tile boundary and has a quantization rate high relative to others have a decomposition level <highlight><bold>1</bold></highlight> or <highlight><bold>2</bold></highlight>. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein a processing time and an output image quality of the image compression apparatus differ depending on the decomposition level. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein bit-planes restructured in a layer different from that of bit-planes in a region which is separated from a tile boundary and has a quantization rate high relative to others have one or a plurality of subbands. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein a processing time and an output image quality of the image compression apparatus differ depending on a number of subbands. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein bit-planes restructured in a layer different from that of bit-planes in a region which is separated from a tile boundary and has a quantization rate high relative to others have wavelet coefficient values greater than a predetermined value. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, further comprising: 
<claim-text>a layer restructuring section restructuring the layer so that the bit-planes are absorbed by higher layers as a difference between the wavelet coefficient values of the bit-planes forming a code block and the predetermined value becomes larger. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, further comprising: 
<claim-text>an interpolation section interpolating pixels extended outside a tile by a mirroring method when obtaining the wavelet coefficient values. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>a layer restructuring section restructuring a layer by shifting all bit-planes included in a precinct so as to be included in a higher layer when more than a predetermined number of code blocks forming the precinct are adjacent to a tile boundary. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>a layer restructuring section restructuring a layer, </claim-text>
<claim-text>a number of layers prior to restructuring of the layer being one or more. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. An image compression method comprising: 
<claim-text>a tile specifying step specifying rectangular tiles having an arbitrary size with respect to an image; </claim-text>
<claim-text>an image dividing step dividing the image using the specified rectangular tiles; </claim-text>
<claim-text>a bit-plane decomposing step decomposing each of the specified tiles dividing the image into bit-planes; </claim-text>
<claim-text>a bit-plane ordering step ordering the bit-planes decomposing each of the specified tiles depending on a coding sequence; </claim-text>
<claim-text>a layer forming step forming layers by the ordered bit-planes; and </claim-text>
<claim-text>a suppressing step suppressing a quantization rate of a region low relative to other regions of the image. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The image compression method as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein said suppressing step suppresses the quantization rate of a region in a vicinity of a tile boundary, by shifting a bit-plane of said region with respect to a bit-plane of a region separated from the tile boundary and having a relatively higher quantization rate, so as to be included in a higher layer of the layers formed by the ordered bit-planes. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The image compression method as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein said suppressing step selects the region in which the quantization rate is suppressed by a region of interest (ROI) process. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The image compression method as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein said suppressing step holds coefficient values of the region in which the quantization rate is suppressed prior to quantization. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A computer-readable storage medium which stores a program for causing a computer to carry out an image compression, said program comprising: 
<claim-text>a tile specifying procedure causing the computer to specify rectangular tiles having an arbitrary size with respect to an image; </claim-text>
<claim-text>an image dividing procedure causing the computer to divide the image using the specified rectangular tiles; </claim-text>
<claim-text>a bit-plane decomposing procedure causing the computer to decompose each of the specified tiles dividing the image into bit-planes; </claim-text>
<claim-text>a bit-plane ordering procedure causing the computer to order the bit-planes decomposing each of the specified tiles depending on a coding sequence; </claim-text>
<claim-text>a layer forming procedure causing the computer to form layers by the ordered bit-planes; and </claim-text>
<claim-text>a suppressing procedure causing the computer to suppress a quantization rate of a region low relative to other regions of the image. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. An image expansion apparatus for expanding compressed image data obtained by specifying rectangular tiles having an arbitrary size with respect to an image, dividing the image using the specified rectangular tiles, decomposing each of the specified tiles dividing the image into bit-planes, ordering the bit-planes decomposing each of the specified tiles depending on a coding sequence, forming layers by the ordered bit-planes, and a suppressing step suppressing a quantization rate of a region low relative to other regions of the image, comprising: 
<claim-text>an input section receiving the compressed image data; and </claim-text>
<claim-text>an expanding section expanding the compressed image data based on information related to the specified tiles. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The image expansion apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference>, wherein said expanding section includes an entropy decoding section, an inverse quantization section, and a two-dimensional discrete wavelet inverse transform section. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. An image expansion method for expanding compressed image data obtained by specifying rectangular tiles having an arbitrary size with respect to an image, dividing the image using the specified rectangular tiles, decomposing each of the specified tiles dividing the image into bit-planes, ordering the bit-planes decomposing each of the specified tiles depending on a coding sequence, forming layers by the ordered bit-planes, and a suppressing step suppressing a quantization rate of a region low relative to other regions of the image, comprising: 
<claim-text>an input step receiving the compressed image data; and </claim-text>
<claim-text>an expanding step expanding the compressed image data based on information related to the specified tiles. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. A computer-readable storage medium which stores a program for causing a computer to carry out an image expansion with respect to compressed image data which is obtained by specifying rectangular tiles having an arbitrary size with respect to an image, dividing the image using the specified rectangular tiles, decomposing each of the specified tiles dividing the image into bit-planes, ordering the bit-planes decomposing each of the specified tiles depending on a coding sequence, forming layers by the ordered bit-planes, and a suppressing step suppressing a quantization rate of a region low relative to other regions of the image, said program comprising: 
<claim-text>an input procedure causing the computer to receive the compressed image data; and </claim-text>
<claim-text>an expanding procedure causing the computer to expand the compressed image data based on information related to the specified tiles. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. An image compression apparatus comprising: 
<claim-text>means for dividing an original image into a plurality of tiles; </claim-text>
<claim-text>means for interpolating first data in a periphery of each of the tiles and carrying out a wavelet transform; </claim-text>
<claim-text>means for quantizing transformed wavelet coefficient values to compress image data of the original image; and </claim-text>
<claim-text>reducing means for reducing a quantization rate of the wavelet coefficient values in a region in a vicinity of a tile boundary to a value lower than that of other regions. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, wherein said reducing means uniformly reduces the quantization rate of the wavelet coefficient values in the region in the vicinity of the tile boundary. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, wherein said reducing means reduces the quantization rate of the wavelet coefficient values in the region in the vicinity of the tile boundary to 1. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, wherein said reducing means reduces the quantization rate of the wavelet coefficient values in a region in a vicinity of only a tile boundary included within a specified region which is specified in advance in the original image. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, wherein the original image is a moving image. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, wherein said reducing means compares and obtains a difference between the wavelet coefficient values and wavelet coefficient values which are obtained by interpolating second data in a periphery of each of the tiles and carrying out a wavelet transform, and reduces the quantization rate depending on the difference. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, wherein said means for interpolating data employs a mirroring method to interpolate the data. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 34</dependent-claim-reference>, wherein said reducing means interpolates the second data by a centrosymmetric method. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 34</dependent-claim-reference>, wherein said reducing means interpolates the second data using the image data of the original image of each of the tiles and tiles adjacent thereto. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 34</dependent-claim-reference>, wherein said reducing means compares the wavelet coefficient values in units of subbands or, code blocks or, pixels. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein said reducing means reduces the quantization rate only with respect to a subband or code block including a maximum value of the difference. </claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein said reducing means reduces the quantization rate only with respect to a subband or code block including a maximum value of a sum of square of the difference. </claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, further comprising: 
<claim-text>means for separating the original image into R, G and B components, </claim-text>
<claim-text>said reducing means reducing the quantization rate only with respect to the B component. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The image compression apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, further comprising: 
<claim-text>means for separating the original image into Y, U and V components, </claim-text>
<claim-text>said reducing means reducing the quantization rate only with respect to the Y component. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. An image compression method comprising the steps of: 
<claim-text>dividing an original image into a plurality of tiles; </claim-text>
<claim-text>interpolating data in a periphery of each of the tiles and carrying out a wavelet transform; </claim-text>
<claim-text>quantizing transformed wavelet coefficient values to compress image data of the original image; and </claim-text>
<claim-text>reducing a quantization rate of the wavelet coefficient values in a region in a vicinity of a tile boundary to a value lower than that of other regions. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. A computer-readable storage medium which stores a program for causing a computer to carry out an image compression, said program comprising: 
<claim-text>a procedure causing the computer to divide an original image into a plurality of tiles; </claim-text>
<claim-text>a procedure causing the computer to interpolate data in a periphery of each of the tiles and carrying out a wavelet transform; </claim-text>
<claim-text>a procedure causing the computer to quantize transformed wavelet coefficient values to compress image data of the original image; and </claim-text>
<claim-text>a procedure causing the computer to reduce a quantization rate of the wavelet coefficient values in a region in a vicinity of a tile boundary to a value lower than that of other regions.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002742A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002742A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002742A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002742A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002742A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002742A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002742A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002742A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002742A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002742A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002742A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002742A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002742A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030002742A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030002742A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030002742A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030002742A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030002742A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030002742A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030002742A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030002742A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030002742A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030002742A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030002742A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030002742A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030002742A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00026">
<image id="EMI-D00026" file="US20030002742A1-20030102-D00026.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00027">
<image id="EMI-D00027" file="US20030002742A1-20030102-D00027.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00028">
<image id="EMI-D00028" file="US20030002742A1-20030102-D00028.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00029">
<image id="EMI-D00029" file="US20030002742A1-20030102-D00029.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00030">
<image id="EMI-D00030" file="US20030002742A1-20030102-D00030.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00031">
<image id="EMI-D00031" file="US20030002742A1-20030102-D00031.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00032">
<image id="EMI-D00032" file="US20030002742A1-20030102-D00032.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00033">
<image id="EMI-D00033" file="US20030002742A1-20030102-D00033.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00034">
<image id="EMI-D00034" file="US20030002742A1-20030102-D00034.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00035">
<image id="EMI-D00035" file="US20030002742A1-20030102-D00035.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00036">
<image id="EMI-D00036" file="US20030002742A1-20030102-D00036.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00037">
<image id="EMI-D00037" file="US20030002742A1-20030102-D00037.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00038">
<image id="EMI-D00038" file="US20030002742A1-20030102-D00038.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00039">
<image id="EMI-D00039" file="US20030002742A1-20030102-D00039.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00040">
<image id="EMI-D00040" file="US20030002742A1-20030102-D00040.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00041">
<image id="EMI-D00041" file="US20030002742A1-20030102-D00041.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00042">
<image id="EMI-D00042" file="US20030002742A1-20030102-D00042.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00043">
<image id="EMI-D00043" file="US20030002742A1-20030102-D00043.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
