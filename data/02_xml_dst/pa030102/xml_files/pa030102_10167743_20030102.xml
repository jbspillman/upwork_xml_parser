<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004767A1-20030102-D00000.TIF SYSTEM "US20030004767A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004767A1-20030102-D00001.TIF SYSTEM "US20030004767A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004767A1-20030102-D00002.TIF SYSTEM "US20030004767A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004767A1-20030102-D00003.TIF SYSTEM "US20030004767A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004767A1-20030102-D00004.TIF SYSTEM "US20030004767A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004767A1-20030102-D00005.TIF SYSTEM "US20030004767A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004767A1-20030102-D00006.TIF SYSTEM "US20030004767A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004767A1-20030102-D00007.TIF SYSTEM "US20030004767A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004767A1-20030102-D00008.TIF SYSTEM "US20030004767A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004767A1-20030102-D00009.TIF SYSTEM "US20030004767A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004767A1-20030102-D00010.TIF SYSTEM "US20030004767A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030004767A1-20030102-D00011.TIF SYSTEM "US20030004767A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030004767A1-20030102-D00012.TIF SYSTEM "US20030004767A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030004767A1-20030102-D00013.TIF SYSTEM "US20030004767A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030004767A1-20030102-D00014.TIF SYSTEM "US20030004767A1-20030102-D00014.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004767</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10167743</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020610</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-195798</doc-number>
</priority-application-number>
<filing-date>20010628</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F017/60</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>705</class>
<subclass>007000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Workflow system, information processor, and method and program for workflow management</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Hiroyasu</given-name>
<family-name>Ohsaki</family-name>
</name>
<residence>
<residence-non-us>
<city>Sagamihara-shi</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>International Business Machines Corporation</organization-name>
<address>
<city>Armonk</city>
<state>NY</state>
</address>
<assignee-type>03</assignee-type>
</assignee>
<correspondence-address>
<name-1>John L. Rogitz</name-1>
<name-2>Rogitz &amp; Associates</name-2>
<address>
<address-1>Suite 3120</address-1>
<address-2>750 B Street</address-2>
<city>San Diego</city>
<state>CA</state>
<postalcode>92101</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A workflow system is provided in which one person in charge efficiently processes each activity assigned to successive nodes. When a client request management program execution unit <highlight><bold>330 </bold></highlight>of a workflow server <highlight><bold>30 </bold></highlight>receives a request to terminate processing for a node from a user&apos;s computer terminal for operation <highlight><bold>20, </bold></highlight>a definition for the node is referred to by a project management program execution unit <highlight><bold>310. </bold></highlight>If processing of a process management program execution unit <highlight><bold>320 </bold></highlight>is completed within a consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>defined for the node, and it is determined that a next node can be processed by the user, a client request management program execution unit <highlight><bold>330 </bold></highlight>requests a computer terminal for operation <highlight><bold>20 </bold></highlight>to start processing of a next node. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">I. FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to improvement in an office workflow, and particularly to, for example, a workflow system that can improve processing efficiency. </paragraph>
</section>
<section>
<heading lvl="1">II. BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> In order to streamline office clerical work, or due to space cost for file cabinets or environmental considerations etc., there has long been a need to computerize slip processing to build a paperless document processing system. Thus, computerized workflow systems have been developed. A &ldquo;workflow&rdquo; refers to a series of flows of predetermined tasks stereotyped according to the contents of work. Management of such a workflow has recently been achieved as a feature of groupware. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> An example of workflow systems will be specifically described with reference to an example of application processing. <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a diagram showing a flow of application processing. <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a diagram showing a conventional screen on a processing person&apos;s computer in application processing shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. In application processing shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, &ldquo;Reception Process&rdquo;, &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo;, and &ldquo;Process <highlight><bold>2</bold></highlight>&rdquo; are carried out after a submission of an application, and &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo; and &ldquo;Process <highlight><bold>2</bold></highlight>&rdquo; are described here as separate activities. This means that once &ldquo;Reception Process&rdquo; has completed, &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo; and &ldquo;Process <highlight><bold>2</bold></highlight>&rdquo; may be performed by different persons in parallel. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> First, when an application is submitted as shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, Processing Person A performs &ldquo;Reception Process&rdquo; such as verifying entries. Specifically, a list of work items as shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>(<highlight><italic>a</italic></highlight><highlight><bold>1</bold></highlight>) is displayed to Processing Person A, who selects an activity to process from that list. Then, a screen shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>(<highlight><italic>a</italic></highlight><highlight><bold>2</bold></highlight>) is displayed to the processing person A, who will proceed to &ldquo;Reception Process&rdquo;. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> When &ldquo;Reception Process&rdquo; is completed by Processing Person A, next &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo; and &ldquo;Process <highlight><bold>2</bold></highlight>&rdquo; are allowed to be processed. Since Processing Person B performs &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo;, a list of work items as shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>(<highlight><italic>b</italic></highlight><highlight><bold>1</bold></highlight>) is displayed to Processing Person B. Processing Person B then selects an activity to process from that list as described above. A process screen as shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>(<highlight><italic>b</italic></highlight><highlight><bold>2</bold></highlight>) is displayed to Processing Person B, who will then proceed to &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo;. In the same manner, Processing Person C performs &ldquo;Process <highlight><bold>2</bold></highlight>&rdquo;. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> In such a workflow system in which a plurality of activities are processed in series, a &ldquo;list of work items&rdquo; is displayed to a processing person. Once a processing person has selected a predetermined activity and the activity has been completed, a next activity for the start of which is prerequisite completion of a predetermined activity becomes available for processing. Then the next activity that has become available for processing is added to a &ldquo;list of work items&rdquo; that will be displayed to a person able to process a next activity. Accordingly, the person available for processing selects a next activity and starts processing thereof. </paragraph>
<paragraph id="P-0007" lvl="7"><number>&lsqb;0007&rsqb;</number> Problems to be Solved by the Invention </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> In application processing shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo; may be processed by the same person as a person having processed &ldquo;Reception Process&rdquo;, i.e., Processing Person B who will perform &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo; can be the same person as Processing Person A who performed &ldquo;Reception Process&rdquo;. In this case, even if Processing Person A is going to proceed to perform &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo; immediately after completion of &ldquo;Reception Process&rdquo;, a list of work items shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>(<highlight><italic>b</italic></highlight><highlight><bold>1</bold></highlight>) will be displayed to Processing Person A after completion of &ldquo;Reception Process&rdquo;. Thus, Processing Person A need to look for a corresponding activity through the list shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>(<highlight><italic>b</italic></highlight><highlight><bold>1</bold></highlight>) and to select it again, which takes much time and effort. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> It is also possible for both of &ldquo;Reception Process&rdquo; and &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo; to be defined and processed as a single activity in order to relieve Processing Person A from the burden of selecting a corresponding activity from a list shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>(<highlight><italic>b</italic></highlight><highlight><bold>1</bold></highlight>) in the processing of &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo;. Then, &ldquo;Process <highlight><bold>2</bold></highlight>&rdquo; that could have been processed by Processing Person C in parallel with &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo; should be started after completion of &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo;, which decreases total throughput. Moreover, in order to make such setting possible that each activity may be processed by either one person or more persons, applications for sequencing processes, for sending and receiving data, and for screen transition must be developed for each processing person. This could be laborious, or these applications may be too complicated to be developed. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> In addition, in application processing shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, processing both &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo; and &ldquo;Process <highlight><bold>2</bold></highlight>&rdquo; by one person may result in higher productivity. For example, &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo; and &ldquo;Process <highlight><bold>2</bold></highlight>&rdquo; may be set to be processed by one person for usual occasions, and once a person originally set to process both of the processes has become overloaded, &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo; and &ldquo;Process <highlight><bold>2</bold></highlight>&rdquo; may be set to be processed by different persons. In such a case, in order that one person may perform &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo; and &ldquo;Process <highlight><bold>2</bold></highlight>&rdquo; consecutively, a list of work items should be displayed after completion of &ldquo;Process <highlight><bold>1</bold></highlight>&rdquo;, and a corresponding activity should be selected again by the person as in the above-described case. It is also difficult to eliminate these inconveniences as in the above-described case. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> As such, in a workflow system consisting of a plurality of activities, when a plurality of activities that can be processed by one or more persons were processed by different persons as required, efficient processing was difficult to be achieved. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The present invention is accomplished to solve such technical challenges and it is principal object of the intention to provide a workflow system that achieves efficient processing. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> To achieve the object, the invention determines whether consecutive processing of tasks by one person in a workflow system is possible or not. Therefore, the present invention provides a workflow system for a plurality of users to execute a task according to a predetermined workflow on a plurality of computer terminals connected to a network, including storage means of storing each workflow definition defining a plurality of contents and a flow of tasks and information about a user who can process a task; and determination means of determining whether a user in charge having processed a predetermined task is able to process a next task or not for the start of which is prerequisite completion of processing of a predetermined task based on user information stored in storage means. By determining whether it is possible for one user to process a series of tasks or not, a flow of tasks can be efficiently determined. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> In particular, if the determination means determines that a user in charge can process a next task, the system further includes request management means of requesting the user in charge to process a next task so that the user in charge can process a predetermined task and a next task consecutively. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> In addition, storage means stores a consecutive processing standby time for tasks, and after the predetermined task processing has been completed by the user in charge, the request management means determines that the user in charge can process a next task in the consecutive processing standby time for the predetermined tasks, the request management means requests the user in charge to process the next task thereby preventing the user in charge from waiting for longer period than a predetermined standby time. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> In another aspect, the present invention may be understood as a workflow system connecting over a network a workflow server for managing a workflow using a workflow definition consisting of a plurality of nodes and a path connecting the nodes and a computer terminal for operation to execute an activity assigned to the nodes, wherein the computer terminal for operation sends a request to terminate processing for corresponding nodes to the workflow server in response to completion of an activity, and if the node being requested to terminate processing and the next node defined in the workflow definition can be processed by one person in charge, the workflow server makes a request to process the next node to the computer terminal for operation of the person in charge. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> In this case, a workflow definition can define a group of a plurality of users as the persons in charge who can process the node, thereby dynamically assigning a person in charge to a node. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> In addition, after receiving a request to terminate processing, if the workflow server is ready to make the person in charge start processing the next node in a predetermined consecutive processing standby time, the workflow server preferably makes a request to process the next node. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> In this workflow system, a workflow definition may be designed by means of a computer terminal for designing connected over a network, and may be sent to the workflow server. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> In another aspect, the present invention may be understood as an information processor connected to a plurality of computer terminals for executing a workflow over a network. This information processor is characterized in that it can manage a workflow definition consisting of a plurality of nodes and paths connecting the nodes and a data definition referred to in the workflow definition as a project by project management means; manage a process that is a task unit of the workflow using a project managed by the project management means by process management means; and manage a user accessing the computer terminal based on the process managed by the process management means by user management means, and after a predetermined node has been processed by a computer terminal, the process management means determines whether a next node connected to the predetermined node by the path can be processed successively by the computer terminal or not, and outputs a determination thereof to the user management means. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The information processor can indicate appropriate processing to a computer terminal by determining whether consecutive processing is possible or not for a computer terminal connected over a network. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Specifically, if the determination at process management means indicates that the next node can be processed successively by the computer terminal, the user management means preferably sends a request to process the next node to the computer terminal. If the determination indicates that the next node cannot be processed successively by the computer terminal, the user management means preferably sends a list of objects which can be processed to the computer terminal. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> In yet another aspect, the present invention may also be understood as a method for workflow management according to a workflow definition consisting of a plurality of nodes and paths connecting the nodes. This method for workflow management includes the steps of: displaying a first process screen to a person in charge executing an activity assigned to a predetermined node; receiving processing based on the first process screen by a person in charge; and if an activity assigned to another node, for the start of which is prerequisite completion of the predetermined node, can be executed consecutively by a person in charge of the predetermined node, displaying a second process screen for processing the other node immediately after the first process screen. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> In this method for workflow management, when a person in charge processes a plurality of nodes consecutively, the person is relieved from burdens of having a list of standby nodes displayed that can be processed by the person in charge after completion of a first node, and selecting again a node to be processed. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Displaying a second process screen immediately after a first process screen means that screens directly involved in workflow processing will be displayed consecutively, and that a screen not directly involved in the processing may be displayed between the first process screen and the second process screen. For example, an indication that it is under processing or that it is in the standby condition may be displayed on the screen until the second process screen is displayed. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> In addition, the method for workflow management preferably includes a step of displaying a screen showing a list of objects which can be processed by the person in charge, if a node other than the other node is processed by the person in charge after completion of the predetermined node. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The present invention may also be understood as a method for workflow management in a workflow server connected to a plurality of computer terminals over a network. This method for management includes the steps of: receiving from outside a request to terminate processing of a node that is a task of a workflow; referring to the node definition; analyzing a next node for the start of which is prerequisite completion of processing of the node; determining whether a processing person for the node who has completed processing is a person available for processing the next node or not, and if the determination indicates that the person available for processing is the same person as the above-described person, requesting the processing person for the node to process the next node. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The present invention may also be understood as a program for managing a workflow to be executed by a computer. This program is characterized by making a computer execute the procedures of: receiving a request to terminate processing of a node which is a task of the workflow by receiving means; referring to the node definition by reference means; analyzing a next node for the start of which is prerequisite completion of processing of a node by analyzing means; determining whether a processing person of the node that has been completed is a person available for processing the next node or not by determination means; and if determination means determines that the person available for processing is the same person as the processing person, requesting the processing person of the node to process the next node. </paragraph>
<paragraph id="P-0029" lvl="7"><number>&lsqb;0029&rsqb;</number> Preferred Embodiment </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The present invention will be described with regard to the embodiments illustrated in accompanying drawings. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> First, main terms that will be used in the present embodiment will be listed for illustration below. <cross-reference target="DRAWINGS">FIG. 1</cross-reference>(A) and (B) are diagrams of an exemplary project (a process definition) showing a flow of the process for object tasks to be processed, <cross-reference target="DRAWINGS">FIG. 1</cross-reference>(A) showing an exemplary workflow definition and <cross-reference target="DRAWINGS">FIG. 1</cross-reference>(B) showing an exemplary data definition referred to in the workflow definition. </paragraph>
<paragraph id="P-0032" lvl="7"><number>&lsqb;0032&rsqb;</number> Workflow Definition </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> A definition of a workflow represented as a plurality of nodes (to be described in the following paragraph) and paths connecting the nodes. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> For example, as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>(A), a plurality of nodes are connected by paths indicated by arrows showing a processing order. In this case, an order of task processing in a workflow is indicated as paths. </paragraph>
<paragraph id="P-0035" lvl="7"><number>&lsqb;0035&rsqb;</number> Node </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> A unit to deal with a workflow definition. In <cross-reference target="DRAWINGS">FIG. 1</cross-reference>(A), a &ldquo;Node&rdquo; is shown as a circle. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> Specifically, in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>(A), an actual processing person and contents to be processed (activities to be described below) are assigned for each node and data input screen to be displayed to a person in charge is also assigned. </paragraph>
<paragraph id="P-0038" lvl="7"><number>&lsqb;0038&rsqb;</number> Activity </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> A description of each of actual tasks forming a logical step to be executed in a process, meaning one assigned to each node. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> For example, if a person in charge is assigned to a node, an activity corresponds to a content of a task to be executed by the person in charge. Specific examples for this case may include input and output of data performed by a person in charge on a data input screen assigned to a node. </paragraph>
<paragraph id="P-0041" lvl="7"><number>&lsqb;0041&rsqb;</number> Data Definition </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> A data definition that can be set and referred to in a process. A name of data, a type of data, and whether it is an array or not are defined. Types include character string type and numeric value type. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> As specific examples, &ldquo;String (character string type)&rdquo; is defined as a User ID and Name in a data definition shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>(B), while &ldquo;String &lsqb;&rsqb;&rdquo; is defined as Address and &ldquo;Integer (numeric value type)&rdquo; as </paragraph>
<paragraph id="P-0044" lvl="7"><number>&lsqb;0044&rsqb;</number> Age </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> In this embodiment, it is assumed that a single data definition is to be referred to at each node, and data exchanges required between processes also follow a path indicated with an arrow. However, a plurality of data definitions may exist, and different data exchanges may be defined by a path. </paragraph>
<paragraph id="P-0046" lvl="7"><number>&lsqb;0046&rsqb;</number> Data Attribute Definition </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> An attribute definition limiting a value hold by data, being a part of data definition. Attributes of character string type data may include limits on the number of characters, while attributes of numeric values may include range specification. </paragraph>
<paragraph id="P-0048" lvl="7"><number>&lsqb;0048&rsqb;</number> Project </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> A unit combining a workflow definition and a data definition, being different for each project. At an embodied level, this term can be replaced with &ldquo;process definition&rdquo;. In a workflow system, a project is identified by a definition ID affixed to an object for processing. When a project is determined, a workflow definition and a data definition to be applied to the object for processing are also determined. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> For example, there are various types of applications for an application task workflow such as a business trip application and a leave-claiming application, each type corresponding to a project. As processing method varies according to a type of applications, types of applications, i.e., a workflow definition and a data definition specific to each project are defined. While being processed, a project is determined by a definition ID affixed to an object for processing, i.e., a type of application is identified, and an object for processing is processed on the basis of a determined workflow definition and a data definition of a project. </paragraph>
<paragraph id="P-0051" lvl="7"><number>&lsqb;0051&rsqb;</number> Process </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> A task unit for a workflow. This is an embodiment of a project, and an individual workflow created from a project. As for a process, a task flows along with a pattern of paths represented by a workflow definition in the original project. And a data set represented by a data definition stores different contents for each process. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> For example, although &ldquo;Leave-Claiming Application for May&rdquo; and &ldquo;Leave-Claiming Application for June&rdquo; are different processes, with having different process ID&apos;s, &ldquo;Leave-Claiming Application for May&rdquo; and &ldquo;Leave-Claiming Application for June&rdquo; correspond to a common project called &ldquo;Leave-Claiming Application&rdquo;, being processed with a common workflow definition and a common data definition. If there are different process ID&apos;s, specific contents of data (for example, date or applicant) will vary even with a common pattern of path. Although this is an example of different processes with a common project, even different processes with different projects may be processed as objects for processing in a workflow system of the present invention. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> The embodiment will be described in detail in due order starting with a general configuration of the system. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a diagram showing a general configuration of a workflow system to which this embodiment of the invention is applied. A workflow system of the embodiment includes: a computer terminal for designing <highlight><bold>10</bold></highlight> to design a workflow; a computer terminal for operation of a workflow (information processing terminal) <highlight><bold>20</bold></highlight> provided to correspond to a person in charge of carrying out a task; and a workflow server (information processor) <highlight><bold>30</bold></highlight> to store various programs for executing a workflow. The computer terminal for designing <highlight><bold>10</bold></highlight>, the computer terminal for operation <highlight><bold>20</bold></highlight>, and the workflow server <highlight><bold>30</bold></highlight> are connected to each other to form a network. However, in this embodiment, the computer terminal for designing <highlight><bold>10</bold></highlight> may be omitted in a workflow system in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> In the workflow server <highlight><bold>30</bold></highlight>, a workflow system is defined to make a workflow processing possible. This definition allows a designer, for example, to design a flow of processes for a task to be processed and a data structure used in a process by means of a workflow designing function of the computer terminal for designing <highlight><bold>10</bold></highlight> that has a function of executing a task defined in advance (a defining function for providing a task processing in a workflow system) and to register the designed flow and the data structure in the workflow server <highlight><bold>30</bold></highlight> as a project in a workflow system. On this occasion, a definition ID that can uniquely identify a project is added to each project to be registered. Each task flow created from projects is a &ldquo;Process&rdquo; that is made up of activities, which are the processing for each person in charge. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> In defining a workflow system, designing is performed by arranging nodes and connecting paths between the nodes to set the processing order thereof. Attributes for nodes and paths can be provided here. A name of a node and an executing user to be in charge of it may be defined as an attribute of the node. Allocation types of executing users include: direct designation to input a user ID directly, relational designation with an indication of relationship with a processing user of another node (for example, a processing user&apos;s superior in predetermined node); job title designation to designate with a job title; role designation to designate with a role; group designation indicated with a group of users belonging to one organization (for example, reception section or accountant&apos;s department); and data reference designation designating a processing user by the value of data defined in a data definition as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>(B). As a path attribute, a condition of making a path effective is defined. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> Each person in charge inputs his/her own identification information to connect to a workflow system through the computer terminal for operation <highlight><bold>20</bold></highlight>. An activity for each person in charge is assigned to correspond to a node that is one of a workflow definition shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>(A). A person in charge displays activities assigned to him/her on a display of a computer terminal for operation <highlight><bold>20</bold></highlight> to execute processing designated by means of an interface such as a keyboard or a mouse. When processing completes, processing of a next activity will be assigned to a person in charge who can process following the paths in a workflow definition. For example, when a network of a workflow system uses Internet etc., a person in charge can perform a processing operation on a web browser made to appear on the computer terminal for operation <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is an illustration showing a general configuration of the workflow server <highlight><bold>30</bold></highlight>. The workflow server <highlight><bold>30</bold></highlight> of this embodiment includes a project management program <highlight><bold>31</bold></highlight>, a process management program <highlight><bold>32</bold></highlight>, a client request management program <highlight><bold>33</bold></highlight>, and a user management program <highlight><bold>34</bold></highlight> as management means. The workflow server <highlight><bold>30</bold></highlight> also includes a workflow definition storage unit <highlight><bold>35</bold></highlight>, a data definition storage unit <highlight><bold>36</bold></highlight>, a process storage unit <highlight><bold>37</bold></highlight>, a workflow status storage unit <highlight><bold>38</bold></highlight>, and a user information storage unit <highlight><bold>39</bold></highlight> as storage means that may be placed anywhere in a network where a processing of a workflow system is available. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> The project management program <highlight><bold>31</bold></highlight> stores and manages data associated with a workflow definition and a data definition of a project in the workflow definition storage unit <highlight><bold>35</bold></highlight> and data definition storage unit <highlight><bold>36</bold></highlight> respectively. Each project is identified by each definition ID. Each of registration of a new definition and modification of an existing definition is managed through the project management program <highlight><bold>31</bold></highlight> with a definition ID. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> The process management program <highlight><bold>32</bold></highlight> manages a process created by using a project definition. A process has a definition ID and a process ID for identifying each process from a plurality of processes created from a common definition. A process is managed in the process management program <highlight><bold>32</bold></highlight> with a combination of the definition ID and the process ID. The process storage unit <highlight><bold>37</bold></highlight> stores an activity in operation, a person in charge executing or to execute an activity, data used in a process. On completion of an activity, a next activity is assigned based on the above-described information. A person in charge of an activity also determines whether a next activity can be processed or not. Further, in each occurrence of events such as creation of a process, allocation of an activity, completion of a process, the process management program <highlight><bold>32</bold></highlight> writes a status of each event on the workflow status storage unit <highlight><bold>38</bold></highlight>. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> The client request management program <highlight><bold>33</bold></highlight> includes a function of receiving a request from a person in charge who uses the computer terminal for operation <highlight><bold>20</bold></highlight>. The client request management program <highlight><bold>33</bold></highlight> further includes functions of providing a list of work items (of which a person in charge is a user who can process or an executing user) currently assigned to a person in charge, as well as receiving an activity completion request from a person in charge and in turn sending to the process management program <highlight><bold>32</bold></highlight> as such. The client request management program <highlight><bold>33</bold></highlight> still further includes functions of receiving detailed information about a next activity which can be processed sent from a process management program <highlight><bold>32</bold></highlight>, and of requesting a person in charge to process consecutively a next activity. The client request management program <highlight><bold>33</bold></highlight> identifies and processes a person in charge and an object for processing according to a user ID and a process ID. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> The user management program <highlight><bold>34</bold></highlight> controls a person in charge who can take part in a workflow system. Therefore, user information is registered in the user information storage unit <highlight><bold>39</bold></highlight>, which the user management program <highlight><bold>34</bold></highlight> accesses as required. Specifically, when a new user wants to connect to the system through the computer terminal for operation <highlight><bold>20</bold></highlight>, an ID and a password input by the user are checked in the user management program <highlight><bold>34</bold></highlight>. Information such as an organization (group) that a user belongs to, hierarchy of an organization, a superior of a user, and classification of user&apos;s authority is stored in the user information storage unit <highlight><bold>39</bold></highlight>. Such information is referred to when the process management program <highlight><bold>32</bold></highlight> extracts data on a person available for processing of a next activity and determines whether a current processing person can process a next activity or not. Information to be referred to varies according to, for example, an attribute of a node within a workflow definition (name of a node, executing user, etc.) as shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>(A). </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Operation of the workflow system in this embodiment will now be described. <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is an illustration showing an example of a workflow of application processing in accordance with a registered project &ldquo;definition a&rdquo;. <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a diagram showing an example of a &ldquo;definition a&rdquo; registered in advance in the workflow definition storage unit <highlight><bold>35</bold></highlight> and the data definition storage unit <highlight><bold>36</bold></highlight> in the workflow server <highlight><bold>30</bold></highlight>. Here, it is assumed that a project &ldquo;definition a&rdquo; designed by a designer with the computer terminal for designing <highlight><bold>10</bold></highlight> has already been registered in the workflow definition storage unit <highlight><bold>35</bold></highlight> and a data definition storage unit <highlight><bold>36</bold></highlight> in the workflow server <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> A project &ldquo;definition a&rdquo; shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> will now be described with an example of a case of application processing workflow of a slip being defined. Specifically, a reception task may be assigned as Node A, an approval task B as Node B, and an approval task C as Node C. The project &ldquo;definition a&rdquo; is a definition ID meaning, for example, a type of application processing, specifically a leave-claiming application or a business trip application in such application processing. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> Once a slip has been submitted, processing starts in accordance with a workflow of a project &ldquo;definition a&rdquo;. First, Node A is assigned as an activity to a person who is substituted into data called User ID as a person in charge able to process (Person In Charge A as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>). When Person In Charge A wants to perform Node A, a list of work items as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is displayed on a screen of the computer terminal for operation <highlight><bold>20</bold></highlight> of Person In Charge A. In <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, &ldquo;No.&rdquo; refers to a process ID given to each slip, and &ldquo;contents&rdquo; refers to an activity. When Person In Charge A selects an object for processing of No. a001 (reception of an applied slip), a screen for receiving an applied slip as a reception task shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is displayed. Person In Charge A performs required processing on a screen as shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, selects between approved and rejected, and completes processing of Node A. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> When processing of Node A completes, each of Node B and Node C which has been registered as an activity next to Node A in &ldquo;definition a&rdquo; as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> becomes executable. A screen for Approval Task B as shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is displayed to a person in charge who can execute Node B, which will be processed in accordance with &ldquo;definition a&rdquo; shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> in the same manner as Node A. It is processed in the same manner for Node C. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> As shown in &ldquo;definition a&rdquo; in <cross-reference target="DRAWINGS">FIG. 5, a</cross-reference> person in charge who can execute Node B is defined to be either Person In Charge A or Person In Charge B. Now, a flow of a workflow system after completion of Node A will be described with reference to <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, where Person In Charge A is assumed to process as a processing person for each of Node A and Node B, which is an activity of &ldquo;definition a&rdquo;. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a flowchart showing a flow of a consecutive processing from the end of processing of a node to the beginning of processing of a next node that can be processed in the workflow server <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> First, when the workflow server <highlight><bold>30</bold></highlight> receives a request to terminate processing of Node A from a person in charge as shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference> (step S<highlight><bold>201</bold></highlight>), the server <highlight><bold>30</bold></highlight> refers to &ldquo;definition a&rdquo; including Node A as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> (step S<highlight><bold>202</bold></highlight>). </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> Then, to know whether each of Node B and Node C that is included in the referred &ldquo;definition a&rdquo;, and that is an activity which can be processed immediately after Node A are which can be processed after Node A, the server determines whether a consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>is longer than 0 or not (step S<highlight><bold>203</bold></highlight>). If a consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>is longer than 0, analysis of each of Node B and Node C that is an activity which can be processed next is made (step S<highlight><bold>204</bold></highlight>). If a consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>is instead 0, process of step S<highlight><bold>208</bold></highlight> to be described below is performed without analysis. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> Then a determination whether an analysis of an activity which can be processed after Node A has completed within the consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>or not (step S<highlight><bold>205</bold></highlight>) is made. As a consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>for Node A is three seconds as shown in <cross-reference target="DRAWINGS">FIG. 5, a</cross-reference> determination whether an analysis has completed within three seconds or not is made. If an analysis has not completed within a consecutive processing standby time t<highlight><subscript>1</subscript></highlight>, processing of step S<highlight><bold>208</bold></highlight> to be described below is performed. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> If an analysis has completed within a consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>instead in step S<highlight><bold>205</bold></highlight>, since contents to be analyzed contain data on a person in charge who can process an activity that can be processed next, a determination whether a processing person of Node A can be a person in charge of Node B and Node C or not is made based on this contents (step S<highlight><bold>206</bold></highlight>). As shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, it is defined that Person In Charge A can process Node B, while Person In Charge C is defined to process Node C. Then, the same processing person as that of Node A is requested to start processing Node B, of which a person in charge is determined to be the same person as a processing person of Node A, as an activity which can be processed next and the flow ends (step S<highlight><bold>207</bold></highlight>). Since Person In Charge C is defined to be able to execute Node C, a processing person of Node A is determined to be unable to process in step S<highlight><bold>206</bold></highlight>, so that processing of step S<highlight><bold>208</bold></highlight> to be described below will be performed. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> In the case where Node B is also processed, a next activity does not exist for Node B as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, with a consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>being set to 0. In such a case, a consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>is determined not longer than 0 in the above-described step S<highlight><bold>203</bold></highlight>, and then the workflow server <highlight><bold>30</bold></highlight> extracts activities that can be processed by a processing person and creates a list thereof (step S<highlight><bold>208</bold></highlight>). Then, the workflow server <highlight><bold>30</bold></highlight> sends the list to a computer terminal for operation <highlight><bold>20</bold></highlight> of a processing person, and requests a processing person to select an activity to be processed (step S<highlight><bold>209</bold></highlight>), and the consecutive processing completes. If it is determined &ldquo;No&rdquo; in steps S<highlight><bold>205</bold></highlight> and S<highlight><bold>206</bold></highlight>, the same processing as in steps S<highlight><bold>208</bold></highlight> and S<highlight><bold>209</bold></highlight> are also performed. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> Functions of the workflow server <highlight><bold>30</bold></highlight> in consecutive processing from the end of Node A to the beginning of Node B will now be described further in detail. <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a specific illustration of processing in the case where Node A and Node B can be processed successively. <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a diagram showing an exemplary state of a process performed in Node A. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> When Person In Charge A inputs that he/she will complete processing of Node A into a computer terminal for operation <highlight><bold>20</bold></highlight>, a computer terminal for operation <highlight><bold>20</bold></highlight> requests a workflow server <highlight><bold>30</bold></highlight> to terminate processing as shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>. Then the workflow server <highlight><bold>30</bold></highlight> receives the request to terminate processing from the computer terminal for operation <highlight><bold>20</bold></highlight>, specifically, receiving a definition ID, a User ID of a processing person having operated the computer terminal for operation <highlight><bold>20</bold></highlight>, a process ID of an activity, a type of each activity, and data along with the completion request in the client request management program execution unit <highlight><bold>330</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>. A type of each activity and data, etc. will be in turn sent from the client request management program execution unit <highlight><bold>330</bold></highlight> to the process management program execution unit <highlight><bold>320</bold></highlight> as a request to terminate processing. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> Next, the process management program execution unit <highlight><bold>320</bold></highlight> requests the project management program execution unit <highlight><bold>310</bold></highlight> to refer to a definition in accordance with a definition ID and types of each activity shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>. In response, the project management program execution unit <highlight><bold>310</bold></highlight> extracts a requested definition from a &ldquo;definition a&rdquo; stored in the workflow definition storage unit <highlight><bold>35</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> to return the definition back to the process management program execution unit <highlight><bold>320</bold></highlight>. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> The &ldquo;definition a&rdquo; sent to the process management program execution unit <highlight><bold>320</bold></highlight> here includes an activity to be processed next to Node A and a consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>for Node A as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. The process management program execution unit <highlight><bold>320</bold></highlight> sends the consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>to the client request management program execution unit <highlight><bold>330</bold></highlight>, and starts an analysis of an activity to be processed next as well as completion processing of Node A. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> The client request management program execution unit <highlight><bold>330</bold></highlight> that received a consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>enters a standby state without performing any processing during a consecutive processing standby time t<highlight><subscript>1</subscript></highlight>. Then, when termination process of Node A and an analysis of step S<highlight><bold>204</bold></highlight> have been completed by the process management program execution unit <highlight><bold>320</bold></highlight>, the process management program execution unit <highlight><bold>320</bold></highlight> sends a notification that processing has completed to the client request management program execution unit <highlight><bold>330</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, on receiving a notification that processing has completed within a consecutive processing standby time t<highlight><subscript>1</subscript></highlight>, the client request management program execution unit <highlight><bold>330</bold></highlight> exits a standby state to request the process management program execution unit <highlight><bold>320</bold></highlight> for a list of objects to be processed successively. In response, the process management program execution unit <highlight><bold>320</bold></highlight> sends a list of objects for consecutive processing to the client request management program execution unit <highlight><bold>330</bold></highlight>. Then the client request management program execution unit <highlight><bold>330</bold></highlight> sends a request for starting processing of objects for processing to the process management program execution unit <highlight><bold>320</bold></highlight>, which in turn notifies that it has entered a standby state to the client request management program execution unit <highlight><bold>330</bold></highlight>, which means either Person In Charge A or Person In Charge B can be a person in charge who can execute Node B as shown in a &ldquo;definition a&rdquo; illustrated in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. Therefore, writing the start of Node B processing into a workflow status storage unit <highlight><bold>38</bold></highlight> by Person In Charge A can prevent Person In Charge B from starting processing of Node B. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> In response to entering of the process management program execution unit <highlight><bold>320</bold></highlight> into a standby state, the client request management program execution unit <highlight><bold>330</bold></highlight> requests a processing person&apos;s computer terminal for operation <highlight><bold>20</bold></highlight> to process Node B, which is a next activity. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> As described above, after completion of Node A, Person In Charge A of Node A can proceed to processing of Node B. Therefore, immediately after the processing of Node A has terminated, a screen for approval task for Node B as shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is displayed on a computer terminal for operation <highlight><bold>20</bold></highlight> of Person In Charge A of Node A, who can proceed to processing of Node B immediately after Node A. Thus, actions including reselecting an object for processing from a list as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> displayed after processing of Node A has completed as in conventional technique can be dispensed with, thereby starting of processing Node B by Person In Charge A is simplified and operability is improved. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> Another case that Node B, which can be processed next, is cannot be processed will now be described. <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a specific illustration of processing in the case where Node A and Node B cannot be processed successively. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, processing proceeds in the same way as in <cross-reference target="DRAWINGS">FIG. 10</cross-reference> until the process management program execution unit <highlight><bold>320</bold></highlight> refers to a definition of the project management program execution unit <highlight><bold>310</bold></highlight> to send a consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>for Node A to the client request management program execution unit <highlight><bold>330</bold></highlight>. In <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, however, since completion processing (completion processing of Node A and analysis of each activity to be processed) consumes time too much to complete processing within a consecutive processing standby time t<highlight><subscript>1</subscript></highlight>. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> Then, the client request management program execution unit <highlight><bold>330</bold></highlight> recognizes that a notification that processing has completed has not been received within a consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>from the process management program execution unit <highlight><bold>320</bold></highlight>, thereby the client request management program execution unit <highlight><bold>330</bold></highlight> makes a request to a process management program execution unit <highlight><bold>320</bold></highlight> for a list of objects for processing. The process management program execution unit <highlight><bold>320</bold></highlight> in turn sends a list of objects for processing back to the client request management program execution unit <highlight><bold>320</bold></highlight>. Since processing has not been completed by the process management program execution unit <highlight><bold>320</bold></highlight>, it is clearly understood that Node B is not included in activities of a list of objects for processing. The client request management program execution unit <highlight><bold>330</bold></highlight> sends the received list of objects for processing to a computer terminal for operation <highlight><bold>20</bold></highlight> of a processing person in parallel with requesting a person in charge to select another object to be processed. Then, a person in charge who is determined not to process Node B consecutively will be free to perform the other tasks. Thus, when the workflow server <highlight><bold>30</bold></highlight> processes are slow, this embodiment may prevent a person in charge from waiting for an excessively long time by presetting a consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>in a project definition in a workflow system, as well as may prevent efficiency of task processing from decreasing by existence of a process for making a consecutive processing possible. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> A consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>is not necessarily provided in this embodiment. For example, if a workflow server <highlight><bold>30</bold></highlight> is not pressed for time in processing of tasks, or if it is estimated that activities should be processed by only one person as far as the person is able to process them consecutively, a request for processing a next activity may be made to a person in charge whenever a consecutive processing is possible without setting a consecutive processing standby time t<highlight><subscript>1</subscript></highlight>. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> A workflow system of this embodiment allows one person in charge to process efficiently a plurality of activities of an object to be processed with a common process ID consecutively without performing complex programming. A person in charge can continue with consecutive processing till a consecutive processing standby time t<highlight><subscript>1 </subscript></highlight>runs out or till his/her virtual process authority expires. Thus, in a workflow system of this embodiment, a person in charge can be changed dynamically for each activity in order to adapt to a situation independently of a project definition; for example a person in charge can be decided in accordance with a workload of each person in charge, so that processing can be performed efficiently. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> In particular, a person in charge available for processing may be flexibly defined for each activity such as direct definition, definition by relation, definition by job title, definition by role, definition by group, etc. These definitions may also be modified to adapt to a condition of workflow system processing, workload or the time of day. For example, in the case of definition by role, Mr./Ms. A may be defined to be registered for both role A and role B usually, and only for role B for busy times, so that work can be efficiently distributed in a workflow system. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> Even if processing method of a workflow system are subdivided into a plurality of nodes, processing can be dynamically changed for each node from parallel processing by a plurality of persons to consecutive processing by a single person without degrading processing efficiency. Therefore, efficient workflow system can be designed. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> In the above-described workflow system of this embodiment, although &ldquo;available for consecutive processing&rdquo; is set as an attribute of an activity in definition of a process, such an attribute can be set for a whole of a workflow system or as a project in order to set to determine whether a next node may be processed successively or not for each and every processing of nodes. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> In a workflow system in this embodiment, attributes can be dynamically changed as required by means of process design tools etc. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> A program executing a workflow described in this embodiment is stored in a storage medium for sale or other purposes, with a medium storing a program for executing the above-described process such as CD-ROM being a typical one. An example is also available in a form of a program being downloaded over a network. In this case, media include a medium used in a transmitter of a program or such a storage medium as hard disk storing a downloaded program. A program having been downloaded in such a storage medium can be read out by using, for example, a CD-ROM driver, which is input means. In addition, interface means (transmission means) that can serve as a program transmitter, and, for example, that can supply a program implementing an embodiment of the present invention in response to a download request from a computer terminal connected to Internet is preferably provided. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> Each configuration of the above-described embodiments may also be provided as an option or can be modified within the spirit of the invention as required. </paragraph>
<paragraph id="P-0094" lvl="7"><number>&lsqb;0094&rsqb;</number> Advantages of the Invention </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> As described above, when one person in charge performs a plurality of processes consecutively, efficient processing is possible according to a workflow system of the present invention.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> (A) and <highlight><bold>1</bold></highlight>(B) are diagrams of projects (process definition) showing a flow of processing in task objects; </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows a general configuration of a workflow system to which an embodiment of the present invention is applied; </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows a general configuration of a workflow server <highlight><bold>30</bold></highlight>; </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates an exemplary workflow of application processing in accordance with a registered project &ldquo;definition a&rdquo;; </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows an exemplary &ldquo;definition a&rdquo; registered in advance with a data definition storage unit <highlight><bold>36</bold></highlight> in the workflow server <highlight><bold>30</bold></highlight>; </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a screen showing a list of work items displayed to a person in charge; </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a screen for Reception Task displayed to a person in charge; </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a screen for Approval Task B displayed to a person in charge; </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a flowchart showing a flow of a consecutive processing from the end of processing of a node to the beginning of processing of a next node that can be processed; </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> specifically illustrates processing when Node A and Node B can be processed successively; </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows an example of states of a process performed in Node A; </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> specifically illustrates processing when Node A and Node B cannot be processed successively; </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> illustrates a flow of application processing; and </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> illustrates a conventional screen on a processing person&apos;s computer in an application processing shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF SYMBOLS </heading>
<paragraph id="P-0110" lvl="1"><number>&lsqb;0110&rsqb;</number> 10 . . . Computer terminal for designing </paragraph>
<paragraph id="P-0111" lvl="1"><number>&lsqb;0111&rsqb;</number> 20 . . . Computer terminal for operation (Information processing terminal) </paragraph>
<paragraph id="P-0112" lvl="1"><number>&lsqb;0112&rsqb;</number> 30 . . . Workflow server (Information processor) </paragraph>
<paragraph id="P-0113" lvl="1"><number>&lsqb;0113&rsqb;</number> 31 . . . Project management program </paragraph>
<paragraph id="P-0114" lvl="1"><number>&lsqb;0114&rsqb;</number> 32 . . . Process management program </paragraph>
<paragraph id="P-0115" lvl="1"><number>&lsqb;0115&rsqb;</number> 33 . . . Client request management program </paragraph>
<paragraph id="P-0116" lvl="1"><number>&lsqb;0116&rsqb;</number> 34 . . . User management program </paragraph>
<paragraph id="P-0117" lvl="1"><number>&lsqb;0117&rsqb;</number> 35 . . . Workflow definition storage unit </paragraph>
<paragraph id="P-0118" lvl="1"><number>&lsqb;0118&rsqb;</number> 36 . . . Data definition storage unit </paragraph>
<paragraph id="P-0119" lvl="1"><number>&lsqb;0119&rsqb;</number> 37 . . . Process storage unit </paragraph>
<paragraph id="P-0120" lvl="1"><number>&lsqb;0120&rsqb;</number> 38 . . . Workflow status storage unit </paragraph>
<paragraph id="P-0121" lvl="1"><number>&lsqb;0121&rsqb;</number> 39 . . . User information storage unit </paragraph>
<paragraph id="P-0122" lvl="1"><number>&lsqb;0122&rsqb;</number> 310 . . . Project management program execution unit </paragraph>
<paragraph id="P-0123" lvl="1"><number>&lsqb;0123&rsqb;</number> 320 . . . Process management program execution unit </paragraph>
<paragraph id="P-0124" lvl="1"><number>&lsqb;0124&rsqb;</number> 330 . . . Client request management program execution unit </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>) A workflow system for a plurality of users to execute a task in accordance with a predetermined workflow on a plurality of computer terminals connected to a network, the workflow system comprising: 
<claim-text>storage means of storing a workflow definition defining contents and a flow of a plurality of tasks, and information about a user who can process the task; and </claim-text>
<claim-text>determination means of determining whether a user in charge having processed a predetermined task is able to process a next task based on said information about the user stored in said storage means, wherein completion of processing of the predetermined task is prerequisite to the start of said next task. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>) The workflow system according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising request management means of requesting said user in charge to process said next task, if said determination means determines that said user in charge can process said next task. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>) The workflow system according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein said storage means stores a consecutive processing standby time for said task, and after said predetermined task processing has been completed by said user in charge, if said request management means determines that said user in charge can process said next task in said consecutive processing standby time for said predetermined task, said request management means requests the user in charge to process said next task. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>) A workflow system comprising: a workflow server for managing a workflow using a workflow definition consisting of a plurality of nodes and a path connecting the nodes; 
<claim-text>and a computer terminal, connected to said server over a network, said computer terminal for operation to execute an activity assigned to the nodes, wherein said computer terminal for operation sends a request to said workflow server in response to completion of an activity, said request being for terminate processing for a node corresponding to said activity, </claim-text>
<claim-text>if said node being requested to terminate processing and said next node defined in said workflow definition can be processed by one person in charge, said workflow server makes a request to process the next node to said computer terminal for operation of the person in charge. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>) The workflow system according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein said workflow definition defines a group of users as the persons in charge who can process said node. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>) The workflow system according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein after receiving said request to terminate processing, if said workflow server is ready to make said person in charge start processing said next node in a predetermined consecutive processing standby time, said workflow server makes a request to process said next node. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>) The workflow system according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein a computer terminal for designing a workflow definition and sending the workflow definition to said workflow server is connected to said workflow server over the network. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>) An information processor connected to a plurality of computer terminals for executing a workflow over a network said information processor, comprising: 
<claim-text>project management means of managing a workflow definition consisting of a plurality of nodes and paths connecting the nodes and a data definition referred to in the workflow definition as a project; </claim-text>
<claim-text>process management means of managing a process that is a task unit of said workflow using said project managed by said project management means; and </claim-text>
<claim-text>user management means of managing a user accessing said computer terminal based on said process managed by said process management means, wherein after a predetermined node has been processed by a computer terminal, said process management means determines whether a next node connected to the predetermined node by said path can be processed successively by the computer terminal, and outputs a determination thereof to said user management means. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>) The information processor according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein if said determination indicates that said next node can be processed successively by said computer terminal, said user management means sends a request to process said next node to said computer terminal. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>) The information processor according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein if said determination indicates that said next node cannot be processed successively by said computer terminal, said user management means sends a list of objects which can be processed to said computer terminal. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>) A method for workflow management according to a workflow definition consisting of a plurality of nodes and paths connecting the nodes, comprising the steps of: 
<claim-text>displaying a first process screen to a person in charge executing an activity assigned to a predetermined node; </claim-text>
<claim-text>receiving processing based on said first process screen by said person in charge; and </claim-text>
<claim-text>if an activity assigned to another node, for the start of which is prerequisite completion of said predetermined node, can be executed successively by a person in charge of the predetermined node, displaying a second process screen for processing said another node immediately after said first process screen. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>) The method for workflow management according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, further comprising a step of displaying a screen showing a list of objects which can be processed by the person in charge if a node other than said another node is to be processed by said person in charge after completion of said predetermined node. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>) A method for workflow management in a workflow server connected to a plurality of computer terminals over a network, comprising the steps of: 
<claim-text>receiving from outside a request to terminate processing of a node that is a task of said workflow; </claim-text>
<claim-text>referring to said node definition; </claim-text>
<claim-text>analyzing a next node for the start of which is defined to be prerequisite completion of processing of said node; </claim-text>
<claim-text>determining whether a processing person for said node who has completed processing is a person capable of processing said next node; and </claim-text>
<claim-text>if said determination indicates that said person capable of processing is the same person as said processing person, requesting said person for processing said node to process said next node. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>) The method for workflow management according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, comprising a step of displaying to said processing person an object which can be processed by said person for processing instead of comprising said step of requesting to process if the analysis has not completed in the maximum time for analysis predetermined in a definition for a node in said step of analyzing. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>) A computer product, in a computer readable medium, program for managing a workflow to be executed in a computer system, comprising: 
<claim-text>instructions for receiving a request to terminate processing of a node which is a task of said workflow; </claim-text>
<claim-text>instructions for referring to said node definition; </claim-text>
<claim-text>instructions for analyzing a next node, for the start of which is defined to be prerequisite completion of processing of said node; </claim-text>
<claim-text>instructions for determining whether a processing person of said node that has been completed is a person capable of processing said next node; and </claim-text>
<claim-text>instructions for requesting said processing person of said node to process said next node if said determination means determines that said person capable of processing is the same person as said processing person. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>) The computer product, in a computer readable medium, program according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the maximum time for analysis in which analysis is possible in said analyzing instructions is set in said node definition. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>) The computer product, in a computer readable medium, program according to <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein if said analyzing instructions has not been completed in said maximum time for analysis, a displaying procedure, is executed for displaying objects which can be processed by said processing person to said processing person instead of said requesting instructions.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>5</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004767A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004767A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004767A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004767A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004767A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004767A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004767A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004767A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004767A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004767A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004767A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030004767A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030004767A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030004767A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030004767A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
