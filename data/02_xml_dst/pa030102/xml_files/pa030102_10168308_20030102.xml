<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004638A1-20030102-D00000.TIF SYSTEM "US20030004638A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00001.TIF SYSTEM "US20030004638A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00002.TIF SYSTEM "US20030004638A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00003.TIF SYSTEM "US20030004638A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00004.TIF SYSTEM "US20030004638A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00005.TIF SYSTEM "US20030004638A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00006.TIF SYSTEM "US20030004638A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00007.TIF SYSTEM "US20030004638A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00008.TIF SYSTEM "US20030004638A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00009.TIF SYSTEM "US20030004638A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00010.TIF SYSTEM "US20030004638A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00011.TIF SYSTEM "US20030004638A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00012.TIF SYSTEM "US20030004638A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00013.TIF SYSTEM "US20030004638A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00014.TIF SYSTEM "US20030004638A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00015.TIF SYSTEM "US20030004638A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00016.TIF SYSTEM "US20030004638A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00017.TIF SYSTEM "US20030004638A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00018.TIF SYSTEM "US20030004638A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030004638A1-20030102-D00019.TIF SYSTEM "US20030004638A1-20030102-D00019.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004638</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10168308</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020620</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>99403281.1</doc-number>
</priority-application-number>
<filing-date>19991224</filing-date>
<country-code>EP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G01C021/30</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>701</class>
<subclass>211000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Navigation</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Jean-Stephane</given-name>
<family-name>Villers</family-name>
</name>
<residence>
<residence-non-us>
<city>Paris Cedex</city>
<country-code>FR</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Oliver</given-name>
<family-name>Gentilhomme</family-name>
</name>
<residence>
<residence-non-us>
<city>Paris Cedex</city>
<country-code>FR</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>ROSENTHAL &amp; OSHA L.L.P.</name-1>
<name-2></name-2>
<address>
<address-1>1221 MCKINNEY AVENUE</address-1>
<address-2>SUITE 2800</address-2>
<city>HOUSTON</city>
<state>TX</state>
<postalcode>77010</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
<international-conventions>
<pct-application>
<document-id>
<doc-number>PCT/IB00/02026</doc-number>
<document-date>20001222</document-date>
<country-code>WO</country-code>
</document-id>
</pct-application>
</international-conventions>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Apparatus and a method are disclosed for facilitating navigation between objects to be presented on a display, particularly objects defined in a document such as an HTML document, without use of a pointing device. Preferred embodiments are particularly suited to navigation between hyperlinks of a web page displayed by a receiver/decoder using arrow keys on a remote control. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The invention relates to navigating between a plurality of objects which are typically displayed on a screen and in preferred embodiments is concerned with navigating between or facilitating selection of objects defined in a document such as an HTML (or similar) document. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Hyper-text markup language (HTML) documents are well known and are commonly used for transmitting information over the Internet. Each document page may contain a number of active areas or objects which can be activated by moving a cursor over the object using a pointing device (such as a mouse) and clicking a button associated with the pointing device. Typical objects may include images, pop-up buttons, radio boxes, check boxes, pop-up lists, links to other documents, selectable text and data entry areas, among others. In general terms, there may be a variety of objects which are selectable or capable of receiving a focus and the invention is preferentially concerned with selection or navigation among such objects. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Pursuant to the invention, it has been proposed to display a document such as an HTML document (or similar) on a device which may not be equipped with a pointing device, particularly a receiver/decoder for a digital television system. The problem arises of navigating between the objects displayed on the screen. As used herein the term &ldquo;document&rdquo; is intended to encompass any data structure capable of defining or referencing a plurality of objects among which selection may be made or among which navigation may be performed; this need not be text encoded (as in HTML). The term &ldquo;receiver/decoder&rdquo; used herein may connote a receiver for receiving either encoded or non-encoded signals, for example, television and/or radio signals, which may be broadcast or transmitted by some other means. The term may also connote a decoder for decoding received signals. Embodiments of such receiver/decoders may include a decoder integral with the receiver for decoding the received signals, for example, in a &ldquo;set-top box&rdquo;, such a decoder functioning in combination with a physically separate receiver, or such a decoder including additional functions, such as a web browser, a video recorder, or a television. As used herein, the term &ldquo;digital television system&rdquo; includes for example any satellite, terrestrial, cable and other system. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> In an HTML (or similar) document, objects to be displayed are defined sequentially in the document. It has been proposed that a simple way to navigate between objects in such a document would be simply to step through the object definitions in the order in which they appear in the document. This has the benefit of being simple to implement and ensuring that all objects can be reliably traversed. One proposal is simply to assign an up or left arrow key to move up the list and a down or right arrow key to move down the list. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> A problem with this proposal, however, is that, although objects tend to be defined in a document in an order which broadly corresponds to the order in which they are displayed on the screen, there is no direct relation. Thus, whilst it is easy to define in computing terms what the &ldquo;next&rdquo; object is, navigation may not be intuitive for a user, who will simply have to step through a number of objects in what may appear to be an arbitrary order to find the desired one. This can be frustrating on pages with large numbers of objects. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> According to a first aspect of the present invention, there is provided a method of assigning a navigation order to a plurality of objects to be displayed at respective positions on a display comprising assigning objects to a plurality of defined directions based on the positions of the objects. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In this way, navigation may be more intuitive as it may be based on the position at which objects are displayed rather than the possibly somewhat arbitrary order in which the objects are defined in a document or the chronological order in which objects are displayed. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Preferably, objects are assigned to directions in (a preferably predetermined) order. This may enable a preference or priority between directions to be established so that the object assigned to a particular direction is dependent on the object(s) (if any) assigned to another direction in a preceding assignment step (if any). This may facilitate avoidance of assignment of objects to multiple directions and may facilitate selection of a &ldquo;sensible&rdquo; set of objects to be assigned to all available directions. However, objects may be assigned in parallel or concurrently to different directions, for example by a multi-threaded process. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Preferably, the assignment of objects to directions is such that all objects on a page can be accessed. This may entail assigning objects in a fashion which is not necessarily reversible. That is, moving in one direction and then moving in the opposite direction may not necessarily return to the initial object. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Preferably each object of interest can be accessed at least indirectly from any other object of interest. The term &ldquo;object of interest&rdquo; as used herein preferably connotes an object with which a user would conceivably choose to interact with or display. By having each object of interest potentially accessible from any other, pages can be browsed more efficiently. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> In more detail, the method preferably further comprises selecting a plurality of initial candidate objects from the plurality of objects, selecting from that plurality of candidate objects a set of accepted candidate objects and initially rejecting the remainder, determining whether at least one of the initially rejected candidate objects can be accessed from any accepted candidate object, and substituting the initially rejected candidate object for one of the initially accepted candidate objects if the initially rejected candidate object cannot be so accessed, whereby the initial rejection is reversed. Thus a wide range of existing methods of selecting acceptable candidate objects can be further refined. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Preferably, the method includes searching for initial candidate objects in each direction and selecting a chosen candidate object in each direction based on predetermined selection criteria. This can enable more natural selection of objects than simply finding the first available object in a given direction and may enable other factors to be taken into account. The selection criteria may include rules for distinguishing between initial candidate objects of differing sizes. The selection criteria may also include rules for distinguishing between initial candidate objects based on closeness to a preferred direction. The selection criteria may further include rules for distinguishing between initial candidate objects based on chosen candidate objects for one or more other directions. The rules may be implemented in a receiver/decoder using relatively basic instructions, for example, summing, subtracting and comparing using integer values, such that CPU resources required to run the implementation are maintained at a minimum. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The method preferably further comprises the step of determining whether or not an unchosen initial candidate object which was not initially assigned to any direction can be accessed from another chosen initial candidate object, and the step of assigning said unchosen initial candidate object to at least one of the directions if it cannot be so accessed. This can enable access to all of the objects of interest on a page. Preferably the features relating to chosen and unchosen candidate objects are equivalent to those relating to rejected and accepted candidates and vice versa. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The step of determining whether or not an unchosen initial candidate object can be accessed from another chosen initial candidate object preferably comprises determining whether or not the unchosen initial candidate object fulfills a particular positional relationship with respect to the chosen initial candidate objects. In particular, the step of determining whether or not an unchosen initial candidate object can be accessed from another chosen initial candidate object preferably comprises determining whether or not the unchosen initial candidate object lies substantially up, down, left or right of the chosen initial candidate object. This can provide a simple and fast method of determining whether or not a particular candidate can be accessed. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The objects will typically be referenced in a document, and preferably the objects are assigned to the plurality of defined directions substantially independently of the order in which the objects are referenced in the document. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> According to a second aspect, there is provided a method of assigning a navigation order to a plurality of objects to be displayed, which objects are referenced in a document, the method comprising assigning objects to a plurality of defined directions independently of the order in which the objects are referenced in the document to facilitate navigation. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Navigation may comprise stepping from one object to another, preferably based on at least one input signal indicating a direction of travel. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> According to a third aspect, there is provided a method of facilitating selection of one of a plurality of objects referenced in a document, the method comprising displaying the objects and stepping through the objects based on the position of the objects on the display. Stepping preferably occurs in response to user input, preferably specifying a direction in which to step. The method preferably further comprises selecting an object based on further user input. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> Preferably, the method comprises defining a current object and an object to be selected next (a target object) in each of a plurality of directions. Preferably the plurality of directions includes at least four substantially orthogonal directions, more preferably up, down, left, right. Preferably, each direction has a button or other command input associated with it (for example arrow keys on a remote control). The invention is not limited to use of input keys and, in a development, the directions could be selected by means of voice or other commands or by detecting physical movement of a control device. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The method preferably includes highlighting the current object and preferably also (or instead) includes indicating which object is assigned to each direction, preferably in a different manner to the highlighting, for example by means of an arrow or other highlighting. The method may comprise indicating a target object. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> In a related aspect there is also provided a method of facilitating navigation between a plurality of objects referenced in a document, the method comprising selecting a plurality of initial candidate objects from the plurality of objects, selecting from that plurality of candidate objects a set of accepted candidate objects and initially rejecting the remainder, determining whether at least one of the initially rejected candidate objects can be accessed from any accepted candidate object, and substituting the initially rejected candidate object for one of the initially accepted candidate objects if the initially rejected candidate object cannot be so accessed. The method may further comprise the step of assigning the set of accepted candidate objects to directions. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Preferably, in addition to a plurality of &ldquo;planar&rdquo; directions (such as, for example, up, down, left, right), navigation may include ascending or descending a level of hierarchy or following a hyper-link, preferably by means of &ldquo;enter&rdquo; and &ldquo;exit&rdquo; or equivalent commands. This may facilitate traversing of frames and compound objects such as lists. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Preferably, in the case of a list (or other group of objects), the entire list (or group) may be traversed as a single entity at a first level (that is, the entire list may be selected as a single object) and individual items (or sub-groups of items) may be traversed at a second level. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> In other words, an object comprising further objects may be traversed as a single entity at a first level and the further objects may be traversed at a second level, the object preferably being a list, frame or image map, and the further objects being entries in the list, objects within the frame and regions within the image map respectively. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Similarly, preferably in the case of a document displayed as a plurality of frames, entire frames may be traversed at a first level and objects within each frame may be traversed at a second level. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Preferably, in the case of navigating a document displayed as a plurality of frames, navigation is arranged so that, on reaching the furthest object in a given direction (for example leftmost, rightmost, uppermost, lowermost) within a frame, further travel in the given direction results in selection of the next frame in the given direction. Preferably, selection of the next frame further results in selection of the first object encountered in the frame in the given direction. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The method may include defining a starting object, preferably without requiring user selection of an object, preferably according to a predefined rule, for example the top-left most object to be displayed. Preferably exactly one object is selected and has focus by default in the absence of further selection by a user. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The method preferably further comprises classifying the plurality of objects into primary and secondary candidate objects, with respect to a or the current object. The step of classifying the plurality of objects preferably comprises determining whether or not each object fulfills a particular positional relationship with respect to the current object. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The invention extends to corresponding apparatus aspects and preferably the method is implemented in a receiver/decoder; the invention extends to a receiver/decoder arranged to implement a method according to any of the above aspects. In such a case, the receiver/decoder preferably has a remote control and keys of the remote control are assigned to directions. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> In a first apparatus aspect, the invention provides apparatus for assigning a navigation order to a plurality of objects to be displayed at respective positions on a display comprising means (for example an assignment processor) for assigning objects to a plurality of defined directions based on the positions of the objects. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> In a related aspect, the invention provides apparatus for assigning a navigation order to a plurality of objects to be displayed at respective positions on a display, comprising a processor programmed to assign objects to a plurality of defined directions based on the positions of the objects. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Preferably the apparatus includes a memory for storing a representation of the plurality of objects which are to be displayed. The plurality of objects may be, for example, objects which are referenced in a document, which document may be stored in the memory. Preferably the apparatus further comprises means (such as a graphic output stage, which may comprise a graphic processor) for outputting a signal to the display for displaying the plurality of objects. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> According to a second apparatus aspect, there is provided apparatus for assigning a navigation order to a plurality of objects to be displayed, which objects are referenced in a document, the apparatus comprising means (for example an assignment processor) for assigning objects to a plurality of defined directions independently of the order in which the objects are referenced in the document to facilitate navigation. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> In a related aspect there is provided apparatus for assigning a navigation order to a plurality of objects to be displayed, which objects are referenced in a document, the apparatus comprising a processor programmed to assign objects to a plurality of defined directions independently of the order in which the objects are referenced in the document to facilitate navigation. Preferably the apparatus includes a memory for storing (or in which is stored) a representation of the document. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> According to a third aspect, there is provided apparatus for facilitating selection of one of a plurality of objects referenced in a document, the apparatus comprising means (for example a display or display processor) for displaying the objects and stepping through the objects based on the position of the objects on the display. The apparatus preferably has means (for example an input device such as a remote control) for receiving user input and for stepping in response to user input, the user input preferably specifying a direction in which to step. The apparatus preferably further comprises means (for example a selection processor) for selecting an object based on further user input. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> In a related aspect there is provided apparatus for facilitating selection of one of a plurality of objects referenced in a document, the apparatus comprising means (such as memory) for storing a representation of the document, means (for example a graphic output stage which may comprise a graphic or display processor) for outputting the representation of the document to a display (for display on the display), and means (for example, a suitably programmed processor) for stepping through the objects based on the position on which objects are to be displayed on the display. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> The apparatus may include a button or other command input associated with it (for example arrow keys on a remote control). </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The apparatus preferably includes means (for example a highlight display processor) for highlighting the current object and preferably also (or instead) includes means (for example a target display processor) for indicating which object is assigned to each direction, preferably in a different manner to the highlighting, for example by means of an arrow or other highlighting. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Preferably, the apparatus includes means (for example a search engine) for searching for initial candidate objects in each direction and selecting a chosen candidate object in each direction based on predetermined selection criteria. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> The apparatus preferably comprises means (typically in the form of a processor) for assigning objects to directions, such means being adapted to allow all objects of interest on a page to be accessed. Each object of interest can preferably be accessed at least indirectly from any other object of interest. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Preferably the apparatus further comprises means (typically in the form of a determining processor) for determining whether or not an unchosen initial candidate object which was not initially assigned to any direction can be accessed from another chosen initial candidate object, and means (typically in the form of the same or a further processor) for assigning said unchosen initial candidate object to at least one of the directions if it cannot be so accessed. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The means for determining whether or not an unchosen initial candidate object can be accessed from another chosen initial candidate object preferably comprises means (for example, a determining processor) for determining whether or not the unchosen initial candidate object fulfills a particular positional relationship with respect to the chosen initial candidate objects. More specifically, the means for determining whether or not an unchosen initial candidate object can be accessed from another chosen initial candidate object may comprise means (for example, a determining processor) for determining whether or not the unchosen initial candidate object lies substantially up, down, left or right of the chosen initial candidate object. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> The apparatus may include means (for example a starting object selector) for defining a starting object, preferably without requiring user selection of an object, preferably according to a predefined rule, for example the top-left most object to be displayed. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> Preferably the apparatus further comprises means for selecting a plurality of initial candidate objects from the plurality of objects, means for selecting from that plurality of candidate objects a set of accepted candidate objects and initially rejecting the remainder, means for determining whether at least one of the initially rejected candidate objects can be accessed from any accepted candidate object, and means for substituting the initially rejected candidate object for one of the initially accepted candidate objects if the initially rejected candidate object cannot be so accessed. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> This feature is also provided independently. Accordingly, in a related aspect there is also provided apparatus for facilitating navigation between a plurality of objects referenced in a document, comprising means (typically in the form of a selecting processor) for selecting a plurality of initial candidate objects from the plurality of objects, means (typically in the form of the same or a further selecting processor) for selecting from that plurality of candidate objects a set of accepted candidate objects and initially rejecting the remainder, means (for example a determining processor) for determining whether at least one of the initially rejected candidate objects can be accessed from any accepted candidate object, and means (typically in the form of the same or a further processor) for substituting the initially rejected candidate object for one of the initially accepted candidate objects if the initially rejected candidate object cannot be so accessed. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The apparatus may comprise means (typically in the form of a processor) for classifying the plurality of objects into primary and secondary candidate objects, with respect to a or the current object, the means for classifying the plurality of objects preferably comprising means (typically in the form of the same or a further processor) for determining whether or not each object fulfills a particular positional relationship with respect to the current object. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> The various processors mentioned above as examples of suitable means may be integrated into a single processor and implemented by appropriate sub-components or by software running on the processor. In a preferred implementation, most or all apparatus features are provided by appropriate software running on a hardware platform including a processor, memory and a display generator. The processor preferably provides an execution environment for running an application, for example, by providing an operating system on which the application can run, or by providing a virtual machine on which the application can run. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> In further aspects, the invention provides a computer program product or computer readable means including instructions for performing a method according to any of the above method aspects. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> In another aspect, the invention provides a signal embodying instructions for performing a method according to any of the above method aspects. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> The invention further provides apparatus or a method substantially as any one herein described with reference to or as illustrated in the accompanying figures or any figure, particularly <cross-reference target="DRAWINGS">FIG. 4</cross-reference> onwards. </paragraph>
</summary-of-invention>
<brief-description-of-drawings>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> An embodiment of the invention will now be described, with reference to the accompanying drawings, in which:&mdash;</paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows an overview of a typical digital television system; </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of a receiver/decoder; </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows the architecture of a receiver/decoder; </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates an example of an implementation according to a preferred embodiment; </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrate four principle priority zones according to a preferred embodiment; </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> illustrates definition of a North East non-priority zone according to a preferred embodiment; </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> illustrates definition of a North West non-priority zone according to a preferred embodiment; </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> illustrates definition of a South East non-priority zone according to a preferred embodiment; </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> illustrates definition of a South West non-priority zone according to a preferred embodiment; </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> illustrates selection between objects at differing distances according to a preferred embodiment; </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> illustrate selection between objects at differing heights according to a preferred embodiment; </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> illustrates selection of a centre candidate objects in an upper or lower priority zone according to a preferred embodiment; </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> illustrates selection of a left candidate objects in an upper or lower priority zone according to a preferred embodiment; </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> illustrates selection of a right candidate objects in an upper or lower priority zone according to a preferred embodiment; </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> illustrate rules for selection among left right and centre candidates according to a preferred embodiment; </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> illustrates selection of secondary candidates according to a preferred embodiment; </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> illustrates selection between overlapping objects according to a preferred embodiment; </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> illustrate further control of North and South candidates according to a preferred embodiment; </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> illustrates navigation through a typical document according to a preferred embodiment; </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> illustrates the process of selecting candidate objects according to a preferred embodiment; </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> illustrates a first step in the process of selecting candidate objects according to a preferred embodiment; </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> illustrates a second step in the process of selecting candidate objects according to a preferred embodiment; </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> illustrates a third step in the process of selecting candidate objects according to a preferred embodiment; </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> illustrates the process of selecting candidate objects according to a variant of the preferred embodiment; </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> illustrates a fourth step in the process of selecting candidate objects according to a preferred embodiment; and </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> illustrates a fifth step in the process of selecting candidate objects according to a preferred embodiment.</paragraph>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> By way of background, there will now be described a receiver/decoder for a digital television system, which is the preferred application of the invention; the invention may be employed in other devices, however, for example personal or hand held or laptop computers or other communication devices. </paragraph>
<section>
<heading lvl="1">OVERVIEW OF A DIGITAL TELEVISION SYSTEM </heading>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> An overview of a digital television system <highlight><bold>1</bold></highlight> is shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The invention includes a mostly conventional digital television system <highlight><bold>2</bold></highlight> which uses the known MPEG-2 compression system to transmit compressed digital signals. In more detail, MPEG-2 compressor <highlight><bold>3</bold></highlight> in a broadcast centre receives a digital signal stream (typically a stream of video signals). The compressor <highlight><bold>3</bold></highlight> is connected to a multiplexer and scrambler <highlight><bold>4</bold></highlight> by linkage <highlight><bold>5</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> The multiplexer <highlight><bold>4</bold></highlight> receives a plurality of further input signals, assembles the transport stream and transmits compressed digital signals to a transmitter <highlight><bold>6</bold></highlight> of the broadcast centre via linkage <highlight><bold>7</bold></highlight>, which can of course take a wide variety of forms including telecommunications links. The transmitter <highlight><bold>6</bold></highlight> transmits electromagnetic signals via uplink <highlight><bold>8</bold></highlight> towards a satellite transponder <highlight><bold>9</bold></highlight>, where they are electronically processed and broadcast via notional downlink <highlight><bold>10</bold></highlight> to earth receiver <highlight><bold>12</bold></highlight>, conventionally in the form of a dish owned or rented by the end user. Other transport channels for transmission of the data are of course possible, such as terrestrial broadcast, cable transmission, combined satellite/cable links, telephone networks etc. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> The signals received by receiver <highlight><bold>12</bold></highlight> are transmitted to an integrated receiver/decoder <highlight><bold>13</bold></highlight> owned or rented by the end user and connected to the end user&apos;s television set <highlight><bold>14</bold></highlight>. The receiver/decoder <highlight><bold>13</bold></highlight> decodes the compressed MPEG-2 signal into a television signal for the television set <highlight><bold>14</bold></highlight>. Although a separate receiver/decoder is shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the receiver/decoder may also be part of an integrated digital television. As used herein, the term &ldquo;receiver/decoder&rdquo; includes a separate receiver/decoder, such as a set-top box, and a television having a receiver/decoder integrated therewith. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> In a multichannel system, the multiplexer <highlight><bold>4</bold></highlight> handles audio and video information received from a number of parallel sources and interacts with the transmitter <highlight><bold>6</bold></highlight> to broadcast the information along a corresponding number of channels. In addition to audiovisual information, messages or applications or any other sort of digital data may be introduced in some or all of these channels interlaced with the transmitted digital audio and video information. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> A conditional access system <highlight><bold>15</bold></highlight> is connected to the multiplexer <highlight><bold>4</bold></highlight> and the receiver/decoder <highlight><bold>13</bold></highlight>, and is located partly in the broadcast centre and partly in the receiver/decoder. It enables the end user to access digital television broadcasts from one or more broadcast suppliers. A smartcard, capable of deciphering messages relating to commercial offers (that is, one or several television programmes sold by the broadcast supplier), can be inserted into the receiver/decoder <highlight><bold>13</bold></highlight>. Using the receiver/decoder <highlight><bold>13</bold></highlight> and smartcard, the end user may purchase commercial offers in either a subscription mode or a pay-per-view mode. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> An interactive system <highlight><bold>16</bold></highlight>, also connected to the multiplexer <highlight><bold>4</bold></highlight> and the receiver/decoder <highlight><bold>13</bold></highlight> and again located partly in the broadcast centre and partly in the receiver/decoder, enables the end user to interact with various applications via a modemmed back channel <highlight><bold>17</bold></highlight>. The modemmed back channel may also be used for communications used in the conditional access system <highlight><bold>15</bold></highlight>. </paragraph>
</section>
<section>
<heading lvl="1">Receiver/Decoder </heading>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the various elements of receiver/decoder <highlight><bold>13</bold></highlight> will now be described in terms of functional blocks. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> The receiver/decoder <highlight><bold>13</bold></highlight>, which may be, for example, a digital set-top box (DSTB), comprises a central processor <highlight><bold>220</bold></highlight> including associated memory elements and adapted to receive input data from a serial interface <highlight><bold>221</bold></highlight>, a parallel interface <highlight><bold>222</bold></highlight>, a modem <highlight><bold>223</bold></highlight> (connected to the modem back channel <highlight><bold>17</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>), and switch contacts <highlight><bold>224</bold></highlight> on the front panel of the decoder. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> The receiver/decoder is additionally adapted to receive inputs from an infra-red remote control <highlight><bold>225</bold></highlight> via a control unit <highlight><bold>226</bold></highlight> and also possesses two smartcard readers <highlight><bold>227</bold></highlight>, <highlight><bold>228</bold></highlight> adapted to read bank and subscription smartcards <highlight><bold>242</bold></highlight>, <highlight><bold>240</bold></highlight> respectively. The subscription smartcard reader <highlight><bold>228</bold></highlight> engages with an inserted subscription card <highlight><bold>240</bold></highlight> and with a conditional access unit <highlight><bold>229</bold></highlight> to supply the necessary control word to a demultiplexer/descrambler <highlight><bold>230</bold></highlight> to enable the encrypted broadcast signal to be descrambled. The decoder also includes a conventional tuner <highlight><bold>231</bold></highlight> and demodulator <highlight><bold>232</bold></highlight> to receive and demodulate the satellite transmission before being filtered and demultiplexed by the unit <highlight><bold>230</bold></highlight>. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> As used in this description, an application is preferably a piece of computer code for controlling high level functions of preferably the receiver/decoder <highlight><bold>13</bold></highlight>. For example, when the end user positions the focus of remote control <highlight><bold>225</bold></highlight> on a button object seen on the screen of the television set <highlight><bold>14</bold></highlight> and presses a validation key, the instruction sequence associated with the button is run. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> An interactive application proposes menus and executes commands at the request of the end user and provides data related to the purpose of the application. Applications may be either resident applications, that is, stored in the ROM (or FLASH or other non-volatile memory) of the receiver/decoder <highlight><bold>13</bold></highlight>, or broadcast and downloaded into the RAM or FLASH memory of the receiver/decoder <highlight><bold>13</bold></highlight>. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> Applications are stored in memory locations in the receiver/decoder <highlight><bold>13</bold></highlight> and represented as resource files. The resource files comprise graphic object description unit files, variables block unit files, instruction sequence files, application files and data files, as described in more detail in the above-mentioned patent specifications. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> The receiver/decoder contains memory divided into a RAM volume, a FLASH volume and a ROM volume, but this physical organization is distinct from the logical organization. The memory may further be divided into memory volumes associated with the various interfaces. From one point of view, the memory can be regarded as part of the hardware; from another point of view, the memory can be regarded as supporting or containing the whole of the system shown apart from the hardware. </paragraph>
</section>
<section>
<heading lvl="1">Architecture of Receiver/Decoder </heading>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> The receiver/decoder contains five software layers, organised so that the software can be implemented in any receiver/decoder and with any operating system. Referring to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the various software layers are Application Layer <highlight><bold>50</bold></highlight>, Application Programming Interface (API) layer <highlight><bold>52</bold></highlight>, Virtual Machine Layer <highlight><bold>54</bold></highlight>, Device Layer <highlight><bold>56</bold></highlight> and System Software/Hardware Layer <highlight><bold>58</bold></highlight>. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> The Application Layer <highlight><bold>50</bold></highlight> encompasses applications which are either resident in or downloaded to the receiver/decoder. They may be interactive applications used by customers, written in, for example, Java, HTML, MHEG-5 or other languages, or they may be applications used by the receiver/decoder to run such applications. This layer is based on a set of open Application Programming Interfaces (APIs) provided by the Virtual Machine layer. This system allows applications to be downloaded to flash or RAM memory in the receiver/decoder on-the-fly or on demand. The application code can be transmitted in compressed or uncompressed format using protocols such as Data Storage Media Command and Control (DSMCC), Network File Server (NFS) or other protocols. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> Interactive applications are applications which the user interacts with, for example, to obtain products and services, such as electronic program guides, telebanking applications and games. The following resident applications are used to manage interactive applications: </paragraph>
<paragraph id="P-0095" lvl="2"><number>&lsqb;0095&rsqb;</number> Boot. The Boot application <highlight><bold>60</bold></highlight> is the first application launched when the receiver/decoder is powered on. The Boot application starts the different &ldquo;Managers&rdquo; in the Virtual Machine, the first being the Application Manager <highlight><bold>62</bold></highlight>. </paragraph>
<paragraph id="P-0096" lvl="2"><number>&lsqb;0096&rsqb;</number> Application Manager. The Application Manager <highlight><bold>62</bold></highlight> manages the interactive applications which are run in the receiver/decoder, that is, it starts, stops, suspends, resumes, handles events and deals with communication between applications. It allows multiple applications to run at once, and thus is involved in the allocation of resources among them. This application is completely transparent to the user. </paragraph>
<paragraph id="P-0097" lvl="2"><number>&lsqb;0097&rsqb;</number> SetUp. The purpose of the SetUp application <highlight><bold>64</bold></highlight> is to configure the receiver/decoder, primarily the first time it is used. It performs actions such as scanning for T.V. channels, setting the date and time, establishing user preferences, and so on. However, the SetUp application can be used at any time by the user to change the receiver/decoder configuration. </paragraph>
<paragraph id="P-0098" lvl="2"><number>&lsqb;0098&rsqb;</number> Zapping. The Zapping application <highlight><bold>68</bold></highlight> is used to change channels using the Program-up, Program-down and numeric keys. When another form of zapping is used, for example, through a banner (pilot) application, the Zapping application is stopped. </paragraph>
<paragraph id="P-0099" lvl="2"><number>&lsqb;0099&rsqb;</number> Callback. The Callback application is used to extract the values of various parameters stored in the receiver/decoder memory and return these values to the commercial operator via modemmed back channel <highlight><bold>17</bold></highlight>, or by other means. </paragraph>
<paragraph id="P-0100" lvl="2"><number>&lsqb;0100&rsqb;</number> Web-browser. This is used to receive and display web-pages which may be sent as HTML code or similar via the modem or the digital television signal. The application includes or is linked to the navigation tool to be described below, to enable navigation of web pages by means of arrow keys or similar on the remote control for the receiver/decoder. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> The API layer <highlight><bold>52</bold></highlight> provides high-level utilities for interactive application development. It includes several packages which make up this high-level API. The packages provide all the functionality necessary to run interactive applications. The packages are accessible by the applications. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> In a preferred embodiment the API is adapted to run applications written in the Java programming language. Furthermore, it can interpret HTML and other formats, such as MHEG-5. Besides these interpreters, it also includes other packages and service modules which are detachable and extensible as requirements dictate. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> The Virtual Machine layer <highlight><bold>54</bold></highlight> is composed of language interpreters and various modules and systems. It consists of everything necessary to receive and execute interactive applications in the receiver/decoder. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> The Device Interface layer <highlight><bold>56</bold></highlight> includes a Device Manager and devices. Devices are software modules which consist of the logical resources necessary for management of external events and physical interfaces. The Device Layer manages communication channels between drivers and applications and provides enhanced error exception checking. Some examples of managed devices are: card readers, modems, network, PCMCIA (Personal Computer Memory Card International Association), LED display and so on. Programmers do not have to deal with this layer directly, since the API layer controls the devices from above. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> The System Software/Hardware layer <highlight><bold>58</bold></highlight> is provided by the manufacturer of the receiver/decoder. Because of the modularity of the system and because services supplied by the OS (such as event scheduling and memory management) are part of the Virtual Machine, the higher layers are not tied to a particular real-time operating system (RTOS) or to a particular processor. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> As stated above, the receiver/decoder includes an application for displaying web pages, for example received as HTML code from the digital television signal or from the modem, the application including code for highlighting hyperlinks and other objects capable of receiving the focus in the web page. This includes, or is linked to the navigation tool to be described, to facilitate browsing using a remote control or other input device (not shown) associated with the receiver/decoder. </paragraph>
</section>
<section>
<heading lvl="1">Embodiment of Navigation Method&mdash;Navigation Tool </heading>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> The preferred embodiment of the navigation tool is a minimal system with a remote control, where the user may access every frame in an HTML (or similar) document, and every link within each frame, while at the same time respecting the structure of the document. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> By way of background, HTML documents define various objects, examples of which follow (most particularly hyperlinks) which are capable of &ldquo;receiving focus&rdquo;, that is being highlighted (in a conventional arrangement, by moving a mouse pointer over or near the object) and then subsequently actuated or selected (in a conventional arrangement, by clicking a mouse button) to cause a jump to the hyperlink or other defied action. In the following, it is to be understood that there may be a current object which has the focus and a plurality of target or candidate objects which may receive the focus in response to a move command. On receipt of an enter or other actuation command, the object having the focus at the time will be actuated, for example a jump will be made to the corresponding hyperlink. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> It will be noted that, in the preferred embodiment, there will normally be one object (the current object) which has the focus, whereas in a conventional arrangement, there may be no objects which have the focus, focus only being assigned when a pointer is over an object. The feature of having a default object having the focus may be independently provided, as may the feature of providing a starting object having the focus without requiring user selection of an object. The starting object may be selected according to a predetermined algorithm, for example to determine an approximately middlemost object on a page or may simply be the first or top left object displayed. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> In a preferred implementation, six interface elements are used to provide movement from within an HTML document. There are four controls to move up, down, left and right within the document. In this description, the directions up, down, right and left and (respectively) North, South, East and West are used interchangeably (except where explicitly stated or where the context requires otherwise) to refer to directions on an essentially planar display and are not to be construed as limited to any particular orientation either geographically or with respect to a user. Two other controls allow movement up and down the document hierarchy or to give the focus to complex objects within the document, to allow the editing of Text Field objects, for example. The different actions which are available are: </paragraph>
<paragraph id="P-0111" lvl="2"><number>&lsqb;0111&rsqb;</number> Movement to the left </paragraph>
<paragraph id="P-0112" lvl="2"><number>&lsqb;0112&rsqb;</number> Movement to the right </paragraph>
<paragraph id="P-0113" lvl="2"><number>&lsqb;0113&rsqb;</number> Movement upward </paragraph>
<paragraph id="P-0114" lvl="2"><number>&lsqb;0114&rsqb;</number> Movement downward </paragraph>
<paragraph id="P-0115" lvl="2"><number>&lsqb;0115&rsqb;</number> Climbing a level in the document hierarchy, or &lsquo;exiting&rsquo; a complex hyperlink </paragraph>
<paragraph id="P-0116" lvl="2"><number>&lsqb;0116&rsqb;</number> Descending a level in the document hierarchy, or &lsquo;entering&rsquo; a complex hyperlink </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> Any remote control or input device capable of providing these six distinguishable inputs to the navigation tool may be used, so the remote control will not be described in detail. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> Navigation in an HTML document is effected from active object to active object. If there is no candidate active object available in the selected direction, a scrolling of the document will be triggered in order to display objects possibly contained in the document but not presently displayed (this is a preferred feature, which may be provided independently). If the document cannot be scrolled, the navigation attempts to proceed to a parent object; that is, it climbs to an HTML document at a higher level in the document hierarchy. In a variant of the preferred embodiment, the navigation and scrolling features are separated, subject to user configuration. This separation of features can afford greater flexibility and customisation. </paragraph>
</section>
<section>
<heading lvl="1">Definition of the Navigable Elements in an HTML Document </heading>
<paragraph id="P-0119" lvl="7"><number>&lsqb;0119&rsqb;</number> Frames </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> Frames consist of an HTML document, and may contain other frames which are usually objects which may be navigated through. The following table lists actions which are undertaken in response to respective controls.  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="35PT" align="left"/>
<colspec colname="2" colwidth="168PT" align="left"/>
<thead>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry>Control</entry>
<entry>Action</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>Left</entry>
<entry>Move to the frame to the left of the current frame</entry>
</row>
<row>
<entry></entry>
<entry>Right</entry>
<entry>Move to the frame to the right of the current frame</entry>
</row>
<row>
<entry></entry>
<entry>Up</entry>
<entry>Move to the frame above the current frame</entry>
</row>
<row>
<entry></entry>
<entry>Down</entry>
<entry>Move to the frame below the current frame</entry>
</row>
<row>
<entry></entry>
<entry>Enter</entry>
<entry>Select the first hyperlink in the current frame</entry>
</row>
<row>
<entry></entry>
<entry>Exit</entry>
<entry>Lose the focus and give the focus to the parent object</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0121" lvl="7"><number>&lsqb;0121&rsqb;</number> Hyperlinks </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> There exist three types of hyperlinks: </paragraph>
<paragraph id="P-0123" lvl="7"><number>&lsqb;0123&rsqb;</number> IsMap Hyperlinks </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> These consist of an image. A cursor is placed over the image and can be moved within the boundaries of the image. The selection of this type of hyperlink leads to the despatch of a request containing the associated URL (an associated link to another object) and the current cursor position. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> The following table lists actions which are undertaken in response to respective controls to navigate between IsMap hyperlinks.  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="35PT" align="left"/>
<colspec colname="2" colwidth="168PT" align="left"/>
<thead>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry>Control</entry>
<entry>Action</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>Left</entry>
<entry>Move the cursor to the left</entry>
</row>
<row>
<entry></entry>
<entry>Right</entry>
<entry>Move the cursor to the right</entry>
</row>
<row>
<entry></entry>
<entry>Up</entry>
<entry>Move the cursor up</entry>
</row>
<row>
<entry></entry>
<entry>Down</entry>
<entry>Move the cursor down</entry>
</row>
<row>
<entry></entry>
<entry>Enter</entry>
<entry>Send a request with the current cursor position</entry>
</row>
<row>
<entry></entry>
<entry>Exit</entry>
<entry>Lose the focus and give the focus to the parent object</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> It should be noted that if a change of scale is effected during the display of the HTML page, the real coordinates of the cursor will be calculated. </paragraph>
<paragraph id="P-0127" lvl="7"><number>&lsqb;0127&rsqb;</number> UseMap Hyperlinks </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> These consist of an aggregation of &lsquo;sensitive&rsquo; polygonal, rectangular or circular zones, each corresponding to a URL. Each zone is accessible by means of the four directional controls. The navigation within this type of hyperlink can be complex (for example, a map of the United States where each state is a sensitive zone). </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> The following table lists actions which are undertaken in response to respective controls to navigate between UseMap hyperlinks.  
<table-cwu id="TABLE-US-00003">
<number>3</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="35PT" align="left"/>
<colspec colname="2" colwidth="182PT" align="left"/>
<thead>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Control</entry>
<entry>Action</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Left</entry>
<entry>Move to the sensitive zone to the left of the current zone</entry>
</row>
<row>
<entry>Right</entry>
<entry>Move to the sensitive zone to the right of the current zone</entry>
</row>
<row>
<entry>Up</entry>
<entry>Move to the sensitive zone above the current zone</entry>
</row>
<row>
<entry>Down</entry>
<entry>Move to the sensitive zone below the current zone</entry>
</row>
<row>
<entry>Enter</entry>
<entry>Send a request with the associated URL</entry>
</row>
<row>
<entry>Exit</entry>
<entry>Lose the focus and give the focus to the parent object</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0130" lvl="7"><number>&lsqb;0130&rsqb;</number> Text Hyperlinks </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> These consist of a rectangular zone which can contain several objects placed side by side in the direction of writing. The objects which constitute a text hyperlink can flow over several consecutive lines of a document. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> The following table lists actions to undertake in response to determined controls to navigate between Text hyperlinks.  
<table-cwu id="TABLE-US-00004">
<number>4</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="28PT" align="left"/>
<colspec colname="2" colwidth="189PT" align="left"/>
<thead>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Control</entry>
<entry>Action</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Left</entry>
<entry>Move the focus to the hyperlink to the left of the current element</entry>
</row>
<row>
<entry>Right</entry>
<entry>Move the focus to the hyperlink to the right of the</entry>
</row>
<row>
<entry></entry>
<entry>current element</entry>
</row>
<row>
<entry>Up</entry>
<entry>Move the focus to the hyperlink above the current element</entry>
</row>
<row>
<entry>Down</entry>
<entry>Move the focus to the hyperlink below the current element</entry>
</row>
<row>
<entry>Enter</entry>
<entry>Send a request with the associated URL</entry>
</row>
<row>
<entry>Exit</entry>
<entry>Does nothing</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0133" lvl="7"><number>&lsqb;0133&rsqb;</number> Forms </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> A form is an object which may be understood as a set of objects which are treated as text hyperlinks. The form object is not displayed and each object within it can receive the focus. </paragraph>
</section>
<section>
<heading lvl="1">Description of the Algorithm for Selecting Hyperlink Objects </heading>
<paragraph id="P-0135" lvl="7"><number>&lsqb;0135&rsqb;</number> Definition of the Current Focus </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> The algorithm described hereunder may be implemented using basic instructions, for example summing, subtracting and comparing applied to integer values. In this way CPU resources required from the received decoder may be reduced to a minimum when running the algorithm implementation. Referring to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, an example of an implementation using basic instructions will be explained. A candidate object <highlight><bold>80</bold></highlight> is referred to using coordinates XCO, YCO and XC<highlight><bold>1</bold></highlight>, YC<highlight><bold>1</bold></highlight> of two of its opposite corners. In a similar manner a Focus object (current object) <highlight><bold>81</bold></highlight> is referred to using coordinates XFO, YFO and XF<highlight><bold>1</bold></highlight>, YF<highlight><bold>1</bold></highlight>. In order to determine if the candidate object <highlight><bold>80</bold></highlight> is located to the East of the Focus object <highlight><bold>81</bold></highlight>, the coordinates XC<highlight><bold>1</bold></highlight> and XF<highlight><bold>0</bold></highlight> are compared to see if XC<highlight><bold>1</bold></highlight> is smaller than XFO. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> The current focus is preferably defined by a rectangle corresponding to the zone defined by a hyperlink object (a rectangle is computationally simple to implement). A hyperlink having the focus is rejected from the search for candidate objects. </paragraph>
<paragraph id="P-0138" lvl="7"><number>&lsqb;0138&rsqb;</number> Definition of the Search Zones </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> Four priority zones of North, South, East and West are defined, and these correspond to the elongation of the object having the focus in the four geographical directions. These zones have priority in that they respect the structure of the document. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> It should be noted that, although these four directions are used (this may be both computationally simple to implement and allow easy and intuitive travel through a document), other possibilities may be used. In a development, a direction may be defined by polar selection means, based on an angular input or clockwise or anticlockwise directional signals and one or more search zones may be defined based on the directional signals; in such a case an object may be assigned to only a single direction at a time, the direction itself being varied to select alternative objects; the invention extends to such embodiments, and such a feature may be independently provided. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> These zones are shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, with <cross-reference target="DRAWINGS">FIGS. 5</cross-reference><highlight><italic>a </italic></highlight>to <highlight><bold>5</bold></highlight><highlight><italic>d </italic></highlight>depicting respectively a zone labelled &ldquo;Focus&rdquo; and adjacent North, South, East and West priority zones. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> In a preferred embodiment the East and West priority zones are extended by adjacent zones at their North and South boundaries. Referring to <cross-reference target="DRAWINGS">FIGS. 5</cross-reference><highlight><italic>c </italic></highlight>and <highlight><bold>5</bold></highlight><highlight><italic>d, </italic></highlight>adjacent zones <highlight><bold>100</bold></highlight>, <highlight><bold>102</bold></highlight> and <highlight><bold>104</bold></highlight>, <highlight><bold>106</bold></highlight> of respectively the East and West priority zones are shown. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> Four non-priority zones of North-East, North-West, South-East and South-West are dynamically defined as a function of the position of the East and West candidate objects. These zones are used to reassign the directions which have no candidate object in the priority zones and to allow the algorithm to be able to find every interactive object in the document. The dynamic calculation of these zones as a function of the laterally located candidate objects makes it possible to avoid (preferably at least for the North and South direction) the retention of objects located behind an East or West (right or left) candidate, as is illustrated schematically in <cross-reference target="DRAWINGS">FIG. 5</cross-reference><highlight><italic>e. </italic></highlight>The provision of both priority and non-priority zones is a preferred feature which may be provided independently or in combination with other features and is not limited to the specific zones described herein. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 6, a</cross-reference> North East non-priority zone is defined by the right hand border <highlight><bold>110</bold></highlight> of the North priority zone (as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference><highlight><italic>a</italic></highlight>) and the line <highlight><bold>112</bold></highlight> passing from the top right corner of the current object (the object having the focus) to the top left corner of the highest &ldquo;candidate East&rdquo; or Eastern candidate object. If there is no candidate East, or if the upper border of the highest candidate East is situated below the upper border of the current object, the border of the zone is defined by the upper border of the East priority zone, as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference><highlight><italic>c. </italic></highlight></paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the North West non-priority zone is defined in a complementary manner, with reference to the North priority zone (as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference><highlight><italic>a</italic></highlight>) and Western candidate object or West priority zone. That is, the zone is defined by the left hand border <highlight><bold>200</bold></highlight> of the North priority zone and the line <highlight><bold>201</bold></highlight> passing from the top left corner of the current object (the object having the focus) to the top right corner of the highest &ldquo;candidate West&rdquo; or Western candidate object. If there is no candidate West, or if the upper border of the highest candidate West is situated below the upper border of the current object, the border of the zone is defined by the upper border of the West priority zone as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference><highlight><italic>d. </italic></highlight></paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, the South East non-priority zone is similarly defined, with reference to the South priority zone (as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference><highlight><italic>b</italic></highlight>) and Eastern candidate object or East priority zone. That is, the zone is defined by the right hand border <highlight><bold>300</bold></highlight> of the South priority zone and the line <highlight><bold>301</bold></highlight> passing from the bottom right corner of the current object (the object having the focus) to the bottom left corner of the Southmost &ldquo;candidate East&rdquo; or Eastern candidate object. If there is no candidate East, or if the upper border of the Southmost candidate East is situated above the lower border of the current object, the border of the zone is defined by the lower border of the East priority zone as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference><highlight><italic>c. </italic></highlight></paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, the South West non-priority zone is similarly defined, with reference to the South priority zone (as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference><highlight><italic>b</italic></highlight>) and Western candidate object or West priority zone. That is, the zone is defined by the left hand border <highlight><bold>400</bold></highlight> of the South priority zone and the line <highlight><bold>401</bold></highlight> passing from the bottom left corner of the current object (the object having the focus) to the bottom left corner of the Southmost &ldquo;candidate West&rdquo; or Western candidate object. If there is no candidate West, or if the upper border of the Southmost candidate West is situated above the lower border of the current object, the border of the zone is defined by the lower border of the West priority zone as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference><highlight><italic>d. </italic></highlight></paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> It is a preferred feature that candidate (target) objects are selected in order (and this feature may be independently provided). Having explained one possible definition of priority and non-priority zones, a preferred selection method will now be described; it should be appreciated that similar principles may be applied if the priority and non-priority zones are defined differently, and also that other orders may be used. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> In the first step, searching for candidates is confined to the East and West priority zones and all objects intersecting these zones are identified as potential candidates. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> In the preferred embodiment where the East and West zones are extended by-adjacent zones (as shown with references <highlight><bold>100</bold></highlight>, <highlight><bold>102</bold></highlight>, <highlight><bold>104</bold></highlight> and <highlight><bold>106</bold></highlight> in <cross-reference target="DRAWINGS">FIGS. 5</cross-reference><highlight><italic>c </italic></highlight>and <highlight><bold>5</bold></highlight><highlight><italic>d</italic></highlight>) the searching for candidates may be extended to these adjacent zones as well, in order to identify objects close the East and West priority zones as potential candidates. </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> The list of potential candidates is then refined by a further selection process, as will now be described; this two stage selection process may be provided as an independent preferred feature, even if different selection mechanisms are employed. Several rules will be described; each may be provided independently or in combination with other rules, the combination of rules described herein being particularly preferred as it leads efficiently to a &ldquo;sensible&rdquo; set of candidate objects. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, objects <highlight><bold>410</bold></highlight> and <highlight><bold>411</bold></highlight> at distances d<highlight><bold>2</bold></highlight> and d<highlight><bold>1</bold></highlight> from a current object labelled &ldquo;Focus&rdquo; are shown, If a rule states that objects closer to the current object are retained in preference to further objects then the object <highlight><bold>410</bold></highlight> is retained in preference to the object <highlight><bold>411</bold></highlight>, the distance d<highlight><bold>2</bold></highlight> being smaller than the distance d<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 11</cross-reference><highlight><italic>a, </italic></highlight>objects <highlight><bold>420</bold></highlight> and <highlight><bold>421</bold></highlight> at the same distance d from a current object labelled &ldquo;Focus&rdquo; are shown. If a rule states that in the event of objects being at identical distances, the highest object is retained (highest meaning the most Northerly), then the object <highlight><bold>421</bold></highlight> is retained in preference to the object <highlight><bold>420</bold></highlight>, since the object <highlight><bold>421</bold></highlight> is situated to the North of the object <highlight><bold>420</bold></highlight>. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 11</cross-reference><highlight><italic>b, </italic></highlight>an object labelled &ldquo;Focus&rdquo; and its West priority zone <highlight><bold>434</bold></highlight> extended by adjacent zones <highlight><bold>435</bold></highlight> and <highlight><bold>436</bold></highlight> is shown. An object <highlight><bold>437</bold></highlight> is located in the West priority zone <highlight><bold>434</bold></highlight> at a distance d<highlight><bold>3</bold></highlight> from the Focus object. An object <highlight><bold>438</bold></highlight> intersecting the adjacent zone <highlight><bold>436</bold></highlight> which extends the West priority zone <highlight><bold>434</bold></highlight> is located at a distance d<highlight><bold>4</bold></highlight> from the Focus object, the value of d<highlight><bold>4</bold></highlight> being smaller than the value of d<highlight><bold>3</bold></highlight>. Although the object <highlight><bold>438</bold></highlight> is closer to the Focus object than the object <highlight><bold>437</bold></highlight>, a rule may be that the object <highlight><bold>437</bold></highlight> is retained because the object <highlight><bold>438</bold></highlight> intersects the adjacent zone <highlight><bold>436</bold></highlight> only, that is, it does not overlap the West priority zone <highlight><bold>434</bold></highlight>. </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> In the second step, a search is made for North and South candidates in the North and South priority zones, as well as secondary candidates in the secondary zones. </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> Upper and lower candidates are considered as priority candidates when they intersect one of the North and South zones. </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> Two candidates are considered to be on the same line in the following cases:&mdash;</paragraph>
<paragraph id="P-0158" lvl="2"><number>&lsqb;0158&rsqb;</number> Both intersect the current object; </paragraph>
<paragraph id="P-0159" lvl="2"><number>&lsqb;0159&rsqb;</number> One envelops the other; </paragraph>
<paragraph id="P-0160" lvl="2"><number>&lsqb;0160&rsqb;</number> Both are at the same distance (vertical distance between nearest horizontal borders, that is high border of current object to low border of candidate for upper candidate and vice versa) from the current object. </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> In the case of two candidates being considered to be on the same line, they are classified as follows:&mdash;</paragraph>
<paragraph id="P-0162" lvl="2"><number>&lsqb;0162&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, an object <highlight><bold>454</bold></highlight> totally within a priority zone <highlight><bold>455</bold></highlight> is classed as a centre candidate. </paragraph>
<paragraph id="P-0163" lvl="2"><number>&lsqb;0163&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, an object <highlight><bold>456</bold></highlight> intersecting the left border of the priority zone <highlight><bold>455</bold></highlight> is classed as a left candidate. </paragraph>
<paragraph id="P-0164" lvl="2"><number>&lsqb;0164&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, an object <highlight><bold>457</bold></highlight> intersecting the right border of the priority zone <highlight><bold>457</bold></highlight> is classed as a right candidate. </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIGS. 15</cross-reference><highlight><italic>a </italic></highlight>to <highlight><bold>15</bold></highlight><highlight><italic>e, </italic></highlight>selection between two candidates considered to be on the same line will be explained. Although the precise priorities need not be used, it will be noted that the algorithm described is asymmetric (in this example it favours a left candidate over a right candidate). This feature of asymmetry is important and may be independently provided; it is better at ensuring that all objects can eventually be traversed than a symmetrical algorithm, although an element of randomness could if desired be built into a largely symmetrical algorithm. </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> The following rules may be applied:&mdash;</paragraph>
<paragraph id="P-0167" lvl="2"><number>&lsqb;0167&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 15</cross-reference><highlight><italic>a, </italic></highlight>a left candidate <highlight><bold>458</bold></highlight> is retained in preference to a right candidate <highlight><bold>459</bold></highlight>. </paragraph>
<paragraph id="P-0168" lvl="2"><number>&lsqb;0168&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 15</cross-reference><highlight><italic>b, </italic></highlight>a centre candidate <highlight><bold>460</bold></highlight> is retained in preference to a left <highlight><bold>461</bold></highlight> or right candidate. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIGS. 15</cross-reference><highlight><italic>c </italic></highlight>and <highlight><bold>15</bold></highlight><highlight><italic>d, </italic></highlight>if two candidates are of the same type, the one retained is the one whose inner border is further within the zone <highlight><bold>455</bold></highlight>, for example in the case of two left candidates <highlight><bold>462</bold></highlight> and <highlight><bold>463</bold></highlight> (see <cross-reference target="DRAWINGS">FIG. 15</cross-reference><highlight><italic>c</italic></highlight>), the one whose right border is rightmost is retained, that is, the candidate <highlight><bold>463</bold></highlight>, and vice versa; hence in <cross-reference target="DRAWINGS">FIG. 15</cross-reference><highlight><italic>d, </italic></highlight>in the case of two right candidates <highlight><bold>464</bold></highlight> and <highlight><bold>465</bold></highlight>, the one whose left border is leftmost is retained, that is, the candidate <highlight><bold>464</bold></highlight>. </paragraph>
<paragraph id="P-0170" lvl="2"><number>&lsqb;0170&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 15</cross-reference><highlight><italic>e, </italic></highlight>in the case of two centre candidates <highlight><bold>466</bold></highlight> and <highlight><bold>467</bold></highlight>, the one whose centre is closest to the centre of the current object is retained. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> If the candidates are not considered as being on the same line, the candidate retained is the one closest to the centre of the current object. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 16, a</cross-reference> candidate is considered a secondary candidate if it (that is, its encompassing rectangle) is situated entirely within a secondary zone <highlight><bold>468</bold></highlight>, as is the case for candidates <highlight><bold>469</bold></highlight>, <highlight><bold>470</bold></highlight> and <highlight><bold>471</bold></highlight>. Two (preferably) secondary candidates are retained from each secondary zone. Hence the two secondary candidates <highlight><bold>469</bold></highlight> and <highlight><bold>470</bold></highlight> are retained whereas the secondary candidate <highlight><bold>471</bold></highlight> is rejected. A candidate <highlight><bold>472</bold></highlight> whose encompassing rectangle is not entirely situated in the secondary zone <highlight><bold>468</bold></highlight> may not be considered as a secondary candidate and is therefore rejected. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> A (preferable but optional) third step makes it possible to assign a secondary candidate to a direction which does not have a candidate or to assign a single candidate to two different directions. This step can also resolve problems of objects enveloping others. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> Complementary methods are used for reassignment of objects to East and West and to North and South directions; below assignment to only one of a pair of directions will be explained in detail with the complementary direction mentioned in parentheses; the same principles apply mutatis mutandis. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> To assign objects to the East (or West) direction, secondary candidates from the North East and South East (or North West and South West) are considered. The candidate retained is the nearest in the North-South direction to the current object; if there are objects at the same distance, the object retained is the nearest in the East-West direction. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> Similarly, to assign objects to the North (or South) direction, secondary candidates from the North East and North West (or South East and South West) are considered. The candidate retained is the nearest in the North-South direction to the current object; if there are objects at the same distance, the object retained is the nearest in the East-West direction. If there are no objects in the secondary zones, the candidate is selected from the East and West objects, preferably those situated above (below) the candidate object; the reassignment of the North (or South) direction to a laterally situated candidate enables movement to the highest (or lowest) object. </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 17 a</cross-reference> plurality of objects A, B, C, D, E, F and G are shown. An object may be enveloped by another object, if the encompassing rectangle of the first object is situated entirely in the encompassing rectangle of the second object. In <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, the objects D and E are shown enveloped by the object C, which in turn is enveloped by the object B. The object G is enveloped by the object F. </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> There will now be described an algorithm for dealing with objects which envelop others. This enables movement in a given direction towards an object which is most enveloped, for example from the object B towards the object C, from the object C towards the objects D and E and from the object F towards the object G (this is a preferred feature which may be provided independently, and using alternative algorithms to the preferred algorithm described herein). In a preferred feature, when all the enveloped objects have been traversed, the direction of traverse is inverted until all the enveloping objects have been traversed. </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> Referring to the table below, the effect of the above rules on the objects depicted in <cross-reference target="DRAWINGS">FIG. 17</cross-reference> will be explained.  
<table-cwu id="TABLE-US-00005">
<number>5</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="70PT" align="center"/>
<colspec colname="2" colwidth="63PT" align="center"/>
<colspec colname="3" colwidth="84PT" align="center"/>
<thead>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="3" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Current Object</entry>
<entry>Candidate East</entry>
<entry>Candidate West</entry>
</row>
<row><entry namest="1" nameend="3" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>A</entry>
<entry>B</entry>
<entry>NO CANDIDATE</entry>
</row>
<row>
<entry>B</entry>
<entry>C</entry>
<entry>A</entry>
</row>
<row>
<entry>C</entry>
<entry>D</entry>
<entry>B</entry>
</row>
<row>
<entry>D</entry>
<entry>E</entry>
<entry>C</entry>
</row>
<row>
<entry>E</entry>
<entry>C</entry>
<entry>D</entry>
</row>
<row>
<entry>C</entry>
<entry>B</entry>
<entry>E</entry>
</row>
<row>
<entry>B</entry>
<entry>F</entry>
<entry>C</entry>
</row>
<row>
<entry>F</entry>
<entry>G</entry>
<entry>B</entry>
</row>
<row>
<entry>G</entry>
<entry>F</entry>
<entry>F</entry>
</row>
<row>
<entry>F</entry>
<entry>NO CANDIDATE</entry>
<entry>G</entry>
</row>
<row><entry namest="1" nameend="3" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> A fourth step will now be explained, with reference to <cross-reference target="DRAWINGS">FIG. 18</cross-reference>, which makes it possible to select consistent objects for the North and South directions with the aim of permitting navigation among all available objects (this is a preferred aim and feature and may be provided independently or implemented by other algorithms). </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 18</cross-reference><highlight><italic>a, </italic></highlight>an object <highlight><bold>510</bold></highlight> is shown to the West of an object <highlight><bold>512</bold></highlight> which has the focus, and an object <highlight><bold>514</bold></highlight> is shown to the South of the object <highlight><bold>512</bold></highlight>. A further object <highlight><bold>516</bold></highlight> is located to the South of object <highlight><bold>510</bold></highlight>. Using the algorithms described above, object <highlight><bold>510</bold></highlight> is considered as the West candidate and object <highlight><bold>514</bold></highlight> is considered as the South candidate. A further object <highlight><bold>518</bold></highlight> is located such that it would not be accessed departing from object <highlight><bold>510</bold></highlight>, since object <highlight><bold>512</bold></highlight> would be the East candidate and object <highlight><bold>516</bold></highlight> would be the South candidate. The fourth step is thus provided to allow object <highlight><bold>518</bold></highlight> to be accessed. </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> This step comprises reassigning the North or South candidates to a secondary candidate (respectively arrows <highlight><bold>500</bold></highlight>, <highlight><bold>501</bold></highlight>) if that secondary candidate cannot be accessed departing from the East or West candidates (<cross-reference target="DRAWINGS">FIG. 18</cross-reference><highlight><italic>a</italic></highlight>), that is, if the secondary candidate cannot be accessed by applying the navigation method to the East or West candidate, or if the secondary candidate intersects the North or South priority zones of the South or North candidates respectively. </paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference><highlight><italic>b </italic></highlight>illustrates a similar situation, but where object <highlight><bold>518</bold></highlight> is closer to object <highlight><bold>514</bold></highlight>. </paragraph>
<paragraph id="P-0184" lvl="0"><number>&lsqb;0184&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, the effect of implementing the above algorithms in a typical document will be explained. In the figure, rectangles shown in full lines correspond to active objects in the document and rectangles shown in dotted lines correspond to zones defining a hyperlink. </paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> The arrows show possible navigation paths based on the algorithms described above. It can be seen that all objects can be traversed in a seemingly logical fashion by moving in one of four directions. Furthermore, it will be noted that the algorithm is not necessarily reversible, for example an upward move from the bottom left rectangle of hyperlink <highlight><bold>600</bold></highlight> leads to rectangle <highlight><bold>602</bold></highlight>, but a downward move from there leads to rectangle <highlight><bold>604</bold></highlight>. Similarly, several objects lead downward to the elongate rectangle at the bottom of hyperlink <highlight><bold>608</bold></highlight> (which may be a line of text, for example) but an upward move from there only leads to object <highlight><bold>610</bold></highlight>. </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> Processes used in the preferred embodiment for generating a list of candidate objects will now be described in more detail, with particular reference to FIGS. <highlight><bold>20</bold></highlight> to <highlight><bold>23</bold></highlight>. </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> For the sake of convenience and to aid understanding, several sets of pseudo-variables are referred to in the following illustration. The variables are defined as follows:&mdash;</paragraph>
<paragraph id="P-0188" lvl="2"><number>&lsqb;0188&rsqb;</number> Candidate (&lt;primary direction&gt;): an array of 4 variables which refer to the North, East, South and West (primary) candidate objects. </paragraph>
<paragraph id="P-0189" lvl="2"><number>&lsqb;0189&rsqb;</number> Secondary (&lt;secondary direction&gt;, &lt;order&equals;<highlight><bold>1</bold></highlight> or <highlight><bold>2</bold></highlight>&gt;): a multidimensional array of 8 variables, corresponding to the 1<highlight><superscript>st </superscript></highlight>and 2<highlight><superscript>nd </superscript></highlight>secondary candidates in the North West, North East, South West and South East non-priority zones. Order <highlight><bold>1</bold></highlight> corresponds to the first secondary candidate in the relevant non-priority zone, order <highlight><bold>2</bold></highlight> corresponds to the second secondary candidate, and so on. As noted above, further or fewer orders of secondary candidate may be envisaged, but only two are considered for the purpose of this illustration. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> illustrates the sequence of processes for generating the list of candidate objects. A brief summary of the processes A to C (<highlight><bold>700</bold></highlight>, <highlight><bold>800</bold></highlight>, <highlight><bold>900</bold></highlight>) is presented in the left hand column <highlight><bold>1200</bold></highlight>, and approximate corresponding pseudocode relating to the assignments which may be made during the execution of each process is presented in the right hand column <highlight><bold>1202</bold></highlight>. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> Process A <highlight><bold>700</bold></highlight> corresponds approximately to the first and second steps described above; process B <highlight><bold>800</bold></highlight> corresponds approximately to the third step described above, and process C <highlight><bold>900</bold></highlight> corresponds approximately to the fourth step described above. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> Process A comprises the step of finding all primary and secondary candidates for the current selected object. Process B <highlight><bold>800</bold></highlight> comprises the step of filling any empty primary candidates with relevant secondary candidates. Finally, process C <highlight><bold>900</bold></highlight> comprises the step of assigning to corresponding primary candidates any secondary North and South candidates which are not accessible from the East and West primary candidates. </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 21</cross-reference>, process A <highlight><bold>700</bold></highlight> will now be described in more detail. First of all, the primary candidates are assigned in steps <highlight><bold>704</bold></highlight>, <highlight><bold>706</bold></highlight>, <highlight><bold>708</bold></highlight>, <highlight><bold>710</bold></highlight>. This assignment is in accordance with the current method used to select primary candidates; for example, choosing the nearest object in the East priority zone in the case of the East candidate. When all of the primary candidates have been assigned (or left blank, as the case may be), the secondary candidates are then assigned in corresponding steps <highlight><bold>712</bold></highlight>, <highlight><bold>714</bold></highlight>, <highlight><bold>716</bold></highlight>, <highlight><bold>718</bold></highlight>. Again, such candidates are assigned in accordance with the current method of selecting secondary candidates, such as any of those described in more detail above. </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 22</cross-reference>, the process B <highlight><bold>800</bold></highlight> is now described. Steps <highlight><bold>804</bold></highlight>, <highlight><bold>814</bold></highlight>, <highlight><bold>816</bold></highlight> allow all of the primary candidates to be examined in turn by step <highlight><bold>806</bold></highlight>. Any candidates which do not have an assigned object, that is to say, were left blank in process A, are then assigned appropriately by steps <highlight><bold>808</bold></highlight>, <highlight><bold>810</bold></highlight>. As before, the exact algorithm used in step <highlight><bold>808</bold></highlight> can be customised to any extent, but in the preferred embodiment is the algorithm described in more detail above. </paragraph>
<paragraph id="P-0195" lvl="0"><number>&lsqb;0195&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 23</cross-reference>, the final process C <highlight><bold>900</bold></highlight> is now described. Steps <highlight><bold>904</bold></highlight>, <highlight><bold>906</bold></highlight>, <highlight><bold>912</bold></highlight>, <highlight><bold>914</bold></highlight>, <highlight><bold>918</bold></highlight>, <highlight><bold>920</bold></highlight> provide an outer and inner loop, running through secondary candidates from all of the non-priority zones in turn. As mentioned above, a maximum of two orders of secondary candidate are considered here (in other words, only a first secondary candidate and a second secondary candidate are considered for each non-priority zone). In steps <highlight><bold>908</bold></highlight>, <highlight><bold>910</bold></highlight>, the algorithm checks to see whether the secondary candidate under consideration is accessible from the East or West candidate objects. If not, the appropriate one of the North or South (primary) candidate is replaced with the secondary candidate in question. For example, if a secondary candidate to the South East is found not to be accessible from the Eastern or Western candidates, it will be set as the new South candidate object. </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> The preferred algorithm to determine whether or not the secondary candidate under consideration is accessible from the East or West candidate objects tests simply whether or not the secondary candidate falls within one of the four priority zones of the East or West candidate object. This affords the advantage of being able to access any object without requiring an unduly complicated algorithm. In particular, the test is not as sophisticated as the combination of processes A, B and C used to calculate the candidate objects for the current object, and nor need it necessarily be. </paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> At the end <highlight><bold>922</bold></highlight> of the last process, the Candidate( ) array contains the correct four primary candidate objects. As mentioned above, when the above processes are consistently applied, each object of interest in a web page can be accessed from any other object of interest (objects which cannot be selected, navigated to/from or otherwise interacted with are generally be considered as not being of interest). </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> Modifications may be made to the details of the flowcharts shown in FIGS. <highlight><bold>20</bold></highlight> to <highlight><bold>23</bold></highlight>, particularly with regard to omitting, modifying or adding certain stages, so as to incorporate the details of the various different embodiments described herein, for example. </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> One such modification is illustrated in FIGS. <highlight><bold>24</bold></highlight> to <highlight><bold>26</bold></highlight>. In this algorithm, the step of checking whether or not a secondary candidate is accessible from the East or West candidate is performed more rigorously, yielding potentially better results at the expense of speed. In this embodiment, a further pair of arrays is also used: </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> EastCandidate (&lt;primary direction&gt;), WestCandidate (&lt;primary direction&gt;): the same structure as the Candidate ( . . . ) array, but containing the candidate objects from the point of view of the Eastern and Western candidate objects respectively. </paragraph>
<paragraph id="P-0201" lvl="0"><number>&lsqb;0201&rsqb;</number> As before, process A <highlight><bold>700</bold></highlight> comprises the step of finding all primary and secondary candidates for the current selected object and process B <highlight><bold>800</bold></highlight> comprises the step of filling any empty primary candidates with relevant secondary candidates. A new process D <highlight><bold>1000</bold></highlight> comprises the step of finding primary candidates for objects corresponding to East and West primary candidates (for example, repeating the above processes A and B for East and West candidates). Finally, process E <highlight><bold>1100</bold></highlight>, similar in structure to process C <highlight><bold>900</bold></highlight>, comprises the step of assigning to corresponding primary candidates any secondary North and South candidates which are not present in any of the members of EastCandidate( ) and WestCandidate( ). </paragraph>
<paragraph id="P-0202" lvl="0"><number>&lsqb;0202&rsqb;</number> Processes A <highlight><bold>700</bold></highlight> and B <highlight><bold>800</bold></highlight> operate as previously, and will not be further described. </paragraph>
<paragraph id="P-0203" lvl="0"><number>&lsqb;0203&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 25</cross-reference>, the process D <highlight><bold>900</bold></highlight> is now described. Steps <highlight><bold>1004</bold></highlight>, <highlight><bold>1006</bold></highlight> effectively serve to repeat processes A <highlight><bold>700</bold></highlight> and B <highlight><bold>800</bold></highlight> but from the point of view of a different object (in this case the Eastern candidate of the current object). In the preferred embodiment, processes A and B are embodied by a single function which accepts as a parameter, amongst other things, a reference to an object which is to be considered the &lsquo;current object&rsquo;. Thus the steps <highlight><bold>1004</bold></highlight>, <highlight><bold>1006</bold></highlight> can be carried out relatively efficiently. In variants of the preferred embodiment, processes A and B are embodied by a plurality of functions. Steps <highlight><bold>1008</bold></highlight>, <highlight><bold>1010</bold></highlight> are equivalent to steps <highlight><bold>1004</bold></highlight>, <highlight><bold>1006</bold></highlight> but for the Western candidate of the current object. It should be emphasised that the candidate objects determined for the East and West objects are determined to a first degree of approximation only, and are not refined in accordance with additional processes D and E. This saves computation, and can avoid a potential infinite recursion. </paragraph>
<paragraph id="P-0204" lvl="0"><number>&lsqb;0204&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 26</cross-reference>, the alternative final process E <highlight><bold>1100</bold></highlight> is now described. As before, steps <highlight><bold>1104</bold></highlight>, <highlight><bold>1106</bold></highlight>, <highlight><bold>1112</bold></highlight>, <highlight><bold>1114</bold></highlight>, <highlight><bold>1118</bold></highlight>, <highlight><bold>1120</bold></highlight> provide an outer and inner loop, running through secondary candidates from all of the non-priority zones in turn. As mentioned above, a maximum of two orders of secondary candidate are considered here (in other words, only a first secondary candidate and a second secondary candidate are considered for each non-priority zone). In steps <highlight><bold>1108</bold></highlight>, <highlight><bold>1110</bold></highlight>, the algorithm checks to see whether the secondary candidate under consideration is included within either the EastCandidate( ) or WestCandidate( ) arrays (in other words, whether or not it is accessible from the East or West candidate objects). If not, the appropriate one of the North or South (primary) candidate is replaced with the secondary candidate in question. For example, if a secondary candidate to the South East is found not to be accessible from the Eastern or Western candidates, it will be set as the new South candidate object. </paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> It can be seen that the methods described herein for navigating around a web page are particularly suited to a receiver/decoder, amongst other things because of the simplicity of the controls, requiring only a reasonably standard remote control. In a variant of the preferred embodiment, all of the candidate objects for all of the objects in the web page are calculated once after the page has loaded, and are stored in a table for later use. This can afford the advantage of faster processing when navigating (by looking up the candidate object values in the table rather than calculating them each time). However, the dynamic nature of the calculation of candidate objects also yields benefits, since by not storing a table it requires less of the relatively scarce memory in a receiver/decoder. It can also allow a web page to be navigated whilst it is in the process of loading, for example, where the relative positions and sizes of the objects on the page may not be static. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> &lsquo;Dynamic&rsquo; navigation can also be of use in relation to javascript, which may not only show and hide objects on a web page (thus affecting the navigational relationships between all of the objects on the page) but may also create objects while a page is being displayed. Dynamic HTML may also hide and show objects on a web page, and consequently also benefits from the advantages of the dynamic navigation methods described above. </paragraph>
<paragraph id="P-0207" lvl="0"><number>&lsqb;0207&rsqb;</number> All features described herein may be independently provided, unless otherwise stated. The appended abstract is incorporated herein by reference. Reference numerals appearing in the claims shall have no limiting effect. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of assigning a navigation order to a plurality of objects to be displayed at respective positions on a display comprising assigning objects to a plurality of defined directions based on the positions of the objects. </claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein objects are assigned to directions in a predetermined order. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> or <highlight><bold>2</bold></highlight>, wherein assignment of objects to directions is such that all objects of interest on a page can be accessed. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A method according to any preceding claim, wherein each object of interest can be accessed at least indirectly from any other object of interest. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A method according to any preceding claim, comprising selecting a plurality of initial candidate objects from the plurality of objects, selecting from that plurality of candidate objects a set of accepted candidate objects and initially rejecting the remainder, determining whether at least one of the initially rejected candidate objects can be accessed from any accepted candidate object, and substituting the initially rejected candidate object for one of the initially accepted candidate objects if the initially rejected candidate object cannot be so accessed. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A method according to any preceding claim comprising searching for initial candidate objects in each direction and assigning a chosen initial candidate object to each direction based on predetermined selection criteria. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein the selection criteria include rules for distinguishing between initial candidate objects of differing sizes. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference> or <highlight><bold>7</bold></highlight>, wherein the selection criteria include rules for distinguishing between initial candidate objects based on closeness to a preferred direction. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A method according to any of <dependent-claim-reference depends_on="CLM-00006">claims 6</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00008">8</dependent-claim-reference>, wherein the selection criteria include rules for distinguishing between initial candidate objects based on chosen candidate objects for one or more other directions. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A method according to any of <dependent-claim-reference depends_on="CLM-00006">claims 6</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00009">9</dependent-claim-reference>, further comprising the step of determining whether or not an unchosen initial candidate object which was not initially assigned to any direction can be accessed from another chosen initial candidate object, and the step of assigning said unchosen initial candidate object to at least one of the directions if it cannot be so accessed. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the step of determining whether or not an unchosen initial candidate object can be accessed from another chosen initial candidate object comprises determining whether or not the unchosen initial candidate object fulfills a particular positional relationship with respect to the chosen initial candidate objects. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> or <highlight><bold>11</bold></highlight>, wherein the step of determining whether or not an unchosen initial candidate object can be accessed from another chosen initial candidate object comprises determining whether or not the unchosen initial candidate object lies substantially up, down, left or right of the chosen initial candidate object. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A method according to any preceding claim, wherein the objects are referenced in a document, the objects being assigned to the plurality of defined directions independently of the order in which the objects are referenced in the document. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A method of assigning a navigation order to a plurality of objects to be displayed, which objects are referenced in a document, the method comprising assigning objects to a plurality of defined directions independently of the order in which the objects are referenced in the document to facilitate navigation. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A method according to any preceding claim, wherein the navigation order defines the order in which objects are stepped through in response to user input. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A method of facilitating selection of one of a plurality of objects referenced in a document, the method comprising displaying the objects in respective positions on a display and stepping through the objects based on the position of the objects on the display in response to user input. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, further comprising selecting an object based on further user input. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A method according to any of <dependent-claim-reference depends_on="CLM-00015">claims 15</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00017">17</dependent-claim-reference>, wherein said stepping is based on at least one input signal indicating a direction of travel. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A method according to any preceding claim comprising defining a current object and a target object to which a step leads in each of a or the plurality of directions in response to user input. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> further comprising setting the current object to one of the previously defined target objects and defining the target objects to be selected in response to a further step. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. A method according to any preceding claim, wherein the navigation order is recalculated following a step from one object to another. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. A method according to any preceding claim wherein assignment of objects to directions is such that stepping in a first direction from a first object followed by stepping in the opposite direction may lead to an object other than the first object. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A method according to any preceding claim, wherein the plurality of directions includes at least four substantially orthogonal directions. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein the directions correspond to up, down, left and right. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A method according to any preceding claim, wherein each direction has a button or other command input associated with it. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. A method according to any preceding claim comprising highlighting a or the current object. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. A method according to any preceding claim comprising indicating which object is assigned to each direction. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, comprising indicating the target object. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, comprising indicating which object is assigned to each direction and wherein the indicating differs from said highlighting. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A method of facilitating navigation between a plurality of objects referenced in a document, the method comprising selecting a plurality of initial candidate objects from the plurality of objects, selecting from that plurality of candidate objects a set of accepted candidate objects and initially rejecting the remainder, determining whether at least one of the initially rejected candidate objects can be accessed from any accepted candidate object, and substituting the initially rejected candidate object for one of the initially accepted candidate objects if the initially rejected candidate object cannot be so accessed. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference>, further comprising the step of assigning the set of accepted candidate objects to directions. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. A method according to any preceding claim including ascending or descending a level of hierarchy. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. A method according to any preceding claim comprising following a hyper-link. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. A method according to any preceding claim, wherein a group of objects may be traversed as a single entity at a first level and individual items or subgroups may be traversed at a second level. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00033">claim 34</dependent-claim-reference>, wherein the group of objects is a list. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. A method according to any preceding claim, wherein, in a document comprising a plurality of frames, entire frames may be traversed at a first level and objects within each frame may be traversed at a second level. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. A method according to any preceding claim, further comprising classifying the plurality of objects into primary and secondary candidate objects, with respect to a or the current object. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00033">claim 37</dependent-claim-reference>, wherein the step of classifying the plurality of objects comprises determining whether or not each object fulfills a particular positional relationship with respect to the current object. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. Apparatus arranged to perform a method according to any preceding claim. </claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. Apparatus for assigning a navigation order to a plurality of objects to be displayed at respective positions on a display comprising means for assigning objects to a plurality of defined directions based on the positions of the objects. </claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. Apparatus for assigning a navigation order to a plurality of objects to be displayed at respective positions on a display, comprising a processor programmed to assign objects to a plurality of defined directions based on the positions of the objects. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. Apparatus according to <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference> or <highlight><bold>41</bold></highlight>, further comprising a memory for storing a representation of the plurality of objects which are to be displayed. </claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. Apparatus according to any of <dependent-claim-reference depends_on="CLM-00040">claims 40</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00042">42</dependent-claim-reference>, further comprising means for outputting a signal to the display for displaying the plurality of objects. </claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. Apparatus for assigning a navigation order to a plurality of objects to be displayed, which objects are referenced in a document, the apparatus comprising means for assigning objects to a plurality of defined directions independently of the order in which the objects are referenced in the document to facilitate navigation. </claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. Apparatus for assigning a navigation order to a plurality of objects to be displayed, which objects are referenced in a document, the apparatus comprising a processor programmed to assign objects to a plurality of defined directions independently of the order in which the objects are referenced in the document to facilitate navigation. </claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. Apparatus according to <dependent-claim-reference depends_on="CLM-00044">claim 44</dependent-claim-reference> or <highlight><bold>45</bold></highlight>, further comprising a memory for storing a representation of the document. </claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. Apparatus for facilitating selection of one of a plurality of objects referenced in a document, the apparatus comprising means for displaying the objects and stepping through the objects based on the position of the objects on the display. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. Apparatus according to <dependent-claim-reference depends_on="CLM-00044">claim 47</dependent-claim-reference>, further comprising means for receiving user input and for stepping in response to user input. </claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. Apparatus according to <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference>, further comprising means for selecting an object based on further user input. </claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. Apparatus for facilitating selection of one of a plurality of objects referenced in a document, the apparatus comprising means for storing a representation of the document, means for outputting the representation of the document to a display, and means for stepping through the objects based on the position on which objects are to be displayed on the display. </claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. Apparatus according to <dependent-claim-reference depends_on="CLM-00055">claim 50</dependent-claim-reference>, further comprising a button or other command input associated with it. </claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. Apparatus according to <dependent-claim-reference depends_on="CLM-00055">claim 50</dependent-claim-reference> or <highlight><bold>51</bold></highlight>, further comprising means for highlighting the current object. </claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. Apparatus according to any of <dependent-claim-reference depends_on="CLM-00050">claims 50</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00052">52</dependent-claim-reference>, further comprising means for indicating which object is assigned to each direction. </claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. Apparatus according to <dependent-claim-reference depends_on="CLM-00055">claim 53</dependent-claim-reference>, wherein the indicating is performed in a different manner to the highlighting. </claim-text>
</claim>
<claim id="CLM-00055">
<claim-text><highlight><bold>55</bold></highlight>. Apparatus according to any of <dependent-claim-reference depends_on="CLM-00050">claims 50</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00054">54</dependent-claim-reference>, further comprising means for searching for initial candidate objects in each direction and selecting a chosen candidate object in each direction based on predetermined selection criteria. </claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. Apparatus according to any of <dependent-claim-reference depends_on="CLM-00050">claims 50</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00055">55</dependent-claim-reference>, further comprising means for assigning objects to directions, said means being adapted to allow all objects of interest on a page to be accessed. </claim-text>
</claim>
<claim id="CLM-00057">
<claim-text><highlight><bold>57</bold></highlight>. Apparatus according to <dependent-claim-reference depends_on="CLM-00055">claim 56</dependent-claim-reference>, wherein each object of interest can be accessed at least indirectly from any other object of interest. </claim-text>
</claim>
<claim id="CLM-00058">
<claim-text><highlight><bold>58</bold></highlight>. Apparatus according to any of <dependent-claim-reference depends_on="CLM-00055">claims 55</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00057">57</dependent-claim-reference>, further comprising means for determining whether or not an unchosen initial candidate object which was not initially assigned to any direction can be accessed from another chosen initial candidate object, and means for assigning said unchosen initial candidate object to at least one of the directions if it cannot be so accessed. </claim-text>
</claim>
<claim id="CLM-00059">
<claim-text><highlight><bold>59</bold></highlight>. Apparatus according to <dependent-claim-reference depends_on="CLM-00055">claim 58</dependent-claim-reference>, wherein the means for determining whether or not an unchosen initial candidate object can be accessed from another chosen initial candidate object comprises means for determining whether or not the unchosen initial candidate object fulfills a particular positional relationship with respect to the chosen initial candidate objects. </claim-text>
</claim>
<claim id="CLM-00060">
<claim-text><highlight><bold>60</bold></highlight>. Apparatus according to <dependent-claim-reference depends_on="CLM-00055">claim 58</dependent-claim-reference> or <highlight><bold>59</bold></highlight>, wherein the means for determining whether or not an unchosen initial candidate object can be accessed from another chosen initial candidate object comprises means for determining whether or not the unchosen initial candidate object lies substantially up, down, left or right of the chosen initial candidate object. </claim-text>
</claim>
<claim id="CLM-00061">
<claim-text><highlight><bold>61</bold></highlight>. Apparatus according to any of <dependent-claim-reference depends_on="CLM-00047">claims 47</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00060">60</dependent-claim-reference>, further comprising means for defining a starting object. </claim-text>
</claim>
<claim id="CLM-00062">
<claim-text><highlight><bold>62</bold></highlight>. Apparatus according to <dependent-claim-reference depends_on="CLM-00066">claim 61</dependent-claim-reference>, wherein the means for defining a starting object does not require user selection of an object. </claim-text>
</claim>
<claim id="CLM-00063">
<claim-text><highlight><bold>63</bold></highlight>. Apparatus according to <dependent-claim-reference depends_on="CLM-00066">claim 61</dependent-claim-reference> or <highlight><bold>62</bold></highlight>, where the means for defining a starting object functions according to a predefined rule. </claim-text>
</claim>
<claim id="CLM-00064">
<claim-text><highlight><bold>64</bold></highlight>. Apparatus according to any of <dependent-claim-reference depends_on="CLM-00047">claims 47</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00063">63</dependent-claim-reference>, further comprising means for selecting a plurality of initial candidate objects from the plurality of objects, means for selecting from that plurality of candidate objects a set of accepted candidate objects and initially rejecting the remainder, means for determining whether at least one of the initially rejected candidate objects can be accessed from any accepted candidate object, and means for substituting the initially rejected candidate object for one of the initially accepted candidate objects if the initially rejected candidate object cannot be so accessed. </claim-text>
</claim>
<claim id="CLM-00065">
<claim-text><highlight><bold>65</bold></highlight>. Apparatus for facilitating navigation between a plurality of objects referenced in a document, comprising means for selecting a plurality of initial candidate objects from the plurality of objects, means for selecting from that plurality of candidate objects a set of accepted candidate objects and initially rejecting the remainder, means for determining whether at least one of the initially rejected candidate objects can be accessed from any accepted candidate object, and means for substituting the initially rejected candidate object for one of the initially accepted candidate objects if the initially rejected candidate object cannot be so accessed. </claim-text>
</claim>
<claim id="CLM-00066">
<claim-text><highlight><bold>66</bold></highlight>. Apparatus according to any of <dependent-claim-reference depends_on="CLM-00047">claims 47</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00065">65</dependent-claim-reference>, further comprising means for classifying the plurality of objects into primary and secondary candidate objects, with respect to a or the current object. </claim-text>
</claim>
<claim id="CLM-00067">
<claim-text><highlight><bold>67</bold></highlight>. Apparatus according to <dependent-claim-reference depends_on="CLM-00066">claim 66</dependent-claim-reference>, wherein the means for classifying the plurality of objects comprises means for determining whether or not each object fulfills a particular positional relationship with respect to the current object. </claim-text>
</claim>
<claim id="CLM-00068">
<claim-text><highlight><bold>68</bold></highlight>. A receiver/decoder, comprising apparatus as claimed in any of <dependent-claim-reference depends_on="CLM-00039">claims 39</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00067">67</dependent-claim-reference>. </claim-text>
</claim>
<claim id="CLM-00069">
<claim-text><highlight><bold>69</bold></highlight>. A receiver/decoder, arranged to perform a method according to any of <dependent-claim-reference depends_on="CLM-00001">claims 1</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00038">38</dependent-claim-reference>. </claim-text>
</claim>
<claim id="CLM-00070">
<claim-text><highlight><bold>70</bold></highlight>. A computer program product including instructions for performing a method according to any of <dependent-claim-reference depends_on="CLM-00001">claims 1</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00038">38</dependent-claim-reference>. </claim-text>
</claim>
<claim id="CLM-00071">
<claim-text><highlight><bold>71</bold></highlight>. A computer readable medium including instructions for performing a method according to any of <dependent-claim-reference depends_on="CLM-00001">claims 1</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00038">38</dependent-claim-reference>. </claim-text>
</claim>
<claim id="CLM-00072">
<claim-text><highlight><bold>72</bold></highlight>. A signal embodying instructions for performing a method according to any of <dependent-claim-reference depends_on="CLM-00001">claims 1</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00038">38</dependent-claim-reference>. </claim-text>
</claim>
<claim id="CLM-00073">
<claim-text><highlight><bold>73</bold></highlight>. Apparatus substantially as any one herein described with reference to or as illustrated in the accompanying figures. </claim-text>
</claim>
<claim id="CLM-00074">
<claim-text><highlight><bold>74</bold></highlight>. A method substantially as any one herein described with reference to or as illustrated in the accompanying figures.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>21</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004638A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004638A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004638A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004638A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004638A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004638A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004638A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004638A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004638A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004638A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004638A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030004638A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030004638A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030004638A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030004638A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030004638A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030004638A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030004638A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030004638A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030004638A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
