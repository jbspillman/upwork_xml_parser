<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002665A1-20030102-D00000.TIF SYSTEM "US20030002665A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00001.TIF SYSTEM "US20030002665A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00002.TIF SYSTEM "US20030002665A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00003.TIF SYSTEM "US20030002665A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00004.TIF SYSTEM "US20030002665A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00005.TIF SYSTEM "US20030002665A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00006.TIF SYSTEM "US20030002665A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00007.TIF SYSTEM "US20030002665A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00008.TIF SYSTEM "US20030002665A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00009.TIF SYSTEM "US20030002665A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00010.TIF SYSTEM "US20030002665A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00011.TIF SYSTEM "US20030002665A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00012.TIF SYSTEM "US20030002665A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00013.TIF SYSTEM "US20030002665A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00014.TIF SYSTEM "US20030002665A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00015.TIF SYSTEM "US20030002665A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00016.TIF SYSTEM "US20030002665A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00017.TIF SYSTEM "US20030002665A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00018.TIF SYSTEM "US20030002665A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00019.TIF SYSTEM "US20030002665A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030002665A1-20030102-D00020.TIF SYSTEM "US20030002665A1-20030102-D00020.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002665</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10169696</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020703</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2000-337307</doc-number>
</priority-application-number>
<filing-date>20001106</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-66850</doc-number>
</priority-application-number>
<filing-date>20010309</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04K001/04</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>380</class>
<subclass>037000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Encrypting apparatus, encrypting method, decrypting apparatus, decrypting method, and storage medium</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Yoichiro</given-name>
<family-name>Sako</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Shunsuke</given-name>
<family-name>Furukawa</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Tatsuya</given-name>
<family-name>Inokuchi</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Takashi</given-name>
<family-name>Kihara</family-name>
</name>
<residence>
<residence-non-us>
<city>Chiba</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>William S Frommer</name-1>
<name-2>Frommer Lawrence &amp; Haug</name-2>
<address>
<address-1>745 Fifth Avenue</address-1>
<city>New York</city>
<state>NY</state>
<postalcode>10151</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
<international-conventions>
<pct-application>
<document-id>
<doc-number>PCT/JP01/09624</doc-number>
<document-date>20011102</document-date>
<country-code>WO</country-code>
</document-id>
</pct-application>
</international-conventions>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">When content data is encrypted and recorded, the content data is block-segmented and chain-encrypted. At that point, an initial value is generated using content data of the same sector. When content data is an MPEG stream, an initial value is generated using unique information such as a header. Thus, it is not necessary to generate an initial value using a random number or the like. Thus, there is no loss in the data area. In addition, since content data varies at random, the secrecy of the initial value is high. In addition, since it is not necessary to provide a random number generator or the like, the circuit scale does not increase. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">TECHNICAL FIELD </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to an encrypting apparatus, an encrypting method, a decrypting apparatus, a decrypting method, and a storage medium that are suitable for encrypting content data such as audio data and recording the encrypted data to an optical disc such as a CD (Compact Disc) 2 so as to protect the right of the content data when it is recorded to and reproduced from the optical disc. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND ART </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> In recent years, optical discs as large capacity record mediums have been developed. For example, CD (Compact Disc) for music information, CD-ROM (Compact Disc Read Only Memory) for computer data, and DVD (Digital Versatile Disc or Digital Video Disc) for video information are known. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> These optical discs are read-only discs. In recent years, optical discs that allow data to be recorded and rewritten such as CD-R (CD-Recordable) disc and CD-RW (CD-Rewritable) disc have been commercially used. In addition, various types of optical discs such as double density CD and CD2 are being developed. The double density CD has the same size as conventional CD, but more storage capacity than that. The CD2 has an affinity to both a conventional CD player and a personal computer. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> As such optical discs are becoming common, content data recorded on an optical disc may be illegally copied and used. Alternatively, a copied disc may be illegally sold. As a result, there is a risk of which the copyright owner will suffer a loss from that. To solve such a problem, when content data such as audio data and video data are recorded on optical discs, content data is encrypted so as to protect the right of the copyright owner. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> As encrypting systems that are used when content data is recorded on optical discs, block encrypting systems such as DES (Data Encryption Standard) and tipple DES have been used. The DES is a typical common key encrypting system. In the DES, data of 64 bits is initially transposed (scrambled). Data of blocks each of which is composed of 32 bits is successively nonlinearly processed using 16 keys each of which is composed of one encryption key of 56 bits. The processed result is transposed once again and thereby encrypted data is obtained. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> However, since the length of each block of the block encrypting system such as DES is relatively short, there is a possibility of which similar blocks often take place. Thus, this system has a problem with respect an encrypting strength. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> To improve the encrypting strength, it has been considered to use CBC (Ciphering Block Chaining) system. In the CBC system, encrypted blocks of data are chained so as to improve the encrypting strength. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> In other words, in the CBC system, data of a current input block and data of which data of the immediately preceding block was encrypted are ex-ORed and encrypted. When encrypted data is decrypted, data of an encrypted block decrypted. The decrypted data and the data of the immediately preceded encrypted block are ex-ORed. As a result, the data of the original block is obtained. In the CBC system, when data is encrypted, data of the current block is chained with data of the immediately preceding encrypted block data. Thus, the encrypting strength can be improved. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> In such a manner, when data of a content is recorded on an optical disc corresponding to the CBC system, the encrypting strength is improved. As a result, the copyright can be more strongly protected. However, according to the CBC system, when data of the current block is changed with data of the immediately preceding encrypted block, data of the first block is encrypted, there is no data of the immediately preceding block, it is necessary to prepare an initial value. As an initial value for an encrypting process corresponding to the CBC system, a fixed value can be used as the simplest method. However, when a fixed value is used to perform an encrypting process corresponding to the CBC system, a problem with respect to secrecy takes place. Thus, even if the CBC system is used, a high encrypting strength cannot be maintained. In addition, to provide a fixed value as an initial value, it is necessary to store the fixed value somewhere. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Thus, it can be considered that an initial value is generated using data in another area contained in an encrypted block. Such data includes for example error correcting ECC (Error Correcting Code) and medium information. These data is not copyrighted data. Thus, it is not necessary to protect such data. Normally, they are not contained in an encrypted block. Thus, it is considered that an initial value is generated using data of another area such as ECC or medium information. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> shows an example of which an initial value used for an encrypting process corresponding to the CBC system is generated using data of another area such as ECC or medium information. As shown in <cross-reference target="DRAWINGS">FIG. 25</cross-reference>, input block data Di is 256 blocks of data that are block <highlight><bold>0</bold></highlight> to block <highlight><bold>255</bold></highlight>. Each block is composed of eight bytes (64 bits). </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> First of all, as an initial value inV, data is input from another area. An ex-OR gate <highlight><bold>501</bold></highlight> ex-ORes the input block data D<highlight><bold>0</bold></highlight> and the initial value inV. A block encrypting circuit <highlight><bold>502</bold></highlight> encrypts the output of the ex-OR gate <highlight><bold>501</bold></highlight> using the key information K and generates encrypted block data ED<highlight><bold>0</bold></highlight>. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Thereafter, the ex-OR gate <highlight><bold>501</bold></highlight> ex-ORes the input block data D<highlight><bold>1</bold></highlight> and the immediately preceding encrypted block data ED<highlight><bold>0</bold></highlight>. The block encrypting circuit <highlight><bold>102</bold></highlight> encrypts the output of the ex-OR gate <highlight><bold>501</bold></highlight> using the key information K and generates encrypted block data ED<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> In the same manner, the input block data Di and the immediately preceding encrypted block data EDi&minus;1 are ex-ORed. The block encrypting circuit <highlight><bold>502</bold></highlight> encrypts the output of the ex-OR gate <highlight><bold>501</bold></highlight> using the key information K and generates encrypted block data EDi. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Thus, when the initial value inV is generated using data of other than blocks (for example, ECC or medium information), since the initial value is not a fixed value, the secrecy is improved. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> However, the initial value inV is generated using data of other than blocks (for example, ECC or medium information), data other than data of a content is always required to perform the encrypting process. Thus, it is impossible to encrypt only data of a content and transmit the encrypted data. As a result, when data of a content is transmitted, it is necessary to transmit ECC or medium information along with the data of the content. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> As another method for generating an initial value necessary for an encrypting process corresponding to the CBC system, it can be considered that the initial value is generated using a random number. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> In other words, as shown in <cross-reference target="DRAWINGS">FIG. 26</cross-reference>, first of all, a value generated using a random number is placed as an initial value to block data D<highlight><bold>0</bold></highlight>. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> A block encrypting circuit <highlight><bold>512</bold></highlight> encrypts the block data D<highlight><bold>0</bold></highlight> to which the initial value was placed using the key information K and generates encrypted block data ED<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Thereafter, an ex-OR gate <highlight><bold>511</bold></highlight> ex-ORes input block data D<highlight><bold>1</bold></highlight> and the immediately preceding encrypted block data ED<highlight><bold>0</bold></highlight>. The block encrypting circuit <highlight><bold>512</bold></highlight> encrypts the output of the ex-OR gate <highlight><bold>511</bold></highlight> using the key information K and generates the encrypted block data ED<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> In the same manner, the input block data Di and the immediately preceding encrypted block data EDi&minus;1 are ex-ORed. The block encrypting circuit <highlight><bold>512</bold></highlight> encrypts the output of the ex-OR gate <highlight><bold>511</bold></highlight> using the key information K and generates encrypted block data EDi. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> However, when an initial value is generated using a random number, the initial value generated using the random number is placed to the block data D<highlight><bold>0</bold></highlight>. Thus, data of a content cannot be placed to the block data D<highlight><bold>0</bold></highlight>. As a result, data of a content can be placed to only 2040 bytes of 256 blocks (2048) bytes of blocks 0 to 255 of one sector. Consequently, the data area cannot be effectively used. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> In addition, to generate an initial value using a random number, a random number generating circuit is required. To improve the secrecy, it is necessary to generate a random code as a random number. However, when such a random number generating circuit is disposed, the circuit scale adversely increases. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Therefore, an object of the present invention is to provide an encrypting apparatus, an encrypting method, a decrypting apparatus, a decrypting method, and a storage medium that do not require data of a special area or a random number for an initial value necessary for a chain-encrypting process and that allow the secrecy of data to be improved. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Another object of the present invention is to provide an encrypting apparatus, an encrypting method, a decrypting apparatus, a decrypting method, and a storage medium that allow the data area to be effectively used when a chain-encrypting process is performed. </paragraph>
</section>
<section>
<heading lvl="1">DISCLOSURE OF THE INVENTION </heading>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The present invention is an encrypting apparatus, comprising a generating means for generating an initial value using data of a first portion of content data, and an encrypting means for encrypting data of a second portion of the content data using the generated initial value, outputting the encrypted data, and chain-encrypting data of portions other than the first portion and the second portion of the content data using the output encrypted data. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The present invention is an encrypting method, comprising the steps of generating an initial value using data of a first portion of content data, and encrypting data of a second portion of the content data using the generated initial value, outputting the encrypted data, and chain-encrypting data of portions other than the first portion and the second portion of the content data using the output encrypted data. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The present invention is a decrypting apparatus, comprising a decrypting means for decrypting data of a second portion of encrypted content data using an initial value that is data of a first portion of the encrypted content data, outputting the decrypted data, and chain-decrypting data of portions other than the first portion and the second portion using the data of the second portion of the encrypted content data, and a generating means for generating the data of the first portion using the data of the first portion of the encrypted content data. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The present invention is a decrypting method, comprising the steps of decrypting data of a second portion of encrypted content data using an initial value that is data of a first portion of the encrypted content data and outputting the decrypted data, chain-decrypting data of portions other than the first portion and the second portion using the data of the second portion of the encrypted content data, and generating the data of the first portion using the data of the first portion of the encrypted content data. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The present invention is a storage medium for storing data encrypted corresponding to an encrypting method, comprising the steps of generating an initial value using data of a first portion of content data, and encrypting data of a second portion of the content data using the generated initial value, outputting the encrypted data, and chain-encrypting data of portions other than the first portion and the second portion of the content data using the output encrypted data. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The present invention is an encrypting apparatus, comprising a generating means for generating an initial value using data of a predetermined portion of a stream of content data, and an encrypting means for encrypting the content data using the generated initial value, outputting the encrypted data, and chain-encrypting data of other portions of the content data using the output encrypted data. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The present invention is an encrypting method, comprising the steps of generating an initial value using data of a predetermined portion of a stream of content data, and encrypting the content data using the generated initial value, outputting the encrypted data, and chain-encrypting data of other portions of the content data using the output encrypted data. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The present invention is a decrypting apparatus, comprising a generating means for generating an initial value using data of a predetermined portion of a stream of content data, and a decrypting means for decrypting data of a first portion of encrypted content data using the initial value, outputting the decrypted data, and chain-decrypting data of a second portion that is different from the first portion using the data of the first portion of the encrypted content data. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The present invention is a decrypting method, comprising the steps of generating an initial value using data of a predetermined portion of a stream of content data, and decrypting data of a first portion of encrypted content data using the initial value and outputting the decrypted data, and chain-decrypting data of a second portion that is different from the first portion using the data of the first portion of the encrypted content data. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The present invention is a storage medium for storing data decrypted corresponding to a decrypting method, comprising the steps of generating an initial value using data of a predetermined portion of a stream of content data, and decrypting data of a first portion of encrypted content data using the initial value and outputting the decrypted data, and chain-decrypting data of a second portion that is different from the first portion using the data of the first portion of the encrypted content data. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Data of a content is block segmented and chain-encrypted. An initial value for the encrypting process is generated using the current sector of the data of the content. Thus, it is not necessary to generate the initial value using a random number or the like. As a result, there is no loss in the data area. In addition, since data of a content varies at random, the secrecy is high. In addition, since it is not necessary to provide a random number generator or the like, the circuit scale does not increase. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> In addition, an initial value generated using data of a content is encrypted using data of another content. Moreover, data of a content used as an initial value can be freely selected. Thus, the secrecy further improves. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> When an MPEG stream is recorded, an initial value is generated using unique information contained in a header. The information of the header is unique. Time information such as SCR and PTS chronologically varies. Thus, the secrecy is high. In addition, since an initial value for an encrypting process is generated using information of a header of an MPEG stream, the MPEG stream can be directly transmitted. Moreover, since it is not necessary to provide a random number generator or the like, the circuit scale does not increase.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF DRAWINGS </heading>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a schematic diagram showing an example of an optical disc according to the present invention; </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram showing an example of a recording apparatus according to the present invention; </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram showing an example of a reproducing apparatus according to the present invention; </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a schematic diagram showing the structure of a sector; </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a schematic diagram showing the structure of blocks; </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a block diagram for explaining an encrypting process according to the present invention; </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a block diagram for explaining the encrypting process according to the present invention; </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a block diagram for explaining a decrypting process according to the present invention; </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a block diagram for explaining a decrypting process according to the present invention; </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 10, 11</cross-reference>, <highlight><bold>12</bold></highlight>, <highlight><bold>13</bold></highlight>, <highlight><bold>14</bold></highlight>, <highlight><bold>15</bold></highlight>, and <highlight><bold>16</bold></highlight> are flow charts for explaining the encrypting process according to the present invention; </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a schematic diagram for explaining the case that an MPEG stream is recorded; </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a schematic diagram for explaining the case that an MPEG stream is recorded; </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a schematic diagram showing a block structure in the case that an MPEG stream is recorded; </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a block diagram for explaining an encrypting process according to the present invention; </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 21A and 21B</cross-reference> are block diagrams for explaining an encrypting process according to the present invention; </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a block diagram for explaining an encrypting process according to the present invention; </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> is a block diagram for explaining an encrypting process according to the present invention; </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> is a block diagram for explaining a decrypting process according to the present invention; </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is a block diagram for explaining a conventional encrypting process; and <cross-reference target="DRAWINGS">FIG. 26</cross-reference> is a block diagram for explaining a conventional encrypting process.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">BEST MODES FOR CARRYING OUT THE INVENTION </heading>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> Next, with reference to the accompanying drawings, an embodiment of the present invention will be described. The present invention is suitable for encrypting data of a content so as to protect the data when it is recorded to and reproduced from for example a CD (Compact Disc) 2. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows an external structure of a CD2 according to the present invention. As with a conventional CD, the CD2 is an optical disc having a diameter of for example 120 mm. However, as with a so-called single CD, the diameter of the CD2 may be 80 mm. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> The CD2 has been designated to have an affinity with both a conventional CD player and a personal computer. As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the CD2 has a center hole. On the inner periphery side, an area AR<highlight><bold>1</bold></highlight> is formed. On an outer periphery of the area AR<highlight><bold>1</bold></highlight>, an area AR<highlight><bold>2</bold></highlight> is formed. A mirror portion M<highlight><bold>1</bold></highlight> is formed between the inner periphery area AR<highlight><bold>1</bold></highlight> and the outer periphery area AR<highlight><bold>2</bold></highlight>. The mirror portion M<highlight><bold>1</bold></highlight> separates the inner periphery area AR<highlight><bold>1</bold></highlight> from the outer periphery area AR<highlight><bold>2</bold></highlight>. On the innermost periphery of the inner periphery area AR<highlight><bold>1</bold></highlight>, a lead-in area LIN<highlight><bold>1</bold></highlight> is formed. On the outermost periphery, a lead-out area LOUT<highlight><bold>1</bold></highlight> is formed. On the innermost periphery of the outermost periphery area AR<highlight><bold>2</bold></highlight>, a lead-in area LIN<highlight><bold>2</bold></highlight> is formed. On the outer periphery of the outer periphery area AR<highlight><bold>2</bold></highlight>, a lead-out area LOUT<highlight><bold>2</bold></highlight> is formed. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> The inner periphery area AR<highlight><bold>1</bold></highlight> is an area that has an affinity with a conventional CD player. In the area AR<highlight><bold>1</bold></highlight>, for example audio data is recorded in the same format as the conventional CD-DA (CD Digital Audio) so that the data can be reproduced by a conventional CD player. In addition, data recorded in the inner periphery area AR<highlight><bold>1</bold></highlight> is not encrypted so that the data can be treated in the same manner as the regular CD-DA. Of course, to protect the copyright of data recorded in the inner periphery area AR<highlight><bold>1</bold></highlight>, the data may be encrypted. In addition, in the inner periphery area AR<highlight><bold>1</bold></highlight>, non-audio data for example video data or computer program data may be recorded. In addition, compressed data of a content may be recorded in the inner periphery area AR<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> In contrast, the outer periphery area AR<highlight><bold>2</bold></highlight> is an area that has an affinity with a personal computer. In the outer periphery area AR<highlight><bold>2</bold></highlight>, data can be recorded in double density. In the area AR<highlight><bold>2</bold></highlight>, compressed audio data is recorded. The compressing system is for example MP3 (MPEG-1 Audio Layer-3) system. In addition, to allow the outer periphery area AR<highlight><bold>2</bold></highlight> to have an affinity with a personal computer, data is recorded as a file in the outer periphery area AR<highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> The MP3 system is one of three layer compressing systems prescribed in MPEG1. Outputs of individual bands are divided on the frequency axis corresponding to MDCT (Modified Discrete Cosine Transform), quantized, and then Huffman-encoded. When audio data is compressed corresponding to the MP3 system, the record capacity can be increased. In addition, data can be handled as a file of a personal computer. Thus, data of a content recorded as a file in the outer periphery area AR<highlight><bold>2</bold></highlight> corresponding to the MP<highlight><bold>3</bold></highlight> system can be moved to a hard disk of a personal computer so that a music server is formed in the personal computer. Alternatively, data of a content recorded as a file in the outer periphery area AR<highlight><bold>2</bold></highlight> may be moved to a flash memory of a portable MP3 reproducing player so that the user can reproduce and enjoy songs outdoors. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> In such a manner, data of a content recorded in the outer periphery area AR<highlight><bold>2</bold></highlight> has a affinity with a personal computer. Thus, data of a content recorded in the outer periphery area AR<highlight><bold>2</bold></highlight> can be easily handled. However, data of a content recorded in the outer periphery area AR<highlight><bold>2</bold></highlight> is often moved to the outside. Thus, there is a possibility of which the copyright of such data may not be protected. Thus, to restrict the copying operation and the reproducing operation of data of a content recorded in the outer periphery area AR<highlight><bold>2</bold></highlight>, the data is encrypted. In addition, copyright management information that represents copy prohibition/permission, copy generation management, restriction of number of times of coping operation, reproduction prohibition/permission, restriction of number of times of reproducing operation, and restriction of reproduction time period is recorded in the outer periphery area AR<highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> In this example, data recorded in the area AR<highlight><bold>2</bold></highlight> is treated as a file corresponding to the MP3 system. Of course, data of a content recorded in the area AR<highlight><bold>2</bold></highlight> is not limited to a file corresponding to the MP3 system. Other examples of the compressing system of audio data are MPEG2-AAC (Advanced Audio Coding) and ATRAC (Adaptive TRansform Acoustic Coding) 3. Besides audio data, various types of data such as video data, still picture data, text data, and computer programs can be recorded to the area AR<highlight><bold>2</bold></highlight>. In addition, when not necessary, data of a content recorded to the area AR<highlight><bold>2</bold></highlight> may not be encrypted. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> In such a manner, in the CD2 , using the inner periphery area AR<highlight><bold>1</bold></highlight>, data can be reproduced with a CD player in the same manner as the conventional CD. In addition, using the outer periphery area AR<highlight><bold>2</bold></highlight>, data can be handled in association with both a personal computer and a portable player. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> The present invention is suitable for the case that data of a content that is encrypted is recorded to the outer periphery area AR<highlight><bold>2</bold></highlight> of such a CD2 and reproduced therefrom. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows an example of a recording apparatus according to the present invention. In <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, content data is supplied to an input terminal <highlight><bold>1</bold></highlight>. The content data is for example PCM data or an MP3 stream. Alternatively, various types of data such as moving picture data, still picture data, game program data, web page data, and text may be recorded as content data. The content data is supplied from the input terminal <highlight><bold>1</bold></highlight> to an encrypting circuit <highlight><bold>4</bold></highlight>. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> In addition, key information K is supplied to an input terminal <highlight><bold>2</bold></highlight>. The key information K supplied from the input terminal <highlight><bold>2</bold></highlight> is supplied to the encrypting circuit <highlight><bold>4</bold></highlight>. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> The encrypting circuit <highlight><bold>4</bold></highlight> encrypts the content data supplied from the input terminal <highlight><bold>1</bold></highlight> using the key information K supplied from the input terminal <highlight><bold>2</bold></highlight>. The encrypting system is for example block encrypting system. In the block encrypting system, data is encrypted in the unit of for example eight bytes. The encrypting circuit <highlight><bold>4</bold></highlight> has a block segmenting circuit. In the example, data that is encrypted in the unit of a block is chained so as to improve the encrypting strength. The encrypting system of which data that has been encrypted in the unit of a block is chained is known as CBC (Ciphering Block Chaining) system. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> An output of the encrypting circuit <highlight><bold>4</bold></highlight> is supplied to an error correction code encoding circuit <highlight><bold>5</bold></highlight>. The error correction code encoding circuit <highlight><bold>5</bold></highlight> adds an error correction code to the content data that has been encrypted by the encrypting circuit <highlight><bold>4</bold></highlight>. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> An output of the error correction code encoding circuit <highlight><bold>5</bold></highlight> is supplied to a modulating circuit <highlight><bold>6</bold></highlight>. The modulating circuit <highlight><bold>6</bold></highlight> modulates record data corresponding to a predetermined modulating system. An output of the modulating circuit <highlight><bold>6</bold></highlight> is supplied to a recording circuit <highlight><bold>7</bold></highlight>. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> An output of the recording circuit <highlight><bold>7</bold></highlight> is supplied to an optical pickup <highlight><bold>8</bold></highlight>. The recording circuit <highlight><bold>7</bold></highlight> is controlled by a system controller <highlight><bold>13</bold></highlight>. Data is recorded to an optical disc <highlight><bold>10</bold></highlight> by the optical pickup <highlight><bold>8</bold></highlight>. The optical disc <highlight><bold>10</bold></highlight> is for example a CD2 disc. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> The optical pickup <highlight><bold>8</bold></highlight> can be moved in the radius direction of the optical disc <highlight><bold>10</bold></highlight>. In addition, various types of servo circuits are disposed (not shown). They are a tracking servo circuit, a focus servo circuit, a spindle servo circuit, and so forth. The tracking servo circuit causes laser light of the optical pickup <highlight><bold>8</bold></highlight> to be radiated along a track of the optical disc <highlight><bold>10</bold></highlight>. The focus servo circuit causes a spot of the laser light of the optical pickup <highlight><bold>8</bold></highlight> to be focused on the optical disc <highlight><bold>10</bold></highlight>. The spindle servo circuit controls the rotation of the optical disc <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> The key information K that is supplied from the input terminal <highlight><bold>2</bold></highlight> is supplied to a mixing circuit <highlight><bold>9</bold></highlight>. Copyright management information R is supplied to an input terminal <highlight><bold>3</bold></highlight>. The copyright management information R is supplied to the mixing circuit <highlight><bold>9</bold></highlight> through a rewriting circuit <highlight><bold>11</bold></highlight>. An output of the mixing circuit <highlight><bold>9</bold></highlight> is supplied to the optical pickup <highlight><bold>8</bold></highlight> through a recording circuit <highlight><bold>12</bold></highlight>. The optical pickup <highlight><bold>8</bold></highlight> records the key information K and the copyright management information R to the optical disc <highlight><bold>10</bold></highlight> through the recording circuit <highlight><bold>12</bold></highlight>. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> The copyright management information R is information that represents copy prohibition/permission, copy generation management, restriction of number of times of coping operation, reproduction prohibition/permission, restriction of number of times of reproducing operation, and restriction of reproduction time period. When the copy generation is managed, the number of times of coping operation is restricted, the number of times of reproducing operation is restricted, or the reproduction time period is restricted, whenever the coping operation or the reproducing operation is performed, it is necessary to rewrite the copyright management information R. The copyright management information R is rewritten by the rewriting circuit <highlight><bold>11</bold></highlight>. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> It can be considered that the key information K and the copyright management information R are recorded in a lead-in area or a lead-out area of the optical disc <highlight><bold>10</bold></highlight> or recorded as wobbled data in the radius direction of a track. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows the structure of a reproducing system. In <cross-reference target="DRAWINGS">FIG. 3, a</cross-reference> record signal of an optical disc <highlight><bold>20</bold></highlight> is reproduced by an optical pickup <highlight><bold>22</bold></highlight>. The optical disc <highlight><bold>20</bold></highlight> corresponds to the optical disc <highlight><bold>10</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. The optical disc <highlight><bold>20</bold></highlight> is for example a CD2. An output of the optical pickup <highlight><bold>22</bold></highlight> is supplied to a demodulating circuit <highlight><bold>24</bold></highlight> through a reproducing amplifier <highlight><bold>23</bold></highlight>. The operation of the optical pickup <highlight><bold>22</bold></highlight> is controlled by an access controlling circuit <highlight><bold>30</bold></highlight> under the control of a system controller <highlight><bold>29</bold></highlight>. The access controlling circuit <highlight><bold>30</bold></highlight> is composed of servo circuits that are an optical pickup moving mechanism, a tracking servo circuit, and a focus servo circuit. The tracking servo circuit causes laser light of the optical pickup <highlight><bold>22</bold></highlight> to be radiated along a track of the optical disc <highlight><bold>20</bold></highlight>. The focus servo circuit causes a spot of laser light of the input terminal <highlight><bold>2</bold></highlight> to be focused on the optical disc <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> An output of the demodulating circuit <highlight><bold>24</bold></highlight> is supplied to an error correcting circuit <highlight><bold>25</bold></highlight>. The error correcting circuit <highlight><bold>25</bold></highlight> performs an error correcting process for a signal that is supplied from the demodulating circuit <highlight><bold>24</bold></highlight>. An output of the error correcting circuit <highlight><bold>25</bold></highlight> is supplied to a decrypting circuit <highlight><bold>26</bold></highlight>. In addition, the output of the error correcting circuit <highlight><bold>25</bold></highlight> is supplied to a key management information reading circuit <highlight><bold>27</bold></highlight>. An output of the key management information reading circuit <highlight><bold>27</bold></highlight> is supplied to the decrypting circuit <highlight><bold>26</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> The decrypting circuit <highlight><bold>26</bold></highlight> performs a decrypting process for the reproduced data using the key information K that is read by the key management information reading circuit <highlight><bold>27</bold></highlight>. As was described above, in the example, as the encrypting system, the CBC system is used. The decrypting circuit <highlight><bold>26</bold></highlight> performs a decrypting process for data that has been encrypted corresponding to the CBC system. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> An output of the decrypting circuit <highlight><bold>26</bold></highlight> is supplied to a reproducing circuit <highlight><bold>28</bold></highlight>. An output of the reproducing circuit <highlight><bold>28</bold></highlight> is output from an output terminal <highlight><bold>31</bold></highlight>. Using the copyright management information R that is read by the key management information reading circuit <highlight><bold>27</bold></highlight>, the copying operation and the reproducing operation are restricted. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> As was described above, in the example, as the encrypting system, the CBC system is used. In other words, in the recording system, the encrypting circuit <highlight><bold>4</bold></highlight> performs an encrypting process for the input content data corresponding to the CBC system. In the reproducing system, the decrypting circuit <highlight><bold>26</bold></highlight> performs a decrypting process for the reproduced content data. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> The block encrypting system may be DES, AES, FEAL, or MISTY. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> In the CBC system, encrypted data is chained in the unit of a block so as to improve the encrypting strength. In the example, as shown in <cross-reference target="DRAWINGS">FIG. 4, </cross-reference>2048 bytes are defined as one sector. In the unit of a sector, data is recorded to and reproduced from the optical disc <highlight><bold>10</bold></highlight> (<highlight><bold>20</bold></highlight>). </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> In other words, in a CD, a sub code block composed of <highlight><bold>98</bold></highlight> frames is defined as one sector. The size of the area of one sector is 2352 bytes. 2048 bytes of the 2352 bytes are used as a data area. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> When data is encrypted corresponding to the DES system, 64 bits are processed as one block. A key of 56 bits is used. Thus, as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, one sector is divided into 256 blocks in the unit of eight bytes (64 bits). </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> In each sector, each block is chained with the immediately preceding block so as to perform an encrypting process corresponding to the CBC system. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> In other words, in the CBC system, the current block data and data of which the immediately preceding block data has been encrypted are ex-ORed. The resultant data is encrypted. After one sector has been encrypted corresponding to the CBC system, the next sector is encrypted corresponding to the CBC system in the same manner. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> Thus, in the example, corresponding to the CBC system, the encrypting strength is improved. In each sector, the encrypting process is performed corresponding to the CBC system. Thus, even if data cannot be reproduced due to an occurrence of an error, the influence does not adversely affect the other sectors. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> According to the embodiment of the present invention, as an initial value, data of a block of the same sector is used. Since data of a block of the same sector is used as an initial value, there is no loss in the data area. When content data is music data or video data, the value itself varies at random. Thus, when content data is used, the secrecy of the initial value becomes high. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> When data of a block of the same sector is used as an initial value, the data itself does not have a high secrecy. Thus, it can be considered that encrypted data of a block of the same sector is used as an initial value. In addition, in the example, data of one block of the same sector and data of another block of the same sector are ex-ORed. The resultant data is encrypted and used as an initial value. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> Next, with reference to <cross-reference target="DRAWINGS">FIGS. 6 and 7</cross-reference>, the encrypting process will be described. <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows a process for generating an initial value. <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows a process for performing a chain-block-encrypting process. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> When an encrypting process is performed, as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, an initial value is generated. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> In other words, as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, one block data Dj of block data D<highlight><bold>0</bold></highlight> to D<highlight><bold>255</bold></highlight> of one sector is supplied to an ex-OR gate <highlight><bold>101</bold></highlight>. In addition, a function f (Di) of one block data Di that is not the block data Dj of the same sector is supplied to the ex-OR gate <highlight><bold>101</bold></highlight>. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> The ex-OR gate <highlight><bold>101</bold></highlight> ex-ORes the block data Dj and the function f (Di) of the block data Di that is not the block data Dj. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> In this case, a plurality of block data Di that are not the block data Dj may be used. Thus, a plurality of functions f (Di) may be used. In addition, the function(s) f (Di) may be any function(s). </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> An output of the ex-OR gate <highlight><bold>101</bold></highlight> is supplied to a block encrypting circuit <highlight><bold>102</bold></highlight>. The block encrypting circuit <highlight><bold>102</bold></highlight> encrypts the output of the ex-OR gate <highlight><bold>101</bold></highlight> using key information K. As a result, an initial value inV is obtained. This value is also used as data EDj of which the block data Dj is encrypted. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> After the initial value has been obtained, as shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, using the initial value, the current block data and data of which the immediately preceding block data has been encrypted are ex-ORed. The resultant data is encrypted. When the current block data is Dj, the data EDj that is an initial value is used as encrypted block data. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> In other words, when input block data Dj used as an initial value is one of (j&equals;1 to 254), the input block data Dj is encrypted in the following manner. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> First of all, an ex-OR gate <highlight><bold>111</bold></highlight> ex-ORes input block data D<highlight><bold>0</bold></highlight> and the initial value inV obtained in the process shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. An output of the ex-OR gate <highlight><bold>111</bold></highlight> is supplied to a block encrypting circuit <highlight><bold>112</bold></highlight>. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> The block encrypting circuit <highlight><bold>112</bold></highlight> obtains encrypted block data ED<highlight><bold>0</bold></highlight> using the output of the ex-OR gate <highlight><bold>111</bold></highlight> and the key information K. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> Thereafter, the ex-OR gate <highlight><bold>111</bold></highlight> ex-ORes input block data D<highlight><bold>1</bold></highlight> and the encrypted block data ED<highlight><bold>0</bold></highlight>. An output of the ex-OR gate <highlight><bold>111</bold></highlight> is supplied to the block encrypting circuit <highlight><bold>112</bold></highlight>. The block encrypting circuit <highlight><bold>112</bold></highlight> obtains encrypted block data ED<highlight><bold>1</bold></highlight> using the output of the ex-OR gate <highlight><bold>111</bold></highlight> and the key information K. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> In the same manner, using input data D<highlight><bold>2</bold></highlight>, D<highlight><bold>3</bold></highlight>, . . ., and so forth, encrypted block data ED<highlight><bold>2</bold></highlight>, ED<highlight><bold>3</bold></highlight>, . . . and so forth are obtained. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> The input block data D<highlight><bold>2</bold></highlight>, D<highlight><bold>3</bold></highlight>, . . ., and so forth are encrypted. When the input block data becomes Dj, the initial value inV obtained in the process shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is output as the encrypted block data EDj. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> Thereafter, the ex-OR gate <highlight><bold>111</bold></highlight> ex-ORes the input block data Di and the encrypted block data EDi&minus;1. An output of the ex-OR gate <highlight><bold>111</bold></highlight> is supplied to the block encrypting circuit <highlight><bold>112</bold></highlight>. The block encrypting circuit <highlight><bold>112</bold></highlight> obtains the encrypted block data EDi using the output of the ex-OR gate <highlight><bold>111</bold></highlight> and the key information K. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> Until the input block data D<highlight><bold>255</bold></highlight> is encrypted and thereby the encrypted block data ED<highlight><bold>255</bold></highlight> is output, the same process is repeated. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> When the input block data Dj that is input as the initial value is the first block data (j&equals;0), the encrypting process is performed in the following manner. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> First of all, the initial value inV obtained in the process shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is output as the encrypted block data ED<highlight><bold>0</bold></highlight>. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> Thereafter, the ex-OR gate <highlight><bold>111</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference> ex-ORes the input block data D<highlight><bold>1</bold></highlight> and the encrypted block data ED<highlight><bold>0</bold></highlight> (equal to the initial value InV). An output of the ex-OR gate <highlight><bold>111</bold></highlight> is supplied to the block encrypting circuit <highlight><bold>112</bold></highlight>. The block encrypting circuit <highlight><bold>112</bold></highlight> obtains the encrypted block data ED<highlight><bold>1</bold></highlight> using the output of the ex-OR gate <highlight><bold>111</bold></highlight> and the key information K. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> Until the input data D<highlight><bold>255</bold></highlight> is encrypted and thereby the encrypted block data ED<highlight><bold>255</bold></highlight> is output, the same process is repeated. Using the input data D<highlight><bold>2</bold></highlight>, D<highlight><bold>3</bold></highlight>, . . ., and so forth, the encrypted block data ED<highlight><bold>2</bold></highlight>, ED<highlight><bold>3</bold></highlight>, . . ., and so forth are obtained. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> When the input block data Dj used as the initial value is the last block data (j&equals;255), the encrypting process is performed in the following manner. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> First of all, the ex-OR gate <highlight><bold>111</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference> ex-ORes the input block data D<highlight><bold>0</bold></highlight> and the initial value inV obtained in the process shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. An output of the ex-OR gate <highlight><bold>111</bold></highlight> is supplied to the block encrypting circuit <highlight><bold>112</bold></highlight>. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> The block encrypting circuit <highlight><bold>112</bold></highlight> obtains the encrypted block data ED<highlight><bold>0</bold></highlight> using the output of the ex-OR gate <highlight><bold>111</bold></highlight> and the key information K. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> Thereafter, the ex-OR gate <highlight><bold>111</bold></highlight> ex-ORes the input block data D<highlight><bold>1</bold></highlight> and the encrypted block data ED<highlight><bold>0</bold></highlight>. An output of the ex-OR gate <highlight><bold>111</bold></highlight> is supplied to the block encrypting circuit <highlight><bold>112</bold></highlight>. The block encrypting circuit <highlight><bold>112</bold></highlight> obtains the encrypted block data ED<highlight><bold>1</bold></highlight> using the output of the ex-OR gate <highlight><bold>111</bold></highlight> and the key information K. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> Thereafter, in the same manner, using the input data D<highlight><bold>2</bold></highlight>, D<highlight><bold>3</bold></highlight>, . . ., and so forth, the encrypted block data ED<highlight><bold>2</bold></highlight>, ED<highlight><bold>3</bold></highlight>, . . ., and so forth are obtained. Until the encrypted block data ED<highlight><bold>254</bold></highlight> of the input data D<highlight><bold>254</bold></highlight> is obtained, the same process is repeated. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> When the current block data becomes the last block data D<highlight><bold>255</bold></highlight>, the initial value inV obtained in the process shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is output as the encrypted block data ED<highlight><bold>255</bold></highlight>. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> Next, with reference to <cross-reference target="DRAWINGS">FIGS. 8 and 9</cross-reference>, a decrypting process will be described. <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows a process for performing a chain-block-encrypting process. <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows a process for decrypting block data of which an initial value has been encrypted. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> When input block data Dj that is used as an initial value is one of (j&equals;1 to 254), the decrypting process is performed in the following manner. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> First of all, as shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, encrypted block data ED<highlight><bold>0</bold></highlight> and key information K are supplied to an encrypted block decrypting circuit <highlight><bold>121</bold></highlight>. The encrypted block decrypting circuit <highlight><bold>121</bold></highlight> performs a decrypting process using the encrypted block data ED<highlight><bold>0</bold></highlight> and the key information K. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> An output of the encrypted block decrypting circuit <highlight><bold>121</bold></highlight> is supplied to an ex-OR gate <highlight><bold>122</bold></highlight>. In addition, an initial value inV is supplied to the ex-OR gate <highlight><bold>122</bold></highlight>. The initial value inV is encrypted block data EDj. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> The ex-OR gate <highlight><bold>122</bold></highlight> ex-ORes the output of the encrypted block decrypting circuit <highlight><bold>121</bold></highlight> and the encrypted block data EDj and obtains block data D<highlight><bold>0</bold></highlight>. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> Thereafter, encrypted block data ED<highlight><bold>1</bold></highlight> and the key information K are supplied to the encrypted block decrypting circuit <highlight><bold>121</bold></highlight>. The encrypted block decrypting circuit <highlight><bold>121</bold></highlight> performs the decrypting process using the encrypted block data ED<highlight><bold>1</bold></highlight> using the key information K. An output of the encrypted block decrypting circuit <highlight><bold>121</bold></highlight> is supplied to the ex-OR gate <highlight><bold>122</bold></highlight>. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> In addition, the immediately preceding encrypted block data ED<highlight><bold>0</bold></highlight> is supplied to the ex-OR gate <highlight><bold>122</bold></highlight>. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> The ex-OR gate <highlight><bold>122</bold></highlight> ex-ORes the output of the encrypted block decrypting circuit <highlight><bold>121</bold></highlight> and the immediately preceding encrypted block data ED<highlight><bold>0</bold></highlight> and obtains block data D<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> Thereafter, in the same manner, using the encrypted block data ED<highlight><bold>1</bold></highlight>, ED<highlight><bold>2</bold></highlight>, . . ., and so forth, the block data D<highlight><bold>1</bold></highlight>, D<highlight><bold>2</bold></highlight>, . . ., and so forth are obtained. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> While the block data D<highlight><bold>2</bold></highlight>, D<highlight><bold>3</bold></highlight>, . . ., and so forth are obtained, when the block data to be decrypted becomes the encrypted block data EDj that is the same as the initial value, as shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, the encrypted block data EDj and the key information K are supplied to an encrypted block decrypting circuit <highlight><bold>131</bold></highlight>. The encrypted block decrypting circuit <highlight><bold>131</bold></highlight> performs the decrypting process using the encrypted block data EDj and the key information K. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> An output of the encrypted block decrypting circuit <highlight><bold>131</bold></highlight> is supplied to an ex-OR gate <highlight><bold>132</bold></highlight>. In addition, a function f (Di) of data that is not the block data Dj is supplied to the ex-OR gate <highlight><bold>132</bold></highlight>. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> The ex-OR gate <highlight><bold>132</bold></highlight> ex-ORes the output of the encrypted block decrypting circuit <highlight><bold>131</bold></highlight> and the function f (Di) of data that is not the block data Dj and obtains block data Dj. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> After the block data Dj has been obtained, returning to the process shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, the encrypted block data EDi and the key information K are supplied to the encrypted block decrypting circuit <highlight><bold>121</bold></highlight>. The encrypted block decrypting circuit <highlight><bold>121</bold></highlight> performs the decrypting process using the encrypted block data EDi and the key information K. An output of the encrypted block decrypting circuit <highlight><bold>121</bold></highlight> is supplied to the ex-OR gate <highlight><bold>122</bold></highlight>. In addition, the immediately preceding encrypted block data EDi&minus;1 is supplied to the ex-OR gate <highlight><bold>122</bold></highlight>. The ex-OR gate <highlight><bold>122</bold></highlight> ex-ORes the output of the encrypted block decrypting circuit <highlight><bold>121</bold></highlight> and the immediately preceding encrypted block data EDi&minus;1 and obtains block data Di. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> Thereafter, until the encrypted block data ED<highlight><bold>255</bold></highlight> is decrypted, the same process is repeated. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> When the input block data Dj used as the initial value is the first block data (j&equals;0), the decrypting process is performed in the following manner. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> First of all, as shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, the encrypted block data ED<highlight><bold>0</bold></highlight> and the key information K are supplied to the encrypted block decrypting circuit <highlight><bold>131</bold></highlight>. The encrypted block decrypting circuit <highlight><bold>131</bold></highlight> performs the decrypting process using the encrypted block data ED<highlight><bold>0</bold></highlight> and the key information K. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> An output of the encrypted block decrypting circuit <highlight><bold>131</bold></highlight> is supplied to the ex-OR gate <highlight><bold>132</bold></highlight>. In addition, a function f (Di) of data that is not the block data D<highlight><bold>0</bold></highlight> is supplied to the ex-OR gate <highlight><bold>132</bold></highlight>. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> The ex-OR gate <highlight><bold>132</bold></highlight> ex-ORes the output of the encrypted block decrypting circuit <highlight><bold>131</bold></highlight> and the function f (Di) of data that is not the block data Dj and obtains the block data D<highlight><bold>0</bold></highlight>. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> After the block data D<highlight><bold>0</bold></highlight> has been obtained, as shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, the encrypted block data ED<highlight><bold>1</bold></highlight> and the key information K are supplied to the encrypted block decrypting circuit <highlight><bold>121</bold></highlight>. The encrypted block decrypting circuit <highlight><bold>121</bold></highlight> performs the decrypting process using the encrypted block data ED<highlight><bold>1</bold></highlight> and the key information K. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> An output of the encrypted block decrypting circuit <highlight><bold>121</bold></highlight> is supplied to the ex-OR gate <highlight><bold>122</bold></highlight>. In addition, the initial value inV is supplied to the ex-OR gate <highlight><bold>122</bold></highlight>. The initial value inV is encrypted block data ED<highlight><bold>0</bold></highlight>. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> The ex-OR gate <highlight><bold>122</bold></highlight> ex-ORes the output of the encrypted block decrypting circuit <highlight><bold>121</bold></highlight> and the encrypted block data ED<highlight><bold>0</bold></highlight> and obtains the block data D<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> Thereafter, the encrypted block data ED<highlight><bold>2</bold></highlight> and the key information K are supplied to the encrypted block decrypting circuit <highlight><bold>121</bold></highlight>. The encrypted block decrypting circuit <highlight><bold>121</bold></highlight> performs the decrypting process using the encrypted block data ED<highlight><bold>2</bold></highlight> and the key information K. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> An output of the encrypted block decrypting circuit <highlight><bold>121</bold></highlight> is supplied to the ex-OR gate <highlight><bold>122</bold></highlight>. In addition, the immediately preceding encrypted block data ED<highlight><bold>1</bold></highlight> is supplied to the ex-OR gate <highlight><bold>122</bold></highlight>. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> The ex-OR gate <highlight><bold>122</bold></highlight> ex-ORes the output of the encrypted block decrypting circuit <highlight><bold>121</bold></highlight> and the immediately preceding encrypted block data ED<highlight><bold>1</bold></highlight> and obtains block data D<highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> Thereafter, until the encrypted block data ED<highlight><bold>255</bold></highlight> is decrypted, the same process is repeated. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> When the input block data used as the initial value is the last block data (j&equals;255), the decrypting process is performed in the following manner. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> First of all, as shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, encrypted block data ED<highlight><bold>0</bold></highlight> and key information K are supplied to the encrypted block decrypting circuit <highlight><bold>121</bold></highlight>. The encrypted block decrypting circuit <highlight><bold>121</bold></highlight> performs the decrypting process using the encrypted block data ED<highlight><bold>0</bold></highlight> and the key information K. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> An output of the encrypted block decrypting circuit <highlight><bold>121</bold></highlight> is supplied to the ex-OR gate <highlight><bold>122</bold></highlight>. In addition, an initial value inV is supplied to the ex-OR gate <highlight><bold>122</bold></highlight>. The initial value inV is encrypted block data ED<highlight><bold>255</bold></highlight>. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> The ex-OR gate <highlight><bold>122</bold></highlight> ex-ORes the output of the encrypted block decrypting circuit <highlight><bold>121</bold></highlight> and the encrypted block data ED<highlight><bold>255</bold></highlight> and obtains block data D<highlight><bold>0</bold></highlight>. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> Thereafter, the encrypted block data ED<highlight><bold>1</bold></highlight> and the key information K are supplied to the encrypted block decrypting circuit <highlight><bold>121</bold></highlight>. The encrypted block decrypting circuit <highlight><bold>121</bold></highlight> performs the decrypting process using the encrypted block data ED<highlight><bold>1</bold></highlight> and the key information K. An output of the encrypted block decrypting circuit <highlight><bold>121</bold></highlight> is supplied to the ex-OR gate <highlight><bold>122</bold></highlight>. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> In addition, the immediately preceding encrypted block data ED<highlight><bold>0</bold></highlight> is supplied to the ex-OR gate <highlight><bold>122</bold></highlight>. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> The ex-OR gate <highlight><bold>122</bold></highlight> ex-ORes the output of the encrypted block decrypting circuit <highlight><bold>121</bold></highlight> and the immediately preceding encrypted block data ED<highlight><bold>0</bold></highlight> and obtains block data D<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> Thereafter, in the same manner, using the encrypted block data ED<highlight><bold>2</bold></highlight>, ED<highlight><bold>3</bold></highlight>, . . ., and so forth, block data D<highlight><bold>2</bold></highlight>, D<highlight><bold>3</bold></highlight>, . . ., and so forth are obtained. </paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> After the encrypted block data ED<highlight><bold>254</bold></highlight> has been decrypted and thereby block data D<highlight><bold>254</bold></highlight> has been obtained, as shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, the encrypted block data ED<highlight><bold>255</bold></highlight> and the key information K are supplied to the encrypted block decrypting circuit <highlight><bold>121</bold></highlight>. The encrypted block decrypting circuit <highlight><bold>131</bold></highlight> performs the decrypting process using the encrypted block data ED<highlight><bold>255</bold></highlight> and the key information K. </paragraph>
<paragraph id="P-0151" lvl="0"><number>&lsqb;0151&rsqb;</number> An output of the encrypted block decrypting circuit <highlight><bold>131</bold></highlight> is supplied to the ex-OR gate <highlight><bold>132</bold></highlight>. In addition, a function f (Di) of data that is not the block data Dj is supplied to the ex-OR gate <highlight><bold>132</bold></highlight>. </paragraph>
<paragraph id="P-0152" lvl="0"><number>&lsqb;0152&rsqb;</number> The ex-OR gate <highlight><bold>132</bold></highlight> ex-ORes the output of the encrypted block decrypting circuit <highlight><bold>131</bold></highlight> and a function f (Di) of data that is not the block data Dj and obtains block data D<highlight><bold>255</bold></highlight>. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> In the forgoing example, the chain, initial value, and key information are processed with 64 bits each. However, they may be processed with 128 bits each or 256 bits each. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> FIGS. <highlight><bold>10</bold></highlight> to <highlight><bold>12</bold></highlight> are flow charts showing a process for encrypting data and recording the encrypted data. In the process, one sector composed of for example 2048 bytes is encrypted corresponding to the CBC system. One sector is divided into 256 blocks each of which is composed of eight bytes (64 bits). </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, block data Dj of block data D<highlight><bold>0</bold></highlight> to D<highlight><bold>255</bold></highlight> of one sector (for example, 2048 bytes) is read (at step S<highlight><bold>1</bold></highlight>). The block data Dj and a function f (Di) of the block data Di are ex-ORed. The resultant data is encrypted using key information K. As a result, an initial value inV is generated (at step S<highlight><bold>2</bold></highlight>). The initial value inV is stored (at step S<highlight><bold>3</bold></highlight>). </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> It is determined whether or not the block data Dj used to generate the initial value is the first block data (j&equals;0) (at step S<highlight><bold>4</bold></highlight>). </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> When the block data Dj is the first block data (j&equals;0), the initial value inV is read (at step S<highlight><bold>5</bold></highlight>). The initial value inV is treated as the encrypted block data ED<highlight><bold>0</bold></highlight> of the block data D<highlight><bold>0</bold></highlight> (at step S<highlight><bold>6</bold></highlight>). The obtained encrypted block data ED<highlight><bold>0</bold></highlight> is stored (at step S<highlight><bold>7</bold></highlight>). </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> The number i of the block data is initialized to &ldquo;1&rdquo; (i&equals;1) (at step S<highlight><bold>8</bold></highlight>). The initial value inV is read (the initial value inV is the same as the encrypted block data D<highlight><bold>0</bold></highlight>) (at step S<highlight><bold>9</bold></highlight>). The block data D<highlight><bold>1</bold></highlight> is read (at step S<highlight><bold>10</bold></highlight>). The initial value inV and the block data D<highlight><bold>1</bold></highlight> are ex-ORed. The resultant data is encrypted using the key information K. As a result, the encrypted block data ED<highlight><bold>1</bold></highlight> of the block data D<highlight><bold>1</bold></highlight> is generated (at step S<highlight><bold>11</bold></highlight>). The encrypted block data EDi is stored (at step S<highlight><bold>12</bold></highlight>). The number i of the block data is incremented to &ldquo;2&rdquo; (i&equals;2) (at step S<highlight><bold>13</bold></highlight>). </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> After the number i of the block data has been incremented, the encrypted block data EDi&minus;1 is read (at step S<highlight><bold>14</bold></highlight>). Thereafter, the block data Di is read (at step S<highlight><bold>15</bold></highlight>). The encrypted block data EDi&minus;1 and the block data Di are ex-ORed. The resultant data is encrypted using the key information K. As a result, the encrypted block data EDi of the block data Di is generated (at step S<highlight><bold>16</bold></highlight>). The encrypted block data EDi is stored (at step S<highlight><bold>17</bold></highlight>). The number i of the block data is incremented (at step S<highlight><bold>18</bold></highlight>). </paragraph>
<paragraph id="P-0160" lvl="0"><number>&lsqb;0160&rsqb;</number> It is determined whether or not the block number i is &ldquo;256&rdquo; (at step S<highlight><bold>19</bold></highlight>). When the block number is not &ldquo;256&rdquo;, the flow returns to step S<highlight><bold>14</bold></highlight>. Until the block number i becomes &ldquo;256&rdquo;, the same process is repeated. As a result, the encrypted block data EDi is obtained. When the block number i becomes &ldquo;256&rdquo; and the block data D<highlight><bold>255</bold></highlight> has been processed, the process is completed. </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> When the block data Dj used to generate the initial value is not the first block data (j&equals;0) at step S<highlight><bold>4</bold></highlight>, as shown-in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, it is determined whether or not the block data Dj used to generate the initial value is the last block data (j&equals;255) (at step,S<highlight><bold>20</bold></highlight>). </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> When the block number is &ldquo;255&rdquo; (j&equals;255), the block number is initialized to &ldquo;0&rdquo; (i&equals;0) (at step S<highlight><bold>21</bold></highlight>). The initial value inV obtained at step S<highlight><bold>2</bold></highlight> is read (at step S<highlight><bold>22</bold></highlight>). As a result, the block data D<highlight><bold>0</bold></highlight> is read (at step S<highlight><bold>23</bold></highlight>). The initial value inV and the block data D<highlight><bold>0</bold></highlight> are ex-ORed. The resultant data is encrypted using the key information K. As a result, the encrypted block data ED<highlight><bold>0</bold></highlight> of the block data D<highlight><bold>0</bold></highlight> is generated (at step S<highlight><bold>24</bold></highlight>). The encrypted block data ED<highlight><bold>0</bold></highlight> is stored (at step S<highlight><bold>25</bold></highlight>). The number i of the block data is incremented to &ldquo;1&rdquo; (i&equals;1) (at step S<highlight><bold>26</bold></highlight>). </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> After the number i of the block data has been incremented, the encrypted block data EDi&minus;1is read (at step S<highlight><bold>27</bold></highlight>). Thereafter, the block data Di is read (at step S<highlight><bold>28</bold></highlight>). The encrypted block data EDi&minus;1 and the block data Di are ex-ORed. The resultant data is encrypted using the key information K. As a result, the encrypted block data EDi of the block data Di is generated (at step S<highlight><bold>29</bold></highlight>). The encrypted block data EDi is stored (at step S<highlight><bold>30</bold></highlight>). Thereafter, the number i of the block data is incremented (at step S<highlight><bold>31</bold></highlight>). </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> It is determined whether or not the block number i is &ldquo;255&rdquo; (at step S<highlight><bold>32</bold></highlight>). When the block number i is not &ldquo;255&rdquo;, the flow returns to step S<highlight><bold>27</bold></highlight>. Until the block number i becomes &ldquo;255&rdquo;, the same process is repeated. As a result, the encrypted block data EDi is obtained. </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> When the block number is &ldquo;255&rdquo;, the initial value inV obtained at step S<highlight><bold>2</bold></highlight> is read (at step S<highlight><bold>33</bold></highlight>). The initial value inV is treated as the encrypted block data ED<highlight><bold>255</bold></highlight> (at step S<highlight><bold>34</bold></highlight>). The encrypted block data ED<highlight><bold>255</bold></highlight> is stored (at step S<highlight><bold>35</bold></highlight>). Thereafter, the process is completed. </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> When the determined result represents that the block data Dj used to generate the initial value at step S<highlight><bold>4</bold></highlight> is not the first block data (j&equals;0) and that the block data Dj is not the last block data (j&equals;255) at step S<highlight><bold>20</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, the number i of the block data is initialized to &ldquo;0&rdquo; (i&equals;0) (at step S<highlight><bold>36</bold></highlight>). The initial value inV obtained at step S<highlight><bold>2</bold></highlight> is read (at step S<highlight><bold>37</bold></highlight>). Thereafter, the block data D<highlight><bold>0</bold></highlight> is read (at step S<highlight><bold>38</bold></highlight>). The initial value inV and the block data D<highlight><bold>0</bold></highlight> are ex-ORed. The resultant data is encrypted using the key information K. As a result, the encrypted block data ED<highlight><bold>0</bold></highlight> of the block data D<highlight><bold>0</bold></highlight> is generated (at step S<highlight><bold>39</bold></highlight>). The encrypted block data ED<highlight><bold>0</bold></highlight> is stored (at step S<highlight><bold>40</bold></highlight>). The number i of the block data is incremented to &ldquo;1&rdquo; (i&equals;1) (at step S<highlight><bold>41</bold></highlight>). </paragraph>
<paragraph id="P-0167" lvl="0"><number>&lsqb;0167&rsqb;</number> After the number i of the block data has been incremented, it is determined whether or not the current block number i is the number j used to generate the initial value (j&equals;i) (at step S<highlight><bold>42</bold></highlight>). When the number i of the block data is not the number j (j&ne;i), the encrypted block data EDi&minus;1 is read (at step S<highlight><bold>43</bold></highlight>). The block data Di is read (at step S<highlight><bold>44</bold></highlight>). The encrypted block data EDi&minus;1 and the block data Di are ex-ORed. The resultant data is encrypted using the key information K. As a result, the encrypted block data EDi of the block data Di is generated (at step S<highlight><bold>45</bold></highlight>). The encrypted block data EDi is stored (at step S<highlight><bold>46</bold></highlight>). Thereafter, the number i of the block data is incremented (at step S<highlight><bold>47</bold></highlight>). </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> It is determined whether or not the block number i is &ldquo;256&rdquo; (at step S<highlight><bold>48</bold></highlight>). When the block number i is not &ldquo;256&rdquo;, the flow returns to step S<highlight><bold>42</bold></highlight>. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> When the determined result at step S<highlight><bold>42</bold></highlight> represents that the block number i is the number j (j&equals;i), the initial value inV obtained at step S<highlight><bold>2</bold></highlight> is read (at step S<highlight><bold>49</bold></highlight>). The initial value inV is treated as the encrypted block data EDj of the block data Dj (at step S<highlight><bold>50</bold></highlight>). The encrypted block data EDj is stored (at step S<highlight><bold>51</bold></highlight>). Thereafter, the flow advances to step S<highlight><bold>47</bold></highlight>. </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> Until the block number i becomes &ldquo;256&rdquo;, the same process is repeated. After the block number i becomes &ldquo;256&rdquo; and the encrypted block data of the block data D<highlight><bold>255</bold></highlight> has been obtained, the process is completed. </paragraph>
<paragraph id="P-0171" lvl="0"><number>&lsqb;0171&rsqb;</number> Thereafter, a decrypting process will be described. FIGS. <highlight><bold>13</bold></highlight> to <highlight><bold>16</bold></highlight> are flow charts showing a decrypting process. </paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> In FIGS. <highlight><bold>13</bold></highlight> to <highlight><bold>16</bold></highlight>, it is determined whether or not a block number j used as an initial value is 0 (j&equals;0) (at step S<highlight><bold>101</bold></highlight>). </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> When the block number j is 0 (j&equals;0), the encrypted block data ED<highlight><bold>0</bold></highlight> is read (at step S<highlight><bold>102</bold></highlight>). The encrypted block data ED<highlight><bold>0</bold></highlight> is decrypted using key information K. The decrypted value and a function f(Di) are ex-ORed. As a result, the block data D<highlight><bold>0</bold></highlight> is generated (at step S<highlight><bold>103</bold></highlight>). The block data D<highlight><bold>0</bold></highlight> is stored (at step S<highlight><bold>104</bold></highlight>). </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> The block number i is initialized to &ldquo;1&rdquo; (i&equals;1) (at step S<highlight><bold>105</bold></highlight>). Thereafter, the encrypted block data ED<highlight><bold>1</bold></highlight> is read (at step S<highlight><bold>106</bold></highlight>). Thereafter, the encrypted block data ED<highlight><bold>0</bold></highlight> is read (at step S<highlight><bold>107</bold></highlight>). The encrypted block data ED<highlight><bold>0</bold></highlight> is treated as the initial value inV (at step S<highlight><bold>108</bold></highlight>). </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> The encrypted block data ED<highlight><bold>1</bold></highlight> is decrypted using the key information K. The decrypted value and the initial value inV (that is the same as the encrypted block data ED<highlight><bold>0</bold></highlight>) are ex-ORed. As a result, the block data D<highlight><bold>1</bold></highlight> is generated (at step S<highlight><bold>109</bold></highlight>). The generated block data D<highlight><bold>1</bold></highlight> is stored (at step S<highlight><bold>110</bold></highlight>). Thereafter, the block number i is incremented to &ldquo;2&rdquo; (i &equals;2) (at step S<highlight><bold>111</bold></highlight>). </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> Thereafter, the encrypted block data EDi is read (at step S<highlight><bold>112</bold></highlight>). Thereafter, the encrypted block data EDi&minus;1 is read (at step S<highlight><bold>113</bold></highlight>). The encrypted block data EDi is decrypted using the key information K. The decrypted value and the encrypted block data EDi&minus;1 are ex-ORed. As a result, the block data Di is generated (at step S<highlight><bold>114</bold></highlight>). The block data Di is stored (at step S<highlight><bold>115</bold></highlight>). Thereafter, the block number i is incremented (at step S<highlight><bold>116</bold></highlight>). </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> It is determined whether or not the block number i is &ldquo;256&rdquo; (at step S<highlight><bold>117</bold></highlight>). When the block number i is not &ldquo;256&rdquo;, the flow returns to step S<highlight><bold>112</bold></highlight>. Until the block number becomes &ldquo;256&rdquo;, the same process is repeated. When the block number becomes &ldquo;256&rdquo; and the block data D<highlight><bold>255</bold></highlight> has been obtained, the process is completed. </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> When the determined result at step S<highlight><bold>101</bold></highlight> represents that the block number j used as the initial value is not 0 (j&ne;0), as shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, it is determined whether or not the block number j used as the initial value is &ldquo;255&rdquo; (j&equals;255) (at step S<highlight><bold>118</bold></highlight>). </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> When the bock number j is &ldquo;255&rdquo; (j&equals;255), the block number i is initialized to &ldquo;0&rdquo; (i&equals;0) (at step S<highlight><bold>119</bold></highlight>). Thereafter, the encrypted block data ED<highlight><bold>0</bold></highlight> is read (at step S<highlight><bold>120</bold></highlight>). Thereafter, the encrypted block data ED<highlight><bold>255</bold></highlight> is read (at step S<highlight><bold>121</bold></highlight>). The encrypted block data ED<highlight><bold>255</bold></highlight> is treated as the initial value inV (at step S<highlight><bold>122</bold></highlight>). </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> The encrypted block data ED<highlight><bold>0</bold></highlight> is decrypted using the key information K. The decrypted value and the initial value inV are ex-ORed. As a result, the block data D<highlight><bold>0</bold></highlight> is generated (at sep S<highlight><bold>123</bold></highlight>). The generated block data D<highlight><bold>0</bold></highlight> is stored (at step S<highlight><bold>124</bold></highlight>). Thereafter, the block number i is incremented to &ldquo;1&rdquo; (i &equals;1) (at step S<highlight><bold>125</bold></highlight>). </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> The encrypted block data EDi is read (at step S<highlight><bold>126</bold></highlight>). The encrypted block data EDi&minus;1 is read (at step S<highlight><bold>127</bold></highlight>). The encrypted block data EDi is decrypted using the key information K. The decrypted value and the encrypted block data EDi&minus;1 are ex-ORed. As a result, the block data Di is generated (at step S<highlight><bold>128</bold></highlight>). The block data Di is stored (at step S<highlight><bold>129</bold></highlight>). Thereafter, the block number i is incremented (at step S<highlight><bold>130</bold></highlight>). </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> It is determined whether or not the block number i is &ldquo;255&rdquo; (at step S<highlight><bold>131</bold></highlight>). When the block number i is not &ldquo;255&rdquo;, the flow returns to step S<highlight><bold>126</bold></highlight>. Until the block number i becomes &ldquo;255&rdquo;, the same process is repeated. </paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> When the block number i is &ldquo;255&rdquo; and the block data D<highlight><bold>254</bold></highlight> has been processed, the encrypted block data ED<highlight><bold>255</bold></highlight> is read (at step S<highlight><bold>132</bold></highlight>). The encrypted block data ED<highlight><bold>255</bold></highlight> is decrypted using the key information K. The decrypted value and a function f (Di) are ex-ORed. As a result, the block data D<highlight><bold>255</bold></highlight> is generated (at step S<highlight><bold>133</bold></highlight>). The block data D<highlight><bold>255</bold></highlight> is stored (at step S<highlight><bold>134</bold></highlight>). Thereafter, the process is completed. </paragraph>
<paragraph id="P-0184" lvl="0"><number>&lsqb;0184&rsqb;</number> When the determined result at step S<highlight><bold>101</bold></highlight> represents that the block number is not &ldquo;0&rdquo; (j&ne;0) and the determined result at step S<highlight><bold>118</bold></highlight> represents that the block number j is not &ldquo;255&rdquo; (j&ne;255), as shown in <cross-reference target="DRAWINGS">FIG. 15</cross-reference>, the block number i is initialized to &ldquo;0&rdquo; (i&equals;0) (at step S<highlight><bold>135</bold></highlight>). </paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> Thereafter, the encrypted block data ED<highlight><bold>0</bold></highlight> is read (at step S<highlight><bold>136</bold></highlight>). Thereafter, the encrypted block data EDj is read (at step S<highlight><bold>137</bold></highlight>). The encrypted block data EDj is treated as the initial value inV (at step S<highlight><bold>138</bold></highlight>). </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> The encrypted block data ED<highlight><bold>0</bold></highlight> is decrypted using the key information K. The decrypted value and the initial value inV are ex-ORed. As a result, the block data D<highlight><bold>0</bold></highlight> is generated (at step S<highlight><bold>139</bold></highlight>). The generated block data D<highlight><bold>0</bold></highlight> is stored (at step S<highlight><bold>140</bold></highlight>). Thereafter, as shown in <cross-reference target="DRAWINGS">FIG. 16</cross-reference>, the block number is incremented to &ldquo;1&rdquo; (i&equals;1) (at step S<highlight><bold>141</bold></highlight>). </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> After the number i of the block data has been incremented, it is determined whether or not the current block number i is the number j used to generate the initial value (j&equals;i) (at step S<highlight><bold>142</bold></highlight>). </paragraph>
<paragraph id="P-0188" lvl="0"><number>&lsqb;0188&rsqb;</number> When the number j is not the number i (j&ne;i), the encrypted block data EDi is read (at step S<highlight><bold>143</bold></highlight>). Thereafter, the encrypted block data EDi&minus;1 is read (at step S<highlight><bold>144</bold></highlight>). The encrypted block data EDi is decrypted using the key information K. The decrypted value and the encrypted block data EDi&minus;1 are ex-ORed. As a result, the block data Di is generated (at step S<highlight><bold>145</bold></highlight>). The block data Di is stored (at step S<highlight><bold>146</bold></highlight>). Thereafter, the block number i is incremented (at step S<highlight><bold>147</bold></highlight>). </paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> It is determined whether or not the block number i is &ldquo;256&rdquo; (at step S<highlight><bold>148</bold></highlight>). When the block number i is not &ldquo;256&rdquo;, the flow returns to step S<highlight><bold>142</bold></highlight>. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> When the determined result at step S<highlight><bold>142</bold></highlight> represents that the block number i is the number j (i&equals;j), the encrypted block data EDj is read (at step S<highlight><bold>149</bold></highlight>). The encrypted block data EDj is decrypted using the key information K. The decrypted value and a function f (Di) are ex-ORed. As a result, the block data Dj is generated (at step S<highlight><bold>150</bold></highlight>). The block data Di is stored (at step S<highlight><bold>151</bold></highlight>). Thereafter, the flow advances to step S<highlight><bold>147</bold></highlight>. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> Until the block number becomes &ldquo;256&rdquo;, the same process is repeated. When the block number becomes &ldquo;256&rdquo; and the block data D<highlight><bold>255</bold></highlight> has been obtained, the process is completed. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> Block data Dj of which an initial value has been encrypted may be placed at a fixed position. Alternatively, the position of the block data Dj may be varied. When the position of the block data Dj is varied, the secrecy thereof can be improved. </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> As was described above, according to the present invention, an initial value for which blocks are chain-encrypted is generated using content data. Thus, there is no loss in the data area. In addition, since content data varies at random, the secrecy of the initial value is high. </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> When content data is music data or the like, it is sampled data. Thus, it can be said that the content data is randomized data. Consequently, it is very difficult to know the level of music data at a particular point. Thus, when the initial value is generated using content data, the secrecy thereof is improved as with the case that a random number is used for the initial value. </paragraph>
<paragraph id="P-0195" lvl="0"><number>&lsqb;0195&rsqb;</number> Next, the case that an MPEG stream is recorded as content data will be described. </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the CD2 optical disc has an inner periphery area AR<highlight><bold>1</bold></highlight> and an outer periphery area AR<highlight><bold>2</bold></highlight>. In the outer periphery area AR<highlight><bold>2</bold></highlight>, audio data as a file corresponding to the MP3 system is recorded. The MP3 system is one of three layers of the audio data used in the MPEG system. Thus, when data corresponding to the MP3 system is recorded in the outer periphery area AR<highlight><bold>2</bold></highlight>, data is recorded corresponding to an MPEG stream. </paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> An MPEG stream is composed of an upper layer (program layer and pack layer) and a lower layer (packet layer). In other words, in an MPEG stream, the sequence of one program is composed of a plurality of packs. Regularly, each pack is composed of a plurality of packets. At the beginning of each pack, a pack header is placed. Each packet is composed of a packet header and data. </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> In a CD, a block composed of <highlight><bold>98</bold></highlight> frames is referred to as sector. Data is recorded in the unit of a sector. </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> shows a data structure of an MPEG steam recorded on the CD. As shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, one sector of the CD has a data area of 2048 bytes. Normally, packs and packets of the MPEG stream are placed in one sector. As shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>, at the beginning of a file, a file header is placed. At the file header, copyright management information is placed. </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, at the beginning of one sector, a pack header is placed. The pack header is composed of for example 14 bytes. The pack header contains pack start code, SCR (System Clock Reference) and bit rate. </paragraph>
<paragraph id="P-0201" lvl="0"><number>&lsqb;0201&rsqb;</number> The pack header is followed by a packet header. The packet header is composed of for example <highlight><bold>18</bold></highlight> bytes. The packet header contains packet start code, stream ID, PES (Packetized Elementary Steam) header length, and PTS (Presentation Time Stamp). </paragraph>
<paragraph id="P-0202" lvl="0"><number>&lsqb;0202&rsqb;</number> Content data compressed corresponding to the MPEG system (for example, compressed audio data) is placed in the remaining 2016 bytes of one sector. </paragraph>
<paragraph id="P-0203" lvl="0"><number>&lsqb;0203&rsqb;</number> In such a manner, an MPEG file corresponding to the MP3 system is placed in a stream composed of packs and packets. As shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>, at the beginning of a file, a file header is placed. The file header contains copyright owner management information such as file ID and ISRC (International Standard Recording Code). The ISRC is a 12-digit code that represents master tape of the song or that represents song, company, recorded year, recording number, and so forth assigned when the disc is produced. In addition, a disc ID that identifies the disc may be assigned. </paragraph>
<paragraph id="P-0204" lvl="0"><number>&lsqb;0204&rsqb;</number> When an MPEG stream is recorded to a CD, data of packs and sectors is recoded to a data area of one sector of 2048 bytes. Data of 2016 bytes of one sector should be encrypted. In other words, it is not necessary to encrypt the pack header of 14 bytes and the packet header of 18 bytes. </paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> shows the structure of blocks in the case that one sector of an MPEG stream of content data is encrypted. As was described above, 2016 bytes of data of one sector should be encrypted. Thus, when an MPEG stream is encrypted, as shown in <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, data of one sector is divided into 252 blocks each of which is composed of 8 bytes (64 bits). As was described above, the blocks are encrypted corresponding to the CBC system. In other words, the current block data and data of which the immediately preceding block data has been encrypted are ex-ORed. The resultant data is encrypted. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> When content data is encrypted corresponding to the CBC system, an initial value is required. In the forgoing example, the initial value is generated using a block of the same sector of content data. Likewise, in an MPEG stream, an initial value may be generated using a block of the same sector. In contrast, in consideration of the uniqueness of a header of an MPEG stream, an initial value necessary for the encrypting process corresponding to the CBC system may be generated using the header of the MPEG stream. </paragraph>
<paragraph id="P-0207" lvl="0"><number>&lsqb;0207&rsqb;</number> In other words, as shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, an MPEG stream contains a pack header and a packet header. As shown in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>, at the beginning of a file, a file header is placed. It can be considered to generate an initial value using these headers. </paragraph>
<paragraph id="P-0208" lvl="0"><number>&lsqb;0208&rsqb;</number> For example, copyright management information (such as ISRC) and so forth are recorded at the file header. The copyright management information is a value that is unique for each content. When there is a disc header, a value unique for each disc such as a disc serial number is placed in the disc header. Such information is unique for each disc. </paragraph>
<paragraph id="P-0209" lvl="0"><number>&lsqb;0209&rsqb;</number> A pack header contains pack start code, SCR, and bit rate. The SCR is time information used for compensating the STC (System Time Clock) as a reference of the system. In contrast, a packet header contains packet start code, stream ID, PES header length, and PTS. The PTS is time information as a reference used for reproducing data. Since the SCR of the pack header and the PTS of the packet header chronologically vary, they are unique values. </paragraph>
<paragraph id="P-0210" lvl="0"><number>&lsqb;0210&rsqb;</number> Using unique information contained in a header of an MPEG stream, an initial value necessary for encrypting content data corresponding to the CBC system can be generated. </paragraph>
<paragraph id="P-0211" lvl="0"><number>&lsqb;0211&rsqb;</number> When an initial value used for the encrypting process corresponding to the CBC system is generated using unique information of a header of an MPEG stream, the information of the header may be used as it is. However, when the information of the header is used as it is, the secrecy of the initial value is not sufficient. </paragraph>
<paragraph id="P-0212" lvl="0"><number>&lsqb;0212&rsqb;</number> Thus, it can be considered that an initial value is generated using information of a header of an MPEG stream. Alternatively, it can be considered that information of a header is encrypted and using the encrypted information, an initial value is generated. In reality, an initial value can be generated in the following manner. </paragraph>
<paragraph id="P-0213" lvl="0"><number>&lsqb;0213&rsqb;</number> It can be considered that by combining unique information of a file header such as copyright information and information that chronologically varies such as the SCR of a pack header or the PTS of a packet header using a particular function, an initial value is generated. </paragraph>
<paragraph id="P-0214" lvl="0"><number>&lsqb;0214&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> shows an example of a process for generating an initial value using unique information of a file header such as copyright information and information that chronologically varies such as the SCR of a pack header or the PTS of a packet header. In <cross-reference target="DRAWINGS">FIG. 20</cross-reference>, unique information of a file header is supplied to an ex-OR gate <highlight><bold>201</bold></highlight>. The SCR of a pack header or the PTS of a packet header are supplied to the ex-OR gate <highlight><bold>201</bold></highlight>. The ex-OR gate <highlight><bold>201</bold></highlight> ex-ORes the unique information of the file header and the SCR of the pack header or the PTS of the packet header. Using the output of the ex-OR gate <highlight><bold>201</bold></highlight>, an initial value inV is obtained. </paragraph>
<paragraph id="P-0215" lvl="0"><number>&lsqb;0215&rsqb;</number> Alternatively, it may be considered that by encrypting unique information of a file header such as copyright information or information that chronologically varies such as the SCR of a pack header or the PTS of a packet header, an initial value is generated. </paragraph>
<paragraph id="P-0216" lvl="0"><number>&lsqb;0216&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21A</cross-reference> shows an example of a process for encrypting unique information of a file header such as copyright information and generating an initial value. In <cross-reference target="DRAWINGS">FIG. 21</cross-reference>A, unique information of a file header is supplied to an encrypting circuit <highlight><bold>211</bold></highlight>. The encrypting circuit <highlight><bold>211</bold></highlight> encrypts unique information of the file header. Using an output of the encrypting circuit <highlight><bold>211</bold></highlight>, an initial value inV is obtained. </paragraph>
<paragraph id="P-0217" lvl="0"><number>&lsqb;0217&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21B</cross-reference> shows an example of a process for encrypting information that chronologically varies such as the SCR of a pack header or the PTS of a packet header and generating an initial value. In <cross-reference target="DRAWINGS">FIG. 21</cross-reference>B, the SCR of the pack header or the PTS of the pack header is supplied to an encrypting circuit <highlight><bold>221</bold></highlight>. The encrypting circuit <highlight><bold>221</bold></highlight> encrypts the SCR or the PTS. Using an output of the encrypting circuit <highlight><bold>221</bold></highlight>, an initial value inV is obtained </paragraph>
<paragraph id="P-0218" lvl="0"><number>&lsqb;0218&rsqb;</number> Alternatively, it may be considered that by encrypting unique information of a file header such as copyright information and information that chronologically varies such as the SCR of a pack header or the PTS of a packet header, an initial value is generated. </paragraph>
<paragraph id="P-0219" lvl="0"><number>&lsqb;0219&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> shows an example of a process for encrypting unique information of a file header such as copyright information and information that chronologically varies such as the SCR of a pack header or the PTS of a packet header and generating an initial value. In <cross-reference target="DRAWINGS">FIG. 22</cross-reference>, unique information of a file header is supplied to an ex-OR gate <highlight><bold>231</bold></highlight>. In addition, the SCR of a pack header or the PTS of a packet header is supplied the ex-OR gate <highlight><bold>231</bold></highlight>. The ex-OR gate <highlight><bold>231</bold></highlight> ex-ORes the unique information of the file header and the SCR of the pack header or the PTS of the packet header. An output of the ex-OR gate <highlight><bold>231</bold></highlight> is supplied to an encrypting circuit <highlight><bold>232</bold></highlight>. The encrypting circuit <highlight><bold>232</bold></highlight> encrypts the output of the ex-OR gate <highlight><bold>231</bold></highlight>. Using the output of the encrypting circuit <highlight><bold>232</bold></highlight>, an initial value inV is obtained. </paragraph>
<paragraph id="P-0220" lvl="0"><number>&lsqb;0220&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> shows an example of an encrypting process for encrypting an MPEG stream. In <cross-reference target="DRAWINGS">FIG. 23</cross-reference>, an ex-OR gate <highlight><bold>301</bold></highlight>-<highlight><bold>0</bold></highlight> ex-ORes input block data D<highlight><bold>0</bold></highlight> and an initial value inV obtained from an MPEG header. An output of the ex-OR gate <highlight><bold>301</bold></highlight>-<highlight><bold>0</bold></highlight> is supplied to a block encrypting circuit <highlight><bold>302</bold></highlight>-<highlight><bold>0</bold></highlight>. </paragraph>
<paragraph id="P-0221" lvl="0"><number>&lsqb;0221&rsqb;</number> The block encrypting circuit <highlight><bold>302</bold></highlight>-<highlight><bold>0</bold></highlight> obtains encrypted block data ED<highlight><bold>0</bold></highlight> using the output of an ex-OR gate <highlight><bold>311</bold></highlight> and key information K. </paragraph>
<paragraph id="P-0222" lvl="0"><number>&lsqb;0222&rsqb;</number> Thereafter, an ex-OR gate <highlight><bold>301</bold></highlight>-<highlight><bold>1</bold></highlight> ex-ORes input block data D<highlight><bold>1</bold></highlight> and the encrypted block data ED<highlight><bold>0</bold></highlight>. An output of the ex-OR gate <highlight><bold>301</bold></highlight>-<highlight><bold>1</bold></highlight> is supplied to a block encrypting circuit <highlight><bold>302</bold></highlight>-<highlight><bold>1</bold></highlight>. The block encrypting circuit <highlight><bold>302</bold></highlight>-<highlight><bold>1</bold></highlight> obtains encrypted block data ED<highlight><bold>1</bold></highlight> using the output of the ex-OR gate <highlight><bold>301</bold></highlight>-<highlight><bold>1</bold></highlight> and the key information K. </paragraph>
<paragraph id="P-0223" lvl="0"><number>&lsqb;0223&rsqb;</number> Likewise, using input data D<highlight><bold>2</bold></highlight>, D<highlight><bold>3</bold></highlight>, . . ., and D<highlight><bold>251</bold></highlight>, encrypted block data ED<highlight><bold>2</bold></highlight>, ED<highlight><bold>3</bold></highlight>, . . ., and ED<highlight><bold>251</bold></highlight> are obtained. </paragraph>
<paragraph id="P-0224" lvl="0"><number>&lsqb;0224&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> shows an example of a decrypting process for decrypting an MPEG stream. In <cross-reference target="DRAWINGS">FIG. 24</cross-reference>, encrypted block data ED<highlight><bold>0</bold></highlight> and key information K are supplied to an encrypted block decrypting circuit <highlight><bold>401</bold></highlight>-<highlight><bold>0</bold></highlight>. The encrypted block decrypting circuit <highlight><bold>401</bold></highlight>-<highlight><bold>0</bold></highlight> performs the decrypting process using the encrypted block data ED<highlight><bold>0</bold></highlight> and the key information K. </paragraph>
<paragraph id="P-0225" lvl="0"><number>&lsqb;0225&rsqb;</number> An output of the encrypted block decrypting circuit <highlight><bold>401</bold></highlight>-<highlight><bold>0</bold></highlight> is supplied to an ex-OR gate <highlight><bold>402</bold></highlight>-<highlight><bold>0</bold></highlight>. In addition, an initial value inV is supplied to the ex-OR gate <highlight><bold>402</bold></highlight>-<highlight><bold>0</bold></highlight>. The initial value inV is encrypted block data inV. </paragraph>
<paragraph id="P-0226" lvl="0"><number>&lsqb;0226&rsqb;</number> The ex-OR gate <highlight><bold>402</bold></highlight>-<highlight><bold>0</bold></highlight> ex-ORes the output of the encrypted block decrypting circuit <highlight><bold>401</bold></highlight>-<highlight><bold>0</bold></highlight> and the initial value inV. As a result, block data D<highlight><bold>0</bold></highlight> is obtained. </paragraph>
<paragraph id="P-0227" lvl="0"><number>&lsqb;0227&rsqb;</number> Thereafter, encrypted block data ED<highlight><bold>1</bold></highlight> and the key information K are supplied to an encrypted block decrypting circuit <highlight><bold>401</bold></highlight>-<highlight><bold>1</bold></highlight>. The encrypted block decrypting circuit <highlight><bold>401</bold></highlight>-<highlight><bold>1</bold></highlight> performs the decrypting process using the encrypted block data ED<highlight><bold>1</bold></highlight> and the key information K. An output of the encrypted block decrypting circuit <highlight><bold>401</bold></highlight>-<highlight><bold>1</bold></highlight> is supplied to an ex-OR gate <highlight><bold>402</bold></highlight>-<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0228" lvl="0"><number>&lsqb;0228&rsqb;</number> The immediately preceding encrypted block data ED<highlight><bold>0</bold></highlight> is supplied to an ex-OR gate <highlight><bold>402</bold></highlight>-<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0229" lvl="0"><number>&lsqb;0229&rsqb;</number> The ex-OR gate <highlight><bold>402</bold></highlight>-<highlight><bold>1</bold></highlight> ex-ORes the output of the encrypted block decrypting circuit <highlight><bold>401</bold></highlight>-<highlight><bold>1</bold></highlight> and the immediately preceding encrypted block data ED<highlight><bold>0</bold></highlight>. As a result, block data D<highlight><bold>1</bold></highlight> is obtained. </paragraph>
<paragraph id="P-0230" lvl="0"><number>&lsqb;0230&rsqb;</number> Likewise, using encrypted block data ED<highlight><bold>1</bold></highlight>, ED<highlight><bold>2</bold></highlight>, . . ., and so forth, block data DI, D<highlight><bold>2</bold></highlight>, . . ., and D<highlight><bold>251</bold></highlight> are obtained. </paragraph>
<paragraph id="P-0231" lvl="0"><number>&lsqb;0231&rsqb;</number> Thus, when an MPEG stream is recorded, using a header of the MPEG stream, an initial value used to perform an encrypting process corresponding to the CBC system can be generated because header is unique. In the forgoing example, an initial value is generated using a file header and time information such as the SCR of a pack header or the PTS of a packet header. Alternatively, information of a disc header may be used. </paragraph>
<paragraph id="P-0232" lvl="0"><number>&lsqb;0232&rsqb;</number> In the forgoing example, content data is recorded on a CD2 optical disc. However, the present invention is not limited to a CD2 optical disc. In addition, the present invention can be applied to the case that content data is recorded on a CD-DA, a CD-ROM, a CD-R, or a CD-RW. In addition to optical discs, the present invention can be applied to the case that content data is recorded to various types of record mediums such as a magnetic disc and a flash memory card. </paragraph>
<paragraph id="P-0233" lvl="0"><number>&lsqb;0233&rsqb;</number> In addition, the present invention is suitable for the case that content data is distributed trough a network. </paragraph>
<paragraph id="P-0234" lvl="0"><number>&lsqb;0234&rsqb;</number> In other words, in recent years, a service that distributes content data such as music data is distributed through a network has become common. In such a service, to protect the right of content data, it is desired to encrypt it. According to the present invention, an initial value used to chain-encrypt blocks is generated using content data or data of an MPEG stream. Thus, the present invention is also suitable for encrypting content data that is distributed. </paragraph>
<paragraph id="P-0235" lvl="0"><number>&lsqb;0235&rsqb;</number> According to the present invention, content data is block-segmented and chain-encrypted. An initial value is generated using content data of the sector. Thus, it is not necessary to generate the initial value using a random number or the like. Consequently, there is no loss in the data area. Since content data varies at random, the secrecy of the initial value is high. In addition, since a random number generator is not required, the circuit scale does not increase. </paragraph>
<paragraph id="P-0236" lvl="0"><number>&lsqb;0236&rsqb;</number> In addition, according to the present invention, an initial value generated using content data is encrypted using other content data. In addition, content data that is used as an initial value can be freely selected. Thus, the secrecy of the initial value is improved. </paragraph>
<paragraph id="P-0237" lvl="0"><number>&lsqb;0237&rsqb;</number> In addition, according to the present invention, when an MPEG steam is recorded, an initial value is generated using unique information contained in a header of the MPEG stream. The information of the header is unique. The time information such as SCR or PTS chronologically varies. Thus, the secrecy of the initial value is high. In addition, since an initial value used to perform an encrypting process is generated using information of a header of an MPEG stream, the MPEG stream can be transmitted as it is. In addition, it is not necessary to provide a random number generator or the like. Thus, the circuit scale does not increase. </paragraph>
<paragraph id="P-0238" lvl="7"><number>&lsqb;0238&rsqb;</number> Industrial Applicability </paragraph>
<paragraph id="P-0239" lvl="0"><number>&lsqb;0239&rsqb;</number> As described above, the encrypting apparatus, the encrypting method, the decrypting apparatus, the decrypting method, and the record medium are suitable for encrypting content data and recording the encrypted content data so as to protect the right of the content data when it is recorded to and/or reproduced from an optical disc such as a CD (Compact Disc) 2 optical disc. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. An encrypting apparatus, comprising: 
<claim-text>generating means for generating an initial value using data of a first portion of content data; and </claim-text>
<claim-text>encrypting means for encrypting data of a second portion of the content data using the generated initial value, outputting the encrypted data, and chain-encrypting data of portions other than the first portion and the second portion of the content data using the output encrypted data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The encrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>dividing means for dividing the content data into blocks each of which is composed of a plurality of bits, </claim-text>
<claim-text>wherein the generating means generates an initial value using data of a first portion of each of the divided blocks. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The encrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, 
<claim-text>wherein the encrypting means encrypts each of the divided blocks corresponding to block encrypting system. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The encrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, 
<claim-text>wherein the initial value is encrypted. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The encrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, 
<claim-text>wherein the data of the first portion of the content data is variable. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. An encrypting method, comprising the steps of: 
<claim-text>generating an initial value using data of a first portion of content data; and </claim-text>
<claim-text>encrypting data of a second portion of the content data using the generated initial value, outputting the encrypted data, and chain-encrypting data of portions other than the first portion and the second portion of the content data using the output encrypted data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The encrypting method as set forth in <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, further comprising the step of: 
<claim-text>dividing the content data into blocks each of which is composed of a plurality of bits, </claim-text>
<claim-text>wherein the generating step is performed by generating an initial value using data of a first portion of each of the divided blocks. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The encrypting method as set forth in <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, 
<claim-text>wherein the encrypting step is performed by encrypting each of the divided blocks corresponding to block encrypting system. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The encrypting method as set forth in <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, 
<claim-text>wherein the initial value is encrypted. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The encrypting method as set forth in <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, 
<claim-text>wherein the data of the first portion of the content data is variable. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A decrypting apparatus, comprising: 
<claim-text>decrypting means for decrypting data of a second portion of encrypted content data using an initial value that is data of a first portion of the encrypted content data, outputting the decrypted data, and chain-decrypting data of portions other than the first portion and the second portion using the data of the second portion of the encrypted content data; and </claim-text>
<claim-text>generating means for generating the data of the first portion using the data of the first portion of the encrypted content data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The decrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, 
<claim-text>wherein the content data has been encrypted in the unit of a block composed of a plurality of bits, and </claim-text>
<claim-text>wherein the decrypting means decrypts the encrypted content data in the unit of a block. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The decrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, 
<claim-text>wherein the generating means generates the data of the first portion using the data of the first portion of the encrypted content data in the unit of a block. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The decrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, 
<claim-text>wherein the initial value has been encrypted, and </claim-text>
<claim-text>wherein the data of the first portion is generated by decrypting the initial value. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A decrypting method, comprising the steps of: 
<claim-text>decrypting data of a second portion of encrypted content data using an initial value that is data of a first portion of the encrypted content data and outputting the decrypted data; </claim-text>
<claim-text>chain-decrypting data of portions other than the first portion and the second portion using the data of the second portion of the encrypted content data; and </claim-text>
<claim-text>generating the data of the first portion using the data of the first portion of the encrypted content data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The decrypting method as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, 
<claim-text>wherein the content data has been encrypted in the unit of a block composed of a plurality of bits, and </claim-text>
<claim-text>wherein the decrypting step is performed by decrypting the encrypted content data in the unit of a block. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The decrypting method as set forth in claim <highlight><bold>16</bold></highlight>, 
<claim-text>wherein the generating step is performed by generating the data of the first portion using the data of the first portion of the encrypted content data in the unit of a block. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The decrypting method as set forth in <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, 
<claim-text>wherein the initial value has been encrypted, and </claim-text>
<claim-text>wherein the data of the first portion is generated by decrypting the initial value. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A storage medium for storing data encrypted corresponding to an encrypting method, comprising the steps of: 
<claim-text>generating an initial value using data of a first portion of content data; and </claim-text>
<claim-text>encrypting data of a second portion of the content data using the generated initial value, outputting the encrypted data, and chain-encrypting data of portions other than the first portion and the second portion of the content data using the output encrypted data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. An encrypting apparatus, comprising: 
<claim-text>generating means for generating an initial value using data of a predetermined portion of a stream of content data; and </claim-text>
<claim-text>encrypting means for encrypting the content data using the generated initial value, outputting the encrypted data, and chain-encrypting data of other portions of the content data using the output encrypted data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The encrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, further comprising: 
<claim-text>dividing means for dividing the content data into blocks each of which is composed of a plurality of bits, </claim-text>
<claim-text>wherein the encrypting means encrypts the content data in the unit of a divided block corresponding to block encrypting system. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The encrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, 
<claim-text>wherein the initial value is generated using data contained in a header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The encrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, 
<claim-text>wherein the initial value is generated using time information contained in a header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The encrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, 
<claim-text>wherein the initial value is generated using information that is unique for each content, the information being contained in a header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The encrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, 
<claim-text>wherein the initial value is generated using time information contained in a header portion of the stream and information that is unique for each content, the information being contained in the header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The encrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, 
<claim-text>wherein the initial value is encrypted. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The encrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, 
<claim-text>wherein the stream is an MPEG stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The encrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, 
<claim-text>wherein the header is a pack header, a packet header, or a file header. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. An encrypting method, comprising the steps of: 
<claim-text>generating an initial value using data of a predetermined portion of a stream of content data; and </claim-text>
<claim-text>encrypting the content data using the generated initial value, outputting the encrypted data, and chain-encrypting data of other portions of the content data using the output encrypted data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The encrypting method as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, further comprising the step of: 
<claim-text>dividing the content data into blocks each of which is composed of a plurality of bits, </claim-text>
<claim-text>wherein the encrypting step is performed by encrypting the content data in the unit of a divided block corresponding to block encrypting system. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The encrypting method as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, 
<claim-text>wherein the initial value is generated using data contained in a header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The encrypting method as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, 
<claim-text>wherein the initial value is generated using time information contained in a header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The encrypting method as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, 
<claim-text>wherein the initial value is generated using information that is unique for each content, the information being contained in a header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The encrypting method as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, 
<claim-text>wherein the initial value is generated using time information contained in a header portion of the stream and information that is unique for each content, the information being contained in the header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The encrypting method as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, 
<claim-text>wherein the initial value is encrypted. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The encrypting method as set forth in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference>, 
<claim-text>wherein the stream is an MPEG stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The encrypting method as set forth in <dependent-claim-reference depends_on="CLM-00033">claim 36</dependent-claim-reference>, 
<claim-text>wherein the header is a pack header, a packet header, or a file header. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. A decrypting apparatus, comprising: 
<claim-text>generating means for generating an initial value using data of a predetermined portion of a stream of content data; and </claim-text>
<claim-text>decrypting means for decrypting data of a first portion of encrypted content data using the initial value, outputting the decrypted data, and chain-decrypting data of a second portion that is different from the first portion using the data of the first portion of the encrypted content data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The decrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, 
<claim-text>wherein the content data has been encrypted in the unit of a block composed of a plurality of bits, and </claim-text>
<claim-text>wherein the storing means decrypts the encrypted content data in the unit of a block. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The decrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, 
<claim-text>wherein the generating means generates the initial value using data contained in a header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The decrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, 
<claim-text>wherein the generating means generates the initial value using time information contained in a header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The decrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, 
<claim-text>wherein the generating means generates the initial value using information unique for each content, the information being contained in a header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. The decrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, 
<claim-text>wherein the generating means generates the initial value using time information contained in a header portion of the stream and information that is unique for each content, the information being contained in the header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The decrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, 
<claim-text>wherein the generating means decrypts the encrypted initial value. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. The decrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, 
<claim-text>wherein the stream is an MPEG stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. The decrypting apparatus as set forth in <dependent-claim-reference depends_on="CLM-00044">claim 45</dependent-claim-reference>, 
<claim-text>wherein the header is a pack header, a packet header, or a file header. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. A decrypting method, comprising the steps of: 
<claim-text>generating an initial value using data of a predetermined portion of a stream of content data; and </claim-text>
<claim-text>decrypting data of a first portion of encrypted content data using the initial value and outputting the decrypted data; and </claim-text>
<claim-text>chain-decrypting data of a second portion that is different from the first portion using the data of the first portion of the encrypted content data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. The decrypting method as set forth in <dependent-claim-reference depends_on="CLM-00044">claim 47</dependent-claim-reference>, 
<claim-text>wherein the content data has been encrypted in the unit of a block composed of a plurality of bits, and </claim-text>
<claim-text>wherein the storing step is performed by decrypting the encrypted content data in the unit of a block. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. The decrypting method as set forth in <dependent-claim-reference depends_on="CLM-00044">claim 47</dependent-claim-reference>, 
<claim-text>wherein the generating step is performed by generating the initial value using data contained in a header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. The decrypting method as set forth in <dependent-claim-reference depends_on="CLM-00044">claim 47</dependent-claim-reference>, 
<claim-text>wherein the generating step is performed by generating the initial value using time information contained in a header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. The decrypting method as set forth in <dependent-claim-reference depends_on="CLM-00044">claim 47</dependent-claim-reference>, 
<claim-text>wherein the generating step is performed by generating the initial value using information unique for each content, the information being contained in a header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. The decrypting method as set forth in <dependent-claim-reference depends_on="CLM-00044">claim 47</dependent-claim-reference>, 
<claim-text>wherein the generating step is performed by generating the initial value using time information contained in a header portion of the stream and information that is unique for each content, the information being contained in the header portion of the stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. The decrypting method as set forth in <dependent-claim-reference depends_on="CLM-00044">claim 47</dependent-claim-reference>, 
<claim-text>wherein the generating step is performed by decrypting the encrypted initial value. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. The decrypting method as set forth in <dependent-claim-reference depends_on="CLM-00044">claim 47</dependent-claim-reference>, 
<claim-text>wherein the stream is an MPEG stream. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00055">
<claim-text><highlight><bold>55</bold></highlight>. The decrypting method as set forth in <dependent-claim-reference depends_on="CLM-00055">claim 54</dependent-claim-reference>, 
<claim-text>wherein the header is a pack header, a packet header, or a file header. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. A storage medium for storing data decrypted corresponding to a decrypting method, comprising the steps of: 
<claim-text>generating an initial value using data of a predetermined portion of a stream of content data; and </claim-text>
<claim-text>decrypting data of a first portion of encrypted content data using the initial value and outputting the decrypted data; and </claim-text>
<claim-text>chain-decrypting data of a second portion that is different from the first portion using the data of the first portion of the encrypted content data.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>8</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002665A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002665A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002665A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002665A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002665A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002665A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002665A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002665A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002665A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002665A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002665A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002665A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002665A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030002665A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030002665A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030002665A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030002665A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030002665A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030002665A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030002665A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030002665A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
