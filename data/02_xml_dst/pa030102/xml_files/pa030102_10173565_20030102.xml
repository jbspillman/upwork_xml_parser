<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004961A1-20030102-D00000.TIF SYSTEM "US20030004961A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00001.TIF SYSTEM "US20030004961A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00002.TIF SYSTEM "US20030004961A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00003.TIF SYSTEM "US20030004961A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00004.TIF SYSTEM "US20030004961A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00005.TIF SYSTEM "US20030004961A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00006.TIF SYSTEM "US20030004961A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00007.TIF SYSTEM "US20030004961A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00008.TIF SYSTEM "US20030004961A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00009.TIF SYSTEM "US20030004961A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00010.TIF SYSTEM "US20030004961A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00011.TIF SYSTEM "US20030004961A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00012.TIF SYSTEM "US20030004961A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00013.TIF SYSTEM "US20030004961A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00014.TIF SYSTEM "US20030004961A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00015.TIF SYSTEM "US20030004961A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00016.TIF SYSTEM "US20030004961A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00017.TIF SYSTEM "US20030004961A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030004961A1-20030102-D00018.TIF SYSTEM "US20030004961A1-20030102-D00018.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004961</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10173565</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020618</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F007/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>707</class>
<subclass>100000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Apparatus for and method of executing customized interactive computing services in a broadband network environment</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>10173565</doc-number>
<kind-code>A1</kind-code>
<document-date>20020618</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09615830</doc-number>
<document-date>20000713</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</continuation-in-part-of>
</continuations>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>09615830</doc-number>
<document-date>20000713</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09902796</doc-number>
<document-date>20010712</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</continuation-in-part-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Louis</given-name>
<middle-name>P.</middle-name>
<family-name>Slothouber</family-name>
</name>
<residence>
<residence-us>
<city>Leesburg</city>
<state>VA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Aaron</given-name>
<middle-name>Y.</middle-name>
<family-name>Ye</family-name>
</name>
<residence>
<residence-us>
<city>Leesburg</city>
<state>VA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>M.</given-name>
<middle-name>Ellen</middle-name>
<family-name>Dudar</family-name>
</name>
<residence>
<residence-us>
<city>Lovettsville</city>
<state>VA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Kelly</given-name>
<middle-name>F.</middle-name>
<family-name>Lent</family-name>
</name>
<residence>
<residence-us>
<city>Purcellville</city>
<state>VA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>John</given-name>
<middle-name>J.</middle-name>
<family-name>Wiecek</family-name>
<name-suffix>JR.</name-suffix>
</name>
<residence>
<residence-us>
<city>Leesburg</city>
<state>VA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>BROBECK, PHLEGER &amp; HARRISON, LLP</name-1>
<name-2>ATTN: INTELLECTUAL PROPERTY DEPARTMENT</name-2>
<address>
<address-1>1333 H STREET, N.W. SUITE 800</address-1>
<city>WASHINGTON</city>
<state>DC</state>
<postalcode>20005</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Apparatus for and method of executing customized interactive computing services in a broadband network environment. A device on the broadband network is capable of retrieving user-defined data over the network and format and display it on an associated display along with data broadcast over the broadband network. The device may be customer premises equipment such as a set-top-box, gaming console, or home gateway connected to the broadband network. In the case of a set-top-box, the broadcast data would be television programming. The device is preferably capable of retrieving data from a source on the internet. Retrieval and formatting are preferably carried out by compact software agents which are sent to the device through the network to be stored in and to execute on the device. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is a continuation-in-part of U.S. patent application Ser. No. 09/615,830, filed Jul. 13, 2000, and a continuation-in-part of U.S. patent application Ser. No. 09/902,796, filed Jul. 12, 2001, the specifications of both of which are hereby incorporated herein by reference.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates generally to the retrieval and display of information via a computer network. More particularly, it relates to the local execution of customizable, interactive computing services on computing devices that are connected to an external computer network via an intermediate broadband communications network. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The processing power of conventional personal computing devices is said to double every eighteen months. When combined with the increasing availability of network bandwidth and accessible content, incomprehensibly large amounts of information are available for retrieval and review by individual computing device users. However, many of the most prevalent computing devices in the home or small office do not take advantage of this wealth of information. Such devices, often referred to as &ldquo;customer premises equipment&rdquo; (CPE) include the set-top-boxes that receive and decode digital cable or satellite television signals, video game consoles, and home network gateways. As opposed to general purpose devices such as PC&apos;s, these CPE devices are typically characterized by being targeted or dedicated to a specific application. Despite the ever increasing processing power in CPE devices and the high bandwidth connectivity available to them via their associated broadband networks, CPE devices and are most often employed simply to control the display of information or audio-video content that is broadcast to them from one or more centralized servers. This wealth of untapped computing and network resources can be applied to provide personalized interactive services to CPE device users. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Broadband networks typically connect a small number of powerful, centrally located server computers to a large number of remote CPE devices. Such networks are optimized to support high bandwidth broadcast of video, audio, graphic, text, and data content from the central servers out to CPE devices, but often provide much less bandwidth for communication in the other direction, from the CPE devices back to the central servers or out to external networks such as the internet. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The often limited computing power of CPE devices and asymmetrical nature of broadband networks creates an environment in which deployment of customizable, interactive applications for CPE devices is difficult. Extant systems continue the trend of using the CPE as simple display engines, and require many additional powerful centralized servers to perform the computing tasks necessary to support interactive services. This centralized server model does not scale well as the number of CPE users grows, especially when one considers the very large number of broadband network subscribers that are typical in the digital cable and satellite television industries. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> There is thus a need for a system that provides customizable, interactive applications that execute primarily on the local CPE devices, that makes efficient use of the computing resources on those devices and the broadband networks to which they are connected, and that communicates with external data sources, centralized servers, or other CPE devices. Such a system must scale well for a large number of users, requiring no support from powerful centralized servers. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The present invention meets these needs through the provision of a system which makes efficient use of the computing resources and capacity available in a CPE device and the broadband network resources available to that device. This system consists of an interactive software application, executed locally on CPE devices, that communicates via a broadband network with external data sources and retrieves specific information for display to the CPE device user. All retrieval and display tasks, including the horizontal and vertical scrolling of text and graphics, are executed locally on the CPE device. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> In some embodiments, such as that deployed in a digital cable television environment, a minimal &ldquo;Head-End Equipment&rdquo; (HEE) device may be installed at the head-end site or central office to supply services unavailable on the CPE devices themselves. Such services include persistent storage of personalized preferences, and bandwidth optimization via caching and broadcast of commonly requested external data. All significant computational tasks required to implement customizable interactive applications can be executed locally for each user on their own CPE devices. All network communication employed by the present invention can utilize the standard internet protocol (IP), or such layered protocols as may be commonly employed in conjunction with IP, such as TCP/IP and HTTP.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a diagram showing the hardware and network environment to which the current invention is applicable. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a diagram showing the software and hardware components common to customer premises devices. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a diagram showing relationships between the two primary components of the presently preferred architecture of the subject invention and the surrounding hardware and network environment. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a diagram of the presently preferred HEE architecture according to the present invention. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a graphical depiction of the presently preferred memory map of a CPE software application according to the present invention. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a diagram illustrating the presently preferred architecture of a CPE software application according to the present invention. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a diagram showing the presently preferred display format for combined information, video, and alerts according to the present invention. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a diagram showing the presently preferred display format for single topic information and alerts according to the present invention. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a diagram showing the presently preferred display format for alerts and video according to the present invention. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a diagram showing the presently preferred display format for a user interface implementing personalization of CPE application settings from a list of choices according to the present invention. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a diagram showing the presently preferred display format for a virtual keyboard according to the present invention. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a flow chart showing aspects of operation of a system according to a presently preferred embodiment of the invention. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a flow chart showing additional aspects of operation of a system according to a presently preferred embodiment of the invention. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a flow chart showing additional aspects of operation of a system according to a presently preferred embodiment of the invention. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a flow chart showing additional aspects of operation of a system according to a presently preferred embodiment of the invention. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a flow chart showing additional aspects of operation of a system according to a presently preferred embodiment of the invention. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a flow chart showing additional aspects of operation of a system according to a presently preferred embodiment of the invention. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a flow chart showing additional aspects of operation of a system according to a presently preferred embodiment of the invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> One aspect of the present invention is a system for executing software applications on &ldquo;customer premises equipment&rdquo; (CPE) devices that communicate via the standard &ldquo;Internet Protocol&rdquo; (IP) or derivative protocols over an extant broadband network to retrieve information from data sources connected to external computer networks, process the retrieved information, and selectively display the results locally on the CPE display device using various display mechanisms including horizontal and vertical scrolling of text and graphics. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> In one presently preferred embodiment, deployed in the digital cable television environment, the system employs one inexpensive &ldquo;head-end equipment&rdquo; (HEE) device, the equivalent of a conventional desktop personal computer, to provide persistent storage of personalized preferences for all CPE devices, and to optimize network bandwidth utilization. While the terms &ldquo;head-end equipment&rdquo; and &ldquo;HEE&rdquo; are used herein, it will be understood by one of ordinary skill in the art that such equipment need not be physically located at the head end of a broadband network, but, instead, may be located essentially anywhere on the network. Further, not all software components need execute on a single HEE device; rather, components may be distributed among several distinct HEE devices at the same or different locations, but all interconnected via the IP-based network. In other embodiments, such as might be deployed in the digital satellite television, game console network, or home gateway environments, such support services and HEE devices may not be required. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Referring now to the drawings, in which like reference numerals are used to refer to the same or similar elements, <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows an environment in which a system according to the invention may operate. Multiple CPE devices <highlight><bold>10</bold></highlight> are each connected via a IP-based network connection <highlight><bold>20</bold></highlight> to a broadband network <highlight><bold>30</bold></highlight>. The other end of the broadband network <highlight><bold>30</bold></highlight> is connected via a network <highlight><bold>25</bold></highlight> to one or more server computers <highlight><bold>35</bold></highlight> located at a central office or head-end site <highlight><bold>40</bold></highlight>. In a presently preferred embodiment of the invention, the network <highlight><bold>25</bold></highlight> is IP-based. One of ordinary skill in the art will readily appreciate, however, that any standard protocol may be used, so that while the example of the invention described herein is IP-based, the invention is not so limited. The network <highlight><bold>25</bold></highlight> may also be connected to an external TCP/IP-based network <highlight><bold>50</bold></highlight>, which in turn may connect various network data sources <highlight><bold>55</bold></highlight>. Regardless of the actual embodiments of the broadband network <highlight><bold>30</bold></highlight> and other environmental components, all CPE devices <highlight><bold>10</bold></highlight>, central office/head-end servers <highlight><bold>35</bold></highlight> and external data sources <highlight><bold>55</bold></highlight> can communicate via IP-based protocols. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> A CPE device <highlight><bold>10</bold></highlight> may be a digital cable television set-top-box, a digital satellite television set-top-box, a gaming console, a home gateway, or any other computer device capable of accepting user input, displaying graphical or text information to one or more users, and connecting to a computer network <highlight><bold>20</bold></highlight> via the standard IP-based protocols. As depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the CPE <highlight><bold>10</bold></highlight> is a computing device that is capable or executing programming instructions originating either from built-in storage or from external sources such as the server computers <highlight><bold>35</bold></highlight> located at the central office/head-end site <highlight><bold>40</bold></highlight>. CPE devices provide either an operating system or other low-level software services <highlight><bold>110</bold></highlight> that allow applications <highlight><bold>15</bold></highlight> executing on the CPE device <highlight><bold>10</bold></highlight> to interface with CPE hardware <highlight><bold>10</bold></highlight> and the broadband network <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The CPE device <highlight><bold>10</bold></highlight> is connected to an input device <highlight><bold>120</bold></highlight> and a display device <highlight><bold>130</bold></highlight>. The optional input device <highlight><bold>120</bold></highlight> may be a remote control, a keyboard, or any other device, either internal or external to the CPE device <highlight><bold>10</bold></highlight>, that receives user input signals and communicates those signals to the CPE device <highlight><bold>10</bold></highlight> via any appropriate wired or wireless mechanism. The display device <highlight><bold>130</bold></highlight> may be a television, a computer monitor, a projector, or any other device, either internal or external to the CPE device <highlight><bold>10</bold></highlight>, that is capable of receiving text, graphics, video or any other visual or audio information from the CPE device <highlight><bold>10</bold></highlight> via any appropriate wired or wireless mechanism, and presenting that information to one or more users. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Referring again to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the broadband network <highlight><bold>30</bold></highlight> may be any known wired or wireless network, including, singly or in combination, a cable television network, a satellite television network, a local area network (LAN), a wide area network (WAN), an analog telephone network, a digital telephone network, the Internet, or any other network capable of carrying IP-based network traffic. One end of the broadband network <highlight><bold>30</bold></highlight> connects to the various CPE devices <highlight><bold>10</bold></highlight>. The other end of the broadband network <highlight><bold>30</bold></highlight> is located at a central office or head-end site <highlight><bold>40</bold></highlight>, and connects to one or more centralized servers <highlight><bold>35</bold></highlight> via an internal network <highlight><bold>25</bold></highlight> that is capable of carrying IP-based network traffic. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> Several types of extant broadband networks fit this description. For example, in a digital cable television network environment thousands of television set-top-boxes connect to television broadcast servers located at the head-end site via an underground network of fiber optic and conducting wire cables, and an extensive network hardware infrastructure. While each head-end may support on the order of 100,000 CPE devices, multiple head-end sites may be required to service an entire market. Usually, each head-end receives broadcast content from a single server located at a home office site. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> A satellite television network environment is another example of a broadband network; television servers at a single central office site broadcast content to thousands or millions of television set-top-boxes via radio frequency transmissions relayed via satellite. Communication in the other direction, from the set-top-box back to the central office is usually accomplished via a transient IP connection over analog phone network lines. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Referring again to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, CPE devices <highlight><bold>10</bold></highlight> and server computers <highlight><bold>35</bold></highlight> may communicate with external computer networks <highlight><bold>50</bold></highlight> via IP-based protocols such as TCP/IP. Such external computer networks <highlight><bold>50</bold></highlight> include the internet, extranets, virtual private networks (VPN), or other TCP/IP-based networks. A variety of information sources <highlight><bold>55</bold></highlight> are accessible via external computer networks <highlight><bold>50</bold></highlight>, including web sites, e-mail servers, databases, and any other TCP/IP-based network services that communicate via any of the standard internet protocols built on top of TCP/IP, including but not limited to: HTTP, SMTP, POP, IMAP, ODBC and FTP. Information retrieved from external information sources <highlight><bold>55</bold></highlight> can be represented in a variety of formats, including but not limited to HTML, XML, RSS, RDF, PDF, MIME, plain text, GIF, JPEG, and MPEG. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> A system according to the present invention is depicted in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> by integrating the elements into the broadband network environment of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The system includes a software application <highlight><bold>15</bold></highlight> executing directly on CPE computing devices <highlight><bold>10</bold></highlight> and a single HEE device <highlight><bold>45</bold></highlight> located at the central office/head-end site <highlight><bold>40</bold></highlight> and connected to an IP-based network <highlight><bold>25</bold></highlight>. Preferably, all computation necessary to provide a personalized interactive service via the broadband network <highlight><bold>30</bold></highlight> is performed locally by the software application <highlight><bold>15</bold></highlight> executing on local CPE devices <highlight><bold>10</bold></highlight>. The optional, remote HEE device <highlight><bold>45</bold></highlight> supplies services that are missing from specific CPE devices, such as persistent storage for personalized preferences, and optimizes the bandwidth utilization of the broadband network <highlight><bold>30</bold></highlight> by the system. The load placed on an HEE device by each CPE device <highlight><bold>10</bold></highlight> is miniscule, and the aggregate load of all CPE devices connected to a single head-end or central office <highlight><bold>40</bold></highlight> is well within the capacity of a single conventional PC or other HEE device. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> A system according to the present invention is particularly advantageous since the massive amount of computation required to support a customizable personalized interactive service is distributed among the thousands or millions of simultaneously executing CPE devices, instead of performing all computation on one or more large-scale servers <highlight><bold>35</bold></highlight> at the central office/head-end site <highlight><bold>40</bold></highlight>. Despite the limited computing resources of individual CPE devices <highlight><bold>10</bold></highlight>, in the aggregate the large number of CPE devices <highlight><bold>10</bold></highlight> collectively provide more computing power and utilize the broadband network <highlight><bold>30</bold></highlight> bandwidth more efficiently than a system where one or more large-scale servers provides the computing power. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The presently preferred embodiment of the HEE device <highlight><bold>45</bold></highlight> is depicted in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. All TCP/IP communication using the HTTP protocol from the CPE software application <highlight><bold>15</bold></highlight> to external data sources <highlight><bold>55</bold></highlight> may be routed through a conventional caching proxy server software application <highlight><bold>180</bold></highlight>, which caches local copies of frequently requested information, reducing outbound IP traffic and improving overall response time for requests made from the CPE applications <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> A preference storage server software application <highlight><bold>190</bold></highlight> provides remote persistent storage services to CPE devices <highlight><bold>10</bold></highlight> that do not have sufficient local persistent storage in which to store the customized application preferences provided by the CPE user. The CPE software application <highlight><bold>15</bold></highlight> uses the HTTP protocol over TCP/IP to communicate with the preference storage server software <highlight><bold>190</bold></highlight> allowing a CPE application <highlight><bold>15</bold></highlight> to upload customized preferences data <highlight><bold>230</bold></highlight> after a user makes changes, and to download the customized preference data <highlight><bold>230</bold></highlight> whenever it is needed. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> External computing devices <highlight><bold>60</bold></highlight> may also communicate with the preference storage server software application <highlight><bold>190</bold></highlight> via TCP/IP. This allows appropriately authenticated external applications to modify the customized application preferences stored in the preferences data <highlight><bold>230</bold></highlight>, and thereby affect the behavior of individual CPE applications <highlight><bold>15</bold></highlight>. For example, in a digital cable television environment, a CPE user may want to personalize their CPE application preferences via an application running on their personal computer, which may be one of the external computing devices <highlight><bold>60</bold></highlight>. Similarly, application data may also be sent to the CPE applications <highlight><bold>15</bold></highlight> from external computing devices <highlight><bold>60</bold></highlight> via the preference storage server software application <highlight><bold>190</bold></highlight> and TCP/IP. Such application data may either modify or extend the functionality of the CPE applications <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> A conventional data carousel server software application <highlight><bold>200</bold></highlight> utilizes a pre-defined portion of the IP bandwidth available on the broadband network <highlight><bold>30</bold></highlight> to repeatedly broadcast out carousel data <highlight><bold>220</bold></highlight> to all CPE devices <highlight><bold>10</bold></highlight>, simultaneously. A CPE software application <highlight><bold>15</bold></highlight> that retrieves information broadcast by a data carousel server makes more efficient use of the available broadband network bandwidth than by retrieving that same information directly from the caching proxy server <highlight><bold>180</bold></highlight> or the original external data source <highlight><bold>55</bold></highlight>. In a conventional broadband network environment all CPE devices <highlight><bold>10</bold></highlight> operate identically and require the same content from a conventional data carousel server software application <highlight><bold>200</bold></highlight>. In a system according to the present invention, however, each CPE application <highlight><bold>15</bold></highlight> may request a distinct set of content items from a distinct set of external data sources <highlight><bold>55</bold></highlight>. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> To accommodate this diversity, a preferred embodiment of the subject invention incorporates a data carousel manager software application <highlight><bold>210</bold></highlight> to manage the contents of the carousel data <highlight><bold>220</bold></highlight>. Because the content items retrieved from external data sources <highlight><bold>55</bold></highlight> by each CPE software application <highlight><bold>15</bold></highlight> are completely determined by the preference settings defined for that particular CPE application <highlight><bold>15</bold></highlight>, and because all personalized preference settings for all CPE applications <highlight><bold>15</bold></highlight> connected to a particular HEE device <highlight><bold>45</bold></highlight> are stored in the preference data <highlight><bold>230</bold></highlight> on that or another HEE device <highlight><bold>45</bold></highlight>, the frequency at which all content items will be requested via the caching proxy server software <highlight><bold>180</bold></highlight> can be derived from the preference data <highlight><bold>230</bold></highlight>. The carousel manager <highlight><bold>210</bold></highlight> periodically performs this analysis to determine the most frequently requested content items, and subsequently retrieves the current versions of these content items via the caching proxy server <highlight><bold>180</bold></highlight> and stores them in the carousel data <highlight><bold>220</bold></highlight> for subsequent broadcast by the data carousel server <highlight><bold>200</bold></highlight>. A catalog listing the current content items in the carousel data <highlight><bold>230</bold></highlight> is also produced. The carousel manager <highlight><bold>210</bold></highlight> periodically updates the content items in the carousel data <highlight><bold>230</bold></highlight> to keep them current with respect to the actual data on the external data sources <highlight><bold>55</bold></highlight>. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> Within a preferred system according to the present invention, the CPE software application <highlight><bold>15</bold></highlight> executes on a CPE device <highlight><bold>10</bold></highlight> to retrieve information from external data sources <highlight><bold>55</bold></highlight> via a broadband network <highlight><bold>30</bold></highlight> using IP-based network protocols. The retrieved information is then analyzed by the CPE software application <highlight><bold>15</bold></highlight> and reformatted for display on the CPE display device <highlight><bold>130</bold></highlight>. Additionally, the CPE software application <highlight><bold>15</bold></highlight> must respond to input signals received from the input device <highlight><bold>120</bold></highlight> and provide a user interface that allows the local CPE user to customize application preferences for that CPE software application <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The CPE software application may be permanently stored in the CPE device <highlight><bold>10</bold></highlight>. In systems where there is already an installed base of CPE devices <highlight><bold>10</bold></highlight>, however, it is more convenient to load the CPE software application to the CPE device <highlight><bold>10</bold></highlight> either on boot-up or on demand. This makes the compact form and architecture of the application according to the invention particularly advantageous. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The presently preferred embodiment of the CPE software application <highlight><bold>15</bold></highlight> is a layered software architecture, as depicted in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, wherein the components of each layer are all similar in nature but independent. The process layer <highlight><bold>707</bold></highlight> contains object code modules that respond to events generated by the operating system, user input, or the scheduler process <highlight><bold>717</bold></highlight>, and invokes one or more of the application scripts <highlight><bold>710</bold></highlight> to respond to those events. The action layer <highlight><bold>705</bold></highlight> provides a variety of generic object code routines (also referred to as &ldquo;actions&rdquo; or &ldquo;services&rdquo;) that are useful to a broad class of CPE software applications and are not specific to the particular CPE software application <highlight><bold>15</bold></highlight> in the presently preferred embodiment of the subject invention. Collectively the process layer <highlight><bold>707</bold></highlight> and action layer <highlight><bold>705</bold></highlight> constitute a generic CPE software application platform, while the application layer <highlight><bold>707</bold></highlight> contains scripts and data that define a specific CPE software application. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> Each of the object code modules in the process layer <highlight><bold>707</bold></highlight> may define a unique process and in the presently preferred embodiment of the CPE software application <highlight><bold>15</bold></highlight> implements a distinct thread of execution. The main O/S event handler <highlight><bold>717</bold></highlight> receives events from the operating system <highlight><bold>110</bold></highlight> and CPE input device <highlight><bold>120</bold></highlight>, and invokes the appropriate scripts from the application layer <highlight><bold>700</bold></highlight> to respond to those events. The scheduler <highlight><bold>727</bold></highlight> periodically examines the event schedules <highlight><bold>740</bold></highlight> and invokes one or more application scripts <highlight><bold>710</bold></highlight> to handle scheduled events. The generic network server <highlight><bold>737</bold></highlight> monitors all incoming TCP/IP listening sockets, if any, and invokes the appropriate application script <highlight><bold>710</bold></highlight> to handle the server connection as specified by the SOAP service definition data <highlight><bold>750</bold></highlight>. The graphics support module <highlight><bold>747</bold></highlight> continuously updates the display of all animated graphics elements including but not limited to hotspot rectangles, horizontally scrolling text and graphics, vertically scrolling text and graphics, and graphical cursors. The script engine <highlight><bold>757</bold></highlight> interprets application scripts <highlight><bold>710</bold></highlight> invoked by the other process modules or other scripts. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Every action defined in the action layer <highlight><bold>705</bold></highlight> is an independent object code module which implements a common task, similar to a library function. Many actions are defined in the action layer <highlight><bold>705</bold></highlight>, but for descriptive purposes they may be classified by function into categories without loss of generality. The database actions <highlight><bold>715</bold></highlight> allow application scripts to read and write from an internal XML database. The graphics actions <highlight><bold>725</bold></highlight> support the creation, management, and display of graphical objects, including but not limited to windows, hotspots, checkboxes, edit boxes, virtual keyboards, GIF and JPEG images, video regions, canvases, vertical scrolling text and graphics, horizontal scrolling text and graphics, static text, lines, polygons, shapes and regions. The SOAP actions <highlight><bold>735</bold></highlight> implement both client and server sides of the SOAP protocol for requesting and providing remote procedure calls and &ldquo;web services&rdquo; as defined by the SOAP service definitions <highlight><bold>750</bold></highlight>. The network protocol actions <highlight><bold>745</bold></highlight> implement the client version of all standard internet protocols, including but not limited to HTTP, FTP, SMTP, POP, and IMAP. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> The retrieval agent actions <highlight><bold>755</bold></highlight> implement retrieval agents according to the retrieval agent definitions <highlight><bold>720</bold></highlight>. Retrieval agent definitions <highlight><bold>720</bold></highlight> define the sequence of operations necessary to retrieve, analyze, and process information from external data sources <highlight><bold>55</bold></highlight> and store it in an internal database for later display. Because these operations are similar for all retrieval agents, retrieval agent definitions <highlight><bold>720</bold></highlight> can be defined concisely to conserve storage space and to facilitate rapid execution via retrieval agent actions <highlight><bold>755</bold></highlight>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> For example, in one preferred embodiment of the present invention a retrieval agent definition designed to retrieve stock data from remote XML files may have the following format: </paragraph>
<paragraph id="P-0050" lvl="2"><number>&lsqb;0050&rsqb;</number> http://stock.server.com/path/quote.html&quest;symbol&equals;&commat;symbol </paragraph>
<paragraph id="P-0051" lvl="2"><number>&lsqb;0051&rsqb;</number> /displaydata/stocks/&commat;index </paragraph>
<paragraph id="P-0052" lvl="2"><number>&lsqb;0052&rsqb;</number> OUT symbol&equals;&commat;symbol </paragraph>
<paragraph id="P-0053" lvl="2"><number>&lsqb;0053&rsqb;</number> GET &lt;quote&gt;&lt;/quote&gt; <highlight><bold>0</bold></highlight> <highlight><bold>0</bold></highlight> <highlight><bold>0</bold></highlight> &amp;price&equals;</paragraph>
<paragraph id="P-0054" lvl="2"><number>&lsqb;0054&rsqb;</number> GET &lt;change&gt;&lt;/change&gt; <highlight><bold>0</bold></highlight> <highlight><bold>0</bold></highlight> <highlight><bold>0</bold></highlight> &amp;diff&equals;</paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Each line of this definition defines an operation to be performed by the retrieval agent actions <highlight><bold>755</bold></highlight>. Throughout the definition, all terms preceded by an &ldquo;&commat;&rdquo; character reference a parameter of the same name supplied by the action caller, and the corresponding parameter value is substituted for the parameter reference prior to performing the operation. On each line the parameters for the operation are delimited by blank characters. The first line provides a URL where the remote data file may be found, and instructs the agent action to retrieve the file via the proxy server <highlight><bold>180</bold></highlight>. The second line identifies a location in the internal XML database that is to be cleared, and where subsequent output produced by this agent is to be concatenated. The third line specifies a simple output of the text in the parameter. The fourth and fifth lines each describe an operation that retrieves and then outputs a snippet of text from the retrieved XML file, where the first parameter is a match string identifying the beginning of the snippet, the second parameter is a match string identifying the end of the snippet, the three numeric parameters define offsets to the character positions defined by the match strings, and the last parameter is a simple text string to be output immediately prior to outputting the snippet. A sequence of these and similar commands is sufficient for most retrieval agent tasks. Actual retrieval agents are scripts that may perform additional analysis and processing in addition to invoking retrieval agent actions <highlight><bold>755</bold></highlight> for one of the retrieval agent definitions <highlight><bold>720</bold></highlight>. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Similarly display agent actions <highlight><bold>765</bold></highlight> implement display agents according to the display agent definitions <highlight><bold>730</bold></highlight>. Display agent definitions <highlight><bold>730</bold></highlight> define the sequence of operations necessary to retrieve information from an internal database and to display that information on a CPE display device <highlight><bold>130</bold></highlight>. Because these operations are similar for all display agents, display agent definitions <highlight><bold>730</bold></highlight> can be defined concisely to conserve storage space and to facilitate rapid execution via display agent actions <highlight><bold>765</bold></highlight>. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> In one preferred embodiment of the present invention display agent definitions <highlight><bold>730</bold></highlight> and display agent actions <highlight><bold>765</bold></highlight> are similar in form and function to their retrieval agent counterparts defined above, except that the set of operations supported by display agent actions <highlight><bold>765</bold></highlight> represent all of the graphics actions <highlight><bold>725</bold></highlight> for producing output on CPE display devices <highlight><bold>130</bold></highlight>. But unlike retrieval agent actions <highlight><bold>755</bold></highlight>, display agent actions <highlight><bold>765</bold></highlight> do not directly perform the operations specified in display agent definitions <highlight><bold>730</bold></highlight>. Instead, each operation line in a definition is parsed and converted into a corresponding low-level graphics event and placed in the graphics event queue for subsequent handling by the graphics support process <highlight><bold>747</bold></highlight>. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> All application components defined in the application layer <highlight><bold>700</bold></highlight>, including but not limited to application scripts <highlight><bold>710</bold></highlight>, retrieval agent definitions <highlight><bold>720</bold></highlight>, display agent definitions <highlight><bold>730</bold></highlight>, event schedules <highlight><bold>740</bold></highlight>, and SOAP service definitions, consist of data rather than object code. All application components are either referenced or interpreted by other code modules in either the action layer <highlight><bold>705</bold></highlight> or process layer <highlight><bold>707</bold></highlight>. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> This layered architecture of the presently preferred embodiment of the CPE software application <highlight><bold>15</bold></highlight> has many advantages. By locating all unique features of a particular application within the application layer <highlight><bold>700</bold></highlight>, the object code in the action layer <highlight><bold>705</bold></highlight> and process layer <highlight><bold>707</bold></highlight> may be developed, tested, optimized, and used in all CPE software applications, facilitating new application. Further, by defining the application layer entirely in data, modifications and extensions of a deployed application may be downloaded via the broadband network and applied dynamically, without reinstalling the object code. The process layer <highlight><bold>707</bold></highlight> defines the only active code; all operations performed by the CPE software application are initiated by the process layer. By clearly defining and limiting the scope of active processes, module interactions are minimized, thereby facilitating the development and testing of robust applications. The action layer <highlight><bold>705</bold></highlight> defines a library of independent code modules or &ldquo;actions&rdquo;. Actions are not active processes and can only be invoked by scripts in the application layer <highlight><bold>700</bold></highlight> or object code in the process layer <highlight><bold>707</bold></highlight>. This modular design facilitates incremental development and clear unit testing of the actions. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> A logical memory map for the CPE device <highlight><bold>10</bold></highlight> is depicted in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. The operating system object code <highlight><bold>810</bold></highlight> is typically stored in a contiguous block of memory. Most of the remainder of memory is managed as the O/S free store area <highlight><bold>820</bold></highlight>, from which all subsequent memory is allocated. If the CPE software application <highlight><bold>830</bold></highlight> is not already available in memory, then, at some point, the operating system object code <highlight><bold>800</bold></highlight> will allocate a block of memory of sufficient size to store the CPE application object code <highlight><bold>850</bold></highlight>, which is subsequently downloaded via the broadband network <highlight><bold>30</bold></highlight>. Once control is passed to the CPE application object code <highlight><bold>850</bold></highlight>, it must allocate storage for its initial XML database <highlight><bold>860</bold></highlight>, if it has not already done so, from either the operating system free store area <highlight><bold>820</bold></highlight> or an application specific free store area <highlight><bold>840</bold></highlight> and then download the initial XML database <highlight><bold>860</bold></highlight> via the broadband network <highlight><bold>30</bold></highlight> into the allocated block. Only then will the CPE software application be fully functional. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> However, in the preferred embodiment of the subject invention, the initial database and other initial application data <highlight><bold>860</bold></highlight> are compiled into a contiguous block of the CPE software application object code. Once the application object code <highlight><bold>850</bold></highlight> is executed and all relative pointer values in this data are translated into absolute pointer values, this initial data may be used immediately without the additional memory allocation and data download. Only storage for new or expanded data must be allocated from the application free store <highlight><bold>840</bold></highlight>. This has several advantages. The time required for the application to become fully functional is significantly shorter than the alternative. Also, because CPE application data, though volatile, seldom expands in size new memory allocation is rare, and memory fragmentation is reduced. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> In a system according to the present invention, CPE applications <highlight><bold>15</bold></highlight> retrieve data from external data sources <highlight><bold>55</bold></highlight>, analyze that data, and process it for possible future display on the CPE display device <highlight><bold>30</bold></highlight>. However, in some embodiments the information that is relevant to the CPE user may not be the retrieved external data itself, but the boolean result of some condition or criteria applied to that data. When data is retrieved that satisfies the condition or criteria the user is alerted to this fact by the presentation of a pre-defined visual or auditory alert signal on the display device. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> This generic alert capability allows a great deal of highly relevant information to be presented to the CPE user via a very simple display mechanism. For example, in one preferred embodiment of the subject invention deployed in the digital cable television environment, the CPE application <highlight><bold>15</bold></highlight> could retrieve recently received e-mail messages from the CPE user&apos;s e-mail account server. Display of that e-mail content is neither practical on television displays, nor is it particularly useful, since limitations of the remote control input device make replying to the e-mail messages difficult. Instead, a visual alert in the form of an envelope icon is drawn on the television display on top of the video content whenever an e-mail message is retrieved from a specific sender address, as specified by the CPE user. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> The system according to the subject invention employs several mechanisms for presenting information to the CPE user via the CPE display device <highlight><bold>130</bold></highlight>. The visual display mechanisms include, but are not limited to the following: regions of arbitrary shape and color, lines of arbitrary shape and color, static text in a variety of type faces and colors, static graphics, moving text, moving graphics, periodically changing text and graphics, horizontally scrolling text and graphics, vertically scrolling text and graphics, alert messages, alert icon or other graphics, secondary windows, editable text fields, and selectable regions. Additionally, in environments where the broadband network broadcasts video content, that content may be displayed on the display device <highlight><bold>130</bold></highlight> either occupying the full screen, or resized to be displayed in a smaller region at any location on the display device <highlight><bold>130</bold></highlight> screen. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> Any and all of the display mechanisms may be used in combination simultaneously on the display device <highlight><bold>130</bold></highlight> screen, and may overlay each other with various levels of transparency. The generation, drawing, and updating of all employed display mechanisms, including animation and movement of horizontal and vertical scrolls and alerts, is coordinated and controlled by object code and scripts executing locally on each individual CPE device. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> In one preferred embodiment of the present invention, content is presented to the CPE user via a multi-mode display on the CPE display device <highlight><bold>130</bold></highlight>. <cross-reference target="DRAWINGS">FIGS. 7 through 11</cross-reference> depict various display mode formats and demonstrate the use of many of the available display mechanisms. Associated with each display mode are a possible video content region, a graphic background, and one or more display agents. Each display agent draws the formatted content or alerts associated with a particular retrieval agent to a specific region of the display mode format. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> depicts a possible display mode format <highlight><bold>300</bold></highlight> in which video content and several display agents are combined. A solid color background fills the entire format <highlight><bold>300</bold></highlight> with lines <highlight><bold>305</bold></highlight> drawn to delimit various display regions. All other content is displayed on top of this background with no transparency. Video content, if available, is resized and presented in one region <highlight><bold>310</bold></highlight>. Another region <highlight><bold>320</bold></highlight> is reserved for the display of alert icons <highlight><bold>380</bold></highlight> and logo graphics <highlight><bold>390</bold></highlight>. Content that will not entirely fit into a single small region is presented in a vertically scrolling regions <highlight><bold>340</bold></highlight> and <highlight><bold>350</bold></highlight>. Similarly, large amounts of other text and small graphic content is may be presented in horizontally scrolling regions <highlight><bold>360</bold></highlight> and <highlight><bold>370</bold></highlight>. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> In one presently preferred embodiment of the subject invention, deployed in the digital cable television environment, region <highlight><bold>330</bold></highlight> is reserved for text or graphic information provided by broadband network operators. Local news headlines for several user-customizable regions are displayed in the vertical scroll <highlight><bold>340</bold></highlight>, that can display any number of news headlines by periodically shifting the currently displayed headlines up by one line, erasing the top headline, and displaying a new headline at the bottom. Similarly, customized weather information for several localities is displayed in a weather vertical scroll <highlight><bold>350</bold></highlight>. Customized sports scores and sports news is displayed in the horizontal scroll <highlight><bold>360</bold></highlight>, which displays any sports information, including both text and small graphics, in one long horizontal line that is constantly moving across the screen from right to left, with old characters disappearing off of the left side of the screen as new characters appear on the right. Similarly, customized stock ticker information, including both text and small graphics, is displayed in the horizontal scroll <highlight><bold>370</bold></highlight>. A branding and alert area <highlight><bold>320</bold></highlight> is provided space for broadband network operators to display a graphic logo <highlight><bold>390</bold></highlight>, and to display an e-mail alert icon <highlight><bold>380</bold></highlight>. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> depicts another possible display mode format <highlight><bold>400</bold></highlight> in which a single type of information, such as news, weather, sports, or stocks, may be displayed via a horizontal scroll <highlight><bold>420</bold></highlight> over top of full screen video <highlight><bold>410</bold></highlight>. Alert icons <highlight><bold>380</bold></highlight> and logo graphics <highlight><bold>390</bold></highlight> are also included in this display mode. Any of the non-video display items may be drawn with arbitrary levels of transparency to allow the video content beneath them to be partially visible. In one presently preferred embodiment of the subject invention, deployed in the digital cable television environment, several modes use this format, each devoted to one of news and weather content, sports content, or stock content displayed in the horizontal scrolling region <highlight><bold>420</bold></highlight>. In each such mode the alert icon <highlight><bold>380</bold></highlight> is used to alert the CPE user of recently received e-mail from a specific sender address, as provided by the CPE user. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> depicts another possible display mode format <highlight><bold>500</bold></highlight> in which only an alert graphic <highlight><bold>380</bold></highlight> and logo graphic <highlight><bold>390</bold></highlight> overlay full screen video <highlight><bold>510</bold></highlight>, drawn at arbitrary levels of transparency. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> depicts a possible display mode format <highlight><bold>550</bold></highlight> that provides a user interface allowing features of the CPE software application to be personalized by the CPE user. An arbitrary number of preference choices <highlight><bold>560</bold></highlight> are presented to the CPE user as static text combined with selectable regions. Generation of the appropriate input signal via the CPE input device <highlight><bold>120</bold></highlight> allows the currently highlighted preference choice <highlight><bold>560</bold></highlight> to be selected. Graphic feedback of selections is provided by an appropriate graphic displayed adjacent to selected choices. Via the navigation keys of a CPE input device <highlight><bold>120</bold></highlight> different choices can be selected and subsequently stored in the preference data. An arbitrary number of action choices <highlight><bold>580</bold></highlight> are also presented as static text combined with selectable regions. Selection of such an action permits navigation through various display modes and also performs one or more side-effect operations, such as recording all selected choices to persistent data storage. In one presently preferred embodiment of the subject invention, deployed in the digital cable television environment, many of the display modes use formats similar to this one to allow a CPE user to personalize CPE application <highlight><bold>15</bold></highlight> preference settings. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> depicts a possible display mode format <highlight><bold>600</bold></highlight> that provides a virtual keyboard. Users of CPE devices that have limited input devices <highlight><bold>120</bold></highlight>, such as a digital cable television remote control, can select the various selectable regions on this format to enter custom preferences where the list of possible choices is so large as to make the display mode <highlight><bold>550</bold></highlight> impractical. In one presently preferred embodiment of the subject invention, deployed in the digital cable television environment, several personal settings modes use this display format to gather settings information, such as zip codes and stock symbols. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> The diagrams in <cross-reference target="DRAWINGS">FIGS. 12 through 18</cross-reference> describe some processes preferably embodied in a preferred implementation of the subject invention. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> The startup process of the CPE application <highlight><bold>15</bold></highlight> is diagramed in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>. Once the CPE application <highlight><bold>15</bold></highlight> begins execution it must immediately replace all relative pointer references in its internal XML database with the corresponding absolute pointers <highlight><bold>1000</bold></highlight>. This process is almost instantaneous. The new processes or thread of execution are spawned for the script engine process <highlight><bold>1010</bold></highlight>, the graphics support process <highlight><bold>1020</bold></highlight>, and the generic network server <highlight><bold>1030</bold></highlight>. Descriptions of those additional processes is provided below. After spawning off the other active processes the main application process locates the startup script in the application scripts <highlight><bold>710</bold></highlight> and calls it <highlight><bold>1040</bold></highlight>. The startup script sets the current mode global variable to the initial mode <highlight><bold>1050</bold></highlight> and calls the display script corresponding to that mode <highlight><bold>1060</bold></highlight>. The display mode script draws the format background <highlight><bold>1070</bold></highlight> on the CPE display device <highlight><bold>130</bold></highlight>, creates a video window if appropriate for the current mode <highlight><bold>1080</bold></highlight>, creates special &ldquo;ticker&rdquo; windows <highlight><bold>1090</bold></highlight> for any horizontally scrolling regions in the current mode format, and resets the schedules for all display agents that apply to the current mode <highlight><bold>1090</bold></highlight> so that they expire immediately. The mode display script then returns control to the startup script, which initializes all other global script data <highlight><bold>1015</bold></highlight>. The startup script then returns control to the main application thread, which loads the preferences <highlight><bold>1025</bold></highlight> for the particular CPE device <highlight><bold>10</bold></highlight> via an HTTP request to the preference storage server <highlight><bold>190</bold></highlight>. At this point the special startup activities are complete, and the main application process begins execution of the main event loop. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> The main event loop of the CPE application, executed by the main O/S event handler process <highlight><bold>717</bold></highlight>, is diagrammed in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. At the top of the loop the O/S event queue is examined to determine whether or not an O/S event is available <highlight><bold>1100</bold></highlight>. If not, some small fraction of a second is yielded to other processes <highlight><bold>1115</bold></highlight>, and the queue is examined again <highlight><bold>1100</bold></highlight>. If an O/S event is found in the queue, it is first examined to determine whether or not it is a QUIT event <highlight><bold>1105</bold></highlight>; and if so the CPE application must rapidly stop all processes, free all memory and terminate <highlight><bold>1110</bold></highlight>. All other types of events are then mapped to a script <highlight><bold>1120</bold></highlight>, which may be empty, located in the application scripts <highlight><bold>710</bold></highlight>. The corresponding script is invoked <highlight><bold>1125</bold></highlight> via the script engine <highlight><bold>757</bold></highlight> to handle the event. The event is then removed from the O/S event queue <highlight><bold>1130</bold></highlight> and control returns to the top of the main event loop <highlight><bold>1100</bold></highlight>. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> The graphic support process <highlight><bold>747</bold></highlight> is diagrammed in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>. At the top of the graphics process event loop, the graphics queue is examined to determine whether or not a graphics event is available <highlight><bold>1150</bold></highlight>. If not, some small fraction of a second is yielded to other processes <highlight><bold>1115</bold></highlight>, and the queue is examined again <highlight><bold>1150</bold></highlight>. If a graphics event is found in the queue, its event type is mapped <highlight><bold>1160</bold></highlight> to a one of the many graphics actions <highlight><bold>725</bold></highlight>, and the corresponding action is invoked to handle the event <highlight><bold>1170</bold></highlight>. Control then returns to the top of the loop <highlight><bold>1150</bold></highlight>. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> The scheduler process <highlight><bold>727</bold></highlight> is diagrammed in <cross-reference target="DRAWINGS">FIG. 15</cross-reference>. At the top of the loop <highlight><bold>1200</bold></highlight> the event schedules <highlight><bold>740</bold></highlight> are examined to find any scheduled events with expired timers and place them on the scheduler queue. If the scheduler queue is found to be empty <highlight><bold>1205</bold></highlight>, several seconds of processing time are yielded to other processes <highlight><bold>1215</bold></highlight>, and then control returns to the top of the loop <highlight><bold>1200</bold></highlight>. However, if a scheduled event is in the scheduler queue <highlight><bold>1205</bold></highlight>, the corresponding event script is located <highlight><bold>1210</bold></highlight> in the application scripts <highlight><bold>710</bold></highlight> and invoked <highlight><bold>1220</bold></highlight> via the script engine <highlight><bold>757</bold></highlight>. Upon completion of the event script the expiration timer associated with the event, and located in the event schedules <highlight><bold>740</bold></highlight>, is incremented by the appropriate interval <highlight><bold>1225</bold></highlight>, and the event is removed from the scheduler queue. Control then returns to the top of the loop <highlight><bold>1200</bold></highlight>. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> The generic network server process <highlight><bold>737</bold></highlight> is diagrammed in <cross-reference target="DRAWINGS">FIG. 16</cross-reference>. The generic network server is designed to handle all initial socket listens required to implement TCP/IP-based protocol servers. Once an incoming socket connection is established, a network protocol action <highlight><bold>745</bold></highlight> associated with the listening socket and port is invoked to actually handle the server side of the protocol transaction. Initially, the generic network server event loop <highlight><bold>1305</bold></highlight> opens a listening socket, on the appropriate ports, to support any required servers. The top of the process loop then looks for a connection event in one of the queues associated with a listening socket <highlight><bold>1310</bold></highlight>. If none are found, a small fraction of a second of processing time is yielded to other processes <highlight><bold>1325</bold></highlight>, and control returns to the top of the loop <highlight><bold>1310</bold></highlight>. If a socket connection event is found in one of the server queues it is first examined to determine whether or not it represents a SOAP protocol request <highlight><bold>1315</bold></highlight>. If so, a corresponding SOAP service definition, which may be empty, is located <highlight><bold>1320</bold></highlight> in the SOAP service definitions <highlight><bold>750</bold></highlight>. The SOAP service definition and the actual socket connection are then passed to the appropriate SOAP action <highlight><bold>735</bold></highlight> for handling of the SOAP request <highlight><bold>1345</bold></highlight>. The handled connection event is then removed from the server queue <highlight><bold>1350</bold></highlight>, and control returns to the top of the loop <highlight><bold>1310</bold></highlight>. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> If a connection event is found on a queue <highlight><bold>1310</bold></highlight>, but it is not a SOAP protocol request <highlight><bold>1315</bold></highlight>, the queue is mapped <highlight><bold>1330</bold></highlight> to an appropriate network protocol action <highlight><bold>745</bold></highlight>, and the connection is passed to that action for further handling <highlight><bold>1340</bold></highlight>. The event is then removed from the event queue <highlight><bold>1350</bold></highlight>, and control returns to the top of the loop <highlight><bold>1310</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> diagrams the process by which a retrieval agent action <highlight><bold>755</bold></highlight> processes requests for content from external sources <highlight><bold>55</bold></highlight> via the proxy server <highlight><bold>180</bold></highlight> and data carousel server <highlight><bold>200</bold></highlight>. Initially, the requested URL is examined to determine if the request protocol is http <highlight><bold>1405</bold></highlight>. If not, the network protocol action <highlight><bold>745</bold></highlight> corresponding to the request protocol is invoked <highlight><bold>1415</bold></highlight>; it retrieves the requested data from the external source <highlight><bold>55</bold></highlight> directly <highlight><bold>1425</bold></highlight> and returns that data <highlight><bold>1440</bold></highlight> to the retrieval agent action <highlight><bold>755</bold></highlight>; and the data is then returned to the original caller <highlight><bold>1455</bold></highlight> for processing. If, however, the request protocol is http <highlight><bold>1405</bold></highlight>, the HTTP protocol action <highlight><bold>745</bold></highlight> is invoked <highlight><bold>1410</bold></highlight> to format and send a proxy request <highlight><bold>1420</bold></highlight> to the proxy server <highlight><bold>180</bold></highlight> on the HEE device <highlight><bold>45</bold></highlight>. The proxy server <highlight><bold>180</bold></highlight> examines the request and searches for a matching file in the carousel data directory file <highlight><bold>215</bold></highlight> constructed by the carousel manager <highlight><bold>210</bold></highlight>. If found <highlight><bold>1450</bold></highlight>, the corresponding carousel address found in the directory file <highlight><bold>215</bold></highlight> is embedded in an HTTP response <highlight><bold>1470</bold></highlight>, and that response is returned <highlight><bold>1475</bold></highlight> to the proxy server <highlight><bold>180</bold></highlight>. Otherwise the proxy server treats the request as normal and retrieves the file <highlight><bold>1465</bold></highlight>. Either way, the resulting response is returned to the HTTP client <highlight><bold>1475</bold></highlight>. The HTTP client protocol action <highlight><bold>745</bold></highlight> examines the response <highlight><bold>1445</bold></highlight> to determine if it contains the actual data from the proxy server, or a carousel address. If the latter is true, the data carousel client <highlight><bold>767</bold></highlight> is invoked <highlight><bold>1460</bold></highlight> to retrieve the data. Either way, the data is returned <highlight><bold>1440</bold></highlight> to the retrieval agent action <highlight><bold>755</bold></highlight>, and then to the original caller <highlight><bold>1455</bold></highlight>. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> The process by which the data carousel manager software application <highlight><bold>210</bold></highlight> periodically loads the carousel with data is diagrammed in <cross-reference target="DRAWINGS">FIG. 18</cross-reference>. Initially, the carousel directory file <highlight><bold>215</bold></highlight> is erased <highlight><bold>1500</bold></highlight> to temporarily prevent proxy server <highlight><bold>180</bold></highlight> responses that send the HTTP client action <highlight><bold>745</bold></highlight> to the carousel for the data. The carousel server software application <highlight><bold>210</bold></highlight> is then instructed to stop broadcasting <highlight><bold>1505</bold></highlight>. The data carousel manager <highlight><bold>210</bold></highlight> the examines all preference settings found in the preferences data <highlight><bold>230</bold></highlight> and counts all duplicate settings entries <highlight><bold>1510</bold></highlight>. A list of the N settings with the highest counts is then constructed, where N is some number determined by bandwidth analysis. In one preferred embodiment of the subject invention, the value of 50 is used for N. The list of frequently referenced settings is then examined <highlight><bold>1525</bold></highlight>. If there are no items in the list, the data carousel server application <highlight><bold>210</bold></highlight> is instructed to begin broadcasting again <highlight><bold>1530</bold></highlight>, and a timer is set to expire when the process should repeat, usually many hours later <highlight><bold>1540</bold></highlight>. If the timer has expired then control returns to the top of the loop <highlight><bold>1500</bold></highlight>. Otherwise, processing time is yielded to other processes for several minutes or seconds, then control returns to the timer expiration test <highlight><bold>1550</bold></highlight>. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> If, however, there are items in the list of commonly referenced settings then the first item in the list is selected <highlight><bold>1525</bold></highlight> and mapped to a URL and passed to the proxy server <highlight><bold>180</bold></highlight> for retrieval <highlight><bold>1545</bold></highlight>. The resulting data file is stored in the carousel data <highlight><bold>1545</bold></highlight> and a corresponding entry for the file, along with the necessary carousel address information, is written <highlight><bold>1565</bold></highlight> to the carousel data directory file <highlight><bold>215</bold></highlight>. The current setting is then removed from the list <highlight><bold>1570</bold></highlight>, and control returns to processing the next item in the list <highlight><bold>1525</bold></highlight>. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> While specific embodiments of the invention have been shown and described in detail to illustrate the application of the principles of the invention, it will be understood that the invention may be embodied otherwise without departing from such principles. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. Apparatus for enabling display of data from a plurality of data sources through a broadband network, at least one of said data sources comprising a data source which broadcasts data over said broadband network, and the other of said data sources being locally selectable by a user, said apparatus comprising: 
<claim-text>a data structure stored in memory in said apparatus, said data structure representing an application which, when executed by said apparatus, enables said apparatus to retrieve data from said other of said data sources locally selected by a user. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said apparatus further comprises nonvolatile storage, and wherein said data structure is stored in said nonvolatile storage. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said apparatus further comprises storage and wherein said data structure is downloaded from a remote computing device through said broadband network when said apparatus is activated. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said apparatus further comprises storage and wherein said data structure is downloaded from a remote computing device through said broadband network when a user operating said apparatus attempts to use said application. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said broadband network is connected to the internet, and said other of said data sources is connected to the internet. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said apparatus is configured to be able to perform substantially all computational tasks required to retrieve data from said other of said data sources. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said apparatus retrieves data from said other of said data sources using agent-based software included in said data structure. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said apparatus comprises a CPE device. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said apparatus can retrieve and display external network content. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising a personal computer connected to the internet, and wherein data can be transferred between a user&apos;s personal computer and said apparatus via said broadband network. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein said data comprises personalized application settings. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference> wherein said data comprises application modifications. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> wherein said application modifications comprise a new script adding new functionality to the application. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> wherein said application modifications comprise a replacement script that modifies previously existing functionality of the application. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> wherein said application modifications comprise addition of a new software agent that retrieves new information from an external source. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein said external source is the internet </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference> wherein said external source is an intranet. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> wherein said application modifications comprise addition of a new software agent that displays new information on a local display device. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said apparatus is adapted to display in conjunction with a display device a personalized selection of information retrieved from external networks. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein said information comprises news headlines for one or more user-customizable localities. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein said information comprises weather reports and forecasts for one or more user-customizable localities. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein said information comprises sports news and scores for selected sports, leagues and teams. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein said information comprises selected stock quotes. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein said information comprises e-mail messages. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein application specific components of said application are defined in a remotely modifiable portion of said data structure, facilitating modification and extension. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said apparatus is adapted to recognize an occurrence of a pre-defined event and to alert a user to said occurrence of a pre-defined event. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein said alert comprises of a graphic display. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein said alert comprises a text message. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein said alert comprises an auditory signal. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein said pre-defined event comprises the existence of at least one unread e-mail message in the remote e-mail account of a system user. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein said pre-defined event comprises the existence of at least one unread e-mail message in the remote e-mail account of a system user from one of a pre-defined list of senders. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein said pre-defined event comprises the existence of at least one unread e-mail message in the remote e-mail account of a system user containing one of a pre-defined list of keywords. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein said pre-defined event comprises a severe weather warning or advisory. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein said pre-defined event comprises appearance of one of a pre-defined list of items on a shopping channel. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> wherein said pre-defined event comprises appearance of one of a pre-defined list of performers in the program guide description of a currently airing television program. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said apparatus is adapted to locally execute a retrieval agent to retrieve selected content from said other data source. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 36</dependent-claim-reference> wherein said apparatus is further adapted to display, in conjunction with a display device, said selected content retrieved from said other data source. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said apparatus is adapted to locally execute operations for displaying video, textual, and graphic information simultaneously. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference> wherein said textual and graphic information is displayed in a horizontally scrolling region. </claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference> wherein the horizontally scrolling region does not obscure resized video information. </claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference> wherein the horizontally scrolling region overlays full screen video. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference> wherein said textual and graphic information is displayed in a vertically scrolling region. </claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 42</dependent-claim-reference> wherein said textual and graphic information is displayed in a periodically updated region. </claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said apparatus is adapted to locally execute a user interface for gathering application settings information from a user. </claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said apparatus is adapted to display, in conjunction with a display device, selectable regions which display indicia for defining and selecting pre-defined settings. </claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said apparatus is adapted to display, in conjunction with a display device, selectable regions for navigating through a multi-page user interface. </claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. Apparatus as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said apparatus is adapted to display, in conjunction with a display device, a locally executing virtual keyboard for entering alpha-numeric information into locally executing applications. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. A system comprising: 
<claim-text>a broadband network; </claim-text>
<claim-text>a server connected to said broadband network; </claim-text>
<claim-text>a plurality of devices for customizable interaction with said server over said broadband network, each of said devices being connectable to a display and being adapted to cause said display to show content broadcast over said broadband network to said devices, each of said devices including a data structure representing an application which, when executed, enables said devices to interface with said broadband network to provide at least one customizable interactive computer service. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference> wherein said customizable interactive computer service comprises customizable retrieval of data from the internet. </claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference> wherein said devices are configured to be able to perform substantially all computational tasks required to implement said customizable interactive computer service. </claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference> further comprising a support server configured to optimize bandwidth utilization of the broadband network. </claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference> further comprising a support server configured to provide nonessential support services to augment the capabilities of the device. </claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. A system as claimed in claim <highlight><bold>52</bold></highlight> wherein said support server is further configured to provide remote persistent storage services to said plurality of local user units devices for storing customized application preferences. </claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. A system as claimed in claim <highlight><bold>52</bold></highlight> wherein said support server is further configured to provide data carousel services to repeatedly broadcast out carousel data to said plurality of devices simultaneously. </claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. A system as claimed in claim <highlight><bold>54</bold></highlight> wherein said support server stores preferences data for respective users of said plurality of devices, and wherein said carousel data is selected based at least in part on said preferences. </claim-text>
</claim>
<claim id="CLM-00057">
<claim-text><highlight><bold>57</bold></highlight>. A system as claimed in claim <highlight><bold>52</bold></highlight> wherein said device is a CPE device. </claim-text>
</claim>
<claim id="CLM-00058">
<claim-text><highlight><bold>58</bold></highlight>. A system as claimed in claim <highlight><bold>57</bold></highlight> wherein said CPE device is configured to use an IP protocol to upload customized preferences data to said support server after a user makes changes to said customized preferences data, and to download said customized preferences data from said support server. </claim-text>
</claim>
<claim id="CLM-00059">
<claim-text><highlight><bold>59</bold></highlight>. A system as claimed in claim <highlight><bold>57</bold></highlight> wherein said CPE device is additionally connected to an external IP-based network through said broadband network. </claim-text>
</claim>
<claim id="CLM-00060">
<claim-text><highlight><bold>60</bold></highlight>. A system as claimed in claim <highlight><bold>59</bold></highlight> wherein said external IP-based network is additionally connected to a plurality of network data sources. </claim-text>
</claim>
<claim id="CLM-00061">
<claim-text><highlight><bold>61</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference> wherein said broadband network is a wired network. </claim-text>
</claim>
<claim id="CLM-00062">
<claim-text><highlight><bold>62</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference> wherein said broadband network is a wireless network. </claim-text>
</claim>
<claim id="CLM-00063">
<claim-text><highlight><bold>63</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference> wherein said broadband network comprises a cable television network. </claim-text>
</claim>
<claim id="CLM-00064">
<claim-text><highlight><bold>64</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference> wherein said broadband network comprises a satellite television network. </claim-text>
</claim>
<claim id="CLM-00065">
<claim-text><highlight><bold>65</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference> wherein said broadband network comprises a local area network (LAN). </claim-text>
</claim>
<claim id="CLM-00066">
<claim-text><highlight><bold>66</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference> wherein said broadband network comprises a wide area network (WAN). </claim-text>
</claim>
<claim id="CLM-00067">
<claim-text><highlight><bold>67</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference> wherein said broadband network comprises an analog telephone network. </claim-text>
</claim>
<claim id="CLM-00068">
<claim-text><highlight><bold>68</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference> wherein said broadband network comprises a digital telephone network. </claim-text>
</claim>
<claim id="CLM-00069">
<claim-text><highlight><bold>69</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference> wherein said broadband network comprises the Internet. </claim-text>
</claim>
<claim id="CLM-00070">
<claim-text><highlight><bold>70</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference> wherein said broadband network is capable of carrying TCP/IP network traffic. </claim-text>
</claim>
<claim id="CLM-00071">
<claim-text><highlight><bold>71</bold></highlight>. A system for providing customizable interactive computer service in a broadband network environment, said system comprising: 
<claim-text>a plurality of CPE devices, said CPE devices being configured to communicate using an IP protocol over a broadband network to retrieve information from data sources connected to external computer networks, process the retrieved information, and selectively display the results locally on a display device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00072">
<claim-text><highlight><bold>72</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference> wherein said broadband network environment is a digital cable television environment. </claim-text>
</claim>
<claim id="CLM-00073">
<claim-text><highlight><bold>73</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference> wherein said broadband network environment is a digital satellite television environment. </claim-text>
</claim>
<claim id="CLM-00074">
<claim-text><highlight><bold>74</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference> wherein said CPE has no persistent storage, and further comprising a server computer to provide persistent storage services to said CPE. </claim-text>
</claim>
<claim id="CLM-00075">
<claim-text><highlight><bold>75</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference> further comprising a server computer to optimize network bandwidth utilization. </claim-text>
</claim>
<claim id="CLM-00076">
<claim-text><highlight><bold>76</bold></highlight>. A system as claimed in <highlight><bold>75</bold></highlight> wherein said stored customized application preferences are used to provide statistical data that is used to configure said bandwidth optimization service </claim-text>
</claim>
<claim id="CLM-00077">
<claim-text><highlight><bold>77</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference> wherein said broadband network environment is a game console network environment. </claim-text>
</claim>
<claim id="CLM-00078">
<claim-text><highlight><bold>78</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 71</dependent-claim-reference> wherein said broadband network environment is a home gateway environment. </claim-text>
</claim>
<claim id="CLM-00079">
<claim-text><highlight><bold>79</bold></highlight>. A system for providing customizable interactive computer service in a broadband network environment, said system comprising: 
<claim-text>a plurality of set-top boxes, each of said set-top boxes including 
<claim-text>a data structure stored in memory, said data structure representing an application which, when executed, enables said set-top box to interface with a broadband network to provide at least one customizable interactive computer service, and </claim-text>
<claim-text>a local execution unit for executing said application; and </claim-text>
</claim-text>
<claim-text>a remote execution unit connected to said plurality of set-top boxes through said broadband network for supporting said plurality of set-top boxes. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00080">
<claim-text><highlight><bold>80</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein said set-top-box is a digital cable television set-top-box </claim-text>
</claim>
<claim id="CLM-00081">
<claim-text><highlight><bold>81</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein said set-top-box is a digital satellite television set-top-box </claim-text>
</claim>
<claim id="CLM-00082">
<claim-text><highlight><bold>82</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein said application can retrieve and display external network content. </claim-text>
</claim>
<claim id="CLM-00083">
<claim-text><highlight><bold>83</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> further comprising a personal computer connected to the internet, and wherein data can be transferred between a user&apos;s personal computer and said set-top-box via said broadband network. </claim-text>
</claim>
<claim id="CLM-00084">
<claim-text><highlight><bold>84</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00088">claim 83</dependent-claim-reference> wherein said data comprises personalized application settings. </claim-text>
</claim>
<claim id="CLM-00085">
<claim-text><highlight><bold>85</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00088">claim 83</dependent-claim-reference> wherein said data comprises set-top-box application modifications. </claim-text>
</claim>
<claim id="CLM-00086">
<claim-text><highlight><bold>86</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00088">claim 85</dependent-claim-reference> wherein said application modifications comprise a new script adding new functionality to the application. </claim-text>
</claim>
<claim id="CLM-00087">
<claim-text><highlight><bold>87</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00088">claim 85</dependent-claim-reference> wherein said application modifications comprise a replacement script that modifies previously existing functionality of the application. </claim-text>
</claim>
<claim id="CLM-00088">
<claim-text><highlight><bold>88</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00088">claim 85</dependent-claim-reference> wherein said application modifications comprise a new agent that retrieves new information from an external source. </claim-text>
</claim>
<claim id="CLM-00089">
<claim-text><highlight><bold>89</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00088">claim 88</dependent-claim-reference> wherein said external source is the internet </claim-text>
</claim>
<claim id="CLM-00090">
<claim-text><highlight><bold>90</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00088">claim 88</dependent-claim-reference> wherein said external source is an intranet. </claim-text>
</claim>
<claim id="CLM-00091">
<claim-text><highlight><bold>91</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00088">claim 85</dependent-claim-reference> wherein said application modifications comprise a new agent that displays new information on a local display device. </claim-text>
</claim>
<claim id="CLM-00092">
<claim-text><highlight><bold>92</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein said remote execution unit dynamically optimizes bandwidth utilization of said broadband network for interactive data services by examining user preference data. </claim-text>
</claim>
<claim id="CLM-00093">
<claim-text><highlight><bold>93</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein said set-top-box is adapted to generate horizontally scrolling text and graphics displays. </claim-text>
</claim>
<claim id="CLM-00094">
<claim-text><highlight><bold>94</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein said set-top-box is adapted to generate vertically scrolling text and graphics displays. </claim-text>
</claim>
<claim id="CLM-00095">
<claim-text><highlight><bold>95</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein said set-top-box is adapted to display, in conjunction with a television display, a personalized selection of information retrieved from external networks. </claim-text>
</claim>
<claim id="CLM-00096">
<claim-text><highlight><bold>96</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00099">claim 95</dependent-claim-reference> wherein said information comprises news headlines for one or more user-customizable localities. </claim-text>
</claim>
<claim id="CLM-00097">
<claim-text><highlight><bold>97</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00099">claim 95</dependent-claim-reference> wherein said information comprises weather reports and forecasts for one or more user-customizable localities. </claim-text>
</claim>
<claim id="CLM-00098">
<claim-text><highlight><bold>98</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00099">claim 95</dependent-claim-reference> wherein said information comprises sports news and scores for selected sports, leagues and teams. </claim-text>
</claim>
<claim id="CLM-00099">
<claim-text><highlight><bold>99</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00099">claim 95</dependent-claim-reference> wherein said information comprises user selected stock quotes. </claim-text>
</claim>
<claim id="CLM-00100">
<claim-text><highlight><bold>100</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00099">claim 95</dependent-claim-reference> wherein said information comprises e-mail messages. </claim-text>
</claim>
<claim id="CLM-00101">
<claim-text><highlight><bold>101</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein application specific components of said application are defined in the remotely modifiable data, facilitating modification and extension. </claim-text>
</claim>
<claim id="CLM-00102">
<claim-text><highlight><bold>102</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein said set-top-box is adapted to recognize an occurrence of a pre-defined event and to alert a user to said occurrence of a pre-defined event. </claim-text>
</claim>
<claim id="CLM-00103">
<claim-text><highlight><bold>103</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00111">claim 102</dependent-claim-reference> wherein said alert comprises of a graphic display. </claim-text>
</claim>
<claim id="CLM-00104">
<claim-text><highlight><bold>104</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00111">claim 102</dependent-claim-reference> wherein said alert comprises a text message. </claim-text>
</claim>
<claim id="CLM-00105">
<claim-text><highlight><bold>105</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00111">claim 102</dependent-claim-reference> wherein said alert comprises an auditory signal. </claim-text>
</claim>
<claim id="CLM-00106">
<claim-text><highlight><bold>106</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00111">claim 102</dependent-claim-reference> wherein said pre-defined event comprises the existence of at least one unread e-mail message in the remote e-mail account of a system user. </claim-text>
</claim>
<claim id="CLM-00107">
<claim-text><highlight><bold>107</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00111">claim 102</dependent-claim-reference> wherein said pre-defined event comprises the existence of at least one unread e-mail message in the remote e-mail account of a system user from one of a pre-defined list of senders. </claim-text>
</claim>
<claim id="CLM-00108">
<claim-text><highlight><bold>108</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00111">claim 102</dependent-claim-reference> wherein said pre-defined event comprises the existence of at least one unread e-mail message in the remote e-mail account of a system user containing one of a pre-defined list of keywords. </claim-text>
</claim>
<claim id="CLM-00109">
<claim-text><highlight><bold>109</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00111">claim 102</dependent-claim-reference> wherein said pre-defined event comprises a severe weather warning or advisory. </claim-text>
</claim>
<claim id="CLM-00110">
<claim-text><highlight><bold>110</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00111">claim 102</dependent-claim-reference> wherein said pre-defined event comprises appearance of one of a pre-defined list of items on a shopping channel. </claim-text>
</claim>
<claim id="CLM-00111">
<claim-text><highlight><bold>111</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00111">claim 102</dependent-claim-reference> wherein said pre-defined event comprises appearance of one of a pre-defined list of performers in the program guide description of a currently airing television program. </claim-text>
</claim>
<claim id="CLM-00112">
<claim-text><highlight><bold>112</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein said set-top-box is adapted to locally execute a retrieval agent to retrieve selected content from an external data source. </claim-text>
</claim>
<claim id="CLM-00113">
<claim-text><highlight><bold>113</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00111">claim 112</dependent-claim-reference> wherein said set-top-box is further adapted to display, in conjunction with a television receiver, said selected content retrieved from said external data source. </claim-text>
</claim>
<claim id="CLM-00114">
<claim-text><highlight><bold>114</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein said set-top-box is adapted to locally execute operations for displaying video, textual, and graphic information simultaneously. </claim-text>
</claim>
<claim id="CLM-00115">
<claim-text><highlight><bold>115</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00111">claim 114</dependent-claim-reference> wherein said textual and graphic information is displayed in a horizontally scrolling region. </claim-text>
</claim>
<claim id="CLM-00116">
<claim-text><highlight><bold>116</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00111">claim 115</dependent-claim-reference> wherein the horizontally scrolling region does not obscure resized video information. </claim-text>
</claim>
<claim id="CLM-00117">
<claim-text><highlight><bold>117</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00111">claim 115</dependent-claim-reference> wherein the horizontally scrolling region overlays full screen video. </claim-text>
</claim>
<claim id="CLM-00118">
<claim-text><highlight><bold>118</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00111">claim 114</dependent-claim-reference> wherein said textual and graphic information is displayed in a vertically scrolling region. </claim-text>
</claim>
<claim id="CLM-00119">
<claim-text><highlight><bold>119</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00111">claim 114</dependent-claim-reference> wherein said textual and graphic information is displayed in a periodically updated region. </claim-text>
</claim>
<claim id="CLM-00120">
<claim-text><highlight><bold>120</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein said set-top-box is adapted to locally execute a user interface for gathering application settings information from a user. </claim-text>
</claim>
<claim id="CLM-00121">
<claim-text><highlight><bold>121</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein said set-top-box is adapted to display, in conjunction with a television receiver, selectable regions which display indicia for defining and selecting pre-defined settings. </claim-text>
</claim>
<claim id="CLM-00122">
<claim-text><highlight><bold>122</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein said set-top-box is adapted to display, in conjunction with a television receiver, selectable regions for navigating through a multi-page user interface. </claim-text>
</claim>
<claim id="CLM-00123">
<claim-text><highlight><bold>123</bold></highlight>. A system as claimed in <dependent-claim-reference depends_on="CLM-00077">claim 79</dependent-claim-reference> wherein said set-top-box is adapted to display, in conjunction with a television receiver, a locally executing virtual keyboard for entering alpha-numeric information into locally executing applications. </claim-text>
</claim>
<claim id="CLM-00124">
<claim-text><highlight><bold>124</bold></highlight>. A method of displaying data from a plurality of data sources retrieved through a broadband network, at least one of said data sources comprising a data source which broadcasts data over said broadband network, and the other of said data sources being locally selectable by a user, said method comprising the steps of: 
<claim-text>receiving over said broadband network a data structure representing an application which, when executed, enables retrieval of data from said other of said data sources; </claim-text>
<claim-text>storing said data structure; </claim-text>
<claim-text>executing said application thereby to retrieve said data from said other of said data sources; </claim-text>
<claim-text>formatting said data for display; and </claim-text>
<claim-text>displaying said data along with the data broadcast over the broadband network.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>6</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004961A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004961A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004961A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004961A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004961A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004961A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004961A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004961A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004961A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004961A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004961A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030004961A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030004961A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030004961A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030004961A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030004961A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030004961A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030004961A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030004961A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
