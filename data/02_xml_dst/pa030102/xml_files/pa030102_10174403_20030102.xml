<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005067A1-20030102-D00000.TIF SYSTEM "US20030005067A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005067A1-20030102-D00001.TIF SYSTEM "US20030005067A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005067A1-20030102-D00002.TIF SYSTEM "US20030005067A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005067A1-20030102-D00003.TIF SYSTEM "US20030005067A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005067A1-20030102-D00004.TIF SYSTEM "US20030005067A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005067A1-20030102-D00005.TIF SYSTEM "US20030005067A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005067A1-20030102-D00006.TIF SYSTEM "US20030005067A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005067A1-20030102-D00007.TIF SYSTEM "US20030005067A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030005067A1-20030102-D00008.TIF SYSTEM "US20030005067A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030005067A1-20030102-D00009.TIF SYSTEM "US20030005067A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030005067A1-20030102-D00010.TIF SYSTEM "US20030005067A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030005067A1-20030102-D00011.TIF SYSTEM "US20030005067A1-20030102-D00011.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005067</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10174403</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020617</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/16</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>709</class>
<subclass>207000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>System and method for using continuous messaging units in a network architecture</title-of-invention>
</technical-information>
<continuity-data>
<non-provisional-of-provisional>
<document-id>
<doc-number>60301888</doc-number>
<document-date>20010629</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Anthony</given-name>
<middle-name>G.</middle-name>
<family-name>Martin</family-name>
</name>
<residence>
<residence-us>
<city>Los Altos</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Eugene</given-name>
<family-name>Veteska</family-name>
</name>
<residence>
<residence-us>
<city>San Jose</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>SQUIRE, SANDERS &amp; DEMPSEY L.L.P</name-1>
<name-2></name-2>
<address>
<address-1>600 HANSEN WAY</address-1>
<city>PALO ALTO</city>
<state>CA</state>
<postalcode>94304-1043</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The present invention provides techniques for selectively distributing messages to viewers. Specific embodiments provide systems, methods, apparatus and computer program products for distributing messages to viewers based upon information about potential viewers. In specific embodiments, targeted messages are made available to the client machines in response to client message requests by a server that takes the machine and/or user ID provided as part of the client request and queries the database to see if there are any messages pending for that user or that match that user&apos;s profile. Specific embodiments can provide a plurality of messages coupled together to form a campaign. The client can receive the campaign using available bandwidth unused by foreground applications, such as web browsers and the like. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS REFERENCE TO RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application claims benefit of U.S. Provisional Application No. 60/301,888, entitled &ldquo;SYSTEM AND METHOD FOR USING CONTINUOUS MESSAGING UNITS IN A NETWORK ARCHITECTURE,&rdquo; filed on Jun. 29, 2001 and which is incorporated herein by reference in its entirety.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This invention relates to computer technology, and more particularly but not exclusively, relates to presenting information in a computer network environment. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The Internet is a wide area network of interconnected computers which employs a client-server model. The Internet includes server computers which may be accessed by client computers. Typically, a server hosts a site on the Internet which includes a collection of files or pages. The network address of a server is typically specified by a Uniform Resource Locator (URL). A user may access the servers from a client via the Internet through an Internet service provider (ISP). By utilizing a browser application on the client, the user can connect to or &ldquo;link&rdquo; to a particular server based upon the URL address of that server. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The Internet computer network was originally designed as a communications link to facilitate the exchange of scientific information between governmental laboratories and educational institutions. However, in recent years, the increased use of the World Wide Web (WWW) has fueled explosive growth of the Internet that has extended beyond the scientific community and, indeed, into homes, businesses and classrooms. The WWW refers to a collection of Internet servers that typically utilize Hypertext Transfer Protocol (HTTP) as an applications protocol to provide users with access to files for communicating text, graphics, sound, video, etc. HTTP, in turn, may use a page description language called Hypertext Markup Language (HTML) to specify the format of web pages that are displayed to the users. HTML pages can include hypertext links to other servers and files, with the URL&apos;s of the target servers stored or embedded within the links. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Links present in a web page may appear to a user in a variety of forms. For example, a link may appear as underlined text, as bolded text, as text having a different color as surrounding text, or as text having some other form designed to draw the attention of the user such that the link is easily identified as such. When a user selects a link (e.g., by &ldquo;clicking&rdquo; on the link with an input device such as a computer mouse), the browser makes a Transmission Control Protocol/Internet Protocol (TCP/IP) request to the server identified by the URL specified in the link, and receives a web page from the identified server. A link may also be embedded within a graphical image displayed on the user&apos;s computer monitor or display. When the geographical area of the image is selected by the user, the browser again makes an TCP/IP request to the server identified by the specified URL. Thus, a user may navigate (i.e., &ldquo;surf&rdquo;) between various servers to find and retrieve HTML pages or documents of interest. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> As use of the Internet has become more pervasive, merchants have looked to the Internet as providing a new advertising medium for their products and services. Merchants who sponsor their own web sites typically include advertising material within their site&apos;s pages. However, creating and maintaining a stand-alone web site can require a substantial amount of resources and may be beyond the means of many merchants. Also, the time and expense required to set up such a stand-alone site makes this technique unsuitable for certain seasonal, limited time, or one-shot usage. Further, the audience for this advertising material may be limited by the extent to which the merchant can attract users to visit its own site. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> A technique that has been used to address these problems is the deployment of advertisements on the web sites of other sponsors or content providers who agree to sponsor the advertisements. A simple advertisement suitable for such deployment takes the form of a graphical banner. Such a banner includes an image related to the product or service being advertised, typically stored as a graphics file (e.g., a &ldquo;.gif&rdquo; file), and displayed according to the HTML description of the sponsoring page. A merchant is often required to pay a sponsor of the particular web site an advertising fee for the privilege of deploying its banner on the sponsor&apos;s site. The banner may also be widely distributed or deployed on many sites. However, typical advertising banners involve only one-way communication, and do not take advantage of the Internet&apos;s interactive capabilities which could otherwise be used to solicit data from prospective customers or users for generating purchase orders or leads. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> To provide demographically-targeted advertising, the advertiser or distributor of the advertising may seek to obtain demographic data on its end users. A common way to acquire demographic data regarding users via the Internet is to request the information using a form written in HTML provided to the user utilizing the Internet. Demographic information obtained this way is often difficult to obtain because users are often unmotivated to fill in forms with information when they do not know who will view the information or for what purpose the information will be used. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> What is needed are improved techniques for selectively distributing messages to viewers. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The present invention provides techniques for selectively distributing messages to viewers. Specific embodiments provide systems, methods, apparatus and computer program products for distributing messages to viewers based upon information about potential viewers. In specific embodiments, targeted messages are made available to the client machines in response to client message requests by a server that takes the machine and/or user ID provided as part of the client request and queries the database to see if there are any messages pending for that user or that match that user&apos;s profile. Specific embodiments can provide a plurality of messages coupled together to form a campaign. The client can receive the campaign using available bandwidth unused by foreground applications, such as web browsers and the like. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> In a representative embodiment, the present invention provides a method for displaying information to a user. The method can comprise a variety of steps. For example, a step of detecting occurrence of an event indicating a message is to be displayed by a first application on a client can be part of the method. Further, a step of retrieving content for a first message from a repository at a content server is included in the method. Further, a step of initiating selection of one or more messages to be displayed based upon behavioral information collected and analyzed at the client is also included. Finally, a step of monitoring activity at the client for an opportunity to display a selected message can be performed in accordance with the method. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Numerous benefits are achieved by way of the present invention over conventional techniques. Specific embodiments according to the present invention provide capability to identify an audience as narrow or as broad as needed by particular applications. The benefit is that the cost of serving ads (especially larger rich media ads) is dramatically lower than first generation ad networks with their centralized architecture These and other benefits are described throughout the present specification. A further understanding of the nature and advantages of the invention herein may be realized by reference to the remaining portions of the specification and the attached drawings. </paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1A</cross-reference> is a schematic diagram of a computer network framework for a network messaging system in accordance with an embodiment of the present invention. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1B</cross-reference> is a schematic diagram of an illustrative network message system in accordance with an embodiment of the present invention. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a schematic diagram of a representative hardware environment in accordance with an embodiment of the present invention. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a schematic diagram of an illustrative Continuous Messaging Unit (CMU) server system in accordance with an embodiment of the present invention. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a schematic diagram of representative display rules in accordance with an embodiment of the present invention. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a schematic diagram of an illustrative hash table in accordance with an embodiment of the present invention. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a schematic diagram of an illustrative campaign list in accordance with an embodiment of the present invention. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a schematic diagram of representative CMU message in accordance with an embodiment of the present invention. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a schematic diagram of representative CMU client system in accordance with an embodiment of the present invention. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a schematic representation of an illustrative display presented on a visual display in accordance with an embodiment of the present invention. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a flowchart of a process for presenting information to a user in accordance with an embodiment of the present invention. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The present invention provides techniques for selectively distributing messages to viewers. Specific embodiments provide systems, methods, apparatus and computer program products for distributing messages to viewers based upon information about potential viewers. In specific embodiments, targeted messages are made available to the client machines in response to client message requests by a server that takes the machine and/or user ID provided as part of the client request and queries the database to see if there are any messages pending for that user or that match that user&apos;s profile. Specific embodiments can provide a plurality of messages coupled together to form a campaign. The client can receive the campaign using available bandwidth unused by foreground applications, such as web browsers and the like. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Because first generation ad networks have a centralized architecture, content (e.g., advertisements) is typically distributed from central servers to a user&apos;s browser every time an ad is displayed. Thus, the same ad is distributed from the server several (even millions or billions) of times. The network message system of the present invention allows for more efficiency than such prior art systems. The architecture of the network message system of the present invention may also allow for more flexibility than is possible with server-only ad servers including: </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1A</cross-reference> is a schematic diagram of a computer network framework <highlight><bold>100</bold></highlight> for a CMU network system in accordance with an embodiment of the present invention. A network <highlight><bold>102</bold></highlight>, such as for example, a client-server network, a wide area network (e.g., the Internet), or the like, couples together one or more CMU client computers <highlight><bold>104</bold></highlight>, one or more content server computers <highlight><bold>106</bold></highlight>, and one or more CMU server computers <highlight><bold>108</bold></highlight>. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> CMU client computer <highlight><bold>104</bold></highlight> may be any type of computer that provides an end-user access to a network. In one embodiment, CMU client computer <highlight><bold>104</bold></highlight> may be a personal computer running on operating system such as for example, the Microsoft Windows&trade;, Apple Macintosh&trade;, Linux, or UNIX operating systems. CMU client computer <highlight><bold>104</bold></highlight> may also include a web engine <highlight><bold>110</bold></highlight>, which can comprise a web browser such as the Microsoft Internet Explorer&trade; or Netscape Navigator&trade; in specific embodiments. An end-user utilizing CMU client computer <highlight><bold>104</bold></highlight> employs web engine <highlight><bold>110</bold></highlight> for accessing information and web pages stored on various web sites (e.g., content server computers <highlight><bold>106</bold></highlight>) coupled to the network <highlight><bold>102</bold></highlight>. CMU client computer <highlight><bold>104</bold></highlight> may also include a CMU client system <highlight><bold>112</bold></highlight> for receiving, processing, and displaying various CMUs received via the network. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Content server computer <highlight><bold>106</bold></highlight> may include web content <highlight><bold>114</bold></highlight> and a web server <highlight><bold>116</bold></highlight>. As can be appreciated by those skilled in the art, such a content server computer <highlight><bold>106</bold></highlight> and other server computers in the specific embodiments of the present invention, may be implemented using any appropriately configured computer including, for example server computers available from Sun Microsystems&trade;, the Hewlett-Packard Company&trade;, or International Business Machines&trade;. Web content <highlight><bold>114</bold></highlight> may include any information accessible via the network, including web pages and the like. In one embodiment, web content <highlight><bold>114</bold></highlight> may be of the type generally available over the Internet for browsing. For example, a web page of the present invention may include an HTML (HyperText Markup Language) file containing news, maps, coupons, offer for services, directories, for sale merchandize, and other types of information that will attract end-users to the content server computer <highlight><bold>106</bold></highlight>. The web server <highlight><bold>116</bold></highlight> may include program code that allows the content server computer <highlight><bold>106</bold></highlight> to be in communication with the network <highlight><bold>102</bold></highlight>. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The CMU server computer <highlight><bold>108</bold></highlight> may be any type of computer comprising a web server <highlight><bold>120</bold></highlight> that is capable of serving information for presentation/display by the CMU client computer <highlight><bold>104</bold></highlight>. The information may include information of any type, such as, for example, advertising information. CMU server computer <highlight><bold>108</bold></highlight> may also include a CMU server system <highlight><bold>118</bold></highlight>, which is in communication with the network <highlight><bold>102</bold></highlight>. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1B</cross-reference> is a schematic diagram of an illustrative network message system in accordance with an embodiment of the present invention. The network message system may be utilized for retrieving and displaying messages to users based on a user&apos;s current context and past behavior. It should be understood that in the present description, the various sub-components of each of the components may also be considered components of the framework. For example, particular software modules executed on any component of the system may also be considered components of the system. Installed and running on a CMU client computer <highlight><bold>104</bold></highlight> coupled to a network <highlight><bold>102</bold></highlight> (e.g., the Internet) is a CMU client system <highlight><bold>112</bold></highlight>. The CMU client system <highlight><bold>112</bold></highlight> may comprise a plurality of components including a retriever <highlight><bold>208</bold></highlight>, a displayer <highlight><bold>210</bold></highlight>, a form and login helper <highlight><bold>212</bold></highlight>. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> As the user accesses sites coupled to the network <highlight><bold>102</bold></highlight> (commonly known as &ldquo;surfing the Internet&rdquo;) utilizing a web engine <highlight><bold>110</bold></highlight> (e.g., an Internet browser such as Microsoft Internet Explorer) installed and running on the CMU client computer <highlight><bold>104</bold></highlight>, from one site or domain (e.g., www.yahoo.com) to another (e.g., www.amazon.com), the retriever <highlight><bold>208</bold></highlight> sends a request <highlight><bold>216</bold></highlight> to a CMU server computer <highlight><bold>108</bold></highlight> via the network <highlight><bold>102</bold></highlight>. The request <highlight><bold>216</bold></highlight> may contain at least two pieces of information: a unique customer ID of the user (i.e., a user ID) <highlight><bold>220</bold></highlight> and a current domain being entered by the user (i.e., a machine ID) <highlight><bold>222</bold></highlight>. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The CMU server computer <highlight><bold>108</bold></highlight> receives the request <highlight><bold>216</bold></highlight> from the retriever <highlight><bold>208</bold></highlight> and performs a check to determine if there are any messages pending for the specified domain <highlight><bold>222</bold></highlight>. If it is determined that there are messages associated with the specified domain, then the CMU server computer <highlight><bold>108</bold></highlight> queries an historical-based targeting database <highlight><bold>224</bold></highlight> to determine if there are any specific messages pending for this domain <highlight><bold>222</bold></highlight> for this specific user <highlight><bold>220</bold></highlight>. If there are, then the specific message(s) <highlight><bold>226</bold></highlight> is returned to the retriever <highlight><bold>208</bold></highlight> on the user&apos;s CMU client computer <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> It should be noted that in one embodiment, that the message(s) <highlight><bold>226</bold></highlight> may include two components: a block of in-context rules <highlight><bold>228</bold></highlight> and the content <highlight><bold>230</bold></highlight> that makes up the portion of the message presented to the user. The in-context rules <highlight><bold>228</bold></highlight> may dictate the circumstances in which the message content <highlight><bold>230</bold></highlight> is displayed to the user. Some illustrative examples of some in-context rules include: (1) domains at which the retrieved messages should be presented to the user; (2) specific web pages at which the retrieved messages should be presented to the user; (3) URL substrings that, should they be found in the current URL, will cause the message to be presented; and (4) time and date information. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> Also, the rules <highlight><bold>228</bold></highlight> may include/reference almost any kind of relevant information, such as, for example, specific known attributes about the user like frequent flyer affiliation, club memberships, type of credit card used, hobbies and interests, basic demographic information (gender, age, income, etc.). The content <highlight><bold>230</bold></highlight> may also include standard HTML, including text, images, figures, colors, etc., sound files that will automatically play upon display of the message, and other types of multi-media files/content. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Upon receiving the message <highlight><bold>226</bold></highlight> from the CMU server computer <highlight><bold>108</bold></highlight>, the retriever <highlight><bold>208</bold></highlight> may store the message in a local cache <highlight><bold>232</bold></highlight> for subsequent presentation. As the user continues to surf from page to page, a context watcher <highlight><bold>234</bold></highlight> may examine the user&apos;s context (e.g., URL, date/time, etc.) and look for messages stored in the local cache <highlight><bold>232</bold></highlight> with in-context rules that match. Upon a match being found, the displayer <highlight><bold>210</bold></highlight> or the form and login helper <highlight><bold>212</bold></highlight> present for display the matching message. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> In one embodiment, the message cache <highlight><bold>232</bold></highlight> may buffer messages received from message system server <highlight><bold>108</bold></highlight>. This enables the client computer <highlight><bold>104</bold></highlight> to have several messages at any given time. For example, the message cache <highlight><bold>232</bold></highlight> may contain a message relating to a current web site or web page the user is visiting and additional messages relating to similar web sites or web pages. As an illustration, the message cache <highlight><bold>232</bold></highlight> may contain a message relating to books when the end-user is browsing the catalog of an on-line bookstore, and additional messages relating to movies that may also be available from that on-line bookstore. This way, a message relating to movies can be routed to the appropriate presentation format module as soon as the user navigates to a movies-related web page. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> In one embodiment, the displayer <highlight><bold>210</bold></highlight> may open an independent window on a visual display coupled to the user (i.e., the user&apos;s screen) that presents/displays the message content <highlight><bold>230</bold></highlight>. As another option, the message content <highlight><bold>230</bold></highlight> may be presented in a small window that is appended to the form and login helper <highlight><bold>212</bold></highlight>. The specific vehicle to use may be identified as an attribute <highlight><bold>236</bold></highlight> embedded in the message <highlight><bold>226</bold></highlight> and selected during creation of the message. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> As an option, the message <highlight><bold>226</bold></highlight> may include one or more expiration dates <highlight><bold>238</bold></highlight> that may be used to ensure that a message is not presented after the appropriate time/date. This date <highlight><bold>238</bold></highlight> may also be monitored by the cache <highlight><bold>232</bold></highlight> and used to remove expired messages from the client machine. As a further option, the message may also include priority information <highlight><bold>240</bold></highlight> that may be used when to determine the priority of the message over other messages that are to be presented to the user. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> In another embodiment, messages <highlight><bold>226</bold></highlight> may be available on the CMU server computer <highlight><bold>108</bold></highlight> that are to be presented to any user that satisfies the appropriate context rule <highlight><bold>228</bold></highlight>. Such messages may then be delivered to the CMU client computer <highlight><bold>104</bold></highlight> by the retriever <highlight><bold>208</bold></highlight> without requiring matching historical-based profile in the targeting database <highlight><bold>224</bold></highlight>. In one embodiment, the client computer <highlight><bold>104</bold></highlight> and/or the server <highlight><bold>108</bold></highlight> may include a data store <highlight><bold>242</bold></highlight> of user preferences, profile and historical information about the user for use in determining whether a rule has been satisfied. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> In an embodiment of the present invention, the network message system may be utilized to deliver various messages/content such as, for example, Internet banner advertising technology. The following portions of the specification discuss various components that may be utilized in the network message system in accordance with embodiments of the present invention. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> As previously mentioned, a message for the network message system may include two parts or portions: (1) a rules file <highlight><bold>228</bold></highlight> and (2) content/media <highlight><bold>230</bold></highlight> for presentation. The rules file <highlight><bold>228</bold></highlight> may contain the information utilized by the client to determine when and where to display the associated content/media. Some illustrative rule file attributes may include: the type of message; a list of the media and sizes for the particular message; timing information (beginning and ending dates, frequency information, etc.); triggers that indicate where the campaign should be started; and triggers that indicate where the content should be displayed. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The content/media <highlight><bold>230</bold></highlight> for presentation may comprise Hypertext Markup Language (HTML), image, and/or other types of multi-media files. In one embodiment, the content may also include one or more industry-standard image files representing a display size currently used for banners. However, it should be understood that the content need not be limited to standard image files and may include various types of rich media (Flash, video, audio, etc.). </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> A message campaign, or flight of messages, may be activated on a client based on the tripping of one of the specified triggers. In other words, the messages may not be presented until one of the specified triggers is hit (unless modeling and/or with historical targeting is utilized). In one embodiment, a set of triggers may be defined as a set of Uniform Resource Locators (URL&apos;s). The set of URL&apos;s may also be combined with search strings. In particular, URL masks may be used for working with search engine queries. For example, there is a standard search LRL template for use with the Yahoo search engine. A user may insert a key word of interest (like &ldquo;Laser&rdquo; or &ldquo;Sony&rdquo; or &ldquo;DVD&rdquo;) into this template to define a trigger. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> A trigger is tripped when the user navigates to a page that maps to one of the trigger rules. As an option, no trigger may need to be tripped in an embodiment of the present invention where historical targeting and/or modeling is utilized to present messages and content to a user. In general, a trigger is a condition that, when satisfied, instructs client system <highlight><bold>112</bold></highlight> to take an action (such as, for example, show a message to the user). One type of trigger may be a URL. When the URL of interest is observed, the specified action is taken. When a trigger is tripped, the content for a first message specified in the rule file is retrieved from a message server and the message campaign is activated. One way to look at this activation trigger list is to view it as a mechanism for doing &ldquo;real time targeting.&rdquo; In other words, users may be selected and targeted for message campaigns based on specific behaviors, without necessarily having had the corresponding behavioral information sent to the message server for processing. This allows fast response to observed behaviors of the user. This approach also may be useful for tightening privacy policy so that detailed behavioral information (including navigation information) does not have to be transmitted via a network to the message server. Once the media to be presented has been retrieved, the client may begin to determine when to present the message. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> In one embodiment, a client may present a message when all of following criteria have been met: (1) when the message campaign has been activated (as described above); (2) when the client detects an HTML image (which may also be referred to as the original image) request for an image with a size matching that of the message client system; (3) the server&apos;s domain name from which the original image is being requested is not included in an exclude list of the message server system; (4) the domain of the current web page is included either in a specified global domain inclusion list or on a private domain inclusion list of the message; and/or (5) the domain of the current web page is not on a private domain exclusion list of the message. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates a block diagram of a representative computer system in a specific embodiment of the present invention. As illustrated by <cross-reference target="DRAWINGS">FIG. 2, a</cross-reference> computing system <highlight><bold>200</bold></highlight> can embody one or more of the elements illustrated by <cross-reference target="DRAWINGS">FIG. 2</cross-reference> in various specific embodiments of the present invention. While other application-specific alternatives might be utilized, it will be presumed for clarity sake that the elements comprising the computer system <highlight><bold>200</bold></highlight> are implemented in hardware, software or some combination thereof by one or more processing systems consistent therewith, unless otherwise indicated. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Computer system <highlight><bold>200</bold></highlight> comprises elements coupled via communication channels (e.g. bus <highlight><bold>290</bold></highlight>) including one or more general or special purpose processors <highlight><bold>270</bold></highlight>, such as a Pentium&reg; or Power PC&reg;, digital signal processor (&ldquo;DSP&rdquo;), and the like. System <highlight><bold>200</bold></highlight> elements also include one or more input devices <highlight><bold>272</bold></highlight> (such as a mouse, keyboard, microphone, pen, and the like), and one or more output devices <highlight><bold>274</bold></highlight>, such as a suitable display, speakers, actuators, and the like, in accordance with a particular application. System <highlight><bold>200</bold></highlight> also includes a computer readable storage media reader <highlight><bold>276</bold></highlight> coupled to a computer readable storage medium <highlight><bold>278</bold></highlight>, such as a storage/memory device or hard or removable storage/memory media; such devices or media are further indicated separately as storage device <highlight><bold>282</bold></highlight> and memory <highlight><bold>284</bold></highlight>, which can include hard disk variants, floppy/compact disk variants, digital versatile disk (&ldquo;DVD&rdquo;) variants, smart cards, read only memory, random access memory, cache memory, and the like, in accordance with a particular application. One or more suitable communication interfaces <highlight><bold>280</bold></highlight> can also be included, such as a modem, DSL, infrared or other suitable transceiver, and the like for providing inter-device communication directly or via one or more suitable private or public networks that can include but are not limited to those already discussed. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> Working memory <highlight><bold>284</bold></highlight> further includes operating system (&ldquo;OS&rdquo;) elements <highlight><bold>292</bold></highlight> and other programs <highlight><bold>294</bold></highlight>, such as application programs, mobile code, data, and the like for implementing system <highlight><bold>200</bold></highlight> elements that might be stored or loaded therein during use. The particular OS can vary in accordance with a particular device, features or other aspects in accordance with a particular application (e.g. Windows, Mac, Linux, Unix or Palm OS variants, a proprietary OS, and the like). Various programming languages or other tools can also be utilized, such as known by those skilled in the art. As will be discussed, embodiments can also include a network client such as a browser or email client, e.g. as produced by Netscape, Microsoft or others, a mobile code executor such as a Java Virtual Machine (&ldquo;JVM&rdquo;), and an application program interface (&ldquo;API&rdquo;), such as a Microsoft Windows compatible API. (Embodiments might also be implemented in conjunction with a resident application or combination of mobile code and resident application components.) </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> One or more system <highlight><bold>200</bold></highlight> elements can also be implemented in hardware, software or a suitable combination. When implemented in software (e.g. as an application program, object, downloadable servlet, and the like in whole or part), a system <highlight><bold>200</bold></highlight> element can be communicated transitionally or more persistently from local or remote storage to memory (or cache memory, and the like) for execution, or another suitable mechanism can be utilized, and elements can be implemented in compiled or interpretive form. Input, intermediate or resulting data or functional elements can further reside more transitionally or more persistently in a storage media, cache or more persistent volatile or non-volatile memory, (e.g. storage device <highlight><bold>282</bold></highlight> or memory <highlight><bold>284</bold></highlight>) in accordance with a particular application. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a schematic diagram of various functional aspects of an illustrative CMU server system <highlight><bold>118</bold></highlight> in accordance with an embodiment of the present invention. The functional blocks of the CMU server system <highlight><bold>118</bold></highlight> illustrated by <cross-reference target="DRAWINGS">FIG. 3</cross-reference> can be implemented in hardware, software or a suitable combination, thereof. In specific embodiments, the CMU server system <highlight><bold>118</bold></highlight> comprises CMU content <highlight><bold>302</bold></highlight>, CMU initiation triggers <highlight><bold>304</bold></highlight>, CMU display rules <highlight><bold>306</bold></highlight>, a hash table <highlight><bold>308</bold></highlight>, CMU campaign list(s) <highlight><bold>310</bold></highlight>, a CMU controller <highlight><bold>312</bold></highlight>, a shared URL history store <highlight><bold>314</bold></highlight>, and a communication engine <highlight><bold>316</bold></highlight>. Other functional aspects may also be included in the CMU server system <highlight><bold>118</bold></highlight> in some embodiments. Further, not all specific embodiments will include each functional aspect depicted by <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> In specific embodiments, CMU content <highlight><bold>302</bold></highlight> comprises a variety of content that can be used to craft the message(s) <highlight><bold>226</bold></highlight>. Content <highlight><bold>302</bold></highlight> can include advertising information, coupons, calls-to-action, images, multimedia objects, and the like. CMU initiation triggers <highlight><bold>304</bold></highlight> comprise a variety of triggering events that can be detected to initiate detection of a context appropriate for displaying a message <highlight><bold>226</bold></highlight>. In specific embodiments, the triggers can be URLs of web pages, for example. CMU display rules <highlight><bold>306</bold></highlight> provide information on a variety of contexts that can be sensed for and, when detected, initiate the display of a message <highlight><bold>226</bold></highlight>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> As described herein above, message(s) <highlight><bold>226</bold></highlight> include two components: a block of in-context rules <highlight><bold>228</bold></highlight> and the content <highlight><bold>230</bold></highlight> that makes up the portion of the message presented to the user. Accordingly, the message(s) <highlight><bold>226</bold></highlight> may be built by the CMU server system <highlight><bold>118</bold></highlight> using the CMU content <highlight><bold>302</bold></highlight> and the CMU display rules <highlight><bold>306</bold></highlight>. The in-context rules <highlight><bold>228</bold></highlight>, which dictate the circumstances in which the message content <highlight><bold>230</bold></highlight> is displayed to the user, can be drawn from the CMU display rules <highlight><bold>306</bold></highlight>. Some illustrative examples of some rules include: (1) domains at which the retrieved messages should be presented to the user; (2) specific web pages at which the retrieved messages should be presented to the user; (3) URL substrings that, should they be found in the current URL, will cause the message to be presented; and (4) time and date information. Also, the CMU display rules <highlight><bold>306</bold></highlight> may include/reference almost any kind of relevant information, such as, for example, specific known attributes about the user like frequent flyer affiliation, club memberships, type of credit card used, hobbies and interests, basic demographic information (gender, age, income, etc.). The content <highlight><bold>302</bold></highlight> may also include standard HTML, including text, images, figures, colors, etc., sound files that will automatically play upon display of the message, and other types of multi-media files/content. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> The hash table <highlight><bold>308</bold></highlight> enables minimization of unproductive server requests as will be described in further detail with reference to <cross-reference target="DRAWINGS">FIG. 5</cross-reference> below. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> The CMU campaign list(s) <highlight><bold>310</bold></highlight> provides a repository for storing campaigns, or flights of messages. A message campaign may be activated on a client based on the tripping of one of the specified triggers associated with the campaign. A system administrator or other authorized user can define message campaigns to the system for storage in the CMU campaign list <highlight><bold>310</bold></highlight>. The campaigns can be sent to targeted users&apos; client machines in accordance with specific embodiments of the present invention. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> The CMU server <highlight><bold>118</bold></highlight> also includes a shared URL history store <highlight><bold>314</bold></highlight>. In some embodiments, users may be targeted to receive CMUs based on their historical profile. Historical-based targeting can be used to select users based on behaviors and/or attributes. For example, users may be selected based upon navigation behavior, including domains visited, number of pages viewed, time spent at sites, etc. This behavior can also include the viewing of any previously tagged page using a &ldquo;blind trigger.&rdquo; A blind trigger is created by setting triggers for pages to be tracked without the user seeing any activity (hence the word &ldquo;blind&rdquo;). For example, say it is desirable to know how many people bought something at FOO.com. Accordingly, a blind trigger is set to observe navigations to the receipt page. The number of times the user visits can be totaled over the period of time for which the blind trigger is set. In specific embodiments, the user would not see any feedback that this is occurring. Other historical targeting factors include a ZIP code, a click-through frequency on previously viewed coupons/messages, an affiliate ID code or type of a co-brand, a number of weeks for which user has been active, and the like. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> The CMU server <highlight><bold>118</bold></highlight> further includes a communication engine <highlight><bold>316</bold></highlight> that provides communications with one or more CMU client computers <highlight><bold>104</bold></highlight> over the network <highlight><bold>102</bold></highlight>. The CMU controller <highlight><bold>312</bold></highlight> coordinates the activities of each of the component processes within the CMU server system <highlight><bold>118</bold></highlight>. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a schematic diagram of representative display rules in accordance with an embodiment of the present invention. CMU display rules <highlight><bold>306</bold></highlight> can be used to control the presentation, timing and organization of messages, including advertising, at the CMU client computer <highlight><bold>104</bold></highlight>. CMU display rules <highlight><bold>306</bold></highlight> includes a global include list <highlight><bold>402</bold></highlight>. The global include list <highlight><bold>402</bold></highlight> provides sites for which all campaigns may be displayed. A local include list <highlight><bold>404</bold></highlight> provides sites for which specific campaigns may be displayed. A global exclude list <highlight><bold>406</bold></highlight> provides sites for which no campaigns may be displayed. A local exclude list <highlight><bold>408</bold></highlight> provides sites for which specific campaigns may not be displayed. An advertisement exclude list <highlight><bold>410</bold></highlight> identifies advertisers over who&apos;s advertisements CMUs will not display. Finally, priority rules <highlight><bold>412</bold></highlight> may be used in cases where multiple campaigns are triggered to determine the priority of display for the campaigns. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> The client will display a campaign when all of the following criteria have been met: (1) It has been activated as described above; (2) The client observes an HTML image (referred to as the original image) request for an image that is compatible with that of the campaign (i.e., same size, etc.); (3) The server&apos;s domain name from which the original image is being requested is not on the ad server exclude list <highlight><bold>410</bold></highlight>; (4) The domain of the current web page is on either the specified global domain inclusion list <highlight><bold>402</bold></highlight> or on the CMU&apos;s private domain inclusion list <highlight><bold>404</bold></highlight>; (5) The domain of the current web page is not on the CMU&apos;s private domain exclusion list <highlight><bold>408</bold></highlight>. Other aspects controlling display of messages may also be included in the CMU display rules <highlight><bold>306</bold></highlight> in some embodiments. Further, not all specific embodiments will include each functional aspect depicted by <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a schematic diagram of an illustrative hash table <highlight><bold>308</bold></highlight> in accordance with an embodiment of the present invention. A client initiates requests for messages as the user enters Internet domains utilizing an Internet browser running on the client. In one embodiment, minimization of unproductive server requests may be accomplished through the use of the client hash table <highlight><bold>308</bold></highlight>. In such an embodiment, the hash table may provide the information needed for the client to determine whether or not messages are available <highlight><bold>502</bold></highlight> for use at a given domain <highlight><bold>504</bold></highlight>. In other words, the client may first look up a domain in the hash table before transmitting a request to the server via the network. In one embodiment, server requests may be made for those domains that have an entry in the hash table. Also, each client may also periodically check (i.e., transmit a server request) for an updated version of the hash table. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> Once the client has established that there are messages available for the current domain, the client may then make a request to the server for the available message units. Information included in this request may includes: (1) a machine ID identifying the client machine; (2) a user ID identifying the user; (3) the local time; (4) a domain for which the messages are being requested; and (5) a list of the locally cached messages previously retrieved for this domain&mdash;each entry in this list may also include the message ID and version number. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> In response to the server request, the client receives a list of rule files to retrieve from the rule file store <highlight><bold>306</bold></highlight> of the CMU server system <highlight><bold>118</bold></highlight>. The client may then retrieve each of those files in the list. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> Once a rule file has been retrieved from the server <highlight><bold>118</bold></highlight>, the client may then make a request to retrieve the content for the first image in the content list. As an option, when retrieving large content files such as, for example, certain types of rich media, the content may be transmitted to the client via a trickling process that consumes relatively little ongoing bandwidth. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> As the user navigates to each web page utilizing an Internet browser, the client may take the current URL and look for trigger matches in the list of locally cached rule files. When a match is found, the client may then present the previously fetched content. In one embodiment, if more than one match is found, then the message with the highest priority may be chosen. After presenting the message content, the client may check to see if there are other content/images associated with the current message&apos;s rule file. If so, the next image in the list may then be retrieved and cached locally. This content/image may then be presented when the next qualifying trigger situation is observed. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a schematic diagram of an illustrative campaign list in accordance with an embodiment of the present invention. A plurality of messages can be stored in the CMU campaign list(s) <highlight><bold>310</bold></highlight> as shown by <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. A message campaign <highlight><bold>226</bold></highlight> may be activated on a client based on the tripping of one of the specified triggers associated with the campaign. A system administrator or other authorized user can define message campaigns to the system for storage in the CMU campaign list <highlight><bold>310</bold></highlight>. The campaigns can be sent to targeted user&apos;s client machines in accordance with specific embodiments of the present invention. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a schematic diagram of representative CMU message in accordance with an embodiment of the present invention. As previously mentioned, a message for the network message system may include: (1) a rules file and (2) content/media for presentation. In one specific embodiment illustrated by <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the message <highlight><bold>226</bold></highlight> comprises content <highlight><bold>230</bold></highlight>, which makes up the portion of the message presented to the user and CMU display rules <highlight><bold>228</bold></highlight>, which may dictate the circumstances in which the message content <highlight><bold>230</bold></highlight> is displayed to the user. In specific embodiments, message <highlight><bold>226</bold></highlight> can also include optional expiration information <highlight><bold>238</bold></highlight> and optional priority information <highlight><bold>240</bold></highlight>. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> The content <highlight><bold>230</bold></highlight> may include Hypertext Markup Language (HTML), text, images, figures, colors, sound files that will automatically play upon display of the message, and other types of multi-media files/content. In one embodiment, the content may also include one or more industry-standard image files representing a display size currently used for banners. However, it should be understood that the content <highlight><bold>230</bold></highlight> need not be limited to standard image files and may include various types of rich media, such as Flash, video, audio, and the like. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> Some illustrative examples of some rules <highlight><bold>228</bold></highlight> include: (1) domains at which the retrieved messages should be presented to the user; (2) specific web pages at which the retrieved messages should be presented to the user; (3) URL substrings that, should they be found in the current URL, will cause the message to be presented; and (4) time and date information. Also, the rules <highlight><bold>228</bold></highlight> may include/reference almost any kind of relevant information, such as, for example, specific known attributes about the user like frequent flyer affiliation, club memberships, type of credit card used, hobbies and interests, basic demographic information, such as gender, age, income, and the like. The message <highlight><bold>226</bold></highlight> may contain the information utilized by the client to determine when and where to display the associated content/media, called display attributes <highlight><bold>236</bold></highlight>. Additional illustrative rules <highlight><bold>228</bold></highlight> include: the type of message; a list of the media and sizes for the particular message; timing information, such as beginning and ending dates, frequency information, and the like. Triggers <highlight><bold>244</bold></highlight> can indicate where the campaign should be started, called initiation triggers, and triggers that indicate where the content should be displayed. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a schematic diagram of representative CMU client system in accordance with an embodiment of the present invention. The CMU client system <highlight><bold>112</bold></highlight> may comprise a plurality of components including a CMU campaign list retriever <highlight><bold>808</bold></highlight>, a CMU message prefetcher <highlight><bold>806</bold></highlight>, a CMU triggering engine <highlight><bold>804</bold></highlight>, a hash table controller <highlight><bold>802</bold></highlight>, a display engine <highlight><bold>810</bold></highlight>, a cache <highlight><bold>812</bold></highlight>, a cache cleanup engine <highlight><bold>814</bold></highlight>, user preferences <highlight><bold>816</bold></highlight>, private URL history store <highlight><bold>818</bold></highlight>, and communications engine <highlight><bold>820</bold></highlight>. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> The CMU campaign list retriever <highlight><bold>808</bold></highlight> can perform a check for updates from the CMU server system <highlight><bold>118</bold></highlight>. The check can be performed daily, for example, in specific embodiments. In a specific embodiment, the CMU retriever <highlight><bold>808</bold></highlight> performs the update by sending a request <highlight><bold>216</bold></highlight> to a CMU server computer <highlight><bold>108</bold></highlight> via the network <highlight><bold>102</bold></highlight>. The request <highlight><bold>216</bold></highlight> may contain at least two pieces of information: a unique customer ID of the user (i.e., a user ID) <highlight><bold>220</bold></highlight> and a current domain being entered by the user (i.e., a machine ID) <highlight><bold>222</bold></highlight>. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> The CMU server computer <highlight><bold>108</bold></highlight> receives the request <highlight><bold>216</bold></highlight> from the retriever <highlight><bold>808</bold></highlight> and performs a check to determine if there are any messages pending for the specified domain <highlight><bold>222</bold></highlight>. If it is determined that there are messages associated with the specified domain, then the CMU server computer <highlight><bold>108</bold></highlight> queries an historical-based targeting database <highlight><bold>224</bold></highlight> to determine if there are any specific messages pending for this domain <highlight><bold>222</bold></highlight> for this specific user <highlight><bold>220</bold></highlight>. If there are, then the specific message(s) <highlight><bold>226</bold></highlight> is returned to the retriever <highlight><bold>808</bold></highlight> on the user&apos;s CMU client computer <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> The CMU message prefetcher <highlight><bold>806</bold></highlight> obtains CMU messages when there is available bandwidth. The messages can be stored in the cache <highlight><bold>812</bold></highlight> for later display. A cache cleanup engine <highlight><bold>814</bold></highlight> performs cleanup of campaigns that have expired. The CMU triggering engine <highlight><bold>804</bold></highlight> may examine the user&apos;s context (e.g., URL, date/time, etc.) and look for messages stored in the local cache <highlight><bold>812</bold></highlight> with in-context rules that match. Upon a match being found, the matching message may be presented for display by the display engine <highlight><bold>810</bold></highlight>. The hash table controller <highlight><bold>802</bold></highlight> performs a check for updates to the hash table. This check can be made daily, for example, in a particular embodiment. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> The user preferences <highlight><bold>816</bold></highlight> include preferences for positioning CMUs for display to the user, and preferences controlling delay time for display of CMUs. The private URL history store <highlight><bold>818</bold></highlight>, keeps a file of URLs visited by users of the client. In specific embodiments, URL history store <highlight><bold>818</bold></highlight> resides on the client machine to protect privacy of the user. The communications engine <highlight><bold>820</bold></highlight> controls communications between CMU client <highlight><bold>112</bold></highlight> and other computers on the network <highlight><bold>102</bold></highlight>. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a schematic representation of an illustrative display presented on a visual display by the displayer <highlight><bold>210</bold></highlight> on a user&apos;s client computer <highlight><bold>104</bold></highlight>. In one embodiment, the client may present the message in an overlapping window (or frame) such as, for example, a pop-up window <highlight><bold>900</bold></highlight>, that is created by the client for that purpose. In a preferred embodiment, this frame is displayed by an application (i.e., the message client system) running on the client separate from a browser application <highlight><bold>902</bold></highlight> (e.g., Microsoft&apos;s Internet Explorer) running on the client <highlight><bold>104</bold></highlight>. In an embodiment of the present invention, the message window may include one or more of the following attributes: (1) the message window may be re-positionable by the user (e.g., the user may be able to move the message window around within a client area of the browser by drag and drop techniques); (2) the message window may have a close box or button <highlight><bold>904</bold></highlight> (e.g., such as the type positioned in the upper right hand comer of a Microsoft Windows application window) for selectably closing the message window which may be positioned in the upper right corner; (3) the message window may also include access controls for presenting information about the message, message client system, and/or related user preferences to the user (e.g., such as the &ldquo;&quest;&rdquo; button displayed in a Microsoft Windows application window); (4) branding information; (5) tracking the position of the message window relative to the origin of the client area of the browser window so that the message window can maintain its relative position as the user scrolls, resizes or moves the browser window; (6) a save control feature <highlight><bold>906</bold></highlight> that allows a user to save a presented message for future reference; and/or (7) features for forwarding the message via the network and printing image portion(s) of the message. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> As an option, one or more preferences may be available to the user for customizing the behavior of messages presented on their particular client. As an illustrative example, the user may be permitted to set preferences related to the position at which the message window is displayed and the delay (if any) between the completion of the loading of the web page and the display of the message. As a further option, the delay time may also be used to rotate the user through multiple messages per page displayed on the browser application if the user spends sufficient time at those pages displayed on the browser application. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> The following examples are provided merely to illustrate representative positioning preference features such as the type described above: the message window position can be configured by the user to be displayed at an upper left comer of the browser window, directly over the browser window, or at a center region of the visual display of the client computer. For illustrative purposes, the following examples are provided merely to illustrate a presentation delay preference feature such as the type as described above: display of the message in the message window immediately after a web page has been completely loaded by the browser application, 1.5 seconds after the web page has been completely loaded by the browser application, and/or a user specified number of seconds after the web page has been loaded. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> As new messaging campaigns are entered into the network message system, they are queued up for publishing. The message campaigns in the queue are then processed as follows. First, the domains of the URL triggers in each message are extracted and a domain list is compiled from the extracted domains. Next, the resulting domain list is used to update a client hash table. This trigger information is then sent to the message system server and used by the message system server to respond to client requests for messages. The rule file information is then extracted and sent to the message server system and message content is retrieved from the message system server. This process is repeated until the publishing queue is cleared of pending message/message campaigns. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> Published campaigns are distributed to client machines via the message system server. The message system server may also distribute the following information throughout the network message system: (1) client hash table; (2) rule file lists; (3) rule files; and message related content. In one embodiment, the hash table may be updated each time the publishing process is performed (e.g., if no new message domain combinations are added and none are taken away then the hash table can remain unchanged). </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> A list of rule files are transmitted via the network to the client by the server in response to a request by the client. Client requests may be made by the client machine&apos;s user as the user navigates into various domains via the browser application. As part of the request, the server may be provided information such as, for example, the user&apos;s current domain and a list of rule files (for the current domain) already residing on the client machine. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> Next, the server then finds messages that can be used at the current domain. The file names for each message are added to the file store <highlight><bold>306</bold></highlight>. Each list entry also contains an action code that indicates an action the client should take for that entry. These actions may include, for example: (1) Add&mdash;add the specified message to the client&apos;s local cache; (2) Delete&mdash;remove the specified message from the client&apos;s local cache; and (3) Update&mdash;update the specified message in the client&apos;s cache. Rule files and message related content typically may be delivered to the client using standard web-serving technology. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> illustrates a flowchart of the representative processing in a specific embodiment of the present invention. As shown, an example process for displaying information to a user comprises: detecting (<highlight><bold>1002</bold></highlight>) occurrence of an event indicating a message is to be displayed by a first application on a client; retrieving (<highlight><bold>1004</bold></highlight>) content for a first message from a repository at a content server; initiating (<highlight><bold>1006</bold></highlight>) selection of one or more messages to be displayed based upon behavioral information collected and analyzed at the client; and monitoring (<highlight><bold>1008</bold></highlight>) activity at the client for an opportunity to display a selected message. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> While various embodiments have been described above, it should be understood that they have been presented by way of example only, and not limitation. Thus, the breadth and scope of a preferred embodiment should not be limited by any of the above described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for displaying information to a user, comprising: 
<claim-text>detecting occurrence of an event indicating a message is to be displayed by a first application on a client; </claim-text>
<claim-text>retrieving content for a first message from a repository at a content server; </claim-text>
<claim-text>initiating selection of one or more messages to be displayed based upon behavioral information collected and analyzed at the client; and </claim-text>
<claim-text>monitoring activity at the client for an opportunity to present a selected message. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>detecting occurrence of an event indicating a message is to be presented by a first application on a client comprises: 
<claim-text>utilizing the first application to monitor a second application on the client in communication with a network for information that satisfies one or more rules of a set of rules, wherein </claim-text>
<claim-text>the second application is utilized by a user to access sites coupled to the network. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein: 
<claim-text>retrieving content for a first message from a repository at a content server comprises: 
<claim-text>collecting information that satisfies one or more rules of the set of rules from the second application utilizing the first application; </claim-text>
<claim-text>storing at least a portion of the collected information on the client utilizing the first application; and </claim-text>
<claim-text>receiving content via the network for presentment by the first application based on the portion of the collected information stored on the client. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>monitoring for an opportunity to present a selected message comprises: 
<claim-text>presenting a message when the client displays an HTML image that is compatible with the message. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein the presenting a message presents a message in a pop-up window. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein the presenting a message presents the message at a user-specified position. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein the presenting a message presents the message at a default position. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein the presenting a message presents the message over an HTML banner. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, further comprising saving the presented message. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein monitoring for an opportunity to present a selected message comprises presenting a message when: 
<claim-text>the client displays an HTML image that is compatible with the message; </claim-text>
<claim-text>a domain name of a server from which an original message was requested is absent from an exclude list; and </claim-text>
<claim-text>a domain of a currently displayed web page is included in at least one of a global domain inclusion list and a private domain inclusion list. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A method, comprising: 
<claim-text>entering content for a campaign; </claim-text>
<claim-text>entering a first set of trigger rules for activating the campaign, the first set of trigger rules including at least one rule; </claim-text>
<claim-text>entering a second set of trigger rules for displaying messages from a campaign after campaign activation, the second set of trigger rules including at least one trigger rule; and </claim-text>
<claim-text>publishing the campaign to a server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, further comprising: 
<claim-text>receiving a request from a client computer; </claim-text>
<claim-text>activating the campaign when at least one trigger from the first set of trigger rules is met based on the request. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, wherein the activating comprises transmitting content and the second set of trigger rules to the client. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, further comprising entering an expiration date for the campaign and transmitting the expiration date to the client upon activation of the campaign. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the second set of trigger rules includes domain addresses. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the second set of trigger rules further includes text strings associated with the domain addresses. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A computer program product, comprising: 
<claim-text>code that detects an occurrence of an event indicating a message is to be displayed by a first application on a client; </claim-text>
<claim-text>code that retrieves content for a first message from a repository at a content server; </claim-text>
<claim-text>code that initiates selection of one or more messages to be displayed based upon behavioral information collected and analyzed at the client; and </claim-text>
<claim-text>code that monitors activity at the client for an opportunity to present a selected message. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein: 
<claim-text>the code that detects occurrence of an event indicating a message is to be presented by a first application on a client comprises: </claim-text>
<claim-text>code that utilizes the first application to monitor a second application on the client in communication with a network for information that satisfies one or more rules of a set of rules, wherein the second application is utilized by a user to access sites coupled to the network. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein: 
<claim-text>the code that retrieves content for a first message from a repository at a content server comprises: 
<claim-text>code that collects information that satisfies one or more rules of the set of rules from the second application utilizing the first application; </claim-text>
<claim-text>code that stores at least a portion of the collected information on the client utilizing the first application; and </claim-text>
<claim-text>code that receives content via the network for presentment by the first application based on the portion of the collected information stored on the client. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein monitoring for an opportunity to present a selected message comprises: 
<claim-text>code that presents a message when the client displays an HTML image that is compatible with the message. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the code that presents a message includes code that presents a message in a pop-up window. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the code that presents a message includes code that presents the message at a user-specified position. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the code that presents a message includes code that presents the message at a default position. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, wherein the code that presents a message includes code that presents the message over an HTML banner. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00022">claim 20</dependent-claim-reference>, further comprising code that saves the presented message. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the code that monitors for an opportunity to present a selected message comprises code that presents a message when: 
<claim-text>the client displays an HTML image that is compatible with the message; </claim-text>
<claim-text>a domain name of a server from which an original message was requested is absent from an exclude list; and </claim-text>
<claim-text>a domain of a currently displayed web page is included in at least one of a global domain inclusion list and a private domain inclusion list. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. A computer program product, comprising: 
<claim-text>code that enters content for a campaign; </claim-text>
<claim-text>code that enters a first set of trigger rules for activating the campaign, the first set of trigger rules including at least one rule; </claim-text>
<claim-text>code that enters a second set of trigger rules for displaying messages from a campaign after campaign activation, the second set of trigger rules including at least one trigger rule; and </claim-text>
<claim-text>code that publishes the campaign to a server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, further comprising: 
<claim-text>code that receives a request from a client computer; </claim-text>
<claim-text>code that activates the campaign when at least one trigger from the first set of trigger rules is met based on the request. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, wherein the code that activates comprises code that transmits content and the second set of trigger rules to the client. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, further comprising code that enters an expiration date for the campaign and code that transmits the expiration date to the client upon activation of the campaign. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, wherein the second set of trigger rules includes domain addresses. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein the second set of trigger rules further includes text strings associated with the domain addresses. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. A system for displaying information to a user, comprising: 
<claim-text>means for detecting occurrence of an event indicating a message is to be displayed by a first application on a client; </claim-text>
<claim-text>means for retrieving content for a first message from a repository at a content server; </claim-text>
<claim-text>means for initiating selection of one or more messages to be displayed based upon behavioral information collected and analyzed at the client; and </claim-text>
<claim-text>means for monitoring activity at the client for an opportunity to present a selected message. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. A system, comprising: 
<claim-text>means for entering content for a campaign; </claim-text>
<claim-text>means for entering a first set of trigger rules for activating the campaign, the first set of trigger rules including at least one rule; </claim-text>
<claim-text>means for entering a second set of trigger rules for displaying messages from a campaign after campaign activation, the second set of trigger rules including at least one trigger rule; and </claim-text>
<claim-text>means for publishing the campaign to a server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. A method, comprising: 
<claim-text>entering content for a campaign; </claim-text>
<claim-text>entering a set of trigger rules for displaying messages from the campaign after campaign activation, the set of trigger rules including at least one trigger rule; and </claim-text>
<claim-text>publishing the campaign to a server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 35</dependent-claim-reference>, further comprising entering an expiration date for the campaign and transmitting the expiration date to a client upon activation of the campaign. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 35</dependent-claim-reference>, wherein the set of trigger rules includes domain addresses. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 35</dependent-claim-reference>, wherein the set of trigger rules further includes text strings associated with the domain addresses. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. A computer program product, comprising: 
<claim-text>code that enters content for a campaign; </claim-text>
<claim-text>code that enters a set of trigger rules for displaying messages from the campaign after campaign activation, the set of trigger rules including at least one trigger rule; and </claim-text>
<claim-text>publishing the campaign to a server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The computer program of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, further comprising code that enters an expiration date for the campaign and transmitting the expiration date to a client upon activation of the campaign. </claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, wherein the set of trigger rules includes domain addresses. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The computer program product of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, wherein the set of trigger rules further includes text strings associated with the domain addresses. </claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. A system, comprising: 
<claim-text>means for entering content for a campaign; </claim-text>
<claim-text>means for entering a set of trigger rules for displaying messages from the campaign after campaign activation, the set of trigger rules including at least one trigger rule; and </claim-text>
<claim-text>means for publishing the campaign to a server.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>10</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005067A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005067A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005067A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005067A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005067A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005067A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005067A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005067A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030005067A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030005067A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030005067A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030005067A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
