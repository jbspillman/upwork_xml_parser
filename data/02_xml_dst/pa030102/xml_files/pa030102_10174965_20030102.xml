<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030001885A1-20030102-D00000.TIF SYSTEM "US20030001885A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030001885A1-20030102-D00001.TIF SYSTEM "US20030001885A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030001885A1-20030102-D00002.TIF SYSTEM "US20030001885A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030001885A1-20030102-D00003.TIF SYSTEM "US20030001885A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030001885A1-20030102-D00004.TIF SYSTEM "US20030001885A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030001885A1-20030102-D00005.TIF SYSTEM "US20030001885A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030001885A1-20030102-D00006.TIF SYSTEM "US20030001885A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030001885A1-20030102-D00007.TIF SYSTEM "US20030001885A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030001885A1-20030102-D00008.TIF SYSTEM "US20030001885A1-20030102-D00008.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030001885</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10174965</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020620</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>90115892</doc-number>
</priority-application-number>
<filing-date>20010629</filing-date>
<country-code>TW</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G09G005/00</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>G06F017/30</ipc>
</classification-ipc-secondary>
<classification-ipc-secondary>
<ipc>G06F015/16</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>345</class>
<subclass>738000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>707</class>
<subclass>010000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>709</class>
<subclass>203000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Method of generating a dynamic editable table in a web page</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Kuang-Shin</given-name>
<family-name>Lin</family-name>
</name>
<residence>
<residence-non-us>
<city>Taipei</city>
<country-code>TW</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Jeff</given-name>
<family-name>Song</family-name>
</name>
<residence>
<residence-non-us>
<city>Taipei</city>
<country-code>TW</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Yi-Song</given-name>
<family-name>Li</family-name>
</name>
<residence>
<residence-non-us>
<city>Tianjin</city>
<country-code>CN</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>BIRCH STEWART KOLASCH &amp; BIRCH</name-1>
<name-2></name-2>
<address>
<address-1>PO BOX 747</address-1>
<city>FALLS CHURCH</city>
<state>VA</state>
<postalcode>22040-0747</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The specification discloses a method of generating a dynamic editable table in a web page. The method includes the steps of: transmitting data from a server to a client according to a user&apos;s instructions; using the data to generate the dynamic editable table and display it on a web page shown on the client&apos;s browser; allowing the client to perform various editing and statistical operations on the dynamic editable table; and simultaneously modifying and storing the corresponding data on the server. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The invention relates to a method of generating a dynamic editable table and, in particular, to a method of generating a dynamic editable table in a web page. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Tables generated by the current web page design technology are static. Users can only follow designated ways to browse the table, but are unable to perform complicated operations such as appending, modifying, viewing real-time counting and sorting. Even if they allow a user to perform simple operations on the table data, new data have to be transmitted from the server in order to update the web page, breaking continuous operations on the table. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Furthermore, more and more web page designs provide real-time update functions for controls, input and editing from multiple parties. It is thus highly desirable to have a method that can generate a dynamic editable table in a web page. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The invention discloses a method for implementing a dynamic table in a web page. Such a dynamic table allows such functions as appending, deleting, and modifying records in the table. It can also implement such functions as inputting counting, sorting, recording selections, and input device controls. All dynamic operations are completed on the client end without updating the web page from the server. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> An objective of the invention is the method of generating a dynamic editable table in a web page. It uses Java Script to implement the dynamic interactive operations of the table. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The disclosed method can dynamically insert buttons, selection frames, input frames and other controls and HTML elements in the table. Thus, the user can use the browser to browse data and, at the same time, edit and organize data. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> Another objective of the invention is to allow a programmer to repeatedly use the same table at various times and in various ways without designing it all over again.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The invention will become more fully understood from the detailed description given hereinbelow. However, the following description is for purposes of illustration only, and thus is not limitative of the invention, wherein: </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of the main functional module of the invention; </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a flowchart of the data generating module; </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a flowchart of the table processing module; </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is an operational flowchart of the mouse operation in the dynamic operation module; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is an operational flowchart of the keyboard operation in the dynamic operation module; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is an operational flowchart of the table assigned event; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a flowchart of storing data; and </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a schematic view showing the effects of generating a dynamic editable table in a web page.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the main functional module of the invention includes a data generating module <highlight><bold>101</bold></highlight>, a table processing module <highlight><bold>102</bold></highlight>, a dynamic operation module <highlight><bold>103</bold></highlight>, and a data storing module <highlight><bold>104</bold></highlight>. The data generating module <highlight><bold>101</bold></highlight> transmits data from a server <highlight><bold>100</bold></highlight> to a client <highlight><bold>200</bold></highlight>. The table processing module <highlight><bold>102</bold></highlight> generates a dynamic table and displays it on a web page <highlight><bold>105</bold></highlight> shown on the browser at the client&apos;s computer. The dynamic operation module <highlight><bold>103</bold></highlight> allows a user to perform various operations such as editing and counting on the dynamic table. The operation result is directly modified on the web page <highlight><bold>105</bold></highlight>. The data storing module <highlight><bold>104</bold></highlight> makes simultaneous modifications of the data on the server <highlight><bold>100</bold></highlight>. The function of each module is described as follows. </paragraph>
<paragraph id="P-0020" lvl="7"><number>&lsqb;0020&rsqb;</number> (1) The Data Generating Module <highlight><bold>101</bold></highlight>: </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, step <highlight><bold>201</bold></highlight> analyzes a user&apos;s data request. Step <highlight><bold>202</bold></highlight> determines whether data in a database are needed. If the data is not needed, data are directly generated according to the user&apos;s request in step <highlight><bold>203</bold></highlight> or a blank data is provide for the user to fill out. If the database is used, data search criteria satisfying the request are generated in step <highlight><bold>204</bold></highlight>. Step <highlight><bold>205</bold></highlight> opens the database according to the criteria. Data are obtained in step <highlight><bold>206</bold></highlight>. Finally, the &ldquo;Response.Write&rdquo; method is employed to distribute all obtained data to the web page <highlight><bold>105</bold></highlight> shown to the client <highlight><bold>200</bold></highlight> in step <highlight><bold>207</bold></highlight>. </paragraph>
<paragraph id="P-0022" lvl="7"><number>&lsqb;0022&rsqb;</number> (2) The Table Processing Module <highlight><bold>102</bold></highlight>: </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> In the web page <highlight><bold>105</bold></highlight> shown to the client <highlight><bold>200</bold></highlight>, the table processing module <highlight><bold>102</bold></highlight> directly processes the original data to generate a table. This procedure is shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. Step <highlight><bold>301</bold></highlight> obtains a set of original data. Step <highlight><bold>302</bold></highlight> processes the table header, generating a field header HTML statement, providing sorting events at field headers and assigning field widths. Step <highlight><bold>303</bold></highlight> process the table body, generating HTML statements for each record, providing selected record events, editing methods, controls, and HTML elements in the table body. Step <highlight><bold>304</bold></highlight> processes the table footer, setting a statistical value. Finally, step <highlight><bold>305</bold></highlight> generates the table HTML statements. The table header, the table body and the table footer are combined together and shown in the web page <highlight><bold>105</bold></highlight>. </paragraph>
<paragraph id="P-0024" lvl="7"><number>&lsqb;0024&rsqb;</number> (3) Dynamic Operation Module <highlight><bold>103</bold></highlight>: </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The user operations include mouse operation <highlight><bold>1031</bold></highlight> and keyboard operation <highlight><bold>1032</bold></highlight>. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, when the user clicks a FieldName (step <highlight><bold>401</bold></highlight>), the module generates a sorting event (step <highlight><bold>402</bold></highlight>). The clicked field is then sorted in ascending order. Clicking once more sorts the field in descending order. If the user clicks the table body (step <highlight><bold>403</bold></highlight>), the module determines whether there is any selection record (step <highlight><bold>404</bold></highlight>). If there is a selection record, then the selection record is set as unselected (step <highlight><bold>405</bold></highlight>). For example, if some row is selected, then the contents in the row are stored and the inserted control for the row disappears. The row is then set as unselected. If there is no selection record, then the clicked record is marked as selected (step <highlight><bold>406</bold></highlight>), e.g., the contents of a clicked row are set as selected. Afterwards, a field is set as editable (step <highlight><bold>407</bold></highlight>) to generate an input frame for the user to select records for editing. Assigned controls and HTML elements are then inserted (step <highlight><bold>408</bold></highlight>) for the user to manipulate. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The keyboard operation is shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. When the user presses direction keys on the keyboard, the original contents in the row are stored and the original inserted control for the row disappears. Pressing the Up key selects its previous row (step <highlight><bold>501</bold></highlight>) and the Down key selects the following row (step <highlight><bold>502</bold></highlight>). Pressing the PageUp key selects the first row of the previous page (step <highlight><bold>503</bold></highlight>) while the PageDown key selects the first row of the following page (step <highlight><bold>504</bold></highlight>). </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The user defined operation <highlight><bold>1033</bold></highlight> is shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. Through the default table generating method, the user can choose APPEND (step <highlight><bold>601</bold></highlight>) to add new elements to the web page <highlight><bold>105</bold></highlight> (step <highlight><bold>6011</bold></highlight>), DELETE (step <highlight><bold>602</bold></highlight>) to delete assigned elements from the web page <highlight><bold>105</bold></highlight> (step <highlight><bold>6021</bold></highlight>), MODIFY (step <highlight><bold>603</bold></highlight>) to modify assigned elements in the web page <highlight><bold>105</bold></highlight> (step <highlight><bold>6031</bold></highlight>), and ATTRIBUTE (step <highlight><bold>604</bold></highlight>) to obtain the attributes of the currently assigned elements, such as the row number and content (step <highlight><bold>6041</bold></highlight>). </paragraph>
<paragraph id="P-0029" lvl="7"><number>&lsqb;0029&rsqb;</number> (4) The Data Storing Module <highlight><bold>104</bold></highlight>: </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> This module operates at the server end, as shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. First, an SQL statement is generated (step <highlight><bold>701</bold></highlight>). Such commands as UPDATE, DELETE, and INSERT are used to assign contents to be updated (step <highlight><bold>702</bold></highlight>). Afterwards, the open method of data connection is used to call the SQL statement (step <highlight><bold>703</bold></highlight>) and to store data in the database (step <highlight><bold>704</bold></highlight>). </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>, all tables are generated on a web page using the disclosed method. They satisfy all of the user&apos;s requirements in operating data. In the selected data <highlight><bold>802</bold></highlight>, the user can directly enter data to editable fields <highlight><bold>801</bold></highlight> such as &ldquo;External Code&rdquo; and &ldquo;Quantity&rdquo;. The user can also press the Date selection button <highlight><bold>804</bold></highlight> to enter a date. By pressing fields <highlight><bold>803</bold></highlight> such as &ldquo;Quantity&rdquo;, &ldquo;Product Code&rdquo;, and &ldquo;Locator&rdquo;, data will be sorted accordingly. Furthermore, the user can choose a selection menu <highlight><bold>805</bold></highlight> to select the locator status. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The invention being thus described, it will be obvious that the same may be varied in many ways. Such variations are not to be regarded as a departure from the spirit and scope of the invention, and all such modifications as would be obvious to one skilled in the art are intended to be included within the scope of the following claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of generating a dynamical editable table in a web page, which comprises the steps of: 
<claim-text>transmitting data from a server to a client according to a user&apos;s request; </claim-text>
<claim-text>generating the dynamical editable table using the data and displaying it in a web page shown on the client&apos;s browser; </claim-text>
<claim-text>allowing the client to perform various editing and statistical operations on the dynamical editable table; and </claim-text>
<claim-text>making simultaneous modifications on the corresponding data and storing them on the server. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the dynamical interactive operation function of the table is implemented using Java Script. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the data are generated by a data generating module. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the data generating module executes the steps of: 
<claim-text>analyzing a user&apos;s data request; </claim-text>
<claim-text>allowing the user to use data in a database; </claim-text>
<claim-text>generating data search criteria satisfying the request; </claim-text>
<claim-text>opening the database according to the criteria and obtaining the data; and </claim-text>
<claim-text>sending the obtained data to the web page shown on the client&apos;s computer. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference> further comprising the step of the client&apos;s direct request for generating data. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of generating the dynamical editable table is achieved through a table processing module. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein the table processing module executes the steps of: 
<claim-text>obtaining a set of original data; </claim-text>
<claim-text>processing a table header by generating a field header HTML statement, providing sorting events at field headers and assigning field widths; </claim-text>
<claim-text>processing a table body by generating each record HTML statement, providing selected record events, editing methods, control, and HTML tags in the table body; </claim-text>
<claim-text>processing the table footer by setting a statistical value; </claim-text>
<claim-text>generating a table HTML statement; and </claim-text>
<claim-text>combining the table header, the table body and the table footer together and displaying them in the web page. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of performing various editing and statistical operations on the dynamical editable table is achieved using a dynamical operation module. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein the dynamical operation module is selected from the group comprising the combinations of mouse operation, keyboard operation and user defined operation. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the dynamical operation module generates a sorting event when the user chooses the mouse operation and clicks a FieldName. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein a record is selected when the user chooses the mouse operation and clicks a table body. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, where when the clicked record sets the field as editable and generates an editable input frame for the user to select records to edit. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> further comprising the step of inserting assigned controls and HTML elements for the user to use. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein when the user can select from the group comprising the combinations of appending records, deleting record, modifying records and obtaining the current record parameters when he chooses the user defined operation. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of storing the data is achieved using a data storing module. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the data storing module further comprises the steps of: 
<claim-text>generating an SQL statement; </claim-text>
<claim-text>assigning updated contents; </claim-text>
<claim-text>calling the SQL statement; and </claim-text>
<claim-text>storing the SQL statement in a database. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference>, wherein the step of assigning updated contents uses clauses such as UPDATE, DELETE and INSERT to update the contents.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>8</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030001885A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030001885A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030001885A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030001885A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030001885A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030001885A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030001885A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030001885A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030001885A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
