<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002076A1-20030102-D00000.TIF SYSTEM "US20030002076A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002076A1-20030102-D00001.TIF SYSTEM "US20030002076A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002076A1-20030102-D00002.TIF SYSTEM "US20030002076A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002076A1-20030102-D00003.TIF SYSTEM "US20030002076A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002076A1-20030102-D00004.TIF SYSTEM "US20030002076A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002076A1-20030102-D00005.TIF SYSTEM "US20030002076A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002076A1-20030102-D00006.TIF SYSTEM "US20030002076A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002076A1-20030102-D00007.TIF SYSTEM "US20030002076A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002076A1-20030102-D00008.TIF SYSTEM "US20030002076A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002076A1-20030102-D00009.TIF SYSTEM "US20030002076A1-20030102-D00009.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002076</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10176057</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020621</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>195394/2001</doc-number>
</priority-application-number>
<filing-date>20010627</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>134695/2002</doc-number>
</priority-application-number>
<filing-date>20020509</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>B41B001/00</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>G06F015/00</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>358</class>
<subclass>001150</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Multifunction peripheral apparatus, external controller for the same, and their control method</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Makotto</given-name>
<family-name>Takayama</family-name>
</name>
<residence>
<residence-non-us>
<city>Kanagawa</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Hidenori</given-name>
<family-name>Ozaki</family-name>
</name>
<residence>
<residence-non-us>
<city>Kanagawa</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>FITZPATRICK CELLA HARPER &amp; SCINTO</name-1>
<name-2></name-2>
<address>
<address-1>30 ROCKEFELLER PLAZA</address-1>
<city>NEW YORK</city>
<state>NY</state>
<postalcode>10112</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">In an external print controller added to an MFP, bit map data obtained by analyzing and developing received PDL data is once compressed and, subsequently, transferred via a PCI bus. In the compressed bit map data, the data in a compressed state is stored onto an HD in the MFP as it is. The compressed bit map data is read out from the HD, decompressed, and sent to a printer unit. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The invention relates to a multifunction peripheral apparatus, an external controller for such an apparatus, and their control method. More particularly, the invention relates to a multifunction peripheral apparatus (hereinafter, referred to as an MFP) having a copy function, a printer function, a scanner function, and the like. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Related Background Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows a conventional example in a technical field to which the invention belongs. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Reference numeral <highlight><bold>1</bold></highlight> denotes an MFP controller; <highlight><bold>2</bold></highlight> a scanner; and <highlight><bold>3</bold></highlight> a printer. The MFP having the scanner function, printer function, copy function, and the like is constructed by those component elements. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> In the case where processing ability of a PDL print is not enough if only the MFP controller <highlight><bold>1</bold></highlight> is used, a PDL accelerator <highlight><bold>6</bold></highlight> is connected to the outside via a PCI bus <highlight><bold>4</bold></highlight>. A PDL is analyzed by the external PDL accelerator and developed into bit map data. The developed bit map data is returned to the MFP controller <highlight><bold>1</bold></highlight>, thereby realizing the high-speed PDL print. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 3, 4</cross-reference>, <highlight><bold>5</bold></highlight>, and <highlight><bold>6</bold></highlight> show details of a conventional example of a B/W MFP. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> First, a processing flow for an electronic sorter of the copy in the conventional example will be explained with reference to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> When the copying operation is executed in a UI (user interface unit) <highlight><bold>118</bold></highlight>, a copy job is sent to a CPU <highlight><bold>104</bold></highlight> via a UIcont <highlight><bold>117</bold></highlight>, the PCI bus <highlight><bold>4</bold></highlight>, a PCIcont <highlight><bold>112</bold></highlight>, an I/O bus <highlight><bold>106</bold></highlight>, and a bus SW (bus switch) <highlight><bold>103</bold></highlight> (S<highlight><bold>401</bold></highlight>). </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> An instruction for scanning is sent from the CPU <highlight><bold>104</bold></highlight> to the scanner <highlight><bold>2</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, a video input I/F <highlight><bold>108</bold></highlight>, and a scanner image processing unit <highlight><bold>113</bold></highlight>. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> Multivalue image data read out from an original by the scanner <highlight><bold>2</bold></highlight> is sent to the scanner image processing unit <highlight><bold>113</bold></highlight>, converted into a binary image, and stored into a RAM <highlight><bold>101</bold></highlight> via the video input I/F <highlight><bold>108</bold></highlight>, a video bus <highlight><bold>105</bold></highlight>, and the bus SW <highlight><bold>103</bold></highlight> (S<highlight><bold>402</bold></highlight>). The scan image stored in the RAM <highlight><bold>101</bold></highlight> is compressed by a compression/decompression unit <highlight><bold>107</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight> and video bus <highlight><bold>105</bold></highlight> and stored into the RAM <highlight><bold>101</bold></highlight> via the video bus <highlight><bold>105</bold></highlight> and bus SW <highlight><bold>103</bold></highlight> (S<highlight><bold>403</bold></highlight>). </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The compression scan image data stored in the RAM <highlight><bold>101</bold></highlight> is stored onto an HD <highlight><bold>116</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, and HDcont <highlight><bold>115</bold></highlight> (S<highlight><bold>404</bold></highlight>). The compression scan image data stored onto the HD <highlight><bold>116</bold></highlight> is stored into the RAM <highlight><bold>101</bold></highlight> via the HDcont <highlight><bold>115</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, and bus SW <highlight><bold>103</bold></highlight> (S<highlight><bold>405</bold></highlight>). </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The compression scan image data which has been read out from the HD <highlight><bold>116</bold></highlight> and stored in the RAM <highlight><bold>101</bold></highlight> is decompressed by the compression/decompression unit <highlight><bold>107</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight> and video bus <highlight><bold>105</bold></highlight> and stored into the RAM <highlight><bold>101</bold></highlight> via the video bus <highlight><bold>105</bold></highlight> and bus SW <highlight><bold>103</bold></highlight> (S<highlight><bold>406</bold></highlight>). The video data which has been decompressed by the compression/decompression unit <highlight><bold>107</bold></highlight> and stored in the RAM <highlight><bold>101</bold></highlight> is printed by the printer <highlight><bold>3</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, a video output I/F <highlight><bold>109</bold></highlight>, and a printer image processing unit <highlight><bold>114</bold></highlight> (S<highlight><bold>407</bold></highlight>). </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> A flow for a network PDL print will now be described with reference to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. When the printing operation is executed by a PC (not shown) connected to a network <highlight><bold>111</bold></highlight> (S<highlight><bold>501</bold></highlight>), PDL print data is stored into the RAM <highlight><bold>101</bold></highlight> via the network <highlight><bold>111</bold></highlight>, an LANcont <highlight><bold>110</bold></highlight>, the I/O bus <highlight><bold>106</bold></highlight>, and bus SW <highlight><bold>103</bold></highlight>. The data stored in the RAM <highlight><bold>101</bold></highlight> is successively stored onto the HD <highlight><bold>116</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, and HDcont <highlight><bold>115</bold></highlight> (S<highlight><bold>502</bold></highlight>). </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The PDL data stored onto the HD <highlight><bold>116</bold></highlight> is fetched into the RAM <highlight><bold>101</bold></highlight> via the HDcont <highlight><bold>115</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, and bus SW <highlight><bold>103</bold></highlight>, developed into PDL codes by a process of the CPU <highlight><bold>104</bold></highlight>, and fetched into the RAM <highlight><bold>101</bold></highlight>. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> If the apparatus has the external PDL accelerator, the PDL codes in the RAM <highlight><bold>101</bold></highlight> are simultaneously transferred to a RAM <highlight><bold>121</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, and a PCIcont <highlight><bold>119</bold></highlight> of the PDL accelerator <highlight><bold>6</bold></highlight> (S<highlight><bold>503</bold></highlight>). </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> In the PDL accelerator <highlight><bold>6</bold></highlight>, the PDL codes in the RAM <highlight><bold>121</bold></highlight> are developed into bit map data by a CPU <highlight><bold>120</bold></highlight> and stored into the RAM <highlight><bold>121</bold></highlight> (S<highlight><bold>504</bold></highlight>). The bit map data stored in the RAM <highlight><bold>121</bold></highlight> is transferred to the RAM <highlight><bold>101</bold></highlight> via the PCIcont <highlight><bold>119</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, and bus SW <highlight><bold>103</bold></highlight> (S<highlight><bold>505</bold></highlight>). </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The bit map data in the RAM <highlight><bold>101</bold></highlight> is compressed by the compression/decompression unit <highlight><bold>107</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight> and video bus <highlight><bold>105</bold></highlight> and stored into the RAM <highlight><bold>101</bold></highlight> via the video bus <highlight><bold>105</bold></highlight> and bus SW <highlight><bold>103</bold></highlight> (S<highlight><bold>506</bold></highlight>). The compression bit map data stored in the RAM <highlight><bold>101</bold></highlight> is stored onto the HD <highlight><bold>116</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, and HDcont <highlight><bold>115</bold></highlight> (S<highlight><bold>507</bold></highlight>). The compression bit map data stored onto the HD <highlight><bold>116</bold></highlight> is stored into the RAM <highlight><bold>101</bold></highlight> via the HDcont <highlight><bold>115</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, and bus SW <highlight><bold>103</bold></highlight> (S<highlight><bold>508</bold></highlight>). The compression bit map data which has been read out from the HD <highlight><bold>116</bold></highlight> and stored in the RAM <highlight><bold>101</bold></highlight> is decompressed by the compression/decompression unit <highlight><bold>107</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight> and video bus <highlight><bold>105</bold></highlight> and stored into the RAM <highlight><bold>101</bold></highlight> via the video bus <highlight><bold>105</bold></highlight> and bus SW <highlight><bold>103</bold></highlight> (S<highlight><bold>509</bold></highlight>). </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The bit map data which has been decompressed by the compression/decompression unit <highlight><bold>107</bold></highlight> and stored in the RAM <highlight><bold>101</bold></highlight> is printed by the printer <highlight><bold>3</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, video output I/F <highlight><bold>109</bold></highlight>, and printer image processing unit <highlight><bold>114</bold></highlight> (S<highlight><bold>510</bold></highlight>). </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows a timing chart for the electronic sort and copy and the PDL print. In the diagram, &ldquo;scan&rdquo; shows a manner in which data of &ldquo;Copy 1&rdquo; and &ldquo;Copy n&rdquo; is stored into the RAM <highlight><bold>101</bold></highlight> at repetitive timing of Ts. &ldquo;Compress and write onto HD&rdquo; shows a processing time which is necessary from the start of the compression of the scan data after completion of the storage of the data of &ldquo;Copy 1&rdquo; and &ldquo;Copy n&rdquo; into the RAM <highlight><bold>101</bold></highlight> until the completion of the writing of the data onto the HD <highlight><bold>116</bold></highlight>. &ldquo;Read out HD and decompress&rdquo; shows a time which is necessary from the start of reading of the data from the HD <highlight><bold>116</bold></highlight> until the data which was read out and compressed is decompressed and completely developed into the RAM <highlight><bold>101</bold></highlight>. &ldquo;Print&rdquo; shows a period of time during which the data developed on the RAM <highlight><bold>101</bold></highlight> is outputted to the printer. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> &ldquo;Transfer PDL data&rdquo; shows a period of time during which the bit map data obtained by analyzing and developing the PDL data is transferred from the PDL accelerator <highlight><bold>6</bold></highlight> to the MFP controller. &ldquo;Compress PDL data and write onto HD&rdquo; shows a time which is necessary until the MFP controller compresses the transferred bit map data and writes it onto the HD. In this instance, each of the foregoing items excluding &ldquo;scan&rdquo; and &ldquo;print&rdquo; denotes a process which is executed via the PCI bus <highlight><bold>4</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, and the like in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, therefore, shows a case where &ldquo;transfer PDL data&rdquo;, that is, the data transfer from the PDL accelerator <highlight><bold>6</bold></highlight> of the bit map data of an amount that is much larger than that of the PDL data to the MFP controller <highlight><bold>1</bold></highlight> is started at the timing of completion of the process of &ldquo;Read out HD and decompress&rdquo;. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, in case of only the electronic sort and copy, the process for compressing the scan image, the process for storing the data onto the HD, the process for reading out the data from the HD, and the decompressing process can be sequentially executed for a scanning period of one page, thereby realizing the electronic sorting and copying processes without loss of time. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, however, if the execution of the PDL print is controlled during the electronic sort and copy, that is, if two processes compete, the total time necessary for the processes of &ldquo;compress and write onto HD&rdquo;, &ldquo;read out HD and decompress&rdquo;, &ldquo;transfer PDL data&rdquo;, and &ldquo;compress PDL data and write onto HD&rdquo; does not lie within a scanning period of time of one page. In the example shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, such a total time is equal to (Ts&plus;&agr;) as compared with a scanning period Ts. This is because the amount of analyzed and developed PDL data, that is, the amount of bit map data is very large, so that it takes a long time for the data transfer. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> This means that during the electronic sort and copy, the operations such that after completion of the reception of the data obtained by developing the PDL, the data is compressed and immediately stored onto the HD cannot be executed. In this case, after completion of the electronic sort and copy, when the data obtained by developing the PDL is compressed and stored onto the HD, or in the case where the electronic sort and copy processes are preferentially executed, a processing speed of the PDL print deteriorates as compared with that in case of executing a single process. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> If there is a relation of the processing times between the electronic sort and copy and the PDL print as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> and the data to be PDL-printed is data of a heavy process, there is a case where it takes time to print the first page of the PDL or a case where the periodic print output is interrupted halfway. On the user&apos;s side, there is a problem such that the total time that is required for printing increases, so that loss is caused on business. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The invention is made in consideration of the above problems and it is an object of the invention to provide a multifunction peripheral apparatus, an external controller for such an apparatus, and their control method, in which in an MFP having an external print controller provided for efficiently executing a process of a PDL print at a high speed even during electronic sort and copy, that is, for the purpose of executing a high speed process of the PDL print, the PDL print can be executed at a high speed even during the electronic sort and copy. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> To accomplish the above object, according to the invention, there is provided a multifunction peripheral apparatus comprising: a scanner unit; a printer unit; and a main controller which is connected to the scanner unit and the printer unit and executes various processes including signal processes in a scanner function, a printer function, a copy function, and the like, wherein the multifunction peripheral apparatus further comprises an external print controller which is connected to the main controller via a bus and executes the signal process in the printer function, the external print controller compresses bit map image data developed in the internal signal processes and transfers the compressed bit map image data to the main controller via the bus, and the main controller receives the compressed bit map image data from the external print controller, decompresses it, and controls the printer unit on the basis of the compression-cancelled bit map image data. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The above and other objects and features of the present invention will become apparent from the following detailed description and the appended claims with reference to the accompanying drawings.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a diagram showing an embodiment to which the invention is applied and showing a construction of a case of using a PDL accelerator as an external print controller; </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a diagram showing a construction of a conventional example; </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a diagram showing details of the construction of the conventional example shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>; </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flowchart for explaining data processes of electronic sort and copy in the conventional example shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>; </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a flowchart showing processes of a network PDL print in the conventional example shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>; </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a timing chart showing the data processes in the conventional example shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>; </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a diagram showing a detailed construction of the embodiment of the invention shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a flowchart for explaining data processes of a network PDL print in the embodiment of the invention shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>; </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a timing chart showing the data processes in the embodiment of the invention; and </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a diagram showing details of a construction of the second embodiment to which the invention is applied.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
</section>
<section>
<heading lvl="1">FIRST EMBODIMENT </heading>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> An embodiment of the invention is shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> Reference numeral <highlight><bold>1</bold></highlight> denotes the MFP controller; <highlight><bold>2</bold></highlight> the scanner; and <highlight><bold>3</bold></highlight> the printer. An MFP having the copy function, printer function, scanner function, and the like is constructed by those component elements. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> In the case where processing ability of a high-speed PDL print is lacking if only the MFP controller <highlight><bold>1</bold></highlight> is used, the PDL accelerator <highlight><bold>5</bold></highlight> is connected to the outside via the PCI bus <highlight><bold>4</bold></highlight>, thereby coping with a high speed printer. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The PDL accelerator <highlight><bold>5</bold></highlight> has therein a compression unit of an image. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 7, 8</cross-reference>, and <highlight><bold>9</bold></highlight> show details of a B/W MFP embodiment to which the invention is applied. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows a detailed construction of the B/W MFP embodiment to which the invention is applied. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> A flow for electronic sort and copy in the embodiment is similar to that shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> A flow for a network PDL print will be explained with reference to <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> When the printing operation is executed from a PC (personal computer: not shown) connected to the network <highlight><bold>111</bold></highlight> (S<highlight><bold>801</bold></highlight>), the PDL print data is stored into the RAM <highlight><bold>101</bold></highlight> via the network <highlight><bold>111</bold></highlight>, LANcont <highlight><bold>110</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, and bus SW <highlight><bold>103</bold></highlight>. The data in the RAM <highlight><bold>101</bold></highlight> is successively stored onto the HD <highlight><bold>116</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, and HDcont <highlight><bold>115</bold></highlight> (S<highlight><bold>802</bold></highlight>). </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> The PDL data stored onto the HD <highlight><bold>116</bold></highlight> is fetched into the RAM <highlight><bold>101</bold></highlight> via the HDcont <highlight><bold>115</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, and bus SW <highlight><bold>103</bold></highlight>, developed into PDL codes by a process of the CPU <highlight><bold>104</bold></highlight>, and fetched into the RAM <highlight><bold>101</bold></highlight>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The PDL codes in the RAM <highlight><bold>101</bold></highlight> are transferred to the RAM <highlight><bold>121</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, and PCIcont <highlight><bold>119</bold></highlight> of the PDL accelerator <highlight><bold>5</bold></highlight> (S<highlight><bold>803</bold></highlight>). </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> In the PDL accelerator <highlight><bold>5</bold></highlight>, the PDL codes in the RAM <highlight><bold>121</bold></highlight> are developed into bit map data by the CPU <highlight><bold>120</bold></highlight> and stored into the RAM <highlight><bold>121</bold></highlight> (S<highlight><bold>804</bold></highlight>). </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The bit map data stored in the RAM <highlight><bold>121</bold></highlight> is compressed by a compression unit <highlight><bold>140</bold></highlight> and stored into the RAM <highlight><bold>121</bold></highlight>. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> The compressed bit map data in the RAM <highlight><bold>121</bold></highlight> is transferred to the RAM <highlight><bold>101</bold></highlight> via the PCIcont <highlight><bold>119</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, and bus SW <highlight><bold>103</bold></highlight> (S<highlight><bold>805</bold></highlight>). </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> The compression bit map data stored in the RAM <highlight><bold>101</bold></highlight> is stored onto the HD <highlight><bold>116</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, and HDcont <highlight><bold>115</bold></highlight> (S<highlight><bold>806</bold></highlight>). </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> The compression bit map data stored onto the HD <highlight><bold>116</bold></highlight> is stored into the RAM <highlight><bold>101</bold></highlight> via the HDcont <highlight><bold>115</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, and bus SW <highlight><bold>103</bold></highlight>. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> The compression bit map data which has been read out from the HD <highlight><bold>116</bold></highlight> and stored into the RAM <highlight><bold>101</bold></highlight> is decompressed by the compression/decompression unit <highlight><bold>107</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight> and video bus <highlight><bold>105</bold></highlight> and stored into the RAM <highlight><bold>101</bold></highlight> via the video bus <highlight><bold>105</bold></highlight> and bus SW <highlight><bold>103</bold></highlight> (S<highlight><bold>807</bold></highlight>). </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> The bit map data which has been decompressed by the compression/decompression unit <highlight><bold>107</bold></highlight> and stored in the RAM <highlight><bold>101</bold></highlight> is printed by the printer <highlight><bold>3</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, video output I/F <highlight><bold>109</bold></highlight>, and printer image processing unit <highlight><bold>114</bold></highlight> (S<highlight><bold>808</bold></highlight>). </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> Although the bit map data has conventionally been compressed and written onto the HD <highlight><bold>116</bold></highlight> by the MFP controller as mentioned above, in the embodiment, the bit map data is compressed by the compression unit in the external print controller and the bit map data of the data amount reduced by the compression is transferred via the PCI bus. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows a timing chart for the electronic sort and copy and the PDL print. In the diagram, &ldquo;scan&rdquo; shows a manner in which data of &ldquo;Copy 1&rdquo; and &ldquo;Copy n&rdquo; is fetched into the RAM <highlight><bold>101</bold></highlight> at repetitive timing of Ts. &ldquo;Compress and write onto HD&rdquo; shows a processing time which is necessary from the start of the compression of the scan data after completion of the storage of the data into the RAM <highlight><bold>101</bold></highlight> until the completion of the writing of the data onto the HD <highlight><bold>116</bold></highlight>. &ldquo;Read out HD and decompress&rdquo; shows a time which is necessary from the start of reading of the data from the HD <highlight><bold>116</bold></highlight> until the compressed data is decompressed and completely developed into the RAM <highlight><bold>101</bold></highlight>. &ldquo;Print&rdquo; shows a period of time during which the developed data is outputted from the RAM <highlight><bold>101</bold></highlight> to the printer. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> &ldquo;Transfer compression PDL data&rdquo; shows a period of time during which the compression bit map data of the PDL is transferred from the PDL accelerator <highlight><bold>5</bold></highlight>. &ldquo;Write compression PDL data onto HD&rdquo; shows a time which is necessary until the compression bit map data of the PDL is written onto the HD. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> As mentioned above, if the processes of the PDL print compete during the electronic sort and copy, the total time necessary for the processes of &ldquo;compress and write onto HD&rdquo;, &ldquo;read out HD and decompress&rdquo;, &ldquo;transfer compression PDL data&rdquo;, and &ldquo;write compression PDL data onto HD&rdquo; can be allowed to lie within the scanning period of time of one page. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, such a total time is equal to (Ts&minus;&agr;) as compared with a scanning period Ts. This means that during the electronic sort and copy, the data obtained by developing the PDL can be compressed and stored onto the HD. This means that even if the data is data of a heavy PDL process, since the process of the PDL can be executed during the electronic sort and copy, it does not take long time to print the first page of the PDL data, the periodic print output is not interrupted halfway, and on the user&apos;s side, loss is not caused in the total time. </paragraph>
</section>
<section>
<heading lvl="1">SECOND EMBODIMENT </heading>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows a detailed construction of a B/W MFP and an external PDL accelerator in the second embodiment. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> This construction is obtained by forming a main control portion of the MFP controller <highlight><bold>1</bold></highlight> by a 1-chip controller ASIC <highlight><bold>7</bold></highlight>, and this 1-chip controller ASIC <highlight><bold>7</bold></highlight> is also used in common as a PDL accelerator <highlight><bold>5</bold></highlight>. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> An operation flow for the electronic sort and copy is similar to that in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> The flow for the network PDL print in the embodiment will now be described with reference to <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> When the printing operation is executed from the PC (not shown) connected to the network <highlight><bold>111</bold></highlight> (S<highlight><bold>801</bold></highlight>), the PDL print data is stored into the RAM <highlight><bold>101</bold></highlight> via the network <highlight><bold>111</bold></highlight>, LANcont <highlight><bold>110</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, and bus SW <highlight><bold>103</bold></highlight>. The data in the RAM <highlight><bold>101</bold></highlight> is successively stored onto the HD <highlight><bold>116</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, and HDcont <highlight><bold>115</bold></highlight> (S<highlight><bold>802</bold></highlight>). </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> The PDL data stored onto the HD <highlight><bold>116</bold></highlight> is fetched into the RAM <highlight><bold>101</bold></highlight> via the HDcont <highlight><bold>115</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, and bus SW <highlight><bold>103</bold></highlight>, developed into PDL codes by the process of the CPU <highlight><bold>104</bold></highlight>, and fetched into the RAM <highlight><bold>101</bold></highlight>. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> The PDL codes in the RAM <highlight><bold>101</bold></highlight> are transferred to an RAM <highlight><bold>123</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight>, the I/O bus <highlight><bold>106</bold></highlight>, the PCIcont <highlight><bold>112</bold></highlight>, the PCI bus <highlight><bold>4</bold></highlight>, a PCIcont <highlight><bold>133</bold></highlight> of the 1-chip controller ASIC <highlight><bold>7</bold></highlight> of the PDL accelerator <highlight><bold>5</bold></highlight>, a video bus <highlight><bold>127</bold></highlight>, and a bus SW <highlight><bold>125</bold></highlight> (S<highlight><bold>803</bold></highlight>). </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> In the 1-chip controller ASIC <highlight><bold>7</bold></highlight> of the PDL accelerator <highlight><bold>5</bold></highlight>, the PDL codes in the RAM <highlight><bold>123</bold></highlight> are developed into bit map data by a CPU <highlight><bold>126</bold></highlight> and stored into the RAM <highlight><bold>123</bold></highlight> (S<highlight><bold>804</bold></highlight>). </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> The bit map data stored in the RAM <highlight><bold>123</bold></highlight> is compressed by a compression/decompression unit <highlight><bold>129</bold></highlight> via the bus SW <highlight><bold>125</bold></highlight> and video bus <highlight><bold>127</bold></highlight> and stored into the RAM <highlight><bold>123</bold></highlight> via the video bus <highlight><bold>127</bold></highlight> and bus SW <highlight><bold>125</bold></highlight>. The compressed bit map data in the RAM <highlight><bold>123</bold></highlight> is transferred to the RAM <highlight><bold>101</bold></highlight> via the bus SW <highlight><bold>125</bold></highlight>, an I/O bus <highlight><bold>128</bold></highlight>, the PCIcont <highlight><bold>133</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, and bus SW <highlight><bold>103</bold></highlight> (S<highlight><bold>805</bold></highlight>). </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> The compression bit map data stored in the RAM <highlight><bold>101</bold></highlight> is stored onto the HD <highlight><bold>116</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, and HDcont <highlight><bold>115</bold></highlight> (S<highlight><bold>806</bold></highlight>). </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> The compression bit map data stored onto the HD <highlight><bold>116</bold></highlight> is stored into the RAM <highlight><bold>101</bold></highlight> via the HDcont <highlight><bold>115</bold></highlight>, PCI bus <highlight><bold>4</bold></highlight>, PCIcont <highlight><bold>112</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, and bus SW <highlight><bold>103</bold></highlight>. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> The compression bit map data which has been read out from the HD <highlight><bold>116</bold></highlight> and stored into the RAM <highlight><bold>101</bold></highlight> is decompressed by the compression/decompression unit <highlight><bold>107</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight> and video bus <highlight><bold>105</bold></highlight> and stored into the RAM <highlight><bold>101</bold></highlight> via the video bus <highlight><bold>105</bold></highlight> and bus SW <highlight><bold>103</bold></highlight> (S<highlight><bold>807</bold></highlight>). </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> The bit map data which has been decompressed by the compression/decompression unit <highlight><bold>107</bold></highlight> and stored in the RAM <highlight><bold>101</bold></highlight> is printed by the printer <highlight><bold>3</bold></highlight> via the bus SW <highlight><bold>103</bold></highlight>, I/O bus <highlight><bold>106</bold></highlight>, video output I/F <highlight><bold>109</bold></highlight>, and printer image processing unit <highlight><bold>114</bold></highlight> (S<highlight><bold>808</bold></highlight>). </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> Although the LANcont <highlight><bold>110</bold></highlight> in the MFP controller has been connected to the network in the above description, a LANcont <highlight><bold>132</bold></highlight> is also provided in the PDL accelerator. Therefore, by connecting the network to the LANcont <highlight><bold>132</bold></highlight> in the PDL accelerator, there is an advantage such that a burden of processes of the MFP controller at the time of the PDL print can be reduced. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> Although the invention has been described with respect to the binary image of the MFP of B/W, a similar effect can be also obtained with respect to a multivalue image and a color MFP. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> Although the PDL accelerator connected via the PCI bus has been used in the invention, it is not always necessary to limitedly use it. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> Although the invention has been described with respect to the PDL accelerator as an example, even in case of another image, a similar effect can be also naturally obtained in case of effectively using the external accelerator. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> As described above, according to the invention, in the PDL accelerator added to the MFP, that is, in the external print controller, the bit map data obtained by analyzing and developing the PDL data is once compressed and, subsequently, transferred via the PCI bus. Therefore, the amount of compressed bit map data can be reduced as compared with that of the bit map data which is not compressed, so that the data transfer amount is reduced and the transfer time can be shortened. Consequently, the total time which is necessary for the processes of &ldquo;compress and write onto HD&rdquo;, &ldquo;read out HD and decompress&rdquo;, &ldquo;transfer compression PDL data&rdquo;, and &ldquo;write compression PDL data onto HD&rdquo; can be allowed to lie within the scanning period of one page. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> In the case where the MFP controller is also executing the copy function, although the compression/decompression unit is used in the process of the copy function, since this process does not compete with the compressing/decompressing process, the compressing process of the PDL bit map data can be executed independent of the compressing process in the copying operation. Even in case of the data of the heavy PDL, the PDL can be processed during the copying process without deteriorating the copying performance. Therefore, on the user&apos;s side, the deterioration of the PDL performance can be hardly confirmed. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> By constructing the external print controller in a manner similar to the main controller, resources of the hardware and software in the main controller are effectively used and the external print controller can be constructed and made operative. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A multifunction peripheral apparatus comprising: 
<claim-text>a scanner unit; </claim-text>
<claim-text>a printer unit; and </claim-text>
<claim-text>a main controller which is connected to said scanner unit and said printer unit and executes various processes including signal processes in a scanner function, a printer function, a copy function, and the like, wherein 
<claim-text>said multifunction peripheral apparatus further comprises an external print controller which is connected to said main controller via a bus and executes the signal process in the printer function, </claim-text>
<claim-text>said external print controller compresses bit map image data developed in the internal signal process and transfers the compressed bit map image data to said main controller via said bus, and </claim-text>
<claim-text>said main controller receives said compressed bit map image data from said external print controller, decompresses it, and controls said printer unit on the basis of the compression-cancelled bit map image data. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said main controller has therein a functional unit for compressing a signal and decompressing the compressed signal, and said external print controller has a construction similar to that of said main controller. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said main controller has therein a network interface unit connected to a network, and said external print controller has a construction similar to that of said main controller. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. An external print controller which is added to a multifunction peripheral apparatus comprising: a scanner unit; a printer unit; and a main controller which is connected to said scanner unit and said printer unit and executes various processes including signal processes in a scanner function, a printer function, a copy function, and the like, wherein 
<claim-text>said external print controller is connected to said main controller via a bus, compresses bit map image data developed in the signal process in the printer function, and transfers the compressed bit map image data to said main controller via said bus. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A controller according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein said external print controller has a construction similar to that of said main controller having a functional unit for compressing a signal and decompressing the compressed signal. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A control method in a multifunction peripheral apparatus comprising: a scanner unit; a printer unit; and a main controller which is connected to said scanner unit and said printer unit and executes various processes including signal processes in a scanner function, a printer function, a copy function, and the like, wherein 
<claim-text>said multifunction peripheral apparatus further comprises an external print controller which is connected to said main controller via a bus and executes the signal process in the printer function, </claim-text>
<claim-text>said external print controller has a developing step of developing received data into bit map image data, a compressing step of compressing the bit map image data developed in said developing step, and a transferring step of transferring the bit map image data compressed in said compressing step to said main controller via said bus, and </claim-text>
<claim-text>said main controller has a decompressing step of receiving said compressed bit map image data from said external print controller and decompressing it and a printer control step of controlling said printer unit on the basis of the bit map image data compression-cancelled in said decompressing step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A signal processing method in an external print controller which is added to a multifunction peripheral apparatus comprising: a scanner unit; a printer unit; and a main controller which is connected to said scanner unit and said printer unit and executes various processes including signal processes in a scanner function, a printer function, a copy function, and the like, wherein 
<claim-text>said external print controller has a developing step of developing received data into bit map image data, a compressing step of compressing the bit map image data developed in said developing step, and a transferring step of transferring the bit map image data compressed in said compressing step to said main controller via a bus. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein said external print controller further has a receiving step of receiving data from a network, and said developing step is executed to the data received in said receiving step. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A controller which can be connected to a scanner, a printer, and a network, comprising: 
<claim-text>a first compressing circuit for compressing a first bit map image which is inputted from said scanner; </claim-text>
<claim-text>a converting unit for converting PDL codes received from said network into a second bit map image; </claim-text>
<claim-text>a second compressing circuit for compressing the second bit map image which is outputted from said converting unit; </claim-text>
<claim-text>first access means for writing the first bit map image compressed by said first compressing circuit into a storage device and reading out the compressed first bit map image from said storage device; </claim-text>
<claim-text>second access means for writing the second bit map image compressed by said second compressing circuit into said storage device and reading out the compressed second bit map image from said storage device so as to supply said second bit map image to a decompressing circuit; and </claim-text>
<claim-text>control means for interruption-executing the writing process to said storage device by said second access means during the access to said storage device by said first access means. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A controller according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein after the second bit map image of an Nth page was read out from said storage device, before the writing of the second bit map image of an (N&plus;1)th page is started, said control means interruption-executes the writing process to said storage device by said second access means. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. An image processing method in a controller which can be connected to a scanner, a printer, and a network, comprising: 
<claim-text>a first compressing step of compressing a first bit map image which is inputted from said scanner by a first compressing circuit; </claim-text>
<claim-text>a converting step of converting PDL codes received from said network into a second bit map image by a converting unit; </claim-text>
<claim-text>a second compressing step of compressing the second bit map image which is outputted by said converting unit by a second compressing circuit; </claim-text>
<claim-text>a first access step of writing the first bit map image compressed by said first compressing circuit into a storage device and reading out the compressed first bit map image from said storage device; </claim-text>
<claim-text>a second access step of writing the second bit map image compressed by said second compressing circuit into said storage device and reading out the compressed second bit map image from said storage device so as to supply said second bit map image to a decompressing circuit; and </claim-text>
<claim-text>a control step of interruption-executing the writing process to said storage device by said second access step during the access to said storage device by said first access step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein in said control step, after the second bit map image of an Nth page was read out from said storage device, before the writing of the second bit map image of an (N&plus;1)th page is started, the writing process to said storage device by said second access step is interruption-executed.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002076A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002076A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002076A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002076A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002076A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002076A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002076A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002076A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002076A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002076A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
