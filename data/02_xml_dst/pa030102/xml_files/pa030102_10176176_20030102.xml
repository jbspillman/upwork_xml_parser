<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030001867A1-20030102-M00001.NB SYSTEM "US20030001867A1-20030102-M00001.NB" NDATA NB>
<!ENTITY US20030001867A1-20030102-M00001.TIF SYSTEM "US20030001867A1-20030102-M00001.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-M00002.NB SYSTEM "US20030001867A1-20030102-M00002.NB" NDATA NB>
<!ENTITY US20030001867A1-20030102-M00002.TIF SYSTEM "US20030001867A1-20030102-M00002.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-M00003.NB SYSTEM "US20030001867A1-20030102-M00003.NB" NDATA NB>
<!ENTITY US20030001867A1-20030102-M00003.TIF SYSTEM "US20030001867A1-20030102-M00003.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-D00000.TIF SYSTEM "US20030001867A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-D00001.TIF SYSTEM "US20030001867A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-D00002.TIF SYSTEM "US20030001867A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-D00003.TIF SYSTEM "US20030001867A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-D00004.TIF SYSTEM "US20030001867A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-D00005.TIF SYSTEM "US20030001867A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-D00006.TIF SYSTEM "US20030001867A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-D00007.TIF SYSTEM "US20030001867A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-D00008.TIF SYSTEM "US20030001867A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-D00009.TIF SYSTEM "US20030001867A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-D00010.TIF SYSTEM "US20030001867A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-D00011.TIF SYSTEM "US20030001867A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-D00012.TIF SYSTEM "US20030001867A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030001867A1-20030102-D00013.TIF SYSTEM "US20030001867A1-20030102-D00013.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030001867</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10176176</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020621</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-191843</doc-number>
</priority-application-number>
<filing-date>20010625</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G09G005/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>345</class>
<subclass>660000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Image processing apparatus and its processing method</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Atsushi</given-name>
<family-name>Matsumoto</family-name>
</name>
<residence>
<residence-non-us>
<city>Tokyo</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>FITZPATRICK CELLA HARPER &amp; SCINTO</name-1>
<name-2></name-2>
<address>
<address-1>30 ROCKEFELLER PLAZA</address-1>
<city>NEW YORK</city>
<state>NY</state>
<postalcode>10112</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Upon scaling input image data and outputting the scaled image data, an address arithmetic processor determines phase information, which indicates the distances between the position of the pixel of interest after scaling and neighboring pixels of an original image, in accordance with the scale of that scaling, a coefficient arithmetic processor calculates filter coefficients in a filter process in accordance with the determined phase information, and a filter processor executes the filter process of the input image data by convolution operations on the basis of the calculated filter coefficients and outputs multi-valued image data. An LUT converts the density of the multi-valued image data in correspondence with the density characteristics of a printer, and a binarization processor binarizes the multi-valued image data and outputs binary image data to an image storage unit. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to an image processing apparatus for scaling input image data, and outputting the scaled image data, and its processing method. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> In recent years, as a scaling process for images, a &ldquo;nearest neighbor method&rdquo; for selecting a pixel of original image data which is nearest to the pixel of interest after scaling is known. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Also, a process such as a &ldquo;bi-cubic method&rdquo; or the like is well known. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> However, since the &ldquo;nearest neighbor method&rdquo; uses only the nearest pixel data, deterioration of an image is considerable, e.g., moir&eacute; is generated, and pixels look coarse upon up-scaling. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> On the other hand, the &ldquo;bi-cubic method&rdquo; can assure higher image quality than the &ldquo;nearest neighbor method&rdquo;. However, since it maintains high resolution, when a document with periodicity, e.g., a printed document, is scanned and undergoes an image process upon down-scaling, moir&eacute; fringes are generated and the image quality deteriorates. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Especially, when a binary image undergoes scaling, deterioration of an image is considerable. When a binary image is scaled at a scale near 100%, even an image of a document having no periodicity suffers periodic density nonuniformity, resulting in poor appearance. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In another method, a binary image may be temporarily converted into a multi-valued image, which may then undergo scaling. However, with such method, the storage size of an image storage device and the image transfer size increase. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The present invention has been made to solve the above-mentioned problems, and has as its object to provide an image processing apparatus which can implement scaling that can suppress generation of a periodic stripe pattern such as moir&eacute; without excessively decreasing the resolution by executing a filter process in accordance with phase information for each pixel of interest and a phase information control parameter used to control the frequency characteristics of a filter, and its processing method. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> In order to achieve the above object, according to one aspect of the present invention, there is provided an image processing apparatus for scaling input image data, and outputting the scaled image data, comprising; means for designating a scale; phase information determination means for determining phase information, which indicates distances between a position of a pixel of interest after scaling, and neighboring pixels of an original image, for each pixel of interest after scaling; coefficient arithmetic means for calculating a filter coefficient in a filter process in accordance with the scale, the phase information for each pixel of interest, and a phase information control parameter (low-pass coefficient) used to control frequency characteristics of a filter; and filter processing means for executing the filter process of input image data by a convolution operation on the basis of the calculated filter coefficient, and outputting multi-valued image data. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> According to one aspect of the present invention, there is provided a processing method for an image processing apparatus for scaling input image data, and outputting the scaled image data, comprising the steps of; determining phase information, which indicates distances between a position of a pixel of interest after scaling, and neighboring pixels of an original image, for each pixel of interest after scaling; calculating a filter coefficient in a filter process in accordance with a scale, a phase information control parameter (low-pass coefficient) used to control frequency characteristics of a filter, and the determined phase information; and executing the filter process of input image data by a convolution operation on the basis of the calculated filter coefficient, and outputting multi-valued image data. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> According to one aspect of the present invention, there is provided a program for making a computer function as; means for designating a scale; phase information determination means for determining phase information, which indicates distances between a position of a pixel of interest after scaling, and neighboring pixels of an original image, for each pixel of interest after scaling; coefficient arithmetic means for calculating a filter coefficient in a filter process in accordance with the scale, the phase information for each pixel of interest, and a phase information control parameter (low-pass coefficient) used to control frequency characteristics of a filter; and filter processing means for executing the filter process of input image data by a convolution operation on the basis of the calculated filter coefficient, and outputting multi-valued image data. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Other features and advantages of the present invention will be apparent from the following description taken in conjunction with the accompanying drawings, in which like reference characters designate the same or similar parts throughout the figures thereof.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram showing the arrangement of an image controller unit according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a perspective view showing the outer appearance of an image input device of the embodiment; </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a perspective view showing the outer appearance of an image output device of the embodiment; </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram showing the arrangement of a scanner image processor <highlight><bold>400</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram showing the arrangement of a printer image processor <highlight><bold>500</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a simple block diagram for explaining the process of a binary image scaling processor <highlight><bold>130</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a block diagram showing the detailed arrangement of an image scaling unit <highlight><bold>602</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows a pixel of interest and pixels on an original image near the pixel of interest; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a view for explaining a process for obtaining distance in the main scan direction; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a graph showing the relationship between a coefficient C and distance d in the bi-cubic method; </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a graph showing the frequency characteristics of a sinc function; </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a graph showing the relationship between the coefficient C and distance d when LC&equals;2; </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a graph showing the frequency characteristics of a filter when LC&equals;2; </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a graph showing the input/output characteristics of an LUT <highlight><bold>706</bold></highlight> of the embodiment; </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a graph showing the frequency characteristics when LC&equals;1 and phase&equals;zero pixel; </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a graph showing the frequency characteristics when LC&equals;1 and phase&equals;&frac12; pixel; </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a graph showing the frequency characteristics when LC&equals;1.3 and phase&equals;zero pixel; and </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a graph showing the frequency characteristics when LC&equals;1.3 and phase&equals;&frac12; pixel.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT </heading>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> A preferred embodiment of the present invention will be described in detail hereinafter with reference to the accompanying drawings. </paragraph>
<paragraph id="P-0032" lvl="7"><number>&lsqb;0032&rsqb;</number> &lsqb;Image Controller Unit&rsqb;</paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram showing the arrangement of an image controller unit according to this embodiment. As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, an image controller unit <highlight><bold>100</bold></highlight> of this embodiment is a controller for inputting/outputting image information and device information, as it is connected to a scanner <highlight><bold>200</bold></highlight> as an example of an image input device, and a printer <highlight><bold>300</bold></highlight> as an example of an image output device, and also to a LAN <highlight><bold>700</bold></highlight> and public line (WAN) <highlight><bold>800</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> In the image controller unit <highlight><bold>100</bold></highlight>, reference numeral <highlight><bold>101</bold></highlight> denotes a CPU for controlling the entire system in accordance with a program stored in a ROM (to be described later). Reference numeral <highlight><bold>102</bold></highlight> denotes a RAM which is a memory on which a system work memory used when the CPU <highlight><bold>101</bold></highlight> executes processes, and an image memory used to temporarily store image data are assured. Reference numeral <highlight><bold>103</bold></highlight> denotes a ROM which stores a boot program of the system, and various processing programs or control data. Reference numeral <highlight><bold>104</bold></highlight> denotes a hard disk drive (HDD), which stores system software and image data. Reference numeral <highlight><bold>106</bold></highlight> denotes a console I/F, which serves as an interface with a console <highlight><bold>160</bold></highlight>, and outputs image data to be displayed on the console <highlight><bold>160</bold></highlight> to it. Also, the console I/F <highlight><bold>106</bold></highlight> sends information input by the user at the console <highlight><bold>160</bold></highlight> to the CPU <highlight><bold>101</bold></highlight>. Reference numeral <highlight><bold>110</bold></highlight> denotes a network I/F which is connected to the network (LAN) <highlight><bold>700</bold></highlight> to input/output information. Reference numeral <highlight><bold>120</bold></highlight> denotes a modem which is connected to the public line (WAN) <highlight><bold>800</bold></highlight> to input/output information. These devices are connected to a system bus <highlight><bold>107</bold></highlight>. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Reference numeral <highlight><bold>105</bold></highlight> denotes an image bus I/F, which is a bus bridge that connects the aforementioned system bus <highlight><bold>107</bold></highlight> and an image bus <highlight><bold>108</bold></highlight> that transfers image data at high speed, and converts a data structure. The image bus <highlight><bold>108</bold></highlight> comprises a high-speed bus such as a PCI bus or the like. The following devices are connected to the image bus <highlight><bold>108</bold></highlight>. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Reference numeral <highlight><bold>150</bold></highlight> denotes a raster image processor (RIP), which rasterizes page description language (PDL) codes sent from a personal computer (PC; not shown) or the like to a bitmap image. Reference numeral <highlight><bold>600</bold></highlight> denotes a device I/F, which connects the scanner <highlight><bold>200</bold></highlight> and printer <highlight><bold>300</bold></highlight> as image input/output devices, and the image controller unit <highlight><bold>100</bold></highlight> to convert the synchronous system/asynchronous system of image data. Reference numeral <highlight><bold>400</bold></highlight> denotes a scanner image processor for correcting, processing, and editing input image data. Reference numeral <highlight><bold>500</bold></highlight> denotes a printer image processor for executing, e.g., a smoothing process of print output image data to smooth character edges. Reference numeral <highlight><bold>130</bold></highlight> denotes a binary image scaling processor, which is a processing module as a characteristic feature of this embodiment, and its detailed processing contents will be explained later. Basically, the binary image scaling processor <highlight><bold>130</bold></highlight> inputs binary image data, executes scaling, and outputs binary image data. Reference numeral <highlight><bold>140</bold></highlight> denotes an image compression unit for executing a JPEG compression/expansion process of multi-valued image data, and a JBIG, MMR, or MH compression/expansion process of binary image data. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> The aforementioned HDD <highlight><bold>104</bold></highlight> saves information indicating the image output speed, location, and the like of each node connected to the network (LAN) <highlight><bold>700</bold></highlight> for each address. </paragraph>
<paragraph id="P-0038" lvl="7"><number>&lsqb;0038&rsqb;</number> &lsqb;Image Input Device (Scanner)&rsqb;</paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a perspective view showing the outer appearance of the image input device of this embodiment. As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the scanner <highlight><bold>200</bold></highlight> as an image input device illuminates an image on a paper sheet as a document with light, and scans a CCD line sensor (not shown) to convert that image into an electrical signal as raster image data. When the user sets document sheets on a tray <highlight><bold>202</bold></highlight> of a document feeder <highlight><bold>201</bold></highlight> and inputs a scan start instruction at the console <highlight><bold>160</bold></highlight>, the CPU <highlight><bold>101</bold></highlight> of the image controller unit <highlight><bold>100</bold></highlight> sends the start instruction to the scanner <highlight><bold>200</bold></highlight> via the device I/F <highlight><bold>600</bold></highlight>, and the feeder <highlight><bold>201</bold></highlight> of the scanner <highlight><bold>200</bold></highlight> feeds document sheets one by one to scan document images. </paragraph>
<paragraph id="P-0040" lvl="7"><number>&lsqb;0040&rsqb;</number> &lsqb;Image Output Device (Printer)&rsqb;</paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a perspective view showing the outer appearance of the image output device of this embodiment. As shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the printer <highlight><bold>300</bold></highlight> as an image output device converts raster image data into a visible image on a paper sheet. As the system of the printer <highlight><bold>300</bold></highlight>, an electrophotography system that uses a photosensitive drum, photosensitive belt, or the like, an ink-jet system for directly printing an image on a paper sheet by ejecting ink from a micro-nozzle array, and the like are available, and any of these systems may be used. The print operation starts when the CPU <highlight><bold>101</bold></highlight> of the image controller unit <highlight><bold>100</bold></highlight> issues an instruction via the device I/F <highlight><bold>600</bold></highlight>. The printer <highlight><bold>300</bold></highlight> has a plurality of paper feed stages that allow the user to select different paper sizes or directions, and paper cassettes <highlight><bold>301</bold></highlight>, <highlight><bold>302</bold></highlight>, <highlight><bold>303</bold></highlight>, and <highlight><bold>304</bold></highlight> corresponding to these sizes or directions are prepared. An exhaust tray <highlight><bold>305</bold></highlight> receives paper sheets that have undergone the print process. </paragraph>
<paragraph id="P-0042" lvl="7"><number>&lsqb;0042&rsqb;</number> &lsqb;Scanner Image Processor&rsqb;</paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows the arrangement of the scanner image processor <highlight><bold>400</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Referring to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, reference numeral <highlight><bold>401</bold></highlight> denotes an image bus I/F controller which is connected to the image bus <highlight><bold>108</bold></highlight>, and has a function of controlling an access sequence to the image bus <highlight><bold>108</bold></highlight>. Also, the image bus I/F controller <highlight><bold>401</bold></highlight> controls respective devices in the scanner image processor <highlight><bold>400</bold></highlight>, and generates timings for these devices. Reference numeral <highlight><bold>402</bold></highlight> denotes a filter processor for making convolution operations using a spatial filter. Reference numeral <highlight><bold>403</bold></highlight> denotes an edit unit which, for example, recognizes a closed region bounded by a marker pen from input image data, and executes an image process such as shadow-casting, hatching, negative/positive reverse, and the like. Reference numeral <highlight><bold>404</bold></highlight> denotes a scaling unit for making interpolation operations in the main scan direction of a raster image to attain scaling when the resolution of the scanned image is to be changed. Scaling in the sub-scan direction is attained by changing the scan speed of an image scan line sensor (not shown). Reference numeral <highlight><bold>405</bold></highlight> denotes a table used to convert scanned image data as luminance data into density data. Reference numeral <highlight><bold>406</bold></highlight> denotes a binarization unit for binarizing multi-valued, grayscale image data by, e.g., an error diffusion or screen process. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> Image data that has undergone the aforementioned processes is transferred onto the image bus <highlight><bold>108</bold></highlight> again via the image bus I/F controller <highlight><bold>401</bold></highlight>. </paragraph>
<paragraph id="P-0045" lvl="7"><number>&lsqb;0045&rsqb;</number> &lsqb;Printer Image Processor&rsqb;</paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows the arrangement of the printer image processor <highlight><bold>500</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Referring to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, reference numeral <highlight><bold>501</bold></highlight> denotes an image bus I/F controller which is connected to the image bus <highlight><bold>108</bold></highlight> and has a function of controlling an access sequence to the image bus <highlight><bold>108</bold></highlight>. Also, the image bus I/F controller <highlight><bold>501</bold></highlight> controls respective devices in the printer image processor <highlight><bold>500</bold></highlight> and generates timings for these devices. Reference numeral <highlight><bold>503</bold></highlight> denotes a smoothing processor for executing a process for smoothing jaggy (noise of an image that appears at a black/white boundary portion such as an oblique line or the like) of image data after resolution conversion. </paragraph>
<paragraph id="P-0047" lvl="7"><number>&lsqb;0047&rsqb;</number> &lsqb;Binary Image Scaling Processor&rsqb;</paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a simple block diagram for explaining the process of the binary image scaling processor <highlight><bold>130</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Referring to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, reference numeral <highlight><bold>601</bold></highlight> denotes an image input unit; <highlight><bold>602</bold></highlight>, a binary image scaling unit; <highlight><bold>603</bold></highlight>, a CPU; <highlight><bold>604</bold></highlight>, an image storage unit; and <highlight><bold>605</bold></highlight>, an image output unit. <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows the connection relationship among blocks which are extracted from those in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> for the sake of easy understanding. Note that the image input unit <highlight><bold>601</bold></highlight> may receive image data input from the scanner <highlight><bold>200</bold></highlight> as a source device via the device I/F <highlight><bold>600</bold></highlight>, may receive image data from the network I/F <highlight><bold>110</bold></highlight> or modem <highlight><bold>120</bold></highlight> via the LAN <highlight><bold>700</bold></highlight> or WAN <highlight><bold>800</bold></highlight>, or may receive image data stored in a storage device such as the HDD <highlight><bold>104</bold></highlight>, RAM <highlight><bold>102</bold></highlight>, or the like. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The binary image scaling unit <highlight><bold>602</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> corresponding to the binary image scaling processor <highlight><bold>130</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The CPU <highlight><bold>603</bold></highlight> corresponds to the CPU <highlight><bold>101</bold></highlight>, and the image storage unit <highlight><bold>604</bold></highlight> corresponds to devices for storing images such as the HDD <highlight><bold>104</bold></highlight>, RAM <highlight><bold>102</bold></highlight>, and the like, any one of which may be used as long as they can be accessed by the binary image scaling unit <highlight><bold>602</bold></highlight>. The image output unit <highlight><bold>605</bold></highlight> represents the output from the image storage unit <highlight><bold>604</bold></highlight>, and outputs image data to the print image processor <highlight><bold>500</bold></highlight> if an image is to be printed, to the storage device such as the HDD <highlight><bold>104</bold></highlight>, RAM <highlight><bold>102</bold></highlight>, or the like if the image data is to be stored in another storage device, or to the modem <highlight><bold>120</bold></highlight> or network I/F <highlight><bold>110</bold></highlight> if the image data is to be transferred via FAX or the network. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> In the arrangement shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, image data from the image input unit <highlight><bold>601</bold></highlight>, and the scale from the CPU <highlight><bold>603</bold></highlight> are respectively input to the binary image scaling unit <highlight><bold>602</bold></highlight>. Note that the binary image scaling unit <highlight><bold>602</bold></highlight> is scaling processing means which can independently control the scale and low-pass filter characteristics. Also, the low-pass filter characteristics to be obtained change in correspondence with the scale. In general, as the scale becomes smaller, band limitation at lower frequencies is required. That is, the binary image scaling unit <highlight><bold>602</bold></highlight> of this embodiment scales an image using a filter coefficient corresponding to the scale input from the CPU <highlight><bold>603</bold></highlight>, and outputs the image as binary image data to the image storage unit <highlight><bold>604</bold></highlight>. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a block diagram showing the detailed arrangement of the binary image scaling unit <highlight><bold>602</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. Referring to <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, reference numeral <highlight><bold>701</bold></highlight> denotes a scale input unit which inputs the scale from the CPU <highlight><bold>603</bold></highlight>. Reference numeral <highlight><bold>702</bold></highlight> denotes an address arithmetic processor which receives the scale from the scale input unit <highlight><bold>701</bold></highlight> and an initial phase parameter from a phase information change processor (to be described later), and makes address operations by shifting the pixel position of an output image for each pixel. More specifically, the address arithmetic processor <highlight><bold>702</bold></highlight> computes a pixel position on an original image, which corresponds to the pixel of interest on an output image, calculates a difference within one pixel from a nearly pixel on the original image as phase information, outputs that phase information to a coefficient arithmetic processor (to be described later), and outputs the pixel position information of the original image to a filter processor (to be described later). </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> Reference numeral <highlight><bold>703</bold></highlight> denotes a phase information change processor, which outputs a phase information control parameter to the coefficient arithmetic processor (to be described below) in accordance with the scale from the scale input unit <highlight><bold>701</bold></highlight>, and outputs an initial phase parameter to the address arithmetic processor <highlight><bold>702</bold></highlight> in accordance with that scale. Reference numeral <highlight><bold>704</bold></highlight> denotes a coefficient arithmetic processor, which receives phase information from the address arithmetic processor <highlight><bold>702</bold></highlight> and a phase information control parameter from the phase information change processor <highlight><bold>703</bold></highlight>, calculates the distance between each of 8&times;8 pixels of the original image located near the pixel of interest, and the pixel of interest, and computes a filter coefficient used in a filter process in accordance with the calculated distances and phase information control parameter. After that, the coefficient arithmetic processor <highlight><bold>704</bold></highlight> sets the filter coefficient of each pixel in a filter processor <highlight><bold>705</bold></highlight>. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> Image data is input from the image data input unit <highlight><bold>601</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. In the example shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the image storage unit <highlight><bold>604</bold></highlight> pre-stores an original image to be processed, and 8&times;8 pixel data of the original image are read out from the image storage unit to the filter processor (to be described below) on the basis of the pixel position information from the address arithmetic processor <highlight><bold>702</bold></highlight>. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> Reference numeral <highlight><bold>705</bold></highlight> denotes a filter processor which receives 8&times;8 pixel data of the original image from the image storage unit <highlight><bold>604</bold></highlight> on the basis of the pixel position information from the address arithmetic processor <highlight><bold>702</bold></highlight>, makes convolution operations on the basis of the filter coefficient from the coefficient arithmetic processor <highlight><bold>704</bold></highlight>, and outputs multi-valued image data. Reference numeral <highlight><bold>706</bold></highlight> denotes an LUT (lookup table), which receives multi-valued image data from the filter processor <highlight><bold>705</bold></highlight>, and outputs an output value corresponding to a level by looking up the table. Reference numeral <highlight><bold>707</bold></highlight> denotes a binarization processor, which binarizes the output result from the LUT <highlight><bold>706</bold></highlight>, and outputs binary image data to the image storage unit <highlight><bold>604</bold></highlight>. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> As described above, the binary image scaling unit <highlight><bold>602</bold></highlight> receives binary image data, binarizes multi-valued image data that has undergone scaling in accordance with the scale, and outputs binary image data. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Therefore, according to this embodiment, since binary image data is output without spooling multi-valued image data in an intermediate state, the use size of the image storage unit <highlight><bold>604</bold></highlight> and the image transfer size can be minimized. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> In this embodiment, a filter size of 8&times;8 will be exemplified. However, different sizes may be set in the main scan and sub-scan directions, and the size is not limited to &ldquo;8&rdquo; but can be arbitrarily set. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> The scaling process of the binary image scaling unit <highlight><bold>602</bold></highlight> will be described in detail below. In the following description, assume that the same phase information control parameters, initial phase parameters, scales, and the like are used in the main scan and sub-scan directions for the sake of simplicity. However, it is easy for those who are skilled in the art to execute this process using different parameters in the main scan and sub-scan directions. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> In the following description, assume that main scan and sub-scan scales input from the scale input unit <highlight><bold>701</bold></highlight> are 50%. In accordance with these scales , the phase information change processor <highlight><bold>703</bold></highlight> calculates a phase information control parameter LC (low-pass coefficient) by:</paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>LC&equals;</italic></highlight>1.5&plus;(100/<highlight><italic>RPX</italic></highlight>(<highlight><italic>RPY</italic></highlight>)&minus;1)&times;0.5</in-line-formula></paragraph>
<paragraph id="P-0060" lvl="7"><number>&lsqb;0060&rsqb;</number> where RPX (RPY) is the scale in the main scan (sub-scan) direction. Since both the main scan and sub-scan scales are 50%, LC&equals;2 in this case. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> LC (low-pass coefficient) is output to and used by the coefficient arithmetic processor <highlight><bold>704</bold></highlight> so as to control the frequency characteristics of a low-pass filter. In this embodiment, LC is changed in accordance with the scales on the basis of the above equation. However, the present invention is not limited to such specific example. That is, LC can be changed continuously so that a change in LC does not influence an image, upon changing LC in accordance with the scales. How to use LC will be explained later. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> The phase information change processor <highlight><bold>703</bold></highlight> calculates initial phase parameters in accordance with the scales. For example, this embodiment uses a rule that if each scale is a fraction of an integer, an initial phase parameter IX (IY) is set to be 0.5; otherwise, the parameter is zero. This rule will be explained in more detail later. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> In this embodiment, since each scale is &frac12;&equals;50%, the initial phase parameter IX&equals;IY&equals;0.5. The initial phase parameters are similarly set when the scale is &frac13;&ap;33% and &frac14;&equals;25%. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> When each scale is an integer multiple upon up-scaling, e.g., is 200%, 300%, or the like, each initial phase parameter is set by: </paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>IX</italic></highlight>(<highlight><italic>IY</italic></highlight>)&equals;100/<highlight><italic>RPX</italic></highlight>(<highlight><italic>RPY</italic></highlight>)/2</in-line-formula></paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> More specifically, when the scale is 200%, IX (IY)&equals;0.25; when it is 300%, IX (IY)&ap;0.167. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> The initial phase parameters IX and IY set in this manner are output to and used by the address arithmetic processor <highlight><bold>702</bold></highlight>. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> Note that the address arithmetic processor <highlight><bold>702</bold></highlight> receives the scale RPX (RPY)&equals;50 and initial phase parameter IX (IY)&equals;0.5, and operates as follows. For example, if the X position of the pixel of interest is X (main scan)&equals;50th pixel and the Y position is Y (sub-scan)&equals;10th pixel, the coordinate position on the original image where the pixel of interest is located can be calculated by:  
<math-cwu id="MATH-US-00001">
<number>1</number>
<math>
  <mtable>
    <mtr>
      <mtd>
        <mrow>
          <mi>Xo</mi>
          <mo>=</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mrow>
            <mrow>
              <mi>X</mi>
              <mo>/</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mi>RPX</mi>
                  <mo>/</mo>
                  <mn>100</mn>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>+</mo>
            <mi>IX</mi>
          </mrow>
        </mrow>
      </mtd>
    </mtr>
    <mtr>
      <mtd>
        <mrow>
          <mo>=</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mrow>
            <mrow>
              <mn>50</mn>
              <mo>/</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mn>50</mn>
                  <mo>/</mo>
                  <mn>100</mn>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>+</mo>
            <mn>0.5</mn>
          </mrow>
        </mrow>
      </mtd>
    </mtr>
    <mtr>
      <mtd>
        <mrow>
          <mo>=</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mn>100.5</mn>
        </mrow>
      </mtd>
    </mtr>
  </mtable>
</math>
<math>
  <mtable>
    <mtr>
      <mtd>
        <mrow>
          <mi>Yo</mi>
          <mo>=</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mrow>
            <mrow>
              <mi>Y</mi>
              <mo>/</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mi>RPY</mi>
                  <mo>/</mo>
                  <mn>100</mn>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>+</mo>
            <mi>IY</mi>
          </mrow>
        </mrow>
      </mtd>
    </mtr>
    <mtr>
      <mtd>
        <mrow>
          <mo>=</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mrow>
            <mrow>
              <mn>10</mn>
              <mo>/</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mn>50</mn>
                  <mo>/</mo>
                  <mn>100</mn>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>+</mo>
            <mn>0.5</mn>
          </mrow>
        </mrow>
      </mtd>
    </mtr>
    <mtr>
      <mtd>
        <mrow>
          <mo>=</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mn>20.5</mn>
        </mrow>
      </mtd>
    </mtr>
  </mtable>
</math>
<mathematica-file id="MATHEMATICA-00001" file="US20030001867A1-20030102-M00001.NB"/>
<image id="EMI-M00001" wi="216.027" he="71.0451" file="US20030001867A1-20030102-M00001.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> Note that the initial phase parameters are added upon calculating the address, as described above. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> Decimal parts PIX&equals;0.5 and PIY&equals;0.5 of Xo and Yo (since this embodiment is designed so that the decimal parts of Xo and Yo assume the same value, the following explanation will be given using one parameter) are output as initial phase parameters to the coefficient arithmetic processor <highlight><bold>704</bold></highlight>, and integral parts OX&equals;100 and OY&equals;20 of Xo and Yo are output as pixel position information of the original image to the N&times;1 filter processor <highlight><bold>705</bold></highlight>. Upon completion of all processes at the current pixel of interest, the position of the pixel of interest is shifted by one pixel to continue processes. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> When the scale RPX (RPY)&equals;50, since the address is always divided by 50/100&equals;0.5, the decimal part PIX remains unchanged from an initial phase IX. For example, when the position of X alone is updated by one pixel like X&equals;51 and Y&equals;10, Xo&equals;102.5 (since the same applies to the update process in the sub-scan direction, a description thereof will be omitted) and, hence, PIX&equals;0.5. Even when X increases by one pixel, Xo always increases by 2, and PIX&equals;0.5 remains the same. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> However, such case is an exception. In general, every time the position of the pixel of interest is shifted by one pixel, the value of PIX (PIY) changes, and a filter coefficient value used in the interpolation operation changes for each pixel due to the change in PIX (PIY) . For example, if the scale RP&equals;80, and the initial phase parameter&equals;0, as described above,  
<math-cwu id="MATH-US-00002">
<number>2</number>
<math>
  <mtable>
    <mtr>
      <mtd>
        <mrow>
          <mrow>
            <mrow>
              <mi>when</mi>
              <mo>&it;</mo>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mi>X</mi>
            </mrow>
            <mo>=</mo>
            <mstyle>
              <mtext>&emsp;</mtext>
            </mstyle>
            <mo>&it;</mo>
            <mn>50</mn>
          </mrow>
          <mo>,</mo>
        </mrow>
      </mtd>
    </mtr>
    <mtr>
      <mtd>
        <mrow>
          <mi>Xo</mi>
          <mo>=</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mrow>
            <mrow>
              <mn>50</mn>
              <mo>/</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mn>80</mn>
                  <mo>/</mo>
                  <mn>100</mn>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>+</mo>
            <mn>0</mn>
          </mrow>
        </mrow>
      </mtd>
    </mtr>
    <mtr>
      <mtd>
        <mrow>
          <mrow>
            <mo>=</mo>
            <mstyle>
              <mtext>&emsp;</mtext>
            </mstyle>
            <mo>&it;</mo>
            <mn>62.5</mn>
          </mrow>
          <mo>,</mo>
          <mrow>
            <mrow>
              <mi>and</mi>
              <mo>&it;</mo>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mi>P</mi>
              <mo>&it;</mo>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mi>I</mi>
            </mrow>
            <mo>=</mo>
            <mn>0.5</mn>
          </mrow>
          <mo>,</mo>
        </mrow>
      </mtd>
    </mtr>
  </mtable>
</math>
<math>
  <mtable>
    <mtr>
      <mtd>
        <mrow>
          <mrow>
            <mrow>
              <mi>when</mi>
              <mo>&it;</mo>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mi>X</mi>
            </mrow>
            <mo>=</mo>
            <mstyle>
              <mtext>&emsp;</mtext>
            </mstyle>
            <mo>&it;</mo>
            <mn>51</mn>
          </mrow>
          <mo>,</mo>
        </mrow>
      </mtd>
    </mtr>
    <mtr>
      <mtd>
        <mrow>
          <mi>Xo</mi>
          <mo>=</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mrow>
            <mrow>
              <mn>51</mn>
              <mo>/</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mn>80</mn>
                  <mo>/</mo>
                  <mn>100</mn>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>+</mo>
            <mn>0</mn>
          </mrow>
        </mrow>
      </mtd>
    </mtr>
    <mtr>
      <mtd>
        <mrow>
          <mrow>
            <mo>=</mo>
            <mstyle>
              <mtext>&emsp;</mtext>
            </mstyle>
            <mo>&it;</mo>
            <mn>63.75</mn>
          </mrow>
          <mo>,</mo>
          <mrow>
            <mrow>
              <mi>and</mi>
              <mo>&it;</mo>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mi>P</mi>
              <mo>&it;</mo>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mi>I</mi>
            </mrow>
            <mo>=</mo>
            <mn>0.75</mn>
          </mrow>
          <mo>,</mo>
        </mrow>
      </mtd>
    </mtr>
  </mtable>
</math>
<math>
  <mtable>
    <mtr>
      <mtd>
        <mrow>
          <mrow>
            <mrow>
              <mi>when</mi>
              <mo>&it;</mo>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mi>X</mi>
            </mrow>
            <mo>=</mo>
            <mstyle>
              <mtext>&emsp;</mtext>
            </mstyle>
            <mo>&it;</mo>
            <mn>52</mn>
          </mrow>
          <mo>,</mo>
        </mrow>
      </mtd>
    </mtr>
    <mtr>
      <mtd>
        <mrow>
          <mi>Xo</mi>
          <mo>=</mo>
          <mstyle>
            <mtext>&emsp;</mtext>
          </mstyle>
          <mo>&it;</mo>
          <mrow>
            <mrow>
              <mn>52</mn>
              <mo>/</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mn>80</mn>
                  <mo>/</mo>
                  <mn>100</mn>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>+</mo>
            <mn>0</mn>
          </mrow>
        </mrow>
      </mtd>
    </mtr>
    <mtr>
      <mtd>
        <mrow>
          <mrow>
            <mo>=</mo>
            <mstyle>
              <mtext>&emsp;</mtext>
            </mstyle>
            <mo>&it;</mo>
            <mn>65.0</mn>
          </mrow>
          <mo>,</mo>
          <mrow>
            <mrow>
              <mi>and</mi>
              <mo>&it;</mo>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mi>P</mi>
              <mo>&it;</mo>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mi>I</mi>
            </mrow>
            <mo>=</mo>
            <mn>0</mn>
          </mrow>
        </mrow>
      </mtd>
    </mtr>
  </mtable>
</math>
<mathematica-file id="MATHEMATICA-00002" file="US20030001867A1-20030102-M00002.NB"/>
<image id="EMI-M00002" wi="216.027" he="108.9774" file="US20030001867A1-20030102-M00002.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0072" lvl="7"><number>&lsqb;0072&rsqb;</number> In this manner, when X (or Y) is updated, the value of PIX (PIY) is also updated. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> In this case, the explanation will be continued while RPX&equals;RPY&equals;50. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> In this embodiment, the pixel position is shifted by one pixel in the main scan direction in the next process and, hence, X&equals;51st pixel and Y&equals;10th pixel. The maximum pixel values in the main scan and sub-scan directions change depending on the size of the document table of the copying machine, scan resolution, and scale. If the maximum pixel value in the main scan direction is 5000, the process of this embodiment starts from the 0th pixel in the main scan direction, and when the 4999th pixel is reached, the next process advances one pixel in the sub-scan direction. In the above example, when the process progresses to X&equals;4999th pixel and Y&equals;10th pixel, the position of the pixel of interest advances to X&equals;0th pixel and Y&equals;11th pixel in the next process, and the process continues until the maximum value in the sub-scan direction is reached. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> The coefficient arithmetic processor <highlight><bold>704</bold></highlight> receives the phase information control parameter LC from the phase information change processor <highlight><bold>703</bold></highlight> and phase information PIX from the address arithmetic processor <highlight><bold>702</bold></highlight>, and operates as follows. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows the pixel of interest, and pixels on the original image near the pixel of interest. In <cross-reference target="DRAWINGS">FIG. 8, a</cross-reference> mark &ldquo;X&rdquo; indicates the pixel of interest, and marks &ldquo;&xcirc;&rdquo; indicate pixels on the original image. Since this embodiment uses an 8&times;8 filter, only 8&times;8 pixels on the original image near the pixel of interest are used. The pixel X of interest is set to always fall within the ranges 3&lE;i&lt;4 and 3&lE;j&lt;4 of pixels on the original image near the pixel of interest. Also, position information OX and position information OY of the original image output from the address arithmetic processor <highlight><bold>702</bold></highlight> are set to indicate a position of i&equals;3 and j&equals;3. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> The distance between each pixel on the original image near the pixel of interest, and the pixel of interest is independently calculated in the main scan and sub-scan directions. As shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, pixels are projected in the main scan direction, and distances in the main scan direction are calculated. If AXi (i is an integer ranging from 0 to 7) represents the distance between the i-th pixel and the pixel of interest, we have: </paragraph>
<paragraph id="P-0078" lvl="2"><number>&lsqb;0078&rsqb;</number> AX0&equals;3&plus;PIX </paragraph>
<paragraph id="P-0079" lvl="2"><number>&lsqb;0079&rsqb;</number> AX1&equals;2&plus;PIX </paragraph>
<paragraph id="P-0080" lvl="2"><number>&lsqb;0080&rsqb;</number> AX2&equals;1&plus;PIX </paragraph>
<paragraph id="P-0081" lvl="2"><number>&lsqb;0081&rsqb;</number> AX3&equals;PIX </paragraph>
<paragraph id="P-0082" lvl="2"><number>&lsqb;0082&rsqb;</number> AX4&equals;1&minus;PIX </paragraph>
<paragraph id="P-0083" lvl="2"><number>&lsqb;0083&rsqb;</number> AX5&equals;2&minus;PIX </paragraph>
<paragraph id="P-0084" lvl="2"><number>&lsqb;0084&rsqb;</number> AX6&equals;3&minus;PIX </paragraph>
<paragraph id="P-0085" lvl="2"><number>&lsqb;0085&rsqb;</number> AX7&equals;4&minus;PIX </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> Note that the distance between neighboring pixels is 1 in the above calculations, and 0&lE;PIX (PIY)&lt;1. Distances AY0 to AY7 in the sub-scan direction are similarly calculated. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> From the distance information of AX0 to AX7 and AY0 to AY7, and the phase information control parameter LC, an i-th coefficient Ci in the main scan direction, and a j-th coefficient Cj in the sub-scan direction are independently obtained to calculate an (i-th (main scan), j-th (sub-scan)) coefficient Cij&equals;Ci*Cj. In order to explain the effect of this embodiment, the bi-cubic method will be described first. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> As an arithmetic formula used to obtain coefficients of a filter, a cubic polynomial approximation of a sinc function well known as the bi-cubic method is used. However, such method is an example to calculate filter coefficients, and the present invention is not limited to this. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> In the bi-cubic method, a coefficient C is given by:  
<math-cwu id="MATH-US-00003">
<number>3</number>
<math>
<mtable>
  <mtr>
    <mtd>
      <mtable>
        <mtr>
          <mtd>
            <mrow>
              <mrow>
                <mi>Coefficient</mi>
                <mo>&it;</mo>
                <mstyle>
                  <mtext>&emsp;</mtext>
                </mstyle>
                <mo>&it;</mo>
                <mi>C</mi>
              </mrow>
              <mo>=</mo>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mrow>
                <mn>1</mn>
                <mo>-</mo>
                <mrow>
                  <mn>2</mn>
                  <mo>*</mo>
                  <mi>d</mi>
                  <mo>*</mo>
                  <mi>d</mi>
                </mrow>
                <mo>+</mo>
                <mrow>
                  <mi>d</mi>
                  <mo>*</mo>
                  <mi>d</mi>
                  <mo>*</mo>
                  <mi>d</mi>
                </mrow>
              </mrow>
            </mrow>
          </mtd>
          <mtd>
            <mrow>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mn>1</mn>
                  <mo>&leq;</mo>
                  <mi>d</mi>
                  <mo>&lt;</mo>
                  <mn>1</mn>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mrow>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mrow>
                <mn>4</mn>
                <mo>-</mo>
                <mrow>
                  <mn>8</mn>
                  <mo>*</mo>
                  <mi>d</mi>
                </mrow>
                <mo>+</mo>
                <mrow>
                  <mn>5</mn>
                  <mo>*</mo>
                  <mi>d</mi>
                  <mo>*</mo>
                  <mi>d</mi>
                </mrow>
                <mo>-</mo>
                <mrow>
                  <mi>d</mi>
                  <mo>*</mo>
                  <mi>d</mi>
                  <mo>*</mo>
                  <mi>d</mi>
                </mrow>
              </mrow>
            </mrow>
          </mtd>
          <mtd>
            <mrow>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mn>1</mn>
                  <mo>&leq;</mo>
                  <mi>d</mi>
                  <mo>&lt;</mo>
                  <mn>2</mn>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mrow>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mn>0</mn>
            </mrow>
          </mtd>
          <mtd>
            <mrow>
              <mstyle>
                <mtext>&emsp;</mtext>
              </mstyle>
              <mo>&it;</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mi>d</mi>
                  <mo>&GreaterEqual;</mo>
                  <mn>2</mn>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
          </mtd>
        </mtr>
      </mtable>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>1</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
<mathematica-file id="MATHEMATICA-00003" file="US20030001867A1-20030102-M00003.NB"/>
<image id="EMI-M00003" wi="216.027" he="31.9221" file="US20030001867A1-20030102-M00003.TIF" imf="TIFF" ti="MF"/>
</math-cwu>
</paragraph>
<paragraph id="P-0090" lvl="7"><number>&lsqb;0090&rsqb;</number> where d is the distance from the pixel of interest. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows the relationship between the coefficient C and distance d in the bi-cubic method. In the example shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, &Dgr; indicates the layout of distance information AXi or AYj of this embodiment, and i corresponds to a numeral suffixed to &Dgr; and assumes a value ranging from 0 to 7. The distance d is illustrated to have X shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference> as an origin, around which one graduation indicates unit distance&equals;1. The distance d assumes a positive value even if it is located on the left side of the origin, since it is a distance. More specifically, the position &Dgr;3 is separated PI from the origin, and AX3 (AY3)&equals;PI. The distance between neighboring &Dgr; marks is 1. Hence, AX0 is located at the position &Dgr;0, and AX0&equals;3&plus;PI. A curve in <cross-reference target="DRAWINGS">FIG. 10</cross-reference> indicates a change in values of the coefficient C in accordance with the distance d. When i&equals;2 to 5, corresponding coefficients are assigned; when i&equals;0, 1, 6, and 7, the coefficient is zero. That is, in the bi-cubic method, a filter of 4&times;4 pixels is always used. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows the frequency characteristics of the sinc function. Since the polynomial approximation used in the bi-cubic method is an approximation of the sinc function, it is slightly different from the frequency characteristics shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, but the following explanation will be given under the assumption that the polynomial approximation is equivalent to the characteristics shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, for the sake of simplicity. As can be seen from <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, the sinc function is a band-limiting filter. The frequency bands to be limited are those beyond &plusmn;&frac12; the frequency of the original image. In general, an image having a frequency band beyond the Nyquist frequency cannot be resolved, and its image quality deteriorates due to generation of moir&eacute;. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> For example, when an original image has a resolution of 600 dpi, frequency components that exceed 300 dpi are set to be zero. Upon down-scaling, if this arithmetic formula is used, all the frequency bands of the original image are preserved. If the frequency bands of the original image are left upon down-scaling, when the original image contains an image with periodicity, moir&eacute; is generated, and causes deterioration of image quality. For example, when 50% down-scaling is done, if an original image contains a screen image of 200 dpi or a print using halftone dots of 200 lines, such image looks as if it have an apparent frequency of 400 dpi. Hence, the frequency exceeds 300 dpi as a resolving limit, and image quality deteriorates due to moir&eacute; fringes. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> Hence, this embodiment prevents deterioration of image quality due to moir&eacute; fringes by changing the phase information in correspondence with the scale. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> The process of this embodiment that changes the phase information in correspondence with the scale will be explained below. Normally, since the distance d is that from the pixel of interest, it is given by dXi&equals;AXi (dYj&equals;AYj), but is changed using the phase control parameter LC as follows: </paragraph>
<paragraph id="P-0096" lvl="2"><number>&lsqb;0096&rsqb;</number> dXi&equals;AXi/LC (dYj&equals;AYj/LC) </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> LC is changed in correspondence with the scale. For example, if LC&equals;100/RP (scale), LC&equals;2. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> When LC&equals;1, </paragraph>
<paragraph id="P-0099" lvl="2"><number>&lsqb;0099&rsqb;</number> d&equals;AX0&equals;3.5 Ci&equals;0 </paragraph>
<paragraph id="P-0100" lvl="2"><number>&lsqb;0100&rsqb;</number> d&equals;AX1&equals;2.5 Ci&equals;0 </paragraph>
<paragraph id="P-0101" lvl="2"><number>&lsqb;0101&rsqb;</number> d&equals;AX2&equals;1.5 Ci&equals;&minus;0.125 </paragraph>
<paragraph id="P-0102" lvl="2"><number>&lsqb;0102&rsqb;</number> d&equals;AX3&equals;0.5 Ci&equals;0.625 </paragraph>
<paragraph id="P-0103" lvl="2"><number>&lsqb;0103&rsqb;</number> d&equals;AX4&equals;0.5 Ci&equals;0.625 </paragraph>
<paragraph id="P-0104" lvl="2"><number>&lsqb;0104&rsqb;</number> d&equals;AX5&equals;1.5 Ci&equals;&minus;0.125 </paragraph>
<paragraph id="P-0105" lvl="2"><number>&lsqb;0105&rsqb;</number> d&equals;AX6&equals;2.5 Ci&equals;0 </paragraph>
<paragraph id="P-0106" lvl="2"><number>&lsqb;0106&rsqb;</number> d&equals;AX7&equals;3.5 Ci&equals;0 </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> When LC&equals;2 </paragraph>
<paragraph id="P-0108" lvl="2"><number>&lsqb;0108&rsqb;</number> d&equals;AX0&equals;3.5/2&equals;1.75 Ci&equals;&minus;0.047 </paragraph>
<paragraph id="P-0109" lvl="2"><number>&lsqb;0109&rsqb;</number> d&equals;AX1&equals;2.5/2&equals;1.25 Ci&equals;&minus;0.141 </paragraph>
<paragraph id="P-0110" lvl="2"><number>&lsqb;0110&rsqb;</number> d&equals;AX2&equals;1.5/2&equals;0.75 Ci&equals;0.297 </paragraph>
<paragraph id="P-0111" lvl="2"><number>&lsqb;0111&rsqb;</number> d&equals;AX3&equals;0.5/2&equals;0.5 Ci&equals;0.891 </paragraph>
<paragraph id="P-0112" lvl="2"><number>&lsqb;0112&rsqb;</number> d&equals;AX4&equals;0.5/2&equals;0.5 Ci&equals;0.891 </paragraph>
<paragraph id="P-0113" lvl="2"><number>&lsqb;0113&rsqb;</number> d&equals;AX5&equals;1.5/2&equals;0.75 Ci&equals;0.297 </paragraph>
<paragraph id="P-0114" lvl="2"><number>&lsqb;0114&rsqb;</number> d&equals;AX6&equals;2.5/2&equals;1.25 Ci&equals;&minus;0.141 </paragraph>
<paragraph id="P-0115" lvl="2"><number>&lsqb;0115&rsqb;</number> d&equals;AX7&equals;3.5/2&equals;1.75 Ci&equals;&minus;0.047 </paragraph>
<paragraph id="P-0116" lvl="7"><number>&lsqb;0116&rsqb;</number> Note that each coefficient is rounded off to three decimal places. It is important that when LC&equals;1, only four central coefficients (i&equals;2 to 5) are used (see <cross-reference target="DRAWINGS">FIG. 10</cross-reference>); when LC&equals;2, coefficients are assigned to all i&equals;0 to 7, and a lower-frequency range is band-limited. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> shows the relationship between the coefficient C and distance d when LC&equals;2. <cross-reference target="DRAWINGS">FIG. 13</cross-reference> illustrates the frequency characteristics of a filter when LC&equals;2. Note that the actual frequency characteristics do not form such fair rectangle, since the filter is defined by not the sinc function itself but its approximation, and the number of samples is a finite value. However, the characteristics shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> are approximate to the intended frequency characteristics. As can be seen from <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, the frequency band can be limited to that half the Nyquist frequency, and deterioration of image quality due to generation of moir&eacute; fringes can be suppressed. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> Filter coefficients in the sub-scan direction can be calculated in the same manner as those in the main scan direction. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> In this embodiment, linear filter coefficients have been exemplified. However, in practice, two-dimensional filter coefficients are calculated as follows to execute a filter process in the filter processor <highlight><bold>705</bold></highlight>:</paragraph>
<paragraph lvl="0"><in-line-formula><highlight><italic>Cij&equals;Ci*Cj</italic></highlight></in-line-formula></paragraph>
<paragraph id="P-0120" lvl="7"><number>&lsqb;0120&rsqb;</number> That is, the filter processor <highlight><bold>704</bold></highlight> receives Cij, and sets a filter coefficient at a position corresponding to an address (i-th, j-th) of the 8&times;8 matrix. By setting 8&times;8 coefficients, filter operations are made. The filter arithmetic result is normalized by the sum total of Cij (i&equals;0 to 7, j&equals;0 to 7) when it is output. Note that the filter arithmetic result is normalized to 256 values ranging from 0 to 255 in this embodiment. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> Note that the filter coefficients are independently calculated in the main scan and sub-scan directions. In practice, since the pixel position information (X, Y) of the original image corresponds to (i&equals;3, j&equals;3), 8&times;8 pixel data ranging from (X&minus;3, Y&minus;3) to (X&plus;4, Y&plus;4) of the original image are picked up to make convolution operations. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> The filter processor <highlight><bold>705</bold></highlight> picks up 8&times;8 pixel data of the original image to be processed from the image storage unit <highlight><bold>604</bold></highlight> on the basis of the pixel position information from the address arithmetic processor <highlight><bold>702</bold></highlight>, makes convolution operations based on filter coefficients, and outputs multi-valued image data. The multi-valued image data is input to the LUT <highlight><bold>706</bold></highlight>, which changes the level of the image data in correspondence with the density characteristics of the printer <highlight><bold>300</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 1</cross-reference>) as the output means, i.e., desired density characteristics. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> shows the input/output characteristics of the LUT <highlight><bold>706</bold></highlight> of this embodiment. As shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, if an input signal of a multi-valued image has level &ldquo;192&rdquo;, the LUT outputs an output signal of level &ldquo;145&rdquo;. Therefore, the aforementioned table is generated and set based on the density characteristics of an input signal and those upon printing an output signal, thus allowing density correction. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> The multi-valued image data output from the LUT <highlight><bold>706</bold></highlight> is binarized by the binarization processor <highlight><bold>707</bold></highlight>, and is output to the image storage unit <highlight><bold>604</bold></highlight> as binary image data. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> As described above, according to this embodiment, after a binary image is input and is scaled, a binary image is output. Hence, the image storage size and image transfer size can be reduced to &frac18; of a multi-valued image to be temporarily output, thus attaining resource savings. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> In the above example, a binary image is input. However, the present invention can be applied to a case wherein a multi-valued image is input. </paragraph>
<paragraph id="P-0127" lvl="7"><number>&lsqb;0127&rsqb;</number> &lsqb;Second Embodiment&rsqb;</paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> The second embodiment of the present invention will be described in detail hereinafter with reference to the accompanying drawings. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> Normally, if LC (low-pass coefficient) is not selected, interference fringes (moir&eacute;) which are not observed on a document are likely to be generated in case of a binary image. Especially, such phenomenon is conspicuous when scaling is done at a scale near 100%. This is because the frequency characteristics change largely due to a change in phase when the low-pass coefficient LC&equals;1. In the second embodiment, a method of solving such problem will be explained. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> In the first embodiment mentioned above, the difference of the frequency characteristics has been explained taking low-pass filters when LC&equals;1 and 2 as an example. The frequency characteristics of a low-pass filter formed by the value LC and phase will be explained in more detail below. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> FIGS. <highlight><bold>15</bold></highlight> to <highlight><bold>18</bold></highlight> are graphs of frequency response characteristics according to respective low-pass coefficients and phases when one pixel is 600 dpi. In FIGS. <highlight><bold>15</bold></highlight> to <highlight><bold>18</bold></highlight>, the abscissa plots frequencies (dpi) up to 300 dpi as half (Nyquist frequency) the spatial frequency of an image, and the ordinate plots power. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> shows the frequency characteristics of a filter when LC&equals;1 and phase&equals;zero pixel. <cross-reference target="DRAWINGS">FIG. 16</cross-reference> shows the frequency characteristics of a filter when LC&equals;1 and phase&equals;&frac12; pixel. When phase&equals;&frac12;, the frequency characteristics most separated from those when phase&equals;0 are formed. When phase changes from &frac12; to 1, the frequency characteristics approach those formed when phase&equals;0. Hence, the frequency characteristics of other phases form curves that pass between <cross-reference target="DRAWINGS">FIGS. 15 and 16</cross-reference>. In this manner, when the frequency characteristics vary for respective phases, if a binary image is input, periodic density nonuniformity is generated even when it is a document having no periodicity. Especially, when the scale is near 100%, since density nonuniformity is generated at a long period, it is very conspicuous. When the phase approaches 0 or 1, the resolution hardly lowers, as indicated by the frequency characteristics of <cross-reference target="DRAWINGS">FIG. 15</cross-reference>. When the phase approaches &frac12; pixel, the frequency characteristics shown in <cross-reference target="DRAWINGS">FIG. 16</cross-reference> are obtained, and the resolution lowers compared to <cross-reference target="DRAWINGS">FIG. 15</cross-reference>. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> Since the first embodiment has been explained using the scale&equals;50%, the phase remains unchanged from 0.5 pixel as an initial phase. However, at other scales, the phase value, which is computed by the address arithmetic means based on the pixel of interest which undergoes scaling, varies for respective pixels of interest. For example, if the scale is 99%, the phase returns to an initial phase at a 99-pixel period. For this reason, filter coefficients with different frequency characteristics are repeated at 99-pixel periods, and conspicuous density nonuniformity with a long period is formed. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> For reference, distances d and coefficients AXn (the same applies to AYn) (n&equals;0 to 7) of pixels 0 to 7 of an original image when LC&equals;1 and phase&equals;0 and 0.5 pixel are listed: </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> When LC&equals;1 and phase&equals;zero pixel, </paragraph>
<paragraph id="P-0136" lvl="2"><number>&lsqb;0136&rsqb;</number> d&equals;AX0&equals;3 Ci&equals;0 </paragraph>
<paragraph id="P-0137" lvl="2"><number>&lsqb;0137&rsqb;</number> d&equals;AX1&equals;2 Ci&equals;0 </paragraph>
<paragraph id="P-0138" lvl="2"><number>&lsqb;0138&rsqb;</number> d&equals;AX2&equals;1 Ci&equals;0 </paragraph>
<paragraph id="P-0139" lvl="2"><number>&lsqb;0139&rsqb;</number> d&equals;AX3&equals;0 Ci&equals;1 </paragraph>
<paragraph id="P-0140" lvl="2"><number>&lsqb;0140&rsqb;</number> d&equals;AX4&equals;0 Ci&equals;0 </paragraph>
<paragraph id="P-0141" lvl="2"><number>&lsqb;0141&rsqb;</number> d&equals;AX5&equals;1 Ci&equals;0 </paragraph>
<paragraph id="P-0142" lvl="2"><number>&lsqb;0142&rsqb;</number> d&equals;AX6&equals;2 Ci&equals;0 </paragraph>
<paragraph id="P-0143" lvl="2"><number>&lsqb;0143&rsqb;</number> d&equals;AX7&equals;3 Ci&equals;0 </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> When LC&equals;1 and phase&equals;&frac12; pixel, </paragraph>
<paragraph id="P-0145" lvl="2"><number>&lsqb;0145&rsqb;</number> d&equals;AX0&equals;3.5 Ci&equals;0 </paragraph>
<paragraph id="P-0146" lvl="2"><number>&lsqb;0146&rsqb;</number> d&equals;AX1&equals;2.5 Ci&equals;0 </paragraph>
<paragraph id="P-0147" lvl="2"><number>&lsqb;0147&rsqb;</number> d&equals;AX2&equals;1.5 Ci&equals;&minus;0.125 </paragraph>
<paragraph id="P-0148" lvl="2"><number>&lsqb;0148&rsqb;</number> d&equals;AX3&equals;0.5 Ci&equals;0.625 </paragraph>
<paragraph id="P-0149" lvl="2"><number>&lsqb;0149&rsqb;</number> d&equals;AX4&equals;0.5 Ci&equals;0.625 </paragraph>
<paragraph id="P-0150" lvl="2"><number>&lsqb;0150&rsqb;</number> d&equals;AX5&equals;1.5 Ci&equals;&minus;0.125 </paragraph>
<paragraph id="P-0151" lvl="2"><number>&lsqb;0151&rsqb;</number> d&equals;AX6&equals;2.5 Ci&equals;0 </paragraph>
<paragraph id="P-0152" lvl="2"><number>&lsqb;0152&rsqb;</number> d&equals;AX7&equals;3.5 Ci&equals;0 </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> To prevent such phenomenon, LC is always set to be equal to or larger than 1.3 in this embodiment. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> shows the frequency characteristics when LC&equals;1.3 and phase&equals;zero pixel. <cross-reference target="DRAWINGS">FIG. 18</cross-reference> shows the frequency characteristics when LC&equals;1.3 and phase&equals;&frac12; pixel. As can be seen from <cross-reference target="DRAWINGS">FIGS. 17 and 18</cross-reference>, nearly approximate frequency characteristics are obtained irrespective of phase, unlike the frequency characteristics shown in <cross-reference target="DRAWINGS">FIGS. 15 and 16</cross-reference>. That is, when the value of LC is set to be equal to or larger than 1.3, a low-pass filter effect can be obtained to lower frequencies, and the frequency characteristic difference depending on phases can be minimized, thus suppressing the aforementioned problem. </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> For reference, distances d and coefficients AXn (the same applies to AYn) (n&equals;0 to 7) of pixels 0 to 7 of an original image when LC&equals;1.3 and phase&equals;0 and 0.5 pixel are listed: </paragraph>
<paragraph id="P-0156" lvl="0"><number>&lsqb;0156&rsqb;</number> When LC&equals;1.3 and phase&equals;zero pixel, </paragraph>
<paragraph id="P-0157" lvl="2"><number>&lsqb;0157&rsqb;</number> d&equals;AX0&equals;3 Ci&equals;0 </paragraph>
<paragraph id="P-0158" lvl="2"><number>&lsqb;0158&rsqb;</number> d&equals;AX1&equals;2 Ci&equals;&minus;0.11 </paragraph>
<paragraph id="P-0159" lvl="2"><number>&lsqb;0159&rsqb;</number> d&equals;AX2&equals;1 Ci&equals;0.27 </paragraph>
<paragraph id="P-0160" lvl="2"><number>&lsqb;0160&rsqb;</number> d&equals;AX3&equals;0 Ci&equals;1 </paragraph>
<paragraph id="P-0161" lvl="2"><number>&lsqb;0161&rsqb;</number> d&equals;AX4&equals;0 Ci&equals;0.27 </paragraph>
<paragraph id="P-0162" lvl="2"><number>&lsqb;0162&rsqb;</number> d&equals;AX5&equals;1 Ci&equals;&minus;0.11 </paragraph>
<paragraph id="P-0163" lvl="2"><number>&lsqb;0163&rsqb;</number> d&equals;AX6&equals;2 Ci&equals;0 </paragraph>
<paragraph id="P-0164" lvl="2"><number>&lsqb;0164&rsqb;</number> d&equals;AX7&equals;3 Ci&equals;0 </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> When LC&equals;1 and phase&equals;&frac12; pixel, </paragraph>
<paragraph id="P-0166" lvl="2"><number>&lsqb;0166&rsqb;</number> d&equals;AX0&equals;3.5 Ci&equals;0 </paragraph>
<paragraph id="P-0167" lvl="2"><number>&lsqb;0167&rsqb;</number> d&equals;AX1&equals;2.5 Ci&equals;&minus;0.01 </paragraph>
<paragraph id="P-0168" lvl="2"><number>&lsqb;0168&rsqb;</number> d&equals;AX2&equals;1.5 Ci&equals;&minus;0.11 </paragraph>
<paragraph id="P-0169" lvl="2"><number>&lsqb;0169&rsqb;</number> d&equals;AX3&equals;0.5 Ci&equals;0.76 </paragraph>
<paragraph id="P-0170" lvl="2"><number>&lsqb;0170&rsqb;</number> d&equals;AX4&equals;0.5 Ci&equals;0.76 </paragraph>
<paragraph id="P-0171" lvl="2"><number>&lsqb;0171&rsqb;</number> d&equals;AX5&equals;1.5 Ci&equals;&minus;0.11 </paragraph>
<paragraph id="P-0172" lvl="2"><number>&lsqb;0172&rsqb;</number> d&equals;AX6&equals;2.5 Ci&equals;&minus;0.01 </paragraph>
<paragraph id="P-0173" lvl="2"><number>&lsqb;0173&rsqb;</number> d&equals;AX7&equals;3.5 Ci&equals;0 </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> According to the second embodiment, when LC (low-pass coefficient) is set to be equal to or larger than 1.3, approximate frequency characteristics can be obtained irrespective of phases, and the aforementioned problem can be solved. In other words, occurrence of the aforementioned problem can be sufficiently reduced as long as the power difference at the Nyquist frequency is within 20% in the frequency characteristics of a low-pass filter for each phase, as shown in <cross-reference target="DRAWINGS">FIGS. 17 and 18</cross-reference>. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> Note that the present invention may be applied to either a system constituted by a plurality of devices (e.g., a host computer, interface device, reader, printer, and the like), or an apparatus consisting of a single equipment (e.g., a copying machine, facsimile apparatus, or the like). </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> In the above embodiments, the binary image processor <highlight><bold>602</bold></highlight> is implemented by hardware. However, the objects of the present invention are also achieved by supplying a storage medium (or recording medium), which records a program code of a software program that can implement the functions of the above-mentioned embodiments to the system or apparatus, and reading out and executing the program code stored in the storage medium by a computer (or a CPU or MPU) of the system or apparatus. </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> In this case, the program code itself read out from the storage medium implements the functions of the above-mentioned embodiments, and the storage medium which stores the program code constitutes the present invention. </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> As the storage medium for supplying the program code, for example, a floppy disk, hard disk, optical disk, magneto-optical disk, CD-ROM, CD-R, magnetic tape, nonvolatile memory card, ROM, and the like may be used. </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> The functions of the above-mentioned embodiments may be implemented not only by executing the readout program code by the computer but also by some or all of actual processing operations executed by an OS (operating system) running on the computer on the basis of an instruction of the program code. </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> Furthermore, the functions of the above-mentioned embodiments may be implemented by some or all of actual processing operations executed by a CPU or the like arranged in a function extension board or a function extension unit, which is inserted in or connected to the computer, after the program code read out from the storage medium is written in a memory of the extension board or unit. </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> As described above, according to the above embodiments, since the filter process is done in accordance with the scale, phase information for each pixel of interest, and phase information control parameter (low-pass coefficient) used to control the frequency characteristics of a filter, a scaling process of a high-quality binary image can be done without excessively lowering the resolution while suppressing generation of a periodic stripe pattern such as moir&eacute; or the like. </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> As many apparently widely different embodiments of the present invention can be made without departing from the spirit and scope thereof, it is to be understood that the invention is not limited to the specific embodiments thereof except as defined in the appended claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. An image processing apparatus for scaling input image data, and outputting the scaled image data, comprising: 
<claim-text>means for designating a scale; </claim-text>
<claim-text>phase information determination means for determining phase information, which indicates distances between a position of a pixel of interest after scaling, and neighboring pixels of an original image, for each pixel of interest after scaling; </claim-text>
<claim-text>coefficient arithmetic means for calculating a filter coefficient in a filter process in accordance with the scale, the phase information for each pixel of interest, and a phase information control parameter (low-pass coefficient) used to control frequency characteristics of a filter; and </claim-text>
<claim-text>filter processing means for executing the filter process of input image data by a convolution operation on the basis of the calculated filter coefficient, and outputting multi-valued image data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said coefficient arithmetic means calculates the distances between the pixels of the original image and the position of the pixel of interest after scaling on the original image, which are used in the convolution operation, as distances projected in main scan and sub-scan directions on the basis of the original image pixel position and the phase information, 
<claim-text>said coefficient arithmetic means has one each of main scan and sub-scan phase information control parameters (low-pass coefficients) used to control the frequency characteristics of the filter, and </claim-text>
<claim-text>said coefficient arithmetic means calculates filter coefficients in the main scan and sub-scan directions by a bi-cubic method using the distances changed according to the low-pass coefficients as parameters. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein the distances between the pixels of the original image and the pixel of interest after scaling, which are used in the convolution operation, are changed by dividing the distances projected in the main scan and sub-scan directions by the low-pass coefficients, and the low-pass coefficients are set to be not less than 1.3. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein power differences at frequencies &frac12; of input frequencies of the filter coefficients for all pieces of phase information fall within 20%. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the scale is nearly equal to 100%. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising conversion means for converting a density of the output multi-valued image data in accordance with density characteristics of output means. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein said conversion means comprises a lookup table, and converts to obtain an output result which linearly changes with respect to the density. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising binarization processing means for binarizing the output multi-valued image data. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A processing method for an image processing apparatus for scaling input image data, and outputting the scaled image data, comprising the steps of: 
<claim-text>determining phase information, which indicates distances between a position of a pixel of interest after scaling, and neighboring pixels of an original image, for each pixel of interest after scaling; </claim-text>
<claim-text>calculating a filter coefficient in a filter process in accordance with a scale, a phase information control parameter (low-pass coefficient) used to control frequency characteristics of a filter, and the determined phase information; and </claim-text>
<claim-text>executing the filter process of input image data by a convolution operation on the basis of the calculated filter coefficient, and outputting multi-valued image data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the step of calculating the filter coefficient includes the steps of: 
<claim-text>calculating the distances between the pixels of the original image and the position of the pixel of interest after scaling on the original image, which are used in the convolution operation, as distances projected in main scan and sub-scan directions on the basis of the original image pixel position and the phase information; </claim-text>
<claim-text>having one each of main scan and sub-scan phase information control parameters (low-pass coefficients) used to control the frequency characteristics of the filter; and </claim-text>
<claim-text>calculating filter coefficients in the main scan and sub-scan directions by a bi-cubic method using the distances changed according to the low-pass coefficients as parameters. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the distances between the pixels of the original image and the pixel of interest after scaling, which are used in the convolution operation, are changed by dividing the distances projected in the main scan and sub-scan directions by the low-pass coefficients, and the low-pass coefficients are set to be not less than 1.3. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein power differences at frequencies &frac12; of input frequencies of the filter coefficients for all pieces of phase information fall within 20%. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the scale is nearly equal to 100%. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, further comprising the step of converting a density of the output multi-valued image data in accordance with density characteristics of output means. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the step of converting comprises a lookup table, and includes the step of converting to obtain an output result which linearly changes with respect to the density. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, further comprising the step of binarizing the output multi-valued image data. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A program for making a computer function as: 
<claim-text>means for designating a scale; </claim-text>
<claim-text>phase information determination means for determining phase information, which indicates distances between a position of a pixel of interest after scaling, and neighboring pixels of an original image, for each pixel of interest after scaling; </claim-text>
<claim-text>coefficient arithmetic means for calculating a filter coefficient in a filter process in accordance with the scale, the phase information for each pixel of interest, and a phase information control parameter (low-pass coefficient) used to control frequency characteristics of a filter; and </claim-text>
<claim-text>filter processing means for executing the filter process of input image data by a convolution operation on the basis of the calculated filter coefficient, and outputting multi-valued image data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A computer readable recording medium that records a program of claim <highlight><bold>17</bold></highlight>.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>8</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030001867A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030001867A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030001867A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030001867A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030001867A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030001867A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030001867A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030001867A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030001867A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030001867A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030001867A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030001867A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030001867A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030001867A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
