<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030004941A1-20030102-D00000.TIF SYSTEM "US20030004941A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030004941A1-20030102-D00001.TIF SYSTEM "US20030004941A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030004941A1-20030102-D00002.TIF SYSTEM "US20030004941A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030004941A1-20030102-D00003.TIF SYSTEM "US20030004941A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030004941A1-20030102-D00004.TIF SYSTEM "US20030004941A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030004941A1-20030102-D00005.TIF SYSTEM "US20030004941A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030004941A1-20030102-D00006.TIF SYSTEM "US20030004941A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030004941A1-20030102-D00007.TIF SYSTEM "US20030004941A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030004941A1-20030102-D00008.TIF SYSTEM "US20030004941A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030004941A1-20030102-D00009.TIF SYSTEM "US20030004941A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030004941A1-20030102-D00010.TIF SYSTEM "US20030004941A1-20030102-D00010.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030004941</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10176452</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020619</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>JP2001-200189</doc-number>
</priority-application-number>
<filing-date>20010629</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F007/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>707</class>
<subclass>003000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method, terminal and computer program for keyword searching</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Seiji</given-name>
<family-name>Yamada</family-name>
</name>
<residence>
<residence-non-us>
<city>Ebina-shi</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Junichi</given-name>
<family-name>Satoh</family-name>
</name>
<residence>
<residence-non-us>
<city>Chigasaki-shi</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>International Business Machines Corporation</organization-name>
<address>
<city>Armonk</city>
<state>NY</state>
<country>
<country-code>US</country-code>
</country>
</address>
<assignee-type>03</assignee-type>
</assignee>
<correspondence-address>
<name-1>John L. Rogitz</name-1>
<name-2>Rogitz &amp; Associates</name-2>
<address>
<address-1>Suite 3120</address-1>
<address-2>750 B Street</address-2>
<city>San Diego</city>
<state>CA</state>
<postalcode>92101</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">To provide a keyword search method and a keyword search terminal that can retrieve keywords efficiently. Indicators M<highlight><bold>1 </bold></highlight>and M<highlight><bold>2 </bold></highlight>are displayed on tree-like chart L that shows the logical structure of a document and titles of chapters Ta, sections Tb, and topics Tc, in the document when displaying search result, thereby denoting locations that include keywords specified by the user. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">I. FIELD OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to a keyword search method and a keyword search terminal. </paragraph>
</section>
<section>
<heading lvl="1">II. BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> Personal computers have commonly been used in recent years and it is widely known that various kinds of traditional documents such as dictionaries are available electronically. PC user is able to search keywords in electronic documents using the PC. The user use &ldquo;keyword search function&rdquo; to find out the location where desired terms are presented in the electronic documents. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> In addition, the keyword search function is also available in online helps for both OS (Operating System) and various kinds of application programs installed on PC. By specifying desired keyword(s) for the search function, the user can find a location where the keyword(s) appear in the help text. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The keyword search, from the viewpoint of the search process executed in a computer, is classified into two types; &ldquo;keyword search&rdquo; and &ldquo;full text search&rdquo;. In the &ldquo;keyword search&rdquo;, specific words are registered as keywords beforehand and the search function is performed against only the registered keywords. In the &ldquo;full text search&rdquo;, the search function is performed against all the character strings in a document. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The search results are presented in a window displayed on the computer screen. In many cases, the inside area of the window is divided into several frames (for example, right and left), and the titles of the searched topics are listed in one frame and the contents of the topic the user selected in one frame are displayed in another frame. (In this case, a topic means a minimum unit of the document.) In other cases, a list of keywords registered in a document is displayed in one frame while the contents of the topic to which a selected keyword is registered are displayed in the other frame. </paragraph>
</section>
<section>
<heading lvl="1">III PROBLEMS TO BE SOLVED BY THE INVENTION </heading>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The user of the conventional search method as described above might not feel much inconvenience, but the user is often forced to open many topics before the user finds a desired topic if the document is enormous in volume and there are many topics found by the search operation. Thus, a keyword search operation can be a time-consuming job. One of the typical scenarios for such time-consuming keyword search operation is as follows: </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Assume the user wants to know the definition of a word in a help file for an application program. The user initiates search operation by specifying the word as a keyword expecting that the definition of the word can be found in the help file. After the search operation is completed, all the topics that include the word are extracted. In this case, however, it is not easy for the user to find the desired topic immediately because the user has to see which topic is most suitable for the user&apos;s needs by opening each topic and reading the contents of the topic. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> When specifying keyword(s), the user often selects keyword(s) from a list of all the keywords registered to the document. Or, in some cases, the user inputs the keyword(s) by hand. And if the specified keyword(s) are inappropriate, the user will get no meaningful results. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> It is an objective of the present invention to provide a keyword search method, a keyword search terminal, etc. that enable more efficient keyword search. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> In order to achieve the above objective, the present invention proposes a keyword search method to be executed on a terminal. The method is targeted for electronic documents such as dictionaries, help files, or the like. Because these electronic documents consist of some unit documents, the method tries to find one or more unit documents which include specified keyword(s) by searching through all the keywords which exist in the entire document. After the search operation is completed, the method will show some indicators to highlight which unit document(s) include the specified keywords. Those indicators are shown on a document structure chart which shows the relationship among the unit documents. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> An example of the document structure chart as described above is a tree-like chart which shows the relative position of the topics to the upper groups such as sections and chapters. In this case, a topic is the lowest unit in a unit document, and the topic position is indicated with its title. The position of the upper groups are also indicated with their titles. Indicators are shown on topic and upper group titles. Another example of the document structure chart is a sequence chart, which shows the sequence of the topics in a document. A typical example is a visual representation of linked topics described in a markup language such as HTML (Hypertext Markup Language). In this case, indicators are show with the topics on the sequence chart. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Using the keyword search method as described in the present invention, it is possible to know which portions (namely, unit documents) in the document include the desired keyword(s) by referring to the indicators displayed on the document structure chart. This chart is organized just like table of contents for an actual book, so it is possible for the user to guess if the specific portion really contains the information the user wants by examining the title marked with the indicator, or the title of the upper group (namely section or chapter). </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The method proposed in the present invention uses base data for keyword search. The base data is generated by extracting keywords and their positions in a document before the user begins any actual search operation. Along with generating the base search data, data for showing document structure chart can also be generated by examining how the document is composed of unit documents. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The method proposed in the present invention is more suitable for searching keywords throughout the unit documents in a single document than for searching keywords defined in web pages on the Internet. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The proposed search method can be considered as a keyword search method applied to the documents whose topic data is stored in a database. The search operation is performed using a computer terminal. To enable this search method, keywords are registered to relating topics in advance. It is possible to show all the keywords in a single topic using a pull-down list, so the user selects desired keyword(s) from the pull-down list to initiate search operation. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> In some cases, a trigger to open a dialog panel can be included in the pull-down list. A dialog panel is shown by selecting the trigger, thus enabling the user to specify any desired keyword(s) the user wants. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> As descried earlier, the search result will be shown on a document structure chart with topics marked by indicators. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The proposed search method can be described as a keyword search terminal which performs keyword search operation against documents which consist of unit documents. The keyword search terminal includes a method to specify keywords to be searched and a method to display the search result by showing indicators to highlight where the desired keywords are included in the document. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> Actual search program and documents to which the search function is applied can be placed on a server. In this case, the client terminal provides only search interface. Or the client terminal can host both the data for keyword search and search program itself. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The document data for keyword search can be stored in a database. The client terminal host the database or it can connect to a server which host the database via a network. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The proposed search method can be described as a computer program which enables a computer device to perform keyword search operation against documents stored in a database. The program provides a method to specify keywords to be searched and a method to locate portions where the specified keywords are used in the document, and a method to show the search result by displaying indicators to highlight where the desired keywords are included in the document. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The proposed search method can be described as a computer program which perform keyword search operation against documents stored in a database. The program provides a method to generate base data for keyword search by examining keywords and unit documents in which the keywords are defined. The program also provides a method to generate data to show the relationship among the unit documents, thus enabling the program to show specific unit documents on the document structure chart in order to highlight where the desired keywords are actually used. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The proposed search method can be described as a computer program which perform keyword search operation against documents. The contents data for topics in the document are stored in a database. The program identifies the keywords registered to the topic being shown on the screen when the user initiates the keyword search function, and shows the keywords on a list. The program performs keyword search operation using the keyword which the user selected from the keyword list. </paragraph>
</section>
<section>
<heading lvl="1">PREFERRED EMBODIMENT OF THE INVENTION </heading>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The present invention will be described in detail using the attached drawings as a reference. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a module block diagram of a keyword search system in an embodiment of the present invention. As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the keyword search system is realized on such a terminal (keyword searching terminal) as a PC or the like. The following components comprise the system: document database (database) <highlight><bold>10</bold></highlight> that stores electronic data of one or more documents; keyword search program <highlight><bold>20</bold></highlight> for searching keywords in response to user&apos;s request using the data stored in document database <highlight><bold>10</bold></highlight>; display unit <highlight><bold>30</bold></highlight> for displaying search results, etc. obtained from keyword search program <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Document database <highlight><bold>10</bold></highlight> is physically composed of various kinds of recording media such as HDD (Hard Disk Drive), CD (Compact Disk)-ROM (Read Only Memory), DVD (Digital Versatile Disk)-ROM, or the like, as well as the reading apparatus. Database <highlight><bold>10</bold></highlight> stores electronic data of such documents as, for example, help files for application programs, dictionaries, etc. Each document stored in document database <highlight><bold>10</bold></highlight> has a structure (hereinafter referred to as a logical structure of a document) represented by hierarchical layers such as chapters, sections, topics, etc. A title is given to each of those chapters, sections, topics, etc. A topic is the lowest unit of a document. It has a title and a body text. (In the present invention, the term &ldquo;topic&rdquo; will be used intentionally to represent a text unit which is actually a &ldquo;paragraph&rdquo;. This is to keep consistency of terminology and explanation simplicity.) </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Keyword search program <highlight><bold>20</bold></highlight> is realized by a computer program installed on a PC. The following components comprise keyword search program <highlight><bold>20</bold></highlight>: </paragraph>
<paragraph id="P-0028" lvl="2"><number>&lsqb;0028&rsqb;</number> Document analysis module <highlight><bold>21</bold></highlight> (to be described later) </paragraph>
<paragraph id="P-0029" lvl="2"><number>&lsqb;0029&rsqb;</number> Data repository <highlight><bold>22</bold></highlight> (repository to store information for keyword search) </paragraph>
<paragraph id="P-0030" lvl="2"><number>&lsqb;0030&rsqb;</number> Document data processing module <highlight><bold>23</bold></highlight> (core of keyword search logic) </paragraph>
<paragraph id="P-0031" lvl="2"><number>&lsqb;0031&rsqb;</number> Input processing module <highlight><bold>24</bold></highlight> to receive keywords which the user specified using keyboard and various kinds of input devices </paragraph>
<paragraph id="P-0032" lvl="2"><number>&lsqb;0032&rsqb;</number> Event processing module <highlight><bold>25</bold></highlight> to control document data processing module <highlight><bold>23</bold></highlight> and view control module <highlight><bold>26</bold></highlight> depending on the user&apos;s input received by input processing module <highlight><bold>24</bold></highlight> </paragraph>
<paragraph id="P-0033" lvl="2"><number>&lsqb;0033&rsqb;</number> View control module <highlight><bold>26</bold></highlight> to manage screen image rendered on display unit <highlight><bold>30</bold></highlight> </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> Document analysis module <highlight><bold>21</bold></highlight> includes keyword index creation module <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>and document structure analysis module <highlight><bold>21</bold></highlight><highlight><italic>b</italic></highlight>. Keyword index creation module <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>retrieves data of a document stored in document database <highlight><bold>10</bold></highlight> and creates keyword index table <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>using the extracted keywords. Document structure analysis module <highlight><bold>21</bold></highlight><highlight><italic>b </italic></highlight>analyses the structure of the document to generate document structure table <highlight><bold>22</bold></highlight><highlight><italic>b</italic></highlight>. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Keyword index creation module <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>extracts keywords from a document and assigns a specific index value to each extracted keyword. Keyword index table <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>is loaded with those keywords and indexes. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Document structure analysis module <highlight><bold>21</bold></highlight><highlight><italic>b </italic></highlight>analyzes the logical structure of a document. In the analysis process, topics, sections and chapters in a document are detected. A topic is the lowest unit in a document, and a section consists of topics, and a chapter consists of sections. Then document structure analysis module <highlight><bold>21</bold></highlight><highlight><italic>b </italic></highlight>creates document structure table <highlight><bold>22</bold></highlight><highlight><italic>b </italic></highlight>using the information on the detected topics/sections/chapters in order to show the document structure in a tree-like manner. In creating the document structure table, document structure analysis module <highlight><bold>21</bold></highlight><highlight><italic>b </italic></highlight>analyzes which topic contains which keywords and how topics/sections/chapters are structured hierarchically, then refers to keyword index table <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>to relate keyword index values to document structure. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> Keyword index table <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>and document structure table <highlight><bold>22</bold></highlight><highlight><italic>b </italic></highlight>created by document analysis module <highlight><bold>21</bold></highlight> are stored in data repository <highlight><bold>22</bold></highlight>. If two or more document data are stored in document database <highlight><bold>10</bold></highlight>, keyword index table <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>and document structure table <highlight><bold>22</bold></highlight><highlight><italic>b </italic></highlight>are created for each document and stored in data repository <highlight><bold>22</bold></highlight>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> View control module <highlight><bold>26</bold></highlight> controls how the data generated by document data processing module <highlight><bold>23</bold></highlight> should be displayed on display unit <highlight><bold>30</bold></highlight>. View control module <highlight><bold>26</bold></highlight> splits window W shown on the display unit <highlight><bold>30</bold></highlight> into two frames, for example, right and left frames, as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, so that a document structure chart L is shown in frame F<highlight><bold>1</bold></highlight> and the contents of a topic (unit document) selected by the user is shown in frame F<highlight><bold>2</bold></highlight>. Document structure chart L can be described as follows: </paragraph>
<paragraph id="P-0039" lvl="2"><number>&lsqb;0039&rsqb;</number> A chart to show the structure of a document in tree-like manner </paragraph>
<paragraph id="P-0040" lvl="2"><number>&lsqb;0040&rsqb;</number> A chart to show the mutual relationship among topic Tc, section Tb, and chapter Ta, </paragraph>
<paragraph id="P-0041" lvl="2"><number>&lsqb;0041&rsqb;</number> A chart to show hierarchical structure in a document </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> After the document structure chart is shown on the screen of display unit <highlight><bold>30</bold></highlight>, the user can perform various kinds of operations using mouse pointer shown on the screen. Two examples follow: </paragraph>
<paragraph id="P-0043" lvl="2"><number>&lsqb;0043&rsqb;</number> If the user clicks or double-clicks on chapter icon Ta of document structure chart L in frame F<highlight><bold>1</bold></highlight>, then section icon Tb which is just one layer lower than the chapter indicated by icon Ta appears. Similarly, if the user clicks or double-clicks on section icon Tb, then topic icon Tc appears in frame F<highlight><bold>1</bold></highlight> </paragraph>
<paragraph id="P-0044" lvl="2"><number>&lsqb;0044&rsqb;</number> If the user clicks or double-clicks on topic icon Tc, then the contents of topic Tc appears in frame F<highlight><bold>2</bold></highlight> </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> In order to implement functions described above, event processing module <highlight><bold>25</bold></highlight> receives events form input processing module <highlight><bold>24</bold></highlight> and controls view control module <highlight><bold>26</bold></highlight> depending on the type of the events. Such implementation is nothing special compared to the one widely used in real word application programs. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> If the user points to a specific topic title in frame F<highlight><bold>1</bold></highlight> by the mouse pointer and initiates search operation, event processing module <highlight><bold>25</bold></highlight> makes view control module <highlight><bold>26</bold></highlight> show keywords list on popup menu Pm at the position of the mouse pointer. (If the user initiates keyword search function with text cursor located in the frame which shows topic contents, keywords list is shown on a popup menu at the position of the text cursor.) The data to show the popup menu is obtained from document data processing module <highlight><bold>23</bold></highlight>. In popup menu Pm, all the keywords registered for topic Tc are listed. Document structure table <highlight><bold>22</bold></highlight><highlight><italic>b </italic></highlight>holds the information about which keywords are registered to topic Tc. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Document data processing module <highlight><bold>23</bold></highlight> handles the execution of searching the keyword(s) the user specified using input device such as keyboard or pointing device. Document data processing module <highlight><bold>23</bold></highlight>, however, does not access directly the data in the documents stored in document database <highlight><bold>10</bold></highlight>. It uses keywords index table <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>and document structure table <highlight><bold>22</bold></highlight><highlight><italic>b </italic></highlight>in data repository <highlight><bold>22</bold></highlight>. Both tables are generated by document analysis module <highlight><bold>21</bold></highlight> by analyzing the structure of documents. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> The search result is shown in tree-like chart L which indicates the document structure with indicators M<highlight><bold>1</bold></highlight> and M<highlight><bold>2</bold></highlight> shown on titles of topic Tc, section Tb, and chapter Ta. The user recognizes which topic or section or chapter include the keywords the user specified by referring to indicators M<highlight><bold>1</bold></highlight> and M<highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> Described below is an actual implementation mechanism for the keyword search system proposed in the present invention. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows how document analysis module <highlight><bold>21</bold></highlight> generates keyword index table <highlight><bold>22</bold></highlight>S<highlight><italic>a </italic></highlight>and document structure table <highlight><bold>22</bold></highlight><highlight><italic>b </italic></highlight>before the user initiates keyword search operation. As shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, keyword index creation module <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>of document analysis module <highlight><bold>21</bold></highlight> extracts the keywords from the documents stored in document database <highlight><bold>10</bold></highlight> (step S<highlight><bold>101</bold></highlight>). If the contents of the documents are marked up by a markup language, for example, XML (eXtensible Markup Language), a specific element in the contents can be easily distinguished from other elements. In this case, keyword index creation module <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>can extract keywords in a unit document by searching all the elements marked up by a tag which indicates keyword. If there are multiple occurrences for a single keyword, all of the duplicated keywords are eliminated. Then, keyword index creation module <highlight><bold>21</bold></highlight><highlight><italic>a </italic></highlight>assigns unique index value to each keyword. (step S<highlight><bold>102</bold></highlight>) A pair of a keyword and its index value is written into a record, and all of the records are stored into keyword index tables <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>in data repository <highlight><bold>22</bold></highlight> by keyword index creation module <highlight><bold>21</bold></highlight><highlight><italic>a</italic></highlight>. (step S<highlight><bold>103</bold></highlight>) </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> Next, document structure analysis module <highlight><bold>21</bold></highlight><highlight><italic>b </italic></highlight>analyses the structure of the document (step S<highlight><bold>104</bold></highlight>) by, for example, parsing the contents of a document, and generates document structure table <highlight><bold>22</bold></highlight><highlight><italic>b</italic></highlight>. The table will be used for showing a tree-like chart which indicates the structure of the document. If the logical structure of the document is hierarchical and all the contents of the document are marked up by using a markup language such as XML, the document structure analysis module can recognize the hierarchical structure of the document by parsing the contents and analyzing nesting relationship among markup tags. By repeating that operation, the document structure analysis module generates records for each structure unit such as topic or section or chapter, and stores the records into document structure table <highlight><bold>22</bold></highlight><highlight><italic>b</italic></highlight>. Each record includes node id for the structure unit, parent node id, title of the unit, and keyword indicator. The node id is used for identifying each structure unit such as topic or section or chapter, and assigned a sequential number such as a natural number starting from 1. The parent node id indicates node id for the upper unit such as section or chapter. For example, the parent node id in a record for a topic, and a section exists for the topic as an upper unit, then the parent node id is the node id for that section. The parent node id is used only when the upper unit exits. If no upper unit exits, a special node id (for example, 0) is set. The title field includes the title character string for the unit. No title might be assigned to a topic, and the value for the title field is set null in such a case. The keyword indicator is used as a filed to save all the keywords defined for the unit. The contents of the filed are index values for the keywords, not the keywords themselves. Because it is rather common to register multiple keywords for a single topic, multiple index values can be saved in the keyword indicator field. Document structure analysis module <highlight><bold>21</bold></highlight><highlight><italic>b </italic></highlight>finds index value for each keyword by referring to the keyword index table. The keyword indicator field for an upper unit such as section or chapter includes all the index values for the keywords registered to lower unit(s). If the total number of keywords is very large, a separate table can be defined to save the keyword index values. In this case, each record in the table consists of node id and a single index value for a keyword. If multiple keywords are registered to a single unit, multiple records with the same node id are saved in the table. That way, index values for the keywords registered to or related to each unit in a document can be managed with a single table. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> As described above, document structure analysis module <highlight><bold>21</bold></highlight><highlight><italic>b </italic></highlight>generates document structure table <highlight><bold>22</bold></highlight><highlight><italic>b </italic></highlight>by tracing the structure of a document and creating records for each node in the document. If any keyword(s) are registered to topic Tc and/or section Tb and/or chapter Ta, document structure analysis module <highlight><bold>21</bold></highlight><highlight><italic>b </italic></highlight>records index values for that keywords in the records for topic, section, and chapter, respectively. After generating document structure table <highlight><bold>22</bold></highlight><highlight><italic>b</italic></highlight>, document structure analysis module <highlight><bold>21</bold></highlight><highlight><italic>b </italic></highlight>stores the table into data repository <highlight><bold>22</bold></highlight> (step S<highlight><bold>105</bold></highlight>). One of the possible formats of document contents data can be XML, but a specific mechanism, with which the contents data of a document are represented by document structure control data, keywords data, and topic contents data are kept separately, can also be adopted. For example, contents of topics and linkage among topics are expressed by HTML; Keywords are saved as a separate data; The relationship between keywords and topic contents are saved as document control data. In this case, document structure analysis module <highlight><bold>21</bold></highlight><highlight><italic>b </italic></highlight>can generate keyword index table <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>and document structure table <highlight><bold>22</bold></highlight><highlight><italic>b </italic></highlight>by using the same method as described above. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows internal processing flow when the user attempts to display the contents of topic Tc in a document. It is assumed that keyword index table <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>and document structure table <highlight><bold>22</bold></highlight><highlight><italic>b </italic></highlight>have been created. When the user attempts to open a document stored in document database <highlight><bold>10</bold></highlight>, input processing module <highlight><bold>24</bold></highlight> generates open document event. The event is detected by event processing module <highlight><bold>25</bold></highlight> (step S<highlight><bold>201</bold></highlight>). Event processing module <highlight><bold>25</bold></highlight> notifies the event of document data processing module <highlight><bold>23</bold></highlight> (step S<highlight><bold>202</bold></highlight>). </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> Document data processing module <highlight><bold>23</bold></highlight> identifies which document should be processed from the event, and retrieves data for generating tree-like chart L showing the document structure by referring to document structure table <highlight><bold>22</bold></highlight><highlight><italic>b </italic></highlight>stored in data repository <highlight><bold>22</bold></highlight>. It also retrieves contents data of topic Tc used for displaying initial screen image (step S<highlight><bold>203</bold></highlight>). Event processing unit <highlight><bold>25</bold></highlight> passes to view control module <highlight><bold>26</bold></highlight> all the data obtained from document data processing module <highlight><bold>23</bold></highlight>. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> Using the data, view control module <highlight><bold>26</bold></highlight> draws window W on the screen of display unit <highlight><bold>30</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. The internal area of window W is split into two frames F<highlight><bold>1</bold></highlight> and F<highlight><bold>2</bold></highlight>. Tree-like chart L showing the logical structure of the document is shown in frame F<highlight><bold>1</bold></highlight> and the contents of topic Tc are displayed in frame F<highlight><bold>2</bold></highlight> as initial screen image (step S<highlight><bold>204</bold></highlight>). Nothing might be displayed as initial screen image. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> In frame F<highlight><bold>1</bold></highlight> of window W, the user clicks on the titles for chapter Ta or section Tb or topic Tc shown on tree-like document structure chart L in order to read the contents of the document. For example, if the user clicks on the title of topic Tc, the topic contents are displayed in frame F<highlight><bold>2</bold></highlight>. If the user encounters a word whose definition the user wants to know while reading the document, the user initiates keyword search in order to see if any description of the word can be found in the document. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows how keyword search operation is implemented by keyword search program <highlight><bold>20</bold></highlight> after the user initiates the search function. First, the user attempts to see what keywords are registered to topic Tc. As shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, event processing module <highlight><bold>25</bold></highlight> receives the keyword check event generated by input processing module <highlight><bold>24</bold></highlight> after the user&apos;s attempt (step S<highlight><bold>301</bold></highlight>). </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> Event processing module <highlight><bold>25</bold></highlight> calls view control module <highlight><bold>26</bold></highlight> to detect topic Tc on which the mouse pointer is located or topic Tc whose contents are displayed in frame F<highlight><bold>2</bold></highlight> (step S<highlight><bold>302</bold></highlight>). Next, event processing module <highlight><bold>25</bold></highlight> calls document data processing module <highlight><bold>23</bold></highlight> to get the keywords data registered to topic Tc. In order to respond the request form the event processing module <highlight><bold>25</bold></highlight>, document processing module <highlight><bold>23</bold></highlight> refers to document structure table <highlight><bold>22</bold></highlight><highlight><italic>b </italic></highlight>stored in data repository <highlight><bold>22</bold></highlight> to get index values for the keywords. Then, using the obtained index values, document data processing module <highlight><bold>23</bold></highlight> gets all the keywords registered to topic Tc from keyword index table <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>stored in data repository <highlight><bold>22</bold></highlight> (step S<highlight><bold>303</bold></highlight>). </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> Document data processing module <highlight><bold>23</bold></highlight> returns all the keywords data to event processing module <highlight><bold>25</bold></highlight>. The n event processing module <highlight><bold>23</bold></highlight> passes the keywords data to view control module <highlight><bold>26</bold></highlight>. View control module <highlight><bold>26</bold></highlight> generates presentation data for showing popup menu Pm at the position of mouse pointer shown on window W displayed on display unit <highlight><bold>30</bold></highlight>. The size of popup menu Pm is determined by the total number of the keywords to be shown on the menu. Thus, all the keywords registered to topic Tc (obtained in step S<highlight><bold>303</bold></highlight>) are listed on popup menu Pm as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> (step S<highlight><bold>304</bold></highlight>). </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> Keywords KW<highlight><bold>1</bold></highlight> and KW<highlight><bold>2</bold></highlight> that are registered to topic Tc and obtained in the process of S<highlight><bold>303</bold></highlight> are displayed on pop-up menu Pm shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. Keyword KW<highlight><bold>2</bold></highlight> is a &ldquo;linked keyword&rdquo; related to keyword KW<highlight><bold>1</bold></highlight>. Keywords KW<highlight><bold>2</bold></highlight> such as &ldquo;Primary key&rdquo;, &ldquo;Outer join&rdquo;, and &ldquo;Normalization&rdquo; have been registered as linked keywords to keyword KW<highlight><bold>1</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows an example of those keywords displayed on the pop-up menu. The user lets the linked keywords be displayed by resting the mouse pointer around the &ldquo;&gt;&rdquo; symbol next to keyword KW<highlight><bold>1</bold></highlight> (in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the &ldquo;&gt;&rdquo; symbol is displayed next to keyword &ldquo;Table join&rdquo;). </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> In addition to pre-registered keywords such as KW<highlight><bold>1</bold></highlight> and KW<highlight><bold>2</bold></highlight>, pop-up menu Pm also includes menu item KWe which allows the user to open a dialog box to enter any desired keywords. The user enters character string to specify desired keyword on the dialog panel using input devices. Or it is possible to show a dialog panel on which the user selects any desired keyword from a keyword list or enters keyword directly into an input field. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> The user can select keyword KW<highlight><bold>1</bold></highlight> or one of keywords KW<highlight><bold>2</bold></highlight> on pop-up menu Pm or input any desired keyword on the dialog box, thereby letting keyword search program <highlight><bold>20</bold></highlight> search the keyword. For example, when the user selects keyword KW<highlight><bold>2</bold></highlight> &ldquo;Outer join&rdquo; on popup menu Pm shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, keyword search program <highlight><bold>20</bold></highlight> searches both of keywords KW<highlight><bold>1</bold></highlight> (Table join) and KW<highlight><bold>2</bold></highlight> (Outer join). </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows a flow chart that indicates how the search function is executed by keyword search program <highlight><bold>20</bold></highlight> when the user initiates keyword search by selecting keyword KW<highlight><bold>1</bold></highlight> (or one of keywords KW<highlight><bold>2</bold></highlight>) or by entering keyword directly on the dialog box as described above (hereinafter, the selected or entered keyword will be referred to as &ldquo;specified keyword&rdquo;). As shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, after event processing module <highlight><bold>25</bold></highlight> receives keyword search event, then it notifies document data processing module <highlight><bold>23</bold></highlight> of this event (step S<highlight><bold>401</bold></highlight>). Document data processing module <highlight><bold>23</bold></highlight> refers to keyword index table <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>stored in data repository <highlight><bold>22</bold></highlight> in order to search the specified keyword. If the specified keyword is found in keyword index table <highlight><bold>22</bold></highlight><highlight><italic>a</italic></highlight>, document data processing module <highlight><bold>23</bold></highlight> obtains the index value for the keyword (step S<highlight><bold>402</bold></highlight>). </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Next, document data processing module <highlight><bold>23</bold></highlight> identifies topic Tc that includes index value for the specified keyword by referring to document structure table <highlight><bold>22</bold></highlight><highlight><italic>b </italic></highlight>stored in data repository <highlight><bold>22</bold></highlight>. There might be multiple topics that include a single index value that corresponds to the specified keyword (step S<highlight><bold>403</bold></highlight>). </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> Document data processing module <highlight><bold>23</bold></highlight> obtains positional data of each of identified topics in the document structure (indicated by tree-chart L) by referring to document structure table <highlight><bold>22</bold></highlight><highlight><italic>b</italic></highlight>(step S<highlight><bold>404</bold></highlight>). In this case, positional data of each topic Tc includes information about both section Tb and chapter Ta that are upper layer of the topic, as well as the positional data of the topic itself. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> Positional data obtained by the process as described above is returned to event processing module <highlight><bold>25</bold></highlight> and transferred to view control module <highlight><bold>26</bold></highlight>. Then, based on the positional data, view control module <highlight><bold>26</bold></highlight> displays the search result, or the document structure chart in window W shown on display unit <highlight><bold>30</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> (step S<highlight><bold>405</bold></highlight>). </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> The search result is displayed as tree-like chart L in frame F<highlight><bold>1</bold></highlight> with indicators M<highlight><bold>1</bold></highlight> and M<highlight><bold>2</bold></highlight> shown on titles for searched topics Tc. If the title for section Tb that includes topic Tc, or the title for chapter Ta that includes section Tb, is also displayed in the chart, then the indicators are also shown on the section or chapter title. Indicator M<highlight><bold>1</bold></highlight> denotes the portion that includes specified keyword KW<highlight><bold>1</bold></highlight>. Indicator M<highlight><bold>2</bold></highlight> denotes the portion that includes keyword KW<highlight><bold>2</bold></highlight>. If both indicators Ml and M<highlight><bold>2</bold></highlight> are displayed at the same position, that means the portion pointed by both indicators include keywords KW<highlight><bold>1</bold></highlight> and KW<highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> The user can guess which topic appears to include description the user really wants by examining the positions of indicators M<highlight><bold>1</bold></highlight> and M<highlight><bold>2</bold></highlight> in the tree-like document structure chart, because the user can recognize what the topic with the indicator is all about from the topic&apos;s relative position in the document structure. That is, the user guesses topic contents by examining the title of the section that includes the topic or the title of the chapter that includes the section. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> An example of an actual usage scenario will be described next using <cross-reference target="DRAWINGS">FIGS. 2, 3</cross-reference>, and <highlight><bold>8</bold></highlight>. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> Suppose the user encounters phrase &ldquo;by using outer join&rdquo; while reading the contents of topic Tc displayed in frame F<highlight><bold>2</bold></highlight>. The topic is in a document about building a data processing system, and the topic title is &ldquo;Query,&rdquo; and the title of the section that includes the topic is &ldquo;Designing tables.&rdquo; The user is already familiar with the concept of joining tables, but not familiar with what word KWs (outer join) means, so the user might want to get information about the definition of &ldquo;outer join&rdquo; and how to use it. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> The user positions mouse pointer on the title of topic Tc (Query), which is currently displayed on the tree chart (showing logical structure of the document) in frame F<highlight><bold>1</bold></highlight>. Then the user opens pop-up menu Pm on window W by, for example, clicking right button of the mouse, or selecting an item from menu bar, in order to initiate keyword search. Since keywords KW<highlight><bold>1</bold></highlight> and KW<highlight><bold>2</bold></highlight> have been registered to topic Tc (Query), they are displayed on pop-up menu Pm, thus enabling the user to recognize keyword KW<highlight><bold>1</bold></highlight> (Table join) and keywords KW<highlight><bold>2</bold></highlight> (Primary key, Outer join, and Normalization). Then the user decides to select &ldquo;Outer join&rdquo; for keyword search and initiates searching by using input devices. In this case, because keyword KW<highlight><bold>2</bold></highlight> (Outer join) is linked to keyword KW<highlight><bold>1</bold></highlight> (Table join), both keywords are automatically specified for the keyword search. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> Initiated by the event generated by the user&apos;s operation using input devices, keyword search function is performed by keyword search program <highlight><bold>20</bold></highlight>, and the search result is displayed on the screen of display unit <highlight><bold>30</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the search result is displayed as tree-like chart L in frame F<highlight><bold>1</bold></highlight> of window W with indicators M<highlight><bold>1</bold></highlight> and M<highlight><bold>2</bold></highlight> shown at the titles of topic Tc, section Tb that includes topic Tc, and chapter Ta that includes section Tb. The inside area of frame F<highlight><bold>1</bold></highlight> is automatically scrolled so that the first unit in the document structure is shown on the tree-like chart in frame F<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> Indicator M<highlight><bold>1</bold></highlight> is shown at the title of topic Tc since the topic includes keyword KW<highlight><bold>1</bold></highlight> (table join), and the indicator is also shown at the titles of section Tb and chapter Ta since they are super group of the topic. Indicator M<highlight><bold>2</bold></highlight> is shown in order to highlight a topic that includes keyword KW<highlight><bold>2</bold></highlight> (outer join) and section and chapter that are super group of the topic. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> If both indicators M<highlight><bold>1</bold></highlight> and M<highlight><bold>2</bold></highlight> are shown at the same position, that means a topic includes both keywords KW<highlight><bold>1</bold></highlight> and KW<highlight><bold>2</bold></highlight>. In this case, a section and a chapter that are super group of the topic are also highlighted by indicators M<highlight><bold>1</bold></highlight> and M<highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> The user guesses which topic Tc includes description the user really wants by examining search result screen. In the example shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, both indicators M<highlight><bold>1</bold></highlight> and M<highlight><bold>2</bold></highlight> are shown at section Tb (JOIN) in chapter Ta (SQL), as well as at topic Tc (General Rules). The user can recognize that keyword KWs (outer join) is included in the highlighted topics. In this example, it is assumed that the user wants to know the basic concept and definition of &ldquo;outer join&rdquo;. The user can recognize easily that topic Tc (General Rules) is about syntax description of the SQL language, if the user is a program developer. Thus, the user can guess that the desired description on &ldquo;outer join&rdquo; can be found in section Tb (JOIN). </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> If the user clicks on the title of topic Tb (JOIN), the contents of the topic is displayed in frame F<highlight><bold>2</bold></highlight>. Then the user reads the contents carefully to check if the description of &ldquo;outer join&rdquo; can be found in the contents. If the description is insufficient or is not the one the user needs, the user can scroll tree-like chart L in frame F<highlight><bold>1</bold></highlight> as needed and tries to find appropriate topic(s) (or section(s) or chapter(s)) highlighted by indicators M<highlight><bold>1</bold></highlight> and M<highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> In the method described in the present invention, indicators M<highlight><bold>1</bold></highlight> and M<highlight><bold>2</bold></highlight> are displayed in tree-like chart L showing document structure and titles of topics, sections, and chapters in order to highlight topics that include the keywords the user specified. This enables the user to find topic Tc that appears to include description the user wants as if the user uses table of contents in a book in order to find desired information. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> If the contents of topic Tc is displayed on the screen and the user clicks the right button of a mouse on the contents (or on the topic title), keywords KW<highlight><bold>1</bold></highlight> and KW<highlight><bold>2</bold></highlight> that are registered to topic Tc are displayed on pop-up menu Pm. Selecting keyword from this popup menu Pm is easy, so the user can specify search keyword correctly. In addition, a convenient way is provided for entering keyword directly; that is, the user can open a dialog box to enter keyword by selecting a special menu item on pop-up menu Pm. And linked keyword KW<highlight><bold>2</bold></highlight> that relates to keyword KW<highlight><bold>1</bold></highlight> provides an efficient way for keyword search. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> The user does not need to perform prerequisite tasks such as generating document structure data and extracting keywords in a document because all these task are done by document analysis module <highlight><bold>21</bold></highlight>. If a new document is saved in document database <highlight><bold>10</bold></highlight> and the contents of the document have been marked up with a markup language in order to indicate which words should be treated as keywords, all the necessary tasks described above is done by document analysis module <highlight><bold>21</bold></highlight>. This automatic process makes the creation of base data for keyword search very efficient. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> In the embodiment of the present invention, it is assumed that document database <highlight><bold>10</bold></highlight> is built on various kinds of locally-installed storage device such as HDD, etc. However, possible configuration of software and hardware for the present invention is not limited to the above example. For example, if document database <highlight><bold>10</bold></highlight> is configured as an external database, it is possible to connect to the external system from a PC or a terminal on which keyword search program <highlight><bold>20</bold></highlight> is run via network such as the Internet or LAN. Or it is also possible to distribute keyword search program <highlight><bold>20</bold></highlight> to an external server and to let the program perform keyword search from a remote client. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> In the embodiment of the present invention, it is assumed that keyword index table <highlight><bold>22</bold></highlight><highlight><italic>a </italic></highlight>and document structure table <highlight><bold>22</bold></highlight><highlight><italic>b </italic></highlight>are referenced when performing keyword search. The contents of and format of the data stored in those tables are not limited to any specific or predetermined ones. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> And presentation format of a document structure chart that is shown on the screen of display unit <highlight><bold>30</bold></highlight> is not limited to specific or predetermined one. Presentation format of indicators M<highlight><bold>1</bold></highlight> and M<highlight><bold>2</bold></highlight>, which highlight topics that include specified keywords, is not limited, either. For example, title character strings for topics, sections, and chapters might be displayed in a different color to highlight keyword positions. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference>(<highlight><italic>a</italic></highlight>) shows an example of another style for displaying the logical structure of a document. The chart in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>(<highlight><italic>a</italic></highlight>) is a document structure chart (it can be referred to as sequence chart, or document system chart, or document structure chart) to show the relation among topics (unit documents) such as T<highlight><bold>1</bold></highlight> and T<highlight><bold>2</bold></highlight>. The contents of the topics are marked up with HTML (Hypertext Markup Language) and are usually opened sequentially. The chart shows which linked topic should be opened when the user tries to open a hyper-linked word marked as &ldquo;next&rdquo; in the contents of, for example, topic T<highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> When the user performs a predetermined operation with a specific topic (for example, T<highlight><bold>1</bold></highlight>) selected, pop-up menu Pm is displayed as shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>(<highlight><italic>b</italic></highlight>) just like in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. On the pop-up menu, pre-registered keywords KW<highlight><bold>1</bold></highlight> (and KW<highlight><bold>2</bold></highlight>; not shown) and a trigger item to open a dialog box to enter any character string are displayed. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> If the user performs keyword search by selecting a keyword on pop-up menu Pm, indicator M<highlight><bold>3</bold></highlight> is displayed at the topic that includes the specified keyword as shown <cross-reference target="DRAWINGS">FIG. 10</cross-reference>(<highlight><italic>a</italic></highlight>) after the keyword search is completed. By evaluating the titles of topics T<highlight><bold>1</bold></highlight>, T<highlight><bold>3</bold></highlight> and so on marked with indicators M<highlight><bold>3</bold></highlight>, the user can guess the portions that include the descriptions the user really needs. And, in the chart like the one shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the user can double-clicks on a specific topic (for example, T<highlight><bold>3</bold></highlight>) to open the topic and see the topic contents. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> Furthermore, if multiple sequence sets exist in a document as shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference> (b), and a topic in other sequence than the one where the user initiated keyword search includes the specified keyword, the user can select which sequence set should be displayed by clicking tabs (S<highlight><bold>1</bold></highlight>, S<highlight><bold>2</bold></highlight>, etc.) in order to see the search result. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> The actual modules of keyword search program <highlight><bold>20</bold></highlight> which realizes the keyword search function as proposed by the present invention can be recorded on any recording media such as CD-ROMs, DVD-ROMs, and hard disks, or can be loaded on physical memory so that the modules can be read by a computer. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> The source device for sending those modules as described above can be composed of devices to read a CD-ROM or DVD-ROM, hard disk, and memory, and network devices to send the modules via the Internet, LAN, or the like. Such source device is suitable for installing the modules that is capable of performing keyword search described above on a PC or the like. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> While the preferred form of the present invention has been described, it is to be understood that modifications will be apparent to those skilled in the field without departing from the concept of the invention. </paragraph>
</section>
<section>
<heading lvl="1">ADVANTAGES OF THE INVENTION </heading>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> Using the search method described in the present invention, it is possible for the user to search keywords efficiently and find easily portions that include description that the user needs.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a module diagram of the keyword search system in an embodiment of the present invention; </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is an example image of a pop-up menu that is displayed when the user initiates keyword search operation; </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is an example of search-result screen image that displays indicators showing the portions that include specified keyword(s); </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a flow c hart that shows the process of how keyword in dex table and document structure table are generated; </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a flow chart that shows the process of how the contents of a specific topic in a document are displayed; </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flow chart that shows the process of how the keywords registered to a specific topic are listed; </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a flow chart that shows how keyword search function is processed; </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is an example screen image that shows the keyword search result. In the left frame, indicators are displayed at the portions that include specified keywords, and the contents for a specific topic are displayed in another frame; </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is another example of a chart that shows logical structure of a document; and </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is an example of search result screen image that shows how indicators are displayed at the portions that include specified keywords.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF SYMBOLS </heading>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> 10 . . . Document database (Database) </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> 20 . . . Keyword search program </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> 21 . . . Document analysis module </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> 21a . . . Keyword index creation module (For generating index data for keyword search) </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> 21b . . . Document structure analysis module (For generating a chart that shows the logical structure of a document) </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> 22 . . . Data repository (For storing data for keyword search) </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> 22a . . . Keyword index table (Data used for keyword search) </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> 22b . . . Document structure table (Data used for keyword search) </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> 23 . . . Document data processing module (For handling data for document structure and keyword index values in order to process keyword search request) </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> 24 . . . Input processing module (For handling user&apos;s input to specify keywords) </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> 30 . . . Display unit (For displaying search result) KW<highlight><bold>1</bold></highlight>, KW<highlight><bold>2</bold></highlight> ... Keyword(s) </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> KWe . . . Menu item to open a dialog panel </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> L . . . Tree-like chart that shows document structure (Chart showing hierarchical structure in a document) </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> M<highlight><bold>1</bold></highlight>, M<highlight><bold>2</bold></highlight>, M<highlight><bold>3</bold></highlight> . . . Indicators (Identification information) </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> Pm . . . Pop-up menu (List of keywords) </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> Ta Chapter (Group of sections) </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> Tb . . . Section (Group of topics) </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> Tc, T1, T2, T3 . . . Topic (Unit document)</paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">We claim </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for searching a document consisting of a plurality of unit documents by a keyword, data of said document being stored in a database, comprising: 
<claim-text>accepting a specified keyword for search; </claim-text>
<claim-text>searching preregistered search data from said document to identify a unit document that contains said specified keyword; and </claim-text>
<claim-text>displaying a document structure chart that shows a relation among said plurality of unit documents of said document, as well as the indicator that specifies a unit document that contains said keyword in said chart. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the steps of: 
<claim-text>prior to said step of accepting a specified keyword, based on data of said document stored in said database extracting said keyword contained in said document and the positional information of said keyword in said document to generate said search data; and </claim-text>
<claim-text>extracting a relation among said plurality of unit documents of said document based on data of said document stored in said database to generate data of said document structure chart. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, 
<claim-text>wherein said step of displaying said indicator comprises the steps of: displaying a </claim-text>
<claim-text>relation between a topic that is the minimum unit of said unit document and a group consisting of a plurality of topics as said document structure chart; and displaying said indicator for both a title of said topic that contains said keyword and a title of said group that contains said topic. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, 
<claim-text>wherein said step of displaying said indicator comprises the steps of: displaying a sequence chart showing a relation among topics, each of said topics being the minimum unit of said unit document, as said document structure chart; and displaying said indicator for said topic that contains said keyword. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A method for searching a document consisting of a plurality of topics by a keyword, data of said document being stored in a database, comprising the steps of: 
<claim-text>accepting a request for keyword search while said document is displayed; </claim-text>
<claim-text>identifying a topic of said document displayed when said request is accepted; </claim-text>
<claim-text>extracting a keyword registered in relation to said identified topic; </claim-text>
<claim-text>displaying a list of extracted keywords; accepting a keyword for search, specified in said list of keywords; and </claim-text>
<claim-text>searching said document for said specified keyword. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein said list is displayed together with an input field for accepting input of a character string or a menu item for displaying said input field; and 
<claim-text>wherein said step of searching, uses said character string inputted in said input field as a keyword for said searching. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein said step of searching further includes: identifying a portion in said document, said portion containing said specified keyword; and displaying a structure chart of said document consisting of a plurality of topics together with the indicator that indicates a portion containing said keyword in said structure chart. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A terminal for searching a document consisting of a plurality of unit documents by a keyword, comprising: 
<claim-text>a keyword accepting unit for accepting a search keyword; and </claim-text>
<claim-text>a search result displaying unit for displaying a document structure chart that shows a relation among said unit documents of said document together with the indicator that indicates a portion that contains said keyword in said document structure chart as a result of searching said document according to said specified keyword. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The terminal according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, further comprising: 
<claim-text>a search data storing unit for storing search data in which a corresponding keyword is registered for each document; and </claim-text>
<claim-text>a searching unit for searching said search data and identifying a unit document that contains said specified keyword accepted by said keyword accepting unit. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The terminal according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, further comprising: 
<claim-text>a search data generating unit for extracting a keyword contained in said document and a unit document related to said keyword based on data of said document to generate said search data stored in said database; and </claim-text>
<claim-text>a document structure chart generating unit for generating data of said document structure chart based on the data of said document, stored in said database. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A computer program product, in a computer-readable medium for performing a keyword search in a data processing system for a document of which data is stored in a database, comprising: 
<claim-text>instructions for accepting a specified search keyword; </claim-text>
<claim-text>instructions for identifying a portion in said document, which contains said keyword; and </claim-text>
<claim-text>instructions for displaying a chart of the logical structure of said document together with the indicator that indicates a portion containing said keyword in said structure chart. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The computer program product according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein said instructions for identifying the portion containing said keyword comprises instructions for searching preregistered search data from said document to identify the portion containing said keyword based on said search data. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The computer program product according to <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, further comprising: 
<claim-text>prior to said instructions for accepting said specified keyword: </claim-text>
<claim-text>instructions for accepting a request for keyword search while said document is displayed; </claim-text>
<claim-text>instructions for identifying a topic of said document displayed when said request is accepted; </claim-text>
<claim-text>instructions for extracting a keyword registered in advance in relation to said identified topic; and </claim-text>
<claim-text>instructions for displaying a list of extracted keywords and prompting specification of a keyword for search in said list. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A computer program product, in a computer-readable medium, for searching a document, in a data processing system, by a keyword whose data is stored in a database, comprising: 
<claim-text>instructions for generating search data by extracting a keyword contained in said document and information on a unit document related to said keyword based on data of said document stored in said database; </claim-text>
<claim-text>instructions for generating data of a document structure chart that shows a relation among unit documents of said document based on the data of said document stored in said database; </claim-text>
<claim-text>instructions for accepting a specified search keyword; </claim-text>
<claim-text>instructions for identifying a unit document that contains said keyword in said document; and </claim-text>
<claim-text>instructions for displaying the indicator that indicates said identified unit document in said document structure chart. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A computer program product, in a computer-readable medium, for performing a keyword search, in a data processing system for a document consisting of a plurality of topics, data of said document being stored in a database, comprising: 
<claim-text>instructions for accepting a request for keyword search while said document is displayed; </claim-text>
<claim-text>instructions for identifying a topic of said document displayed when said request is accepted; </claim-text>
<claim-text>instructions for extracting a keyword registered in advance in relation to said identified topic; </claim-text>
<claim-text>instructions for displaying a list of extracted keywords to prompt specification of a keyword for search in said list; and </claim-text>
<claim-text>instructions for searching a keyword specified in response to said prompt in said document.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030004941A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030004941A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030004941A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030004941A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030004941A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030004941A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030004941A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030004941A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030004941A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030004941A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030004941A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
