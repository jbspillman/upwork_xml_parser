<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002184A1-20030102-D00000.TIF SYSTEM "US20030002184A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00001.TIF SYSTEM "US20030002184A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00002.TIF SYSTEM "US20030002184A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00003.TIF SYSTEM "US20030002184A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00004.TIF SYSTEM "US20030002184A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00005.TIF SYSTEM "US20030002184A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00006.TIF SYSTEM "US20030002184A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00007.TIF SYSTEM "US20030002184A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00008.TIF SYSTEM "US20030002184A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00009.TIF SYSTEM "US20030002184A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00010.TIF SYSTEM "US20030002184A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00011.TIF SYSTEM "US20030002184A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00012.TIF SYSTEM "US20030002184A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00013.TIF SYSTEM "US20030002184A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00014.TIF SYSTEM "US20030002184A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00015.TIF SYSTEM "US20030002184A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00016.TIF SYSTEM "US20030002184A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00017.TIF SYSTEM "US20030002184A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00018.TIF SYSTEM "US20030002184A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00019.TIF SYSTEM "US20030002184A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00020.TIF SYSTEM "US20030002184A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00021.TIF SYSTEM "US20030002184A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00022.TIF SYSTEM "US20030002184A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00023.TIF SYSTEM "US20030002184A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00024.TIF SYSTEM "US20030002184A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00025.TIF SYSTEM "US20030002184A1-20030102-D00025.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00026.TIF SYSTEM "US20030002184A1-20030102-D00026.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00027.TIF SYSTEM "US20030002184A1-20030102-D00027.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00028.TIF SYSTEM "US20030002184A1-20030102-D00028.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00029.TIF SYSTEM "US20030002184A1-20030102-D00029.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00030.TIF SYSTEM "US20030002184A1-20030102-D00030.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00031.TIF SYSTEM "US20030002184A1-20030102-D00031.TIF" NDATA TIF>
<!ENTITY US20030002184A1-20030102-D00032.TIF SYSTEM "US20030002184A1-20030102-D00032.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002184</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10178619</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020625</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>P2001-198296</doc-number>
</priority-application-number>
<filing-date>20010629</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>P2001-201415</doc-number>
</priority-application-number>
<filing-date>20010702</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>P2001-217406</doc-number>
</priority-application-number>
<filing-date>20010718</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G11B005/02</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>G11B020/06</ipc>
</classification-ipc-secondary>
<classification-ipc-secondary>
<ipc>G11B020/08</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>360</class>
<subclass>029000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Digital signal modulation method, digital signal modulation apparatus, encoding method, encoding apparatus, storage medium, transmission apparatus and program</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Atsushi</given-name>
<family-name>Hayami</family-name>
</name>
<residence>
<residence-non-us>
<city>Kanagawa-ken</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Tsuyoshi</given-name>
<family-name>Oki</family-name>
</name>
<residence>
<residence-non-us>
<city>Kanagawa-ken</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Toshio</given-name>
<family-name>Kuroiwa</family-name>
</name>
<residence>
<residence-non-us>
<city>Kanagawa-ken</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>NATH &amp; ASSOCIATES</name-1>
<name-2></name-2>
<address>
<address-1>1030 15th STREET</address-1>
<address-2>6TH FLOOR</address-2>
<city>WASHINGTON</city>
<state>DC</state>
<postalcode>20005</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">First and second synchronous words having respective numbers of times of inversion different from each other in NRZI conversion are generated in a synchronous word generation portion, and first and second code word series data are generated by arranging code word data generated making reference to a run-length coding table after these two synchronous words. With respect to the first and second code word series data, DSV calculation results stored in two DSV calculation peak value memories corresponding to these data are compared with each other by a peak value comparison portion. Based on a comparison result, the code word series data having a smaller direct-current component generated in NRZI conversion is selected. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to a digital signal modulation method capable of accurately performing lower component suppression control for suppressing a lower component in a recording code series when converting data of a digital information signal consisting of p (p is a positive integer) bits into a code word consisting of q (q is an integer larger than p) bits and recording it on a high-density storage medium such as an optical disk, a magnetic disk and a magnetic tape by using a code series satisfying a predetermined run-length limited rule, a digital signal modulation apparatus, a storage medium, a transmission apparatus and a program, and to an encoding method used when recording/reproducing data to/from a storage medium or the like, an encoding apparatus, a storage medium, and a program for realizing the encoding method. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of the Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> As a digital signal modulation mode used for recording a digital information signal on a digital storage medium, a modulation mode with less direct-current signal components included in a modulated signal has been developed, and a digital signal recording apparatus employing this modulation mode has come into practical use. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> There is an NRZ (Non Return to Zero) mode as a basic digital modulation mode. In this mode, however, a direct-current component is generated when digital-modulating a digital information signal in which 0 or 1 longly continues, and this direct-current component can not be used in, for example, magnetic recording which can not reproduce a direct-current signal. As a countermeasure, a modulation method such as a mirror code or a mirror square code which does not produce a large quantity of direct-current components has-been developed. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The mirror code is a technique which generates a digital modulation signal by a combination of T, 1.5T and 2T with respect to a bit interval T, but a small amount of direct-current components remains in the modulation signal. The mirror square code is a digital modulation mode which further reduces the direct-current signal components by adaptively selecting one which generates a smaller amount of the direct-current component from inversion or non-inversion with <highlight><bold>1</bold></highlight> at the center when <highlight><bold>1</bold></highlight> longly continues in an information signal. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> In the mirror square code which reduces its direct-current signal components, a minimum bit inversion interval is T and a maximum bit inversion interval is not less than 3T. Therefore, a ratio of a maximum frequency component and a minimum signal frequency of a digital modulation signal is a value not less than 3, and a signal in such a frequency band is recorded on a storage medium. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> On the other hand, in the information-oriented society realized by transmission and recording of digital information signals, both a number of types of information to be processed and a quantity of information are increasing, and materialization of an efficient digital modulation mode for effectively transmitting and recording digital information signals which tend to increase has been long-awaited. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The efficient digital modulation mode enables a larger quantity of digital information signals to be recorded on a digital signal storage medium having a restricted recording frequency capacity by performing digital modulation using modulation signal frequency components which is as low as possible. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Further, although the digital modulation signal recorded on the digital signal storage medium is a low direct-current component because of a magnetic reproduction characteristic in case of magnetic recording, reduction in level of the direct-current component included in the digital modulation signal is demanded in order to perform tracking control which obtains a digital modulation signal while tracking directly above a recording track even in case of a discoid high-density storage medium such as an optical disk. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> In this manner, the characteristic of the digital modulation signal in the present day lies in that a frequency of the modulation signal is a low frequency band, and it is often the case that the direct-current frequency component is obtained as a signal which is as low as possible. Furthermore, a technique for conversion encoding is often used in order to obtain such a modulation signal. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The conversion encoding is a method such as 8-10 block conversion which encodes 256 types of information signals each consisting of, e.g., eight bits by selecting 256 types of codes having a number of 1 and that of 0 being substantially equal to each other and a smaller quantity of direct-components from 1024 codes each of which can be represented by 10 bits, and this method is also adopted in DAT (Digital Audio Tape recorder). </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> Moreover, although a CD (Compact Disc) adopts an EFM (Eight to Fourteen Modulation) mode which converts an eight-bit signal into a 14-bit signal series, the EFM modulation mode uses an encoded series in which a redundant bit used for suppressing the direct-current component is set. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> In addition, since the encoding efficiency can be further increased as long as a digital conversion signal in which the direct-current component is suppressed can be generated without setting such a redundant bit, there has been developed a method which reduces the direct-current component by applying DSV (Digital Sum Value) control on a recording code series to be recorded on a high-density information recording medium. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Suppression of the digital modulation signal lower component in a high-density discoid optical storage medium typified by the optical disk aims at minimization of adverse affect on performance for executing high-speed servo control by a lower component of the recording signal series which has been mixed in a focus servo signal or the like as well as a tracking servo signal, and also reduction in undesirable servo control operations such as an erroneous control operation by which a reference level for signal detection fluctuates when detecting an error signal for servo. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> As to reduction in the signal component applied to such undesirable servo control, for example, the DVD Forum which operates for DVD (Digital versatile Disc) standardization expressly provides a method of DSV control in the physical specification of a DVD-ROM. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Meanwhile, the DSV control method expressly provided in the DVD-ROM physical specification reduces generation of an undesirable error signal by decreasing an absolute value of a DSV value at the point in time of DSV control. Although the lower component in the digital modulation signal can be reduced, there has been demanded establishment of a technique for generating the digital modulation signal for effecting high-performance DSV control which does not generate the lower component at any other point in time than DSV control. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> As to such a method for effecting DSV control by detecting a peak voltage value of the DSV signal, although Japanese patent application laid-open No.2000-295109 &ldquo;Digital Modulation Apparatus&rdquo; is disclosed, its DSV control method optimizes the DSV control by using a data scrambling technique, and it can not be applied to, e.g., a digital modulation mode which is based on block conversion using no data scrambling technique. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> In view of he above-described drawbacks, it is an object of the present invention to provide a digital signal modulation method which performs run-length limited encoding targeting at a discoid high-density storage medium such as optical disk by using encode tables which convert data consisting of p bits into a code word consisting of q bits, enables a DSV control method having a better direct-current component suppression characteristic than that in the prior art and can inexpensively provide a structure of a modulation apparatus adopting the DSV control method, a digital signal modulation apparatus, a storage medium, a transmission apparatus, and a program. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> It is another object of the present invention to provide a digital signal modulation method which can be applied to a digital modulation mode based on block conversion using no data scrambling technique, a digital signal modulation apparatus, a storage medium, a transmission apparatus and a program. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> It is still another object of the present invention to provide an encoding method which can demonstrate the higher DC suppression capability as compared with the prior art in the same degree of redundancy, an encoding apparatus, a storage medium and a program. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> To achieve this aim, there is provided a digital signal modulation method which generates a code word data group by repeating a of number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is a larger integer than p), generates synchronous words at predetermined bit intervals, obtains code word series data by arranging the code word data group after the generated synchronous words, and obtains a signal to be supplied to a storage medium or a transmission medium by NRZI-converting the obtained code word series signal, the digital signal modulation method comprising: a first step of simultaneously generating a first synchronous word and a second synchronous word, having respective numbers of times of inversion different from each other, by the NRZI conversion; a second step of generating the code word data group based on a run-length encoding method which restricts a run length in a predetermined range, generating first code word series data by arranging the generated code word data group after the first synchronous word, and generating second code word series data by arranging the code word data group after the second synchronous word; a third step of obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting the first code word series data and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting the second code word series data based on the first and second code word series data generated at the second step; and a fourth step of comparing the first direct-current component data with the second direct-current component data, and selecting and supplying one having smaller direct-current component data among the first code word series data and the second code word series data. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Additionally, to achieve this aim, there is provided a program which causes a computer to execute the first to fourth steps defined in the above aspect of the present invention. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Additionally, to achieve this aim, there is provided a digital signal modulation method which generates, when specific source data with which first code word data and second code word data having different patterns can be generated is supplied in case of generating a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is a larger integer than p), generates the code word data group based on source data supplied after the specific source data, obtains code word series data in which the generated code word data group is arranged after the first code word or the second code word, and obtains a signal to be supplied to a storage medium or a transmission medium by NRZI-converting the obtained code word series signal, the digital signal modulation method comprising: a first step of generating the first code word and the second code word having respective numbers of times of inversion different from each other, by the NRZI conversion; a second step of generating the code word data group based on a run-length encoding method which restricts a run length in a predetermined range, generating first code word series data by arranging the generated code word data group after the first code word, and generating second code word series data by arranging the code word data group after the second code word; a third step of obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting the first code word series data and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting the second code word series data based on the first and second code word series data generated at the second step; and a fourth step of comparing the first direct-current component data with the second direct-current component data, and selecting and supplying one having smaller direct-current data among the first code word series data and the second code word series data. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Additionally, to achieve this aim, there is provided a program which causes a computer to execute the first to fourth steps defined in the above aspect of the present invention. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Further, to achieve this aim, there is provided a digital signal modulation apparatus which generates a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is a larger integer than p), generates synchronous words at predetermined bit intervals, obtains code word series data by arranging the code word data group after the generated synchronous words, and obtains a signal to be supplied to a storage medium or a transmission medium by NRZI-converting the obtained code word series data, the digital signal modulation apparatus comprising: synchronous word generating means for simultaneously generating a first synchronous word and a second synchronous word having respective numbers of times of inversion different from each other, by the NRZI conversion; code word series data generating means for generating the code word data group based on a run-length encoding method which restricts a run length in a predetermined range, generating first code word series data by arranging the generated code word data group after the first synchronous word, and generating second code word series data by arranging the code word data group after the second synchronous word; DSV calculating means for receiving the first and second code word series data generated by the code word series data generating means, obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting the first code word series data, and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting the second code word series data; and code word outputting means for comparing the first direct-current component data with the second direct-current component data, and selecting and supplying one having smaller direct-current data from the first code word series data and the second code word series data. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Furthermore, in order to achieve the above-described aim, there is provided a digital signal modulation apparatus which generates, when specific source data with which first code word data and second code word data having different patterns can be generated is supplied in case of generating a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is a larger integer than p), generates the code word data group based on source data supplied after the specific source data, obtains code word series data in which the generated code word data group is arranged after the first code word or the second code word, and obtains a signal to be supplied to a storage medium or a transmission medium by NRZI-converting the obtained code word series data, the digital signal modulation apparatus comprising: code word generating means for generating the first code word and the second code word having respective numbers of times of inversion different from each other, by the NRZI conversion; code word series data generating means for generating the code word data group based on a run-length encoding method which restricts a run length in a predetermined range, generating first code word series data by arranging the generated code word data group after the first code word, and generating second code word series data by arranging the code word data group after the second code word; DSV calculating means for receiving the first and second code word series data generated by the code word series data generating means, obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting the first code word series data, and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting the second code word series data; and code word outputting means for comparing the first direct-current component data with the second direct-current component data, and selecting and supplying one having smaller direct-current component data from the first code word series data and the second code word series data. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Moreover, in order to achieve the above-described aim, there is provided a digital signal storage medium on which a signal is recorded, signal of which is obtained by generating a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is a larger integer than p), generating synchronous words at predetermined bit intervals, arranging the code word data group after the generated synchronous words in order to obtain code word series data, and NRZI-converting the code word series signal, wherein the digital signal storage medium has the code word series data recorded thereon, the code word series data being obtained by the following steps of: simultaneously generating a first synchronous word and a second synchronous word having respective numbers of times of inversion different from each other, by the NRZI conversion; generating the code word data group based on a run-length encoding method which restricts a run length in a predetermined range, generating a first code word series data by arranging the generated code word data group after the first synchronous word, and generating second code word series data by arranging the code word data group after the second synchronous word; obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting the first code word series data, and obtaining second direct-current data concerning a direct-current component generated when NRZI-converting the second code word series data; and comparing the first direct-current component data with the second direct-current component data, and selecting one having smaller direct-current data from the first code word series data and the second code word series data, thereby recoding said selected and obtained code word series data. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> In addition, in order to achieve the above-described aim, there is provided a digital signal storage medium on which a signal is recorded, signal of which is obtained by generating, when specific source data with which first code word data and second code word data having different patterns can be generated is supplied in case of generating a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is a larger integer than p), the code word data group based on source data supplied after the specific source data, arranging the generated code word data group after the first code word or the second code word in order to obtain code word series data, and NRZI-converting the obtained code word series signal, wherein the digital signal storage medium has the code word series data recorded thereon, the code word series data being obtained by the steps of: generating the first code word and the second code word having respective numbers of times of inversion different from each other, by the NRZI conversion; generating the code word data group based on a run-length encoding method which restricts a run length in a predetermined range, generating first code word series data by arranging the generated code word data group after the first code word, and generating second code word series data by arranging the code word data group after the second code word; obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting the first code word series data, and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting the second code word series data; and comparing the first direct-current component data with the second direct-current component data, and selecting one having smaller direct-current data from the first code word series data and the second code word series data, thereby recording said selected and obtained code word series data. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Additionally, in order to achieve this aim, there is provided a digital signal modulation method which generates a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is a larger integer than p), generates synchronous words at predetermined bit intervals, obtains code word series data by arranging the code word data group after the generated synchronous words, and NRZI-converts and outputs a signal of the obtained code word series data, the digital signal modulation method comprising: a first step of simultaneously generating a first synchronous word and a second synchronous word having respective numbers of times of inversion different from each other, by the NRZI conversion; a second step of generating the code word data group based on a run-length limited rule which restricts a run length in a predetermined range, generating first code word series data by arranging the generated code word data group after the first synchronous word, and generating second code word series data by arranging the code word data group after the second synchronous word; a third step of obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting the first code word series data and obtaining second direct-current component data concerning a direct-current generated when NRZI-converting the second code word series data based on the first and second code word series data generated at the second step; a fourth step of obtaining first direct-current component square data by squaring the first direct-current component data obtained at the predetermined bit intervals and obtaining second direct-current component square data by squaring the second direct-current component data obtained at the predetermined bit intervals; and a fifth step of comparing the first direct-current component square data with the second direct-current component square data, and selecting and outputting one having smaller direct-current component square data from the first code word series data and the second code word series data. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> Further, in order to achieve the above-described aim, there is provided a digital signal modulation method which generates a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is a larger integer than p), generates the code word data group based source data inputted after specific source data when the specific source data with which a first code word and a second code word having different patterns can be generated is inputted in case of generating synchronous words at predetermined bit intervals, arranges the generated code word data group after the first code word or the second code word, obtains code word series data in which the synchronous words are inserted at the predetermined bit intervals, and NRZI-converts a signal of the obtained code word series data and output the NRZI-converted signal, the digital signal modulation method comprising: a first step of generating the first code word and the second code word having respective numbers of times of inversion different from each other, by the NRZI conversion; a second step of generating the code word data group based on a run-length limited rule which restricts a run length in a predetermined range, generating first code word series data by arranging the generated code word data group after the first code word, and generating second code word series data by arranging the code word data group after the second code word; a third step of obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting the first code word series data and obtaining second direct-current component data concerning a direct-current generated when NRZI-converting the second code word series data based on the first and second code word series data generated at the second step; a fourth step of obtaining first direct-current component square data by squaring the first direct-current component data acquired at the predetermined bit intervals and obtaining second direct-current component square data by squaring the second direct-current component data acquired at the predetermined bit intervals; and a fifth step of comparing the first direct-current component square data with the second direct-current square data, and selecting and outputting one having smaller direct-current component square data from the first code word series data and the second code word series data. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Furthermore, in order to achieve the above-described aim, there is provided a digital signal modulation apparatus which generates a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is a larger integer than p), generates synchronous words at predetermined bit intervals, obtains code word series data by arranging the code word data group after the generated synchronous words, and NRZI-converts a signal of the obtained code word series data and outputs the NRZI-converted signal, the digital signal modulation apparatus comprising: synchronous word generating means for simultaneously generating a first synchronous word and a second synchronous word having respective numbers of times of inversion different from each other, by the NRZI conversion; code word series data generating means for generating the code word data group based on a run-length limited rule which restricts a run length in a predetermined range, generating first code word series data by arranging the generated code word data group after the first synchronous word, and generating second code word series data by arranging the code word data group after the second synchronous word; DSV calculating means for receiving the first and second code word series data generated by the code word series data generating means, obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting the first code word series data, and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting the second code word series data; DSV square calculating means for obtaining first direct-current component square data by squaring the first direct-current component data acquired at the predetermined bit intervals and obtaining second direct-current component square data by squaring the second direct-current component data acquired at the predetermined bit intervals; and code word outputting means for comparing the first direct-current component square data with the second direct-current component square data, and selecting and outputting one having smaller direct-current component square data from the first code word series data and the second code word series data. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> Moreover, in order to achieve the above-described aim, there is provided a digital signal modulation apparatus which generates a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is a larger integer than p), generates the code word data group based on source data inputted after specific source data when the specific source data with which a first code word and a second code word having different patterns can be generated is inputted in case of generating synchronous words at predetermined bit intervals, arranges the generated code word data group after the first code word or the second code word, obtains code word series data in which the synchronous words are inserted at the predetermined bit intervals, and NRZI-converts a signal of the obtained code word series data and outputs the NRZI-converted signal, the digital signal modulation apparatus comprising: code word generating means for generating the first code word and the second code word having respective numbers of times of inversion different from each other, by the NRZI conversion; code word series data generating means for generating the code word data group based on a run-length limited rule which restricts a run length in a predetermined range, generating first code word series data by arranging the generated code word data group after the first code word, and generating second code word series data by arranging the code word data group after the second code word; DSV calculating means for receiving the first and second code word series data generated by the code word series data, obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting the first code word series data, and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting the second code word series data; DSV square calculating means for obtaining first direct-current component square data by squaring the first direct-current component data acquired at the predetermined bit intervals, and obtaining second direct-current component square data by squaring the second direct-current component data acquired at the predetermined bit intervals; and code word outputting means for comparing the first direct-current component square data with the second direct-current component square data, and selecting and outputting one having smaller direct-current component square data from the first code word series data and the second code word series data. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> In addition, in order to achieve the above-described aim, there is provided a storage medium, wherein the code word series data generated by the digital signal modulation apparatus is NRZI-converted and recorded. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Additionally, in order to achieve the above-described aim, there is provided a transmission apparatus comprising a transmission encoding portion which adds a header to the code word series data generated and NRZI-converted by the digital signal modulation apparatus and realizes a packet of the code word series data, wherein the packet outputted from the transmission encoding portion is transmitted to a transmission path. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Further, in order to achieve the above-described aim, there is provided a program which executes the first to fifth steps of the digital signal modulation method by a computer. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> Furthermore, in order to achieve the above-described aim, there is provided an encoding method which associates a specific input data word with a plurality of different code words, and selects and outputs a specific code word from the plurality of different code words when encoding an input data word consisting of p bits into a code word consisting of q bits (where q&gt;p) and outputting the code word as a bit string to which a predetermined run-length limited rule is applied, wherein, in case of selecting the specific code word, reckoning from an absolute value of DSV at a selectable point in time, encoding is performed in accordance with each selectable code word in order to integrate the absolute value of DSV, results of integration of the absolute value of DSV for the plurality of different code words are compared with each other in largeness, thereby selecting and outputting the specific code word. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> Moreover, in order to achieve the above-described aim, there is provided a storage medium, wherein a code word string obtained by the encoding method is NRZI-converted and recorded. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> In addition, in order to achieve the above-described aim, there is provided an encoding method which performs DSV control by adding one redundant bit selected from a plurality of different redundant bits every predetermined number of code words to an outputted code word string when encoding an input data word consisting of p bits into a code word consisting of q bits (where q&gt;p) and outputting the code word as a bit string to which a predetermined run-length limited rule is applied, wherein, in case of selecting the redundant bit, reckoning from an absolute value of DSV at a selectable point in time, encoding is performed in accordance with each selectable redundant bit in order to integrate the absolute value of DSV, results of integration of the absolute value of DSV for a plurality of different code words each having the redundant bit added thereto are compared with each other in largeness, and the one redundant bit is consequently selected, thereby outputting the code word string and the selected one redundant bit. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> Additionally, in order to achieve the above-described aim, there is provided a storage medium, wherein the code word string and the selected one redundant bit obtained by the encoding method is NRZI-converted and recorded. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Further, in order to achieve the above-described aim, there is provided an encoding apparatus which performs DSV control by associating a plurality of different code words with a specific input data word and selecting and outputting a specific code word from the plurality of different code words when encoding an input data word consisting of p bits into a code word consisting of q bits (where q&gt;p) and outputting the code word as a bit string to which a predetermined run-length limited rule is applied, the encoding apparatus comprising: a detection circuit which detects whether there is an alternative of the code word with respect to the input data word; a calculation portion which outputs the plurality of different code words corresponding to the input data word when a result of alternative detection supplied from the detection circuit indicates presence of an alternative, and outputs one code word corresponding to the input data word when a result of detection from the detection circuit indicates absence of an alternative; a plurality of storing means for accumulating output code words after a point in time of outputting an output code word and a code word inputted from the calculation portion immediately before with respect to each of a plurality of code word strings outputted from the calculation portion through a plurality of paths, and storing a DSV value obtained from an output code word selected in the past and a code word immediately precedently inputted from the calculation portion; and outputting means for comparing integrated values of absolute values of DSV values before an immediately preceding code word supplied from the plurality of storing means with each other, selecting and outputting a code word of the storing means corresponding to a smallest integrated value, and substituting a content of the selected storing means for a content of the unselected storing means among the plurality of storing means, wherein the outputting means performs encoding for each selectable code word and integrates the absolute value of DSV reckoning from the absolute value of DSV at a point in time of selectable conversion. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> Furthermore, in order to achieve the above-described aim, there is provided an encoding apparatus which performs DSV control by adding one redundant bit selected from a plurality of different redundant bits for each predetermined number of code words to an outputted code word string when encoding an input bit word consisting of p bits into a code word consisting of q bits (where q&gt;p) and outputting the code word as a bit string to which a predetermined run-length limited rule is applied, the encoding apparatus comprising: a calculation portion which adds a plurality of the different redundant bits for each predetermined number of code words; a plurality of storing means for accumulating an output code word and a redundant bit after a point in time of outputting the output code word and a code word and a redundant bit inputted from the calculation portion immediately before with respect to each of a plurality of code word strings including redundant bits outputted from the calculation portion through a plurality of paths corresponding to the plurality of different redundant bits, and storing a DSV value obtained from an output code word and a redundant bit selected in the past and a code word and a redundant bit immediately precedently inputted from the calculation portion; and outputting means for comparing integrated values of absolute values of DSV values up until an immediately preceding code word and a redundant bit supplied from the plurality of storing means with each other, selecting and outputting a code word and a redundant bit of a storing means corresponding to a smallest integrated value, and substituting a content of selected storing means for a content of unselected storing means among the plurality of storing means, wherein the outputting means performs encoding in accordance with each selectable redundant bit and integrates the absolute values of DSV, reckoning from an absolute value of DSV at a point in time of selectable conversion. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> Moreover, in order to achieve the above-described aim, there is provided a computer program which causes the detection circuit, the calculation portion, the plurality of storing means and the outputting means in the encoding apparatus to function as a computer. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The nature, principle and utility of the invention will become more apparent from the following detailed description when read in conjunction with the accompanying drawings.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> In the accompanying drawings: </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a schematic block diagram of a digital signal modulation apparatus according to a first embodiment of the present invention; </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram showing a p-q modulation portion which is a primary part of the digital signal modulation apparatus according to the first embodiment of the present invention; </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a view showing an example of coding tables in RLL (1, 9) limitation wherein p&equals;4 and q&equals;6, which is used in the first embodiment according to the present invention; </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows conditions when presence of an alternative is determined according to the first embodiment of the present invention; </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows an example of synchronous signals used in accordance with a value of S(k) according to the first embodiment of the present invention; </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a flowchart showing an operation of the p-q modulation portion according to the first embodiment of the present invention; </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 7A and 7B</cross-reference> are views showing examples of values of CDS and DSV with respect to a generated code word according to the first embodiment of the present invention; </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a view showing how the code word and a DSV level varies in time according to the first embodiment of the present invention; </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows values of CDS with respect to code words in the form of a table according to the first embodiment of the present invention; </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a schematic block diagram showing an example of a digital signal recording apparatus having a digital signal modulation apparatus according to a second embodiment of the present invention mounted thereon; </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a block diagram showing a p-q modulation portion which is a primary part of the digital signal modulation apparatus according to the second embodiment of the present invention; </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a view showing an example of coding tables, in which p&equals;4 and q&equals;6 and which is under RLL (1, 9) limitation, used in the second embodiment according to the present invention; </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is an explanatory view of conditions when presence of an alternative is determined by a code word alternative presence/absence detection circuit illustrated in <cross-reference target="DRAWINGS">FIG. 11</cross-reference> according to the second embodiment of the present invention; </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is an explanatory view showing an example of synchronous words used in accordance with values of status information S(k) in the coding tables utilized in the second embodiment according to the present invention; </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a flowchart for illustrating the operation of the second embodiment according to the present invention; </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 16A and 16B</cross-reference> are views showing values of CDS and DSV with respect to code words generated in the second embodiment according to the present invention; </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> is a view showing an example of the relationship between the code word and the DSV level for illustrating the operation of a DSV square operation integration portion in <cross-reference target="DRAWINGS">FIG. 11</cross-reference> according to the second embodiment of the present invention; </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a view showing a table of CDS values calculated with respect to the code word according to the second embodiment of the present invention; </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> is a schematic block diagram showing an example of a digital signal transmission apparatus having a digital signal modulation apparatus according to a third embodiment of the present invention mounted thereon; </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a schematic block diagram showing an example of a reception apparatus which receives packet data transmitted from the digital signal transmission apparatus illustrated in <cross-reference target="DRAWINGS">FIG. 19</cross-reference>; </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> is a block diagram showing an encoding apparatus according to a fourth embodiment of the present invention; </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a block diagram of a 4-6 modulation portion which is a primary part of the encoding apparatus according to the fourth embodiment of the present invention; </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> shows types of a code word consisting of six bits satisfying (1, 7) RLL limitation according to the fourth embodiment of the present invention; </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> is a view showing coding tables used in the fourth embodiment according to the present invention; </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is a view for illustrating conditions enabling exchange between two coding tables in order to satisfy (1, 9) RLL limitation in the fourth embodiment according to the present invention; </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> is a view for illustrating selection information and output code words of the coding tables of <cross-reference target="DRAWINGS">FIG. 24</cross-reference> used when encoding an input data word D(k) in units of four bits based on (1, 7) RLL limitation in the fourth embodiment according to the present invention; </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 27</cross-reference> is a block diagram showing an example of a selection judgment portion in <cross-reference target="DRAWINGS">FIG. 22</cross-reference>; </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 28A and 28B</cross-reference> are views showing that an output level after NRZI modulation is inverted based on the fact that the numbers of &ldquo;1&rdquo; included in respective output code words C(k) differ from each other according to the fourth embodiment of the present invention; </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29</cross-reference> is a view showing an example of a format of an output signal in the fourth embodiment according to the present invention; </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 30</cross-reference> is a view showing the relationship between types of preceding code words and redundant bit patterns used in the forth embodiment according to the present invention; </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 31</cross-reference> is a flowchart for illustrating the encoding operation according to the fourth embodiment of the present invention; and </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 32A and 32B</cross-reference> are views showing that the polarity of DSV after NRZI modulation is inverted based on the difference of a redundant bit in the fourth embodiment according to the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0078" lvl="7"><number>&lsqb;0078&rsqb;</number> &lt;First Embodiment&gt;</paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> A digital signal modulation method, a digital signal modulation apparatus and a storage medium according to the present invention will now be described based on preferred embodiments hereinafter. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a schematic structure of a digital signal modulation apparatus to which an embodiment of the digital signal modulation method is applied. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> The digital signal modulation apparatus <highlight><bold>1</bold></highlight> illustrated in the drawing is constituted by a formatting portion <highlight><bold>11</bold></highlight>, a p-q modulation portion <highlight><bold>12</bold></highlight>, coding tables <highlight><bold>13</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>13</bold></highlight><highlight><italic>b</italic></highlight>, . . . , <highlight><bold>13</bold></highlight><highlight><italic>n</italic></highlight>, an NRZI (Non Return to Zero Inverse) conversion portion <highlight><bold>14</bold></highlight>, and a recording drive portion <highlight><bold>15</bold></highlight>. A signal of the digital signal modulation apparatus constituted in this manner is supplied to a recording apparatus (not shown) used for recording information on a storage medium <highlight><bold>2</bold></highlight>, or supplied to a transmission medium <highlight><bold>3</bold></highlight> through a transmission encoding portion <highlight><bold>31</bold></highlight>. An outline of the operation of the digital signal modulation apparatus <highlight><bold>1</bold></highlight> will now be given. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> A digital information signal such as video or sound compressed and encoded based on MPEG (moving picture experts group)-2 or the like is supplied to a formatting portion <highlight><bold>11</bold></highlight> where an error correction code is added to the supplied digital information signal, supplied data is scrambled, interleaved or the like. The thus processed information signal is divided into source data each consisting of p bits (p is an integer larger than 1, e.g., 4), and the divided source data each consisting of p bits is supplied to the p-q modulation portion <highlight><bold>12</bold></highlight>. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> The p-q modulation portion <highlight><bold>12</bold></highlight> is a circuit which block-converts a signal of the source data which is an information signal supplied in p bits to generate a signal consisting of q-bit (q is an integer larger than p, e.g., <highlight><bold>6</bold></highlight>) encoding data. Further, the p-q modulation portion <highlight><bold>12</bold></highlight> treats a predetermined number of source data as a unit and operates to insert a predetermined synchronous word each unit. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> Furthermore, the p-q modulation portion <highlight><bold>12</bold></highlight> includes the coding tables <highlight><bold>13</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>13</bold></highlight><highlight><italic>b</italic></highlight>, . . . , <highlight><bold>13</bold></highlight><highlight><italic>n</italic></highlight>, and the supplied source data is outputted as a code word series signal obtained by sequentially block-converting source data into q-bit code words while the DSV (Digital Sum Value) control based on the later-described method is performed making reference to the coding tables <highlight><bold>13</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>13</bold></highlight><highlight><italic>b</italic></highlight>, . . . , <highlight><bold>13</bold></highlight><highlight><italic>n. </italic></highlight></paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> The code word series signal obtained by the block conversion is supplied to the NRZI conversion portion <highlight><bold>14</bold></highlight> where the supplied coded bit series signal is subjected to NRZI conversion. A digital modulation signal obtained by the conversion is supplied to the recoding drive portion <highlight><bold>15</bold></highlight>. In order to record the inputted digital modulation signal onto the storage medium <highlight><bold>2</bold></highlight> which is, e.g., an optical disk, the recording drive portion <highlight><bold>15</bold></highlight> changes the intensity of a laser beam in accordance with the digital modulation signal. The laser beam whose intensity has been changed is emitted onto the storage medium <highlight><bold>2</bold></highlight>, and recording of the digital modulation signal according to the intensity is performed. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> Moreover, the digital-modulated signal is supplied to the transmission encoding portion <highlight><bold>31</bold></highlight>, and second digital modulation is carried out in such a manner that this signal is turned into a signal suitable as a signal to be transmitted through the transmission medium <highlight><bold>3</bold></highlight>. Then, the modulated signal is transmitted through the transmission medium <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> Here, for example, even if the digital modulation signal obtained by the digital signal modulation apparatus <highlight><bold>1</bold></highlight> is supplied to any other peripheral as a base band signal and the inter-apparatus ground potential is different between the digital signal apparatus <highlight><bold>1</bold></highlight> and any other peripheral and they are coupled by a high-frequency transformer or the like, the digital modulation signal outputted from the digital signal modulation apparatus <highlight><bold>1</bold></highlight> hardly includes a direct-current component. Therefore, the digital modulation signal can be stably transmitted. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> In this way, the digital signal modulation apparatus <highlight><bold>1</bold></highlight> performs p-q modulation and NRZI modulation on the inputted digital information signal so that the direct-current component can be suppressed, optically modulates the modulated signal, and outputs as output light a laser beam obtained by the optical modulation, or outputs a digital modulation signal as a base band signal to be supplied to the transmission medium <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> Detailed explanation will now be given as to the structure and the operation of the p-q modulation portion <highlight><bold>12</bold></highlight> which is a primary part of the digital signal modulation apparatus <highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows the structure of the p-q modulation portion <highlight><bold>12</bold></highlight> in detail. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> The p-q modulation portion <highlight><bold>12</bold></highlight> in the drawing is constituted by a code word alternative presence/absence detection circuit <highlight><bold>121</bold></highlight>, a coding table address generation portion <highlight><bold>122</bold></highlight> including coding tables <highlight><bold>13</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>13</bold></highlight><highlight><italic>b</italic></highlight>, . . . , <highlight><bold>13</bold></highlight><highlight><italic>n </italic></highlight>and a synchronous word generation portion <highlight><bold>123</bold></highlight>, a code word memory <highlight><bold>124</bold></highlight>, a code word memory <highlight><bold>125</bold></highlight>, a peak value calculation portion <highlight><bold>16</bold></highlight>, and a memory control/code output portion <highlight><bold>128</bold></highlight>. Further, the peak value calculation portion <highlight><bold>16</bold></highlight> is constituted by the DSV calculation peak value memory <highlight><bold>126</bold></highlight>, the DSV calculation peak value memory <highlight><bold>127</bold></highlight> and the peak value comparison portion <highlight><bold>129</bold></highlight>. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> The operation of the p-q modulation portion <highlight><bold>12</bold></highlight> constituted in this manner will now be described. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> The synchronous word generation portion <highlight><bold>123</bold></highlight> generates two types of synchronous words corresponding to a status S(k) which is a function representing a status, for each predetermined number of sets of p-bit source data. That is, the two synchronous words have respective DSV polarities which are reverse from each other, and they are code words which are preset so as to become the numbers of 1 included in respective code bits thereof different from each other. One synchronous word is supplied to the code word memory <highlight><bold>124</bold></highlight> as C(k)0, and the other synchronous word is supplied to the code word memory <highlight><bold>125</bold></highlight> as C(k)1. These two synchronous words are supplied to the DSV calculation peak value memory <highlight><bold>126</bold></highlight> and the DSV calculation peak value memory <highlight><bold>127</bold></highlight>, respectively. Each DSV calculation peak value memory performs the calculation of DSV and obtains a peak value of an absolute value thereof. The memory content of the peak value which has been previously stored is updated to a newly obtained peak value. At the same time, these synchronous words are stored in the respective code word memories, and supply of the source data is started after the operations as described above with respect to the synchronous words. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> The source data D(k) supplied from the formatting portion <highlight><bold>11</bold></highlight> is supplied to the address generation portion <highlight><bold>122</bold></highlight>, and the source data is also supplied to the code word alternative presence/absence detection circuit <highlight><bold>121</bold></highlight>. The code word alternative presence/absence detection circuit <highlight><bold>121</bold></highlight> detects whether the series of the source data includes a code word which can be replaced with another code word, which will be described later. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> A result of detection concerning presence/absence of an alternative obtained by this detection is supplied to the coding table address generation portion <highlight><bold>122</bold></highlight>. The coding table address generation portion <highlight><bold>122</bold></highlight> performs different operations depending on the case where an alternative is detected and the case where an alternative is not detected. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> Description will be first given as to the operation when an alternative is not detected. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> When a code word concerning an alternative which can satisfy later-described conditions is not detected in the source data, the source data supplied in the form of p bits is uniquely code-converted into q-bit encoding data. The coding tables <highlight><bold>13</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>13</bold></highlight><highlight><italic>b</italic></highlight>, . . . , <highlight><bold>13</bold></highlight><highlight><italic>n </italic></highlight>store the code words, and the code words obtained by performing code conversion using the coding tables <highlight><bold>13</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>13</bold></highlight><highlight><italic>b</italic></highlight>, . . . , <highlight><bold>13</bold></highlight><highlight><italic>n </italic></highlight>are outputted by specifying address values with respect to the coding tables <highlight><bold>13</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>13</bold></highlight><highlight><italic>b</italic></highlight>, <highlight><bold>13</bold></highlight><highlight><italic>n. </italic></highlight></paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> Since there is only one code data which can be obtained in this manner, the one obtained code word is supplied to both the code word memory <highlight><bold>124</bold></highlight> and the code word memory <highlight><bold>125</bold></highlight> as C(k) 0 and C(k)1, and the respective code words of C(k)0 and C(k)1 are supplied to the DSV calculation peak value memory <highlight><bold>126</bold></highlight> and the DSV calculation peak value memory <highlight><bold>127</bold></highlight>. Each DSV calculation is carried out in these DSV calculation peak value memories, and each peak value of each absolute value thereof is obtained. Then, the memory content of the previously stored peak value is updated to a newly obtained peak value. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> In this manner, the peak value stored in each of the DSV calculation peak value memory <highlight><bold>126</bold></highlight> and the DSV calculation peak value memory <highlight><bold>127</bold></highlight> is sequentially updated to a peak value generated from the code word supplied after each of the two synchronous words meanwhile p-q modulation is carried out. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> The operation when an alternative is detected in the code word will now be described. When an alternative is detected, two code words can be obtained with respect to one set of p-bit source data to be inputted. As similar to the fact that the two code word series can be created relative to the above-described respective synchronous words, with respect to the two code words, two code word series can be created based on the two code words (namely, four code word series). </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> Thus, when an alternative of the code word is detected, a code word series which gives a smaller DSV peak value is selected from two code word series relative to the two synchronous words. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> The operation for this selection is as follows. The peak value of an absolute value stored in each of the DSV calculation peak value memory <highlight><bold>126</bold></highlight> and the DSV calculation peak value memory <highlight><bold>127</bold></highlight> is supplied to the peak value comparison portion <highlight><bold>129</bold></highlight>, and the both peak values are compared with each other in the peak value comparison portion <highlight><bold>129</bold></highlight>. Then, a result of comparison is supplied to the memory control/code output portion <highlight><bold>128</bold></highlight>. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> The memory control/code output portion <highlight><bold>128</bold></highlight> obtains a code word having a smaller peak value of the DSV absolute value as a code word series consisting of the code word supplied after the synchronous word from the code word memory <highlight><bold>124</bold></highlight> or the code word memory <highlight><bold>125</bold></highlight> based on the comparison result inputted from the peak value comparison portion <highlight><bold>129</bold></highlight>. The thus obtained code word series is outputted from the memory control/code output portion <highlight><bold>128</bold></highlight> as a digital modulation signal subjected to p-q modulation. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> At the end of such a series of operations, the content of the DSV calculation peak value memories stored in the code word memory <highlight><bold>124</bold></highlight> and the code word memory <highlight><bold>125</bold></highlight> is cleared. With respect to the two code word series relative to the two different code words acquired by detection of an alternative, generation of the code word having a small DSV peak value is restarted by DSV value management. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> That is, after the peak values of DSV stored in the DSV calculation peak value memory <highlight><bold>126</bold></highlight> and the DSV calculation peak value memory <highlight><bold>127</bold></highlight> are once cleared, one of the two code words obtained from the source data is supplied to the code word memory <highlight><bold>124</bold></highlight> as C(k)0 and the other is supplied to the code word memory <highlight><bold>125</bold></highlight> as C(k)1. Then, these two code words are respectively stored. The peak values of DSV given from the code words C(k)0 and C(k)1 are respectively supplied to the DSV calculation peak value memory <highlight><bold>126</bold></highlight> and the DSV calculation peak value memory <highlight><bold>127</bold></highlight> and temporarily stored. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> As described above, two code word series having peak values of DSV different with those of two code word series supplied so far are generated each time two types of synchronous words are generated at predetermined intervals or each time two types of code words are obtained, while each of the two code word series having respective types of DSV polarities is temporarily stored in each code word memory. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> Then, at the time when the synchronous words are generated, or two types of selectable code words are obtained, the code word series having a smaller peak value of DSV is determined and outputted as a digital modulation signal. Therefore, although the output signal is a code word series which is intermittent in time, a temporary memory circuit is actually included in the memory control/code output portion <highlight><bold>128</bold></highlight>, and the code word series signal which is once recorded in a buffer is outputted from the p-q modulation portion <highlight><bold>12</bold></highlight> as a consecutive code word series signal. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> Description will now be given as to the coding tables <highlight><bold>13</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>13</bold></highlight><highlight><italic>b</italic></highlight>, . . . , <highlight><bold>13</bold></highlight><highlight><italic>n </italic></highlight>used for performing p-q code conversion. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows an example of the coding tables in which p&equals;4 and q&equals;6 and which is under RLL (1, 9) limitation. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> The coding tables in this drawing show tables of code words in RLL (Run-length Limited) encoding in which a number of &ldquo;0&rdquo; existing between &ldquo;1&rdquo; and &ldquo;1&rdquo; is restricted to 1 to 9 as (1, 9). </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> That is, the coding tables includes four tables having four status of S(k)&equals;0 to 3 (in this example, there are coding tables <highlight><bold>13</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>13</bold></highlight><highlight><italic>b</italic></highlight>, <highlight><bold>13</bold></highlight><highlight><italic>c </italic></highlight>and <highlight><bold>13</bold></highlight><highlight><italic>d</italic></highlight>, and a, b, c and d respectively correspond to <highlight><bold>0</bold></highlight>, <highlight><bold>1</bold></highlight>, <highlight><bold>2</bold></highlight> and <highlight><bold>3</bold></highlight>). In these tables, S(k) denotes the status of a coding table; D(k), source data consisting of four (&equals;p) bits; and C(k), a code word consisting of six (&equals;q) bits. C(k) is notated by both a decimal value and a binary value. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, S(k&plus;1) represents status information concerning C(k&plus;1) selected after C(k). When obtaining the code word C(k&plus;1) relative to the source data D(k&plus;1) to be subsequently inputted, a value to be selected from 0, 1, 2 and 3 as S(k&plus;1) is determined by a numeric value given by S(k&plus;1) in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> Description will now be given as to conditions when the above-described existence of an alternative is detected in the thus obtained C(k). </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows a table of conditions when conditions of existence of an alternative are judged. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> In this drawing, D(k) denotes source data consisting of four bits; C(k), a code word consisting of six bits; S(k), a status of the table at a time k; L(k&minus;1), an low order zero-run length of C(k&minus;1). </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> In this table, the condition of existence of an alternative shown as, e.g., a condition 1 corresponds to the case that S(k)&equals;3; the low order zero-run length L(k&minus;1) of the preceding code word is 4 or 5 and D(k) is not more than 6, or L(k&minus;1) is 6 and D(k) satisfies any of 1, 3 and 5. Under this condition, the code word can be changed with a counterpart of S(k)&equals;1. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> Therefore, since there is a changeable code word when a condition corresponding to one of the six conditions shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> occurs, a signal indicative of existence of the alternative is outputted from the code word alternative presence/absence detection circuit <highlight><bold>121</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> as an alternative detection result. This alternative detection result signal is supplied to the peak value comparison portion <highlight><bold>129</bold></highlight>, and comparison between the DSV peak values of the two code word series is started. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> Comparison processing of the DSV peak values is also performed at a point in time of generation of the synchronous signal. The synchronous signal will now be described. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows an example of four synchronous signals used in accordance with a value of S(k). </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> In the drawing, there are shown synchronous codes each consisting of 24 bits which are given in accordance with the respective statuses that S(k) is 0 to 3, the least significant bit X of each code indicates that the bit may be inverted. It is assumed that the status changes to S(k)&equals;1 after these synchronous signals. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> When the synchronous words inserted at predetermined intervals or two types of selectable code words are generated based on the conditions shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the code word series signal having a smaller peak value of DSV is outputted from the p-q modulation portion <highlight><bold>12</bold></highlight>. Description will now be given on the operation with reference to a flowchart. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows the operation of the p-q modulation portion in the form of a flowchart, and this operation will be explained. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> The initial state is first set so as to take an arbitrary S(k) (step S<highlight><bold>101</bold></highlight>), and judgment is made upon whether any word other than the synchronous word is supplied. In case of the synchronous word (No at a step S<highlight><bold>102</bold></highlight>), reference is made to peak values of DSV stored in the respective peak memories in the DSV calculation peak value memories <highlight><bold>126</bold></highlight> and <highlight><bold>127</bold></highlight>. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> Then, the code word series signal which has a smaller peak value of DSV given by each code word series and is stored in the code word memory <highlight><bold>124</bold></highlight> or <highlight><bold>125</bold></highlight> is selected and outputted (step S<highlight><bold>111</bold></highlight>). </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> After outputting the code word series signal, the stored content of the code word memory which has not been selected is replaced with that of the selected code word memory, and the content of the non-selected DSV memory is rewritten by that of the selected DSV memory. Then peak values stored in the selected and non-selected peak value memories are cleared (step S<highlight><bold>112</bold></highlight>). </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> After clearing the peak values, the synchronous word shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is selected in accordance with a value of S(k) (step S<highlight><bold>113</bold></highlight>). For example, the synchronous word having LSB of 0 is supplied to the code word memory <highlight><bold>124</bold></highlight>, and the synchronous word having LSB of 1 is supplied to the code word memory <highlight><bold>125</bold></highlight> (step S<highlight><bold>108</bold></highlight>). </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> However, the change of the code word is not performed when the code word is not temporarily stored in the memory since the stored content of the memory has been supplied as an output signal here. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> Although the above has described on the operation when the synchronous word is generated, the operation when the synchronous word is not generated will now be explained. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> That is, at a point in time when modulation target data to be supplied is any data other than a synchronous word (Yes at a step S<highlight><bold>102</bold></highlight>), the source data D(k) consisting of four bits is supplied to the code word alternative presence/absence detection circuit <highlight><bold>121</bold></highlight> (step S<highlight><bold>103</bold></highlight>). </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> As to the code word supplied to the code word alternative presence/absence detection circuit <highlight><bold>121</bold></highlight>, whether there is a code word matching with any condition shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is detected. If existence is detected (Yes at a step S<highlight><bold>104</bold></highlight>), reference is made to the peak memories <highlight><bold>126</bold></highlight> and <highlight><bold>127</bold></highlight>, the code word memory having a smaller peak value is selected, and the code word series signal stored in the code word memory is outputted (step S<highlight><bold>105</bold></highlight>). </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> After outputting the code word series signal, the stored content of the non-selected code word memory is replaced with the content of the selected code word memory, and the content of the non-selected DSV memory is replaced with the content of the selected DSV memory. Then, values of the peak values stored in the both peak value memories are cleared (step S<highlight><bold>106</bold></highlight>). </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> After clearing the peak values, the first and second code words are selected from the coding tables shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. The first code word is supplied to the code word memory <highlight><bold>124</bold></highlight>, and the second code word is supplied to the code word memory <highlight><bold>125</bold></highlight>, thereby being stored in the respective memories (step S<highlight><bold>108</bold></highlight>). </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> After storing the code words, a value of CDS (Code Word Digital sum) is calculated with respect to each of the code words C(k)0 and C(k)1 supplied to the first and second code word memories, and a value of DSV is obtained based on that value. The peak value is updated so that the calculated value of the peak value is stored in each peak memory (step S<highlight><bold>109</bold></highlight>). </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> After such a series of operations, judgment is made upon whether encoding has been completed (step S<highlight><bold>110</bold></highlight>). If encoding has been completed (Yes at a step S<highlight><bold>110</bold></highlight>), encoding is terminated. If it is yet to be completed (No at the step S<highlight><bold>110</bold></highlight>), the processing is returned to the step S<highlight><bold>102</bold></highlight>. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> In this manner, the code word series signal having a smaller peak value of DSV is obtained, and the obtained signal is acquired as an NRZI-modulated signal which has a small direct-current component when NRZI-modulated. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 7A and 7B</cross-reference> show examples of values of CDS and DSV corresponding to the generated code word signal. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 7A and 7B</cross-reference> show two code words, and C(k&minus;1) and C(k&plus;1) are the same code words in <cross-reference target="DRAWINGS">FIGS. 7A and 7B</cross-reference>. C(k) is a changeable code word matching with a condition shown as the condition 1 in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. This is the case where the code word &ldquo;101001&rdquo; is selected in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>A and the code word &ldquo;001001&rdquo; is selected in <cross-reference target="DRAWINGS">FIG. 7B</cross-reference>. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> Further, in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>A, since CDS of each code word is &minus;4, 0 or &plus;4 and modulation is carried out from the level 1, DSV to C(k&plus;1) is 0. Furthermore, in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>B, CDS is likewise &minus;4, 0 or &plus;4, and DSV to C(k&plus;1) is &minus;8. That is because DSV inversion with respect to C(k) is carried out due to the fact that a number of &ldquo;1&rdquo; in C(k) differs between <cross-reference target="DRAWINGS">FIG. 7</cross-reference>A and <cross-reference target="DRAWINGS">FIG. 7B</cross-reference>. </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> When the code word matching with the condition shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is supplied in this manner, the digital modulation signals having DSV characteristics different from each other can be obtained by the fact that the code words having DSV polarities different from each other are used as shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>A and <cross-reference target="DRAWINGS">FIG. 7B</cross-reference>. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> Of the thus obtained two code word series, the code word series having a smaller direct-current component of the digital modulation signal generated after NRZI modulation must be selected and acquired. Description will now be given as to the method for determining the code word series based on the DSV level up to a plurality of DSV conversion points where the output code word is determined. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows an example of the relationship between the code word and the DSV level used for explaining the operation of the peak value calculation portion <highlight><bold>16</bold></highlight> illustrated in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0142" lvl="0"><number>&lsqb;0142&rsqb;</number> In the drawing, the horizontal axis represents a time base, and the vertical axis represents a value of DSV. Moreover, times k, k&plus;1, k&plus;2 and k&plus;3 corresponds to the time when the code word matching with the condition enabling DSV conversion occurs or the synchronous word is inserted. </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> In addition, at the time k, the code word series has been already selected and determined and the code word series before the time k is outputted as the code word. This means that there is no code word remaining in the code word memories <highlight><bold>124</bold></highlight> and <highlight><bold>125</bold></highlight>. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> Additionally, P0 is a peak value of DSV when C(k) is the head in a section from k to k&plus;1, and P1 is likewise a peak value of DSV when C(k)1 is the head. Similarly, four peak values P00, P01, P10 and P11 exist in a section from k&plus;1 to k&plus;2, and eight peak values P000, P001, P010, P011, P100, P101, P110 and P111 exist in a section from k&plus;2 to k&plus;3. </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> In this manner, data of eight peak values is obtained at the time k&plus;3. Description will now be given as to the method of determining based on the obtained data a code cord concerning a code word series to be selected which is temporarily stored in the code word memory <highlight><bold>124</bold></highlight> or the code word memory <highlight><bold>125</bold></highlight> at the time k&plus;1. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> That is, the time k&plus;1 is a time when the selectable code word or synchronous signal has appeared, and the code word memory <highlight><bold>124</bold></highlight> and the code word memory <highlight><bold>125</bold></highlight> respectively store therein the code word having C(k)0 as the head and the code word having C(k)1 as the head. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> Further, as to selection of the code word memory at the time k&plus;1, whether the peak level up to the time k&plus;3 is smaller when C(k)0 is selected or whether the peak level is smaller when C(k)1 is selected is calculated and accordingly the selection is determined. </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> Calculation of the peak level is performed in the peak value calculation portion <highlight><bold>16</bold></highlight>. In the peak value calculation portion <highlight><bold>16</bold></highlight>, it is good enough to calculate the peak level up to k&plus;3 when C(k)0 is selected and the peak level up to k&plus;3 when C(k)1 is selected. Furthermore, the code word in a section from the time k&plus;1 to the time k&plus;3 does not have to be stored in the code word memory, calculating only the DSV level and the peak level of the code word can suffice. </paragraph>
<paragraph id="P-0149" lvl="0"><number>&lsqb;0149&rsqb;</number> The code word memory selection conditions will now be described. That is, it is assumed that the minimum value of the following is min(P0): </paragraph>
<paragraph id="P-0150" lvl="2"><number>&lsqb;0150&rsqb;</number> P0&plus;P00&plus;P000; </paragraph>
<paragraph id="P-0151" lvl="2"><number>&lsqb;0151&rsqb;</number> P0&plus;P00&plus;P001; </paragraph>
<paragraph id="P-0152" lvl="2"><number>&lsqb;0152&rsqb;</number> P0&plus;P01&plus;P010; and </paragraph>
<paragraph id="P-0153" lvl="2"><number>&lsqb;0153&rsqb;</number> P0&plus;P01&plus;P011 </paragraph>
<paragraph id="P-0154" lvl="7"><number>&lsqb;0154&rsqb;</number> Also, it is assumed that the minimum value of the following is min(P1): </paragraph>
<paragraph id="P-0155" lvl="2"><number>&lsqb;0155&rsqb;</number> P1&plus;P10&plus;P100; </paragraph>
<paragraph id="P-0156" lvl="2"><number>&lsqb;0156&rsqb;</number> P1&plus;P10&plus;P101; </paragraph>
<paragraph id="P-0157" lvl="2"><number>&lsqb;0157&rsqb;</number> P1&plus;P11&plus;P110; and </paragraph>
<paragraph id="P-0158" lvl="2"><number>&lsqb;0158&rsqb;</number> P1&plus;P11&plus;P111 </paragraph>
<paragraph id="P-0159" lvl="7"><number>&lsqb;0159&rsqb;</number> Then, the code word memory <highlight><bold>124</bold></highlight> is selected when min(P0) is smaller than min(P1), and the code word memory <highlight><bold>125</bold></highlight> is selected in any other case. </paragraph>
<paragraph id="P-0160" lvl="0"><number>&lsqb;0160&rsqb;</number> Understandably, calculation for comparing levels of the DSV values so as to obtain such a result and selecting the code word that the direct-current component of the modulation signal after NRZI modulation gives a minimum value may be executed by any other method than the above-described calculation method. </paragraph>
<paragraph id="P-0161" lvl="0"><number>&lsqb;0161&rsqb;</number> Although the above has described the case where calculation of CDS is performed in accordance with each code word bit, a value of CDS may be obtained in advance with respect to each code word, and the obtained value of CDS may be previously stored as a table, thereby acquiring the CDS value by using this table. </paragraph>
<paragraph id="P-0162" lvl="0"><number>&lsqb;0162&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a table showing values of CDS obtained for the respective code words. </paragraph>
<paragraph id="P-0163" lvl="0"><number>&lsqb;0163&rsqb;</number> In this drawing, a value of CDS for each code word is calculated when the input level is 1, and the value of CDS obtained from a value of source data D(k) and a value of S(k) corresponds to each code word in the coding table of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> Although the values of CDS are obtained based on the values of source data, the code word series of the digital signal having a smaller direct-current component can be previously selected based on the thus obtained value of CDS. </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> Then, in the description of the operation in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the code words outputted from the code word memories <highlight><bold>124</bold></highlight> and <highlight><bold>125</bold></highlight> are NRZI-converted for example. However, the code word strings after NRZI conversion may be stored in the code word memories <highlight><bold>124</bold></highlight> and <highlight><bold>125</bold></highlight>. </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> Furthermore, although <cross-reference target="DRAWINGS">FIG. 5</cross-reference> shows an example of the synchronous signals, any synchronous word may be selected under the condition that each synchronous word is a synchronization pattern which can be readily distinguished from the code word, and the two synchronous words have DSV values different from each. Even if any other synchronization patter is used, completely the same operation is enabled. </paragraph>
<paragraph id="P-0167" lvl="0"><number>&lsqb;0167&rsqb;</number> Moreover, in the above example, description has been given as to an example of the coding table of four statuses for converting four bits into six bits. Of course, any other method for performing modulation by using the coding table used for converting p bits into q bits and the structure of the modulation apparatus employing this method are enabled. It is good enough to select appropriate values of p and q in accordance with the characteristic of the digital modulation signal to be obtained. For example, a number of conditions of existence of an alternative shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> can be increased by changing values of p and q, and the code series with an increased frequency can be selected. </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> As described above, according to this embodiment, DSV control can be performed by using the peak values of DSV of the recording code series, and the peak level can be effectively lowered as compared with conventional control using DSV, thereby effectively reducing the dispersion of DSV of the recording code words. </paragraph>
<paragraph id="P-0169" lvl="0"><number>&lsqb;0169&rsqb;</number> Moreover, the digital modulation signal generation method which maintains the peak level value of the DSV value small has been mainly described because it is often the case that even one part having large peak level can be a factor which adversely affects the tracking performance or the like if such a part exists during reproduction of the thus generated signal recording medium. </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> However, when the fast response performance is not demanded in the circuit which performs such control, for example, when the average level of the control signal is used and reproduction control of the optical disk reproduction apparatus or reproduction control for special reproduction is performed, the peak value of the DSV value must be restricted to a small value, and the level of the average value must be also limited to a small value. In addition, control for maintaining the average value of the direct-current component of the modulation signal after NRZI modulation to a small value can be likewise effected by changing the above-described peak value control to the average value control. </paragraph>
<paragraph id="P-0171" lvl="7"><number>&lsqb;0171&rsqb;</number> &lt;Second Embodiment&gt;</paragraph>
<paragraph id="P-0172" lvl="0"><number>&lsqb;0172&rsqb;</number> A second embodiment according to the present invention will now be described with reference to the drawings. In <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, like reference numerals denote parts equal to those in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a schematic structural view showing an example of the digital signal recording apparatus adopting the digital signal modulation method and the digital signal modulation apparatus according to the present invention. In the drawing, the digital signal recording apparatus <highlight><bold>1</bold></highlight>R consists of the digital signal modulator <highlight><bold>10</bold></highlight> and the recording drive portion <highlight><bold>15</bold></highlight>. The digital signal modulator <highlight><bold>10</bold></highlight> constituted by the formatting portion <highlight><bold>11</bold></highlight>, the p-q modulation portion <highlight><bold>22</bold></highlight>, the coding tables <highlight><bold>23</bold></highlight><highlight><subscript>1</subscript></highlight>, <highlight><bold>23</bold></highlight><highlight><subscript>2</subscript></highlight>, . . . , <highlight><bold>23</bold></highlight><highlight><subscript>n </subscript></highlight>and the NRZI (Non Return to Zero Inverse) conversion portion <highlight><bold>14</bold></highlight>. The digital signal recording apparatus <highlight><bold>1</bold></highlight>R modulates an inputted digital information signal by the digital signal modulator <highlight><bold>10</bold></highlight> and obtains a digital modulation signal. Thereafter, the digital signal recording apparatus IR performs high-density recording on a storage medium <highlight><bold>2</bold></highlight> such as an optical disk by using the recording drive portion <highlight><bold>15</bold></highlight>. </paragraph>
<paragraph id="P-0173" lvl="0"><number>&lsqb;0173&rsqb;</number> The operation of the digital signal recording apparatus <highlight><bold>1</bold></highlight>R will now be described. At first, a digital information signal such as video or sound which has been subjected to compression and encoding based on MPEG(moving picture experts group)-2 is supplied to the formatting portion <highlight><bold>11</bold></highlight>, and processing such as addition of an error correction code, scrambling of the supplied data or interleaving is applied to the supplied digital information signal, and the thus processed information signal is divided into source data each consisting of p bits, and each divided p-bit source data is supplied to the p-q modulation portion <highlight><bold>22</bold></highlight>. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> The p-q modulation portion <highlight><bold>22</bold></highlight> is a circuit which subjects a signal of the source data which is an information signal supplied every p bits to block conversion and generates a signal consisting of encoded data of q bits (q is an integer larger than p and it is 6 for example). Moreover, the p-q modulation portion <highlight><bold>22</bold></highlight> regards a predetermined number of sets of source data as a unit and operates so as to insert a preset synchronous word every predetermined unit number of sets of source data. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> For this operation, the p-q modulation portion <highlight><bold>22</bold></highlight> includes n types (n is an integer not less than 2) of the coding tables <highlight><bold>23</bold></highlight><highlight><subscript>1</subscript></highlight>, <highlight><bold>23</bold></highlight><highlight><subscript>2</subscript></highlight>, . . . , <highlight><bold>23</bold></highlight><highlight><subscript>n</subscript></highlight>, and outputs the supplied source data as a code word series signal obtained by block-converting the supplied source data into the q-bit code word while performing DSV (Digital Sum Value) control based on the later-described method making reference to the plurality of coding tables <highlight><bold>23</bold></highlight><highlight><subscript>1</subscript></highlight>, <highlight><bold>23</bold></highlight><highlight><subscript>2</subscript></highlight>, . . . , <highlight><bold>23</bold></highlight><highlight><subscript>n</subscript></highlight>. The block-converted code word series signal is supplied to the NRZI conversion portion <highlight><bold>14</bold></highlight> where this signal is subjected to NRZI conversion to be turned into a digital modulation signal. This digital modulation signal is supplied to the recording drive portion <highlight><bold>15</bold></highlight> as a signal which changes the intensity of a laser beam (modulates the intensity of a laser beam) for recording the signal onto the storage medium <highlight><bold>2</bold></highlight> which is, for example, an optical disk. The storage medium <highlight><bold>2</bold></highlight> is irradiated with a laser beam whose intensity has been changed, and recoding of the digital modulation signal according to the intensity of the laser beam is performed. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> In this manner, the digital signal recording apparatus <highlight><bold>1</bold></highlight>R applies p-q modulation and NRZI modulation on the supplied digital information signal so as to suppress the direct-current component, optically modulates the modulated signal, and supplies the thus obtained laser beam to the storage medium <highlight><bold>2</bold></highlight> as output light, thereby performing recording. </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> Detailed description will now be given as to the structure and the operation of the p-q modulation portion <highlight><bold>22</bold></highlight> which is a primary part of the digital signal modulator <highlight><bold>10</bold></highlight> and forms an embodiment of the digital signal modulation method and the digital signal modulation apparatus according to the present invention. </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a block diagram showing an embodiment of the digital signal modulation apparatus according to the present invention which constitutes the p-q modulation portion <highlight><bold>22</bold></highlight>. In the drawing, the p-q modulation portion <highlight><bold>22</bold></highlight> is constituted by the code word alternative presence/absence detection circuit <highlight><bold>221</bold></highlight>, the coding table address generation portion <highlight><bold>222</bold></highlight> including the coding tables <highlight><bold>23</bold></highlight><highlight><subscript>1</subscript></highlight>, <highlight><bold>23</bold></highlight><highlight><subscript>2</subscript></highlight>, . . . , <highlight><bold>23</bold></highlight><highlight><subscript>n </subscript></highlight>and the synchronous word generation portion <highlight><bold>223</bold></highlight>, the first code word memory <highlight><bold>224</bold></highlight>, the second code word memory <highlight><bold>225</bold></highlight>, the first DSV calculation memory <highlight><bold>226</bold></highlight>, the second DSV calculation memory <highlight><bold>227</bold></highlight>, the first DSV square calculation integration memory <highlight><bold>228</bold></highlight>, the second DSV square calculation integration memory <highlight><bold>229</bold></highlight>, the square integration value comparison portion <highlight><bold>230</bold></highlight>, and the memory control/code output portion <highlight><bold>231</bold></highlight>. In addition, the DSV calculation memory <highlight><bold>226</bold></highlight>, the DSV calculation memory <highlight><bold>227</bold></highlight>, the DSV square calculation integration memory <highlight><bold>228</bold></highlight>, the DSV square calculation integration memory <highlight><bold>229</bold></highlight> and the square integration value comparison portion <highlight><bold>230</bold></highlight> constitute the DSV square arithmetic integration portion <highlight><bold>26</bold></highlight>. </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> The operation of the p-q modulation portion <highlight><bold>22</bold></highlight> constituted in this manner will now be described. The synchronous word generation portion <highlight><bold>223</bold></highlight> generates two types of synchronous words corresponding to the status S(k) every predetermined number of p-bit source data. That is, these two synchronous words are preset code words with the parity in such a manner that a number of 1 included in code bits in one code word is an even number and the same in the code bits is an odd number in the other code word. One synchronous word is supplied as C(k)0 to each of the first code word memory <highlight><bold>224</bold></highlight> and the first DSV calculation memory <highlight><bold>226</bold></highlight>, and the other synchronous word is supplied as C(k)1 to each of the second code word memory <highlight><bold>225</bold></highlight> and the second DSV calculation memory <highlight><bold>227</bold></highlight>. </paragraph>
<paragraph id="P-0180" lvl="0"><number>&lsqb;0180&rsqb;</number> The DSV calculation memory <highlight><bold>226</bold></highlight> and the DSV calculation memory <highlight><bold>227</bold></highlight> calculate CDS (Code word Digital Sum) of the respective supplied synchronous words C(k)0 and C(k)1, and update the stored DSV values in the DSV calculation memory <highlight><bold>226</bold></highlight> and the DSV calculation memory <highlight><bold>227</bold></highlight>. The updated DSV value in the DSV calculation memory <highlight><bold>226</bold></highlight> is supplied to the first DSV square calculation integration memory <highlight><bold>228</bold></highlight>. At the same time, the updated DSV value in the DSV calculation memory <highlight><bold>227</bold></highlight> is supplied to the second DSV square calculation integration memory <highlight><bold>229</bold></highlight>, and square calculation of the inputted DSV values are performed in the respective DSV square calculation integration memories <highlight><bold>228</bold></highlight> and <highlight><bold>229</bold></highlight>. As a result, these values are integrated to previously stored values. </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> Here, the DSV calculation memory <highlight><bold>226</bold></highlight> and the DSV calculation memory <highlight><bold>227</bold></highlight> calculate CDS of the synchronous word or the code word including the previously outputted encoding string data every time the synchronous word or the code word is supplied, and the CDS value obtained from this calculation is added to the immediately preceding DSV value, thereby repeating the operation for updating the DSV value. The DSV values stored in the DSV calculation memories <highlight><bold>226</bold></highlight> and <highlight><bold>227</bold></highlight> are the direct-current component data concerning the direct-current component generated when NRZI-converting the code word series data outputted from the code word memories <highlight><bold>224</bold></highlight> and <highlight><bold>225</bold></highlight>. </paragraph>
<paragraph id="P-0182" lvl="0"><number>&lsqb;0182&rsqb;</number> Further, when the code word alternative presence/absence detection circuit <highlight><bold>221</bold></highlight> detects the state enabling DSV control, i.e., the state in which the synchronous words or the code words having the two types of DSV polarities reverse from each other can be selected, the DSV square calculation integration memory <highlight><bold>228</bold></highlight> and the DSV square calculation integration memory <highlight><bold>229</bold></highlight> are reset to the state without integrated value by an output from the code word alternative presence/absence detection circuit <highlight><bold>221</bold></highlight>. The integrated values stored in the DSV square calculation integration memories <highlight><bold>228</bold></highlight> and <highlight><bold>229</bold></highlight> are square integration data obtained by squaring and integrating the direct-current component data concerning the direct-current component generated when NRZI-converting the code word series data stored in the DSV calculation memories <highlight><bold>226</bold></highlight> and <highlight><bold>227</bold></highlight>. </paragraph>
<paragraph id="P-0183" lvl="0"><number>&lsqb;0183&rsqb;</number> When two types of synchronous words which can be DSV-controlled are generated, the DSV square calculation integration memory <highlight><bold>228</bold></highlight> and the DSV square calculation integration memory <highlight><bold>229</bold></highlight> are reset, and square calculation values of the DSV values including the newly supplied two types of synchronous words are newly stored. </paragraph>
<paragraph id="P-0184" lvl="0"><number>&lsqb;0184&rsqb;</number> After a series of the operation relative to the two types of generated synchronous words, supply of the source data is started. The source data D(k) fetched from the formatting portion <highlight><bold>11</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is supplied to the coding table address generation portion <highlight><bold>222</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 11</cross-reference> and also supplied to the code word alternative presence/absence detection circuit <highlight><bold>221</bold></highlight> where whether the later-described code word which can be replaced with the counterpart is included in the series of the source data D(k) is detected. </paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> A result of detection concerning presence/absence of an alternative obtained by the code word alternative presence/absence detection circuit <highlight><bold>221</bold></highlight> is supplied to the coding table address generation portion <highlight><bold>222</bold></highlight>, and also supplied to the DSV square calculation integration memory <highlight><bold>228</bold></highlight>, the DSV square calculation integration memory <highlight><bold>229</bold></highlight> and the square integration value comparison portion <highlight><bold>230</bold></highlight>. The operation to be performed is different depending on the case where an alternative has been detected and the case where no alternative has been detected. </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> Description will be first given on the case where an alternative is not detected. When the code word concerning an alternative matching with the later-described condition is not detected from the source data D(k), the source data which is supplied in the form of p bits is uniquely code-converted into the q-bit encoding data. This code conversion is performed by specifying an address value of a coding table corresponding to a data value stored in the coding tables <highlight><bold>23</bold></highlight><highlight><subscript>1</subscript></highlight>, <highlight><bold>23</bold></highlight><highlight><subscript>2</subscript></highlight>, . . . , <highlight><bold>23</bold></highlight><highlight><subscript>n</subscript></highlight>, and the code word obtained by the code conversion is obtained from the coding table address generation portion <highlight><bold>222</bold></highlight>. </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> When an alternative is not detected, since there is only one code word which can be obtained in the above-described manner, the one obtained code word is supplied as C(k)0 and C(k)1 to the code word memory <highlight><bold>224</bold></highlight> and the code word memory <highlight><bold>225</bold></highlight>, and also supplied to the DSV calculation memory <highlight><bold>226</bold></highlight> and the DSV calculation memory <highlight><bold>227</bold></highlight>. The DSV calculation memory <highlight><bold>226</bold></highlight> and the DSV calculation memory <highlight><bold>227</bold></highlight> calculate respective CDSs of the newly supplied code words C(k)0 and C(k)1, add the obtained CDSs to the DSV values of the immediately preceding stored code words, and update the memory contents as the DSV values taking the newly supplied code word into account. </paragraph>
<paragraph id="P-0188" lvl="0"><number>&lsqb;0188&rsqb;</number> Subsequently, the respective new DSV values outputted from the DSV calculation memory <highlight><bold>226</bold></highlight> and the DSV calculation memory <highlight><bold>227</bold></highlight> are supplied to the DSV square calculation integration memory <highlight><bold>228</bold></highlight> and the DSV square calculation integration memory <highlight><bold>229</bold></highlight> where square calculation of the inputted DSV values is performed. The square calculation values are added to the immediately preceding integrated values, and the integrated values of the DSV square calculation integration memory <highlight><bold>228</bold></highlight> and the DSV square calculation integration memory <highlight><bold>229</bold></highlight> are respectively updated. </paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> In this manner, p-q modulation is carried out while sequentially integrating and updating the DSV square calculation values calculated by using the code words supplied after two synchronous words based on the DSV values stored in the DSV calculation memory <highlight><bold>226</bold></highlight> and the DSV calculation memory <highlight><bold>127</bold></highlight>. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> Description will now be given on the operation when an alternative is detected in the supplied code word. When an alternative is detected, two code words can be obtained with respect to one p-bit source data D(k) to be supplied. In regard to the two code words, as similar to the fact that the two code word series can be respectively created with respect to the two synchronous words, two code word series can be created based on the respective two code words. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> Thus, when an alternative is detected in the code word to be supplied, the operation is carried out in order to obtain a code word series which gives a smaller DSV square calculation integration value from the two code word series with respect to the above-described two synchronous words. That is, the DSV square calculation integrated values respectively fetched from the DSV square calculation integration memory <highlight><bold>228</bold></highlight> and the DSV square calculation integration memory <highlight><bold>229</bold></highlight> are supplied to the square integration value comparison portion <highlight><bold>230</bold></highlight> where the both DSV square calculation integrated values are compared with each other in largeness, and the obtained result of comparison is supplied to the memory control/code output portion <highlight><bold>231</bold></highlight>. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> The memory control/code output portion <highlight><bold>231</bold></highlight> obtains the code word having a smaller DSV square calculation integrated value as the code word series consisting of the code word supplied after synchronous word from the code word memory <highlight><bold>224</bold></highlight> and the code word memory <highlight><bold>225</bold></highlight>, and outputs the thus obtained code word series as a digital modulation signal (output code word) which has been subjected to p-q modulation. </paragraph>
<paragraph id="P-0193" lvl="0"><number>&lsqb;0193&rsqb;</number> At the end of a series of such operations, the integrated DSV square operation integrated values respectively stored in the DSV square calculation integration memory <highlight><bold>228</bold></highlight> and the DSV square calculation integration memory <highlight><bold>229</bold></highlight> are cleared, and similar generation of the code word by DSV value management is restarted for the two code word series relative to the two different code words which are detected and obtained by the above-described alternative. </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> That is, the DSV square calculation integrated values integrated in the DSV square calculation integration memory <highlight><bold>228</bold></highlight> and the DSV square calculation integration memory <highlight><bold>129</bold></highlight> are once cleared, and then one of the two types of code words obtained from the source data D(k) is supplied and stored as C(k)0 in the code word memory <highlight><bold>224</bold></highlight> while the other code word is supplied and stored as C(k)1 in the code word memory <highlight><bold>225</bold></highlight>. Also, the code words C(k)0 and C(k)1 are supplied to the DSV calculation memory <highlight><bold>226</bold></highlight> and the DSV calculation memory <highlight><bold>227</bold></highlight> and the DSV values are updated. Additionally, integration is restarted by using the square calculation values of the DSV values including the two types of code words in the DSV square calculation integration memory <highlight><bold>228</bold></highlight> and the DSV square calculation integration memory <highlight><bold>229</bold></highlight>. </paragraph>
<paragraph id="P-0195" lvl="0"><number>&lsqb;0195&rsqb;</number> As described above, generation of two code word series is started every two types of synchronous words created at predetermined intervals or every time two types of code words are created, and the two code word series having the two types of DSV polarities are respectively temporarily stored in the code word memories <highlight><bold>224</bold></highlight> and <highlight><bold>225</bold></highlight>. </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> Then, when the two synchronous words are generated or when two selectable code words are obtained, a code word series having a smaller square calculation accumulated value of DSV is determined and outputted as a digital modulation signal. Therefore, the output digital modulation signal is a code word series which is intermittent in time, but the memory control/code output portion <highlight><bold>231</bold></highlight> actually includes a temporary memory circuit. The output digital modulation signal is temporarily buffer-stored in this circuit and then outputted from the p-q modulation portion <highlight><bold>22</bold></highlight> as a continuous code word series signal. </paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> Incidentally, the determined code word series is not outputted to the memory control/code output portion <highlight><bold>231</bold></highlight> when the code word series is determined, but the contents of the code word memory <highlight><bold>224</bold></highlight> and the code word memory <highlight><bold>225</bold></highlight> may be uniformly stored with the determined code word series and the previously determined code word series when the code word series is determined. Further, when all code word series in a predetermined interval, for example, from a synchronous word to a next synchronous word are determined, they may be outputted to the memory control/code output portion <highlight><bold>231</bold></highlight>. </paragraph>
<paragraph id="P-0198" lvl="0"><number>&lsqb;0198&rsqb;</number> Furthermore, in the above description, the code word series is determined by comparing the DSV square calculation integration values when the next DSV-controllable condition is satisfied starting from the DSV-controllable synchronous word or code word. However, the DSV square calculation integration values in a longer interval may be compared by performing integration of the interval for integrating the DSV square calculation until the next DSV-controllable condition is satisfied. Moreover, the timing is not restricted to the DSV-controllable point in time, but arbitrary point in time, e.g., from the DSV-controllable point to a point in time when a predetermined number of sets of source data are inputted may be set. </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> Description will now be given as to the coding tables <highlight><bold>23</bold></highlight><highlight><subscript>1</subscript></highlight>, <highlight><bold>23</bold></highlight><highlight><subscript>2</subscript></highlight>, . . . , <highlight><bold>23</bold></highlight><highlight><subscript>n </subscript></highlight>used for performing p-q modulation. <cross-reference target="DRAWINGS">FIG. 12</cross-reference> shows an example of the coding tables in which p&equals;4 and q&equals;6 and which is under the run-length limited rule RLL (1, 9). The coding tables in this drawing show the code words in RLL (Run Length Limited) encoding in which a number of &ldquo;0&rdquo; existing between &ldquo;1&rdquo; and &ldquo;1&rdquo; is restricted to 1 to 9. </paragraph>
<paragraph id="P-0200" lvl="0"><number>&lsqb;0200&rsqb;</number> The coding tables in <cross-reference target="DRAWINGS">FIG. 12</cross-reference> specifically show four coding tables (namely, the coding table <highlight><bold>23</bold></highlight><highlight><subscript>1 </subscript></highlight>of S(k)&equals;0, the coding table <highlight><bold>23</bold></highlight><highlight><subscript>2 </subscript></highlight>of S(k)&equals;1, the coding table <highlight><bold>23</bold></highlight><highlight><subscript>3 </subscript></highlight>of S(k)&equals;2 and the coding table <highlight><bold>23</bold></highlight><highlight><subscript>4 </subscript></highlight>of S(k)&equals;3 in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>) having the four status (or table numbers) in which S(k) is &ldquo;0&rdquo; to &ldquo;3&rdquo;. Moreover, D(k) denotes source data (input data word) consisting of four (&equals;p) bits, and C(k) designates an output code word consisting of six (&equals;q) bits after conversion. C(k) is notated by both a decimal value and a binary value. </paragraph>
<paragraph id="P-0201" lvl="0"><number>&lsqb;0201&rsqb;</number> In addition, S(k&plus;1) in the coding table represents status information (table number) of the coding table used for encoding the next source data D(k&plus;1) in order to obtain a next code word which satisfies the RLL(1, 9) limitation even if it is directly combined with the output code word C(k). That is, in accordance with the status information S(k) indicative of one coding table used for encoding (modulating) the source data D(k), the status information S(k&plus;1) of the coding table used for encoding (modulating) the source data D(k&plus;1) which is subsequently inputted is stored as a table in association with the former information. </paragraph>
<paragraph id="P-0202" lvl="0"><number>&lsqb;0202&rsqb;</number> Description will now be given as to the condition when existence of the above-described alternative is detected in the output code word C(k) obtained making reference to the coding table. <cross-reference target="DRAWINGS">FIG. 13</cross-reference> shows six conditions when determining existence of an alternative. In the drawing, D(k) denotes a value (decimal numeral) of source data consisting of four bits; C(k), an output code word consisting of six bits; S(k), a status (table number) of the table at a time k; and L(k&minus;1), a low order zero-run length of C(k&minus;1). </paragraph>
<paragraph id="P-0203" lvl="0"><number>&lsqb;0203&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, for example, the condition of existence of an alternative shown as the condition 1 is that the low order zero-run length L(k&minus;1) of the preceding code word is &ldquo;4&rdquo; or &ldquo;5&rdquo; and a value of the source data D(k) is not more than &ldquo;6&rdquo;, or L(k&minus;1) is &ldquo;6&rdquo; and a value of D(k) is any of &ldquo;0&rdquo;, &ldquo;1&rdquo;, &ldquo;3&rdquo; and &ldquo;5&rdquo; when using the coding table <highlight><bold>23</bold></highlight><highlight><subscript>4 </subscript></highlight>of S(k)&equals;3. When this condition 1 is satisfied, the code word can be replaced with the counterpart in the coding table <highlight><bold>23</bold></highlight><highlight><subscript>2 </subscript></highlight>of S(k)&equals;1. </paragraph>
<paragraph id="P-0204" lvl="0"><number>&lsqb;0204&rsqb;</number> In addition, in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, for example, the condition of presence of an alternative shown as the condition 3 is that the low order zero-run length L(k&minus;1) of the preceding code word is not less than &ldquo;1&rdquo; and not more than &ldquo;4&rdquo;, and also a value of the source data D(k) is &ldquo;0&rdquo; or &ldquo;5&rdquo; when using the coding table <highlight><bold>23</bold></highlight><highlight><subscript>3 </subscript></highlight>of S(k)&equals;2. When this condition 3 is satisfied, the code word can be replaced with the counterpart in the coding table <highlight><bold>23</bold></highlight><highlight><subscript>1 </subscript></highlight>of S(k)&equals;0. </paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> Therefore, when any one of the six conditions shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is satisfied, there is a replaceable code word, and hence the code word alternative presence/absence detection circuit <highlight><bold>221</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference> detects whether any one of these six conditions is satisfied. When any one condition is satisfied, a signal indicative of presence of an alternative is outputted as a result of alternative detection, and the alternative detection result signal is supplied to the square integration value comparison portion <highlight><bold>230</bold></highlight>, and DSV square calculation integrated values of the two code series are compared with each other. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> Comparison processing of the DSV square calculation integrated values is also performed when the synchronous word (synchronous signal) is generated. The synchronous word (synchronous signal) will now be described. <cross-reference target="DRAWINGS">FIG. 14</cross-reference> shows an example of four synchronous words used in accordance with a value of S(k). </paragraph>
<paragraph id="P-0207" lvl="0"><number>&lsqb;0207&rsqb;</number> In the drawing, there are shown synchronous words each consisting of 24 bits which are used in accordance with the four coding tables in which S(k) is 0 to 3, and illustrates that the least significant bit of each of these words can be inverted in the form of X. Furthermore, it is assumed that a value of S(k) is changed to S(k)&equals;1 after these synchronous words. </paragraph>
<paragraph id="P-0208" lvl="0"><number>&lsqb;0208&rsqb;</number> In this manner, when the two types of selectable code words are generated based on the synchronous words inserted at predetermined intervals or the conditions shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>, the code word series signal having a smaller DSV square calculation integrated value is selected and outputted as an output signal from the p-q modulation portion <highlight><bold>22</bold></highlight>. </paragraph>
<paragraph id="P-0209" lvl="0"><number>&lsqb;0209&rsqb;</number> The operation of this embodiment will now be described with reference to a flowchart of <cross-reference target="DRAWINGS">FIG. 15</cross-reference>. The p-q modulation portion <highlight><bold>22</bold></highlight> sets the initial state so as to take an arbitrary S(k) (step S<highlight><bold>201</bold></highlight>), and judgment is then made upon whether the input data word is a word other than a synchronous word (step S<highlight><bold>202</bold></highlight>). If it is a synchronous word, reference is made to the DSV square calculation integrated values respectively stored in the DSV square calculation integration memory <highlight><bold>228</bold></highlight> and the DSV square calculation integration memory <highlight><bold>229</bold></highlight> and these values are compared in largeness by the square integration value comparison portion <highlight><bold>230</bold></highlight>. Based on a result of comparison, the memory control/code output portion <highlight><bold>231</bold></highlight> selects and outputs the code word series signal which has a smaller DSV square calculation integrated value and is stored in the code word memory <highlight><bold>224</bold></highlight> or <highlight><bold>225</bold></highlight> as an output code word (step S<highlight><bold>211</bold></highlight>). </paragraph>
<paragraph id="P-0210" lvl="0"><number>&lsqb;0210&rsqb;</number> After outputting the output code word, the stored content of the non-selected code word memory is replaced with that of the selected code word memory, and the content of the non-selected DSV calculation memory is rewritten with the content of the selected DSV calculation memory. Further, the both non-selected and selected DSV square calculation integration memories <highlight><bold>228</bold></highlight> and <highlight><bold>229</bold></highlight> clear the DSV square calculation integrated values therein(step S<highlight><bold>212</bold></highlight>). </paragraph>
<paragraph id="P-0211" lvl="0"><number>&lsqb;0211&rsqb;</number> After clearing the DSV square calculation integrated values, the synchronous word shown in <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is selected in accordance with a value of the status information S(k) (step S<highlight><bold>213</bold></highlight>). For example, the synchronous word having LSB of 0 is supplied to the code word memory <highlight><bold>224</bold></highlight>, and the synchronous words having LSB of 1 is supplied to the code word memory <highlight><bold>225</bold></highlight> (step S<highlight><bold>208</bold></highlight>). The above has described the operation when the synchronous word is generated. </paragraph>
<paragraph id="P-0212" lvl="0"><number>&lsqb;0212&rsqb;</number> The operation when the synchronous word is not generated will now be explained. When it is determined that a data word supplied as a modulation target is a word other than a synchronous word at the step S<highlight><bold>202</bold></highlight>, the 4-bit source data D(k) is supplied to the code word alternative presence/absence detection circuit <highlight><bold>221</bold></highlight> (step S<highlight><bold>203</bold></highlight>). </paragraph>
<paragraph id="P-0213" lvl="0"><number>&lsqb;0213&rsqb;</number> The code word alternative presence/absence detection circuit <highlight><bold>221</bold></highlight> detects whether there is a code word matching with any one of the six conditions shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> in the inputted source data D(k) (step S<highlight><bold>204</bold></highlight>), and detects existence of the code word when it matches with any one condition. The code word alternative presence/absence detection circuit <highlight><bold>221</bold></highlight> outputs a result of detecting existence of an alternative, and this result is supplied to the coding table address generation portion <highlight><bold>222</bold></highlight>. On the other hand, it is also supplied to the DSV square calculation integration memory <highlight><bold>228</bold></highlight>, the DSV square calculation integration memory <highlight><bold>229</bold></highlight> and the square integration value comparison portion <highlight><bold>230</bold></highlight>. </paragraph>
<paragraph id="P-0214" lvl="0"><number>&lsqb;0214&rsqb;</number> The square integration value comparison portion <highlight><bold>230</bold></highlight> makes reference to the DSV square calculation integrated values respectively stored in the DSV square calculation integration memory <highlight><bold>228</bold></highlight> and the DSV square calculation integration memory <highlight><bold>229</bold></highlight> and compares them in largeness. Based on a result of comparison, the memory control/code output portion <highlight><bold>231</bold></highlight> selects the code word series signal with a smaller DSV square calculation integrated value stored in the code word memory <highlight><bold>224</bold></highlight> or <highlight><bold>225</bold></highlight>, and outputs it as an output code word (step S<highlight><bold>205</bold></highlight>). </paragraph>
<paragraph id="P-0215" lvl="0"><number>&lsqb;0215&rsqb;</number> After outputting the output code word, the stored content of the non-selected code word memory is replaced with the content of the code word in the selected code word memory, and the content of the non-selected DSV calculation memory is replaced with the content of the selected DSV calculation memory. Furthermore, the both non-selected and selected DSV square calculation integration memories <highlight><bold>228</bold></highlight> and <highlight><bold>229</bold></highlight> clear the DSV square calculation integrated values therein (step S<highlight><bold>206</bold></highlight>). </paragraph>
<paragraph id="P-0216" lvl="0"><number>&lsqb;0216&rsqb;</number> After clearing the DSV square calculation integration values, the coding table address generation portion <highlight><bold>122</bold></highlight> uses two replaceable coding tables among the four coding tables shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference> in order to select the first and second code words C(k)0 and C(k)1. Then, it supplies the first code word C(k)0 to the code word memory <highlight><bold>224</bold></highlight> and the DSV calculation memory <highlight><bold>226</bold></highlight> and the second code word C(k)1 to the code word memory <highlight><bold>225</bold></highlight> and the DSV calculation memory <highlight><bold>227</bold></highlight>, thereby storing these words in the respective memories (steps S<highlight><bold>207</bold></highlight> and S<highlight><bold>208</bold></highlight>). </paragraph>
<paragraph id="P-0217" lvl="0"><number>&lsqb;0217&rsqb;</number> As a result, the DSV calculation memories <highlight><bold>226</bold></highlight> and <highlight><bold>227</bold></highlight> receive as the code words C(k)0 and C(k)1 the first synchronous word and the second synchronous word after processing at the step S<highlight><bold>213</bold></highlight>, the first code word and the second code word after processing at the step S<highlight><bold>207</bold></highlight>, or the same code word in case of the code word when it is determined that there is no alternative at the step S<highlight><bold>104</bold></highlight>, respectively. The DSV calculation memory <highlight><bold>226</bold></highlight> and the DSV calculation memory <highlight><bold>227</bold></highlight> calculate CDS of the newly supplied code words C(k)0 and C(k)1, add the calculated CDS to the DSV values of the immediately preceding stored code word, and update the memory contents as the DSV values including the newly supplied code words (step S<highlight><bold>209</bold></highlight>). </paragraph>
<paragraph id="P-0218" lvl="0"><number>&lsqb;0218&rsqb;</number> Subsequently, the respective new DSV values outputted from the DSV calculation memory <highlight><bold>226</bold></highlight> and the DSV calculation memory <highlight><bold>227</bold></highlight> are supplied to the DSV square calculation integration memory <highlight><bold>228</bold></highlight> and the DSV square calculation integration memory <highlight><bold>229</bold></highlight> where square calculation of the inputted DSV values is performed, and the square calculation values are added to the immediately preceding integrated values, thereby updating the respective integrated values of the DSV calculation memory <highlight><bold>226</bold></highlight> and the DSV calculation memory <highlight><bold>227</bold></highlight> (step S<highlight><bold>209</bold></highlight>). </paragraph>
<paragraph id="P-0219" lvl="0"><number>&lsqb;0219&rsqb;</number> After such a series of operations, judgment is made upon whether encoding be completed (step S<highlight><bold>210</bold></highlight>). If it is determined that encoding has been completed, it is terminated. If it is determined that encoding is yet to be completed, the processing is returned to the step S<highlight><bold>202</bold></highlight>. </paragraph>
<paragraph id="P-0220" lvl="0"><number>&lsqb;0220&rsqb;</number> In this manner, the code word series signal having a smaller DSV value is obtained, and the obtained signal is acquired as an NRZI-modulated signal having a small direct-current component when NRZI-modulated. </paragraph>
<paragraph id="P-0221" lvl="0"><number>&lsqb;0221&rsqb;</number> Next, the relationship between the code word represented as NRZ, a recoding signal converted into NRZI, CDS and DSV will be illustrated, and description will be given as to the fact that the direct-current component can be reduced by selecting code words having different DSV polarities. </paragraph>
<paragraph id="P-0222" lvl="0"><number>&lsqb;0222&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 16A and 16B</cross-reference> show the code word signal represented as generated NRZ, a signal obtained by NRZI-converting the code word signal, and values of CDS and DSV relative to the signal converted into NRZI. </paragraph>
<paragraph id="P-0223" lvl="0"><number>&lsqb;0223&rsqb;</number> In the two code word strings represented as NRZ shown in <cross-reference target="DRAWINGS">FIGS. 16A and 16B</cross-reference>, although C(k&minus;1) and C(k&plus;1) are the same code words, C(k) is a replaceable code word which matches with the condition shown as the condition 1 in <cross-reference target="DRAWINGS">FIG. 13</cross-reference>. In <cross-reference target="DRAWINGS">FIG. 16</cross-reference>A, the code word &ldquo;101001&rdquo; is selected. On the other hand, in <cross-reference target="DRAWINGS">FIG. 16</cross-reference>B, the code word &ldquo;001001&rdquo; is selected. </paragraph>
<paragraph id="P-0224" lvl="0"><number>&lsqb;0224&rsqb;</number> As to calculation of CDS and DSV, their values can be obtained by integration as &plus;1 when the level is 1 with respect to the NRZI-converted signal and as &minus;1 when the level is 0 with respect to the same. In <cross-reference target="DRAWINGS">FIG. 16</cross-reference>A, since CDS of each code word is &minus;4, 0 or &plus;4 and modulated from the level 1, DSV up until C(k&plus;1) is 0. In addition, in <cross-reference target="DRAWINGS">FIG. 16</cross-reference>B, CDS is &minus;4, 0 or &minus;4, and DSV is &minus;8. That is because a number of &ldquo;1&rdquo; in C(k) differs in <cross-reference target="DRAWINGS">FIG. 16</cross-reference>A and <cross-reference target="DRAWINGS">FIG. 16</cross-reference>B, and hence the last bit of the signal obtained by NRZI-converting C(k) is &ldquo;1&rdquo; in <cross-reference target="DRAWINGS">FIG. 16A</cross-reference> while the same is &ldquo;0&rdquo; in <cross-reference target="DRAWINGS">FIG. 16</cross-reference>B, and accordingly DSV of the former is increased by a succeeding code while DSV of the latter is decreased by the succeeding code, and the two DSVs are opposite to each other. </paragraph>
<paragraph id="P-0225" lvl="0"><number>&lsqb;0225&rsqb;</number> In this manner, when the code word matching with the condition of <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is supplied, the code words having different DSV polarities are used as shown in <cross-reference target="DRAWINGS">FIGS. 16A and 16B</cross-reference>, thereby obtaining the digital modulation signals having different DSV characteristics. </paragraph>
<paragraph id="P-0226" lvl="0"><number>&lsqb;0226&rsqb;</number> Of the two thus obtained code word series, the code word series having a smaller direct-current component of the digital modulation signal generated after NRZI modulation must be selected. Description will now be given as to the method for determining the code word series by using the DSV level to a plurality of DSV conversion points to which the output code word is determined for this selection. </paragraph>
<paragraph id="P-0227" lvl="0"><number>&lsqb;0227&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> shows an example of the relationship between the code word and the DSV level in order to illustrate the operation of the DSV square calculation integration portion <highlight><bold>16</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 11</cross-reference>. In <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, the horizontal axis represents a time base, and the vertical axis shows a value of DSV. Additionally, each of times k, k&plus;1, k&plus;2 and k&plus;3 represents a time at which a code word matching with the condition enabling DSV conversion emerges or a synchronous word is inserted. Further, the time k represents the state that there is no code word remaining in the code word memories <highlight><bold>224</bold></highlight> and <highlight><bold>225</bold></highlight> since the code word series has been already selected and determined and the code word series before the time k has been outputted as output code words. </paragraph>
<paragraph id="P-0228" lvl="0"><number>&lsqb;0228&rsqb;</number> Furthermore, M0 denotes a DSV square calculation integrated value when C(k)0 is the head in a section from the time k to the time k&plus;1, and M1 designates a DSV square calculation integrated value when C(k) 1 is likewise the head. Similarly, there are four DSV square calculation integrated values M00 to M11 in a section from the time k&plus;1 to the time k&plus;2, and there are eight DSV square calculation integrated values M000 to M111 in a section from the time k&plus;2 to the time k&plus;3. </paragraph>
<paragraph id="P-0229" lvl="0"><number>&lsqb;0229&rsqb;</number> Data of the eight DSV square calculation integrated values is obtained in the section from the time k to the time k&plus;3 in this way. Description will now be given as to the method for determining the code word which is carried out based on the thus obtained data and concerns selection of any one of the code word series temporarily stored in the code word memory <highlight><bold>224</bold></highlight> and the code word memory <highlight><bold>225</bold></highlight> at the time k&plus;1. </paragraph>
<paragraph id="P-0230" lvl="0"><number>&lsqb;0230&rsqb;</number> The time k&plus;1 is a time at which a selectable code word or a synchronous word has emerged, and the code word having C(k)0 as the head is stored in the code word memory <highlight><bold>224</bold></highlight> while the code word having C(k)1 as the head is stored in the code word memory <highlight><bold>225</bold></highlight>. Selection of the code word memory at the time k&plus;1 is performed by comparison in smallness between the DSV square calculation integrated value up until the time k&plus;3 when C(k)0 is selected and the DSV square calculation integrated value up until the time k&plus;3 when C(k)1 is selected. </paragraph>
<paragraph id="P-0231" lvl="0"><number>&lsqb;0231&rsqb;</number> Although calculation of the DSV square calculation integrated values is effected in the DSV square calculation integration portion <highlight><bold>16</bold></highlight>, it is good enough to calculate the DSV square calculation integrated value until the time k&plus;3 when C(k)0 is selected and the DSV square calculation integrated value until the time k&plus;3 when C(k)1 is selected. Furthermore, the code word memories <highlight><bold>224</bold></highlight> and <highlight><bold>225</bold></highlight> do not have to store the code words in a section from the time k&plus;1 to the time k&plus;3, and calculating only the DSV calculation value and the DSV square calculation integrated value can suffice. </paragraph>
<paragraph id="P-0232" lvl="0"><number>&lsqb;0232&rsqb;</number> Conditions for selecting the code word memories <highlight><bold>224</bold></highlight> and <highlight><bold>225</bold></highlight> will now be described. That is, it is assumed that a minimum value among the following is min(M1): </paragraph>
<paragraph id="P-0233" lvl="2"><number>&lsqb;0233&rsqb;</number> M0&plus;M00&plus;M000; </paragraph>
<paragraph id="P-0234" lvl="2"><number>&lsqb;0234&rsqb;</number> M0&plus;M00&plus;M001; </paragraph>
<paragraph id="P-0235" lvl="2"><number>&lsqb;0235&rsqb;</number> M0&plus;M01&plus;M010; and </paragraph>
<paragraph id="P-0236" lvl="2"><number>&lsqb;0236&rsqb;</number> M0&plus;M01&plus;M011 </paragraph>
<paragraph id="P-0237" lvl="7"><number>&lsqb;0237&rsqb;</number> Also, it is assumed that a minimum value among the following is min(M1): </paragraph>
<paragraph id="P-0238" lvl="2"><number>&lsqb;0238&rsqb;</number> M1&plus;M10&plus;M100; </paragraph>
<paragraph id="P-0239" lvl="2"><number>&lsqb;0239&rsqb;</number> M1&plus;M10&plus;M101; </paragraph>
<paragraph id="P-0240" lvl="2"><number>&lsqb;0240&rsqb;</number> M1&plus;M11&plus;M110; and </paragraph>
<paragraph id="P-0241" lvl="2"><number>&lsqb;0241&rsqb;</number> M1&plus;M11&plus;M111 </paragraph>
<paragraph id="P-0242" lvl="7"><number>&lsqb;0242&rsqb;</number> Then, the code word memory <highlight><bold>224</bold></highlight> is selected when min(M0) is smaller than min(M1), and the code word memory <highlight><bold>225</bold></highlight> is selected in any other case. </paragraph>
<paragraph id="P-0243" lvl="0"><number>&lsqb;0243&rsqb;</number> Although the above has described the case when calculation of CDS is conducted every code word bit, it is possible to obtain the CDS value as a table in advance with respect to each code word and calculate the CDS value by using this table. </paragraph>
<paragraph id="P-0244" lvl="0"><number>&lsqb;0244&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> is a table showing the CDS values obtained with respect to the code words. In the drawing, the CDS value of each code word when the last bit is on the level 1 if the code word immediately before each code word in the coding table shown in <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is subjected to NRZI conversion, and the CDS values shown in this table correspond to the respective code words in the coding table illustrated in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>. </paragraph>
<paragraph id="P-0245" lvl="0"><number>&lsqb;0245&rsqb;</number> Although values of CDS are obtained based on the code words in this manner, the DSV values or the DSV square calculation values can be calculated based on the thus obtained CDS values, and a code word series of a digital signal having a smaller direct-current component can be selected. </paragraph>
<paragraph id="P-0246" lvl="0"><number>&lsqb;0246&rsqb;</number> Incidentally, the recording apparatus which records a signal on a storage medium such as an optical disk has been described in the foregoing embodiments, a digital signal may be transmitted through a network by the digital signal transmission apparatus <highlight><bold>3</bold></highlight> adopting the digital signal modulation method or the digital signal modulation apparatus according to the present invention as shown in <cross-reference target="DRAWINGS">FIG. 19</cross-reference>. </paragraph>
<paragraph id="P-0247" lvl="7"><number>&lsqb;0247&rsqb;</number> &lt;Third Embodiment&gt;</paragraph>
<paragraph id="P-0248" lvl="0"><number>&lsqb;0248&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 19</cross-reference>, the same reference numerals denote the same constituent parts as those in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, thereby omitting their explanation. In <cross-reference target="DRAWINGS">FIG. 19, a</cross-reference> digital modulation signal fetched from the digital signal modulator <highlight><bold>10</bold></highlight> is supplied to the transmission encoding portion <highlight><bold>310</bold></highlight> where a second digital modulation is effected according to needs so as to obtain a signal suitable to be transmitted through the network. A header for transmission is then added to this signal, and packet data having the header added thereto is outputted. This packet data is transmitted to the reception apparatus on the other side through the non-illustrated network. </paragraph>
<paragraph id="P-0249" lvl="0"><number>&lsqb;0249&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> is a block diagram showing an example of the above-described reception apparatus. The reception apparatus <highlight><bold>5</bold></highlight> is configured to have a transmission decoding portion <highlight><bold>51</bold></highlight> and a digital signal demodulator <highlight><bold>52</bold></highlight>. After the packet data received in the non-illustrated reception portion of the reception apparatus <highlight><bold>5</bold></highlight> through the network is supplied to the transmission decoding portion <highlight><bold>51</bold></highlight> and the header is removed, it is supplied to the digital signal demodulator <highlight><bold>52</bold></highlight> where demodulation is carried out. </paragraph>
<paragraph id="P-0250" lvl="0"><number>&lsqb;0250&rsqb;</number> Furthermore, for example, in case of supplying the digital modulation signal of the digital signal modulation apparatus to any other peripheral apparatus as a base band signal, even if the ground potential differs between the apparatuses and they are coupled through, e.g., a high-frequency transformer, since there is rarely a direct-current component included in the digital modulation signal, the signal can be stably transmitted. </paragraph>
<paragraph id="P-0251" lvl="0"><number>&lsqb;0251&rsqb;</number> Incidentally, the present invention is not restricted to the above-described embodiments. For example, in the above explanation of the operation in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the output code word outputted from the code word memory <highlight><bold>224</bold></highlight> or <highlight><bold>225</bold></highlight> through the memory control/code output portion <highlight><bold>231</bold></highlight> is subjected to NRZI conversion, but the recording code word strings which have been subjected to NRZI conversion may be stored in the code word memories <highlight><bold>224</bold></highlight> and <highlight><bold>225</bold></highlight>. </paragraph>
<paragraph id="P-0252" lvl="0"><number>&lsqb;0252&rsqb;</number> Moreover, although <cross-reference target="DRAWINGS">FIG. 14</cross-reference> shows the examples of the synchronous words, it is good enough that the synchronous words are synchronization patterns which can be readily discriminated from code words and the two synchronous words are set so as to have different DSV values. Also, even if any other synchronization pattern is used, completely the same operation can be performed. </paragraph>
<paragraph id="P-0253" lvl="0"><number>&lsqb;0253&rsqb;</number> In addition, although the example of the coding tables corresponding to four statuses for converting four bits into six bits has been described in the foregoing embodiments, it is possible to employ any other method for performing modulation by using the coding table which converts p bits into q bits and the structure of the modulation apparatus adopting this method. It is good enough to select appropriate values of p and q in accordance with the characteristic of the digital modulation signal to be obtained. For example, a number of conditions of existence of an alternative shown in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> may be increased by changing values of p and q, and an encoded series with an increased frequency may be selected. </paragraph>
<paragraph id="P-0254" lvl="0"><number>&lsqb;0254&rsqb;</number> Additionally, although respective minimum values of the DSV square calculation integrated values having C(k)0 and C(k)1 as the head in a section from k to k&plus;3 are compared with each other in <cross-reference target="DRAWINGS">FIG. 17, M</cross-reference>0 and M1 may be compared in order to select and determine a code word, and k&plus;2 or k&plus;4 or higher may be used. A code word may be selected and determined by comparing respective minimum values of the DSV square calculation integrated values having C(k)0 and C(k)1 as the head in a section from k to k&plus;n (n is an integer not less than 1). </paragraph>
<paragraph id="P-0255" lvl="0"><number>&lsqb;0255&rsqb;</number> Further, the present invention includes a computer program which causes the code word alternative presence/absence detection circuit <highlight><bold>221</bold></highlight>, the coding table address generation portion <highlight><bold>222</bold></highlight>, the code word memories <highlight><bold>224</bold></highlight> and <highlight><bold>225</bold></highlight>, the DSV square calculation integration portion <highlight><bold>26</bold></highlight> and the memory control/code output portion <highlight><bold>231</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference> to function by a computer. This computer program is directly loaded on the digital signal recording apparatus <highlight><bold>1</bold></highlight>R of <cross-reference target="DRAWINGS">FIG. 10</cross-reference> or the digital signal transmission apparatus <highlight><bold>3</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 19</cross-reference> to function, and also a program distributed from a server through a communication network is loaded on the apparatus <highlight><bold>1</bold></highlight>R or <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0256" lvl="7"><number>&lsqb;0256&rsqb;</number> &lt;Fourth Embodiment&gt;</paragraph>
<paragraph id="P-0257" lvl="0"><number>&lsqb;0257&rsqb;</number> A fourth embodiment according to the present invention will now be described with reference to the drawings. <cross-reference target="DRAWINGS">FIG. 21</cross-reference> is a block diagram showing the fourth embodiment of an encoding apparatus according to the present invention, and <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a block diagram of the fourth embodiment showing a primary part of the encoding apparatus according to the present invention. An encoding apparatus <highlight><bold>1</bold></highlight>E according to an embodiment of the present invention will first be described with reference to <cross-reference target="DRAWINGS">FIG. 21</cross-reference>. A digital information signal obtained by converting an image or sound which should be encoded into a binary sequence by using non-illustrated dispersing means is subjected to so-called formatting such as addition of an error correction code or sector structuralization in accordance with a recording format of a storage medium <highlight><bold>2</bold></highlight> in a formatting portion <highlight><bold>11</bold></highlight>, turned into source code series each consisting of four bits, and thereafter added to a 4-6 modulation portion <highlight><bold>32</bold></highlight>. </paragraph>
<paragraph id="P-0258" lvl="0"><number>&lsqb;0258&rsqb;</number> The 4-6 modulation portion <highlight><bold>32</bold></highlight> performs encoding processing which converts every four bits of the source code into six bits by using a plurality of coding tables <highlight><bold>33</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference> as an example in order to encode a source code to be inputted as will be described later, adds a predetermined a synchronous word and outputs an obtained result as a code word. This output code word is subjected to NRZI conversion by an NRZI conversion circuit <highlight><bold>14</bold></highlight> to be turned into a recording signal. Then, it is recorded on the storage medium <highlight><bold>2</bold></highlight> such as an optical disk by a recording drive circuit <highlight><bold>15</bold></highlight>, or subjected to transmission-encoding by a transmission encoding apparatus <highlight><bold>31</bold></highlight> and transmitted to a transmission medium <highlight><bold>3</bold></highlight>. </paragraph>
<paragraph id="P-0259" lvl="0"><number>&lsqb;0259&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> is a block diagram showing a structural example of the 4-6 modulation portion <highlight><bold>32</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 21</cross-reference> in order to explain the operation in more detail. The 4-6 modulation portion <highlight><bold>32</bold></highlight> is a circuit which modulates (encodes) each input data word (source code) D(k) in units of four bits to an output code word in units of six bits. Here, if the output code word in units of six bits is an output code word in units of six bits which satisfies (1, 7) RLL, a number of types of the output code word is <highlight><bold>21</bold></highlight> as shown in <cross-reference target="DRAWINGS">FIG. 23</cross-reference>. </paragraph>
<paragraph id="P-0260" lvl="0"><number>&lsqb;0260&rsqb;</number> As an example of the coding tables used when performing the calculation for obtaining the output code word in units of six bits which satisfies this (1, 7) RLL limitation, there are four coding tables (coding table number S(k)&equals;&ldquo;0&rdquo; to &ldquo;3&rdquo;) such as shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference>. In <cross-reference target="DRAWINGS">FIG. 24</cross-reference>, S(k)&equals;&ldquo;0&rdquo; to S(k)&equals;&ldquo;3&rdquo; designate coding table selection numbers respectively allocated to the four coding tables. Further, S(k&plus;1) in <cross-reference target="DRAWINGS">FIG. 24</cross-reference> denotes a coding table selection number for selecting a coding table used for next encoding. </paragraph>
<paragraph id="P-0261" lvl="0"><number>&lsqb;0261&rsqb;</number> The above-described coding tables stores therein an input data word D(k), an output code word C(k) after conversion, and a coding table selection number S(k&plus;1) of the coding table used for encoding a next input data word in order to obtain a next code word which satisfies the (1, 7) RLL even if this code word is directly combined with the output code word C(k) in association with each other. </paragraph>
<paragraph id="P-0262" lvl="0"><number>&lsqb;0262&rsqb;</number> In the four coding tables, the input data word D(k) is represented by a decimal numeral, and the output code word C(k) after conversion is represented by a decimal numeral or a binary numeral. As to the coding table selection number S(k&plus;1), among the four coding tables, a number of the coding table which is used for encoding a next input data word in order to satisfy the (1, 7) RLL even if the code words are directly combined with each other is represented by a decimal numeral. </paragraph>
<paragraph id="P-0263" lvl="0"><number>&lsqb;0263&rsqb;</number> Concrete description will be given as to the case where the input data word D(k) in units of four bits is encoded based on the (1, 7) RLL when &ldquo;4, 5, 6, 7, 8 (decimal)&rdquo; is inputted as the input data words D(k), D(k&plus;1), . . . with reference to <cross-reference target="DRAWINGS">FIG. 26</cross-reference>. In the initial state of encoding, an initial selection number of the coding table is determined by the operation such as insertion of a synchronous word whose description is omitted, and the coding table S(k)&equals;&ldquo;0&rdquo; is selected for example. When the input data word D(k)&equals;4 is inputted to this coding table S(k)&equals;&ldquo;0&rdquo;, the output code word C(k)&equals;18 (decimal) is outputted, and a next coding table selection number S(k&plus;1)&equals;&ldquo;1&rdquo; is selected. </paragraph>
<paragraph id="P-0264" lvl="0"><number>&lsqb;0264&rsqb;</number> Subsequently, when the input data word D(k)&equals;5 is inputted to the selected coding table S(k)&equals;&ldquo;1&rdquo;, the output code word C(k)&equals;9 (decimal) is outputted, and a next coding table selection number S(k&plus;1)&equals;&ldquo;1&rdquo; is selected. Similarly, when the input data word D(k)&equals;6 is inputted to the coding table S(k)&equals;&ldquo;1&rdquo;, the output code word C(k)&equals;2 is outputted, and the coding table selection number S(k&plus;1)&equals;&ldquo;3&rdquo; is selected. Then, when the input data word D(k)&equals;7 is inputted to the coding table S(k)&equals;&ldquo;3&rdquo;, the output code word C(k)&equals;20 is outputted, and the coding table selection number S(k&plus;1)&equals;&ldquo;1&rdquo; is selected. Subsequently, when the input data word D(k)&equals;8 is inputted to the coding table S(k)&equals;&ldquo;1&rdquo;, the output code word C(k)&equals;4 is outputted, and the coding table selection number S(k&plus;1)&equals;&ldquo;2&rdquo; is selected. </paragraph>
<paragraph id="P-0265" lvl="0"><number>&lsqb;0265&rsqb;</number> As a result, &ldquo;4, 5, 6, 7, 8 (decimal)&rdquo; as the input data D(k) are encoded to &ldquo;010010, 001001, 000010, 010100, 000100 (binary)&rdquo; and sequentially outputted. Therefore, an output code word string in which the five output code words C(k) are sequentially directly combined becomes 010010001001000010010100000100, and the output code word string which satisfies the limitation of (1, 7) RLL can be obtained. </paragraph>
<paragraph id="P-0266" lvl="0"><number>&lsqb;0266&rsqb;</number> Although a source code in which an alternative exists does not emerge in this example, the encoding apparatus illustrated in FIGS. <highlight><bold>21</bold></highlight> to <highlight><bold>31</bold></highlight> can obtain the code word string which satisfies the (1, 7) RLL and has code words sequentially directly combined with each other from the source codes D(k) each consisting of four bits and S(k) obtained by delaying S(k&plus;1) outputted when outputting the preceding code word by one word (four-bit length in the source code) by using the coding table shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference>. </paragraph>
<paragraph id="P-0267" lvl="0"><number>&lsqb;0267&rsqb;</number> In this embodiment, the 4-6 modulation portion <highlight><bold>32</bold></highlight> outputs an output code word in units of 6 bits which satisfies the (1, 9) RLL as will be described later by using the four types of coding tables when performing calculation for obtaining an output code word each consisting of six bits which satisfies the (1, 7) RLL as described above. </paragraph>
<paragraph id="P-0268" lvl="0"><number>&lsqb;0268&rsqb;</number> In regard to allocation of the data word D(k) and the code word C(k), it is possible to change the arrangement so as not to cause a trouble in decoding without violating the encoding rule, and the embodiment according to the present invention is effective in any other structure than the coding tables shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference>. </paragraph>
<paragraph id="P-0269" lvl="0"><number>&lsqb;0269&rsqb;</number> The structure of the 4-6 modulation portion <highlight><bold>32</bold></highlight> illustrated in <cross-reference target="DRAWINGS">FIG. 22</cross-reference> will now be described. The 4-6 modulation portion <highlight><bold>12</bold></highlight> is constituted by: a code word alternative presence/absence detection circuit <highlight><bold>321</bold></highlight> to which the input data word (source code) D(k), the output code word C(k&minus;1) and the status information S(k) are respectively inputted; a coding table address calculation portion/synchronous word generation portion/redundant bit insertion portion (which will be referred to as a calculation portion hereinafter) <highlight><bold>323</bold></highlight> which performs encoding by using the four types of coding tables <highlight><bold>33</bold></highlight>; code word memories <highlight><bold>324</bold></highlight> and <highlight><bold>325</bold></highlight>; DSV calculation memories <highlight><bold>326</bold></highlight> and <highlight><bold>327</bold></highlight> provided in accordance with these code word memories <highlight><bold>324</bold></highlight> and <highlight><bold>325</bold></highlight>; a selection judgment portion <highlight><bold>328</bold></highlight>; and a memory control/code output portion <highlight><bold>329</bold></highlight>. </paragraph>
<paragraph id="P-0270" lvl="0"><number>&lsqb;0270&rsqb;</number> The code word alternative presence/absence detection circuit <highlight><bold>321</bold></highlight> detects whether any of the later-described seven conditions with different DSV polarities shown in <cross-reference target="DRAWINGS">FIG. 25</cross-reference> can be satisfied based on the input data word D(k), the status information S(k) from the calculation portion <highlight><bold>323</bold></highlight> and a zero-run length on the LSB side of the output code word C(k&minus;1). The code word alternative presence/absence detection circuit <highlight><bold>321</bold></highlight> outputs a result of alternative detection indicative of existence of an alternative to the calculation portion <highlight><bold>323</bold></highlight> if any condition is satisfied, and outputs a result of alternative detection indicative of absence of an alternative to the same if any condition is not satisfied. </paragraph>
<paragraph id="P-0271" lvl="0"><number>&lsqb;0271&rsqb;</number> The calculation portion <highlight><bold>323</bold></highlight> receives the alternative detection result and the input data word, calculates addresses of the four types of coding tables <highlight><bold>33</bold></highlight> based on the alternative detection result, and supplies to the code word memories <highlight><bold>324</bold></highlight> and <highlight><bold>325</bold></highlight> the code words C(k)0 and C(k)1 calculated and generated from the input data words D(k) by using one or two coding tables <highlight><bold>33</bold></highlight> corresponding to one or two calculated addresses. Further, the calculation portion <highlight><bold>323</bold></highlight> generates a synchronous word of a fixed pattern in one synchronous frame cycle, and outputs it to the code word memories <highlight><bold>324</bold></highlight> and <highlight><bold>325</bold></highlight>. Further, it generates a redundant bit in units of an N data symbol cycle in accordance with the later-described algorithm and outputs it to the code word memories <highlight><bold>324</bold></highlight> and <highlight><bold>325</bold></highlight>. </paragraph>
<paragraph id="P-0272" lvl="0"><number>&lsqb;0272&rsqb;</number> The code word memory <highlight><bold>324</bold></highlight> accumulates the code word C(k)0 from the calculation portion <highlight><bold>323</bold></highlight>, and the code word memory <highlight><bold>325</bold></highlight> accumulates the code word C(k)1 from the calculation portion <highlight><bold>323</bold></highlight>. The DSV calculation memory <highlight><bold>326</bold></highlight> and the DSV calculation memory <highlight><bold>327</bold></highlight> calculate CDS (Code word Digital Sum) every time the code words C(k)0 and C(k)1 are inputted from the code word memory <highlight><bold>324</bold></highlight> and the code word memory <highlight><bold>325</bold></highlight>, and updates the DSV values from this CDS value and the current DSV value. It is to be noted that the CDS value is a result of adding the code word in encoding units, i.e., in units of six bits with 1 determined as &plus;1 and 0 determined as &minus;1 after NRZI conversion. </paragraph>
<paragraph id="P-0273" lvl="0"><number>&lsqb;0273&rsqb;</number> The selection judgment portion <highlight><bold>328</bold></highlight> is configured as shown in, e.g., <cross-reference target="DRAWINGS">FIG. 27</cross-reference> by a circuit which compares absolute values of the DSV values outputted from the DSV calculation memories <highlight><bold>326</bold></highlight> and <highlight><bold>327</bold></highlight> in largeness, controls the memory control/code output portion <highlight><bold>329</bold></highlight> in accordance with a result of comparison, and selects and outputs one of the code words respectively outputted from the code word memories <highlight><bold>324</bold></highlight> and <highlight><bold>325</bold></highlight>. </paragraph>
<paragraph id="P-0274" lvl="0"><number>&lsqb;0274&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 27</cross-reference>, the selection judgment portion <highlight><bold>328</bold></highlight> is constituted by absolute value calculation portions <highlight><bold>3281</bold></highlight> and <highlight><bold>3282</bold></highlight> which calculate absolute values with respect to the DSV values respectively outputted from the DSV calculation memories <highlight><bold>326</bold></highlight> and <highlight><bold>327</bold></highlight>, adders <highlight><bold>3283</bold></highlight> and <highlight><bold>3284</bold></highlight>, registers <highlight><bold>3285</bold></highlight> and <highlight><bold>3286</bold></highlight>, and a comparison portion <highlight><bold>3287</bold></highlight>. The adder <highlight><bold>3283</bold></highlight> adds an output from the register <highlight><bold>3285</bold></highlight> and a first DSV absolute value from the absolute value calculation portion <highlight><bold>3281</bold></highlight> in order to obtain a fist added value, and supplies this value to the register <highlight><bold>3285</bold></highlight> where it is maintained. Similarly, the adder <highlight><bold>3284</bold></highlight> adds an output from the register <highlight><bold>3286</bold></highlight> and a second DSV absolute value from the absolute value calculation portion <highlight><bold>3282</bold></highlight> in order to obtain a second added value, and supplies this value to the register <highlight><bold>3286</bold></highlight> where it is maintained. </paragraph>
<paragraph id="P-0275" lvl="0"><number>&lsqb;0275&rsqb;</number> DSV values in the DSV calculation memories <highlight><bold>326</bold></highlight> and <highlight><bold>327</bold></highlight> are updated in accordance with each conversion from the input data word into the code word. After the updated DSV values are turned into absolute values by the absolute value calculation portions <highlight><bold>3281</bold></highlight> and <highlight><bold>1282</bold></highlight>, the adders <highlight><bold>3283</bold></highlight> and <highlight><bold>3284</bold></highlight> add these absolute values to the previous DSV absolute values from the registers <highlight><bold>3285</bold></highlight> and <highlight><bold>3286</bold></highlight> provided corresponding to these adders, and the obtained values are supplied as first and second added values to the registers <highlight><bold>3285</bold></highlight> and <highlight><bold>3286</bold></highlight> where they are stored. Therefore, DSV absolute values for respective conversions up to the present have been integrated in the registers <highlight><bold>3285</bold></highlight> and <highlight><bold>3286</bold></highlight>. </paragraph>
<paragraph id="P-0276" lvl="0"><number>&lsqb;0276&rsqb;</number> Upon receiving the alternative detection signal from the code word alternative presence/absence detection circuit <highlight><bold>321</bold></highlight>, the comparison portion <highlight><bold>3287</bold></highlight> compares the first and second added values from the registers <highlight><bold>3285</bold></highlight> and <highlight><bold>3286</bold></highlight> in largeness. If the first added value (integrated value of the DSV absolute values) of the register <highlight><bold>3285</bold></highlight> is smaller than the second added value (integrated value of the DSV absolute values) of the register <highlight><bold>3286</bold></highlight>, the comparison portion <highlight><bold>3287</bold></highlight> outputs a judgment signal to the memory control/code output portion <highlight><bold>329</bold></highlight> to control the portion <highlight><bold>329</bold></highlight> to select and output the code word outputted from the code word memory <highlight><bold>324</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 22</cross-reference> as the output code word. On the contrary, if the first added value (integrated value of the DSV absolute values) of the register <highlight><bold>3285</bold></highlight> is equal to or larger than the second added value (integrated value of the DSV absolute values) of the register <highlight><bold>3286</bold></highlight>, the comparison portion <highlight><bold>3287</bold></highlight> outputs a judgment signal to the memory control/code output portion <highlight><bold>329</bold></highlight> to control the portion <highlight><bold>329</bold></highlight> to select and output the code word outputted from the code word memory <highlight><bold>325</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 22</cross-reference> as the output code word. </paragraph>
<paragraph id="P-0277" lvl="0"><number>&lsqb;0277&rsqb;</number> At the same time, the comparison portion <highlight><bold>3287</bold></highlight> clears the first and second added values of the registers <highlight><bold>3285</bold></highlight> and <highlight><bold>3286</bold></highlight> to a value 0. Therefore, the registers <highlight><bold>3285</bold></highlight> and <highlight><bold>3286</bold></highlight> respectively hold a result of integration of the DSV absolute values in each section where an alternative is generated in conversion. </paragraph>
<paragraph id="P-0278" lvl="0"><number>&lsqb;0278&rsqb;</number> It is to be noted that the two code word memories <highlight><bold>324</bold></highlight> and <highlight><bold>325</bold></highlight> are prepared in this embodiment, and the output code word is immediately outputted when the code word alternative presence/absence detection circuit <highlight><bold>321</bold></highlight> detects D(k) having an alternative. However, a number of the code word memories is not restricted two and, when D(k) having an alternative is detected, the output code word does not have to be immediately outputted. Further, it is also effective to use a method by which more memories are provided, some selectable source codes are checked and a code word string having a smallest DSV is selected and outputted. </paragraph>
<paragraph id="P-0279" lvl="0"><number>&lsqb;0279&rsqb;</number> Again referring to <cross-reference target="DRAWINGS">FIG. 22</cross-reference>, when the source code D(k) having an alternative is detected by the code word alternative presence/absence detection circuit <highlight><bold>321</bold></highlight>, the selection judgment portion <highlight><bold>328</bold></highlight> judges selection of a code word from the code word memory <highlight><bold>324</bold></highlight> or <highlight><bold>325</bold></highlight> to be outputted to the outside based on the preceding DSV absolute values by using DSV stored in the DSV calculation memory <highlight><bold>326</bold></highlight> and the DSV calculation memory <highlight><bold>327</bold></highlight>. However, the memory control/code output portion <highlight><bold>329</bold></highlight> selects the code word stored in one code word memory and outputs it to the outside as the output code word by reception of a judgment signal from the selection judgment portion <highlight><bold>328</bold></highlight>. At the same time, the contents of the non-selected code word memory and DSV calculation memory are replaced with the contents of the selected code word memory and DSV calculation memory. </paragraph>
<paragraph id="P-0280" lvl="0"><number>&lsqb;0280&rsqb;</number> The operation of the code word alternative presence/absence detection circuit <highlight><bold>321</bold></highlight> will now be described in detail with reference to <cross-reference target="DRAWINGS">FIG. 25</cross-reference>. <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is a view briefly showing conditions about the operation of the alternative presence/absence calculation circuit <highlight><bold>321</bold></highlight> in case of the (1, 9) RLL. In the drawing, a part concerning the redundant bit will be described later in detail. Here, conditions are those for DSV control under the (1, 9) RLL using the four types of coding tables used in the (1, 7) RLL. </paragraph>
<paragraph id="P-0281" lvl="0"><number>&lsqb;0281&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 25</cross-reference>, S(k) denotes a status at a k-th symbol (which is a coding table number of the four coding tables, and any value of 0 to 3); L(k&minus;1), a zero-run length on the LSB side of the code word C(k&minus;1) of the k&minus;1 symbol, namely, a number of continuous bits <highlight><bold>0</bold></highlight>; and D(k), an input data word consisting of four bits corresponding to the k-th symbol. Furthermore, there are a total of seven conditions, i.e., the condition 1 to the condition 7. </paragraph>
<paragraph id="P-0282" lvl="0"><number>&lsqb;0282&rsqb;</number> As to the condition 1, the status S(k) which is &ldquo;3&rdquo; (when using the coding table of S(k)&equals;3) means that the code word can be replaced with a corresponding code word in the coding table of S(k)&equals;1 when the input data D(k) is not more than 6 if a number of continuous bits <highlight><bold>0</bold></highlight> L(k&minus;1) on the LSB side of the preceding code word is &ldquo;4&rdquo; or &ldquo;5&rdquo;, i.e., &ldquo;010000&rdquo; or &ldquo;100000&rdquo;. Similarly, under the condition 1, the code word can be replaced with a corresponding code word in the coding table of S(k)&equals;1 when L(k&minus;1) is &ldquo;6&rdquo; and D(k) is &ldquo;0&rdquo; or &ldquo;1&rdquo; or &ldquo;3&rdquo; or &ldquo;5&rdquo;. </paragraph>
<paragraph id="P-0283" lvl="0"><number>&lsqb;0283&rsqb;</number> The condition 2 means that the code word can be replaced with a corresponding code word in the coding table of S(k) &equals;1 when S(k) is &ldquo;2&rdquo;, L(k&minus;1) is &ldquo;5&rdquo; or &ldquo;6&rdquo;, and D(k) is not less than &ldquo;7&rdquo; or L(k&minus;1) is &ldquo;4&rdquo; and D(k) is not less than &ldquo;10&rdquo;. </paragraph>
<paragraph id="P-0284" lvl="0"><number>&lsqb;0284&rsqb;</number> The condition 3 means that the code word can be replaced with a corresponding code word in the coding table of S(k)&equals;0 when S(k) is &ldquo;2&rdquo;, L(k&minus;1) is not less than &ldquo;1&rdquo; and not more than &ldquo;4&rdquo;, and D(k)&equals;0 or 5. </paragraph>
<paragraph id="P-0285" lvl="0"><number>&lsqb;0285&rsqb;</number> Under the condition 4, replacement with the coding table S(k)&equals;0 is possible when S(k)&equals;2, L(k&minus;1)&equals;1, and D(k) is &ldquo;13&rdquo; or &ldquo;15&rdquo; at any part other than those immediately before the redundant bit. Further, immediately before the redundant bit, replacement with a corresponding code word in the coding table of S(k)&equals;0 is possible when L(k&minus;1)&equals;1, D(k)&equals;15, and D(k&plus;1) is not less than &ldquo;7&rdquo; or &ldquo;0&rdquo; or &ldquo;5&rdquo;. </paragraph>
<paragraph id="P-0286" lvl="0"><number>&lsqb;0286&rsqb;</number> The condition 5 means that replacement with a corresponding code word in the coding table of S(k)&equals;0 is possible when S(k)&equals;2 and when L(k&minus;1)&equals;2 and D(k)&equals;13 or 15 at any part other than those immediately before the redundant bit. </paragraph>
<paragraph id="P-0287" lvl="0"><number>&lsqb;0287&rsqb;</number> The condition 6 means that replacement with a corresponding code word in the coding table of S(k)&equals;0 is possible when S(k)&equals;2 and L(k&minus;1) is 3 and when D(k)&equals;13 and D(k&plus;1) is not more than &ldquo;6&rdquo; or &ldquo;13&rdquo; or &ldquo;15&rdquo; at any part other than those immediately before the redundant bit. </paragraph>
<paragraph id="P-0288" lvl="0"><number>&lsqb;0288&rsqb;</number> The condition 7 means that replacement with a corresponding code word in the coding table of S(k)&equals;0 is possible when S(k)&equals;2 and L(k&minus;1)&equals;3 and when D(k)&equals;15 and D(k&plus;1) is not less than &ldquo;7&rdquo; or &ldquo;0&rdquo; or &ldquo;5&rdquo; at a any part other than those immediately before the redundant bit. </paragraph>
<paragraph id="P-0289" lvl="0"><number>&lsqb;0289&rsqb;</number> Corresponding replaceable code words in the two coding tables in the condition 1 to the condition 7 are arranged in such a manner that the number of 1 included in code bits of one code word of each pair is even while the number of 1 included in code bits of the other code word is odd and that code words of each pair have the same next state S(k&plus;1) as shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference>. Moreover, even with the replacement, the (1, 9) RLL is not broken. The code word alternative presence/absence detection circuit <highlight><bold>321</bold></highlight> outputs an alternative detection result indicative of existence of an alternative to the calculation portion <highlight><bold>323</bold></highlight> when any one of the condition 1 to the condition 7 is satisfied, and outputs an alternative detection result indicative of absence of an alternative to the calculation portion <highlight><bold>323</bold></highlight> when any condition is not satisfied. </paragraph>
<paragraph id="P-0290" lvl="0"><number>&lsqb;0290&rsqb;</number> The difference in the number of 1 between the code words enables the DSV control apparently because the difference in the number of 1 between C(k)s causes the reverse of the output level after NRZI modulation as shown in <cross-reference target="DRAWINGS">FIGS. 28A and 28B</cross-reference>. For this reason, according to the present modulation method and apparatus, as described above, while the (1, 9) RLL is satisfied, the DSV control is possible. </paragraph>
<paragraph id="P-0291" lvl="0"><number>&lsqb;0291&rsqb;</number> As described above, according to the embodiment, it is possible to realize the encoding apparatus which can generate the codes with the (1, 9) RLL by using the output code word C(k) corresponding to the input data word D(k) and a plurality of the coding tables <highlight><bold>33</bold></highlight> including the coding table specification information S(k&plus;1) which specifies a coding table to be used for encoding the next code word, but a redundant bit can be also inserted in order to suppress the DC component without violating the (1, 9) RLL. </paragraph>
<paragraph id="P-0292" lvl="0"><number>&lsqb;0292&rsqb;</number> Description will now be given as to insertion of redundant bits according to the present invention with reference to <cross-reference target="DRAWINGS">FIGS. 24, 29</cross-reference> and <highlight><bold>30</bold></highlight>. <cross-reference target="DRAWINGS">FIG. 29</cross-reference> shows a signal format of a digital signal outputted from the 4-6 modulation portion <highlight><bold>32</bold></highlight>. As shown in the drawing, one synchronization frame of an output signal from the 4-6 modulation portion <highlight><bold>32</bold></highlight> has a structure in which redundant bits c<highlight><bold>1</bold></highlight>, c<highlight><bold>2</bold></highlight>, c<highlight><bold>3</bold></highlight> are inserted in accordance with respective N data symbols b<highlight><bold>1</bold></highlight>, b<highlight><bold>2</bold></highlight>, b<highlight><bold>3</bold></highlight>, . . . after a synchronous word a of a fixed pattern which is generated by the calculation portion <highlight><bold>323</bold></highlight> and inserted. </paragraph>
<paragraph id="P-0293" lvl="0"><number>&lsqb;0293&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 30</cross-reference>, &ldquo;01 or &ldquo;00&rdquo; can be taken for the redundant bits when the LSB of the preceding code word is &ldquo;1&rdquo;, and &ldquo;10&rdquo; or &ldquo;00&rdquo; can be taken for the same when the LSB of the preceding code word is &ldquo;0&rdquo;. The redundant bits &ldquo;00&rdquo; can reverse the DSV polarity with respect to &ldquo;01&rdquo;. Similarly, &ldquo;00&rdquo; can reverse the DSV polarity with respect to &ldquo;10&rdquo;. For example, inversion of the polarity of the output signal occurs once in case of &ldquo;01&rdquo; or &ldquo;10, whereas inversion of the polarity does not occur in case of &ldquo;00&rdquo;. </paragraph>
<paragraph id="P-0294" lvl="0"><number>&lsqb;0294&rsqb;</number> Here, as described in connection with <cross-reference target="DRAWINGS">FIG. 25</cross-reference>, the code word can be generated under the (1, 9) RLL by using the coding tables shown in <cross-reference target="DRAWINGS">FIG. 24</cross-reference>, and the (1, 9) RLL limitation can be effected even if the redundant bits are &ldquo;00&rdquo;. That is, according to this embodiment, as shown in <cross-reference target="DRAWINGS">FIG. 29</cross-reference>, the code word series having the reverse DSV polarity can be necessarily generated by inserting the redundant bits consisting of two bits at predetermined intervals which is N data symbol intervals. </paragraph>
<paragraph id="P-0295" lvl="0"><number>&lsqb;0295&rsqb;</number> For example, in case of performing encoding from S(1)&equals;2 to D(1)&equals;3, D(2)&equals;15 and D(3) 6 and inserting the redundant bits with C(2) as the head, when encoding is carried out in accordance with <cross-reference target="DRAWINGS">FIG. 24</cross-reference>, C(1)&equals;010001, S(2)&equals;0, C(2)&equals;0000000, S(3)&equals;2 and C(3)&equals;010010 are established, and the zero-run length &ldquo;7&rdquo; is generated in a section including C(2). Since C(1) has the LSB of 1, the redundant bits to be inserted are 00 or 01, and the zero-run length &ldquo;9&rdquo; is not exceeded as shown in <cross-reference target="DRAWINGS">FIGS. 32A and 32B</cross-reference>. At this moment, as apparent from an output waveform after the illustrated NRZI conversion, inversion/non-inversion of the waveform can be selected at the part where the redundant bits are inserted. When DSV is 0 immediately after C(1), DSV immediately after C(3) is 8 (<cross-reference target="DRAWINGS">FIG. 32A</cross-reference>) or &minus;6 (<cross-reference target="DRAWINGS">FIG. 32B</cross-reference>), and it can be understood that the subsequent DSV polarity can be changed. It is to be noted that the redundant bits can be inserted both before and after the code bit to be currently encoded. </paragraph>
<paragraph id="P-0296" lvl="0"><number>&lsqb;0296&rsqb;</number> Description will now be given as to the operation which enables DSV control even if the redundant bits are inserted according to the present invention with reference to the flowchart of <cross-reference target="DRAWINGS">FIG. 31</cross-reference>. An initial table is first set in the calculation portion <highlight><bold>323</bold></highlight> (step S<highlight><bold>301</bold></highlight>). This initial table can be set by determining a coding table number S(k) of the code word following the synchronous word or the like. </paragraph>
<paragraph id="P-0297" lvl="0"><number>&lsqb;0297&rsqb;</number> Subsequently, the input data word (source code) D(k) consisting of four bits is inputted to the 4-6 modulation portion <highlight><bold>12</bold></highlight> (step S<highlight><bold>302</bold></highlight>), and encoding is carried out with S(k) and D(k) by using the coding tables of <cross-reference target="DRAWINGS">FIG. 24</cross-reference>. In the process of encoding, reference is made to the preceding encoded input data word C(k&minus;1), the zero-run length on its LSB side is calculated, and the bit of LSB is detected. Thereafter, judgment is made upon whether next word is the code word to which the redundant bits are added (step S<highlight><bold>303</bold></highlight>). If it is not such a code word, the code word alternative presence/absence detection circuit <highlight><bold>321</bold></highlight> makes judgment upon whether there is an alternative of the code word in accordance with the conditions shown in <cross-reference target="DRAWINGS">FIG. 29</cross-reference> (step S<highlight><bold>304</bold></highlight>). </paragraph>
<paragraph id="P-0298" lvl="0"><number>&lsqb;0298&rsqb;</number> The code word alternative presence/absence detection circuit <highlight><bold>321</bold></highlight> detects whether any one of the seven conditions explained in connection with <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is satisfied based on the initially set status information (coding table number) S(k) supplied from the calculation portion <highlight><bold>323</bold></highlight>, the zero-run length L(k&minus;1) on the LSB side of the preceding encoded input data word C(k&minus;1) and the input data word D(k). If any of the seven conditions is not satisfied, namely, if a selectable code word does not exist in the coding tables of <cross-reference target="DRAWINGS">FIG. 24</cross-reference>, the code word alternative presence/absence detection circuit <highlight><bold>321</bold></highlight> supplies an alternative detection result indicative of absence of an alternative to the calculation portion <highlight><bold>323</bold></highlight>, and the calculation portion <highlight><bold>323</bold></highlight> is caused to output the same code word which is outputted by using the coding table of S(k) to the code word memories <highlight><bold>324</bold></highlight> and <highlight><bold>325</bold></highlight> as C(k)0 and C(k)1 (step S<highlight><bold>308</bold></highlight>). </paragraph>
<paragraph id="P-0299" lvl="0"><number>&lsqb;0299&rsqb;</number> The DSV calculation memory <highlight><bold>326</bold></highlight> and the DSV calculation memory <highlight><bold>327</bold></highlight> calculate CDS every time the code words C(k)0 and C(k)1 are inputted from the code word memory <highlight><bold>324</bold></highlight> and the code word memory <highlight><bold>325</bold></highlight>, and update the DSV value from the CDS value and the DSV value which is obtained from all the output code words which have been selected and stored in the past (step S<highlight><bold>309</bold></highlight>). </paragraph>
<paragraph id="P-0300" lvl="0"><number>&lsqb;0300&rsqb;</number> On the other hand, at the step S<highlight><bold>304</bold></highlight>, when the code word alternative presence/absence detection circuit <highlight><bold>321</bold></highlight> determines that any of the seven conditions explained in connection with <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is satisfied, namely, when a selectable code word exists in the coding table of <cross-reference target="DRAWINGS">FIG. 24</cross-reference>, the code word alternative presence/absence detection circuit <highlight><bold>321</bold></highlight> supplies an alternative detection result indicative of presence of an alternative to the calculation portion <highlight><bold>323</bold></highlight> and the selection judgment portion <highlight><bold>328</bold></highlight>, causes the selection judgment portion <highlight><bold>328</bold></highlight> to perform selection and judgment, and causes the selected code word memory <highlight><bold>324</bold></highlight> or <highlight><bold>325</bold></highlight> to output the code series (step S<highlight><bold>305</bold></highlight>). </paragraph>
<paragraph id="P-0301" lvl="0"><number>&lsqb;0301&rsqb;</number> For example, in the second and subsequent data word input, when the status information S(k) from the calculation portion <highlight><bold>323</bold></highlight> is &ldquo;2&rdquo;, the zero-run length L(k&minus;1) on the LSB side of the immediately preceding output code word C(k&minus;1) is &ldquo;4&rdquo; and the input data word D(k) is &ldquo;5&rdquo;, the condition 3 in <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is satisfied, and hence the code word alternative presence/absence detection circuit <highlight><bold>321</bold></highlight> outputs an alternative detection result (including the coding table number) indicative of presence of an alternative at this moment. Based on the alternative detection result, as described with reference to <cross-reference target="DRAWINGS">FIG. 27</cross-reference>, the selection judgment portion <highlight><bold>328</bold></highlight> takes an absolute value of each output DSV value from the DSV calculation memories <highlight><bold>326</bold></highlight> and <highlight><bold>327</bold></highlight>, adds this absolute value to an accumulated value of DSV absolute values which have been stored, compares two types of the accumulated values in largeness, and controls the memory control/code output portion <highlight><bold>329</bold></highlight> so as to select as the output code word the code word from the code word memory <highlight><bold>324</bold></highlight> or <highlight><bold>325</bold></highlight> corresponding to a smaller value. This is the operation at the step S<highlight><bold>305</bold></highlight>. </paragraph>
<paragraph id="P-0302" lvl="0"><number>&lsqb;0302&rsqb;</number> Then, the memory control/code output portion <highlight><bold>329</bold></highlight> sets the content of the code word memory which outputs the code word which has not been selected as the output code word (the code word memory <highlight><bold>325</bold></highlight> when the output code word of the code word memory <highlight><bold>324</bold></highlight> is selected, and the code word memory <highlight><bold>324</bold></highlight> when the output code word of the code word memory <highlight><bold>325</bold></highlight> is selected) equal to the content of the selected output code word, and sets the content of the DSV calculation memory corresponding to the non-selected code word memory (the DSV calculation memory <highlight><bold>327</bold></highlight> when the output code word of the code word memory <highlight><bold>324</bold></highlight> is selected, and the DSV calculation memory <highlight><bold>326</bold></highlight> when the output code word of the code word memory <highlight><bold>325</bold></highlight> is selected) equal to the content of the DSV calculation memory corresponding to the selected code word memory (step S<highlight><bold>306</bold></highlight>). </paragraph>
<paragraph id="P-0303" lvl="0"><number>&lsqb;0303&rsqb;</number> Subsequently, the calculation portion <highlight><bold>323</bold></highlight> selects code words which are selectable as a code word candidate from one coding table and the other coding table determined by S(k), and outputs the code words as C(k)0 and C(k)1 (step S<highlight><bold>307</bold></highlight>). In the above-described concrete example, since the condition 3 shown in <cross-reference target="DRAWINGS">FIG. 25</cross-reference> is satisfied, the calculation portion <highlight><bold>323</bold></highlight> uses the two coding tables having the coding table numbers S(k) of &ldquo;0&rdquo; and &ldquo;2&rdquo;. The calculation portion <highlight><bold>323</bold></highlight> outputs the output code word C(k) obtained by using the coding table of S(k)&equals;0 as C(k)0 to the code word memory <highlight><bold>324</bold></highlight>, and outputs the output code word C(k) obtained by using the coding table of S(k)&equals;2 as C(k)1 to the code word memory <highlight><bold>325</bold></highlight>. </paragraph>
<paragraph id="P-0304" lvl="0"><number>&lsqb;0304&rsqb;</number> Thereafter, CDS is calculated with respect to each of the code words C(k)0 and C(k)1 respectively stored in the code word memory <highlight><bold>324</bold></highlight> and the code word memory <highlight><bold>325</bold></highlight>, and the DSV calculation memories <highlight><bold>326</bold></highlight> and <highlight><bold>327</bold></highlight> add the calculated CDSs to the up-to-the-present DSV values and thereby update the DSV values (steps S<highlight><bold>308</bold></highlight> and S<highlight><bold>309</bold></highlight>). Then, judgment is made upon whether all encoding steps have been performed (step S<highlight><bold>310</bold></highlight>). If all the encoding steps are yet to be carried out, the processing is returned to the step S<highlight><bold>302</bold></highlight>. </paragraph>
<paragraph id="P-0305" lvl="0"><number>&lsqb;0305&rsqb;</number> Further, if it is determined that the next code word is a code word to which the redundant bits are added at the step S<highlight><bold>303</bold></highlight> (the redundant bits are added every N data symbol as shown in <cross-reference target="DRAWINGS">FIG. 29</cross-reference>), the same selection judgment as that in the step S<highlight><bold>305</bold></highlight> is effected, and the code word series from the selected code word memory is outputted from the memory control/code output portion <highlight><bold>329</bold></highlight> (step S<highlight><bold>311</bold></highlight>). Thereafter, the contents of the non-selected code word memory and DSV memory are rewritten with the contents of selected ones (step S<highlight><bold>312</bold></highlight>). </paragraph>
<paragraph id="P-0306" lvl="0"><number>&lsqb;0306&rsqb;</number> Thereafter, as described in connection with <cross-reference target="DRAWINGS">FIG. 30</cross-reference>, the redundant bit pattern is selected based on the LSB of the code word, and the code word having one of the redundant bits being added thereto is determined as C(k)0 while the code word having the other redundant bits being added thereto is determined as C(k)1 (step S<highlight><bold>313</bold></highlight>). These code words C(k)0 and C(k)1 are respectively supplied and stored in the code word memories <highlight><bold>324</bold></highlight> and <highlight><bold>325</bold></highlight>, and CDS then calculated with respect to each of C(k)0 and C(k)1. The contents of the DSV calculation memories <highlight><bold>326</bold></highlight> and <highlight><bold>327</bold></highlight> are updated by adding the CDSs values (steps S<highlight><bold>308</bold></highlight> and S<highlight><bold>309</bold></highlight>). Generation of the code word including the redundant bits in which the DC component is suppressed is terminated by performing the above-described operation to the end of encoding (step S<highlight><bold>310</bold></highlight>). </paragraph>
<paragraph id="P-0307" lvl="0"><number>&lsqb;0307&rsqb;</number> Meanwhile, as described in connection with <cross-reference target="DRAWINGS">FIG. 25</cross-reference>, there is a condition by which the code word replaceable occasion varies by insertion of the redundant bits. For example, although the condition 4 changes the replacement condition immediately before the redundant bits, this is the processing for maintaining the (1, 9) RLL even if the redundant bits consisting of two bits is &ldquo;00&rdquo;. Furthermore, similarly, the code word replacement when L(k&minus;1)&equals;6 is not performed immediately after the redundant bits. Even if the redundant bits are inserted by this processing, the (1, 9) RLL can be maintained. </paragraph>
<paragraph id="P-0308" lvl="0"><number>&lsqb;0308&rsqb;</number> As described above, according to this embodiment, it is apparent that DSV control is enabled while satisfying the (1, 9) RLL by inserting the redundant bits consisting of two bits every predetermined data word to the output code word which is outputted as a binary series by using the output code word C(k) corresponding to the input data word D(k) and a plurality of coding tables <highlight><bold>33</bold></highlight> including coding table specification information S(k&plus;1) which specifies a coding table used for encoding a next code word. </paragraph>
<paragraph id="P-0309" lvl="0"><number>&lsqb;0309&rsqb;</number> Incidentally, the present invention is not restricted to the foregoing embodiments, and it is apparent that the structure of the coding tables which convert a data word consisting of bits whose number is an integral multiple of 4 into code bits whose number is an integral multiple of 6 so as to allocate, e.g., the data word consisting of eight bits to code word bits consisting of 12 bits while satisfying the DSV control rule can be readily analogized from the foregoing embodiments and can be included in the present invention. </paragraph>
<paragraph id="P-0310" lvl="0"><number>&lsqb;0310&rsqb;</number> Moreover, the present invention includes a computer program which causes the code word alternative presence/absence detection circuit <highlight><bold>321</bold></highlight>, the calculation portion <highlight><bold>323</bold></highlight>, the code word memories <highlight><bold>324</bold></highlight> and <highlight><bold>325</bold></highlight>, the DSV calculation memories <highlight><bold>326</bold></highlight> and <highlight><bold>327</bold></highlight>, the selection judgment portion <highlight><bold>328</bold></highlight> and the memory control/code output portion <highlight><bold>329</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 22</cross-reference> to function by a computer. This computer program is directly loaded in the encoding apparatus <highlight><bold>1</bold></highlight>E shown in <cross-reference target="DRAWINGS">FIG. 21</cross-reference> and caused to function, and also a computer program distributed from a server through a communication network is loaded in the encoding apparatus <highlight><bold>1</bold></highlight>E. </paragraph>
<paragraph id="P-0311" lvl="0"><number>&lsqb;0311&rsqb;</number> As described above, according to the present invention, the first synchronous word and the second synchronous word having respective numbers of times of inversion different from each other are simultaneously generated by NRZI conversion; the code word data group is generated based on the run-length encoding method restricting the run length in a predetermined range; the generated code word data group is arranged after the first synchronous word in order to generate the first code word series data and the code word data group is arranged after the second synchronous word in order to generate the second code word series data; the first direct-current component data concerning the direct-current component generated when NRZI-converting the first code word series data is obtained; the second direct-current component data concerning the direct-current component generated when NRZI-converting the second code word series data is obtained; the thus obtained first direct-current component data and second direct-current component data are compared with each other; and one having smaller direct-current component data is selected from the first code word series data and the second code word series data and supplied. Thus, it is possible to generate the digital modulation signal having the preferable direct-current component suppression characteristic used for recording on a discoid high-density storage medium such as an optical disk while performing predetermined run-length limited encoding. </paragraph>
<paragraph id="P-0312" lvl="0"><number>&lsqb;0312&rsqb;</number> According to the present invention, the first code word and the second code word having respective numbers of times of inversion different from each other are generated by NRZI conversion; the code word data group is generated based on the run-length encoding method by which the run length is restricted in a predetermined range; there are generated the first code word series data obtained by arranging the generated code word data group after the first code word and the second code word series data obtained by arranging the code word data group after the second code word; there are obtained the first direct-current component data concerning the direct-current component generated when NRZI-converting the first code word series data and the second direct-current component data concerning the direct-current component generated when NRZI-converting the second code word series data; the thus obtained first direct-current component data and second direct-current component data are compared with each other; and one having smaller direct-current component data is selected from the first code word series data and the second code word series data and supplied. Thus, it is possible to generate the digital modulation signal having the preferable direct-current component suppression characteristic used for recording on a discoid high-density storage medium such as an optical disk while performing predetermined run-length limited encoding. </paragraph>
<paragraph id="P-0313" lvl="0"><number>&lsqb;0313&rsqb;</number> According to the present invention, since CDS data is used for the direct-current component data in particular, the direct-current component data concerning the direct-current component generated when performing NRZI conversion can be obtained in advance, and hence it is possible to further readily generate the digital modulation signal having the preferable direct-current component suppression characteristic in addition to the above-described advantage. </paragraph>
<paragraph id="P-0314" lvl="0"><number>&lsqb;0314&rsqb;</number> According to the present invention, in particular, since one having a smaller average value level of the direct-current component data is selected from the first code word series data and the second code word series data and selected, the digital modulation signal having the further preferable direct-current component suppression characteristic can be generated in addition to the above-described advantage. </paragraph>
<paragraph id="P-0315" lvl="0"><number>&lsqb;0315&rsqb;</number> According to the present invention, in particular, since one having a smaller peak value of the direct-current component data is selected from the first code word series data and the second code word series data and supplied, the digital modulation signal having the further preferable direct-current component suppression characteristic can be generated in addition to the above-described advantage. </paragraph>
<paragraph id="P-0316" lvl="0"><number>&lsqb;0316&rsqb;</number> According to the present invention, in particular, since the code word series data is selected when the synchronous words are generated or when the source data from which a plurality of code word data having different patterns can be generated is supplied, the digital modulation signal having the further preferable direct-current component suppression characteristic can be generated in addition to the above-described advantage. </paragraph>
<paragraph id="P-0317" lvl="0"><number>&lsqb;0317&rsqb;</number> According to the present invention, the first synchronous word and the second synchronous word having respective numbers of times of inversion different from each other are simultaneously generated by NRZI conversion; the code word data group is generated based on the run-length encoding method by which the run length is restricted in a predetermined range; the generated code word data group is arranged after the first synchronous word in order to generate the first code word series data, and the code word data group is arranged after the second synchronous word in order to generate the second code word series data; there are obtained the first direct-current component data concerning the direct-current generated when NRZI-converting the first code word series data and the second direct-current component data concerning the direct-current component generated when NRZI-converting the second code word series data; the first direct-current component data and the second direct-current component data are compared with each other; and one having smaller direct-component data is selected from the first code word series data and the second code word series data and supplied. Therefore, it is possible to generate the digital modulation signal having the preferable direct-current component suppression characteristic used for recording on a discoid high-density storage medium such as an optical disk while performing predetermined run-length limited encoding. </paragraph>
<paragraph id="P-0318" lvl="0"><number>&lsqb;0318&rsqb;</number> According to the present invention, the first code word and the second code word having respective numbers of times of inversion different from each other are generated by NRZI conversion; the code word data group is generated based on the run-length encoding method by which run length is restricted to a predetermined range; there are generated the first code word series data having the generated code word data group arranged after the first code word and the second code word series data having the code word data group arranged after the second code word; there are obtained the first direct-current component data concerning the direct-current component generated when NRZI-converting the first code word series data and the second direct-current component data concerning the direct-current component generated when NRZI-converting the second code word series data; the thus obtained first direct-current component data and second direct-current component data are compared with each other; and one having smaller direct-current component data is selected from the first code word series data and the second code word series data and selected. Therefore, it is possible to generate the digital modulation signal having the preferable direct-current component suppression characteristic used for recording on a discoid high-density storage medium such as an optical disk while performing predetermined run-length limited encoding. </paragraph>
<paragraph id="P-0319" lvl="0"><number>&lsqb;0319&rsqb;</number> According to the present invention, the first synchronous word and the second synchronous word having respective numbers of times of inversion different from each other are simultaneously generated by NRZI conversion; the code word data group is generated based on the run-length encoding method by which the run length is restricted in a predetermined range; the thus generated code word data group is arranged after the first synchronous word in order to generate the first code word series data and the code word data group is arranged after the second synchronous word in order to generate the second code word series data; there are obtained the first direct-current component data concerning the direct-current component generated when NRZI-converting the first code word series data and the second direct-current component data concerning the direct-current component generated when NRZI-converting the second code word series data; the thus obtained first direct-current component data and second direct-current component data are compared with each other; and one having smaller direct-current component data is selected from the first code word series data and the second code word series data and supplied. Therefore, it is possible to provide the digital signal storage medium having the digital modulation signal with the preferable direct-current component suppression characteristic recorded thereon while performing predetermined run-length limited encoding. </paragraph>
<paragraph id="P-0320" lvl="0"><number>&lsqb;0320&rsqb;</number> According to the present invention, the first code word and the second code word having respective numbers of times of inversion different from each other are generated by NRZI conversion; the code word data group is generated based on the run-length encoding method by which the run length is restricted to a predetermined range; there are generated the first code word series data having the generated code word data group arranged after the first code word and the second code word series data having the code word data group arranged after the second code word; there are obtained the first direct-current component data concerning the direct-current component generated when NRZI-converting the first code word series data and the second direct-current component data concerning the direct-current component generated when NRZI-converting the second code word series data; the thus obtained first direct-current component data and second direct-current component data are compared with each other; and one having smaller direct-current component data is selected from the first code word series data and the second code word series data and supplied. Therefore, it is possible to provide the digital signal storage medium having the digital modulation signal with the preferable direct-current component suppression characteristic recorded thereon while performing predetermined run-length limited encoding. </paragraph>
<paragraph id="P-0321" lvl="0"><number>&lsqb;0321&rsqb;</number> According to the present invention, the square data of the first and second direct-current component data concerning the direct-current component generated when NRZI-converting each of the first and second code word series data are generated and compared with each other, and one having the smaller direct-current component square data is selected from the first code word series data and the second code word series data and outputted as the code word series signal. As a result, the lower component in the modulation signal which can be obtained in the higher-density modulation mode can be effectively suppressed since DSV control is carried out at any point in time other than DSV control point and dispersion of DSV of the output code word can be efficiently reduced as compared with a prior art method which minimizes an absolute value of DSV at the point in time of DSV control. </paragraph>
<paragraph id="P-0322" lvl="0"><number>&lsqb;0322&rsqb;</number> According to the present invention, the adverse effect on the servo control signal of the recording apparatus having the digital signal modulation apparatus according to the present invention mounted thereon can be further greatly avoided as compare with the prior art, and the recording apparatus capable of performing the stable servo operation can be configured. </paragraph>
<paragraph id="P-0323" lvl="0"><number>&lsqb;0323&rsqb;</number> In addition, according to the present invention, the invention can be also applied to the digital modulation method which does not use the data scrambling technique. </paragraph>
<paragraph id="P-0324" lvl="0"><number>&lsqb;0324&rsqb;</number> According to the present invention, when the input data word consisting of p bits is encoded into a code word of q bits (where q&gt;p) by using a plurality of encode tables and this code word is outputted as a bit string to which a predetermined run-length limited rule is applied, a plurality of different code words are associated with a specific input data word. When DSV of the output bit string is controlled by appropriately selecting the code word, encoding is carried out every selectable code word reckoning from the absolute value of the DSV at the time of selectable conversion, the absolute value of the DSV which is being encoded is integrated, and the code word is selected and determined based on comparison of the results of integration. Therefore, with respect to DC suppression carried out by direct comparison of DSV which has been conventionally conducted, the higher suppression capability can be demonstrated with the same degree of redundancy, and the degree of redundancy can be further reduced if the DC suppression effect is the same. </paragraph>
<paragraph id="P-0325" lvl="0"><number>&lsqb;0325&rsqb;</number> It should be understood that many modifications and adaptations of the invention will become apparent to those skilled in the art and it is intended to encompass such obvious modifications and changes in the scope of the claims appended hereto. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A digital signal modulation method which generates a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is an integer larger than p), generates synchronous words at predetermined bit intervals, obtains code word series data by arranging said code word data group after said generated synchronous words, and obtains a signal to be supplied to a storage medium or a transmission medium by NRZI-converting said obtained code word series signal, 
<claim-text>said digital signal modulation method comprising: 
<claim-text>a first step of simultaneously generating a first synchronous word and a second synchronous word having respective numbers of times of inversion different from each other, by said NRZI conversion; </claim-text>
<claim-text>a second step of generating said code word data group based on a run-length encoding method which restricts a run length in a predetermined range, generating first code word series data by arranging said generated code word data group after said first synchronous word, and generating second code word series data by arranging said code word data group after said second synchronous word; </claim-text>
<claim-text>a third step of obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting said first code word series data and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting said second code word series data based on said first and second code word series data generated at said second step; and </claim-text>
<claim-text>a fourth step of comparing said first direct-current component data with said second direct-current component data, and selecting and supplying one having smaller direct-current component data from said first code word series data and said second code word series data. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The digital signal modulation method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein each direct-current component data in said third step is CDS (Code Word Digital Sum) data. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The digital signal modulation method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein, at said fourth step, an average value level of said first direct-current component data is compared with an average value level of said second direct-current component data, and one having a smaller average value level of direct-current component data is selected from said first code word series data and said second code word series data and supplied. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The digital signal modulation method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein, at said fourth step, a peak value of said first direct-current component data is compared with a peak value of said second direct-current component data, and one having a smaller peak value of direct-current component data is selected from said first code word series data and said second code word series data and supplied. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The digital signal modulation method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the selection of code word series data at said fourth step is performed at a point in time when said first and second synchronous words are generated or at a point in time when said source data with which a plurality of sets of code word data having different patterns can be generated is supplied. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A digital signal modulation method which generates, when specific source data with which first code word data and second code word data having different patterns can be generated is supplied in case of generating a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is a larger integer than p), generates said code word data group based on source data supplied after the specific source data, obtains code word series data in which the generated code word data group is arranged after the first code word or the second code word, and obtains a signal to be supplied to a storage medium or a transmission medium by NRZI-converting the obtained code word series signal, 
<claim-text>said digital signal modulation method comprising: 
<claim-text>a first step of generating said first code word and said second code word having respective numbers of times of inversion different from each other, by said NRZI conversion; </claim-text>
<claim-text>a second step of generating said code word data group based on a run-length encoding method which restricts a run length in a predetermined range, generating first code word series data by arranging said generated code word data group after said first code word, and generating said second code word series data by arranging said code word data group after said second code word; </claim-text>
<claim-text>a third step of obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting said first code word series data and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting said second code word series data based on said first and second code word series data generated at said second step; and </claim-text>
<claim-text>a fourth step of comparing said first direct-current component data with said second direct-current component data, and selecting and supplying one having smaller direct-current component data from said first code word series data and said second code word series data. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The digital signal modulation method according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein each direct-current component data in said third step is CDS (Code Word Digital Sum) data. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The digital signal modulation method according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein, at said fourth step, an average value level of said first direct-current component data is compared with an average value level of said second direct-current component data, and one having a smaller average value level of direct-current component data is selected from said first code word series data and said second code word series data and supplied. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The digital signal modulation method according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein, at said fourth step, a peak value of said first direct-current component data is compared with a peak value of said second direct-current component data, and one having a smaller peak value of direct-current component data is selected from said first code word series data and said second code word series data and supplied. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The digital signal modulation method according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein the selection of code word series data at said fourth step is carried out at a point in time when said first and second synchronous words are supplied or at a point in time when said source data with which a plurality of sets of code word data having different patterns can be generated is supplied. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A digital signal modulation apparatus which generates a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is an integer larger than p), generates synchronous words at predetermined bit intervals, obtains code word series data by arranging said code word data group after said generated synchronous word, and obtains a signal to be supplied to a storage medium or a transmission medium by NRZI-converting said obtained code word series data, 
<claim-text>said digital signal modulation apparatus comprising: 
<claim-text>synchronous word generating means for simultaneously generating a first synchronous word and a second synchronous word having respective numbers of times of inversion different from each other, by said NRZI conversion; </claim-text>
<claim-text>code word series data generating means for generating said code word data group based on a run-length encoding method which restricts a run length in a predetermined range, generating first code word series data by arranging said generated code word data group after said first synchronous word, and generating second code word series data by arranging said code word data group after said second synchronous word; </claim-text>
<claim-text>DSV calculating means for receiving said first and second code word series data generated by said code word series data generating means, obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting said first code word series data, and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting said second code word series data; and </claim-text>
<claim-text>code word outputting means for comparing said first direct-current component data with said second direct-current component data, and selecting and supplying one having smaller direct-current data from said first code word series data and said second code word series data. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A digital signal modulation apparatus which generates, when specific source data with which first code word data and second code word data having different patterns can be generated is supplied in case of generating a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is a larger integer than p), generates said code word data group based on source data supplied after said specific source data, obtains code word series data in which said generated code word data group is arranged after said first code word or said second code word, and obtains a signal to be supplied to a storage medium or a transmission medium by NRZI-converting said obtained code word series data, 
<claim-text>said digital signal modulation apparatus comprising: 
<claim-text>code word generating means for generating said first code word and said second code word having respective numbers of times of inversion different from each other, by said NRZI conversion; </claim-text>
<claim-text>code word series data generating means for generating said code word data group based on a run-length encoding method which restricts a run length in a predetermined range, generating first code word series data by arranging said generated code word data group after said first code word, and generating second code word series data by arranging said code word data group after said second code word; </claim-text>
<claim-text>DSV calculating means for receiving said first and second code word series data generated by said code word series data generating means, obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting said first code word series data, and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting said second code word series data; and </claim-text>
<claim-text>code word outputting means for comparing said first direct-current component data with said second direct-current component data, and selecting and supplying one having smaller direct-current component data from said first code word series data and said second code word series data. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A digital signal storage medium having a signal recorded thereon, said signal being obtained by generating a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is an integer larger than p), generating synchronous words at predetermined intervals, obtaining code word series data by arranging said code word data group after said generated synchronous words, and NRZI-converting said obtained code word series signal, 
<claim-text>wherein said digital signal storage medium has said code word series data recorded thereon, said code word series data being obtained by the steps of: 
<claim-text>simultaneously generating a first synchronous word and a second synchronous word having respective numbers of times of inversion different from each other, by said NRZI conversion; </claim-text>
<claim-text>generating said code word data group based on a run-length encoding method which restricts a run length in a predetermined range, generating first code word series data by arranging said generated code word data group after said first synchronous word, and generating second code word series data by arranging said code word data group after said second synchronous word; </claim-text>
<claim-text>obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting said first code word series data, and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting said second code word series data; and </claim-text>
<claim-text>comparing said first direct-current component data with said second direct-current component data, and selecting one having smaller direct-current component data from said first code word series data and said second code word series data, </claim-text>
<claim-text>thereby recoding said selected and obtained code word series data. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A digital signal storage medium having a signal recorded thereon, said signal being obtained by generating a code word data group based on source data supplied after specific source data when said specific source data with which first code word data and second code word data having different patterns can be generated is supplied in case of generating said code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is an integer larger than p), obtaining code word series data having said generated code word data group arranged after said first code word or said second code word, and NRZI-converting said obtained code word series signal, 
<claim-text>wherein said digital signal storage medium has said code word series data recorded thereon, said code word series data being obtained by the steps of: 
<claim-text>generating said first code word and said second code word having respective numbers of times of inversion different from each other, by said NRZI conversion; </claim-text>
<claim-text>generating said code word data group based on a run-length encoding method which restricts a run length in a predetermined range, generating first code word series data by arranging said generated code word data group after said first code word, and generating second code word series data by arranging said code word data group after said second code word; </claim-text>
<claim-text>obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting said first code word series data, and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting said second code word series data; and </claim-text>
<claim-text>comparing said first direct-current component data with said second direct-current component data, and selecting one having smaller direct-current component data from said first code word series data and said second code word series data, </claim-text>
<claim-text>thereby recording said selected and obtained code word series data. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A digital signal modulation method which generates a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is an integer larger than p), generates synchronous words at predetermined intervals, obtains code word series data by arranging said code word data group after said generated synchronous words, and NRZI-converts a signal of said obtained code word series data and outputs said NRZI-converted signal, 
<claim-text>said digital signal modulation method comprising: 
<claim-text>a first step of simultaneously generating a first synchronous word and a second synchronous word having respective numbers of times of inversion different from each other, by said NRZI conversion; </claim-text>
<claim-text>a second step of generating said code word data group based on a run-length limited rule which restricts a run length in a predetermined range, generating first code word series data by arranging said generated code word data group after said first synchronous word, and generating second code word series data by arranging said code word data group after said second synchronous word; </claim-text>
<claim-text>a third step of obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting said first code word series data and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting said second code word series data based on said first and second code word series data generated at said second step; </claim-text>
<claim-text>a fourth step of obtaining first direct-current component square data by squaring said first direct-current component data obtained at said predetermined bit intervals and obtaining second direct-current component square data by squaring said second direct-current component data obtained at said predetermined bit intervals; and </claim-text>
<claim-text>a fifth step of comparing said first direct-current component square data with said second direct-current component square data, and selecting and outputting one having smaller direct-current component square data from said first code word series data and said second code word series data. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The digital signal modulation method according to <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the selection of code word series data at said fifth step is carried out at a point in time when said first and second synchronous words are generated or at a point in time when source data with which a plurality of code words having different patterns can be generated is inputted. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A digital signal modulation method which, in case of generating a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is an integer larger than p) and generating synchronous words at predetermined bit intervals, generates said code word data group based on source data inputted after specific source data when said specific source data with which a first code word and a second code word having different patterns can be generated is inputted, arranges said generated code word data group after said first code word or said second code word, obtains code word series data in which said synchronous words are inserted at said predetermined bit intervals, and NRZI-converts a signal of said obtained code word series data and outputs said NRZI-converted signal, 
<claim-text>said digital signal modulation method comprising: 
<claim-text>a first step of generating said first code word and said second code word having respective numbers of times of inversion different from each other, by said NRZI conversion; </claim-text>
<claim-text>a second step of generating said code word data group based on a run-length limited rule which restricts a run length in a predetermined range, generating first code word series data by arranging said generated code word data group after said first code word, and generating second code word series data by arranging said code word data group after said second code word; </claim-text>
<claim-text>a third step of obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting said first code word series data and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting said second code word series data based on said first and second code word series data generated at said second step; </claim-text>
<claim-text>a fourth step of obtaining first direct-current component square data by squaring said first direct-current component data obtained at said predetermined bit intervals, and obtaining second direct-current component square data by squaring said second direct-current component data obtained at said predetermined bit intervals; and </claim-text>
<claim-text>a fifth step of comparing said first direct-current component square data with said second direct-current component square data, and selecting and outputting one having smaller direct-current component square data from said first code word series data and said second code word series data. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The digital signal modulation method according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the selection of code word series data at said fifth step is carried out at a point in time when said synchronous words are inputted or at a point in time when said specific source data with which a plurality of code words having different patterns can be generated is inputted. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A digital signal modulation apparatus which generates a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is an integer larger than p), generates synchronous words at predetermined bit intervals, obtains code word series data by arranging said code word data group after said generated synchronous words, and NRZI-converts a signal of said obtained code word series data and outputs said NRZI-converted signal, 
<claim-text>said digital signal modulation apparatus comprising: 
<claim-text>synchronous word generating means for simultaneously generating a first synchronous word and a second synchronous word having respective numbers of times of inversion different from each other, by said NRZI conversion; </claim-text>
<claim-text>code word series data generating means for generating said code word data group based on a run-length limited rule which restricts a run length in a predetermined range, generating first code word series data by arranging said generated code word data group after said first synchronous word, and generating second code word series data by arranging said code word data group after said second synchronous word; </claim-text>
<claim-text>DSV calculating means for receiving said first and second code word series data generated by said code word series data generating means, obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting said first code word series data, and obtaining second direct-current component data concerning a direct-current component generated when NRZI-converting said second code word series data; </claim-text>
<claim-text>DSV square calculating means for obtaining first direct-current component square data by squaring said first direct-current component data obtained at said predetermined bit intervals, and obtaining second direct-current component square data by squaring said second direct-current component data obtained at said predetermined bit intervals; and </claim-text>
<claim-text>code word outputting means for comparing said first direct-current component square data with said second direct-current component square data, and selecting and outputting one having smaller direct-current component square data from said first code word series data and said second code word series data. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A storage medium on which said code word series data generated by said digital signal modulation apparatus defined in <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> is NRZI-converted and recorded. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. A transmission apparatus comprising a transmission encoding portion which adds a header to said code word series data which is generated by said digital signal modulation apparatus defined in <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> and NRZI-converted and realizes a packet of said code word series data, said packet outputted from said transmission encoding portion being transmitted to a transmission path. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. A digital signal modulation apparatus which, in case of generating a code word data group by repeating a number of times an operation for converting source data whose bit number is p (p is a positive integer) into code word data whose bit number is q (q is an integer larger than p) and generating synchronous words at predetermined bit intervals, generates said code word data group based on source data inputted after specific source data when said specific source data with which a first code word and a second code word having different patterns can be generated is inputted, arranges said generated code word data group after said first code word or said second code word, obtains code word series data in which said synchronous words are inserted at said predetermined bit intervals, and NRZI-converts a signal of said obtained code word series data and outputs said NRZI-converted signal, 
<claim-text>said digital signal modulation apparatus comprising: 
<claim-text>code word generating means for generating said first code word and said second code word having respective numbers of times of inversion different from each other, by said NRZI conversion; </claim-text>
<claim-text>code word series data generating means for generating said code word data group based on a run-length limited rule which restricts a run length in a predetermined range, generating first code word series data by arranging said generated code word data group after said first code word, and generating second code word series data by arranging said code word data group after said second code word; </claim-text>
<claim-text>DSV calculating means for receiving said first and second code word series data generated by said code word series data generating means, obtaining first direct-current component data concerning a direct-current component generated when NRZI-converting said first code word series data, and second direct-current component data concerning a direct-current component generated when NRZI-converting said second code word series data; </claim-text>
<claim-text>DSV square calculating means for obtaining first direct-current component square data by squaring said first direct-current component data obtained at said predetermined bit intervals and obtaining second direct-current component square data by squaring said second direct-current component data obtained at said predetermined bit intervals; and </claim-text>
<claim-text>code word outputting means for comparing said first direct-current component square data with said second direct-current component square data, and selecting and outputting one having smaller direct-current component square data from said first code word series data and said second code word series data. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A storage medium on which said code word series data generated by said digital signal modulation apparatus defined in <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference> is NRZI-converted and recorded. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A transmission apparatus comprising a transmission encoding portion which adds a header to said code word series data which is generated by said digital signal modulation apparatus defined in <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference> and NRZI-converted and realizes a packet of said code word series data, said packet outputted from said transmission encoding portion being transmitted to a transmission path. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A program which causes a computer to execute said first to fifth steps defined in <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. A program which causes a computer to execute said first to fifth steps defined in <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. An encoding method which, in case of encoding an input data word consisting of p bits into a code word of q bits (where q&gt;p) and outputting said code word as a bit string to which a predetermined run-length limited rule is applied, associates said plurality of different code words with a specific input data word, and selects and outputs a specific code word from a plurality of said different code words, thereby performing DSV control, 
<claim-text>wherein, when selecting said specific code word, encoding is performed in accordance with each selectable code word in order to integrate an absolute value of DSV reckoning from said absolute value of DSV at a selectable point of time of conversion, and results of integration of said absolute value of DSV are compared with each other in largeness with respect to each of said plurality of different code words, thereby selecting and outputting said specific code word. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. A storage medium on which a code word string obtained by said encoding method defined in <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference> is NRZI-converted and recorded. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. An encoding method which, in case of encoding an input data word consisting of p bits into a code word consisting of q bits (where q&gt;p) and outputting said code word as a bit string to which a predetermined run-length limited rule is applied, adds one redundant bit selected from a plurality of different redundant bits every predetermined number of code bits to a code word string to be outputted, thereby performing DSV control, 
<claim-text>wherein, when selecting said redundant bit, encoding is performed in accordance with each selectable redundant bit in order to integrate an absolute value of DSV reckoning from said absolute value of DSV at a selectable point in time, results of integration of said absolute value of DSV are compared with each other in largeness with respect to each of code words to which said plurality of different redundant bits are added when executing selection, thereby selecting said one redundant bit and outputting said code word string and said selected one redundant bit. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. A storage medium on which said code word string and said selected one redundant bit obtained by said encoding method defined in <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference> is NRZI-converted and recorded. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. An encoding apparatus which, in case of encoding an input data word consisting of p bits into a code word consisting of q bits (where q&gt;p) and outputting said code word as a bit string to which a predetermined run-length limited rule is applied, associates a plurality of different code words with a specific input data word, and selects and outputs a specific code word from said plurality of different code words, thereby performing DSV control, 
<claim-text>said encoding apparatus comprising: 
<claim-text>a detection circuit which detects whether there is an alternative of a code word with respect to said input data word; </claim-text>
<claim-text>a calculation portion which outputs said plurality of different code words corresponding to said input data word when an alternative detection result supplied from said detection circuit indicates existence of an alternative, and outputs one code word corresponding to said input data word when a detection result from said detection circuit indicates absence of an alternative; </claim-text>
<claim-text>a plurality of storing means for storing an output code word after a point in time of outputting an output code word and a code word immediately precedently inputted from said calculation portion with respect to each of a plurality of code word strings outputted from said calculation portion through a plurality of paths, and storing a DSV value obtained from an output code word selected in the past and a code word immediately precedently inputted from said calculation portion; and </claim-text>
<claim-text>outputting means for comparing integrated values of absolute values of DSV values up until an immediately preceding code word supplied from said plurality of storing means with each other, selecting and outputting a code word of storing means corresponding to a smallest integrated value, and replacing a content of non-selected storing means among said plurality of storing means with a content of selected storing means, </claim-text>
<claim-text>wherein said outputting means performs encoding in accordance with each selectable code word and integrates said absolute values of DSV reckoning from an absolute value of DSV at a point in time of selectable conversion. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. A computer program which causes said detection circuit, said calculation portion, said plurality of storing means and said outputting means in said encoding apparatus defined in <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> to function as a computer. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. An encoding apparatus which, in case of encoding an input data word consisting of p bits into a code word consisting of q bits (where q&gt;p) and outputting said code word as a bit string to which a predetermined run-length limited rule is applied, adds one redundant bit selected from a plurality of different redundant bits every predetermined number of code words to a code word string to be outputted, thereby performing DSV control, 
<claim-text>said encoding apparatus comprising: 
<claim-text>a calculation portion which adds a plurality of said different redundant bits every said predetermined number of code words; </claim-text>
<claim-text>a plurality of storing means for storing an output code word and a redundant bit after a point in time of outputting an output code word and a code word and a redundant bit immediately precedently inputted from said calculation portion with respect to each of a plurality of code word strings including redundant bits outputted from said calculation portion through a plurality of paths corresponding to said plurality of different redundant bits, and storing a DSV value obtained from an output code word and a redundant bit selected in the past and a code word and a redundant bit immediately precedently inputted from said calculation portion; and </claim-text>
<claim-text>outputting means for comparing integrated values of absolute values of DSV values up until an immediately preceding code word and a redundant bit supplied from said plurality of storing means with each other, selecting and outputting a code word and a redundant bit of a storing means corresponding to a smallest integrated value, and replacing a content of non-selected storing means among said plurality of storing means with a content of selected storing means, </claim-text>
<claim-text>wherein said outputting means performs encoding in accordance with each selectable redundant bit and integrates an absolute value of DSV reckoning from said absolute value of DSV at a point in time of selectable conversion. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. A computer program which causes said detection circuit, said calculation portion, said plurality of storing means and said outputting means in said encoding apparatus defined in <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference> to function as a computer. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. A program which causes a computer to execute said first to fourth steps defined in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. A program which causes a computer to execute said first to fourth steps defined in claim <highlight><bold>6</bold></highlight>.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002184A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002184A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002184A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002184A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002184A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002184A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002184A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002184A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002184A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002184A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002184A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002184A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002184A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030002184A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030002184A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030002184A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030002184A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030002184A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030002184A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030002184A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030002184A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030002184A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030002184A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030002184A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030002184A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030002184A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00026">
<image id="EMI-D00026" file="US20030002184A1-20030102-D00026.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00027">
<image id="EMI-D00027" file="US20030002184A1-20030102-D00027.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00028">
<image id="EMI-D00028" file="US20030002184A1-20030102-D00028.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00029">
<image id="EMI-D00029" file="US20030002184A1-20030102-D00029.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00030">
<image id="EMI-D00030" file="US20030002184A1-20030102-D00030.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00031">
<image id="EMI-D00031" file="US20030002184A1-20030102-D00031.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00032">
<image id="EMI-D00032" file="US20030002184A1-20030102-D00032.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
