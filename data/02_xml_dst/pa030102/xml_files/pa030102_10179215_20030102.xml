<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002530A1-20030102-D00000.TIF SYSTEM "US20030002530A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002530A1-20030102-D00001.TIF SYSTEM "US20030002530A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002530A1-20030102-D00002.TIF SYSTEM "US20030002530A1-20030102-D00002.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002530</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10179215</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020626</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>01401754.5</doc-number>
</priority-application-number>
<filing-date>20010702</filing-date>
<country-code>EP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04J003/16</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>H04L012/66</ipc>
</classification-ipc-secondary>
<classification-ipc-secondary>
<ipc>H04L012/28</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>370</class>
<subclass>468000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>370</class>
<subclass>350000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>370</class>
<subclass>389000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Method and apparatus for obtaining a scalable and managed bandwidth for connections between asynchronous level and synchronous hierarchy level in a telecommunication network</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Ettore</given-name>
<family-name>Malpezzi</family-name>
</name>
<residence>
<residence-non-us>
<city>Vimercate</city>
<country-code>IT</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>ALCATEL</organization-name>
<assignee-type>03</assignee-type>
</assignee>
<correspondence-address>
<name-1>SUGHRUE MION, PLLC</name-1>
<name-2></name-2>
<address>
<address-1>2100 PENNSYLVANIA AVENUE, N.W.</address-1>
<city>WASHINGTON</city>
<state>DC</state>
<postalcode>20037</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The present invention provides for a method and apparatus for obtaining a scalable and managed bandwidth for connections between asynchronous and synchronous hierarchy level in a telecommunication network, in which the bandwidth of the synchronous hierarchy level is rendered scalable by a variable number of connections in a link between two nodes, each of the connections being made by a synchronous frame of lower-order virtual containers only (e.g. VC12 at 2 Mb/s in SDH). The incoming data packets are singularly and independently arranged in the VCs of the various connections, ensuring their integrity. The number of connections to be used is variable and scalable, and controlled depending on the total incoming packet data rate, so as also to ensure the minimum of necessary granularity. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">INCORPORATION BY REFERENCE OF PRIORITY DOCUMENT </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is based on, and claims the benefit of, European Patent Application No. 01401754.5 filed on Jul. 02, 2001, which is incorporated by reference herein. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The present invention relates to a method and apparatus for obtaining a scalable and managed bandwidth for connections between asynchronous level and synchronous hierarchical level in a telecommunication network. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> 2. Description of the Prior Art </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> As it is known to those working in the telecommunications field, there is a more and more emerging need for best interconnection among the nodes of a telecommunication network. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> More particularly, two alternative approaches are known: in a first known type, the nodes of a packet data network, e.g. IP (Internet Protocol), can be directly interconnected by using communication procedures involving the packet data level only; in a second known type, the network nodes can be interconnected by using the transport capacity of a synchronous digital hierarchy network, e.g. SDH or SONET. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Within the framework of the second type of approach, the major technical problem to be solved is that of ensuring the best flexibility in the use of the available transport bandwidth of the synchronous digital network, as far as the badwidth demand increases with the traffic volume of packet data to be transported. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> A known technique for solving this problem is to use the so-called concatenation of virtual containers, namely to arrange the packet flow in a number of concatenated lower-order virtual containers in the frame of the synchronous hierarchy network, so as to get a more complex frame structure carrying all the packets. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> A drawback of this technique is that the concatenation functionality is not available at all the network nodes. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Another known technique is to use an higher-order virtual container, e.g. VC3 or VC4, according to the standard synchronous hierarchy. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> However this second technique has the drawback that a too high bandwidth is requested to fully comply with the synchronous hierarchical structure, with a considerable waste of bandwith due to the fact that generally a part of the higher-order virtual containers is not used. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Therefore, in view of the known solutions, that are not quite efficient, it is the main object of the present invention to provide a method and apparatus for obtaining a scalable and managed bandwidth for connections between asynchronous and synchronous hierarchy level in a telecommunication network, which solves in an efficient way the above problems, avoiding the occupancy of unnecessary bandwidth in the synchronous hierarchy level. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> The basic idea of the present invention is to render the bandwidth of the synchronous hierarchy level scalable by a variable number of connections in a node, each of the connections being made by a synchronous frame of lower-order virtual containers only (e.g. VC12 at 2 Mb/s in SDH): the incoming data packets are singularly and independently arranged in the VCs of the various connections, ensuring their integrity. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The number of connections to be used is variable and scalable, and controlled depending on the total incoming packet data rate, so as also ensuring the minimum of necessary granularity . </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Connection in the following has to be interpreted as either unidirectional or bidirectional connection over a link between two network nodes. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> These and further objects are achieved by means of an apparatus and method as described in the attached claims, which are considered an integral part of the present description. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The invention will become fully clear from the following detailed description, given by way of a mere exemplifying and non limiting example, to be read with reference to the attached drawing figures.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> In the drawings: </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a block diagram of the system in accordance with the invention; </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 2 and 3</cross-reference> show schematic diagrams of the internal constitution of block INT according to the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">BEST MODE FOR CARRYING OUT THE INVENTION </heading>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> In the following, for the sake of brevity, the packet data network will be indicated with IP, and the synchronous digital network with SDH, without limiting sense. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, at the input/output of a node SDH-NE of a synchronous digital hierarchy network, e.g. SDH or SONET, an interface INT is present, for the connection with a packet data network node, e.g. IP at the level of point-to-point PPP, LAN or Ethernet interface. The connection per se is handled in a well known way. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Generally two interfaces INT with specular characteristics are necessary at the two ends of a link between two nodes: each of them handles the input/output of the data packets from/to the packet network IP. The packets are state-of-the-art IP data packets having either fixed or variable length, normally constituted by a header part, carrying addresses and other control data, and a payload part carrying the data. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> In the direction from IP to SDH-NE the interface INT detects the data packets coming from IP, and arranges the packets over a number n of parallel available SDH connections made of lower-order virtual containers 1VC, 2VC, . . . nVC, e.g. in SDH VC12 at 2 Mb/s. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The input packets are handled independently of each other, and inserted in a VC of a given connection n, depending on the evaluation of the instantaneous filling level of the various VCs, so as consecutive input packets may be assigned to different VCs, depending on the available space in the VCs. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> In a preferred non limiting embodiment, every input packet is maintained in its integrity (whole, uncut), by detecting the header part of it, and is entirely assigned to one VC only. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Generally the original input packet sequence must be maintained at the output of the opposite node towards the IP level. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> An alternative embodiment is also foreseen in case it is not necessary to respect the original input packet sequence. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> A management unit TMN controls the number of connections n, ranging from a minimum of one connection to the maximum available number of connections. This way the minimum granularity is achieved, saving connection capacity as much as possible, and at the same time ensuring that all the incoming packets are arranged into the virtual containers. The smallest scalability is obtained with steps depending on the minimum virtual container size, e.g. VC12 at 2 Mb/s in SDH, to reach a maximum bit rate depending on the maximum transmission capacity, e.g. by multiples of VC4 (144 Mb/s) in SDH. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> In a preferred embodiment the TMN unit is a part of a well known Network Management System bidirectionally connected to the interface INT. The skilled in the art is able to adapt an existing TMN system, by using normal and well known software routines, to further comprise suitable functionality to control the interface INT and implement the new described functions. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> In the opposite direction from SDH-NE to IP, the interface INT picks up the data packets from the virtual containers of another number of available connections in that direction, n&plus;1VC, . . . , mVC, and organizes them sequentially on the connection from SDH-NE to IP. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the interface INT comprises the following functional blocks for handling the data packets coming from the IP level. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> A block P-DET<highlight><bold>1</bold></highlight>, having the function of data packet detector, which receives the incoming packets from the IP level, and forwards them sequentially to the block DISTRa. P-DET<highlight><bold>1</bold></highlight> includes register means for buffering the incoming packets and recognizing them, for example by finding the beginning of the header part through the matching of a given bit sequence in the header with a fixed internal one. This way packets having also a variable length can be detected and served. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> In a preferred embodiment P-DET<highlight><bold>1</bold></highlight> also includes means for counting the incoming packets and inserting an identifying tag at every packet, so as to recover the original incoming packet sequence at the output of the other link end, if requested. This can be made for example by enlarging the packet size by one byte, carrying the counting, before or after the packet. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> In an alternative embodiment the means for counting the incoming packets are not included, when it is not necessary to recover the original incoming packet sequence at the output of the other connection side. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> The input data clock of P-DET<highlight><bold>1</bold></highlight> is synchronized to the clock of the IP level, while the output data clock is synchronized to the clock of the SDH level. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> A block DISTRa, working as a packet distributor, receives the packets from P-DET<highlight><bold>1</bold></highlight> in sequence and distributes them over a number n of available connections of the SDH level. An incoming packet (possibly with the tag byte) is sent to one of the available registers R<highlight><bold>1</bold></highlight>, . . . Rn according to a distribution selection made by DISTRa controlled by the management unit TMN and an internal controller CTRL. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The controller CTRL checks the filling level of the registers R<highlight><bold>1</bold></highlight>, . . . Rn. The information about the filling level of the registers is also sent to the management unit TMN </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> In one embodiment CTRL gives an indication to DISTRa about which register has more available space to accept the next incoming packet. This embodiment can be used when it is not necessary to maintain the original input packet sequence, or when inserting an identifying tag at every packet. This way the packet sequence in the various registers may be different with respect to the input packet sequence: DISTRa can freely select which register carries the next incoming packet. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> In another embodiment CTRL gives an indication to DISTRa when the next incoming packet has to be inserted in the next register, as the given register has no space enough to carry the packet. This way the packets are sequentially written in consecutive registers, and the sequence of input packets can be maintained, at the output of the other link end, by simply ensuring that the registers at the output are read in the same sequence as the input one. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The management unit TMN sets the number n of connections 1VC, nVC, in cooperation with the controller CTRL, depending on the information on the total incoming packet data rate (global average filling level of all the registers) compared with the transport capacity of the virtual containers, the capacity of one virtual container corresponding to the transport capacity of one SDH connection. The number n ranges from one to the maximum number of connections available at the given node. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The registers R<highlight><bold>1</bold></highlight>, . . . Rn implement the known mechanism by which the SDH frames are created, keeping into account that here every SDH frame is composed by the only sequence of lowest-order virtual container VC12. The way how the registers R<highlight><bold>1</bold></highlight>, . . . Rn work and are made is well known to the skilled in the art. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the corresponding interface INT at the other end of the link between two nodes comprises the following functional blocks for handling the data packets coming from the SDH level. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> A number of registers R&prime;<highlight><bold>1</bold></highlight>, . . . R&prime;n, with dual function to that of registers R<highlight><bold>1</bold></highlight>, . . . Rn of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, for receiving the virtual containers of the relating connections 1VC, . . . nVC, and sending the payload information, corresponding to the sequences of data packets, to a block P-DET<highlight><bold>2</bold></highlight> having the function of data packet detector. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> P-DET<highlight><bold>2</bold></highlight> receives the sequences of data packets from the registers R&prime;<highlight><bold>1</bold></highlight>, . . . R&prime;n, detects the various packets with a procedure dual to that of P-DET<highlight><bold>1</bold></highlight> and sends the packets to the distributor DISTRb. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The distributor DISTRb arranges the packets sequentially on the connection to the IP level. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> When it is not necessary to maintain the original packet input sequence, DISTRb serves them as soon as they come in, without preserving their input order. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> If P-DET<highlight><bold>1</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> inserts the identifying tags, DISTRb includes means for taking the tags out and arranging the packets on the IP connection according to the tag sequence. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> If DISTRa of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> arranges the sequence of input packets sequentially over consecutive registers, DISTRb includes means for selecting the same sequence of registers to be read, so as to ensure that the original input packet sequence is maintained on the IP connection. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> A similar constitution is provided in the two interfaces INT at the two ends of the link between two nodes, for serving the connections in the opposite direction n&plus;1VC, . . . mVC. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The management unit TMN sets the number of connections n&plus;1VC, . . . mVC, and controls the distributor DISTRb so as to set a corresponding number of inputs for the packet sequences received. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> The number n of connections in the direction IP-SDH of a link is independent from the number m of connections in the opposite direction SDH-IP. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> Further implementation details will not be described, as the man skilled in the art is able to carry out the invention starting from the teaching of the above description. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">I claim: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for connecting an asynchronous packet level and a synchronous hierarchy level between nodes of a telecommunication network, wherein the method comprises: 
<claim-text>arranging a number of connections in the synchronous hierarchy level for carrying incoming packets of the asynchronous packet level, each connection comprising a synchronous frame of lower-order virtual containers only; and </claim-text>
<claim-text>rearranging said packets in a connection to the asynchronous packet level. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the step of arranging a number of connections in the synchronous hierarchy level comprises the step of varying and controlling the number of connections as a function of a total incoming packet data rate. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising the steps of: 
<claim-text>maintaining every input packet in its integrity by detecting an header part thereof; and </claim-text>
<claim-text>assigning it entirely to one virtual container only. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising the steps of: 
<claim-text>handling the incoming packets independently of each other, </claim-text>
<claim-text>selecting a connection by evaluating an instantaneous filling level of virtual containers of all the connections; </claim-text>
<claim-text>inserting the handled incoming packets in a lower-order virtual container of the selected connection; and </claim-text>
<claim-text>assigning consecutive packets to different virtual containers, depending on the available space in the virtual containers. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference> further comprising the step of associating an identifying tag to each incoming packet in the virtual containers, so that the original incoming packet sequence in the connection to the asynchronous packet level is recovered. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A method according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, further comprising the step of inserting sequentially the incoming packets in virtual containers of consecutive connections, said insertion sequence being the same as for rearranging the packets towards the asynchronous packet level, so as to recover the original incoming packet sequence in the connection to the asynchronous packet level. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. An apparatus for connecting an asynchronous packet level and a synchronous hierarchy level between nodes of a telecommunication network, wherein the apparatus comprises: 
<claim-text>means for arranging a number of connections in the synchronous hierarchy level for carrying packets of the asynchronous packet level, each connection comprising a synchronous frame of lower-order virtual containers only; and </claim-text>
<claim-text>means for rearranging said packets in a connection to the asynchronous packet level. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, further comprising means for dinamically controlling said number of connections in the synchronous hierarchy level according to the total incoming packet data rate. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> further comprising: 
<claim-text>means for receiving and detecting the header part of input packets; </claim-text>
<claim-text>first means for distributing said input packets to the virtual containers of the connections; </claim-text>
<claim-text>means for controlling the instantaneous filling level of said virtual containers of all the connections, which cooperates with said first means for distributing and said means for receiving so as to: 
<claim-text>entirely assigning a packet to one virtual container only; </claim-text>
<claim-text>distributing consecutive packets to the virtual containers according to said instantaneous filling level and to the available space in said virtual containers of all the connections; and </claim-text>
</claim-text>
<claim-text>second means for distributing the packets, coming from the connections of the synchronous hierarchy level, sequentially on the connection to the asynchronous packet level. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein 
<claim-text>said means for receiving and detecting the header part of the input packets add an identifying tag to each incoming packet; </claim-text>
<claim-text>said second means for distributing the packets take said identifying tag out, and arrange the packets on the connection to the asynchronous packet level according to the value of said identifying tag, so as to recover the original incoming packet sequence. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. An apparatus according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein 
<claim-text>said first means for distributing said input packets to the virtual containers insert the packets sequentially in virtual containers of consecutive connections; and </claim-text>
<claim-text>said second means for distributing the packets, rearrange the packets on the connection to the asynchronous packet level with the same sequence of distribution to the virtual containers of said first means for distributing, so as to recover the original incoming packet sequence in the connection to the asynchronous packet level.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002530A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002530A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002530A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
