<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002512A1-20030102-D00000.TIF SYSTEM "US20030002512A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00001.TIF SYSTEM "US20030002512A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00002.TIF SYSTEM "US20030002512A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00003.TIF SYSTEM "US20030002512A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00004.TIF SYSTEM "US20030002512A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00005.TIF SYSTEM "US20030002512A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00006.TIF SYSTEM "US20030002512A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00007.TIF SYSTEM "US20030002512A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00008.TIF SYSTEM "US20030002512A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00009.TIF SYSTEM "US20030002512A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00010.TIF SYSTEM "US20030002512A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00011.TIF SYSTEM "US20030002512A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00012.TIF SYSTEM "US20030002512A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00013.TIF SYSTEM "US20030002512A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00014.TIF SYSTEM "US20030002512A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00015.TIF SYSTEM "US20030002512A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00016.TIF SYSTEM "US20030002512A1-20030102-D00016.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00017.TIF SYSTEM "US20030002512A1-20030102-D00017.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00018.TIF SYSTEM "US20030002512A1-20030102-D00018.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00019.TIF SYSTEM "US20030002512A1-20030102-D00019.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00020.TIF SYSTEM "US20030002512A1-20030102-D00020.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00021.TIF SYSTEM "US20030002512A1-20030102-D00021.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00022.TIF SYSTEM "US20030002512A1-20030102-D00022.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00023.TIF SYSTEM "US20030002512A1-20030102-D00023.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00024.TIF SYSTEM "US20030002512A1-20030102-D00024.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00025.TIF SYSTEM "US20030002512A1-20030102-D00025.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00026.TIF SYSTEM "US20030002512A1-20030102-D00026.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00027.TIF SYSTEM "US20030002512A1-20030102-D00027.TIF" NDATA TIF>
<!ENTITY US20030002512A1-20030102-D00028.TIF SYSTEM "US20030002512A1-20030102-D00028.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002512</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10179684</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020624</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L012/28</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>370</class>
<subclass>401000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>370</class>
<subclass>389000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>370</class>
<subclass>352000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Method for allocating network resources</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10179684</doc-number>
<kind-code>A1</kind-code>
<document-date>20020624</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09366207</doc-number>
<document-date>19990804</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</continuation-of>
</continuations>
<non-provisional-of-provisional>
<document-id>
<doc-number>60104878</doc-number>
<document-date>19981020</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
<non-provisional-of-provisional>
<document-id>
<doc-number>60095288</doc-number>
<document-date>19980804</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Charles</given-name>
<middle-name>Robert</middle-name>
<family-name>Kalmanek</family-name>
<name-suffix>JR.</name-suffix>
</name>
<residence>
<residence-us>
<city>Short Hills</city>
<state>NJ</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>William</given-name>
<middle-name>Todd</middle-name>
<family-name>Marshall</family-name>
</name>
<residence>
<residence-us>
<city>Chatham</city>
<state>NJ</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Partho</given-name>
<middle-name>Pratim</middle-name>
<family-name>Mishra</family-name>
</name>
<residence>
<residence-us>
<city>Summit</city>
<state>NJ</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Douglas</given-name>
<middle-name>M.</middle-name>
<family-name>Nortz</family-name>
</name>
<residence>
<residence-us>
<city>Red Bank</city>
<state>NJ</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Kadangode</given-name>
<middle-name>K.</middle-name>
<family-name>Ramakrishnan</family-name>
</name>
<residence>
<residence-us>
<city>Berkeley Heights</city>
<state>NJ</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>Ronald D. Slusky</name-1>
<name-2></name-2>
<address>
<address-1>Post Office Box 4378</address-1>
<city>Highland Park</city>
<state>NJ</state>
<postalcode>08904</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Network resources for a call between a calling party and a called party are allocated. The network resources for the call are reserved based on a reservation request. The network resources are reserved before any one network resource from the reserved network resources is committed. The reserved network resources for the call are committed when a called party indicates acceptance for the call. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS-REFERENCE TO RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is a continuation of U.S. patent application Ser. No. 09/366,207 filed Aug. 4, 1999, which claimed the benefit of U.S. Provisional Application No. 60/104,878, filed Oct. 20, 1998; and U.S. Provisional Application No. 60/095,288, filed Aug. 4, 1998.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention generally relates to allocating network resources. More specifically, the present invention relates to reserving and committing network resources based on an authorized quality of service. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The known signaling architecture H.323 is an International Telecommunications Union (ITU) defined standard that describes how multimedia communications occur between terminals, network equipment and services on local area networks (LANs) and wide area networks (WANs) that do not provide a guaranteed quality of service (such as Internet Protocol (IP) networks). Quality of service is a measure of communication service quality during a call, and can include, for example, the bandwidth, delay and latency associated with the call. In networks using connectionless &ldquo;best effort&rdquo; delivery models, the quality of service typically is not guaranteed; the H.323 is a signaling architecture for such a network. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> The H.323 provides a range of implementation options including gatekeeper-routed signaling. In the H.323 standard, gatekeepers map LAN address aliases to IP addresses and provide address lookups when needed. Gatekeepers also exercise call-control functions to limit the number of H.323 connections and the total bandwidth used by these connections in an H.323 &ldquo;zone.&rdquo; Although the gatekeeper is not necessary within the H.323 standard, when a gatekeeper is present in a network, network terminals must make use of its services. In other words, gatekeepers maintain state information for each individual call and all call signaling must pass through the gatekeepers. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The gatekeeper implementation of the H.323 standard, however, suffers several shortcomings. First, the equipment associated with gatekeepers needs to be extremely reliable so that the gatekeeper is available throughout the course of the call. If the gatekeeper-related equipment fails during a call, the call fails because the state information for the call maintained solely at the gatekeeper is lost. Second, the gatekeeper-related equipment likely cannot scale in a cost effective manner because maintaining the state information and performing the messaging associated with H.323 is complex and processor intensive. Finally, theft of service is possible by bypassing the gatekeepers to place unauthorized and unmonitored calls. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Network resources for a call between a calling party and a called party are allocated. The network resources for the call are reserved based on a reservation request. The network resources are reserved before any one network resource from the reserved network resources is committed. The reserved network resources for the call are committed when a called party indicates acceptance for the call.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates a network, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates a flow chart to reserve network resources for a call, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates a flow chart for performing two-phase signaling in call connection, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates a flow chart for disconnecting a call, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates a flow chart for translating a network address, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows the call flow for a normal call setup, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows an example signaling call flow for reservation of resources in the segment of the network between the edge routers for a voice call, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows the call flow for a normal call termination, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows the call flow for a call originating from a BTI but terminating in the PSTN, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows the call flow for a call originating in the PSTN, but terminating in the IP telephony network, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows the call flow for a normal release to the PSTN, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> shows the call flow for a call released from the PSTN, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> shows a call flowwhere the BTI connects to a terminating announcement server, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> shows the call flow for Call Trace, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> shows the call flow for changing the established call parameters, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> shows the call flow for activating a per-use Call Forwarding service, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> shows the call flow for Call Forwarding&mdash;All Calls when the BTI is available, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> shows the call flow for Call Forwarding&mdash;All Calls when the Terminating BTI is not available, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> shows the call flow for Call Forwarding&mdash;Busy when BTI<highlight><subscript>T </subscript></highlight>is available, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> shows the call flow for Call Forwarding&mdash;Busy when the BTI is unavailable, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> shows the call flow for Call Forwarding&mdash;No Answer when BTI<highlight><subscript>T </subscript></highlight>is available, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> shows the call flow for Call Forwarding&mdash;No Answer when the BTI is unavailable, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 23</cross-reference> shows the call flow for Caller ID/Calling Name Delivery Call Flow, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> shows a call flow for Call Waiting, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> shows the call flow for the simple Three-Way Calling alternative with bridging in BTI<highlight><subscript>O</subscript></highlight>, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 26</cross-reference> illustrates the first steps of a three-way call, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 27</cross-reference> shows the sequence of signaling messages exchanged in the conversion of two separate calls into one three-way call, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 28</cross-reference> shows the call flow for Three-way Calling Bridge in Network Call Flow&mdash;Hangup of Host, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 29</cross-reference> shows the call flow for Three-way Calling Bridge in Network Call Flow&mdash;Hangup of Participant, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 30</cross-reference> shows the call flow for Call Transfer With Consultation service when the host disconnects, according to an embodiment of the present invenion. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 31</cross-reference> shows the call flow for Call Transfer Without Consultation service, according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 32</cross-reference> shows the call flow for Return Call, according to an embodiment of the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Embodiments of the present invention relate to a communications system having a combination of different types of networks, such as a data network(s) (based on, for example, packet switching), a telephone network(s) (such as the Plain Old Telephone Network (PSTN)), and/or a cable network(s). Such a communications system can include intelligent end-terminals that allow a service provider to provide various types of services involving the different types of networks and to exploit the capabilities of the end-terminals. For example, packet telephony can be implemented in embodiments of the present invention where voice can be received and transmitted by a telephone or a communication device (such as a personal computer) connected to the data network via a cable network. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> Embodiments of the present invention relate to call authorization, call signaling, network resource management and end-to-end signaling between communication devices (e.g., telephones, personal computers, etc.). Existing telephone services with a service quality consistent with current standards can be supported while a broader range of packet-enabled communications services can also be supported. Embodiments of the present invention allow pricing and billing of communications services to differ based on the differences in service quality (e.g., bandwidth, delay and/or latency) for the various calls. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Embodiments of the present invention also allow the intelligent end-points to participate in supporting features of the provided services. These intelligent end-points can be, for example, telephony-capable computers and gateways that interface conventional telephones to the data network. By exploiting the intelligence of these end-points in supporting the features of provided services, functionality (e.g., tasks associated with signaling) historically maintained solely by the network can be efficiently divided among the communication network entities and the intelligent end-points connected to the communication network. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> In addition, embodiments of the present invention protect against theft of service, and minimize the cost and complexity associated with providing reliable service. Unlike known telephone networks, embodiments of the present invention do not require high-availability network servers that maintain the state of each individual call. Rather, embodiments of the present invention can maintain state information only in the edge routers and the end-points that are directly involved in a particular call. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> The following discussion is separated into sections for clarity. First, a system overview of a communication network, according to an embodiment of the present invention, is discussed in Section 1 entitled &ldquo;Sysstem Overview&rdquo;. Then, separate aspects of embodiments of the present invention are considered: Section 2 entitled &ldquo;Two-Phase Resource Reservation&rdquo;, Section 3 entitled &ldquo;Two-Phase Signaling&rdquo;, Section 4 &ldquo;Gate Coordination on a Per-Call Basis&rdquo;, Section 5 entitled &ldquo;Network Address Translation&rdquo;, Section 6 entitled &ldquo;Simulating Destination Ring Back&rdquo;. Finally, Section 7 entitled &ldquo;Protocol Description&rdquo; details the protocols for the signaling messages and Section 8 entitled &ldquo;Signaling Architecture Call Flows&rdquo; describes the call flows for the signaling architecture both of which are applicable to the various aspects of embodiments of the present invention. </paragraph>
<paragraph id="P-0044" lvl="7"><number>&lsqb;0044&rsqb;</number> 1. System Overview </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates a network according to an embodiment of the present invention. Network <highlight><bold>10</bold></highlight> includes communication network <highlight><bold>100</bold></highlight> which is connected to gate controller <highlight><bold>110</bold></highlight> and gate controller <highlight><bold>111</bold></highlight>, network edge devices <highlight><bold>120</bold></highlight> and <highlight><bold>121</bold></highlight>, and telephone network gateway <highlight><bold>130</bold></highlight>. Gate controllers <highlight><bold>110</bold></highlight> and <highlight><bold>111</bold></highlight> are connected to database storage <highlight><bold>140</bold></highlight> and <highlight><bold>141</bold></highlight>, respectively. Network edge devices <highlight><bold>120</bold></highlight> and <highlight><bold>121</bold></highlight> are connected to access networks <highlight><bold>150</bold></highlight> and <highlight><bold>151</bold></highlight>, respectively. Access networks <highlight><bold>150</bold></highlight> and <highlight><bold>151</bold></highlight> are connected to network interface units <highlight><bold>160</bold></highlight> and <highlight><bold>161</bold></highlight>, respectively. Network interface units <highlight><bold>160</bold></highlight> and <highlight><bold>161</bold></highlight> are connected to telephone interface units (TIUs) <highlight><bold>170</bold></highlight> and <highlight><bold>171</bold></highlight>, respectively, and communication devices <highlight><bold>180</bold></highlight> and <highlight><bold>181</bold></highlight>, respectively. TIUs <highlight><bold>170</bold></highlight> and <highlight><bold>171</bold></highlight> are connected to telephones <highlight><bold>190</bold></highlight> and <highlight><bold>191</bold></highlight>, respectively. Telephone network gateway <highlight><bold>130</bold></highlight> is connected to telephone network <highlight><bold>135</bold></highlight> which, in turn, is connected to telephone <highlight><bold>192</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> Communication network <highlight><bold>100</bold></highlight> can be a network that supports, for example, Internet Protocol (IP) signaling, IP media transport, and/or asynchronous transfer mode (ATM) media transport. Access networks <highlight><bold>150</bold></highlight> and <highlight><bold>151</bold></highlight> can be networks of wires or fibers capable of carrying voice and/or data transmissions. The telephone network <highlight><bold>135</bold></highlight> can be, for example, the Plain Old Telephone System (PSTN). </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Network interface units <highlight><bold>160</bold></highlight> and <highlight><bold>161</bold></highlight> can be, for example, cable modems designed for use on a television coaxial cable circuit. Network interface units <highlight><bold>160</bold></highlight> and <highlight><bold>161</bold></highlight> allow communication devices <highlight><bold>180</bold></highlight> and <highlight><bold>181</bold></highlight>, respectively, to connect to access networks <highlight><bold>150</bold></highlight> and <highlight><bold>151</bold></highlight>, respectively. Network interface units <highlight><bold>160</bold></highlight> and <highlight><bold>161</bold></highlight> also allow TIUs <highlight><bold>170</bold></highlight> and <highlight><bold>171</bold></highlight>, respectively (and in turn telephones <highlight><bold>190</bold></highlight> and <highlight><bold>191</bold></highlight>, respectively), to connect to access networks <highlight><bold>150</bold></highlight> and <highlight><bold>151</bold></highlight>, respectively. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> Network edge devices (NEDs) <highlight><bold>120</bold></highlight> and <highlight><bold>121</bold></highlight> are devices located at the edge of the communication network <highlight><bold>100</bold></highlight> that connects the communication network <highlight><bold>100</bold></highlight> to the access networks <highlight><bold>120</bold></highlight> and <highlight><bold>121</bold></highlight>, respectively. The network edge devices can be, for example, routers or bridges or similar equipment that can connect communication network <highlight><bold>100</bold></highlight> to access networks <highlight><bold>150</bold></highlight> and <highlight><bold>151</bold></highlight>. Because NEDs <highlight><bold>120</bold></highlight> and <highlight><bold>121</bold></highlight> can be specifically implemented as, for example, routers at the network edge, these units are also referred to herein as edge routers (ERs). </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> Network edge devices <highlight><bold>120</bold></highlight> and <highlight><bold>121</bold></highlight> can implement resource management and admission control mechanisms that allow the communication network <highlight><bold>100</bold></highlight> to provide assurances of bounded per-packet loss and delay required to assure an authorized quality of service for a call. In other words, network edge devices (e.g., network edge devices <highlight><bold>120</bold></highlight> or <highlight><bold>121</bold></highlight>) can obtain authorization from an associated gate controller (e.g., gate controller <highlight><bold>110</bold></highlight> or <highlight><bold>111</bold></highlight>, respectively) on a call-by-call basis before providing access to, for example, enhanced quality of service across the communication network. Said another way, the network edge devices can ensure that enhanced quality of service for a call of a particular party has been authorized and for which usage accounting is being done. Network edge devices can generate accounting records for calls because these devices track the resource usage within the communication network <highlight><bold>100</bold></highlight> for the calls. Network edge devices can also implement Network Address Translation to support address privacy for called paries and/or calling parties, as described more fully below. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> TIUs <highlight><bold>170</bold></highlight> and <highlight><bold>171</bold></highlight> are gateways between telephones and packet-carrying networks, such as access networks <highlight><bold>150</bold></highlight> and <highlight><bold>151</bold></highlight> and communication network <highlight><bold>100</bold></highlight>. TIUs <highlight><bold>170</bold></highlight> and <highlight><bold>171</bold></highlight> can digitize, compress and packetize voice signals from telephone <highlight><bold>190</bold></highlight> and <highlight><bold>191</bold></highlight>, respectively, to convert analog voice into data packets for transport over the communication network <highlight><bold>100</bold></highlight>, and vice versa. TIUs <highlight><bold>170</bold></highlight> and <highlight><bold>171</bold></highlight> can be, for example, a simple stand-alone telephony device that incorporates the broadband interface, a high-speed data cable modem that incorporates the interface unit (i.e., TIUs and their associated network interface units can be combined into a single device), or an advanced digital set-top box that incorporates the broadband interface. TIUs <highlight><bold>170</bold></highlight> and <highlight><bold>171</bold></highlight> can be for example broadband interfaces for telephones; consequently, these units are also referred to herein as broadband telephony interfaces (BTIs). </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> TIUs contain sufficient processing and memory to perform signaling and call control functions. More specifically, TIUs <highlight><bold>170</bold></highlight> and <highlight><bold>171</bold></highlight> each include a processor and is capable of detecting changes in state information (e.g., hook state detection), collecting dialed digits (e.g., dual-tone multifrequency (DTMF) signals), and participating in the implementation of telephone features for telephones <highlight><bold>190</bold></highlight> and <highlight><bold>191</bold></highlight>, respectively. TIUs <highlight><bold>170</bold></highlight> and <highlight><bold>171</bold></highlight> can also participate in end-to-end capability negotiation as described below. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> Note that the term &ldquo;end-to-end&rdquo; refers the association between two end points for a call. For example, where a call involves a calling party and a called party using telephones, the end-to-end association for the call can be between the two telephony interface units. Thus, end-to-end messages for example would include messages originating at one telephone interface unit and terminating at the other telephony interface unit where the messages are opaque to other network entities that merely forward the messages (possibly after performing network address translation as described below). For example, end-to-end messages can be routed between telephone interface units with messages being forwarded by the network edge devices and without the message being routed through the gate controllers. Alternatively, for example, where a call involves a calling party using a telephone and a called party using a communication device (such as a personal computer), the end-to-end association for the call can be between the calling party telephony interface unit and the called party network interface unit. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> TIUs can maintain information for calls while in progress, thereby implementing certain service features locally. For example, call waiting can be implemented locally, by detecting hook flash and controlling the active call. Similarly, return call can be implemented locally by retaining state information in the TIUs about the most recent calls. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> Note that TIUs <highlight><bold>170</bold></highlight> and <highlight><bold>171</bold></highlight> are considered to be &ldquo;untrusted&rdquo; devices in the sense that the TIUs can operate locally-stored software and are not necessarily under the direct control of the service provider (e.g., the entity operating the communication network <highlight><bold>100</bold></highlight>). Because the TIUs are untrusted devices, information passed to the TIUs can be first encrypted before it is given to the TIUs to guarantee privacy. For example, state information can be passed from the gate controllers <highlight><bold>110</bold></highlight> and/or <highlight><bold>111</bold></highlight> to the TIUs which store the state information for their later use (thereby avoiding the need to maintain state information for a call at the gate controllers) by first encrypting the state information; the state information retrieved from the TIUs can be verified subsequently via known encryption techniques. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> In addition to encrypting the state information for the TIUs to maintain, a cryptographic hash function can be applied to the state information to detect the integrity of the state information (i.e., detect whether the state information has been altered by an untrusted entity). By applying a cryptographic hash value to the state information, a hash value is produced which can be sent to and maintained by the TIUs. As a result, when the state information is retrieved from a TIU, the cryptographic hash function can be applied to this retrieved state information; if the same hash value is produced, then the retrieved state information has not been altered at, for example, the TIU. The cryptographic hash functions can be, for example, a modification detect codes (MDCs) or message authentication codes (MACs). </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> Gate controllers <highlight><bold>110</bold></highlight> and <highlight><bold>111</bold></highlight> are adjunct platforms that have access to authentication databases and customer profile information on database storage <highlight><bold>140</bold></highlight> and <highlight><bold>141</bold></highlight>, respectively. Gate controllers <highlight><bold>110</bold></highlight> and <highlight><bold>111</bold></highlight> implement a set of service-specific control functions to support communication services, such as authentication and authorization, number translation and call routing, service-specific admission control, and signaling and service feature support. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> The gate controllers can authenticate signaling messages and authorize requests for service so that communication services and certain service features are only provided to authorized subscribers. In other words, upon receiving a setup request message from a calling party, the gate controller can authenticate the identity of the calling party and authorize the service sought by the calling party. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> The gate controllers can translate dialed telephone numbers to communication network addresses (such as, for example, IP addresses) based on call routing logic. For example, an originating gate controller (e.g., gate controller <highlight><bold>110</bold></highlight>) can translate a dialed telephone number to a communication network address associated with the terminating gate controller (e.g., gate controller <highlight><bold>111</bold></highlight>). The terminating gate controller can subsequently translate the communication network address to the terminating end-point (e.g., BTI <highlight><bold>171</bold></highlight>) to which the call should be routed. In an alternative embodiment, a single dial telephone number can be mapped to multiple communication network addresses, for example, to allow the signaling and media end-points associated with a call to be distinct. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> The gate controllers can implement a broad range of service-specific admission control policies for the communication services. For example, the gate controllers can provide precedence for particular call (e.g., 911 emergency calls). The gate controllers can perform admission control to implement overload control mechanisms similar to those used in the convention telephone network (e.g., telephone network <highlight><bold>135</bold></highlight>), for example, to restrict the number of calls to a particular location or to restrict the frequency of call setup to avoid signaling overload. These mechanisms can be invoked either dynamically or under administrative control. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> The gate controllers can perform signaling and service feature support where the service features cannot be supported solely by the TIUs. For example, certain service features such as call transfer require changing the end-points participating the calls; in such a case, the gate controllers change the gate parameters because call transfer requires reauthorization by the gate controllers. Service features that depend on the privacy of the calling information, such as caller-ID blocking, are implemented by the gate controllers. In addition, service features that require users to receive a consistent view of feature operation even when a TIU is inoperative are implemented by the gate controllers. For example, the gate controllers can control call forwarding when a TIU for a call is inoperative. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Gate controllers can be organized in domains where each gate controller is associated with a set of TIUs and the network edge devices that serve those TIUs. Although the TIUs are not trusted entities, a trust relationship exists between an network edge device and its associated gate controller because the gate controller acts as a policy server controlling when the network edge device can provide enhanced quality of service. A trust relationship can also exist between gate controllers. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> A gate controller can act as a simple transaction server so that a failure of a gate controller does not affect associated calls that are in process. In one embodiment, a gate controller domain can include a primary and a secondary gate controller. If the primary gate controller fails, only calls in a transient state are affected (i.e., calls that are being established including, for example, where network resources are being allocated). The TIUs associated with those affected calls in a transient state will try to be established on the secondary gate controller after a time-out period has elapsed. All active calls (i.e., calls in progress) are unaffected by the failure of a primary gate controller because the gate controller does not retain state information for these stable, active calls. As a result, gate controllers easily and efficiently scale as more gate controllers for the communication network are required. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> Telephone network gateway <highlight><bold>130</bold></highlight> can include a combination of a trunking gateway (not shown) and a signaling gateway (not shown). The trunking gateway can convert between a data format used on the data network <highlight><bold>100</bold></highlight> and the pulse code modulation (PCM) format typically used for transmission over the telephone network <highlight><bold>135</bold></highlight>. The signaling gateway can provide signaling internetworking between signaling protocols of embodiments of present invention described below and conventional telephony signaling protocols such as ISUP/SS7 (i.e., Integrated Services Digital Network User Part/Signaling System 7). In an alternative embodiment, a media gateway control protocol can be used to control the operation of a media gateway separate from a signaling gateway. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Although not shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, additional network entities (not shown) can be included in the network <highlight><bold>10</bold></highlight>. For example, the gate controllers can use other servers to implement the authorization or the translation functions. Similarly, three way calling can be supported using audio bridges in the network <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> Note that although a limited number of network entities are shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> for simplicity of presentation, other network entities can be included in network <highlight><bold>10</bold></highlight>. For example, although only a sole network interface unit (e.g., a cable modem) is shown connected to a sole network interface unit, multiple network interface units are likely connected to each access network. Similarly, although only a few network edge devices, a few gate controllers and a sole telephone network gateway are shown connected to the communication network <highlight><bold>100</bold></highlight>, many such devices can be connected to the communication network <highlight><bold>100</bold></highlight>. Many other variations to the network <highlight><bold>10</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> are possible. </paragraph>
<paragraph id="P-0066" lvl="7"><number>&lsqb;0066&rsqb;</number> 2. Two-phase Network Resource Reservation </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> In embodiments of the present invention, network resources for a call between a calling party and a called party are allocated. The network resources for the call are reserved based on a reservation request. The network resources are reserved before any one network resource from the reserved network resources is committed. The reserved network resources for the call are committed when a called party indicates acceptance for the call. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> The term &ldquo;network resources&rdquo; is used herein as the facilities of a communications network required for a call and any auxiliary services associated with that call. Network resources can include, for example, the capabilities or capacities of equipment within the communications network needed to establish and maintain a call at an appropriate quality of service. The equipment within the communications network can include, for example, routers, bridges and gateways within the communications network. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> The called party &ldquo;indicates acceptance&rdquo; for the call in a number of ways. For example, where the called party is using a telephone <highlight><bold>190</bold></highlight>, the called party can indicate acceptance for the call by picking up the telephone hand set thereby causing an off-hook condition. Where the called party is using a communication device <highlight><bold>181</bold></highlight> (e.g., a personal computer), the called party can indicate acceptance by making an appropriate selection with the communication device <highlight><bold>181</bold></highlight> that initiates handshake signaling (i.e., a personal computer equivalent for an off-hook condition). Where the called party has an answering machine, the answering machine timer can expire to connect the call. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> Network resources are &ldquo;reserved&rdquo; in the sense that the network resources required for a particular call can be identified before the called party is actually connected to the calling party. These network resources can be reserved through the appropriate signal messages collectively referred to herein as a &ldquo;reservation request&rdquo;. After the appropriate network resources have been reserved based on the reservation request, these network resources are committed when the called party indicates acceptance for the call. By committing the network resources only when the called party indicates acceptance for the call, the accounting for the call can, for example, accurately track the time of the actual call while excluding the time of the call setup. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> Network resources are &ldquo;committed&rdquo; in the sense that an available network resource operates such that the voice information between the calling party and the called party is transported. Before the network resources are committed, the network resources are allocated for the call but are not configured to actually carry the voice information for the call. By committing the reserved network resources once the called party indicates acceptance for the call, the network resources are not wastefully configured before they are actually needed. This can be particularly relevant for portions of the communication network where resources are limited, such as, for example, the upstream resources within the cable network. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> The term &ldquo;quality of service&rdquo; is used herein to include, but not limited to, the measure of telecommunication service quality provided during a call. The quality of service can be specified by a calling party, a called party or the service provider of the communications network, or any combination thereof. In other words, the quality of service is &ldquo;authorized&rdquo; in the sense that the calling party and/or the called party specify a quality of service for the call and the service provider can verify the specified quality of service for the call. For example, a calling party transferring data (e.g., rather than transferring solely voice) may subscribe for a service with a quality of service having a large bandwidth and small latency; in such an example, a service provider can verify the service subscription for the particular quality of service associated with the call for that particular calling party. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates a flow chart to reserve network resources for a call, according to an embodiment of the present invention. <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a simplified view of the connection process to better illustrate the two-phase allocation of network resources. This process is in two phases in the sense that network resources are first reserved and then committed in separate and distinct phases. In other words, network resources are reserved first; once the reservation process is complete, then the reserved network resources can be committed. Other aspects of the overall process will be described in further detail in other sections below. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> Note that components of the communications networks shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> are referred to in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> for convenience with the shorthand notation: originating TIU <highlight><bold>170</bold></highlight> (TIU<highlight><subscript>O</subscript></highlight>), originating network edge device <highlight><bold>120</bold></highlight> (NED<highlight><subscript>O</subscript></highlight>), originating gate controller <highlight><bold>110</bold></highlight> (GC<highlight><subscript>O</subscript></highlight>), terminating gate controller <highlight><bold>111</bold></highlight> (GCT), terminating network edge device <highlight><bold>121</bold></highlight> (NED<highlight><subscript>T</subscript></highlight>), and terminating TIU <highlight><bold>171</bold></highlight> (TIU<highlight><subscript>T</subscript></highlight>). </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> At step <highlight><bold>210</bold></highlight>, a setup message for a call between a calling party and a called party is sent from the originating TIU <highlight><bold>170</bold></highlight> to the originating gate controller <highlight><bold>110</bold></highlight> and the terminating gate controller <highlight><bold>111</bold></highlight>. For example, upon receiving the setup message at the originating gate controller <highlight><bold>110</bold></highlight>, the setup message (possibly modified with additional information) can be forwarded to the terminating gate controller <highlight><bold>111</bold></highlight> through communication network <highlight><bold>100</bold></highlight>. In one embodiment, the setup message can be, for example, in the form of the SETUP message described below in Section 7 entitled &ldquo;Protocol Description&rdquo;. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> At step <highlight><bold>220</bold></highlight>, a gate for the call is established at the terminating network edge device <highlight><bold>121</bold></highlight> upon receiving the setup message from terminating gate controller <highlight><bold>111</bold></highlight>. A &ldquo;gate&rdquo; is a call-admission control mechanism that uses, for example, known packet filters at the edge routers. At step <highlight><bold>230</bold></highlight>, another gate for the call is established at the originating network edge device <highlight><bold>120</bold></highlight>. In one embodiment, the gates can have associated time limits on the gate duration; such a features can allow the calls to be limited where, for example, the calls are established with a pre-paid calling card that has a limited amount of calling time that is pre-paid. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> Note that by establishing the gates at the originating and terminating network edge devices rather than at the corresponding gate controllers, the state information for the call is maintained at a network entity through which the call is routed. In other words, state information for a call can be maintained without maintaining the state information at a gate controller. Consequently, if a gate controller fails after the gates have been established for a call, the call can be maintained. The establishment of gates for a call are discussed more fully below in the Section 4 entitled &ldquo;Gate Coordination on a Per-Call Basis&rdquo;. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> At step <highlight><bold>240</bold></highlight>, a reserve message is sent from the originating TIU <highlight><bold>170</bold></highlight> to the originating NED <highlight><bold>120</bold></highlight>. At step <highlight><bold>250</bold></highlight>, a reserve message is sent from the terminating TIU <highlight><bold>171</bold></highlight> to the terminating NED <highlight><bold>121</bold></highlight>. The reserve messages sent by the originating TIU <highlight><bold>170</bold></highlight> and terminating TIU <highlight><bold>171</bold></highlight> are a part of the reservation process where an allocation of network resources is requested but the network resource need not yet be assigned or committed. Allocating the network resources includes the verifying that the quality of service desired by a TIU is no greater than the quality of service authorized by the corresponding gate controller; the gate controller authorizes a quality of service for a call using the authentication databases and customer profile information on the associated database storage (e.g., database storage <highlight><bold>140</bold></highlight> and <highlight><bold>141</bold></highlight>). </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> To provide telephone-grade service over network <highlight><bold>10</bold></highlight>, the network <highlight><bold>10</bold></highlight> can provide bounded per-packet loss and delay for the voice packets of a call by performing active resource management both in the access network <highlight><bold>150</bold></highlight> and <highlight><bold>151</bold></highlight>, and communication network <highlight><bold>100</bold></highlight>. Because the network edge devices (e.g., NEDs <highlight><bold>120</bold></highlight> and <highlight><bold>121</bold></highlight>) within the connection path for a call may have capacity constrained links, reservation requests for a call (and any associated messages) are forwarded end to end, thereby ensuring that network resources are available end to end. In one embodiment, because the access networks <highlight><bold>150</bold></highlight> and <highlight><bold>151</bold></highlight> may be capacity constrained (at least in the upstream direction), resource management is performed on a per-call basis for the access networks <highlight><bold>150</bold></highlight> and <highlight><bold>151</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> Resource management in the communication network <highlight><bold>100</bold></highlight>, however, can be performed on a per-call basis or on a coarse-grained resource basis (i.e., resources within the communication network <highlight><bold>100</bold></highlight> can be reserved for multiple calls at a given time). Resource management within portions of the communication network <highlight><bold>100</bold></highlight> may be performed on a per-call basis because some network edge devices with the communications network <highlight><bold>100</bold></highlight> may not have sufficient processing capacity to process a large number of reservation messages typical for high volume call traffic. Alternatively, resource management within portions of the communication network <highlight><bold>100</bold></highlight> may be performed on a multiple-call basis if these portions of the communication network <highlight><bold>100</bold></highlight> are adequately provisioned (i.e., sufficient capacity has been reserved by a multiple-call reservation); in such cases, network edge devices within these portions of communication network <highlight><bold>100</bold></highlight> need not perform per-call admission control. Consequently, in an embodiment of the present invention, some network edge devices do per-flow admission control to interpret reservation requests while other network edge devices that are in capacity-rich regions of the data network <highlight><bold>100</bold></highlight> are provisioned to simply forward these messages without interpretation. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> Embodiments of the present invention can perform resource reservation in the communication network <highlight><bold>100</bold></highlight> in a uni-directional manner which thereby compensates for routing asymmetries. Thus, when the originating TIU <highlight><bold>170</bold></highlight> sends a reservation request to the originating NED <highlight><bold>120</bold></highlight> and when the originating TIU <highlight><bold>170</bold></highlight> receives back an acknowledgment for the reservation request, two aspects are of the connection are confirmed. First, adequate bandwidth for the call is available in both directions over the access networks <highlight><bold>150</bold></highlight> and <highlight><bold>151</bold></highlight>. Second, adequate bandwidth for the call is available over the communication network <highlight><bold>100</bold></highlight>. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> Steps <highlight><bold>210</bold></highlight> through <highlight><bold>240</bold></highlight> describe the process of reserving the network resources. At this point, the network resources to be used for the call are reserved, but none of these network resources are yet committed. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> At step <highlight><bold>250</bold></highlight>, end-to-end messages are exchanged between the originating TIU <highlight><bold>170</bold></highlight> and the terminating TIU <highlight><bold>171</bold></highlight>. As previously discussed above, the term &ldquo;end-to-end&rdquo; refers the associated between two end points associated with a call. So, where a call involves a calling party and a called party using telephones, the end-to-end association for the call can be between the two telephony interface units; thus, end-to-end messages would include messages originating at one telephone interface unit and terminating at the other telephony interface unit. </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> The end-to-end messages can include, for example, a ring message from the originating TIU <highlight><bold>170</bold></highlight> to the terminating TIU <highlight><bold>171</bold></highlight>, a ring back message from the terminating TIU <highlight><bold>171</bold></highlight> to the originating TIU <highlight><bold>170</bold></highlight>, and a connect message from the terminating TIU <highlight><bold>171</bold></highlight> to the originating TIU <highlight><bold>170</bold></highlight>. The ring message can signal the terminating telephone <highlight><bold>191</bold></highlight> to ring thereby indicating an incoming call. The ring back message can signal the originating TIU <highlight><bold>170</bold></highlight> that the terminating telephone <highlight><bold>190</bold></highlight> is ringing. The connect message can signal to the originating TIU <highlight><bold>170</bold></highlight> that the called party has indicated acceptance for the call by, for example, going off-hook. Note that these end-to-end messages can be routed between the originating TIU <highlight><bold>170</bold></highlight> and the terminating TIU <highlight><bold>171</bold></highlight> without being routed through the originating gate controller <highlight><bold>110</bold></highlight> or terminating gate controller <highlight><bold>111</bold></highlight>. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> At step <highlight><bold>270</bold></highlight>, upon the calling party and the called party being connected (e.g., upon an off-hook condition by the called party and a connect message being sent), a commit message is sent from the originating TIU <highlight><bold>170</bold></highlight> to the originating NED <highlight><bold>120</bold></highlight> and from the terminating TIU <highlight><bold>171</bold></highlight> to the terminating NED <highlight><bold>121</bold></highlight>. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> At step <highlight><bold>280</bold></highlight>, upon receiving the commit message at the originating NED <highlight><bold>120</bold></highlight>, the gate established at the originating NED <highlight><bold>120</bold></highlight> in step <highlight><bold>230</bold></highlight> is opened. Similarly, at step <highlight><bold>290</bold></highlight>, upon receiving the commit message at the terminating NED <highlight><bold>121</bold></highlight>, the gate established at the terminating NED <highlight><bold>120</bold></highlight> in step <highlight><bold>220</bold></highlight> is opened. At this point when the gates are opened at the originating NED <highlight><bold>120</bold></highlight> and the terminating NED <highlight><bold>121</bold></highlight>, the reserved network resources are committed. The commit process can include a verification by the NED that the actual quality of service sought by the associated TIU is no greater than the quality of service reserved during the reservation process. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> The gate at the originating edge router and the gate at the terminating edge router for each call are opened almost simultaneously (e.g., within a few hundred milliseconds of each other) because, under normal operating conditions, the calling party and the called party send respective Commit message to their respective network edge devices substantially simultaneously. Similarly, under normal operating conditions, the calling party and the called party end the call and send respective release messages to their respective network edge devices substantially simultaneously. Gate coordination prevents billing for incomplete calls and prevents theft of service by two colluding BTIs. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> By separating the reservation process from the commit process, embodiments of the present invention advantageously ensure that network resources are available before actually ringing the far-end telephone (e.g., the telephone of the called party). This, of course, advantageously ensures that usage recording is not initiated until the far-end telephone goes off hook. Consequently, call billing excludes calls that are not completed (e.g., where the called party does not answer) and excludes the portion of calls that occur before the called party answers. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> Although <cross-reference target="DRAWINGS">FIG. 2</cross-reference> describes an embodiment for reserving network resources where the calling party and the called party were using telephones <highlight><bold>190</bold></highlight> and <highlight><bold>191</bold></highlight>, respectively, through TIUs <highlight><bold>170</bold></highlight> and <highlight><bold>171</bold></highlight>, respectively, the process can be analogized for a calling party and/or called party using a communication device <highlight><bold>180</bold></highlight> and/or <highlight><bold>181</bold></highlight>, respectively. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> Note that the state information for a call can be maintained without maintaining the state information at a gate controller. From the perspective of the originating gate controller, a gate setup message for a call (e.g., a GATESETUP message described in Section 7 below) is received through a network edge device connecting a trusted network to an untrusted network. The state information for the call (e.g., contained within a GATEALLOC message described in Section 7 below) is formatted at the gate controllers based on the setup message for the call. The state information for the call is sent to the originating network edge device without maintaining the state information at the originating gate controller and at the terminating network edge device without maintaining the state information at the terminating gate controller. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> Note that the term &ldquo;maintained&rdquo; as used herein in reference to the state information is intended to include storing and using the state information while the call is being establishing, the call is in progress and the is being released. Although the state information may be temporarily stored at the gate controllers, the state information is not maintained at the gate controller because the gate controllers do not do not use the state information (e.g., for call processing) while the call is being establishing, the call is in progress and the call is being released. In fact, the gate controllers need not stored the state information after the state information has been provided to the network edge routers because the state information for the call is accessed at the gate controllers, not the gate controllers. </paragraph>
<paragraph id="P-0092" lvl="7"><number>&lsqb;0092&rsqb;</number> 3. Two-Phase Signaling </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> In embodiments of the present invention, signaling messages are exchanged for a call between a calling party to a called party in two phases. The signaling messages are exchanged in two phases in the sense that the messages for setting up the call are exchanged in one phase and the messages for connecting the call are exchanged in a separate and distinct second phase. By separating the messages for setting up the call from the messages for connecting the call, the later messages can be exchanged end to end without being routed through the gate controllers that set up the call. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> Note this concept of two-phase signaling is distinct from the concept of two-phase network resource reservation in the sense that the two-phase signaling can be performed in combination with or independent of the two-phase network resource reservation. In other words, when done in combination, the messaging for the two-phase signaling can be interleaved with the messaging for the two-phase network resource reservation; when done independently, the messages for each can be distinct. The two-phase network resource reservation relates to reserving network resources without committing them, then committing those reserved resources. The two-phase signaling relates to performing signaling to set up the call, then once the call is setup (e.g., thereby confirming the authoried quality of service), exchanging end-to-end messaging. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> A setup message having a destination address is forwarded from the calling party to the called party. A setup acknowledgment message is received at, for example, a gate controller from the called party if the destination address corresponds to the called party. The received setup acknowledgment message is sent to the calling party. The calling party and the called party exchange end-to-end messages if the calling party received the forwarded setup acknowledgment message and if at least one from the group of the called party and the calling party sent a reserve message to an associated network edge device. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates a flow chart for performing two-phase signaling in call connection, according to an embodiment of the present invention. At step <highlight><bold>310</bold></highlight>, the calling party goes off-hook and dials a telephone number of the called party. For convenience, <cross-reference target="DRAWINGS">FIG. 3</cross-reference> will be discussed where the calling party is using telephone <highlight><bold>190</bold></highlight> and the called party is using telephone <highlight><bold>191</bold></highlight>. Of course, any number of arrangements are possible, such as the calling party using communication device <highlight><bold>180</bold></highlight>. At step <highlight><bold>320</bold></highlight>, the originating TIU <highlight><bold>170</bold></highlight> collects the dialed digits. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> At step <highlight><bold>330</bold></highlight>, the originating TIU <highlight><bold>170</bold></highlight> sends a setup message to the originating gate controller <highlight><bold>110</bold></highlight>. The setup message can be sent through network interface unit <highlight><bold>160</bold></highlight>, access network <highlight><bold>150</bold></highlight>, NED <highlight><bold>120</bold></highlight> and communication network <highlight><bold>100</bold></highlight>. In one embodiment, the setup message can be, for example, in the form of the SETUP message described below in Section 7 entitled &ldquo;Protocol Description&rdquo;. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> At step <highlight><bold>340</bold></highlight>, the setup message is forwarded from the originating gate controller <highlight><bold>110</bold></highlight> to the terminating gate controller <highlight><bold>111</bold></highlight>. At step <highlight><bold>350</bold></highlight>, the setup message is forwarded from the terminating gate controller <highlight><bold>111</bold></highlight> to the terminating TIU <highlight><bold>171</bold></highlight>. (After receiving the setup message, the originating gate controller <highlight><bold>110</bold></highlight> and the terminating gate controller <highlight><bold>111</bold></highlight>, can establishe a gate at the originating NED <highlight><bold>120</bold></highlight> and a gate at the terminating NED <highlight><bold>121</bold></highlight> as described in Section 2 above.) At step <highlight><bold>360</bold></highlight>, if the destination address of setup message corresponds to the terminating TIU <highlight><bold>171</bold></highlight>, a setup acknowledgment message is sent to the TIU <highlight><bold>170</bold></highlight>. The setup acknowledgment message can be sent, for example, through terminating gate controller <highlight><bold>111</bold></highlight> and originating gate controller <highlight><bold>110</bold></highlight>. In one embodiment, the setup acknowledgment message can be, for example, in the form of the SETUPACK message described below in Section 7 entitled &ldquo;Protocol Description&rdquo;. </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> At step <highlight><bold>370</bold></highlight>, the network resources for the call are reserved. As described above in Section 2 entitled Two-Phase Network Resource Reservation, a reserve message is sent from the originating TIU <highlight><bold>170</bold></highlight> to the originating NED <highlight><bold>120</bold></highlight> and from the terminating TIU <highlight><bold>170</bold></highlight> to the terminating NED <highlight><bold>121</bold></highlight> when an allocation of network resources is requested but the network resource need not yet be assigned or committed. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> At steps <highlight><bold>380</bold></highlight> through <highlight><bold>395</bold></highlight>, end-to-end messages are exchanged between the originating TIU <highlight><bold>170</bold></highlight> and the terminating TIU <highlight><bold>171</bold></highlight> if the calling party received the setup acknowledgment message sent to the originating TIU <highlight><bold>170</bold></highlight> in step <highlight><bold>360</bold></highlight> and if the calling party or the called party sent a reserve message to its NED. In other words, end-to-end messages relating to the connection of the call are exchanged only after the reservation messages have been exchanged and the reservation process is complete. This ensures that service is only provided to calling and called parties that have been authorized and authenticated for the call. This also ensures that the call is established for a specifically authorized quality of service and that the call is billed appropriately. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> At step <highlight><bold>380</bold></highlight>, a ring message is sent from the originating TIU <highlight><bold>170</bold></highlight> to the terminating TIU <highlight><bold>171</bold></highlight>. The ring message can signal the terminating telephone <highlight><bold>191</bold></highlight> to ring thereby indicating an incoming call. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> At step <highlight><bold>390</bold></highlight>, a ring back message is sent from the terminating TIU <highlight><bold>171</bold></highlight> to the originating TIU <highlight><bold>170</bold></highlight>. The ring back message can signal the originating TIU <highlight><bold>170</bold></highlight> that the terminating telephone <highlight><bold>190</bold></highlight> is ringing. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> At step <highlight><bold>395</bold></highlight>, a connect message is sent from the terminating TIU <highlight><bold>171</bold></highlight> to the originating TIU <highlight><bold>170</bold></highlight>. The connect message can signal to the originating TIU <highlight><bold>170</bold></highlight> that the called party has indicated acceptance for the call by, for example, going off-hook. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> These end-to-end messages can be routed between the originating TIU <highlight><bold>170</bold></highlight> and the terminating TIU <highlight><bold>171</bold></highlight> without being routed through the originating gate controller <highlight><bold>110</bold></highlight> or terminating gate controller <highlight><bold>111</bold></highlight> because state information for the call can be maintained without maintaining it at the gate controllers <highlight><bold>110</bold></highlight> and <highlight><bold>111</bold></highlight>. In addition, these end-to-end message can be routed through NEDs <highlight><bold>120</bold></highlight> and <highlight><bold>121</bold></highlight> opaquely. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> Note that by separating the signaling for a call relating the reservation process and relating to connect process, the concept of the traditional dedicated phone line for a telephone user can be replaced with a process that authenticates the calling party and called party, and authorizes a desired quality of service on a per-call basis. In other words, only authenticated users reserved network resources for an authorized quality of service before these network resources are connected. Consequently, calls having varying qualities of service can be provided and appropriately billed on a call-by-call basis. </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> Furthermore, by separating the signaling for a call into signals relating to the reservation process and signals relating to the connect process, the gate controllers are involved in the signaling process where only needed: during the reservation process. After the reservation process is complete, the originating and terminating gate controllers pass the state information for the call to, for example, the originating and terminating TIUs without maintaining the state information at the gate controllers. The gate controllers no longer need be involved in the call and messaging related to the connection process can be sent end-to-end without being routed through the gate controllers. In other words, the gate controllers are involved only during the initial start of the call but not during the call duration. This results in a reduction of the message load by, for example, approximately a factor of three. Consequently, the amount of memory need in the gate controllers is greatly reduced. Moreover, the gate controllers can be constructed without the typically stringent requirements for reliability. </paragraph>
<paragraph id="P-0107" lvl="7"><number>&lsqb;0107&rsqb;</number> 4. Gate Coordination on a Per-Call Basis </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> As discussed in the preceding section, reserved network resources can be committed upon the originating and terminating network edge devices receiving commit messages indicating that the call has been connected. At this point, gates associated with a call between a calling party and a called party can be opened in a coordinated fashion. A timer associated with a first gate opened at an originating network edge device is initiated. A first gate open message is sent from the originating network edge device to the terminating network edge device. The first gate at the originating network edge device is released if the timer expires before at least one from the group of: (1) an acknowledgment based on the sent first gate open message is received from the terminating network edge device, and (2) a second gate open message is received at the originating network edge device from the terminating network edge device after the terminating network edge device has opened a second gate associated with the called party. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> At step <highlight><bold>400</bold></highlight>, a timer associated with a gate at the originating NED <highlight><bold>120</bold></highlight> is initiated upon receiving a commit message from the originating TIU <highlight><bold>170</bold></highlight>. At step <highlight><bold>410</bold></highlight>, a timer associated with a gate at the terminating NED <highlight><bold>121</bold></highlight> is initiated upon receiving a commit message from the terminating TIU <highlight><bold>171</bold></highlight>. As described above in Section 2 entitled &ldquo;Two-Phase Network Resource Reservation&rdquo;, the commit message is sent from a TIU to the associated NED upon the called party indicating an acceptance for the call (e.g., by a connect message being sent from the terminating TIU to the originating TIU). The order steps <highlight><bold>400</bold></highlight> and <highlight><bold>410</bold></highlight> depends on the order in which the NEDs receive the commit messages from their associated TIUs. </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> At step <highlight><bold>420</bold></highlight>, a gate open message is sent from the originating NED <highlight><bold>120</bold></highlight> to the terminating NED <highlight><bold>121</bold></highlight>. At step <highlight><bold>430</bold></highlight>, a gate open message is sent from the terminating NED <highlight><bold>121</bold></highlight> to the originating NED <highlight><bold>120</bold></highlight>. In one embodiment, the setup acknowledgment message can be, for example, in the form of the GATEOPEN message described below in Section 7 entitled &ldquo;Protocol Description&rdquo;. The order in which steps <highlight><bold>420</bold></highlight> and <highlight><bold>430</bold></highlight> are performed depends on the order in which steps <highlight><bold>400</bold></highlight> and <highlight><bold>410</bold></highlight> are performed. A gate open message is sent from one NED to the other NED to notify that other NED when a gate for the call has been opened. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> At step <highlight><bold>440</bold></highlight>, a gate open acknowledgment message is sent from originating NED <highlight><bold>120</bold></highlight> to terminating NED <highlight><bold>121</bold></highlight> upon the originating NED <highlight><bold>121</bold></highlight> receiving the gate open message sent during step <highlight><bold>430</bold></highlight> by terminating NED <highlight><bold>120</bold></highlight>. At step <highlight><bold>450</bold></highlight>, a gate open acknowledgment message is sent from terminating NED <highlight><bold>121</bold></highlight> to originating NED <highlight><bold>120</bold></highlight> upon the terminating NED <highlight><bold>120</bold></highlight> receiving the gate open message sent during step <highlight><bold>420</bold></highlight> by originating NED <highlight><bold>120</bold></highlight>. In one embodiment, the setup acknowledgment message can be, for example, in the form of the GATEOPENACK message described below in Section 7 entitled &ldquo;Protocol Description&rdquo;. The order in which steps <highlight><bold>440</bold></highlight> and <highlight><bold>450</bold></highlight> are performed depends on the order in which the gate open acknowledgment message are received. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> At conditional step <highlight><bold>470</bold></highlight>, a determination is made as to whether the timer for the gate at the originating NED <highlight><bold>120</bold></highlight> expired before (1) the originating NED <highlight><bold>120</bold></highlight> received the gate open acknowledgment message from the terminating NED <highlight><bold>121</bold></highlight>, or (2) the originating NED <highlight><bold>120</bold></highlight> received the gate open message from the terminating NED <highlight><bold>121</bold></highlight>. If the timer expired before either condition is satisfied, then the process proceeds to step <highlight><bold>475</bold></highlight> where the gate at the originating NED <highlight><bold>120</bold></highlight> is closed and released. If the timer did not expire before either condition is satisfied, then the process proceeds to step <highlight><bold>477</bold></highlight> where the gate at the originating NED <highlight><bold>120</bold></highlight> is allowed to remained open. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> At conditional step <highlight><bold>480</bold></highlight>, a determination is made as to whether the timer for the gate at the terminating NED <highlight><bold>121</bold></highlight> expired before (1) the terminating NED <highlight><bold>121</bold></highlight> received the gate open acknowledgment message from the originating NED <highlight><bold>120</bold></highlight>, or (2) the terminating NED <highlight><bold>121</bold></highlight> received the gate open message from the originating NED <highlight><bold>120</bold></highlight>. If the timer expired before either condition is satisfied, then the process proceeds to step <highlight><bold>485</bold></highlight> where the gate at the terminating NED <highlight><bold>121</bold></highlight> is closed and released. If the timer did not expire before either condition is satisfied, then the process proceeds to step <highlight><bold>487</bold></highlight> where the gate at the terminating NED <highlight><bold>121</bold></highlight> is allowed to remained open. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> A gate is &ldquo;closed&rdquo; in the sense that the call is no longer active although the gate for the call remains established for possible later use. For example, in a call having a call waiting feature, a first party can be connected to two other parties and two gates (one per call) will be established at the network edge device associated with the first party. In such a case, as the first party switches between the calls the temporarily inactive call will have an associated gate that is closed; this closed gate can be reopened upon the call being reactivated. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> A gate is &ldquo;released&rdquo; in the sense that the call is no longer active and the gate for the call is deleted from the associated network edge device. In such a case, for a call to be started, the entire network resource reservation process and commit process (see, e.g., the discussed relating to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) have to be repeated. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> The timer at a gate ensures that the other gate related to the call is also opened within the timer period so that billing for the call is accurate and so that theft of service can be prevented. Without such gate coordination, either a service provider could bill a party for a call where only one gate was opened (even if the calling party was not connected to the called party) or a service provider could be susceptible to theft of service for a call where only one gate was opened. Considering the latter, theft of service could occur without gate coordination, for example, by two colluding TIUs: where the originating TIU can initiate a call and only the terminating TIU sends a local commit message, the single gate would not be released for up to several minutes because the far-end telephone could be ringing; the originating BTI could then steal service during this time. By sending the gate open message from the network edge device with an open gate to the network edge device without a corresponding peer gate, the second gate for the call is sure to be established even if a commit message is not received from the associated TIU (as could be the case if a theft of service was attempted). </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> Gate coordination can also be performed at the end of a call. Just as a gate open message and a gate open acknowledgment message is sent to the network edge device where the peer gate is established, a gate close message and a gate close acknowledgment message can be sent upon a gate closing to the network edge device where the peer gate is open. In other words, when a call is ended by either the calling party or the called party, the party ending the call has its gate closed and the peer gate is informed of the closure so that the peer gate is also closed. An example of the message exchange for a gate closing is shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> and the associated discussion in Section 8 entitled &ldquo;Signaling Architecture Call Flows&rdquo;. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> By coordinating the gate closings, again theft of service by a malfunctioning or malicious TIU can be prevented. Consider the case where the originating TIU <highlight><bold>170</bold></highlight> calls terminating TIU <highlight><bold>171</bold></highlight> and pays for the call. If either the calling party or the called party end the call, the gates at both the originating NED <highlight><bold>120</bold></highlight> and the terminating NED <highlight><bold>121</bold></highlight> need to be closed. Because the originating TIU <highlight><bold>170</bold></highlight> is being billed for the call, the calling party has an incentive to issue a release message to close the gate at the originating NED <highlight><bold>120</bold></highlight>. The terminating TIU <highlight><bold>171</bold></highlight>, however, cannot be trusted to send the release message to close the gate at the terminating NED <highlight><bold>121</bold></highlight>. A gate close message sent from the originating NED <highlight><bold>120</bold></highlight> can close the gate at the terminating NED <highlight><bold>121</bold></highlight> to prevent the terminating TIU <highlight><bold>171</bold></highlight> from placing another call and having that call billed to the party associated with TIU <highlight><bold>170</bold></highlight>. </paragraph>
<paragraph id="P-0119" lvl="7"><number>&lsqb;0119&rsqb;</number> 5. Network Address Translation </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> Because the TIUs are untrusted entities, any information that a calling party or a called party desires to keep private, such as caller ID information or address information, should be accessible to the network <highlight><bold>10</bold></highlight> but not to other untrusted entities. This section describes the use of network address translations and encryption techniques that allow gate controllers to send state information to TIUs where it is maintained in a form that renders the private information opaque. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> In one embodiment, a call between a calling party and a called party is connected. Information associated with the call is sent from the calling party to the called party without the called party receiving a source address that indicates at least one from the group of a logical identity of the calling party and a geographical identity of the calling party. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> The term &ldquo;logical identity&rdquo; is used to herein to include, for example, any aspect of the source address or destination address that indicates the specific identity of a calling party or the called party. The term &ldquo;geographic identity&rdquo; is used to herein to include, for example, an aspect of the source address or destination address that indicates the particular geographic location of a calling party or called party. Even where a network address has been modified or altered to protect the logical identity of a calling party or called party, the remaining aspects of the network address can reveal the general geographic location of the party. In an embodiment of the present invention, information is sent from one party to another party without revealing either the logical identity nor the geographic identity of a party. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates a flow chart for translating a network address, according to an embodiment of the present invention. At step <highlight><bold>500</bold></highlight>, packets having the source address and the destination are sent from the originating TIU <highlight><bold>170</bold></highlight> through the originating network interface unit <highlight><bold>160</bold></highlight> towards the originating NED <highlight><bold>120</bold></highlight>. The source address and the destination address locally identify the calling party and the called party, respectively. These addresses are &ldquo;local&rdquo; in the sense that they are associated with particular portions of networks (also referred to herein as &ldquo;address domains&rdquo;), such as portions of the access network <highlight><bold>150</bold></highlight> and/or communication network <highlight><bold>100</bold></highlight> and/or other access networks (not shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>). These local addresses are not sent outside of their resepective address domains. To send packets outisde of the address domain, the destination needs to be identified by a global address, as described below. Table 1 illustrates an example of the source address (SA) and the destination address (DA) at this point.  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="56PT" align="left"/>
<colspec colname="1" colwidth="21PT" align="center"/>
<colspec colname="2" colwidth="140PT" align="center"/>
<thead>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center">TABLE 1</entry>
</row>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>SA</entry>
<entry>10.10.1.5</entry>
</row>
<row>
<entry></entry>
<entry>DA</entry>
<entry>10.10.1.27</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> At step <highlight><bold>510</bold></highlight>, the packets received at NED <highlight><bold>120</bold></highlight> are translated from local addresses for the address domain within access network <highlight><bold>150</bold></highlight> to global addresses. Not only can the destination address be translated into a global address, but the source address can also be translated into a global address. Table 2 illustrates a translation table for the call used at NED <highlight><bold>120</bold></highlight>. Note that the global addresses used for the call can be assigned dynamically, for example, on a call-by-call basis so that when a call has ended, the global address can be reused for another, unrelated call.  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="70PT" align="left"/>
<colspec colname="1" colwidth="49PT" align="center"/>
<colspec colname="2" colwidth="98PT" align="center"/>
<thead>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center">TABLE 2</entry>
</row>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry>Local Address</entry>
<entry>Global Address</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="70PT" align="center"/>
<colspec colname="2" colwidth="49PT" align="center"/>
<colspec colname="3" colwidth="98PT" align="center"/>
<tbody valign="top">
<row>
<entry>SA</entry>
<entry>10.10.1.5</entry>
<entry>135.4.1.7</entry>
</row>
<row>
<entry>DA</entry>
<entry>10.10.1.27</entry>
<entry>135.4.2.15</entry>
</row>
<row><entry namest="1" nameend="3" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> At step <highlight><bold>520</bold></highlight>, the packets are forwarded from the originating NED <highlight><bold>120</bold></highlight> to the terminating NED <highlight><bold>121</bold></highlight>. At this point, the packets have the global address shown in Table 2. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> At step <highlight><bold>530</bold></highlight>, the packets received at the terminating NED <highlight><bold>121</bold></highlight> are translated from global addresses to addresses that are local to the address domain for which the terminating access network <highlight><bold>151</bold></highlight> is included. Table 3 illustrates a translation table for the call used at NED <highlight><bold>121</bold></highlight> for translating the global addresses to local addresses.  
<table-cwu id="TABLE-US-00003">
<number>3</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="98PT" align="center"/>
<colspec colname="2" colwidth="49PT" align="center"/>
<colspec colname="3" colwidth="70PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center">TABLE 3</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="3" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Global Address</entry>
<entry>Local Address</entry>
</row>
<row><entry namest="1" nameend="3" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>135.4.1.7</entry>
<entry>10.10.100.19</entry>
<entry>SA</entry>
</row>
<row>
<entry>135.4.2.15</entry>
<entry>10.10.100.7</entry>
<entry>DA</entry>
</row>
<row><entry namest="1" nameend="3" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> At step <highlight><bold>540</bold></highlight>, the packets translated by the terminating NED <highlight><bold>121</bold></highlight> are sent through access network <highlight><bold>151</bold></highlight> to the terminating TIU <highlight><bold>171</bold></highlight>. Table 4 illustrates the source address and the destination address for the packets for the call as the packets are transmitted across terminating access network <highlight><bold>151</bold></highlight>, through terminating network interface unit <highlight><bold>161</bold></highlight> to the terminating TIU <highlight><bold>171</bold></highlight>.  
<table-cwu id="TABLE-US-00004">
<number>4</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="49PT" align="left"/>
<colspec colname="1" colwidth="21PT" align="center"/>
<colspec colname="2" colwidth="147PT" align="center"/>
<thead>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center">TABLE 4</entry>
</row>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>SA</entry>
<entry>10.10.100.19</entry>
</row>
<row>
<entry></entry>
<entry>DA</entry>
<entry>10.10.100.7</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> The translated packets are received at the terminating TIU <highlight><bold>171</bold></highlight> without revealing the logical identity and the geographic identity of calling party. Note that the called party only has access to the global source address and the global destination address which themselves are translations. Because the source address of calling party has been translated twice, once at the originating NED <highlight><bold>120</bold></highlight> and once at the terminating NED <highlight><bold>121</bold></highlight>, address information about the calling party has been altered beyond recognition to the calling party. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> Once the call is completed, the translation tables at the originating NED <highlight><bold>120</bold></highlight> and the terminating NED <highlight><bold>121</bold></highlight> can be deleted, and the global addresses can be released for reuse in another call. For example, if the network address translation is incorporated into the funcitonality of the respective gates, the global addresses can be released when the gates are released. In another embodiment, the global addresses can be released after a time period of inactivity. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates the process by which packets are sent from the originating TIU <highlight><bold>170</bold></highlight> to the terminating TIU <highlight><bold>171</bold></highlight>. Similarly, packets sent from the terminating TIU <highlight><bold>171</bold></highlight> to the originating TIU <highlight><bold>170</bold></highlight> can be translated at the terminating NED <highlight><bold>121</bold></highlight> (reverse of the translation shown in Table 3) and again at the originating NED <highlight><bold>120</bold></highlight> (reverse of the translation shown in Table 2). Thus, the source address and the destination address of the packets can be sent from the terminating TIU <highlight><bold>171</bold></highlight> to the originating TIU <highlight><bold>170</bold></highlight> without revealing the logical identity and the geographic identity of called party. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> The double translation of network addresses can be provided as a service to a subscriber by a service provider. In other words, a call can be connected where the calling party and/or the called party subscribe to the double translation service. <cross-reference target="DRAWINGS">FIG. 5</cross-reference> illustrates the case where the privacy of both the calling party and the called party address information is maintained: both the source address and the destination address of packets for the call are translated as the packets are sent from the calling party to the called party and as packets for the call are sent from the called party to the calling party. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> The double translation service can be provided to one party (i.e., only the calling party or the called party) without providing the service to the other party. In such a case, for example where only the calling party has subscribed to the double translation service, the first source address for packets sent from the originating TIU <highlight><bold>170</bold></highlight> are translated at the originating NED <highlight><bold>120</bold></highlight> into a global source address, and the global address for these packets are translated at the terminating NED <highlight><bold>121</bold></highlight> into a second local source address. As packets are sent from the terminating TIU <highlight><bold>171</bold></highlight>, the second local source address is translated at the terminating NED <highlight><bold>121</bold></highlight> into the global source address, and the global source address is translated into the first source address at the originating NED <highlight><bold>120</bold></highlight>. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> In other words, where only one party has subscribed to the double translation service, the address associated with that party is translated twice. Consequently, the logical identity and the geographic identity of that party is maintained in privacy from the other party for the call. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> The translation tables at the originating NED <highlight><bold>120</bold></highlight> and the terminating NED <highlight><bold>121</bold></highlight> can be set up for a specific call and then can be deleted at the end of the call. This further ensures the privacy of the calling party and/or called party because the global addresses are not repeated. Furthermore, by releasing the global addresses at the end of a call, the global addresses can be reused for another call having a different calling party and/or called party. Consequently, any potential shortage in the number of global addresses can be alleviated because the number of active calls at one time is much less than the number of total calling parties and called parties. </paragraph>
<paragraph id="P-0135" lvl="7"><number>&lsqb;0135&rsqb;</number> 6. Simulated Destination Ring Back </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> In another embodiment of the present invention, a ringback for a call between a calling party and a called party can be simulated. A connection acknowledgment associated with the call is received where the calling party is located within a first network and the called party is located within a second network. A prestored ring back signal from a set of prestored ringback signals is selected where the selected prestored ring back signal is associated with the second network. The selected prestored ring back signal is sent to the calling party. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> The prestored ringback signal can be, for example, a signal that is indicative of the network associated with the called party rather than a signal originated by that network. For example, a signal indicative of a foreign network (i.e., a network located in a foreign country) can be stored at a terminating TIU and provided within a ring back message sent to the origianting TIU. In such a case, the ring back signal can simulate the ring back signal for that foreign country rather than relying on the actual foreign-network-originated ring back signal. </paragraph>
<paragraph id="P-0138" lvl="7"><number>&lsqb;0138&rsqb;</number> 7. Protocol Description </paragraph>
<paragraph id="P-0139" lvl="0"><number>&lsqb;0139&rsqb;</number> This section contains details of the various protocols associated with embodiments of the present invention. These include the communication between BTI and Gate Controller, between the BTI and Edge Router, between the BTI and other BTIs, between the Gate Controller and Edge Router, between Edge Router and Edge Router, and between Gate Controller and Gate Controller. </paragraph>
<paragraph id="P-0140" lvl="0"><number>&lsqb;0140&rsqb;</number> All messages are given here in a text-based format, using a type/value structure. This is particularly easy for prototype implementations, and for describing the interactions between network elements. However, if any system components exist where memory is a serious limitation, it is possible that a binary format could be used to conserve buffer space requirements. </paragraph>
<paragraph id="P-0141" lvl="0"><number>&lsqb;0141&rsqb;</number> A sample message is: </paragraph>
<paragraph id="P-0142" lvl="2"><number>&lsqb;0142&rsqb;</number> SETUP 0S55072 v1.0; DEST E164 8766; CALLER 8718 Bill Marshall; AUTHID 3312120; CRV 21; CODING 53B,6 ms G.711 </paragraph>
<paragraph id="P-0143" lvl="0"><number>&lsqb;0143&rsqb;</number> Messages consist of a sequence of type/value pairs. Each element of the sequence is separated by a semicolon; a semicolon at the end of the message is optional. The type and value are ascii character strings, separated by white space (e.g. spaces or tabs). Generally every element contains at least two items, the type name and the parameter value, but may contain several white-space separated parameter values. </paragraph>
<paragraph id="P-0144" lvl="0"><number>&lsqb;0144&rsqb;</number> The first element of every message is in a standard format. The type of the first element is the message name, the first parameter is the transaction identifier, and the second parameter is the version number (v1.0 here). </paragraph>
<paragraph id="P-0145" lvl="0"><number>&lsqb;0145&rsqb;</number> Embodiments of the present invention can use an application-layer retransmission scheme to achieve reliable transport of messages. This is done independent of any lower layer reliable transmission protocol, since the signaling system must also recover from component failures and restart transactions when a component has failed. This often happens after the component has received, acknowledged receipt, and has started working on a request; it is up to the application layer to realize that no response is coming and to re-initiate the transaction. </paragraph>
<paragraph id="P-0146" lvl="0"><number>&lsqb;0146&rsqb;</number> We therefore specify the behavior of the network elements as if the underlying transport is merely UDP/IP, and provides no buffering, flow control, nor error recovery. </paragraph>
<paragraph id="P-0147" lvl="0"><number>&lsqb;0147&rsqb;</number> All basic message exchanges are transaction-based. All start with a request message issued by a client, and sent to a server. The client must provide a unique transaction identifier for each separate request, and provide that transaction identifier in the standard place in all messages. The client must insure that the transaction identifier is not reused for any subsequent messages for a period of at least some specified interval. (approximately 30 seconds, exact value TBD). </paragraph>
<paragraph id="P-0148" lvl="0"><number>&lsqb;0148&rsqb;</number> A sample exchange begins with a client forming a request message and sending it to the server: </paragraph>
<paragraph id="P-0149" lvl="2"><number>&lsqb;0149&rsqb;</number> SETUP 1X64193 v1.0; &lt;other stuff&gt;</paragraph>
<paragraph id="P-0150" lvl="0"><number>&lsqb;0150&rsqb;</number> The message type is SETUP, the transaction identifier is 1X64193, and the message is using version 1.0. When the server has completed the work requested by this transaction, it sends one of two possible responses: </paragraph>
<paragraph id="P-0151" lvl="2"><number>&lsqb;0151&rsqb;</number> SETUPACK 1X64193 v1.0; &lt;other stuff&gt;or </paragraph>
<paragraph id="P-0152" lvl="2"><number>&lsqb;0152&rsqb;</number> SETUPNAK 1X64193 v1.0; &lt;other stuff&gt;. </paragraph>
<paragraph id="P-0153" lvl="0"><number>&lsqb;0153&rsqb;</number> The server must store all requests it receives for some period of time (30 seconds). The server must also store its responses for some period of time (30 seconds) in case they were lost in transmission and need to be resent. </paragraph>
<paragraph id="P-0154" lvl="0"><number>&lsqb;0154&rsqb;</number> If a client sends a request but does not receive a response within a reasonable time (which may vary based on message type), it resends the original request, without any modification. </paragraph>
<paragraph id="P-0155" lvl="0"><number>&lsqb;0155&rsqb;</number> If a server receives a request message that it recognizes as a duplicate (same source, same transaction identifier, same message type, not necessary to compare message content), it either resends its response, if the response has been completed, or sends a pseudo-response: </paragraph>
<paragraph id="P-0156" lvl="2"><number>&lsqb;0156&rsqb;</number> WORKING 1X64193 v1.0; </paragraph>
<paragraph id="P-0157" lvl="0"><number>&lsqb;0157&rsqb;</number> The receipt of a WORKING message at the client indicates that the server has received the message, and the response has not yet been sent. It is reasonable for the client to use a longer timer before resending the request again. </paragraph>
<paragraph id="P-0158" lvl="0"><number>&lsqb;0158&rsqb;</number> In some situations, e.g. the SETUP message, it is possible that the normal processing time may exceed the timeout period of the client. In that case the server can immediately send the WORKING pseudo-response upon receipt of a request. </paragraph>
<paragraph id="P-0159" lvl="0"><number>&lsqb;0159&rsqb;</number> Typical timeouts that seem reasonable to use are: </paragraph>
<paragraph id="P-0160" lvl="2"><number>&lsqb;0160&rsqb;</number> BTI to Edge Router: 0.5 seconds initially, 1 second after WORKING response </paragraph>
<paragraph id="P-0161" lvl="2"><number>&lsqb;0161&rsqb;</number> BTI to Gate Controller: 1 second, 2 seconds after WORKING response </paragraph>
<paragraph id="P-0162" lvl="2"><number>&lsqb;0162&rsqb;</number> Gate Controller to GC: 1 second, 2 seconds after WORKING response </paragraph>
<paragraph id="P-0163" lvl="7"><number>&lsqb;0163&rsqb;</number> 7.1 BTI to Gate Controller </paragraph>
<paragraph id="P-0164" lvl="0"><number>&lsqb;0164&rsqb;</number> The BTI initiates transactions with the Gate Controller to request a new connection to a remote named endpoint, or to request some enhanced service to be performed on an existing connection. In addition to basic connections, this protocol enables all the custom calling features to be implemented, and provides conference control capability. </paragraph>
<paragraph id="P-0165" lvl="0"><number>&lsqb;0165&rsqb;</number> This protocol is designed to utilize significant intelligence in the BTI, allowing it to completely handle the user interface and to implement new custom services that build on the primitives that exist in the signaling system of embodiments of the present invention. </paragraph>
<paragraph id="P-0166" lvl="0"><number>&lsqb;0166&rsqb;</number> Messages initiated by the BTI include SETUP, REDIRECT, SPLICE, TRACE, and PROFILE. SETUP is used to initiate a new connection. REDIRECT takes an existing connection and sends it to some other destination. SPLICE takes two existing connections and connects them together. TRACE generates a law-enforcement report of an abusive or harassing call. PROFILE enables the BTI to specify custom call handling services for times when the BTI cannot be contacted (e.g. power failure). </paragraph>
<paragraph id="P-0167" lvl="7"><number>&lsqb;0167&rsqb;</number> 7.1.1 SETUP </paragraph>
<paragraph id="P-0168" lvl="0"><number>&lsqb;0168&rsqb;</number> SETUP is the basic message sent by a BTI to initiate a connection to another endpoint; an example message is: </paragraph>
<paragraph id="P-0169" lvl="2"><number>&lsqb;0169&rsqb;</number> SETUP 0S55072 v1.0; DEST E164 8766; CALLER 8718; AUTHID 3312120; CRV 21; SIGADDR wtm-bti:7685; DATAADDR wtm-bti:7000 2 2; CODING 53B,6 ms,G.711 </paragraph>
<paragraph id="P-0170" lvl="0"><number>&lsqb;0170&rsqb;</number> DEST specifies the destination of this call. The first parameter in this field gives an address space name to search; valid address spaces are E164 (standard telephone numbers), CINFO (source string from a previous call), and SERVICE (generic network service by name). The second parameter gives the actual telephone number/source string/service name. Further parameters, if given, are passed through and given to the receiving endpoint. Examples of various usages of the DEST element are: </paragraph>
<paragraph id="P-0171" lvl="2"><number>&lsqb;0171&rsqb;</number> DEST E164 8766 places a new call to a phone number. Second parameter is the number in the customer&apos;s dialing plan (e.g. centrex, nanp, etc.) </paragraph>
<paragraph id="P-0172" lvl="2"><number>&lsqb;0172&rsqb;</number> DEST CINFO &lt;string&gt;places a return call to a previous caller, for example, *69 return call. Second parameter is the string given in a SETUP, SETUPACK, or TRANSFER. </paragraph>
<paragraph id="P-0173" lvl="2"><number>&lsqb;0173&rsqb;</number> DEST SERVICE bridge 3 places a call to a network service, in this example a bridge service for 3 parties. The second parameter is the name of the network service (e.g. bridge, announcement, etc.) and further parameters are given to that service for further interpretation. </paragraph>
<paragraph id="P-0174" lvl="0"><number>&lsqb;0174&rsqb;</number> CALLER gives the caller-id value for the line that is originating this call. The Gate Controller must verify that this caller-id is valid based on the AUTHID. Since the BTI is outside out control, we cannot be sure that the call is really coming from the line it claims; however we can ensure that the caller-id specified is one of the possible ones from this BTI. </paragraph>
<paragraph id="P-0175" lvl="0"><number>&lsqb;0175&rsqb;</number> AUTHID is the authorization code given to this particular BTI from the OAMP system. It is changed periodically, e.g. every ten minutes. </paragraph>
<paragraph id="P-0176" lvl="0"><number>&lsqb;0176&rsqb;</number> CRV is the Call Reference Value assigned for the BTI&apos;s end of this new call. The CRV appears in all messages sent to the BTI, enabling the BTI to correctly assign the message to the proper call, and to properly ignore messages that refer to previous call attempts. Note that multiple race conditions exist if a customer partially completes a call, hangs up, then places another call. The BTI needs some mechanism to ignore stale messages without the need to synchronize with all possible parties prior to processing a new customer request (e.g. give the customer another dialtone). </paragraph>
<paragraph id="P-0177" lvl="0"><number>&lsqb;0177&rsqb;</number> SIGADDR is the IP system name and port number that the called endpoint should use as a destination for all BTI-BTI messages. This may be the same address and port as is used by the Gate Controller to signal an incoming call, or it may be a separate port for the current call only. If it is the same port, then it is necessary to structure the messages such that the BTI can distinguish GC-BTI messages from BTI-BTI messages, which this v1.0 design does. </paragraph>
<paragraph id="P-0178" lvl="0"><number>&lsqb;0178&rsqb;</number> DATAADDR is the IP system name and port specification that the called endpoint should use as a destination for all voice data packets. The first parameter is a system-name:port-number, where the port number is the lowest port number in a set of consecutive ports. The second parameter gives the size of the set of consecutive ports. The third parameter, if present, gives any alignment requirements of the port numbers if it is necessary to translate them in a PAT server. A typical voice-only telephone call will use two ports, the first for RTP and the second for RTCP, and will require that the first port be even. </paragraph>
<paragraph id="P-0179" lvl="0"><number>&lsqb;0179&rsqb;</number> CODING specifies a list of possible encapsulations and coding methods that the originator will perform. Each parameter is at least three items separated by commas, where the first item specifies a message size, the second item gives the interval between packets, the third item gives the coding algorithm, and fourth and later items (optional) give additional parameters specific to the coder. </paragraph>
<paragraph id="P-0180" lvl="7"><number>&lsqb;0180&rsqb;</number> 7.1.1.1 SETUP Acknowledgment </paragraph>
<paragraph id="P-0181" lvl="0"><number>&lsqb;0181&rsqb;</number> The response to a SETUP message is SETUPACK or SETUPNAK. A sample SETUPACK message is: </paragraph>
<paragraph id="P-0182" lvl="2"><number>&lsqb;0182&rsqb;</number> SETUPACK 0S55072 v1.0; CRV 3712; </paragraph>
<paragraph id="P-0183" lvl="3"><number>&lsqb;0183&rsqb;</number> SIGADDR 10.0.0.1:5134; DATAADDR 10.0.0.1:5136 2; </paragraph>
<paragraph id="P-0184" lvl="3"><number>&lsqb;0184&rsqb;</number> CODING 53B,6 ms,G.71 1; GATEIP 135.207.31.1:7682; GATEID 17S63224; CINFO &lt;string&gt;</paragraph>
<paragraph id="P-0185" lvl="0"><number>&lsqb;0185&rsqb;</number> CRV gives the Call Reference Value assigned by the remote endpoint to identify all messages associated with the conversation. It must be included in all BTI-BTI messages. </paragraph>
<paragraph id="P-0186" lvl="0"><number>&lsqb;0186&rsqb;</number> SIGADDR gives the address and port to use as a destination for all BTI-BTI signaling messages. </paragraph>
<paragraph id="P-0187" lvl="0"><number>&lsqb;0187&rsqb;</number> DATAADDR gives the address and ports to use as a destination for all voice data packets. The second parameter gives the number of consecutive ports allocated for this purpose. </paragraph>
<paragraph id="P-0188" lvl="0"><number>&lsqb;0188&rsqb;</number> CODING gives the single encapsulation and coding method, of the choices presented in the </paragraph>
<paragraph id="P-0189" lvl="0"><number>&lsqb;0189&rsqb;</number> SETUP message, that is acceptable to the destination BTI. Format of the parameter is identical to that given above. </paragraph>
<paragraph id="P-0190" lvl="0"><number>&lsqb;0190&rsqb;</number> GATEIP gives the IP address and port number of the Edge Router that contains the gate controlling access service for this connection. This is the destination address to use for all BTI-ER messages. </paragraph>
<paragraph id="P-0191" lvl="0"><number>&lsqb;0191&rsqb;</number> GATEID gives the identification and authorization token assigned by the Edge Router for the gate allocated for this connection. </paragraph>
<paragraph id="P-0192" lvl="0"><number>&lsqb;0192&rsqb;</number> CINFO is an encrypted string of information from the Gate Controller, containing a number of items of state information needed by the Gate Controller to properly handle any future requests for advanced features for this call, e.g. 3-way calling, return call, transfer, etc. It must be stored unaltered by the BTI and returned to the Gate Controller unaltered for any of these features. </paragraph>
<paragraph id="P-0193" lvl="7"><number>&lsqb;0193&rsqb;</number> 7.1.1.2 SETUP Error </paragraph>
<paragraph id="P-0194" lvl="0"><number>&lsqb;0194&rsqb;</number> If the SETUP fails, the Gate Controller will return an error indication to the BTI. A sample SETUPNAK message is: </paragraph>
<paragraph id="P-0195" lvl="2"><number>&lsqb;0195&rsqb;</number> SETUPNAK 0S55072 v1.0; ERROR Authorization failed </paragraph>
<paragraph id="P-0196" lvl="0"><number>&lsqb;0196&rsqb;</number> ERROR gives an error message string, which could be displayed if the BTI has some method to do so. Otherwise it provides some useful debugging information. </paragraph>
<paragraph id="P-0197" lvl="0"><number>&lsqb;0197&rsqb;</number> Other elements in the SETUPNAK message are TBD. </paragraph>
<paragraph id="P-0198" lvl="7"><number>&lsqb;0198&rsqb;</number> 7.1.2 REDIRECT </paragraph>
<paragraph id="P-0199" lvl="0"><number>&lsqb;0199&rsqb;</number> The BTI sends a REDIRECT message to its Gate Controller when it wants a current call to be directed to some other destination. A sample REDIRECT message is: </paragraph>
<paragraph id="P-0200" lvl="2"><number>&lsqb;0200&rsqb;</number> REDIRECT 0S42115 v1.0; DEST E164 8720; CALLER 8766; AUTHID 6929022; </paragraph>
<paragraph id="P-0201" lvl="3"><number>&lsqb;0201&rsqb;</number> CINFO </paragraph>
<paragraph id="P-0202" lvl="3"><number>&lsqb;0202&rsqb;</number> 135.207.31.2:7650/135.207.31.1:7682/17S63224/10.0.12.221:7685/10.0.12.221:7000-2-2/9733608718/21/10.0.12.221:7685 </paragraph>
<paragraph id="P-0203" lvl="0"><number>&lsqb;0203&rsqb;</number> DEST gives the new desired destination of this call. It may be either an E164 number, a service name, or a CINFO string, just as in the SETUP message. </paragraph>
<paragraph id="P-0204" lvl="0"><number>&lsqb;0204&rsqb;</number> CALLER gives the caller-id value for the line that is making the request. The Gate Controller must verify that this caller-id is valid based on the AUTHID. Since the BTI is outside our control, we cannot be sure that the call is really coming from the line it claims; however we can ensure that the caller-id specified is one of the possible ones from this BTI. </paragraph>
<paragraph id="P-0205" lvl="0"><number>&lsqb;0205&rsqb;</number> AUTHID is the authorization code given to this particular BTI from the OAMP system. It is changed periodically, e.g. every ten minutes. </paragraph>
<paragraph id="P-0206" lvl="0"><number>&lsqb;0206&rsqb;</number> CINFO is the encrypted string previously supplied by the Gate Controller, which tells the Gate Controller various pieces of information about the current call. </paragraph>
<paragraph id="P-0207" lvl="7"><number>&lsqb;0207&rsqb;</number> 7.1.2.1 REDIRECT Acknowledgment </paragraph>
<paragraph id="P-0208" lvl="0"><number>&lsqb;0208&rsqb;</number> If the Gate Controller is successful in directing the call to the new destination, it will respond with a REDIRECTACK message. A sample is: </paragraph>
<paragraph id="P-0209" lvl="2"><number>&lsqb;0209&rsqb;</number> REDIRECTACK 0S42115 v1.0; </paragraph>
<paragraph id="P-0210" lvl="7"><number>&lsqb;0210&rsqb;</number> 7.1.2.2 REDIRECT Error </paragraph>
<paragraph id="P-0211" lvl="0"><number>&lsqb;0211&rsqb;</number> If the REDIRECT fails, the Gate Controller will return an error indication to the BTI. A sample REDIRECTNAK message is: </paragraph>
<paragraph id="P-0212" lvl="2"><number>&lsqb;0212&rsqb;</number> REDIRECTNAK 0S55072 v1.0; ERROR Authorization failed </paragraph>
<paragraph id="P-0213" lvl="0"><number>&lsqb;0213&rsqb;</number> ERROR gives an error message string, which could be displayed if the BTI has some method to do so. Otherwise it provides some useful debugging information. </paragraph>
<paragraph id="P-0214" lvl="0"><number>&lsqb;0214&rsqb;</number> Other elements in the REDIRECTNAK message are TBD. </paragraph>
<paragraph id="P-0215" lvl="7"><number>&lsqb;0215&rsqb;</number> 7.1.3 SPLICE </paragraph>
<paragraph id="P-0216" lvl="0"><number>&lsqb;0216&rsqb;</number> The BTI sends a SPLICE message to its Gate Controller when it wants two current calls to be connected together. A sample SPLICE message is: </paragraph>
<paragraph id="P-0217" lvl="2"><number>&lsqb;0217&rsqb;</number> SPLICE 0S42161 v1.0; CALLER 8766; AUTHID 6929022; </paragraph>
<paragraph id="P-0218" lvl="3"><number>&lsqb;0218&rsqb;</number> CINFO1 </paragraph>
<paragraph id="P-0219" lvl="3"><number>&lsqb;0219&rsqb;</number> 135.207.31.2:7650/135.207.31.1:7682/17S63224/10.0.12.221:7685/10.0.12.221:7000-2-2/9733608718/21/10.0.12.221:7685; </paragraph>
<paragraph id="P-0220" lvl="3"><number>&lsqb;0220&rsqb;</number> CINF02 </paragraph>
<paragraph id="P-0221" lvl="3"><number>&lsqb;0221&rsqb;</number> 135.207.31.2:7650/135.207.22.1:7682/5S71731/10.3.7.150:7685/10.3.7.150:7000-2-2/9733608720/8839/10.3.7.150:7685 </paragraph>
<paragraph id="P-0222" lvl="0"><number>&lsqb;0222&rsqb;</number> CALLER gives the caller-id value for the line that is making the request. The Gate Controller must verify that this caller-id is valid based on the AUTHID. Since the BTI is outside our control, we cannot be sure that the call is really coming from the line it claims; however we can ensure that the caller-id specified is one of the possible ones from this BTI. </paragraph>
<paragraph id="P-0223" lvl="0"><number>&lsqb;0223&rsqb;</number> AUTHID is the authorization code given to this particular BTI from the OAMP system. It is changed periodically, e.g. every ten minutes. </paragraph>
<paragraph id="P-0224" lvl="0"><number>&lsqb;0224&rsqb;</number> CINFO1 is the encrypted string previously supplied by the Gate Controller, which tells the Gate Controller various pieces of information about the first call. </paragraph>
<paragraph id="P-0225" lvl="0"><number>&lsqb;0225&rsqb;</number> CINFO2 is the encrypted string previously supplied by the Gate Controller, which tells the Gate Controller various pieces of information about the second call. </paragraph>
<paragraph id="P-0226" lvl="7"><number>&lsqb;0226&rsqb;</number> 7.1.3.1 SPLICE Acknowledgment </paragraph>
<paragraph id="P-0227" lvl="0"><number>&lsqb;0227&rsqb;</number> If the Gate Controller is successful in directing the two calls to each other, it will respond with a SPLICEACK message. A sample is: </paragraph>
<paragraph id="P-0228" lvl="2"><number>&lsqb;0228&rsqb;</number> SPLICEACK 0S42161 v1.0; </paragraph>
<paragraph id="P-0229" lvl="7"><number>&lsqb;0229&rsqb;</number> <highlight><bold>7</bold></highlight>.<highlight><bold>1</bold></highlight>.<highlight><bold>3</bold></highlight>.<highlight><bold>2</bold></highlight> SPLICE Error </paragraph>
<paragraph id="P-0230" lvl="0"><number>&lsqb;0230&rsqb;</number> If the SPLICE fails, the Gate Controller will return an error indication to the BTI. A sample SPLICENAK message is: </paragraph>
<paragraph id="P-0231" lvl="2"><number>&lsqb;0231&rsqb;</number> SPLICENAK 0S55072 v1.0; ERROR Authorization failed </paragraph>
<paragraph id="P-0232" lvl="0"><number>&lsqb;0232&rsqb;</number> ERROR gives an error message string, which could be displayed if the BTI has some method to do so. Otherwise it provides some useful debugging information. </paragraph>
<paragraph id="P-0233" lvl="0"><number>&lsqb;0233&rsqb;</number> Other elements in the SPLICENAK message are TBD. </paragraph>
<paragraph id="P-0234" lvl="7"><number>&lsqb;0234&rsqb;</number> 7.1.4 TRACE </paragraph>
<paragraph id="P-0235" lvl="0"><number>&lsqb;0235&rsqb;</number> The BTI sends a TRACE message to its Gate Controller when it to report an abusive or harassing phone call to law enforcement. A sample TRACE message is: </paragraph>
<paragraph id="P-0236" lvl="2"><number>&lsqb;0236&rsqb;</number> TRACE 0S42115 v1.0; CALLER 8766; AUTHID 6929022; </paragraph>
<paragraph id="P-0237" lvl="3"><number>&lsqb;0237&rsqb;</number> CINFO </paragraph>
<paragraph id="P-0238" lvl="3"><number>&lsqb;0238&rsqb;</number> 135.207.31.2:7650/135.207.31.1:7682/17S63224/10.0.12.221:7685/10.0.12.221:7000-2-2/9733608718/21/10.0.12.221:7685 </paragraph>
<paragraph id="P-0239" lvl="0"><number>&lsqb;0239&rsqb;</number> CALLER gives the caller-id value for the line that is making the request. The Gate Controller must verify that this caller-id is valid based on the AUTHID. Since the BTI is outside our control, we cannot be sure that the call is really coming from the line it claims; however we can ensure that the caller-id specified is one of the possible ones from this BTI. </paragraph>
<paragraph id="P-0240" lvl="0"><number>&lsqb;0240&rsqb;</number> AUTHID is the authorization code given to this particular BTI from the OAMP system. It is changed periodically, e.g. every ten minutes. </paragraph>
<paragraph id="P-0241" lvl="0"><number>&lsqb;0241&rsqb;</number> CINFO is the encrypted string previously supplied by the Gate Controller, which tells the Gate Controller various pieces of information about the call. </paragraph>
<paragraph id="P-0242" lvl="7"><number>&lsqb;0242&rsqb;</number> 7.1.4.1 TRACE Acknowledgment </paragraph>
<paragraph id="P-0243" lvl="0"><number>&lsqb;0243&rsqb;</number> If the information in the TRACE message is valid, the Gate Controller will respond with a TRACEACK message. A sample message is: </paragraph>
<paragraph id="P-0244" lvl="2"><number>&lsqb;0244&rsqb;</number> TRACEACK 0S42115 v1.0; </paragraph>
<paragraph id="P-0245" lvl="7"><number>&lsqb;0245&rsqb;</number> 7.1.4.2 TRACE Error </paragraph>
<paragraph id="P-0246" lvl="0"><number>&lsqb;0246&rsqb;</number> If the TRACE fails, the Gate Controller will return an error indication to the BTI. A sample TRACENAK message is: </paragraph>
<paragraph id="P-0247" lvl="2"><number>&lsqb;0247&rsqb;</number> TRACENAK 0S55072 v1.0; ERROR Authorization failed </paragraph>
<paragraph id="P-0248" lvl="0"><number>&lsqb;0248&rsqb;</number> ERROR gives an error message string, which could be displayed if the BTI has some method to do so. Otherwise it provides some useful debugging information. </paragraph>
<paragraph id="P-0249" lvl="0"><number>&lsqb;0249&rsqb;</number> Other elements in the TRACENAK message are TBD. </paragraph>
<paragraph id="P-0250" lvl="7"><number>&lsqb;0250&rsqb;</number> 7.1.5 PROFILE </paragraph>
<paragraph id="P-0251" lvl="0"><number>&lsqb;0251&rsqb;</number> To be provided. </paragraph>
<paragraph id="P-0252" lvl="7"><number>&lsqb;0252&rsqb;</number> 7.1.5.1 PROFILE Acknowledgment </paragraph>
<paragraph id="P-0253" lvl="0"><number>&lsqb;0253&rsqb;</number> To be provided. </paragraph>
<paragraph id="P-0254" lvl="7"><number>&lsqb;0254&rsqb;</number> 7.1.5.2 PROFILE Error </paragraph>
<paragraph id="P-0255" lvl="0"><number>&lsqb;0255&rsqb;</number> If the PROFILE fails, the Gate Controller will return an error indication to the BTI. A sample PROFILENAK message is: </paragraph>
<paragraph id="P-0256" lvl="2"><number>&lsqb;0256&rsqb;</number> PROFILENAK 0S55072 v1.0; ERROR Authorization failed </paragraph>
<paragraph id="P-0257" lvl="0"><number>&lsqb;0257&rsqb;</number> ERROR gives an error message string, which could be displayed if the BTI has some method to do so. Otherwise it provides some useful debugging information. </paragraph>
<paragraph id="P-0258" lvl="0"><number>&lsqb;0258&rsqb;</number> Other elements in the PROFILENAK message are TBD. </paragraph>
<paragraph id="P-0259" lvl="7"><number>&lsqb;0259&rsqb;</number> 7.2 Gate Controller to BTI </paragraph>
<paragraph id="P-0260" lvl="0"><number>&lsqb;0260&rsqb;</number> The Gate Controller initiates messages to the BTI to inform it of incoming calls, or to inform it of a change in the status of an existing call. </paragraph>
<paragraph id="P-0261" lvl="0"><number>&lsqb;0261&rsqb;</number> Messages initiated by the Gate Controller include SETUP, TRANSFER, and CALLHOLD. SETUP is used to inform the BTI of an incoming call, and to ask the BTI the proper handling of this new call request. TRANSFER informs the BTI that a current call has been redirected to a new destination. CALLHOLD informs the BTI that the call has been placed on hold and to temporarily release the resources used by this call. </paragraph>
<paragraph id="P-0262" lvl="7"><number>&lsqb;0262&rsqb;</number> 7.2.1 SETUP </paragraph>
<paragraph id="P-0263" lvl="0"><number>&lsqb;0263&rsqb;</number> The Gate Controller informs a BTI of an incoming call request with a SETUP message. A sample message is: </paragraph>
<paragraph id="P-0264" lvl="2"><number>&lsqb;0264&rsqb;</number> SETUP 4T93182 v1.0; DEST 9733608766; CALLER 9733608718; CRV 21; SIGADDR 10.0.0.1:4722; DATAADDR 10.0.0.1:4724 2 2; CODING 53B,6 ms,G.7 11; GATEIP 135.207.22.1:7682; GATEID 21S11018; CINFO &lt;string&gt;</paragraph>
<paragraph id="P-0265" lvl="0"><number>&lsqb;0265&rsqb;</number> DEST is the destination E1 64 address, as given by the originator and expanded to a global addressing plan by the Gate Controller. </paragraph>
<paragraph id="P-0266" lvl="0"><number>&lsqb;0266&rsqb;</number> CALLER (optional) is the caller-id information. This element is only present if the customer has subscribed to some variant of caller-id service. If the customer has subscribed to calling name service as well, the second parameter will contain the name of the caller. If the originator of the call has specified caller-id blocking, the first parameter will contain &ldquo;anonymous.&rdquo;</paragraph>
<paragraph id="P-0267" lvl="0"><number>&lsqb;0267&rsqb;</number> CRV is the Call Reference Value assigned by the destination for this call. It must be included in all BTI-BTI messages to properly identify the call. </paragraph>
<paragraph id="P-0268" lvl="0"><number>&lsqb;0268&rsqb;</number> SIGADDR gives the address and port number for the destination of all BTI-BTI signaling messages. </paragraph>
<paragraph id="P-0269" lvl="0"><number>&lsqb;0269&rsqb;</number> DATAADDR gives the address and port number for the destination of voice data packets. The second parameter (optional) gives the number of consecutive ports allocated. The third parameter (optional) gives the alignment information for the port numbers. </paragraph>
<paragraph id="P-0270" lvl="0"><number>&lsqb;0270&rsqb;</number> CODING specifies a list of possible encapsulations and coding methods that the originator will perform. Each parameter is at least three items separated by commas, where the first item specifies a message size, the second item gives the interval between packets, the third item gives the coding algorithm, and fourth and later items (optional) give additional parameters specific to the coder. </paragraph>
<paragraph id="P-0271" lvl="0"><number>&lsqb;0271&rsqb;</number> GATEIP gives the IP address and port number of the Edge Router that contains the gate controlling access service for this connection. This is the destination address to use for all BTI-ER messages. </paragraph>
<paragraph id="P-0272" lvl="0"><number>&lsqb;0272&rsqb;</number> GATEID gives the identification and authorization token assigned by the Edge Router for the gate allocated for this connection. </paragraph>
<paragraph id="P-0273" lvl="0"><number>&lsqb;0273&rsqb;</number> CINFO is an encrypted string containing internal state information of the Gate Controller, which is to be stored in the BTI and returned with any future enhanced service request related to this call, e.g. 3-way calling, call transfer, etc. </paragraph>
<paragraph id="P-0274" lvl="7"><number>&lsqb;0274&rsqb;</number> 7.2.1.1 SETUP Acknowledgment </paragraph>
<paragraph id="P-0275" lvl="0"><number>&lsqb;0275&rsqb;</number> If the BTI is willing to accept the incoming call specified in the SETUP message, it responds with SETUPACK. A sample SETUPACK message is: </paragraph>
<paragraph id="P-0276" lvl="2"><number>&lsqb;0276&rsqb;</number> SETUPACK 4T93182 v1.0; CRV 2712; SIGADDR kkrama-bti:7685; DATAADDR kkrama-bti:7000 2 2; CODING 53B,6 ms,G.711 </paragraph>
<paragraph id="P-0277" lvl="2"><number>&lsqb;0277&rsqb;</number> CRV is the Call Reference Value assigned by the BTI for this call. It is the value that will appear in all BTI-BTI messages to identify the specific call instance. </paragraph>
<paragraph id="P-0278" lvl="2"><number>&lsqb;0278&rsqb;</number> SIGADDR is the address and port number where the BTI will listen for BTI-BTI signaling messages. </paragraph>
<paragraph id="P-0279" lvl="2"><number>&lsqb;0279&rsqb;</number> DATAADDR is the address and port numbers where the BTI will accept voice data packets. The second parameter indicates the number of consecutive ports, and the third parameter gives the alignment necessary if the part numbers are translated by a PAT server. </paragraph>
<paragraph id="P-0280" lvl="2"><number>&lsqb;0280&rsqb;</number> CODING is the encapsulation style and coding method chosen from those offered. </paragraph>
<paragraph id="P-0281" lvl="7"><number>&lsqb;0281&rsqb;</number> 7.2.1.2 SETUP Error </paragraph>
<paragraph id="P-0282" lvl="0"><number>&lsqb;0282&rsqb;</number> If the BTI is not willing to accept the incoming call, it responds with SETUPNAK. A sample SETUPNAK message is: </paragraph>
<paragraph id="P-0283" lvl="2"><number>&lsqb;0283&rsqb;</number> SETUPNAK 4T93182 v1.0; ERROR Busy; FORWARD E164 8800 </paragraph>
<paragraph id="P-0284" lvl="0"><number>&lsqb;0284&rsqb;</number> ERROR gives an error message string, which could be displayed if the Gate Controller has some method to do so, and can be passed back to the originating BTI in a SETUPNAK message. </paragraph>
<paragraph id="P-0285" lvl="0"><number>&lsqb;0285&rsqb;</number> FORWARD gives the new destination that the call should be directed to, as a result of the call forwarding algorithm implemented within the BTI. The structure of this element is identical to that of the DEST element of the BTI-GC SETUP message. </paragraph>
<paragraph id="P-0286" lvl="0"><number>&lsqb;0286&rsqb;</number> Other elements in the message are TBD. </paragraph>
<paragraph id="P-0287" lvl="7"><number>&lsqb;0287&rsqb;</number> 7.2.2 TRANSFER </paragraph>
<paragraph id="P-0288" lvl="0"><number>&lsqb;0288&rsqb;</number> The TRANSFER messages is used by the Gate Controller to inform the BTI of a change in destination of an existing call. The BTI must alter some destination parameters to communicate with this new destination. A sample TRANSFER message is: </paragraph>
<paragraph id="P-0289" lvl="2"><number>&lsqb;0289&rsqb;</number> TRANSFER OT5087 v1.0; CRV 21; REMCRV 1025; SIGADDR 135.207.31.3:6026; DATAADDR 135.207.31.3:6028 2; CODING 53B,6 ms,G.711; ROLE orig; </paragraph>
<paragraph id="P-0290" lvl="3"><number>&lsqb;0290&rsqb;</number> CINFO &lt;string&gt;</paragraph>
<paragraph id="P-0291" lvl="0"><number>&lsqb;0291&rsqb;</number> CRV gives the Call Reference Value of the call that has been transferred. This parameter is intended to help the BTI determine the proper adjustments. </paragraph>
<paragraph id="P-0292" lvl="0"><number>&lsqb;0292&rsqb;</number> REMCRV is the Call Reference Value assigned by the party at the other end of the call. This value must be used in all BTI-BTI communication. </paragraph>
<paragraph id="P-0293" lvl="0"><number>&lsqb;0293&rsqb;</number> SIGADDR is the IP address and port for BTI-BTI signaling messages to the other endpoint. </paragraph>
<paragraph id="P-0294" lvl="0"><number>&lsqb;0294&rsqb;</number> DATAADDR is the IP address and UDP port specification for voice data packets. The second parameter, if present, gives the number of consecutive port numbers assigned for this connection. The third parameter, if present, tells any alignment necessary for the port numbers. </paragraph>
<paragraph id="P-0295" lvl="0"><number>&lsqb;0295&rsqb;</number> CODING tells the encapsulation scheme and coding method to use for this connection. </paragraph>
<paragraph id="P-0296" lvl="0"><number>&lsqb;0296&rsqb;</number> ROLE tells whether the BTI should consider itself the originator or terminator of this conversation. </paragraph>
<paragraph id="P-0297" lvl="0"><number>&lsqb;0297&rsqb;</number> CINFO is an encrypted string of information about the other end of the conversation, to be stored in the BTI, for use for future enhanced services that may be requested. </paragraph>
<paragraph id="P-0298" lvl="7"><number>&lsqb;0298&rsqb;</number> 7.2.2.1 TRANSFER Acknowledgment </paragraph>
<paragraph id="P-0299" lvl="0"><number>&lsqb;0299&rsqb;</number> If the BTI is able to identify the call given in the TRANSFER message, adjust its internal state, and allocate resources to the new destination, it responds with TRANSFERACK. A sample TRANSFERACK message is: </paragraph>
<paragraph id="P-0300" lvl="2"><number>&lsqb;0300&rsqb;</number> TRANSFERACK 0T5087 v1.0; </paragraph>
<paragraph id="P-0301" lvl="7"><number>&lsqb;0301&rsqb;</number> 7.2.2.2 TRANSFER Error </paragraph>
<paragraph id="P-0302" lvl="0"><number>&lsqb;0302&rsqb;</number> If the BTI is not willing to accept the transferred call, it responds with TRANSFERNAK. A sample TRANSFERNAK message is: </paragraph>
<paragraph id="P-0303" lvl="2"><number>&lsqb;0303&rsqb;</number> TRANSFERNAK 0T5087 v1.0; ERROR Resource reservation to new destination failed </paragraph>
<paragraph id="P-0304" lvl="0"><number>&lsqb;0304&rsqb;</number> ERROR gives an error message string, which could be displayed if the Gate Controller has some method to do so, and can be passed back to the originating system in a NAK message. </paragraph>
<paragraph id="P-0305" lvl="0"><number>&lsqb;0305&rsqb;</number> Other elements in the message are TBD. </paragraph>
<paragraph id="P-0306" lvl="7"><number>&lsqb;0306&rsqb;</number> 7.2.3 CALLHOLD </paragraph>
<paragraph id="P-0307" lvl="0"><number>&lsqb;0307&rsqb;</number> The BTI must be placed on hold while gate adjustments are performed. In most cases this is handled by the BTI-BTI HOLD message. In some situations, it must be done by the Gate Controller, and is performed by issuing the CALLHOLD message. A sample CALLHOLD message is: </paragraph>
<paragraph id="P-0308" lvl="2"><number>&lsqb;0308&rsqb;</number> CALLHOLD 2T10477 v1.0; CRV 21 </paragraph>
<paragraph id="P-0309" lvl="0"><number>&lsqb;0309&rsqb;</number> CRV is the Call Reference Value assigned by the BTI for this conversation. </paragraph>
<paragraph id="P-0310" lvl="7"><number>&lsqb;0310&rsqb;</number> 7.2.3.1 CALLHOLD Acknowledgment </paragraph>
<paragraph id="P-0311" lvl="0"><number>&lsqb;0311&rsqb;</number> After the BTI has placed itself in a hold status, it responds with CALLHOLDACK. A sample CALLHOLDACK message is: </paragraph>
<paragraph id="P-0312" lvl="2"><number>&lsqb;0312&rsqb;</number> CALLHOLDACK 2T10477 v1.0; </paragraph>
<paragraph id="P-0313" lvl="7"><number>&lsqb;0313&rsqb;</number> 7.2.3.2 CALLHOLD Error </paragraph>
<paragraph id="P-0314" lvl="0"><number>&lsqb;0314&rsqb;</number> If the BTI is not able to process the HOLD request, it responds with CALLHOLDNAK. A sample CALLHOLDNAK message is: </paragraph>
<paragraph id="P-0315" lvl="2"><number>&lsqb;0315&rsqb;</number> CALLHOLDNAK 2T10477 v1.0; ERROR Illegal Call Reference Value ERROR gives an error message string, which could be displayed if the Gate Controller has some method to do so, and can be passed back to the originating system in a NAK message. </paragraph>
<paragraph id="P-0316" lvl="7"><number>&lsqb;0316&rsqb;</number> 7.3 BTI to Edge Router </paragraph>
<paragraph id="P-0317" lvl="0"><number>&lsqb;0317&rsqb;</number> Resource allocation messages are exchanged between the BTI and the Edge Router for reservation and release of network resources. These messages all have a reference to a &ldquo;Gate,&rdquo; which must have been initialized by a Gate Controller prior to the BTI&apos;s resource reservation request. </paragraph>
<paragraph id="P-0318" lvl="0"><number>&lsqb;0318&rsqb;</number> Messages initiated by the BTI include RESERVE, COMMIT, RERESERVE, RECOMMIT, RELEASE, HOLD, and KEEPALIVE. RESERVE is the normal first step in the reservation protocol, where it requests an allocation of resources but does not require them to be assigned. COMMIT requests the actual assignment of resources to this conversation. RERESERVE is used in cases where the BTI already has some resources either reserved or committed to it and is willing to use them to satisfy this new request. RECOMMIT serves a similar function when the resources are to be committed to this new connection. RELEASE is the indication from the BTI that a connection should be terminated. HOLD indicates to the Edge Router that the voice data stream is temporarily stopping, and to stop monitoring the data stream, but to maintain the resources as reserved. KEEPALIVE is sent periodically (interval TBD) in the held state to the Edge Router to maintain the resource reservation; a lack of keepalives indicates a (probably undesirable) call termination. </paragraph>
<paragraph id="P-0319" lvl="7"><number>&lsqb;0319&rsqb;</number> 7.3.1 RESERVE </paragraph>
<paragraph id="P-0320" lvl="0"><number>&lsqb;0320&rsqb;</number> The RESERVE message is sent by the BTI in the first stage of resource allocation. A sample RESERVE message is: </paragraph>
<paragraph id="P-0321" lvl="2"><number>&lsqb;0321&rsqb;</number> RESERVE 0S55073 v1.0; GATEID 17S63224; BANDWIDTH 53B,6 ms </paragraph>
<paragraph id="P-0322" lvl="0"><number>&lsqb;0322&rsqb;</number> GATEID is the identification of the gate, as assigned by the Edge Router. Included in this string is the security authorization that indicates the sender is allowed to perform operations on this gate. </paragraph>
<paragraph id="P-0323" lvl="0"><number>&lsqb;0323&rsqb;</number> BANDWIDTH is the specification of the actual bandwidth desired at this time. It is specified as packet size, in bytes, and inter-packet interval. The details of the algorithm for comparing this to the specification given by the Gate Controller in the GATESETUP message is TBD. </paragraph>
<paragraph id="P-0324" lvl="7"><number>&lsqb;0324&rsqb;</number> 7.3.1.1 RESERVE Acknowledgment </paragraph>
<paragraph id="P-0325" lvl="0"><number>&lsqb;0325&rsqb;</number> If the resource reservation is successful, meaning bandwidth is available both upstream and downstream in the access network, and bandwidth is available in the forward direction in the backbone network, the Edge Router responds with a RESERVACK message. A sample message is: </paragraph>
<paragraph id="P-0326" lvl="2"><number>&lsqb;0326&rsqb;</number> RESERVEACK 0S55073 v1.0; </paragraph>
<paragraph id="P-0327" lvl="7"><number>&lsqb;0327&rsqb;</number> 7.3.1.2 RESERVE Error </paragraph>
<paragraph id="P-0328" lvl="0"><number>&lsqb;0328&rsqb;</number> If the resource reservation fails, the Edge Router responds with a RESERVENAK message. A sample message is: </paragraph>
<paragraph id="P-0329" lvl="2"><number>&lsqb;0329&rsqb;</number> RESERVENAK 0S55073 v1.0; ERROR No upstream capacity available ERROR gives an error message string, which could be displayed if the BTI has some method to do so, or can simply result in a fast busy signal. </paragraph>
<paragraph id="P-0330" lvl="0"><number>&lsqb;0330&rsqb;</number> Other elements in the message are TBD. </paragraph>
<paragraph id="P-0331" lvl="7"><number>&lsqb;0331&rsqb;</number> 7.3.2 COMMIT </paragraph>
<paragraph id="P-0332" lvl="0"><number>&lsqb;0332&rsqb;</number> The COMMIT message is sent by the BTI in the second stage of resource allocation. On receipt of a COMMIT message, the Edge Router resets the gate timer to a smaller interval (approximately 2 seconds, exact value TBD). If that timer expires before the COMMITACK is sent, the gate is terminated. A sample COMMIT message is: </paragraph>
<paragraph id="P-0333" lvl="2"><number>&lsqb;0333&rsqb;</number> COMMIT 0S55074 v1.0; GATEID 17S63224; BANDWIDTH 53B,6 ms </paragraph>
<paragraph id="P-0334" lvl="0"><number>&lsqb;0334&rsqb;</number> GATEID is the identification of the gate, as assigned by the Edge Router. Included in this string is the security authorization that indicates the sender is allowed to perform operations on this gate. </paragraph>
<paragraph id="P-0335" lvl="0"><number>&lsqb;0335&rsqb;</number> BANDWIDTH is the specification of the actual bandwidth desired at this time. It is specified as packet size, in bytes, and inter-packet interval. The details of the algorithm for comparing this to the specification given by the Gate Controller in the GATESETUP message is TBD. The value given in the COMMIT can be no greater than that from the RESERVE message; again the comparison method is TBD. </paragraph>
<paragraph id="P-0336" lvl="7"><number>&lsqb;0336&rsqb;</number> 7.3.2.1 COMMIT Acknowledgment </paragraph>
<paragraph id="P-0337" lvl="0"><number>&lsqb;0337&rsqb;</number> If the resource allocation is successful, meaning bandwidth has been allocated in the access network (e.g. via unsolicited grants), and the Edge Router has successfully coordinated with its remote Edge Router at the other end of the call, the Edge Router responds with a COMMITACK message. A sample message is: </paragraph>
<paragraph id="P-0338" lvl="2"><number>&lsqb;0338&rsqb;</number> COMMITACK 0S55074 v1.0; </paragraph>
<paragraph id="P-0339" lvl="7"><number>&lsqb;0339&rsqb;</number> 7.3.2.2 COMMIT Error </paragraph>
<paragraph id="P-0340" lvl="0"><number>&lsqb;0340&rsqb;</number> If the resource allocation fails, or the coordination with the remote gate does not complete within the allotted interval, the Edge Router responds with a COMMITNAK message. It is intended that this be a very infrequent event, since it results in the caller hearing first a ringback tone, then turning into a failure tone. Such call defects are limited by the service description to only a few per million completed calls, although deliberate cases of fraud causing this error are not counted. A sample message is: </paragraph>
<paragraph id="P-0341" lvl="2"><number>&lsqb;0341&rsqb;</number> COMMITNAK 0S55074 v1.0; ERROR Gate coordination failure </paragraph>
<paragraph id="P-0342" lvl="0"><number>&lsqb;0342&rsqb;</number> ERROR gives an error message string, which could be displayed if the BTI has some method to do so, or can simply result in a fast busy signal. </paragraph>
<paragraph id="P-0343" lvl="0"><number>&lsqb;0343&rsqb;</number> Other elements in the message are TBD. </paragraph>
<paragraph id="P-0344" lvl="7"><number>&lsqb;0344&rsqb;</number> 7.3.3 RERESERVE </paragraph>
<paragraph id="P-0345" lvl="0"><number>&lsqb;0345&rsqb;</number> The RERESERVE message is sent by the BTI in the first stage of resource allocation when the BTI has a current allocation that the new connection will be re-using. See Section xx.xx for information about the two stage resource allocation scheme. A sample RERESERVE message is: </paragraph>
<paragraph id="P-0346" lvl="2"><number>&lsqb;0346&rsqb;</number> RERESERVE 0S42110 v1.0; GATEID 5S71731; PREVGATEID 21S11018; BANDWIDTH 53B,6 ms </paragraph>
<paragraph id="P-0347" lvl="0"><number>&lsqb;0347&rsqb;</number> GATEID is the identification of the gate, as assigned by the Edge Router. Included in this string is the security authorization that indicates the sender is allowed to perform operations on this gate. </paragraph>
<paragraph id="P-0348" lvl="0"><number>&lsqb;0348&rsqb;</number> PREVGATEID is the identification of an existing, committed gate, whose resources will be re-used in the current connection. </paragraph>
<paragraph id="P-0349" lvl="0"><number>&lsqb;0349&rsqb;</number> BANDWIDTH is the specification of the actual bandwidth desired at this time. It is specified as packet size, in bytes, and inter-packet interval. The details of the algorithm for comparing this to the specification given by the Gate Controller in the GATESETUP message is TBD. </paragraph>
<paragraph id="P-0350" lvl="7"><number>&lsqb;0350&rsqb;</number> 7.3.3.1 RERESERVE Acknowledgment </paragraph>
<paragraph id="P-0351" lvl="0"><number>&lsqb;0351&rsqb;</number> If the resource re-reservation is successful, meaning bandwidth is available both upstream and downstream in the access network, and bandwidth is available in the forward direction in the backbone network, the Edge Router responds with a RERESERVACK message. A sample message is: </paragraph>
<paragraph id="P-0352" lvl="2"><number>&lsqb;0352&rsqb;</number> RESERVEACK 0S42110 v1.0; </paragraph>
<paragraph id="P-0353" lvl="7"><number>&lsqb;0353&rsqb;</number> 7.3.3.2 RERESERVE Error </paragraph>
<paragraph id="P-0354" lvl="0"><number>&lsqb;0354&rsqb;</number> If the resource re-reservation fails, the Edge Router responds with a RERESERVENAK message. A sample message is: </paragraph>
<paragraph id="P-0355" lvl="2"><number>&lsqb;0355&rsqb;</number> RERESERVENAK 0S42110 v1.0; ERROR Illegal previous gate identifier </paragraph>
<paragraph id="P-0356" lvl="0"><number>&lsqb;0356&rsqb;</number> ERROR gives an error message string, which could be displayed if the BTI has some method to do so, or can simply result in a fast busy signal. </paragraph>
<paragraph id="P-0357" lvl="0"><number>&lsqb;0357&rsqb;</number> Other elements in the message are TBD. </paragraph>
<paragraph id="P-0358" lvl="7"><number>&lsqb;0358&rsqb;</number> 7.3.4 RECOMMIT </paragraph>
<paragraph id="P-0359" lvl="0"><number>&lsqb;0359&rsqb;</number> The RECOMMIT message is sent by the BTI in the second stage of resource allocation when a previous allocation is to be re-used. See Section xx.xx for information about the two stage resource allocation scheme. On receipt of a RECOMMIT message, the Edge Router resets the gate timer to a smaller interval (approximately 2 seconds, exact value TBD). If that timer expires before the RECOMMITACK is sent, the gate is terminated. A sample RECOMMIT message is: </paragraph>
<paragraph id="P-0360" lvl="2"><number>&lsqb;0360&rsqb;</number> RECOMMIT 0S42111 v1.0; GATEID 5S71731; PREVGATEID 21S11018; BANDWIDTH 53B,6 ms </paragraph>
<paragraph id="P-0361" lvl="0"><number>&lsqb;0361&rsqb;</number> GATEID is the identification of the gate, as assigned by the Edge Router. Included in this string is the security authorization that indicates the sender is allowed to perform operations on this gate. </paragraph>
<paragraph id="P-0362" lvl="0"><number>&lsqb;0362&rsqb;</number> PREVGATEID is the identification of an existing, committed gate, whose resources may be re-used in the current connection. </paragraph>
<paragraph id="P-0363" lvl="0"><number>&lsqb;0363&rsqb;</number> BANDWIDTH is the specification of the actual bandwidth desired at this time. It is specified as packet size, in bytes, and inter-packet interval. The details of the algorithm for comparing this to the specification given by the Gate Controller in the GATESETUP message is TBD. The value given in the COMMIT can be no greater than that from the RESERVE message; again the comparison method is TBD. </paragraph>
<paragraph id="P-0364" lvl="7"><number>&lsqb;0364&rsqb;</number> 7.3.4.1 RECOMMIT Acknowledgment </paragraph>
<paragraph id="P-0365" lvl="0"><number>&lsqb;0365&rsqb;</number> If the resource allocation is successful, meaning bandwidth has been allocated in the access network (e.g. via unsolicited grants), and the Edge Router has successfully coordinated with its remote Edge Router at the other end of the call, the Edge Router responds with a RECOMMITACK message. A sample message is: </paragraph>
<paragraph id="P-0366" lvl="2"><number>&lsqb;0366&rsqb;</number> RECOMMITACK 0S42111 v1.0; </paragraph>
<paragraph id="P-0367" lvl="7"><number>&lsqb;0367&rsqb;</number> 7.3.4.2 RECOMMIT Error </paragraph>
<paragraph id="P-0368" lvl="0"><number>&lsqb;0368&rsqb;</number> If the resource allocation fails, or the coordination with the remote gate does not complete within the allotted interval, the Edge Router responds with a RECOMMITNAK message. It is intended that this be a very infrequent event, since it results in the caller hearing first a ringback tone, then turning into a failure tone. Such call defects are limited by the service description to only a few per million completed calls, although deliberate cases of fraud causing this error are not counted. A sample message is: </paragraph>
<paragraph id="P-0369" lvl="2"><number>&lsqb;0369&rsqb;</number> RECOMMITNAK 0S42111 v1.0; ERROR Gate coordination failure </paragraph>
<paragraph id="P-0370" lvl="0"><number>&lsqb;0370&rsqb;</number> ERROR gives an error message string, which could be displayed if the BTI has some method to do so, or can simply result in a fast busy signal. </paragraph>
<paragraph id="P-0371" lvl="0"><number>&lsqb;0371&rsqb;</number> Other elements in the message are TBD. </paragraph>
<paragraph id="P-0372" lvl="7"><number>&lsqb;0372&rsqb;</number> 7.3.5 RELEASE </paragraph>
<paragraph id="P-0373" lvl="0"><number>&lsqb;0373&rsqb;</number> The BTI sends the RELEASE message to the Edge Router when the call has completed, and the resources are to be released and billing is to stop. A sample message is: </paragraph>
<paragraph id="P-0374" lvl="2"><number>&lsqb;0374&rsqb;</number> RELEASE 0S55075 v1.0; GATEID 17S63224 </paragraph>
<paragraph id="P-0375" lvl="0"><number>&lsqb;0375&rsqb;</number> GATEID is the identification of the gate that was assigned for this conversation, and which is now to be released. </paragraph>
<paragraph id="P-0376" lvl="7"><number>&lsqb;0376&rsqb;</number> 7.3.5.1 RELEASE Acknowledgment </paragraph>
<paragraph id="P-0377" lvl="0"><number>&lsqb;0377&rsqb;</number> The Edge Router always responds to a RELEASE message with RELEASEACK. If a gate existed with the indicated identification, then it is closed, its resources released, a billing event is generated, and a GATECLOSE message is sent to the corresponding Edge Router at the other end of the connection. </paragraph>
<paragraph id="P-0378" lvl="0"><number>&lsqb;0378&rsqb;</number> A sample message is: </paragraph>
<paragraph id="P-0379" lvl="2"><number>&lsqb;0379&rsqb;</number> RELEASEACK 0S55075 v1.0; </paragraph>
<paragraph id="P-0380" lvl="7"><number>&lsqb;0380&rsqb;</number> 7.3.5.2 RELEASE Error </paragraph>
<paragraph id="P-0381" lvl="0"><number>&lsqb;0381&rsqb;</number> The Edge Router always responds to a RELEASE with a RELEASEACK. There are no error indications generated. If the gate identification does not exist, the Edge Router assumes the gate has already been closed by the remote end. </paragraph>
<paragraph id="P-0382" lvl="7"><number>&lsqb;0382&rsqb;</number> 7.3.6 HOLD </paragraph>
<paragraph id="P-0383" lvl="0"><number>&lsqb;0383&rsqb;</number> If the BTI wants to place a current call on hold, it must inform the Edge Router that its upstream data stream will stop. Otherwise, the Edge Router will interpret the lack of data as a hangup indication and terminate the call. This is done by a HOLD message. A sample message is: </paragraph>
<paragraph id="P-0384" lvl="2"><number>&lsqb;0384&rsqb;</number> HOLD 0S55090 v1.0; GATEID 17S63224 </paragraph>
<paragraph id="P-0385" lvl="0"><number>&lsqb;0385&rsqb;</number> GATEID is the identification of the gate, as assigned by the Edge Router. Included in this string is the security authorization that indicates the sender is allowed to perform operations on this gate. </paragraph>
<paragraph id="P-0386" lvl="7"><number>&lsqb;0386&rsqb;</number> 7.3.6.1 HOLD Acknowledgment </paragraph>
<paragraph id="P-0387" lvl="0"><number>&lsqb;0387&rsqb;</number> If the hold operation is successful, meaning bandwidth has been placed back in the pool of reserved but not yet committed, the Edge Router responds with a HOLDACK message. A sample message is: </paragraph>
<paragraph id="P-0388" lvl="2"><number>&lsqb;0388&rsqb;</number> HOLDACK 0S55090 v1.0; </paragraph>
<paragraph id="P-0389" lvl="7"><number>&lsqb;0389&rsqb;</number> 7.3.6.2 HOLD Error </paragraph>
<paragraph id="P-0390" lvl="0"><number>&lsqb;0390&rsqb;</number> If the hold operation fails the Edge Router responds with a HOLDNAK message. A sample message is: </paragraph>
<paragraph id="P-0391" lvl="2"><number>&lsqb;0391&rsqb;</number> HOLDNAK 0S55090 v1.0; ERROR Gate not yet committed </paragraph>
<paragraph id="P-0392" lvl="0"><number>&lsqb;0392&rsqb;</number> ERROR gives an error message string, which could be displayed if the BTI has some method to do so, or can simply result in a fast busy signal. </paragraph>
<paragraph id="P-0393" lvl="0"><number>&lsqb;0393&rsqb;</number> Other elements in the message are TBD. </paragraph>
<paragraph id="P-0394" lvl="7"><number>&lsqb;0394&rsqb;</number> 7.3.7 KEEPALIVE </paragraph>
<paragraph id="P-0395" lvl="0"><number>&lsqb;0395&rsqb;</number> While having a connection on hold, it is necessary for the BTI to periodically inform the Edge Router that it is still alive and healthy, and that the reservation should be maintained. Lack of any traffic from the BTI is taken as evidence that the BTI has failed, or that some access component has failed and that the BTI is unable to request a call termination. The safe strategy is to terminate the call, rather than possibly charge the customer for a length service outage. A sample KEEPALIVE message is: </paragraph>
<paragraph id="P-0396" lvl="2"><number>&lsqb;0396&rsqb;</number> KEEPALIVE 21C3972 v1.0; GATEID 17S63224 </paragraph>
<paragraph id="P-0397" lvl="0"><number>&lsqb;0397&rsqb;</number> GATEID is the identification of the gate, as assigned by the Edge Router. Included in this string is the security authorization that indicates the sender is allowed to perform operations on this gate. </paragraph>
<paragraph id="P-0398" lvl="0"><number>&lsqb;0398&rsqb;</number> There is no error control or retransmission of KEEPALIVE messages. The interval between them is engineered to minimize the chances of false error detection. </paragraph>
<paragraph id="P-0399" lvl="7"><number>&lsqb;0399&rsqb;</number> 7.4 Edge Router to BTI </paragraph>
<paragraph id="P-0400" lvl="0"><number>&lsqb;0400&rsqb;</number> No messages are initiated by the Edge Router. </paragraph>
<paragraph id="P-0401" lvl="7"><number>&lsqb;0401&rsqb;</number> 7.5 BTI to BTI </paragraph>
<paragraph id="P-0402" lvl="0"><number>&lsqb;0402&rsqb;</number> There are various end-to-end messages that are exchanged in any signaling system, which are used to coordinate the state of the two endpoints in providing consistent service. In embodiments of the present invention these are implemented as BTI-BTI signaling messages, are sent directly between the two BTIs involved in the conversation. These are formatted such that they can be processed by the same subroutines as the other messages. Messages exchanged between BTIs include RING, RINGBACK, CONNECT, HANGUP, HOLD, and RINGTIMEOUT. RING is sent from the originator to the destination to indicate that all appears ready and that the destination should ring the phone. RINGBACK is sent from the destination to the originator to indicate that the phone is ringing. CONNECT is sent from the destination to the originator when the called party answers the phone, or immediately after receipt of RING is the called party is ready. HOLD is sent from either BTI to the other to indicate the call will be placed on hold and to release any real-time resources currently held. HANGUP and RINGTIMEOUT are informational messages to indicate state information that the BTI will receive by other mechanisms as well. </paragraph>
<paragraph id="P-0403" lvl="7"><number>&lsqb;0403&rsqb;</number> 7.5.1 RING </paragraph>
<paragraph id="P-0404" lvl="0"><number>&lsqb;0404&rsqb;</number> The RING message is sent by the originating BTI when it has received the acknowledgment from its Edge Router that resources are available for the call, and therefore it is time to alert the destination user. A sample message is: </paragraph>
<paragraph id="P-0405" lvl="2"><number>&lsqb;0405&rsqb;</number> RING 3712 v1.0; CRV 3712 </paragraph>
<paragraph id="P-0406" lvl="0"><number>&lsqb;0406&rsqb;</number> CRV (optional) is the Call Reference Value assigned by the destination BTI. It must appear in the message, but may appear either as the transaction identifier, or as a separate element. </paragraph>
<paragraph id="P-0407" lvl="0"><number>&lsqb;0407&rsqb;</number> The acknowledgment of RING is either RINGBACK or CONNECT, not a separate RINGACK message. </paragraph>
<paragraph id="P-0408" lvl="7"><number>&lsqb;0408&rsqb;</number> 7.5.2 RINGBACK </paragraph>
<paragraph id="P-0409" lvl="0"><number>&lsqb;0409&rsqb;</number> When a terminating BTI has completed the resource reservation sequence, and has received a RING message from the originating BTI, its proper response is either RINGBACK or CONNECT. RINGBACK is sent if the destination is not yet ready to receive the call, and that the BTI is ringing the phone. CONNECT means the destination is ready now, and that no ringing is needed (e.g. a voice response system). A sample message is: </paragraph>
<paragraph id="P-0410" lvl="2"><number>&lsqb;0410&rsqb;</number> RINGBACK 21 v1.0; CRV 21; SOURCE local; TYPE callwaiting </paragraph>
<paragraph id="P-0411" lvl="0"><number>&lsqb;0411&rsqb;</number> CRV (optional) is the Call Reference Value assigned by the originating BTI. It must appear in the message, but may appear either as the transaction identifier, or as a separate element. </paragraph>
<paragraph id="P-0412" lvl="0"><number>&lsqb;0412&rsqb;</number> SOURCE (optional) specifies whether the audible ringback tone is to be generated locally by the originating BTI, or whether the destination will generate the tone utilizing the data stream. Due to the resource reservation scheme, SOURCE specified as &ldquo;remote&rdquo; can only occur when the destination is a trusted network element that does not need a gate to control access to the network. If not specified, ringback tone is generated locally by the BTI. </paragraph>
<paragraph id="P-0413" lvl="0"><number>&lsqb;0413&rsqb;</number> TYPE (optional) specifies one of several possible ringback audio sequences. Parameter value &ldquo;callwaiting&rdquo; means the special tone sequence indicating the callwaiting alert signal has been given. If the parameter is not given, or not understood, it defaults to &ldquo;normal&rdquo;. </paragraph>
<paragraph id="P-0414" lvl="0"><number>&lsqb;0414&rsqb;</number> There is no explicit acknowledgment to RINGBACK. However, if the originating BTI does not receive either RINGBACK or CONNECT in response to its RING message, it will retransmit the RING until a response is received. </paragraph>
<paragraph id="P-0415" lvl="7"><number>&lsqb;0415&rsqb;</number> 7.5.3 CONNECT </paragraph>
<paragraph id="P-0416" lvl="0"><number>&lsqb;0416&rsqb;</number> The CONNECT message is sent by the terminating BTI when the user has answered and the connection should be established. A sample message is: </paragraph>
<paragraph id="P-0417" lvl="2"><number>&lsqb;0417&rsqb;</number> CONNECT 21 v1.0; CRV 21 </paragraph>
<paragraph id="P-0418" lvl="0"><number>&lsqb;0418&rsqb;</number> CRV (optional) is the Call Reference Value assigned by the originating BTI. It must appear in the message, but may appear either as the transaction identifier, or as a separate element. </paragraph>
<paragraph id="P-0419" lvl="0"><number>&lsqb;0419&rsqb;</number> Acknowledgment of the CONNECT message occurs via the COMMIT/COMMITACK exchange with the Edge Router. </paragraph>
<paragraph id="P-0420" lvl="7"><number>&lsqb;0420&rsqb;</number> 7.5.4 HANGUP </paragraph>
<paragraph id="P-0421" lvl="0"><number>&lsqb;0421&rsqb;</number> This is an information message that is sent by either BTI to the other one to indicate the user is terminating the connection. A sample message is: </paragraph>
<paragraph id="P-0422" lvl="2"><number>&lsqb;0422&rsqb;</number> HANGUP 3712 v1.0; CRV 3712 </paragraph>
<paragraph id="P-0423" lvl="0"><number>&lsqb;0423&rsqb;</number> CRV (optional) is the Call Reference Value assigned by the originating BTI. It must appear in the message, but may appear either as the transaction identifier, or as a separate element. </paragraph>
<paragraph id="P-0424" lvl="0"><number>&lsqb;0424&rsqb;</number> There is no acknowledgment of the HANGUP message. There are multiple independent mechanisms that determine that a call has completed and will terminate the billing; since the system must recover from access link failures, BTI hardware/software failures, and power failures, each of which may prevent the BTI from sending the HANGUP message. Therefore its use is not critical. </paragraph>
<paragraph id="P-0425" lvl="7"><number>&lsqb;0425&rsqb;</number> 7.5.5 HOLD </paragraph>
<paragraph id="P-0426" lvl="0"><number>&lsqb;0426&rsqb;</number> If the BTI wants to place a current call on hold, it must inform the other endpoint that its incoming data stream will stop. Otherwise, the other endpoint will interpret the lack of data as a hangup indication and terminate the call. This is done by a HOLD message. A sample message is: </paragraph>
<paragraph id="P-0427" lvl="2"><number>&lsqb;0427&rsqb;</number> HOLD 21 v1.0; CRV 21 </paragraph>
<paragraph id="P-0428" lvl="0"><number>&lsqb;0428&rsqb;</number> CRV (optional) is the Call Reference Value assigned by the originating BTI. It must appear in the message, but may appear either as the transaction identifier, or as a separate element. </paragraph>
<paragraph id="P-0429" lvl="0"><number>&lsqb;0429&rsqb;</number> Note that before stopping the data stream, the BTI must also inform its Edge Router that the data stream will stop, else the Edge Router will terminate the call. This is done via a BTI-ER HOLD message. </paragraph>
<paragraph id="P-0430" lvl="7"><number>&lsqb;0430&rsqb;</number> 7.5.5.1 HOLD Acknowledgment </paragraph>
<paragraph id="P-0431" lvl="0"><number>&lsqb;0431&rsqb;</number> When a BTI has received a HOLD message from the other endpoint, it adjusts its threshold for considering the connection dead, and responds with the acknowledgment. This message is: </paragraph>
<paragraph id="P-0432" lvl="2"><number>&lsqb;0432&rsqb;</number> HOLDACK 3712 v1.0; CRV 3712 </paragraph>
<paragraph id="P-0433" lvl="0"><number>&lsqb;0433&rsqb;</number> CRV (optional) is the Call Reference Value assigned by the originating BTI. It must appear in the message, but may appear either as the transaction identifier, or as a separate element. </paragraph>
<paragraph id="P-0434" lvl="7"><number>&lsqb;0434&rsqb;</number> 7.5.6 RING TIMEOUT </paragraph>
<paragraph id="P-0435" lvl="0"><number>&lsqb;0435&rsqb;</number> This is an information message that is sent by the terminating BTI to the originator to indicate the user has not answered within the interval they configured, and that the call will be forwarded. A sample message is: </paragraph>
<paragraph id="P-0436" lvl="2"><number>&lsqb;0436&rsqb;</number> RINGTIMEOUT 3712 v1.0; CRV 3712 </paragraph>
<paragraph id="P-0437" lvl="0"><number>&lsqb;0437&rsqb;</number> CRV (optional) is the Call Reference Value assigned by the originating BTI. It must appear in the message, but may appear either as the transaction identifier, or as a separate element. </paragraph>
<paragraph id="P-0438" lvl="0"><number>&lsqb;0438&rsqb;</number> There is no error recovery for this message. It is informational only, and serves to tell the originating BTI to stop the ringback tone, and that a transfer is imminent. Without this message the originating BTI will still receive a TRANSFER message from the Gate Controller and handle the call in the same way. </paragraph>
<paragraph id="P-0439" lvl="7"><number>&lsqb;0439&rsqb;</number> <highlight><bold>7</bold></highlight>.<highlight><bold>5</bold></highlight>.<highlight><bold>7</bold></highlight> RESOURCECHANGE </paragraph>
<paragraph id="P-0440" lvl="0"><number>&lsqb;0440&rsqb;</number> TBD </paragraph>
<paragraph id="P-0441" lvl="7"><number>&lsqb;0441&rsqb;</number> 7.5.8 KEEPALIVE </paragraph>
<paragraph id="P-0442" lvl="0"><number>&lsqb;0442&rsqb;</number> While having a connection on hold, it is necessary for the BTI to periodically inform its peer BTI that it is still alive and healthy, and that the connection should be maintained. Lack of any traffic from the BTI is taken as evidence that the BTI has failed, or that some access component has failed and that the BTI is unable to request a call termination. The safe strategy is to terminate the call, rather than possibly charge the customer for a length service outage. A sample KEEPALIVE message is: </paragraph>
<paragraph id="P-0443" lvl="2"><number>&lsqb;0443&rsqb;</number> KEEPALIVE 3712 v1.0; CRV 3712 </paragraph>
<paragraph id="P-0444" lvl="0"><number>&lsqb;0444&rsqb;</number> CRV (optional) is the Call Reference Value assigned by the other BTI. It must appear in the message, but may appear either as the transaction identifier, or as a separate element. </paragraph>
<paragraph id="P-0445" lvl="0"><number>&lsqb;0445&rsqb;</number> There is no error control or retransmission of KEEPALIVE messages. The interval between them is engineered to minimize the chances of false error detection. </paragraph>
<paragraph id="P-0446" lvl="7"><number>&lsqb;0446&rsqb;</number> 7.6 Gate Controller to Edge Router </paragraph>
<paragraph id="P-0447" lvl="0"><number>&lsqb;0447&rsqb;</number> The protocol between the Gate Controller and Edge Router is for purposes of resource control and resource allocation policy. The Gate Controller implements all the allocation policies, and uses that information to manage the set of gates implemented in the Edge Routers. The Gate Controller initializes the gates with specific source, destination, and bandwidth restrictions; once initialized the BTI is able to request resource allocations within the limits imposed by the Gate Controller. </paragraph>
<paragraph id="P-0448" lvl="0"><number>&lsqb;0448&rsqb;</number> Messages initiated by the Gate Controller include GATEALLOC, GATESETUP, GATEMODIFY, GATERELEASE, and GATEINFO. GATEALLOC allocates a new gate identifier. GATESETUP initializes all the policy and traffic parameters for the gate, and sets the billing information. GATEMODIFY is used to change any or all of the parameters of an existing gate. GATERELEASE signals the end of the connection, and that the gate and all its resources can be made available to any other requester. GATEINFO is a mechanism by which the Gate Controller can find out all the current state and parameter settings of an existing gate. </paragraph>
<paragraph id="P-0449" lvl="7"><number>&lsqb;0449&rsqb;</number> 7.6.1 GATEALLOC </paragraph>
<paragraph id="P-0450" lvl="0"><number>&lsqb;0450&rsqb;</number> A GATEALLOC message is sent by the Gate Controller to allocate a new gate, and establish a GateID, but without setting any of the specific parameters needed for gate operation. A GATESETUP must come later with the operation parameters. On receipt of a GATEALLOC, the Edge Router starts a timer (approximately 120 seconds, exact value TBD), and if the gate has not entered the &ldquo;commit&rdquo; state in that time it is released. A sample GATEALLOC message is: </paragraph>
<paragraph id="P-0451" lvl="2"><number>&lsqb;0451&rsqb;</number> GATEALLOC 4T93176 v1.0; OWNER wtm-bti:7685 </paragraph>
<paragraph id="P-0452" lvl="0"><number>&lsqb;0452&rsqb;</number> OWNER specifies the name of the customer this gate will serve. </paragraph>
<paragraph id="P-0453" lvl="7"><number>&lsqb;0453&rsqb;</number> 7.6.1.1 GA TEALLOC Acknowledgment </paragraph>
<paragraph id="P-0454" lvl="0"><number>&lsqb;0454&rsqb;</number> A sample GATEALLOC message is: </paragraph>
<paragraph id="P-0455" lvl="2"><number>&lsqb;0455&rsqb;</number> GATEALLOCACK4T93176 v1.0; GATEID 17S63224; CUSTUSAGE 3 </paragraph>
<paragraph id="P-0456" lvl="0"><number>&lsqb;0456&rsqb;</number> GATEID is the string that identifies the gate that was allocated. It consists of at least two parts, with some (edge-router-specified) separator between them: the identity of the gate that was allocated, and a security code that must be given to the Edge Router in order to affect any change in the gate parameters. </paragraph>
<paragraph id="P-0457" lvl="0"><number>&lsqb;0457&rsqb;</number> CUSTUSAGE tells the Gate Controller the number of simultaneous gates the customer has currently. This is calculated by a scan of all current gates, comparing the OWNER parameter. If the number of gates assigned to a customer is inconsistent with the service subscribed, the Gate Controller can take appropriate action. </paragraph>
<paragraph id="P-0458" lvl="7"><number>&lsqb;0458&rsqb;</number> 7.6.1.2 GATEALLOC Error </paragraph>
<paragraph id="P-0459" lvl="0"><number>&lsqb;0459&rsqb;</number> Errors in allocating gates are reported by a GATEALLOCNAK message. A sample is: </paragraph>
<paragraph id="P-0460" lvl="2"><number>&lsqb;0460&rsqb;</number> GATEALLOCNAK 4T93176 v1.0; ERROR No gates available </paragraph>
<paragraph id="P-0461" lvl="0"><number>&lsqb;0461&rsqb;</number> ERROR gives an error message string, which could be displayed if the Gate Controller has some method to do so, and can be passed back to the BTI in a SETUPNAK message. </paragraph>
<paragraph id="P-0462" lvl="0"><number>&lsqb;0462&rsqb;</number> Other elements in the message are TBD. </paragraph>
<paragraph id="P-0463" lvl="7"><number>&lsqb;0463&rsqb;</number> 7.6.2 GATESETUP </paragraph>
<paragraph id="P-0464" lvl="0"><number>&lsqb;0464&rsqb;</number> The GATESETUP message is sent by the Gate Controller to the Edge Router to initialize the operational parameters of the gate. A sample GATESETUP message is: </paragraph>
<paragraph id="P-0465" lvl="2"><number>&lsqb;0465&rsqb;</number> GATESETUP 4T93181 v1.0; OWNER kkrama-bti:7685; </paragraph>
<paragraph id="P-0466" lvl="3"><number>&lsqb;0466&rsqb;</number> SRCIP 10.3.7.151; DESTIP 10.0.0.1:4724; BANDWIDTH 53B,6 ms,G.711; </paragraph>
<paragraph id="P-0467" lvl="3"><number>&lsqb;0467&rsqb;</number> ROLE term; REMGATEIP 135.207.31.1:7682; REMGATEID 17S63224; </paragraph>
<paragraph id="P-0468" lvl="3"><number>&lsqb;0468&rsqb;</number> REFID 135.207.31.2:36123E5C:93178; </paragraph>
<paragraph id="P-0469" lvl="3"><number>&lsqb;0469&rsqb;</number> BILLDATA 5123-0123-4567-8900/9733608718/9733608766 </paragraph>
<paragraph id="P-0470" lvl="0"><number>&lsqb;0470&rsqb;</number> OWNER (optional) gives the name of the customer this gate will serve. If this parameter is not given, then GATEID is mandatory. </paragraph>
<paragraph id="P-0471" lvl="0"><number>&lsqb;0471&rsqb;</number> GATEID (optional) gives the string that identifies the gate, with security code. If this parameter is not given, then OWNER is mandatory, and a new gate will be allocated. </paragraph>
<paragraph id="P-0472" lvl="0"><number>&lsqb;0472&rsqb;</number> SRCIP identifies the source IP address that will appear in all the data packets that go through the gate. Note that the source port number is not specified, and is generally not known or always constant. </paragraph>
<paragraph id="P-0473" lvl="0"><number>&lsqb;0473&rsqb;</number> DESTIP is the destination IP address that will appear in the IP header, and the destination UDP port number that will appear in the UDP header. Only packets that match the SourceIP/DestinationIP/DestinationPort will obtain the higher Quality of Service provided by the gate. </paragraph>
<paragraph id="P-0474" lvl="0"><number>&lsqb;0474&rsqb;</number> BANDWIDTH specifies the maximum bandwidth that maybe requested through this gate. Although the parameter includes the coding style, it is not used by the gate. </paragraph>
<paragraph id="P-0475" lvl="0"><number>&lsqb;0475&rsqb;</number> ROLE specifies whether the Edge Router is the originator or terminating side of this conversation. This has importance only if the backbone reservation is bi-directional, and only one of the Edge Routers need do the reservation. </paragraph>
<paragraph id="P-0476" lvl="0"><number>&lsqb;0476&rsqb;</number> REMGATEIP is the address of the Edge Router at the other end of this connection. All ER-ER gate coordination messages are to be sent to this address and port. </paragraph>
<paragraph id="P-0477" lvl="0"><number>&lsqb;0477&rsqb;</number> REMGATEID is the identity of the gate at the other end of the connection. </paragraph>
<paragraph id="P-0478" lvl="0"><number>&lsqb;0478&rsqb;</number> REFID is the unique string that is to appear in billing records for this conversation. </paragraph>
<paragraph id="P-0479" lvl="0"><number>&lsqb;0479&rsqb;</number> BILLDATA is the charging information that is to appear in billing records for this conversation. </paragraph>
<paragraph id="P-0480" lvl="7"><number>&lsqb;0480&rsqb;</number> 7.6.2.1 GATESETUP Acknowledgment </paragraph>
<paragraph id="P-0481" lvl="0"><number>&lsqb;0481&rsqb;</number> A sample GATESETUPACK message is: </paragraph>
<paragraph id="P-0482" lvl="2"><number>&lsqb;0482&rsqb;</number> GATESETUPACK4T93181 v1.0; GATEID 21S11018; CUSTUSAGE 1 </paragraph>
<paragraph id="P-0483" lvl="0"><number>&lsqb;0483&rsqb;</number> GATEID is the string that identifies the gate that was allocated. It consists of at least two parts, with some (edge-router-specified) separator between them: the identity of the gate that was allocated, and a security code that must be given to the Edge Router in order to affect any change in the gate parameters. </paragraph>
<paragraph id="P-0484" lvl="0"><number>&lsqb;0484&rsqb;</number> CUSTUSAGE tells the Gate Controller the number of simultaneous gates the customer has currently. This is calculated by a scan of all current gates, comparing the OWNER parameter. If the number of gates assigned to a customer is inconsistent with the service subscribed, the Gate Controller can take appropriate action. </paragraph>
<paragraph id="P-0485" lvl="7"><number>&lsqb;0485&rsqb;</number> 7.6.2.2 GATESETUP Error </paragraph>
<paragraph id="P-0486" lvl="0"><number>&lsqb;0486&rsqb;</number> Errors in establishing gates are reported by a GATESETUPNAK message. A sample is: </paragraph>
<paragraph id="P-0487" lvl="2"><number>&lsqb;0487&rsqb;</number> GATESETUPNAK 4T93181 v1.0; ERROR No gates available </paragraph>
<paragraph id="P-0488" lvl="0"><number>&lsqb;0488&rsqb;</number> ERROR gives an error message string, which could be displayed if the Gate Controller has some method to do so, and can be passed back to the BTI in a SETUPNAK message. </paragraph>
<paragraph id="P-0489" lvl="0"><number>&lsqb;0489&rsqb;</number> Other elements in the message are TBD. </paragraph>
<paragraph id="P-0490" lvl="7"><number>&lsqb;0490&rsqb;</number> 7.6.3 GATEMODIFY </paragraph>
<paragraph id="P-0491" lvl="0"><number>&lsqb;0491&rsqb;</number> The GATEMODIFY message is sent by the Gate Controller to the Edge Router to modify the operational parameters of an existing gate. A sample GATEMODIFY message is: </paragraph>
<paragraph id="P-0492" lvl="2"><number>&lsqb;0492&rsqb;</number> GATEMODIFY 2T10486 v1.0; GATEID 17S63224; SRCIP 10.3.7.151; DESTIP 10.0.0.1:4724; BANDWIDTH 53B,6 ms,G.711; ROLE term; REMGATEIP 135.207.31.1:7682; REMGATEID 17S63224; REFID 135.207.31.2:36123E5C:93178; BILLDATA 5123-0123-4567-8900/9733608718/9733608766q </paragraph>
<paragraph id="P-0493" lvl="0"><number>&lsqb;0493&rsqb;</number> GATEID gives the string that identifies the gate, with security code. </paragraph>
<paragraph id="P-0494" lvl="0"><number>&lsqb;0494&rsqb;</number> SRCIP identifies the source IP address that will appear in all the data packets that go through the gate. Note that the source port number is not specified, and is generally not known or always constant. </paragraph>
<paragraph id="P-0495" lvl="0"><number>&lsqb;0495&rsqb;</number> DESTIP is the destination IP address that will appear in the IP header, and the destination UDP port number that will appear in the UDP header. Only packets that match the SourceIP/DestinationIP/DestinationPort will obtain the higher Quality of Service provided by the gate. </paragraph>
<paragraph id="P-0496" lvl="0"><number>&lsqb;0496&rsqb;</number> BANDWIDTH specifies the maximum bandwidth that may be requested through this gate. Although the parameter includes the coding style, it is not used by the gate. </paragraph>
<paragraph id="P-0497" lvl="0"><number>&lsqb;0497&rsqb;</number> ROLE specifies whether the Edge Router is the originator or terminating side of this conversation. This has importance only if the backbone reservation is bi-directional, and only one of the Edge Routers need do the reservation. </paragraph>
<paragraph id="P-0498" lvl="0"><number>&lsqb;0498&rsqb;</number> REMGATEIP is the address of the Edge Router at the other end of this connection. All ER-ER gate coordination messages are to be sent to this address and port. </paragraph>
<paragraph id="P-0499" lvl="0"><number>&lsqb;0499&rsqb;</number> REMGATEID is the identity of the gate at the other end of the connection. </paragraph>
<paragraph id="P-0500" lvl="0"><number>&lsqb;0500&rsqb;</number> REFID is the unique string that is to appear in billing records for this conversation. </paragraph>
<paragraph id="P-0501" lvl="0"><number>&lsqb;0501&rsqb;</number> BILLDATA is the charging information that is to appear in billing records for this conversation. </paragraph>
<paragraph id="P-0502" lvl="7"><number>&lsqb;0502&rsqb;</number> 7.6.3.1 GATEMODIFY Acknowledgment </paragraph>
<paragraph id="P-0503" lvl="0"><number>&lsqb;0503&rsqb;</number> A sample GATEMODIFYACK message is: </paragraph>
<paragraph id="P-0504" lvl="2"><number>&lsqb;0504&rsqb;</number> GATEMODIFYACK 2T10486 v1.0; GATEID 17S63224; CUSTUSAGE 1 </paragraph>
<paragraph id="P-0505" lvl="0"><number>&lsqb;0505&rsqb;</number> GATEID is the string that identifies the gate that was allocated. It consists of at least two parts, with some (edge-router-specified) separator between them: the identity of the gate that was allocated, and a security code that must be given to the Edge Router in order to affect any change in the gate parameters. </paragraph>
<paragraph id="P-0506" lvl="0"><number>&lsqb;0506&rsqb;</number> CUSTUSAGE tells the Gate Controller the number of simultaneous gates the customer has currently. This is calculated by a scan of all current gates, comparing the OWNER parameter. If the number of gates assigned to a customer is inconsistent with the service subscribed, the Gate Controller can take appropriate action. </paragraph>
<paragraph id="P-0507" lvl="7"><number>&lsqb;0507&rsqb;</number> 7.6.3.2 GATEMODIFY Error </paragraph>
<paragraph id="P-0508" lvl="0"><number>&lsqb;0508&rsqb;</number> Errors in modifying gates are reported by a GATEMODIFYNAK message. A sample is: </paragraph>
<paragraph id="P-0509" lvl="2"><number>&lsqb;0509&rsqb;</number> GATEMODIFYNAK 4T93181 v1.0; ERROR Illegal Gate Identification </paragraph>
<paragraph id="P-0510" lvl="0"><number>&lsqb;0510&rsqb;</number> ERROR gives an error message string, which could be displayed if the Gate Controller has some method to do so, and can be passed back to the BTI in a SETUPNAK message. </paragraph>
<paragraph id="P-0511" lvl="0"><number>&lsqb;0511&rsqb;</number> Other elements in the message are TBD. 7.6.4 GATERELEASE </paragraph>
<paragraph id="P-0512" lvl="0"><number>&lsqb;0512&rsqb;</number> When a Gate Controller has transferred a connection, it sends a GATERELEASE message to the Edge Router to release any resources held by the endpoint that is now not part of the call. While the behavior is similar to a RELEASE message from the BTI, it results in a different event recorded in the billing system, and it avoids the normal gate coordination (as the corresponding gate at the other end of the original connection has been redirected to another destination). A sample is: </paragraph>
<paragraph id="P-0513" lvl="2"><number>&lsqb;0513&rsqb;</number> GATERELEASE 4T93181 v1.0; GATEID 17S63224 </paragraph>
<paragraph id="P-0514" lvl="0"><number>&lsqb;0514&rsqb;</number> GATEID is the string that identifies the gate that was allocated. It consists of at least two parts, with some (edge-router-specified) separator between them: the identity of the gate that was allocated, and a security code that must be given to the Edge Router in order to affect any change in the gate parameters. </paragraph>
<paragraph id="P-0515" lvl="0"><number>&lsqb;0515&rsqb;</number> ERROR gives an error message string, which could be displayed if the Gate Controller has some method to do so, and can be passed back to the BTI in a SETUPNAK message. Other elements in the message are TBD. </paragraph>
<paragraph id="P-0516" lvl="7"><number>&lsqb;0516&rsqb;</number> 7.6.4.1 GATERELEASE Acknowledgment </paragraph>
<paragraph id="P-0517" lvl="0"><number>&lsqb;0517&rsqb;</number> A GATERELEASE message always gives a response of GATERELEASEACK. A sample is: </paragraph>
<paragraph id="P-0518" lvl="2"><number>&lsqb;0518&rsqb;</number> GATERELEASEACK 4T93181 v1.0; </paragraph>
<paragraph id="P-0519" lvl="7"><number>&lsqb;0519&rsqb;</number> 7.6.4.2 GA TERELEASE Error </paragraph>
<paragraph id="P-0520" lvl="0"><number>&lsqb;0520&rsqb;</number> A GATERELEASE message always results in a response of GATERELEASEACK. If the GATEID parameter specifies an invalid gate, the Edge Router assumes the gate has already been closed. </paragraph>
<paragraph id="P-0521" lvl="7"><number>&lsqb;0521&rsqb;</number> 7.6.5 GATEINFO </paragraph>
<paragraph id="P-0522" lvl="0"><number>&lsqb;0522&rsqb;</number> When a Gate Controller wishes to find out the current parameter settings, or current state, of a gate, it sends to the Edge Router a GATEINFO message. A sample is: </paragraph>
<paragraph id="P-0523" lvl="2"><number>&lsqb;0523&rsqb;</number> GATEINFO OT5082 v1.0; GATEID 17S63224 </paragraph>
<paragraph id="P-0524" lvl="0"><number>&lsqb;0524&rsqb;</number> GATEID is the string that identifies the gate that was allocated. It consists of at least two parts, with some (edge-router-specified) separator between them: the identity of the gate that was allocated, and a security code that must be given to the Edge Router in order to affect any change in the gate parameters. </paragraph>
<paragraph id="P-0525" lvl="7"><number>&lsqb;0525&rsqb;</number> 7.6.5.1 GATEINFO Acknowledgment </paragraph>
<paragraph id="P-0526" lvl="0"><number>&lsqb;0526&rsqb;</number> The message is sent by the Gate Controller to the Edge Router to modify the operational parameters of an existing gate. A sample GATEINFOACK message is: </paragraph>
<paragraph id="P-0527" lvl="2"><number>&lsqb;0527&rsqb;</number> GATEINFOACK OT5082 v1.0; GATEID 17S63224; STATE commit; SRCIP 10.3.7.151; DESTIP 10.0.0.1:4724; BANDWIDTH 53B,6 ms,G.711; </paragraph>
<paragraph id="P-0528" lvl="3"><number>&lsqb;0528&rsqb;</number> ROLE term; REMGATEIP 135.207.31.1:7682; REMGATEID 17S63224; </paragraph>
<paragraph id="P-0529" lvl="3"><number>&lsqb;0529&rsqb;</number> REFID 135.207.31.2:36123E5C:93178; </paragraph>
<paragraph id="P-0530" lvl="3"><number>&lsqb;0530&rsqb;</number> BILLDATA 5123-0123-4567-8900/9733608718/9733608766 </paragraph>
<paragraph id="P-0531" lvl="0"><number>&lsqb;0531&rsqb;</number> GATEID gives the string that identifies the gate, with security code. </paragraph>
<paragraph id="P-0532" lvl="0"><number>&lsqb;0532&rsqb;</number> STATE gives the internal state of the gate, one of the following: setup, reserved, commit, or hold. </paragraph>
<paragraph id="P-0533" lvl="0"><number>&lsqb;0533&rsqb;</number> SRCIP identifies the source IP address that will appear in all the data packets that go through the gate. Note that the source port number is not specified, and is generally not known or always constant. </paragraph>
<paragraph id="P-0534" lvl="0"><number>&lsqb;0534&rsqb;</number> DESTIP is the destination IP address that will appear in the IP header, and the destination UDP port number that will appear in the UDP header. Only packets that match the SourceIP/DestinationIP/DestinationPort will obtain the higher Quality of Service provided by the gate. </paragraph>
<paragraph id="P-0535" lvl="0"><number>&lsqb;0535&rsqb;</number> BANDWIDTH specifies the maximum bandwidth that maybe requested through this gate. Although the parameter includes the coding style, it is not used by the gate. </paragraph>
<paragraph id="P-0536" lvl="0"><number>&lsqb;0536&rsqb;</number> ROLE specifies whether the Edge Router is the originator or terminating side of this conversation. This has importance only if the backbone reservation is bi-directional, and only one of the Edge Routers need do the reservation. </paragraph>
<paragraph id="P-0537" lvl="0"><number>&lsqb;0537&rsqb;</number> REMGATEIP is the address of the Edge Router at the other end of this connection. All ER-ER gate coordination messages are to be sent to this address and port. </paragraph>
<paragraph id="P-0538" lvl="0"><number>&lsqb;0538&rsqb;</number> REMGATEID is the identity of the gate at the other end of the connection. </paragraph>
<paragraph id="P-0539" lvl="0"><number>&lsqb;0539&rsqb;</number> REFID is the unique string that is to appear in billing records for this conversation. </paragraph>
<paragraph id="P-0540" lvl="0"><number>&lsqb;0540&rsqb;</number> BILLDATA is the charging information that is to appear in billing records for this conversation. </paragraph>
<paragraph id="P-0541" lvl="7"><number>&lsqb;0541&rsqb;</number> 7.6.5.2 GATEINFO Error </paragraph>
<paragraph id="P-0542" lvl="0"><number>&lsqb;0542&rsqb;</number> Errors in fetching gate information are reported by a GATEINFONAK message. A sample is: </paragraph>
<paragraph id="P-0543" lvl="2"><number>&lsqb;0543&rsqb;</number> GATEINFONAK 0T5082 v1.0; ERROR Illegal Gate Identification </paragraph>
<paragraph id="P-0544" lvl="0"><number>&lsqb;0544&rsqb;</number> ERROR gives an error message string, which could be displayed if the Gate Controller has some method to do so, and can be passed back to the BTI in a SETUPNAK message. </paragraph>
<paragraph id="P-0545" lvl="0"><number>&lsqb;0545&rsqb;</number> Other elements in the message are TBD. </paragraph>
<paragraph id="P-0546" lvl="7"><number>&lsqb;0546&rsqb;</number> 7.7 Edge Router to Gate Controller </paragraph>
<paragraph id="P-0547" lvl="0"><number>&lsqb;0547&rsqb;</number> No messages are initiated by the Edge Router. </paragraph>
<paragraph id="P-0548" lvl="7"><number>&lsqb;0548&rsqb;</number> 7.8 Edge Router to Edge Router </paragraph>
<paragraph id="P-0549" lvl="0"><number>&lsqb;0549&rsqb;</number> In order to prevent some types of theft of service fraud, it is necessary for the Edge Routers to synchronize the gates at opposite ends of a connection. In particular, a gate that is &ldquo;committed&rdquo; at one end of a connection, but not at the other, can be used as a high quality data connection, or can be used to fraudulently charge an unsuspecting customer for a lengthy connection. </paragraph>
<paragraph id="P-0550" lvl="0"><number>&lsqb;0550&rsqb;</number> Messages exchanged between the Edge Routers include GATEOPEN, and GATECLOSE. GATEOPEN is exchanged with the gate has resources committed to it, and GATECLOSE is exchanged when those resources are released. Timers within the gate implementation impose strict controls on the length of time these exchanges may occupy. </paragraph>
<paragraph id="P-0551" lvl="7"><number>&lsqb;0551&rsqb;</number> 7.8.1 GATEOPEN </paragraph>
<paragraph id="P-0552" lvl="0"><number>&lsqb;0552&rsqb;</number> The GATEOPEN message is sent by the Edge Router to its corresponding Edge Router at the other end of a connection on receipt of the COMMIT message from the BTI. A sample message is: </paragraph>
<paragraph id="P-0553" lvl="2"><number>&lsqb;0553&rsqb;</number> GATEOPEN 21T6572; GATEID 17S63224; BANDWIDTH 53B,6 ms </paragraph>
<paragraph id="P-0554" lvl="0"><number>&lsqb;0554&rsqb;</number> GATEID is the identification string for the remote gate, including the security code required. </paragraph>
<paragraph id="P-0555" lvl="0"><number>&lsqb;0555&rsqb;</number> BANDWIDTH is the bandwidth request received in the COMMIT message. </paragraph>
<paragraph id="P-0556" lvl="7"><number>&lsqb;0556&rsqb;</number> 7.8.1.1 GATEOPEN Acknowledgment </paragraph>
<paragraph id="P-0557" lvl="0"><number>&lsqb;0557&rsqb;</number> On receipt of a GATEOPEN message, the Edge Router responds with a GATEOPENACK. A sample message is: </paragraph>
<paragraph id="P-0558" lvl="2"><number>&lsqb;0558&rsqb;</number> GATEOPENACK 21T6572 v1.0; </paragraph>
<paragraph id="P-0559" lvl="7"><number>&lsqb;0559&rsqb;</number> 7.8.1.2 GATEOPEN Error </paragraph>
<paragraph id="P-0560" lvl="0"><number>&lsqb;0560&rsqb;</number> If some error occurs in the processing of a GATEOPEN, the Edge Router responds with GATEOPENNAK. Such a situation can occur when the remote gate times out and releases the gate before the commit sequence completes. A sample message is: </paragraph>
<paragraph id="P-0561" lvl="2"><number>&lsqb;0561&rsqb;</number> GATEOPENNAK 21T6572 v1.0; ERROR Invalid gate identifier </paragraph>
<paragraph id="P-0562" lvl="0"><number>&lsqb;0562&rsqb;</number> ERROR gives an error message string, which could be displayed if the Gate Controller has some method to do so, and can be passed back to the BTI in a SETUPNAK message. </paragraph>
<paragraph id="P-0563" lvl="0"><number>&lsqb;0563&rsqb;</number> Other elements in the message are TBD. </paragraph>
<paragraph id="P-0564" lvl="7"><number>&lsqb;0564&rsqb;</number> 7.8.2 GATECLOSE </paragraph>
<paragraph id="P-0565" lvl="0"><number>&lsqb;0565&rsqb;</number> The GATECLOSE message is sent by the Edge Router to its corresponding Edge Router at the other end of a connection on receipt of the RELEASE message from the BTI. The Edge Router releases any resources held by that gate, stops any unsolicited grants offered on the upstream channel, and frees the gate. A sample message is: </paragraph>
<paragraph id="P-0566" lvl="2"><number>&lsqb;0566&rsqb;</number> GATECLOSE 21T6583; GATEID 17S63224; </paragraph>
<paragraph id="P-0567" lvl="0"><number>&lsqb;0567&rsqb;</number> GATEID is the identification string for the remote gate, including the security code required. </paragraph>
<paragraph id="P-0568" lvl="7"><number>&lsqb;0568&rsqb;</number> 7.8.2.1 GATECLOSE Acknowledgment </paragraph>
<paragraph id="P-0569" lvl="0"><number>&lsqb;0569&rsqb;</number> On receipt of a GATECLOSE message, the Edge Router responds with a GATECLOSEACK. A sample message is: GATECLOSEACK 21T6583 v1.0; </paragraph>
<paragraph id="P-0570" lvl="7"><number>&lsqb;0570&rsqb;</number> 7.8.2.2 GATECLOSE Error </paragraph>
<paragraph id="P-0571" lvl="0"><number>&lsqb;0571&rsqb;</number> A GATECLOSE message always results in a response of GATECLOSEACK. If the GATEID parameter specifies an invalid gate, the Edge Router assumes the gate has already been closed. </paragraph>
<paragraph id="P-0572" lvl="7"><number>&lsqb;0572&rsqb;</number> 7.9 Gate Controller to Gate Controller </paragraph>
<paragraph id="P-0573" lvl="0"><number>&lsqb;0573&rsqb;</number> Messages exchanged between the Gate Controllers include GCSETUP, GCREDIRECT, and GCSPLICE. All occur in situations where the Gate Controller realizes that it cannot complete a request due to the destination being served by a different Gate Controller. These messages package up all the internal state, ask the remote Gate Controller to complete the desired function, then respond with the updated state information. In an implementation of the Gate Controller it is likely that these messages will exist in some internal form in order to share the implementation of call termination services. </paragraph>
<paragraph id="P-0574" lvl="7"><number>&lsqb;0574&rsqb;</number> 7.9.1 GCSETUP </paragraph>
<paragraph id="P-0575" lvl="0"><number>&lsqb;0575&rsqb;</number> The GCSETUP message is exchanged between Gate Controllers when different Gate Controllers serve the originating and terminating endpoints of a call. It is basically formed by packaging all the partial state information the originating Gate Controller has assembled, and requesting the terminating Gate Controller to complete the work necessary to initiate the connection. </paragraph>
<paragraph id="P-0576" lvl="0"><number>&lsqb;0576&rsqb;</number> A sample GCSETUP message is: </paragraph>
<paragraph id="P-0577" lvl="2"><number>&lsqb;0577&rsqb;</number> GCSETUP 4T93177 v1.0; DEST E164 9733608766; CALLER 9733608718 Bill Marshall; </paragraph>
<paragraph id="P-0578" lvl="3"><number>&lsqb;0578&rsqb;</number> CRV 21; SIGADDR 135.207.31.1:6000; DATAADDR 135.207.31.1:6002 2 2; REMGATEIP 135.207.31.1:7682; REMGATEID 17S63224; </paragraph>
<paragraph id="P-0579" lvl="3"><number>&lsqb;0579&rsqb;</number> CODING 53B,6 ms,G.71 1; REFID 135.207.31.2:36123E5C:93178; BILLDATA 5123-0123-4567-8900/9733608718/9733608766; </paragraph>
<paragraph id="P-0580" lvl="3"><number>&lsqb;0580&rsqb;</number> CINFO </paragraph>
<paragraph id="P-0581" lvl="3"><number>&lsqb;0581&rsqb;</number> 135.207.31.2:7650/135.207.31.1:7682/17S63224/10.0.12.221:7685/10.0.12.221:7000-2-2/9733608718/21/10.0.12.221:7685 </paragraph>
<paragraph id="P-0582" lvl="0"><number>&lsqb;0582&rsqb;</number> DEST is the destination address for this connection. Its format is the same as in the SETUP message received from the BTI, except that the E164 number, if present, is expanded from the local numbering plan of the customer to the global numbering plan. </paragraph>
<paragraph id="P-0583" lvl="0"><number>&lsqb;0583&rsqb;</number> CALLER is the caller-id and calling name of the originator of the connection. From the SETUP message received from the BTI, the originating Gate Controller expanded the E 164 number to a global numbering plan, and looked up the calling name. </paragraph>
<paragraph id="P-0584" lvl="0"><number>&lsqb;0584&rsqb;</number> CRV is the Call Reference Value assigned by the originating BTI. Copied from the SETUP message. </paragraph>
<paragraph id="P-0585" lvl="0"><number>&lsqb;0585&rsqb;</number> SIGADDR is the IP address and port number the destination should use for BTI-BTI signaling messages. This is a global version of the address given in the SETUP message from the BTI, with name to ip-address translation done, and with any NAT/PAT server translation included. </paragraph>
<paragraph id="P-0586" lvl="0"><number>&lsqb;0586&rsqb;</number> DATAADDR is the IP address and port number the destination should use for data packets. This is a global version of the address given in the SETUP message from the BTI, with name and ip-address translation done, and with any NAT/PAT server translation included. The second and third parameters (optional) in this element give the number of consecutive ports used, and the alignment information needed for the starting port number. </paragraph>
<paragraph id="P-0587" lvl="0"><number>&lsqb;0587&rsqb;</number> REMGATEIP is the IP address and port number of the Edge Router that contains the gate to be used for this conversation. This is the destination address for all ER-ER communication. </paragraph>
<paragraph id="P-0588" lvl="0"><number>&lsqb;0588&rsqb;</number> REMGATEID is the gate identifier and security code for the gate within that Edge Router. </paragraph>
<paragraph id="P-0589" lvl="0"><number>&lsqb;0589&rsqb;</number> CODING is the offered encapsulation methods and coding styles offered by the call originator. </paragraph>
<paragraph id="P-0590" lvl="0"><number>&lsqb;0590&rsqb;</number> REFID is a unique identifier assigned by the originating Gate Controller, which will appear in all the Billing Records. The REFID is intended to be unique within a period of several months. </paragraph>
<paragraph id="P-0591" lvl="0"><number>&lsqb;0591&rsqb;</number> BILLDATA is the billing/accounting data indicating the charging arrangement for this conversation. </paragraph>
<paragraph id="P-0592" lvl="0"><number>&lsqb;0592&rsqb;</number> CINFO is a string generated by the originating Gate Controller that contains all the information needed for future enhanced services that may involve the call originator. This will be encrypted and given to the destination BTI to store. The format is a list of many items separated by slashes, or which the first is the ip address and port of the Gate Controller that built the string. Subsequent items in this string include the address/port of the Edge Router, gate identifier, signaling endpoint address, data endpoint address, the originator&apos;s call reference value, and the originator&apos;s address for initial call signaling. </paragraph>
<paragraph id="P-0593" lvl="7"><number>&lsqb;0593&rsqb;</number> 7.9.1.1 GCSETUP Acknowledgment </paragraph>
<paragraph id="P-0594" lvl="0"><number>&lsqb;0594&rsqb;</number> When the terminating Gate Controller has completed the call, it packages up all its assembled state information and passes it back to the originating Gate Controller in the GCSETUPACK message. A sample GCSETUPACK message is: </paragraph>
<paragraph id="P-0595" lvl="2"><number>&lsqb;0595&rsqb;</number> GCSETUPACK 4T93177 v1.0; CRV 3712; </paragraph>
<paragraph id="P-0596" lvl="3"><number>&lsqb;0596&rsqb;</number> SIGADDR 135.207.22.1:6142; DATAADDR 135.207.22.1:6146 2 2; REMGATEIP 135.207.22.1:7682; REMGATEID 21S11018; </paragraph>
<paragraph id="P-0597" lvl="3"><number>&lsqb;0597&rsqb;</number> CODING 53B,6 ms,G.711; </paragraph>
<paragraph id="P-0598" lvl="3"><number>&lsqb;0598&rsqb;</number> CINFO </paragraph>
<paragraph id="P-0599" lvl="3"><number>&lsqb;0599&rsqb;</number> 135.207.31.2:7650/135.207.22.1:7682/21 S11018/10.3.7.151:7685/10.3.7.151:7000-2-2/9733608766/3712/10.3.7.151:7685 </paragraph>
<paragraph id="P-0600" lvl="0"><number>&lsqb;0600&rsqb;</number> CRV is the Call Reference Value assigned by the destination BTI for this conversation. It is passed transparently from the SETUPACK message from the destination BTI. </paragraph>
<paragraph id="P-0601" lvl="0"><number>&lsqb;0601&rsqb;</number> SIGADDR is the IP address and port number the originator should use for BTI-BTI signaling messages. This is a global version of the address given in the SETUPACK message from the terminating BTI, with name to ip-address translation done, and with any NAT/PAT server translation included. </paragraph>
<paragraph id="P-0602" lvl="0"><number>&lsqb;0602&rsqb;</number> DATAADDR is the IP address and port number the originator should use for data packets. This is a global version of the address given in the SETUPACK message from the terminating BTI, with name and ip-address translation done, and with any NAT/PAT server translation included. The second and third parameters (optional) in this element give the number of consecutive ports used, and the alignment information needed for the starting port number. </paragraph>
<paragraph id="P-0603" lvl="0"><number>&lsqb;0603&rsqb;</number> REMGATEIP is the IP address and port number of the Edge Router that contains the gate to be used at the terminating end for this conversation. This is the destination address for all ER-ER communication. </paragraph>
<paragraph id="P-0604" lvl="0"><number>&lsqb;0604&rsqb;</number> REMGATEID is the gate identifier and security code for the gate within that Edge Router. </paragraph>
<paragraph id="P-0605" lvl="0"><number>&lsqb;0605&rsqb;</number> CODING is the encapsulation method and coding style accepted by the call destination. </paragraph>
<paragraph id="P-0606" lvl="0"><number>&lsqb;0606&rsqb;</number> REFID (optional) is a unique identifier assigned by the Gate Controller, which will appear in all the Billing Records. The REFID is intended to be unique within a period of several months. If this parameter appears, it will override the REFID assigned by the originating Gate Controller </paragraph>
<paragraph id="P-0607" lvl="0"><number>&lsqb;0607&rsqb;</number> BILLDATA (optional) is the billing/accounting data indicating the charging arrangement for this conversation. If this parameter appears, it will override the BILLDATA assigned by the originating Gate Controller. </paragraph>
<paragraph id="P-0608" lvl="0"><number>&lsqb;0608&rsqb;</number> CINFO is a string generated by the terminating Gate Controller that contains all the information needed for future enhanced services that may involve the terminating BTI. This will be encrypted and given to the originating BTI to store. The format is a list of many items separated by slashes, or which the first is the ip address and port of the Gate Controller that built the string. Subsequent items in this string include the address/port of the Edge Router, gate identifier, signaling endpoint address, data endpoint address, the destination&apos;s call reference value, and the destination&apos;s address for initial call signaling. </paragraph>
<paragraph id="P-0609" lvl="7"><number>&lsqb;0609&rsqb;</number> 7.9.1.2 GCSETUP Error </paragraph>
<paragraph id="P-0610" lvl="0"><number>&lsqb;0610&rsqb;</number> If the terminating Gate Controller encounters an error while completing a connection request, it responds to the originating Gate Controller with a GCSETUPNAK message. A sample message is: </paragraph>
<paragraph id="P-0611" lvl="2"><number>&lsqb;0611&rsqb;</number> GCSETUPNAK 4T93177 v1.0; ERROR No gates available </paragraph>
<paragraph id="P-0612" lvl="0"><number>&lsqb;0612&rsqb;</number> ERROR gives an error message string, which could be displayed if the Gate Controller has some method to do so, and can be passed back to the BTI in a SETUPNAK message. </paragraph>
<paragraph id="P-0613" lvl="0"><number>&lsqb;0613&rsqb;</number> Other elements in the message are TBD. </paragraph>
<paragraph id="P-0614" lvl="7"><number>&lsqb;0614&rsqb;</number> 7.9.2 GCREDIRECT </paragraph>
<paragraph id="P-0615" lvl="0"><number>&lsqb;0615&rsqb;</number> The GCREDIRECT message is exchanged between Gate Controllers when different Gate Controllers serve the originating and terminating endpoints of a call. It is basically formed by packaging all the partial state information the first Gate Controller has assembled in its processing of a REDIRECT message, and requesting the terminating Gate Controller to complete the work necessary to redirect the connection. </paragraph>
<paragraph id="P-0616" lvl="0"><number>&lsqb;0616&rsqb;</number> A sample GCREDIRECT message is: </paragraph>
<paragraph id="P-0617" lvl="2"><number>&lsqb;0617&rsqb;</number> GCREDIRECT OT5081 v1.0; DEST E164 9733608800; </paragraph>
<paragraph id="P-0618" lvl="3"><number>&lsqb;0618&rsqb;</number> BILLDATA 5123-0123-4567-8900/9733608718/9733608800; </paragraph>
<paragraph id="P-0619" lvl="3"><number>&lsqb;0619&rsqb;</number> CINFO </paragraph>
<paragraph id="P-0620" lvl="3"><number>&lsqb;0620&rsqb;</number> 135.207.31.2:7650/135.207.31.1:7682/17S63224/10.0.12.221:7685/10.0.12.221:7000-2-2/9733608718/21/10.0.12.221:7685 </paragraph>
<paragraph id="P-0621" lvl="0"><number>&lsqb;0621&rsqb;</number> DEST is the destination address for this new connection. Its format is the same as in the SETUP message received from the BTI, except that the E164 number, if present, is expanded from the local numbering plan of the customer to the global numbering plan. </paragraph>
<paragraph id="P-0622" lvl="0"><number>&lsqb;0622&rsqb;</number> BILLDATA is the billing/accounting data indicating the charging arrangement for the additional segment of this connection. </paragraph>
<paragraph id="P-0623" lvl="0"><number>&lsqb;0623&rsqb;</number> CINFO is a string generated by the originating Gate Controller that contains all the information needed for future enhanced services that may involve the call originator. This will be encrypted and given to the destination BTI to store. The format is a list of many items separated by slashes, or which the first is the ip address and port of the Gate Controller that built the string. Subsequent items in this string include the address/port of the Edge Router, gate identifier, signaling endpoint address, data endpoint address, the originator&apos;s call reference value, and the originator&apos;s address for initial call signaling. </paragraph>
<paragraph id="P-0624" lvl="7"><number>&lsqb;0624&rsqb;</number> 7.9.2.1 GCREDIRECT Acknowledgment </paragraph>
<paragraph id="P-0625" lvl="0"><number>&lsqb;0625&rsqb;</number> If the terminating Gate Controller is able to successfully process a GCREDIRECT request, it responds with a GCREDIRECTACK message. A sample message is: </paragraph>
<paragraph id="P-0626" lvl="2"><number>&lsqb;0626&rsqb;</number> GCREDIRECTACK 0T5081 v1.0; REMGATEIP 135.207.22.1:7682; REMGATEID 21 S 11018 </paragraph>
<paragraph id="P-0627" lvl="0"><number>&lsqb;0627&rsqb;</number> REMGATEIP is the IP address and port number of the Edge Router that is holding a gate for the previous connection that has now been redirected. </paragraph>
<paragraph id="P-0628" lvl="0"><number>&lsqb;0628&rsqb;</number> REMGATEID is the identification string for the gate at that Edge Router for the previous connection. </paragraph>
<paragraph id="P-0629" lvl="7"><number>&lsqb;0629&rsqb;</number> 7.9.2.2 GCREDIRECT Error </paragraph>
<paragraph id="P-0630" lvl="0"><number>&lsqb;0630&rsqb;</number> If the terminating Gate Controller encounters an error while completing a redirect request, it responds to the originating Gate Controller with a GCREDIRECTNAK message. A sample message is: </paragraph>
<paragraph id="P-0631" lvl="2"><number>&lsqb;0631&rsqb;</number> GCREDIRECTNAK OT5081 v1.0; ERROR No gates available </paragraph>
<paragraph id="P-0632" lvl="0"><number>&lsqb;0632&rsqb;</number> ERROR gives an error message string, which could be displayed if the Gate Controller has some method to do so, and can be passed back to the BTI in a NAK message. </paragraph>
<paragraph id="P-0633" lvl="0"><number>&lsqb;0633&rsqb;</number> Other elements in the message are TBD. </paragraph>
<paragraph id="P-0634" lvl="7"><number>&lsqb;0634&rsqb;</number> 7.9.3 GCSPLICE </paragraph>
<paragraph id="P-0635" lvl="0"><number>&lsqb;0635&rsqb;</number> If the Gate Controller receiving a SPLICE request from a BTI is not the one that generated the CINFO1 string, it sends to that Gate Controller a GCSPLICE message. A sample message of this type is: </paragraph>
<paragraph id="P-0636" lvl="2"><number>&lsqb;0636&rsqb;</number> GCSPLICE 7T1019 v1.0; </paragraph>
<paragraph id="P-0637" lvl="3"><number>&lsqb;0637&rsqb;</number> CINFO1 </paragraph>
<paragraph id="P-0638" lvl="3"><number>&lsqb;0638&rsqb;</number> 135.207.31.2:7650/135.207.22.1:7682/9S1077/10.3.7.151:7685/10.3.7.151:7006-2-2/9733608766/3746/10.3.7.151:7685; </paragraph>
<paragraph id="P-0639" lvl="3"><number>&lsqb;0639&rsqb;</number> CINFO2 </paragraph>
<paragraph id="P-0640" lvl="3"><number>&lsqb;0640&rsqb;</number> 135.207.31.2:7650/135.207.22.1:7682/5S71731/10.3.7.150:7685/10.3.7.150:7000-2-2/9733608720/8839/10.3.7.150:7685 </paragraph>
<paragraph id="P-0641" lvl="0"><number>&lsqb;0641&rsqb;</number> If the Gate Controller receiving the above GCSPLICE request is not the one that generated the CINFO2 string, it sends to that third Gate Controller another GCSPLICE message. A sample message of this second type is: </paragraph>
<paragraph id="P-0642" lvl="2"><number>&lsqb;0642&rsqb;</number> GCSPLICE 7T1021 v1.0; </paragraph>
<paragraph id="P-0643" lvl="3"><number>&lsqb;0643&rsqb;</number> CINFO2 </paragraph>
<paragraph id="P-0644" lvl="3"><number>&lsqb;0644&rsqb;</number> 135.207.31.2:7650/135.207.22.1:7682/5S71731/10.3.7.150:7685/10.3.7.150:7000-2-2/9733608720/8839/10.3.7.150:7685; SIGADDR 135.207.22.1:6162; DATAADDR 135.207.22.1:6164 2 2; CRV 3746; REMGATEIP 135.207.22.1:7682; REMGATEID 9S1077; CODING 53B,6 ms,G.71 1; REFID 135.207.31.2:26124C90:7224; BILLDATA 6010-0203-0456-7890/9733608766/BRIDGE; </paragraph>
<paragraph id="P-0645" lvl="3"><number>&lsqb;0645&rsqb;</number> CINFO 135.207.31.2:7650/135.207.22.1:7682/9S 1077/10.3.7.151:7685/10.3.7.151:7006-2-2/9733608766/3746/10.3.7.151:7685 </paragraph>
<paragraph id="P-0646" lvl="0"><number>&lsqb;0646&rsqb;</number> CINFO1 is the string previously supplied by a Gate Controller, which tells that Gate Controller various pieces of information about the first endpoint. This string was stored encrypted by the BTI that originated the SPLICE request. Either CINFO 1 must be present in the message, or the set of fields that are determined from the Gate Controller unpacking CINFO1: SIGADDR, DATAADDR, CRV, REMGATEIP, REMGATEID, CODING, REFID, and BILLDATA. With these fields present, the CINFO1 string is attached as CINFO. </paragraph>
<paragraph id="P-0647" lvl="0"><number>&lsqb;0647&rsqb;</number> CINFO2 is the string previously supplied by a Gate Controller, which tells that Gate Controller various pieces of information about the second endpoint. This string was stored encrypted by the BTI that originated the SPLICE request. </paragraph>
<paragraph id="P-0648" lvl="0"><number>&lsqb;0648&rsqb;</number> SIGADDR is the IP address and port number the second endpoint should use for BTI-BTI signaling messages. This is a global version of the address given in the SETUP/SETUPACK message from the first endpoint BTI, with name to ip-address translation done, and with any NAT/PAT server translation included. </paragraph>
<paragraph id="P-0649" lvl="0"><number>&lsqb;0649&rsqb;</number> DATAADDR is the IP address and port number the second endpoint should use for data packets. This is a global version of the address given in the SETUP/SETUPACK message from the first endpoint BTI, with name and ip-address translation done, and with any NAT/PAT server translation included. The second and third parameters (optional) in this element give the number of consecutive ports used, and the alignment information needed for the starting port number. </paragraph>
<paragraph id="P-0650" lvl="0"><number>&lsqb;0650&rsqb;</number> REMGATEIP is the IP address and port number of the Edge Router that contains the gate to be used at the first BTI&apos;s end for this conversation. This is the destination address for all ER-ER communication. </paragraph>
<paragraph id="P-0651" lvl="0"><number>&lsqb;0651&rsqb;</number> REMGATEID is the gate identifier and security code for the gate within that Edge Router. </paragraph>
<paragraph id="P-0652" lvl="0"><number>&lsqb;0652&rsqb;</number> CODING is the encapsulation method and coding style accepted by the first BTI. </paragraph>
<paragraph id="P-0653" lvl="0"><number>&lsqb;0653&rsqb;</number> REFID is a unique identifier assigned by the Gate Controller, which will appear in all the Billing Records. The REFID is intended to be unique within a period of several months. </paragraph>
<paragraph id="P-0654" lvl="0"><number>&lsqb;0654&rsqb;</number> BILLDATA is the billing/accounting data indicating the charging arrangement for this conversation. </paragraph>
<paragraph id="P-0655" lvl="0"><number>&lsqb;0655&rsqb;</number> CINFO is a string generated by a Gate Controller that contains all the information needed for future enhanced services that may involve that BTI. This will be encrypted and given to the other BTI to store. The format is a list of many items separated by slashes, or which the first is the ip address and port of the Gate Controller that built the string. Subsequent items in this string include the address/port of the Edge Router, gate identifier, signaling endpoint address, data endpoint address, the destination&apos;s call reference value, and the destination&apos;s address for initial call signaling. </paragraph>
<paragraph id="P-0656" lvl="0"><number>&lsqb;0656&rsqb;</number> 7.9.3.1 GCSPLICE Acknowledgment </paragraph>
<paragraph id="P-0657" lvl="0"><number>&lsqb;0657&rsqb;</number> If the terminating Gate Controller is able to successfully process a GCSPLICE request, it responds with a GCSPLICEACK message. If the GCSPLICE request was of the first type above, a sample acknowledgement message is: </paragraph>
<paragraph id="P-0658" lvl="2"><number>&lsqb;0658&rsqb;</number> GCSPLICEACK 7T1019 v1.0; </paragraph>
<paragraph id="P-0659" lvl="0"><number>&lsqb;0659&rsqb;</number> If the GCSPLICE request was of the second type above, a sample acknowledgment message is: </paragraph>
<paragraph id="P-0660" lvl="2"><number>&lsqb;0660&rsqb;</number> GCSPLICEACK 7T1021 v1.0; </paragraph>
<paragraph id="P-0661" lvl="3"><number>&lsqb;0661&rsqb;</number> SIGADDR 135.207.22.1:6166; DATAADDR 135.207.22.1:6168 2 2; CODING 53B,6 ms,G.711; </paragraph>
<paragraph id="P-0662" lvl="3"><number>&lsqb;0662&rsqb;</number> REMGATEIP 135.207.22.1:7682; REMGATEID 5S71731; CRV 8839; REFID 135.207.31.2:26124C90:7224; </paragraph>
<paragraph id="P-0663" lvl="3"><number>&lsqb;0663&rsqb;</number> BILLDATA 6010-0203-0456-7890/9733608720/9733608766; </paragraph>
<paragraph id="P-0664" lvl="3"><number>&lsqb;0664&rsqb;</number> CINFO </paragraph>
<paragraph id="P-0665" lvl="3"><number>&lsqb;0665&rsqb;</number> 135.207.31.2:7650/135.207.22.1:7682/5S71731/10.3.7.150:7685/10.3.7.150:7000-2-2/9733608720/8839/10.3.7.150:7685 </paragraph>
<paragraph id="P-0666" lvl="0"><number>&lsqb;0666&rsqb;</number> SIGADDR is the IP address and port number the first endpoint should use for BTI-BTI signaling messages. This is a global version of the address given in the SETUP/SETUPACK message from the second endpoint BTI, with name to ip-address translation done, and with any NAT/PAT server translation included. </paragraph>
<paragraph id="P-0667" lvl="0"><number>&lsqb;0667&rsqb;</number> DATAADDR is the IP address and port number the first endpoint should use for data packets. This is a global version of the address given in the SETUP/SETUPACK message from the second endpoint BTI, with name and ip-address translation done, and with any NAT/PAT server translation included. The second and third parameters (optional) in this element give the number of consecutive ports used, and the alignment information needed for the starting port number. </paragraph>
<paragraph id="P-0668" lvl="0"><number>&lsqb;0668&rsqb;</number> REMGATEIP is the IP address and port number of the Edge Router that contains the gate to be used at the second BTI&apos;s end for this conversation. This is the destination address for all ER-ER communication. </paragraph>
<paragraph id="P-0669" lvl="0"><number>&lsqb;0669&rsqb;</number> REMGATEID is the gate identifier and security code for the gate within that Edge Router. </paragraph>
<paragraph id="P-0670" lvl="0"><number>&lsqb;0670&rsqb;</number> CODING is the encapsulation method and coding style accepted by the second BTI. </paragraph>
<paragraph id="P-0671" lvl="0"><number>&lsqb;0671&rsqb;</number> REFID (optional) is a unique identifier assigned by the Gate Controller, which will appear in all the Billing Records. The REFID is intended to be unique within a period of several months. If this parameter appears, it will override the REFID assigned by the originating Gate Controller </paragraph>
<paragraph id="P-0672" lvl="0"><number>&lsqb;0672&rsqb;</number> BILLDATA (optional) is the billing/accounting data indicating the charging arrangement for this conversation. If this parameter appears, it will override the BILLDATA assigned by the originating Gate Controller. </paragraph>
<paragraph id="P-0673" lvl="0"><number>&lsqb;0673&rsqb;</number> CINFO is a string generated by a Gate Controller that contains all the information needed for future enhanced services that may involve that BTI. This will be encrypted and given to the other BTI to store. The format is a list of many items separated by slashes, or which the first is the ip address and port of the Gate Controller that built the string. Subsequent items in this string include the address/port of the Edge Router, gate identifier, signaling endpoint address, data endpoint address, the destination&apos;s call reference value, and the destination&apos;s address for initial call signaling. </paragraph>
<paragraph id="P-0674" lvl="7"><number>&lsqb;0674&rsqb;</number> 7.9.3.2 GCSPLICE Error </paragraph>
<paragraph id="P-0675" lvl="0"><number>&lsqb;0675&rsqb;</number> If the terminating Gate Controller encounters an error while completing a splice request, it responds to the originating Gate Controller with a GCSPLICENAK message. A sample message is: </paragraph>
<paragraph id="P-0676" lvl="2"><number>&lsqb;0676&rsqb;</number> GCSPLICENAK 4T93177 v1.0; ERROR No gates available </paragraph>
<paragraph id="P-0677" lvl="0"><number>&lsqb;0677&rsqb;</number> ERROR gives an error message string, which could be displayed if the Gate Controller has some method to do so, and can be passed back to the BTI in a NAK message. </paragraph>
<paragraph id="P-0678" lvl="0"><number>&lsqb;0678&rsqb;</number> Other elements in the message are TBD. </paragraph>
<paragraph id="P-0679" lvl="7"><number>&lsqb;0679&rsqb;</number> 7.10 Edge Router to Billing Event Collector </paragraph>
<paragraph id="P-0680" lvl="0"><number>&lsqb;0680&rsqb;</number> Messages sent by the Edge Router include CALLSTART, CALLEND, and CALLPARTIALEND. These messages are sent over a reliable transport mechanism, such as TCP/IP, which performs all of the flow control and error control needed to ensure the reliable receipt of the messages at the Billing Event Collector. The format of the messages is slightly different than other messages, since they are not transaction based. </paragraph>
<paragraph id="P-0681" lvl="0"><number>&lsqb;0681&rsqb;</number> These messages must also include a timestamp. It is assumed here that the timestamp will be added by the Billing Event Collector, who will perform its function in real-time. If, however, the Edge Routers are expected to accumulate event records for some longer period of time and send them in a burst, then the Edge Router will need to record the time of each event and the messages must include that information as well. </paragraph>
<paragraph id="P-0682" lvl="7"><number>&lsqb;0682&rsqb;</number> 7.10.1 CALLSTART </paragraph>
<paragraph id="P-0683" lvl="0"><number>&lsqb;0683&rsqb;</number> Whenever an Edge Router allocates resources for a gate, it issues a CALLSTART event record to the Billing Event Recorder. A sample message is: </paragraph>
<paragraph id="P-0684" lvl="2"><number>&lsqb;0684&rsqb;</number> CALLSTART 135.207.31.2:36123E5C:93178 5123-4567-8900/9733608718/8733608766 53B,6 ms </paragraph>
<paragraph id="P-0685" lvl="0"><number>&lsqb;0685&rsqb;</number> The parameters to this message are: </paragraph>
<paragraph id="P-0686" lvl="2"><number>&lsqb;0686&rsqb;</number> 1) The unique reference ID for this call, which will be common in all billing records related to the call </paragraph>
<paragraph id="P-0687" lvl="2"><number>&lsqb;0687&rsqb;</number> 2) The billing data for this call, which consists of multiple sets of three items: </paragraph>
<paragraph id="P-0688" lvl="3"><number>&lsqb;0688&rsqb;</number> a) the account number to be charged for the call </paragraph>
<paragraph id="P-0689" lvl="3"><number>&lsqb;0689&rsqb;</number> b) the source E. 164 number for the call </paragraph>
<paragraph id="P-0690" lvl="3"><number>&lsqb;0690&rsqb;</number> c) the termination E. 164 number for the call </paragraph>
<paragraph id="P-0691" lvl="3"><number>&lsqb;0691&rsqb;</number> d) the above three fields repeated as needed for multiple call segment </paragraph>
<paragraph id="P-0692" lvl="2"><number>&lsqb;0692&rsqb;</number> 3) The bandwidth resources used by this call. </paragraph>
<paragraph id="P-0693" lvl="7"><number>&lsqb;0693&rsqb;</number> 7.10.2 CALLEND </paragraph>
<paragraph id="P-0694" lvl="0"><number>&lsqb;0694&rsqb;</number> Whenever an Edge Router releases resources for a gate, it issues a CALLEND event record to the Billing Event Recorder. Note that this does not occur when a call is placed on HOLD, since the resources are still reserved for future use. A sample message is: </paragraph>
<paragraph id="P-0695" lvl="2"><number>&lsqb;0695&rsqb;</number> CALLEND 135.207.31.2:36123E5C:93178 5123-4567-8900/9733608718/8733608766 53B,6 ms </paragraph>
<paragraph id="P-0696" lvl="0"><number>&lsqb;0696&rsqb;</number> The parameters to this message are: </paragraph>
<paragraph id="P-0697" lvl="2"><number>&lsqb;0697&rsqb;</number> 1) The unique reference ID for this call, which will be common in all billing records related to the call </paragraph>
<paragraph id="P-0698" lvl="2"><number>&lsqb;0698&rsqb;</number> 2) The billing data for this call, which consists of multiple sets of three items: </paragraph>
<paragraph id="P-0699" lvl="3"><number>&lsqb;0699&rsqb;</number> a) the account number to be charged for the call </paragraph>
<paragraph id="P-0700" lvl="3"><number>&lsqb;0700&rsqb;</number> b) the source E.164 number for the call </paragraph>
<paragraph id="P-0701" lvl="3"><number>&lsqb;0701&rsqb;</number> c) the termination E. 164 number for the call </paragraph>
<paragraph id="P-0702" lvl="3"><number>&lsqb;0702&rsqb;</number> d) the above three fields repeated as needed for multiple call segment </paragraph>
<paragraph id="P-0703" lvl="2"><number>&lsqb;0703&rsqb;</number> 3) The bandwidth resources used by this call. </paragraph>
<paragraph id="P-0704" lvl="7"><number>&lsqb;0704&rsqb;</number> 7.10.3 CALLPARTIALEND </paragraph>
<paragraph id="P-0705" lvl="0"><number>&lsqb;0705&rsqb;</number> Whenever an Edge Router is instructed by a Gate Controller to releases resources at one end of a conversation, but told not to coordinate with the remote gate and release all the resources at both ends, it issues a CALLPARTIALEND event record to the Billing Event Recorder. A sample message is: </paragraph>
<paragraph id="P-0706" lvl="2"><number>&lsqb;0706&rsqb;</number> CALLPARTIALEND 135.207.31.2:36123 E5C:93178 5123-4567-8900/9733608718/8733608766 53B,6 ms </paragraph>
<paragraph id="P-0707" lvl="0"><number>&lsqb;0707&rsqb;</number> The parameters to this message are: </paragraph>
<paragraph id="P-0708" lvl="2"><number>&lsqb;0708&rsqb;</number> 1) The unique reference ID for this call, which will be common in all billing records related to the call </paragraph>
<paragraph id="P-0709" lvl="2"><number>&lsqb;0709&rsqb;</number> 2) The billing data for this call, which consists of multiple sets of three items: </paragraph>
<paragraph id="P-0710" lvl="3"><number>&lsqb;0710&rsqb;</number> a) the account number to be charged for the call </paragraph>
<paragraph id="P-0711" lvl="3"><number>&lsqb;0711&rsqb;</number> b) the source E.164 number for the call </paragraph>
<paragraph id="P-0712" lvl="3"><number>&lsqb;0712&rsqb;</number> c) the termination E.164 number for the call </paragraph>
<paragraph id="P-0713" lvl="3"><number>&lsqb;0713&rsqb;</number> d) the above three fields repeated as needed for multiple call segment </paragraph>
<paragraph id="P-0714" lvl="2"><number>&lsqb;0714&rsqb;</number> 3) The bandwidth resources used by this call. </paragraph>
<paragraph id="P-0715" lvl="7"><number>&lsqb;0715&rsqb;</number> 7.11 Gate Controller to NAT/PAT Server </paragraph>
<paragraph id="P-0716" lvl="0"><number>&lsqb;0716&rsqb;</number> Messages sent by the Gate Controller include NATENQ, and NATSETUP. </paragraph>
<paragraph id="P-0717" lvl="0"><number>&lsqb;0717&rsqb;</number> Inquiry messages to the NAT/PAT server have a common structure for message element names. The first letter of the type name is either &ldquo;L&rdquo; or &ldquo;G&rdquo;, indicating a request about a local or global address. The last portion of the type name is a number, which is used by the sender to match up responses with the requests. For example, a request message with a parameter GADDR3 will give a response with a parameter LADDR3, and a request message with a parameter LADDR7 will give a response with a parameter GADDR7. There is no requirement that the digit sequences in parameter names by consecutive, but they must be unique within the message. </paragraph>
<paragraph id="P-0718" lvl="7"><number>&lsqb;0718&rsqb;</number> 7.11.1 NATENQ </paragraph>
<paragraph id="P-0719" lvl="0"><number>&lsqb;0719&rsqb;</number> A NATENQ message is sent by the Gate Controller to the NAT server to inquire about a possible entry in the translation tables, but without creating an entry if none currently exists. </paragraph>
<paragraph id="P-0720" lvl="0"><number>&lsqb;0720&rsqb;</number> A sample message is: </paragraph>
<paragraph id="P-0721" lvl="2"><number>&lsqb;0721&rsqb;</number> NATENQ 4T93174 v1.0; LADDR1 10.0.12.221:7685 </paragraph>
<paragraph id="P-0722" lvl="0"><number>&lsqb;0722&rsqb;</number> LADDRx/GADDRx is the locauglobal address and port number that the Gate Controller is asking about. </paragraph>
<paragraph id="P-0723" lvl="7"><number>&lsqb;0723&rsqb;</number> 7.11.1.1 NATENQ Acknowledgment </paragraph>
<paragraph id="P-0724" lvl="0"><number>&lsqb;0724&rsqb;</number> The response to a NATENQ message gives the translations found in the tables for the specified addresses. If no entry was found, its element is not present in the response message. A sample NATENQACK message is: </paragraph>
<paragraph id="P-0725" lvl="2"><number>&lsqb;0725&rsqb;</number> NATENQACK 4T93174 v1.0; GADDR1 135.207.31.1:6000 </paragraph>
<paragraph id="P-0726" lvl="0"><number>&lsqb;0726&rsqb;</number> GADDRx/GADDRx is the global/local address and port number that the Gate Controller is asking about. </paragraph>
<paragraph id="P-0727" lvl="7"><number>&lsqb;0727&rsqb;</number> 7.11.1.2 NATENQ Error </paragraph>
<paragraph id="P-0728" lvl="0"><number>&lsqb;0728&rsqb;</number> The only anticipated error that can occur in a NATENQ message is that the server does not perform a NAT/PAT function, and therefore does not recognize the request. A sample error response is: </paragraph>
<paragraph id="P-0729" lvl="2"><number>&lsqb;0729&rsqb;</number> NATENQNAK 4T93174 v1.0; ERROR Unrecognized request </paragraph>
<paragraph id="P-0730" lvl="0"><number>&lsqb;0730&rsqb;</number> ERROR gives an error message string, which could be displayed if the Gate Controller has some method to do so. Otherwise it provides some useful debugging information. It can also be passed back as part of the error indication from the Gate Controller request. </paragraph>
<paragraph id="P-0731" lvl="0"><number>&lsqb;0731&rsqb;</number> Other elements in the NATENQNAK message are TBD. </paragraph>
<paragraph id="P-0732" lvl="7"><number>&lsqb;0732&rsqb;</number> 7.11.2 NATSETUP </paragraph>
<paragraph id="P-0733" lvl="0"><number>&lsqb;0733&rsqb;</number> A NATSETUP message is sent by the Gate Controller to the NAT server to create entries in the translation tables. A sample message is: </paragraph>
<paragraph id="P-0734" lvl="2"><number>&lsqb;0734&rsqb;</number> NATSETUP 4T93175 v1.0; LADDR1 10.0.12.221:7685; LADDR2 10.0.12.221:7000 2 2 </paragraph>
<paragraph id="P-0735" lvl="0"><number>&lsqb;0735&rsqb;</number> LADDRx/GADDRx is the local/global address and port number that the Gate Controller desires entries to be established in the translation table. The second parameter, if present, gives the number of consecutive ports requested. The third parameter, if present, gives any alignment restrictions on the port number assigned. </paragraph>
<paragraph id="P-0736" lvl="7"><number>&lsqb;0736&rsqb;</number> 7.11.2.1 NATSETUP Acknowledgment </paragraph>
<paragraph id="P-0737" lvl="0"><number>&lsqb;0737&rsqb;</number> The response to a NATSETUP message gives the translation entries either found or established in the translation tables. A sample NATSETUPACK message is: </paragraph>
<paragraph id="P-0738" lvl="2"><number>&lsqb;0738&rsqb;</number> NATSETUPACK 4T93175 v1.0; GADDR1 135.207.31.1:6000; GADDR2 135.207.31.1:6002 2 </paragraph>
<paragraph id="P-0739" lvl="0"><number>&lsqb;0739&rsqb;</number> GADDRx/GADDRx is the global/local address and port number that the Gate Controller asked to be established. The second parameter (if present) indicates the number of consecutive ports assigned. </paragraph>
<paragraph id="P-0740" lvl="7"><number>&lsqb;0740&rsqb;</number> 7.11.2.2 NATSETUP Error </paragraph>
<paragraph id="P-0741" lvl="0"><number>&lsqb;0741&rsqb;</number> Any error encountered while creating NAT/PAT entries will result in a NATSETUPNAK message. A sample error response is: </paragraph>
<paragraph id="P-0742" lvl="2"><number>&lsqb;0742&rsqb;</number> NATSETUPNAK 4T93175 v1.0; ERROR Translation table full </paragraph>
<paragraph id="P-0743" lvl="0"><number>&lsqb;0743&rsqb;</number> ERROR gives an error message string, which could be displayed if the Gate Controller has some method to do so. Otherwise it provides some useful debugging information. It can also be passed back as part of the error indication from the Gate Controller request. </paragraph>
<paragraph id="P-0744" lvl="0"><number>&lsqb;0744&rsqb;</number> Other elements in the NATSETUPNAK message are TBD. </paragraph>
<paragraph id="P-0745" lvl="7"><number>&lsqb;0745&rsqb;</number> 7.12 NAT/PAT Server to Gate Controller </paragraph>
<paragraph id="P-0746" lvl="0"><number>&lsqb;0746&rsqb;</number> No messages are initiated by the NAT/PAT server. </paragraph>
<paragraph id="P-0747" lvl="7"><number>&lsqb;0747&rsqb;</number> 8 Signaling Architecture Call Flows </paragraph>
<paragraph id="P-0748" lvl="0"><number>&lsqb;0748&rsqb;</number> In this section call flows are presented to show the signaling exchange for both basic telephony services as well as many CLASS and Custom Calling features. </paragraph>
<paragraph id="P-0749" lvl="7"><number>&lsqb;0749&rsqb;</number> 8.1 Call Flow Terminology </paragraph>
<paragraph id="P-0750" lvl="0"><number>&lsqb;0750&rsqb;</number> The following terminology describes signaling call flows that can be used by embodiments of the present invention. Symbols are used to represent parties involved in the call flow (e.g. Gate Controllers) and information that is exchanged (e.g. Call Parameters). Each of these is often followed by a subscript indicating which one specifically is being referenced. Common subscripts are O for originating, T for terminating, F for forwarding, B for bridging, and TR for transferring. For example, in a simple telephone conversation, BTI<highlight><subscript>O </subscript></highlight>refers to the originating BTI, and BTI<highlight><subscript>T </subscript></highlight>to the terminating BTI, and similarly for E.164<highlight><subscript>T</subscript></highlight>, ER<highlight><subscript>O</subscript></highlight>, ER<highlight><subscript>T</subscript></highlight>, GC<highlight><subscript>O</subscript></highlight>, GC<highlight><subscript>T</subscript></highlight>, etc. </paragraph>
<paragraph id="P-0751" lvl="0"><number>&lsqb;0751&rsqb;</number> All the messages and parameters are described in detail in the next section. </paragraph>
<paragraph id="P-0752" lvl="7"><number>&lsqb;0752&rsqb;</number> Call Flow Symbols: </paragraph>
<paragraph id="P-0753" lvl="2"><number>&lsqb;0753&rsqb;</number> BTI&mdash;Broadband Telephony Interface&mdash;or a telephony-equipped cable modem </paragraph>
<paragraph id="P-0754" lvl="2"><number>&lsqb;0754&rsqb;</number> ER&mdash;Edge Router: Cable modem termination system that serves the BTI </paragraph>
<paragraph id="P-0755" lvl="2"><number>&lsqb;0755&rsqb;</number> GID&mdash;Gate ID: Identification of the &ldquo;gate&rdquo; within the edge router assigned to this call. </paragraph>
<paragraph id="P-0756" lvl="2"><number>&lsqb;0756&rsqb;</number> GC&mdash;Gate Controller that serves the BTI </paragraph>
<paragraph id="P-0757" lvl="2"><number>&lsqb;0757&rsqb;</number> CI&mdash;Call Information: Information about the call through the network. This information includes the E. 164 address, the IP address of the BTI, the IP address of the serving Gate Controller, the IP address of the serving ER, and the GID of the gate in the ER. </paragraph>
<paragraph id="P-0758" lvl="2"><number>&lsqb;0758&rsqb;</number> &lsqb;CI&rsqb;(GC)&mdash;Encrypted information about the BTI that is given to others outside the network to store. It is signed and encrypted by the Gate Controller indicated. </paragraph>
<paragraph id="P-0759" lvl="2"><number>&lsqb;0759&rsqb;</number> BID&mdash;Billing ID: Identifier of the call for billing purposes; intended to be unique not only within the entire network, but to not be reused for a significant period of time. Both Edge routers involved in a call report this identifier in the call detail records. </paragraph>
<paragraph id="P-0760" lvl="2"><number>&lsqb;0760&rsqb;</number> TID&mdash;Transaction ID: Identifier of a message; indended to only be locally unique for the duration of a message/response transaction. </paragraph>
<paragraph id="P-0761" lvl="2"><number>&lsqb;0761&rsqb;</number> E.164&mdash;Telephone number </paragraph>
<paragraph id="P-0762" lvl="2"><number>&lsqb;0762&rsqb;</number> CN&mdash;Directory name of caller </paragraph>
<paragraph id="P-0763" lvl="2"><number>&lsqb;0763&rsqb;</number> LA&mdash;local IP address (set when BTI powers on) </paragraph>
<paragraph id="P-0764" lvl="2"><number>&lsqb;0764&rsqb;</number> GA&mdash;global IP address (set via NAT when BTI begins a session) </paragraph>
<paragraph id="P-0765" lvl="2"><number>&lsqb;0765&rsqb;</number> PN&mdash;Port number used by BTIs for a particular connection </paragraph>
<paragraph id="P-0766" lvl="2"><number>&lsqb;0766&rsqb;</number> Al&mdash;Authentication Information, single string per subscriber, common across all lines served by one BTI. This string is signed and encrypted by a network server, and is verified by Gate Controllers for every transaction. </paragraph>
<paragraph id="P-0767" lvl="2"><number>&lsqb;0767&rsqb;</number> $&mdash;call accounting information, such as customer account number, to be included in billing information for the current call. Given to ER as part of the permission to open gate. In some cases, e.g. call forwarding, two separate account numbers will be included to indicate a split charging arrangement for the call. In addition to charging information, accounting information includes parameters that place bounds on the call that is to be established. Some parameters may include maximum call duration and transmission priority. </paragraph>
<paragraph id="P-0768" lvl="2"><number>&lsqb;0768&rsqb;</number> CP&mdash;Call parameters (e.g. compression standard) for this call. CPO are the parameters offered by the call originator, CPT are those accepted by the terminating system. </paragraph>
<paragraph id="P-0769" lvl="2"><number>&lsqb;0769&rsqb;</number> o&mdash;indicates that network address translation is done in the ER </paragraph>
<paragraph id="P-0770" lvl="2"><number>&lsqb;0770&rsqb;</number> ANN-INFO&mdash;Announcement Information: Parameter indicating to an announcement server which announcement to play. </paragraph>
<paragraph id="P-0771" lvl="2"><number>&lsqb;0771&rsqb;</number> CF&mdash;Flag that indicates call forwarding on all calls or busy is active. </paragraph>
<paragraph id="P-0772" lvl="2"><number>&lsqb;0772&rsqb;</number> T&mdash;Flag that indicates call transfer is active. </paragraph>
<paragraph id="P-0773" lvl="2"><number>&lsqb;0773&rsqb;</number> CTOR&mdash;Cut Through On Release Flag: Indicates that the Edge Router should cut through the call in the receive direction when the BTI reserves the bandwidth. </paragraph>
<paragraph id="P-0774" lvl="7"><number>&lsqb;0774&rsqb;</number> SGCP Parameters: </paragraph>
<paragraph id="P-0775" lvl="2"><number>&lsqb;0775&rsqb;</number> S-R&mdash;SGCP parameter indicating a connection should be opened in both the send and receive directions. </paragraph>
<paragraph id="P-0776" lvl="2"><number>&lsqb;0776&rsqb;</number> S-NR&mdash;SGCP parameter indicating a connection should be opened only in the send (upstream) direction. </paragraph>
<paragraph id="P-0777" lvl="2"><number>&lsqb;0777&rsqb;</number> NS-R&mdash;SGCP parameter indicating a connection should be opened in only the receive (downstream) direction. </paragraph>
<paragraph id="P-0778" lvl="7"><number>&lsqb;0778&rsqb;</number> SS7 Symbols: </paragraph>
<paragraph id="P-0779" lvl="2"><number>&lsqb;0779&rsqb;</number> IAM&mdash;Initial Address Message </paragraph>
<paragraph id="P-0780" lvl="2"><number>&lsqb;0780&rsqb;</number> ACM&mdash;Address Complete Message </paragraph>
<paragraph id="P-0781" lvl="2"><number>&lsqb;0781&rsqb;</number> E-ACM&mdash;Early Address Complete Message </paragraph>
<paragraph id="P-0782" lvl="2"><number>&lsqb;0782&rsqb;</number> ANM&mdash;Answer Message </paragraph>
<paragraph id="P-0783" lvl="2"><number>&lsqb;0783&rsqb;</number> REL&mdash;Release Message </paragraph>
<paragraph id="P-0784" lvl="2"><number>&lsqb;0784&rsqb;</number> RLC&mdash;Release Complete Message </paragraph>
<paragraph id="P-0785" lvl="2"><number>&lsqb;0785&rsqb;</number> SUS&mdash;Suspend Message </paragraph>
<paragraph id="P-0786" lvl="2"><number>&lsqb;0786&rsqb;</number> RES&mdash;Resume Message </paragraph>
<paragraph id="P-0787" lvl="7"><number>&lsqb;0787&rsqb;</number> 8.2 Basic Call Flows </paragraph>
<paragraph id="P-0788" lvl="7"><number>&lsqb;0788&rsqb;</number> 8.2.1 Connect </paragraph>
<paragraph id="P-0789" lvl="0"><number>&lsqb;0789&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows the call flow for a normal call setup. Call setup involves establishing an IP signaling and bearer channel between BTIs across a packet network. The signaling channel uses &ldquo;better than best effort&rdquo; IP transmission across the network. Signaling reliability is ensured within the application. In the access portion of the network (between the edge router &lsqb;ER&rsqb; and the BTI), the bearer channel uses an &ldquo;unsolicited grant&rdquo; as defined by the MCNS v1.1 to maintain a constant bit rate channel. The ER &ldquo;colors&rdquo; the &ldquo;high QoS&rdquo; bearer channel packets to give them higher priority than &ldquo;best-effort QoS&rdquo; packets over the backbone portion of the network (between the ERs). </paragraph>
<paragraph id="P-0790" lvl="0"><number>&lsqb;0790&rsqb;</number> Some of the aspects of the basic Connect call flow are: </paragraph>
<paragraph id="P-0791" lvl="2"><number>&lsqb;0791&rsqb;</number> Digit Collection&mdash;The BTI<highlight><subscript>o </subscript></highlight>needs to recognize when a complete telephone number is dialed so it can package the number in a SETUP message and send it on to GCo for translation. </paragraph>
<paragraph id="P-0792" lvl="2"><number>&lsqb;0792&rsqb;</number> Network Address Translation (NAT) for the Originating BTI&mdash;The ER does network address translation between local (Net10) addresses for each of the BTIs and global addresses. Each ER is assigned a set of global addresses. The ER assigns a global address to a BTI when the BTI attempts to communicate outside of its local area, or when a Gate Controller requests that a global address be assigned toaBTI. </paragraph>
<paragraph id="P-0793" lvl="2"><number>&lsqb;0793&rsqb;</number> BTI Authentication&mdash;GC<highlight><subscript>O </subscript></highlight>authenticates the BTI upon receipt of a SETUP message. </paragraph>
<paragraph id="P-0794" lvl="0"><number>&lsqb;0794&rsqb;</number> The Authentication Information (AI) needs to be provisioned in the BTI at BTI registration. GC<highlight><subscript>O </subscript></highlight>also performs service-specific admission control. For instance, if a Gate Controller knew that a specific destination area was overloaded with traffic, it could block a call setup. </paragraph>
<paragraph id="P-0795" lvl="2"><number>&lsqb;0795&rsqb;</number> Gate Allocation&mdash;GC<highlight><subscript>O </subscript></highlight>requests a gate be allocated in ER<highlight><subscript>O </subscript></highlight>for this call. ER<highlight><subscript>O </subscript></highlight>replies with a Gate ID (GID<highlight><subscript>O</subscript></highlight>) to be used for the call. GC<highlight><subscript>O </subscript></highlight>adds this information to the Call Information (CI<highlight><subscript>O</subscript></highlight>) record for this call. </paragraph>
<paragraph id="P-0796" lvl="2"><number>&lsqb;0796&rsqb;</number> Billing Identifier (BID)&mdash;While processing an initial call attempt, the Gate Controller assigns a globally unique Billing Identifier (BID) to the call. Such a unique identifier could be, for example, the IP address of the Gate Controller, followed by a timestamp, followed by a call sequence number. It is intended that this identifier be unique over several billing cycles, and enable the billing system to correctly match all records related to a single call. </paragraph>
<paragraph id="P-0797" lvl="2"><number>&lsqb;0797&rsqb;</number> Number Translation&mdash;The E.164<highlight><subscript>T </subscript></highlight>address is translated by the Gate Controllers to the local IP address of the terminating BTI and the terminating ER. If GC<highlight><subscript>O </subscript></highlight>cannot translate the E.164<highlight><subscript>T </subscript></highlight>address on its own, it identifies a Gate Controller (GCT) that can do the translation. GC<highlight><subscript>O </subscript></highlight>sends the GCSETUP message, with additional information in it, on to GCT for processing. This simplifies the security of the ER, in that it only accepts commands from a small group of well-known Gate Controllers. </paragraph>
<paragraph id="P-0798" lvl="2"><number>&lsqb;0798&rsqb;</number> Accounting Information ($)&mdash;In addition to charging information (e.g. account number), accounting information includes parameters that place bounds on the call that is to be established. Some parameters may include maximum call duration and transmission priority. In several situations involving call forwarding, the charging for the call will be split among two or more subscribers. Thus the &ldquo;$&rdquo; parameter in messages may contain several account codes with information as to the proper allocation of charges to each. </paragraph>
<paragraph id="P-0799" lvl="2"><number>&lsqb;0799&rsqb;</number> &ldquo;Opening The Gate&rdquo;&mdash;The Gate Controller gives permission for an ER to allow a BTI to set up an &ldquo;unsolicited grant&rdquo;. The ER also &ldquo;colors&rdquo; the bearer-channel packets so they have &ldquo;high-QoS&rdquo; to a specific destination address. If an ER does not receive the permission to &ldquo;open the gate&rdquo; for high-priority packets, it does not allow the unsolicited grant or the high-priority packets. This permission is based on a specific source IP address and a specific destination IP address, and bounds on the resources the endpoints can use. The account information ($) in the gate setup message to the ER provides the bounds on these resources. </paragraph>
<paragraph id="P-0800" lvl="2"><number>&lsqb;0800&rsqb;</number> Call Information (CI<highlight><subscript>O </subscript></highlight>and CI<highlight><subscript>T</subscript></highlight>)&mdash;information about a BTI, including its E.164 address, its Gate Controller&apos;s address, its ER&apos;s address, and the GID within the ER. Each endpoint of a call receives this information about the other endpoint, signed and encrypted by the local Gate Controller to prevent unauthorized disclosure or tampering by the BTI. This call information is used later for Call Trace (*57), Call Return (*69), and in setting up Three-Way Calling. </paragraph>
<paragraph id="P-0801" lvl="2"><number>&lsqb;0801&rsqb;</number> Capability Negotiation&mdash;The BTIs have the ability to negotiate Call Parameters (CP) (e.g. encoding) in the SETUP message exchange. If additional negotiation is needed, it can be accomplished before resource commitment is made. </paragraph>
<paragraph id="P-0802" lvl="2"><number>&lsqb;0802&rsqb;</number> Access Resource Reservation&mdash;An MCNS unsolicited grant protocol is used to reserve a constant bit rate channel in the access portion of the network. The access reservation comes in two parts, which is required for the telephony application. In first step, the &ldquo;reservation&rdquo; ensures the bandwidth will be available when needed, but does not actually assign the bandwidth nor does it &ldquo;open the gate.&rdquo; The reservation is obtained prior to ringing the destination telephone. Only when the destination user answers does the second step, the &ldquo;commitment,&rdquo; allocate the bandwidth and start the billing for the call. To protect resources, only a certain number of outstanding reservations are allowed per BTI. </paragraph>
<paragraph id="P-0803" lvl="2"><number>&lsqb;0803&rsqb;</number> Backbone Resource Reservation&mdash;DOSA allows for the possibility of a different backbone resource reservation protocol than that used for the access portion of the network. It is the job of the ER to process the access reservation message and translate it into the proper message sequence for backbone resources. When the ER acknowledges the reservation with an ACK message, it means that the access resources are available for the call and whatever backbone resources this CMTS needed to reserve to support the flow has been reserved. At this point it is safe to begin the ring phase. An example of backbone resource reservation is shown in Section 6.2.2. </paragraph>
<paragraph id="P-0804" lvl="2"><number>&lsqb;0804&rsqb;</number> Commit&mdash;This is the second step of the access reservation sequence. The commitment is made when an actual connection is to be made and billing is started. The ER and the network previously reserved the resources, and held them for this particular conversation. The ER emits a call-detail-record to the billing system at this time. </paragraph>
<paragraph id="P-0805" lvl="2"><number>&lsqb;0805&rsqb;</number> Gate Coordination&mdash;In order to avoid certain theft of service scenarios, the opening and closing of gates within the network needs to be coordinated between ERs. GATEOPEN is an ER to ER message indicating that the gate has opened on the far end of the call. Far end Call Parameters are passed to the BTI for it to check whether it agrees with the parameters that are in the far end gate. </paragraph>
<paragraph id="P-0806" lvl="7"><number>&lsqb;0806&rsqb;</number> 8.2.2 Backbone Reservation </paragraph>
<paragraph id="P-0807" lvl="0"><number>&lsqb;0807&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> shows an example signaling flow for reservation of resources in the segment of the network between the edge routers for a voice call. This is one potential model of backbone reservation; however, different approaches may achieve the same result. One principle that we desire to achieve is to separate the mechanism for access reservation from the backbone reservation. This leaves the BTI interaction with the ER independent of the backbone network between ERs. </paragraph>
<paragraph id="P-0808" lvl="0"><number>&lsqb;0808&rsqb;</number> We assume a model in which the resource reservation is initiated by a sender and only reserves resources for packets being generated by that sender i.e. reservations are unidirectional. This matches the forwarding model used in IP networks in which paths can be asymmetric. However, the RESERVE message used over the access network has different semantics: reserve bi -directional capacity over the access network. </paragraph>
<paragraph id="P-0809" lvl="0"><number>&lsqb;0809&rsqb;</number> Since, the end to end route between two edge routers may change during the duration of a call, we also assume that RESERVE messages are periodically transmitted from either end to refresh the reservation&mdash;this is not shown in the figure. The IP source address in the RESERVE message contains the source address of ER<highlight><subscript>O</subscript></highlight>. The IP destination address in the RESERVE message is that of BTI<highlight><subscript>T</subscript></highlight>. The reservation message identifies: GA<highlight><subscript>O </subscript></highlight>(BTI<highlight><subscript>O</subscript></highlight>&apos;s global IP address), PN<highlight><subscript>O </subscript></highlight>(BTI<highlight><subscript>O</subscript></highlight>&apos;s port number for this call), GA<highlight><subscript>T </subscript></highlight>(BTI<highlight><subscript>T</subscript></highlight>&apos;s global IP address), PN<highlight><subscript>T </subscript></highlight>(BTI<highlight><subscript>O</subscript></highlight>&apos;s port number for this call) as the owner of the reservation. After setting up the bidirectional access reservation, the ER sends a BACKBONERESERVE message through intermediate backbone routers towards BTI<highlight><subscript>T</subscript></highlight>. Routers that are incapable of processing the BACKBONERESERVE message forward them without any processing. </paragraph>
<paragraph id="P-0810" lvl="0"><number>&lsqb;0810&rsqb;</number> In this example, the receipt of the RESERVEACK to a BTI indicates that resources have been reserved in both the send and receive directions in the access channel, and in the send direction in the backbone. </paragraph>
<paragraph id="P-0811" lvl="7"><number>&lsqb;0811&rsqb;</number> 8.2.3 Disconnect </paragraph>
<paragraph id="P-0812" lvl="0"><number>&lsqb;0812&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows the call flow for a normal call termination. When a BTI detects on-hook, it sends an end-to-end HANGUP message to the other BTI and a RELEASE message to the ER. In response to the RELEASE command, the ER closes the gate and emits a CALLEND to the billing system that indicates the call has completed and that billing should stop. </paragraph>
<paragraph id="P-0813" lvl="0"><number>&lsqb;0813&rsqb;</number> Note that there are a number of error conditions that will cause this disconnect sequence, such as BTI failures, power failures, cable plant failures, and backbone network failures. In all cases, it is desirable to stop the billing at the end of the useful connection, and to not charge the customer for a (possibly lengthy) service outage. </paragraph>
<paragraph id="P-0814" lvl="7"><number>&lsqb;0814&rsqb;</number> 8.2.4 Calls Terminating in the PSTN </paragraph>
<paragraph id="P-0815" lvl="0"><number>&lsqb;0815&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows the call flow for a call originating from a BTI but terminating in the PSTN. In the call flow, GC<highlight><subscript>T </subscript></highlight>recognizes that E.164T terminates outside of the IP network. GC<highlight><subscript>T </subscript></highlight>identifies the appropriate SGW<highlight><subscript>T </subscript></highlight>and TGW<highlight><subscript>T</subscript></highlight>. GC<highlight><subscript>T </subscript></highlight>initiates a GATESETUP to ER<highlight><subscript>T </subscript></highlight>with the Cut Through On Reserve (CTOR) flag set to indicate that a one-way voice path from the PSTN to BTI<highlight><subscript>O </subscript></highlight>should be established once the reserve is requested. GC<highlight><subscript>T </subscript></highlight>then sends the SETUP to SGW<highlight><subscript>T</subscript></highlight>. SGW<highlight><subscript>T </subscript></highlight>allocates a trunk identified by the IP port number PNT on TGW<highlight><subscript>T </subscript></highlight>for the call. SGW<highlight><subscript>T </subscript></highlight>also looks at CP<highlight><subscript>O </subscript></highlight>to determine the call parameters that will be used for this call (CPT). </paragraph>
<paragraph id="P-0816" lvl="0"><number>&lsqb;0816&rsqb;</number> Upon receiving the SETUPACK from SGW<highlight><subscript>T</subscript></highlight>, GC<highlight><subscript>T </subscript></highlight>replies to GC<highlight><subscript>O</subscript></highlight>, including the CTOR flag. GC<highlight><subscript>O </subscript></highlight>sets up the gate on the originating end of the call including the CTOR flag indicating that ER<highlight><subscript>O</subscript></highlight>, should open the voice path toward BTI<highlight><subscript>O </subscript></highlight>on reserve. GC<highlight><subscript>O </subscript></highlight>also includes the CTOR flag on the SETUPACK message to BTI<highlight><subscript>O </subscript></highlight>so BTI<highlight><subscript>O </subscript></highlight>does not generate its own ringback, but uses the ringback from the far end of the network. If additional capability negotiation is needed, it can be done at this point. </paragraph>
<paragraph id="P-0817" lvl="0"><number>&lsqb;0817&rsqb;</number> Once the call parameters are known, SGW<highlight><subscript>T </subscript></highlight>uses the SGCP message CREATECONNECTION to inform TGW<highlight><subscript>T </subscript></highlight>about the potential call. Included in this message are all the parameters that TGW<highlight><subscript>T </subscript></highlight>needs to reserve the necessary bandwidth and to translate between the IP packets and the TDM trunk. Also included in this message is an SGCP NOTIFICATIONREQUEST, requesting TGW<highlight><subscript>T </subscript></highlight>to notify SGW<highlight><subscript>T </subscript></highlight>when the reservation is acknowledged by ER<highlight><subscript>T</subscript></highlight>. TGW<highlight><subscript>T </subscript></highlight>sends a reserve message requesting the appropriate QoS in the network for the call. The trunking gateway needs to send this reserve message (versus the SGW) since the reservation needs to be along the path of the bearer channel. Upon a successful reservation, TGW<highlight><subscript>T </subscript></highlight>sends the SGCP NOTIFY to SGW<highlight><subscript>T</subscript></highlight>. </paragraph>
<paragraph id="P-0818" lvl="0"><number>&lsqb;0818&rsqb;</number> Once SGW<highlight><subscript>T </subscript></highlight>receives both the RING message from BTI<highlight><subscript>O </subscript></highlight>and the NOTIFY from TGW<highlight><subscript>T</subscript></highlight>, SGW<highlight><subscript>T </subscript></highlight>sends the SS7 Initial Address Message (IAM) into the PSTN to set up the connection between TGW<highlight><subscript>T </subscript></highlight>and the ultimate destination. Upon receipt of the SS7 Address Complete Message (ACM), indicating that the destination phone is available and ringing, SGW<highlight><subscript>T </subscript></highlight>sends BTI<highlight><subscript>O </subscript></highlight>the RINGBACK message and BTI<highlight><subscript>O </subscript></highlight>plays ringback tone it is receiving from the network to the customer. </paragraph>
<paragraph id="P-0819" lvl="0"><number>&lsqb;0819&rsqb;</number> When the destination phone goes off-hook, an SS7 Answer Message (ANM) is received by SGW<highlight><subscript>T</subscript></highlight>. SGW<highlight><subscript>T </subscript></highlight>sends the CONNECT back to BTI<highlight><subscript>O </subscript></highlight>and uses the SGCP message MODIFYCONNECTION to indicate to TGW<highlight><subscript>T </subscript></highlight>that it needs to change the connection to a two-way connection, and send the COMMIT into the network to open the gate in both directions. </paragraph>
<paragraph id="P-0820" lvl="0"><number>&lsqb;0820&rsqb;</number> There are special cases when SS7 messages are received that cause the call flow to change. Some of these cases are described below: </paragraph>
<paragraph id="P-0821" lvl="2"><number>&lsqb;0821&rsqb;</number> Early Address Complete Message (E-ACM)&mdash;When an E-ACM message is received from the SS7 network instead of ACM, the voice connection needs to be established in both directions (send and receive). One example of how this is used by the PSTN is to indicate when an 800 call is being routed to an IVR system to determine where the call should be ultimately routed. After the call is routed and the far end answers, SGW<highlight><subscript>O </subscript></highlight>receives an ANM. </paragraph>
<paragraph id="P-0822" lvl="2"><number>&lsqb;0822&rsqb;</number> Busy&mdash;If either the PSTN network or the called party is busy, the SS7 network returns a busy indication with a cause code in response to the IAM. SGW<highlight><subscript>O </subscript></highlight>needs to send a BUSY message with a cause code in place of RINGBACK to BTI<highlight><subscript>O </subscript></highlight>so BTI<highlight><subscript>O </subscript></highlight>will play fast busy or slow busy to the customer. </paragraph>
<paragraph id="P-0823" lvl="7"><number>&lsqb;0823&rsqb;</number> 8.2.5 Calls Originating From The PSTN </paragraph>
<paragraph id="P-0824" lvl="0"><number>&lsqb;0824&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> shows the call flow for a call originating in the PSTN, but terminating in the IP telephony network. The IAM message is the first indication that a call is destined from the PSTN to a BTI. The IAM message is received by SGW<highlight><subscript>O </subscript></highlight>which subsequently sends a SETUP message to GC<highlight><subscript>O</subscript></highlight>. setup proceeds as normal through the IP network. The CTOR flag is not needed since ringback or terminating announcements will not be generated from the IP network. </paragraph>
<paragraph id="P-0825" lvl="0"><number>&lsqb;0825&rsqb;</number> The signaling flow is similar to when a call is destined for the PSTN (see previous section). SGCP messages are used between SGW<highlight><subscript>O </subscript></highlight>and TGW<highlight><subscript>O</subscript></highlight>. </paragraph>
<paragraph id="P-0826" lvl="7"><number>&lsqb;0826&rsqb;</number> 8.2.6 Call Release To The PSTN </paragraph>
<paragraph id="P-0827" lvl="0"><number>&lsqb;0827&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows the call flow for a normal release to the PSTN. This call flow assumes that the BTI originated the call. If the call originated in the PSTN, SGW<highlight><subscript>T </subscript></highlight>would send an SS7 Suspend (SUS) message. This indicates to the PSTN that the phone at the BTI went on-hook, but the call is not released until a timer expires (usually 14 seconds). If the phone goes off-hook before the timer expires, an SS7 Resume (RES) message is sent. </paragraph>
<paragraph id="P-0828" lvl="7"><number>&lsqb;0828&rsqb;</number> 8.2.7 Call Release From The PSTN </paragraph>
<paragraph id="P-0829" lvl="0"><number>&lsqb;0829&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> shows the call flow for a call released from the PSTN. The call flow assumes that the call originated in the PSTN. </paragraph>
<paragraph id="P-0830" lvl="7"><number>&lsqb;0830&rsqb;</number> 8.2.8 E911 Emergency Service </paragraph>
<paragraph id="P-0831" lvl="0"><number>&lsqb;0831&rsqb;</number> To support E911 emergency calls, GC<highlight><subscript>O </subscript></highlight>must route the call to the E911 call center associated with the calling number. The E911 call center may be reached via a gateway or may be an E911 call center that is supported on the packet network. The originating phone number and additional information can be obtained by having the E911 call center send a SETUPNACK message to GC<highlight><subscript>T </subscript></highlight>as in the call flows for caller ID/calling name delivery. Otherwise, the call flows for call setup are unchanged. </paragraph>
<paragraph id="P-0832" lvl="0"><number>&lsqb;0832&rsqb;</number> The BTI originating a 911 call must not disconnect the call when the user hangs up. This requires BTI<highlight><subscript>O </subscript></highlight>to detect that the dialed number is 911 and to alter its local hangup processing accordingly. </paragraph>
<paragraph id="P-0833" lvl="0"><number>&lsqb;0833&rsqb;</number> A call to an operator for assistance may be transferred by the operator to an E91 1 center. In this case, the gateway or end-system that the operator is connected to must send an end-to-end message to BTI<highlight><subscript>O </subscript></highlight>instructing it to alter its hangup processing. This message must be authenticated by BTI<highlight><subscript>O </subscript></highlight>as being sent by a trusted network entity before BTI<highlight><subscript>O </subscript></highlight>alters its hangup processing. Authentication is required so that an arbitrary endpoint cannot instruct a BTI to alter its hangup processing. </paragraph>
<paragraph id="P-0834" lvl="7"><number>&lsqb;0834&rsqb;</number> 8.2.9 Terminating Announcements </paragraph>
<paragraph id="P-0835" lvl="0"><number>&lsqb;0835&rsqb;</number> In some cases when a call cannot be completed, the customer hears a terminating announcement. Terminating announcement handling may be invoked when the dialed number has changed or cannot be translated, or as a result of a network resource limitation (e.g., &ldquo;trunk busy&rdquo;) or network problem. </paragraph>
<paragraph id="P-0836" lvl="0"><number>&lsqb;0836&rsqb;</number> Since the BTI contains processing and storage, common terminating announcements may be handled locally by the BTI in response to an error indication. For example, common messages such as &ldquo;The number you have dialed is not in service. Please check the number and dial again&rdquo; or the &ldquo;trunk busy&rdquo; signal may be stored locally in the BTI. In the first case, GC<highlight><subscript>O </subscript></highlight>returns an error message to BTI<highlight><subscript>O </subscript></highlight>indicating that the dialed number cannot be translated. In the second case, a router returns an error message to BTI<highlight><subscript>O </subscript></highlight>as a result of an admission control failure during the processing of a COMMIT message. The error messages indicate to BTI<highlight><subscript>O </subscript></highlight>which announcement should be played. </paragraph>
<paragraph id="P-0837" lvl="0"><number>&lsqb;0837&rsqb;</number> Some services require the announcement to be customized, perhaps based on the originating number, dialed number, time-of-day, or administrative controls. Thus, in general, announcements are a function of conditions known to the Gate Controller. In this case, there are two options for supporting terminating announcements. The Gate Controller may send the announcement to the BTI as a data message to be played out by the BTI. Alternatively, the BTI may connect to a terminating announcement server. These alternatives may also be used to support the common terminating announcements described above. </paragraph>
<paragraph id="P-0838" lvl="0"><number>&lsqb;0838&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> shows a call flowwhere the BTI connects to a terminating announcement server. </paragraph>
<paragraph id="P-0839" lvl="0"><number>&lsqb;0839&rsqb;</number> Terminating announcement handling may be invoked either by GC<highlight><subscript>O </subscript></highlight>or GCT in response to a SETUP message. The Gate Controller routes the call to a terminating announcement server and interacts with the server to control the announcement that it plays. The call accounting information (&ldquo;$&rdquo;) that is used for the call indicates that the call is not billed. </paragraph>
<paragraph id="P-0840" lvl="7"><number>&lsqb;0840&rsqb;</number> 8.2.10 CALEA Wiretapping </paragraph>
<paragraph id="P-0841" lvl="0"><number>&lsqb;0841&rsqb;</number> CALEA requires the ability to intercept (wiretap) calls from a subscriber line and to provide additional information associated with these calls, such as the dialed number, and the time and duration of the call. Given that the BTI is not considered to be a trusted device, support for CALEA wiretapping must be implemented within the network, and must not be detectable by any party participating in the call. Our solution to the problem requires the ER to be able to multicast information flowing from each party in the call to both the other party or parties, and an additional end-system or gateway (a &ldquo;wiretap server&rdquo;) that can deliver the bearer channel information to the authorities. This multicast capability requires every packet that matches a filter function to be routed to the wiretap server, in addition to being routed normally. The filter function is discussed below. </paragraph>
<paragraph id="P-0842" lvl="0"><number>&lsqb;0842&rsqb;</number> One proposed approach to the problem does not rely on per-connection processing in the ER to wiretap a line. In this approach, when the authorities ask that a line be wiretapped, an administrative system sends a message to the originating ER instructing it to multicast the bearer channel to the wiretap server. The filter specifies the local IP address of the BTI associated with the line that is being tapped, the address of the wiretap server, and it might additionally specify the port number associated with the bearer channel. However, since the port numbers associated with the bearer (voice) channel may be dynamically assigned by the originating and terminating BTI&apos;s, the administrative server is unable to specify this information. If the filter function does not contain the port number information, it would cause all packets associated with the BTI to be intercepted, which may not be desirable since these packets may include data packets that cannot legally be intercepted. Thus, this approach is possible in our architecture, but it may be desirable to have an approach that only intercepts the bearer channel without intercepting additional channels. </paragraph>
<paragraph id="P-0843" lvl="0"><number>&lsqb;0843&rsqb;</number> The preferred approach is to rely on the Gate Controller to support wiretapping. When the authorities ask that a line be tapped, the database record associated with the line is modified to indicate that the line should be tapped. When a SETUP message arrives at the Gate Controller (it may be either an originating Gate Controller or a terminating Gate Controller), the Gate Controller looks up the database record and notes that the line should be tapped. The Gate Controller sends a message containing the address of the wiretap server to the ER. This information may be included as part of the &ldquo;gate open&rdquo; message. </paragraph>
<paragraph id="P-0844" lvl="0"><number>&lsqb;0844&rsqb;</number> The Gate Controller also sends a message containing the dialed number to the wiretap server. The ER sends messages at the beginning and the end of the call to the wiretap server. These additional messages provide the additional information required by CALEA. In this solution, only new calls may be wiretapped. Calls that exist before the wiretapping information is provisioned in the GC will not be multicast to the wiretap server. </paragraph>
<paragraph id="P-0845" lvl="7"><number>&lsqb;0845&rsqb;</number> 8.2.11 Call Trace </paragraph>
<paragraph id="P-0846" lvl="0"><number>&lsqb;0846&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> shows the call flow for Call Trace. BTI<highlight><subscript>T </subscript></highlight>(the recipient of the call that needs to be traced) sends a single TRACE message to GC<highlight><subscript>T</subscript></highlight>, containing its own authentication information, and the connection information received from GC<highlight><subscript>T </subscript></highlight>for the most recent incoming call. GC<highlight><subscript>T </subscript></highlight>verifies the connection information (CI) by decrypting and checking the signature. If valid, the E.164 number contained within CI is reported to law enforcement, along with the identity of the customer making the report. </paragraph>
<paragraph id="P-0847" lvl="7"><number>&lsqb;0847&rsqb;</number> 8.2.12 Operator Break-In </paragraph>
<paragraph id="P-0848" lvl="0"><number>&lsqb;0848&rsqb;</number> Operator Break-In is a combination of the CALEA wiretapping described in Section 8.2.10 and Three-Way Calling described in Section 8.3.4. Call flows for operator break-in will be provided in future versions of this document. </paragraph>
<paragraph id="P-0849" lvl="7"><number>&lsqb;0849&rsqb;</number> 8.2.13 Operator Services </paragraph>
<paragraph id="P-0850" lvl="0"><number>&lsqb;0850&rsqb;</number> Operator services will initially be supported for IP phone customers by going through a PSTN Gateway. In the future, operator services may be on the IP network. </paragraph>
<paragraph id="P-0851" lvl="7"><number>&lsqb;0851&rsqb;</number> 8.2.14 Mid-Call Resource Change </paragraph>
<paragraph id="P-0852" lvl="0"><number>&lsqb;0852&rsqb;</number> In some cases, a call in progress may need to change the established call parameters. For instance, if a call is set up using a low-bit-rate compression (e.g. 16 kbps G.728) and after the call is answered the BTI detects a modem tone, the BTI needs to change the bearer channel to a non-compressed 64 kbps G.711 channel. <cross-reference target="DRAWINGS">FIG. 15</cross-reference> shows the call flow of how this can be accomplished. Gate Controllers do not need to be involved in a mid-call resource change as long as the account information the Gate Controller delivered to the ER during call set up is consistent with the resource change request. For example, if the BTI requests a channel with higher bandwidth or higher priority than the account information allows, the ER would deny the request. As with the normal call set up, there is a two step&mdash;Reserve then Commit&mdash;process for changing call parameters mid-call. </paragraph>
<paragraph id="P-0853" lvl="7"><number>&lsqb;0853&rsqb;</number> 8.3 Feature Call Flows </paragraph>
<paragraph id="P-0854" lvl="7"><number>&lsqb;0854&rsqb;</number> 8.3.1 Call Forwarding </paragraph>
<paragraph id="P-0855" lvl="0"><number>&lsqb;0855&rsqb;</number> Call Forwarding service allows a call destined for one E.164 address to be redirected to another E.164 address. The redirection may happen on all calls, only on busy, only on no answer, or on a combination of either busy or no-answer. Call Forwarding is a popular service, and is used by other services (e.g. voice mail) to redirect calls. If a BTI is unavailable and call forwarding is active, all calls destined for the BTI should be forwarded. </paragraph>
<paragraph id="P-0856" lvl="0"><number>&lsqb;0856&rsqb;</number> At least three parties are involved in all types of Call Forwarding service: </paragraph>
<paragraph id="P-0857" lvl="2"><number>&lsqb;0857&rsqb;</number> The Originating Location (BTI<highlight><subscript>O</subscript></highlight>)&mdash;the location that places the call to be forwarded. </paragraph>
<paragraph id="P-0858" lvl="2"><number>&lsqb;0858&rsqb;</number> The Terminating Location (BTI<highlight><subscript>T</subscript></highlight>)&mdash;the location that has Call Forwarding active. </paragraph>
<paragraph id="P-0859" lvl="2"><number>&lsqb;0859&rsqb;</number> The Forwarding Location (BTI<highlight><subscript>T</subscript></highlight>)&mdash;the location that the calls are being forwarded to. </paragraph>
<paragraph id="P-0860" lvl="0"><number>&lsqb;0860&rsqb;</number> Regardless of the type of Call Forwarding (All Calls, Busy, No Answer), the forwarding number may be specified by the customer on a per-use basis, or be pre-provisioned (specified when the customer signs up for Call Forwarding service). If the forwarding number is pre-provisioned, the BTI and the Gate Controller serving that customer stores the forwarding number. If the forwarding number is specified on a per-use basis, the customer dials a code (e.g. *72) and the forwarding number to activate Call Forwarding. </paragraph>
<paragraph id="P-0861" lvl="0"><number>&lsqb;0861&rsqb;</number> In all cases, the Originating Location must not receive the forwarding number. In the case of Call Forwarding&mdash;No Answer, the Originating Location may know that the call is being forwarded. </paragraph>
<paragraph id="P-0862" lvl="0"><number>&lsqb;0862&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> shows the call flow for activating a per-use Call Forwarding service. The BTI recognizes that the customer dialed the code to active Call Forwarding, and prompts the customer for the forwarding telephone number. This information is sent to the Gate Controller in a PROFILE message. The Gate Controller validates that the forwarding number maps to either a BTI that the Gate Controller knows or to another Gate Controller. The Gate Controller checks to make sure the customer subscribes to Call Forwarding service, and if so activates the service and stores the forwarding number for later use. </paragraph>
<paragraph id="P-0863" lvl="0"><number>&lsqb;0863&rsqb;</number> The following sections describe the call flows for each of the types of Call Forwarding service for both when the BTI is available and when the BTI is unavailable. </paragraph>
<paragraph id="P-0864" lvl="7"><number>&lsqb;0864&rsqb;</number> 8.3.1.1 Call Forwarding&mdash;All Calls </paragraph>
<paragraph id="P-0865" lvl="0"><number>&lsqb;0865&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 17</cross-reference> shows the call flow for Call Forwarding&mdash;All Calls when the BTI is available. The first part of the call flow is the same as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>: Connect Call Flow. When the SETUP message is received by the Terminating BTI, it recognizes that Call Forwarding&mdash;All Calls is active. It sends a special SETUPACK to the Terminating Gate Controller indicating that Call Forwarding is active. The Gate Controller recognizes the Call Forwarding response, closes the gate at the ER that it opened for this call (using the GATERELEASE message), and sends the forwarding number on to GC<highlight><subscript>O </subscript></highlight>along with account information so that the forwarded leg of the call can be billed to BTI<highlight><subscript>T</subscript></highlight>. The Originating Gate Controller sets up the call to the forwarding number as normal, except that billing information may be kept for both legs of the call. </paragraph>
<paragraph id="P-0866" lvl="0"><number>&lsqb;0866&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 18</cross-reference> shows the call flow for Call Forwarding&mdash;All Calls when the Terminating BTI is not available. In this case, GC<highlight><subscript>T </subscript></highlight>times out on the BTI<highlight><subscript>T </subscript></highlight>SETUP message. The GC<highlight><subscript>T </subscript></highlight>checks the customer profile and determines that Call Forwarding is active and proceeds as if it got a Call Forwarding response from BTI<highlight><subscript>T</subscript></highlight>. </paragraph>
<paragraph id="P-0867" lvl="7"><number>&lsqb;0867&rsqb;</number> 8.3.1.2 Call Forwarding&mdash;Busy </paragraph>
<paragraph id="P-0868" lvl="0"><number>&lsqb;0868&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 19</cross-reference> shows the call flow for Call Forwarding&mdash;Busy when BTI<highlight><subscript>T </subscript></highlight>is available. The first part of the call flow is the same as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>: Connect Call Flow. When the SETUP message is received by BTI<highlight><subscript>T</subscript></highlight>, it recognizes that the designated line is currently off-hook and that Call Forwarding&mdash;Busy is active. It sends a special SETUPACK to GC<highlight><subscript>T </subscript></highlight>indicating that Call Forwarding is active. GC<highlight><subscript>T </subscript></highlight>recognizes the Call Forwarding response. The rest of the call flow is identical to <cross-reference target="DRAWINGS">FIG. 17</cross-reference>: Call Forwarding&mdash;All Calls/BTI Available. </paragraph>
<paragraph id="P-0869" lvl="0"><number>&lsqb;0869&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 20</cross-reference> shows the call flow for Call Forwarding&mdash;Busy when the BTI is unavailable. This flow is identical to <cross-reference target="DRAWINGS">FIG. 18</cross-reference>: Call Forwarding&mdash;All Calls/BTI Unavailable Call Flow. </paragraph>
<paragraph id="P-0870" lvl="7"><number>&lsqb;0870&rsqb;</number> 8.3.1.3 Call Forwarding&mdash;No Answer </paragraph>
<paragraph id="P-0871" lvl="0"><number>&lsqb;0871&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 21</cross-reference> shows the call flow for Call Forwarding&mdash;No Answer when BTI<highlight><subscript>T </subscript></highlight>is available. The first part of the call flow is the same as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>: Connect Call Flow. BTI<highlight><subscript>T </subscript></highlight>recognizes the Call Forward-No Answer feature is active and times out after the correct number of rings. A RINGTIMEOUT message is sent to the originator to stop the ringback, and a REDIRECT message is sent to the GC<highlight><subscript>T </subscript></highlight>to start the forwarding operation. The REDIRECT message contains the new E.164F address. </paragraph>
<paragraph id="P-0872" lvl="0"><number>&lsqb;0872&rsqb;</number> GC<highlight><subscript>T </subscript></highlight>decrypts the call information, and retrieves the billing information for this subscriber. If the call forwarding or transfer feature is subscribed it passes the GCREDIRECT message back to the GC<highlight><subscript>O </subscript></highlight>with the appropriate billing information. </paragraph>
<paragraph id="P-0873" lvl="0"><number>&lsqb;0873&rsqb;</number> The REDIRECT messages serves two purposes, this call forwarding function and also a blind transfer function (transfer without consultation). Since the Gate Controller does not know which application is active, it must assume a data transfer is in progress and inform BTI<highlight><subscript>O </subscript></highlight>that it will be interrupted. This is done via the CALLHOLD/CALLHOLDACK exchange. If BTI<highlight><subscript>O </subscript></highlight>was in a talking state, BTI<highlight><subscript>O </subscript></highlight>tells ER<highlight><subscript>O </subscript></highlight>to temporarily suspend its resource reservation; then acknowledges the CALLHOLD command of the GC<highlight><subscript>O</subscript></highlight>. GC<highlight><subscript>T </subscript></highlight>then acknowledges to BTI<highlight><subscript>T </subscript></highlight>that the REDIRECT was successful. </paragraph>
<paragraph id="P-0874" lvl="0"><number>&lsqb;0874&rsqb;</number> At this point the GC<highlight><subscript>O </subscript></highlight>treats this call identically to the initial call, by translating E.164F into a Gate Controller address and passing a GCSETUP message to GC<highlight><subscript>F</subscript></highlight>. The actions of GC<highlight><subscript>F</subscript></highlight>, ER<highlight><subscript>F</subscript></highlight>, and BTI<highlight><subscript>F </subscript></highlight>are identical to those shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> for GC<highlight><subscript>T</subscript></highlight>, ER<highlight><subscript>T</subscript></highlight>, and BTI<highlight><subscript>T</subscript></highlight>. </paragraph>
<paragraph id="P-0875" lvl="0"><number>&lsqb;0875&rsqb;</number> When GC<highlight><subscript>O </subscript></highlight>receives the acknowledgement to its GCSETUP message, instead of performing a GATESETUP it modifies the settings of the already allocated gate via a GATEMODIFY command. When complete, the new destination information is passed to the BTI<highlight><subscript>O </subscript></highlight>via a TRANSFER message. GATEMODIFY and TRANSFER are identical to the messages used for 3-way calling and for call transfer. After resources are reserved for this call, BTI<highlight><subscript>O </subscript></highlight>sends a RING command, and the response is either RINGBACK (if the new destination is onhook and now ringing) or CONNECT (if the new destination is ready now). The latter would typically be the case within interactive voice response systems. After the CONNECT message, the resources are committed and the communication path is opened. </paragraph>
<paragraph id="P-0876" lvl="0"><number>&lsqb;0876&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 22</cross-reference> shows the call flow for Call Forwarding&mdash;No Answer when the BTI is unavailable. This flow is identical to <cross-reference target="DRAWINGS">FIG. 18</cross-reference>: Call Forwarding&mdash;All Calls/BTI Unavailable Call Flow. </paragraph>
<paragraph id="P-0877" lvl="7"><number>&lsqb;0877&rsqb;</number> 8.3.2 Caller ID/Calling Name Delivery </paragraph>
<paragraph id="P-0878" lvl="0"><number>&lsqb;0878&rsqb;</number> The following describes two alternatives for implementing Caller ID/Calling Name Delivery with embodiments of the present invention. </paragraph>
<paragraph id="P-0879" lvl="0"><number>&lsqb;0879&rsqb;</number> The first is to have BTI<highlight><subscript>T </subscript></highlight>request caller ID information upon receipt of the SETUP from the GC<highlight><subscript>T</subscript></highlight>. This request is sent to GC<highlight><subscript>T</subscript></highlight>, which recognizes the Caller ID flag and checks if the customer line has subscribed for Caller ID/Calling Name services. GC<highlight><subscript>T </subscript></highlight>returns the phone number (E.164<highlight><subscript>o</subscript></highlight>) and the Calling Name (CN<highlight><subscript>o</subscript></highlight>) of the call originator. Subsequently, BTI<highlight><subscript>T </subscript></highlight>returns a SETUPACK as usual. If the subscriber at BTI<highlight><subscript>T </subscript></highlight>subscribes to services such as Anonymous Call Rejection or Call Screening, then the SETUPACK may not be returned by BTI<highlight><subscript>T</subscript></highlight>. Finally, when BTI<highlight><subscript>T </subscript></highlight>rings the phone (assuming it is a simple &ldquo;black phone&rdquo; with the traditional Caller ID box), then the Caller ID and Calling Name are presented to the Caller ID box between the 1<highlight><superscript>st </superscript></highlight>and 2<highlight><superscript>nd </superscript></highlight>ring. If the user&apos;s telephone is more intelligent, this information may be presented as a message that is interpreted and displayed. <cross-reference target="DRAWINGS">FIG. 23</cross-reference> shows the call flow for this alternative. </paragraph>
<paragraph id="P-0880" lvl="2"><number>&lsqb;0880&rsqb;</number> 1. Another alternative for implementing Caller ID/Calling Name Delivery is to have GC<highlight><subscript>T </subscript></highlight>check if BTI<highlight><subscript>T </subscript></highlight>subscribes to the service on receipt of every call. If so, the caller&apos;s phone number (E.164<highlight><subscript>o</subscript></highlight>) and the Calling name (CN<highlight><subscript>o</subscript></highlight>) are sent in the SETUP message to BTI<highlight><subscript>T </subscript></highlight>on every incoming call. The BTI can either accept (SETUPACK) or reject (SETUPNACK) the call based upon E.164<highlight><subscript>o </subscript></highlight>and CN<highlight><subscript>o</subscript></highlight>. This alternative does not require additional messaging between GC<highlight><subscript>T </subscript></highlight>and BTI<highlight><subscript>T </subscript></highlight>for achieving Caller ID/Calling Name Delivery services. </paragraph>
<paragraph id="P-0881" lvl="7"><number>&lsqb;0881&rsqb;</number> 8.3.3 Call Waiting </paragraph>
<paragraph id="P-0882" lvl="0"><number>&lsqb;0882&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 24</cross-reference> showsw a call flow for Call Waiting, accordeing to an embodiment of the present invention. Initially, there is a call in progress between the BTI<highlight><subscript>O1</subscript></highlight>, and BTI<highlight><subscript>T</subscript></highlight>. A second call from BTI<highlight><subscript>O2 </subscript></highlight>to BTI<highlight><subscript>T </subscript></highlight>is established up to the point of reserving access and backbone bandwidth. BTI<highlight><subscript>O2 </subscript></highlight>reserves the channel as normal, but BTI<highlight><subscript>T </subscript></highlight>uses a RERESERVE message to indicate that it does not need a new access reservation, but just needs to associate the new gate (GID<highlight><subscript>T2</subscript></highlight>) in the ER with the existing access reservation for gate (GID<highlight><subscript>T1</subscript></highlight>). &ldquo;RING&rdquo; and &ldquo;RINGBACK&rdquo; messages are exchanged between the new BTI<highlight><subscript>O2 </subscript></highlight>and BTI<highlight><subscript>T</subscript></highlight>. BTI<highlight><subscript>T </subscript></highlight>now inserts a &ldquo;call waiting tone&rdquo; into the original call in progress to indicate to the user that there is a second incoming call. When the user does a &ldquo;flash-hook&rdquo;, then BTI<highlight><subscript>T </subscript></highlight>sends a HOLD message to BTI<highlight><subscript>O1 </subscript></highlight>and receives an acknowledgment for this message. Subsequently, BTI<highlight><subscript>T </subscript></highlight>completes the call to BTI<highlight><subscript>O2 </subscript></highlight>by sending a CONNECT message. Instead of having another allocation of resources for BTI<highlight><subscript>T </subscript></highlight>for this new call, we go through a reallocation of existing resources. The BTI<highlight><subscript>T </subscript></highlight>sends a RECOMMIT message with the Gate IDs of the two calls (GID<highlight><subscript>T1 </subscript></highlight>and GID<highlight><subscript>T2</subscript></highlight>) so that ER<highlight><subscript>T </subscript></highlight>may reallocate the resources from the first to the second call. In addition, a new CALLSTART event is sent to the billing server. When BTI<highlight><subscript>O1 </subscript></highlight>gets the HOLD message, it requests ER<highlight><subscript>O1 </subscript></highlight>to suspend allocation of its resources on the MCNS channel using the HOLD message until a future COMMIT message is sent from BTI<highlight><subscript>O1</subscript></highlight>. BTI<highlight><subscript>O1 </subscript></highlight>sends periodic KEEPALIVE message both to ER<highlight><subscript>O1 </subscript></highlight>and BTI<highlight><subscript>T </subscript></highlight>to ensure that the bandwidth is not reallocated to other calls. </paragraph>
<paragraph id="P-0883" lvl="7"><number>&lsqb;0883&rsqb;</number> 8.3.4 Three-way Calling </paragraph>
<paragraph id="P-0884" lvl="7"><number>&lsqb;0884&rsqb;</number> 8.3.4.1 Three-Way Calling&mdash;Bridging In BTI </paragraph>
<paragraph id="P-0885" lvl="0"><number>&lsqb;0885&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 25</cross-reference> shows the call flow for the simple Three-Way Calling alternative with bridging in BTI<highlight><subscript>O</subscript></highlight>. In the flow, a second call is set up as a totally new call using separate resources in BTI<highlight><subscript>O</subscript></highlight>, the access network, and the backbone network. When the customer wants to complete the three-way call (indicated by the second flash-hook), BTI<highlight><subscript>O </subscript></highlight>bridges the calls together. </paragraph>
<paragraph id="P-0886" lvl="0"><number>&lsqb;0886&rsqb;</number> This section describes the use of a bridge located on a server inside the network. <cross-reference target="DRAWINGS">FIG. 26</cross-reference> illustrates the first steps of a three-way call. The customer starts with an existing call, either one he or she placed or one that he or she received. By flashing the switchhook, that call is placed on hold. A HOLD message is sent to the destination indicating this change, and HOLDACK is sent in response. Both ends then inform their ERs that the isochronous transmission will be temporarily halted, but to keep the committed resources, via the HOLD message to the ER. Periodic KEEPALIVE messages are sent to each end and the ERs to accomplish this. </paragraph>
<paragraph id="P-0887" lvl="0"><number>&lsqb;0887&rsqb;</number> BTI<highlight><subscript>O </subscript></highlight>then plays the originator dialtone, and receives the full E.164 address of the additional party to call. This new call proceeds as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference> for normal call setup. At the point of the resource reservation exchange, ER<highlight><subscript>O </subscript></highlight>has allocated two gates (the original one with the parameters of the first call, and the new one with parameters for this call), upstream access resources are reserved for one call, and the backbone has reserved resources for both of the calls. When the third party answers, the second call is established using the resources reserved for GID<highlight><subscript>O2</subscript></highlight>. This state is identical to that of call-waiting, when one call is on hold and the subscriber is talking on a second call. However, since the subscriber initiated the second call, instead of receiving that call, the later hookflash commands a three-way call instead of a switch back to the first conversation. </paragraph>
<paragraph id="P-0888" lvl="0"><number>&lsqb;0888&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 27</cross-reference> shows the sequence of signaling messages exchanged in the conversion of two separate calls into one three-way call. BTI<highlight><subscript>O </subscript></highlight>allocates a conference bridge by creating a third connection to a special network server. The bridge server will take an arbitrary number of input streams and generate an output stream for each; each output is the sum of all inputs except for the contribution from the corresponding input. When the number of inputs exceeds a small number (e.g. 3), the bridge does silence detection on each input to reduce the accumulated noise. </paragraph>
<paragraph id="P-0889" lvl="0"><number>&lsqb;0889&rsqb;</number> Once the host establishes the connection to the bridge, each of the participants of the three-way call need to be informed of the new destination, and need to have their gates modified appropriately. This function is identical to that done for Call Forwarding with No Answer, and involves BTI<highlight><subscript>O </subscript></highlight>sending a REDIRECT message for each existing connection. </paragraph>
<paragraph id="P-0890" lvl="0"><number>&lsqb;0890&rsqb;</number> The REDIRECT function involves two steps. First is a GATEMODIFY message to the ER modifying the parameters of the gate. This message includes the new destination address for data packets, as well as new billing information. Second is a TRANSFER message to the BTI, telling it to switch to a new destination for sending and receiving packets. Before acknowledging this message, the BTI performs a resource reservation exchange with the indicated endpoint (in this case, the bridge) to ensure network resources are available. </paragraph>
<paragraph id="P-0891" lvl="0"><number>&lsqb;0891&rsqb;</number> The GATEMODIFY message sent to the ER includes charging information ($). Calls from each endpoint to the bridge involve split-charging; the originator of the call pays only for the equivalent call to his/her dialed destination, and the party making the three-way call pays for the extra segment to the bridge. This is similar to that done for Call Forwarding. </paragraph>
<paragraph id="P-0892" lvl="0"><number>&lsqb;0892&rsqb;</number> The GATEMODIFY message sent to the ER also includes a Billing Identifier, BID. This unique identifier is given to all of the ERs involved in the three-way call, so that all billing records produced can be matched later. The BID used for the call is the unique ID assigned for the BTI<highlight><subscript>O </subscript></highlight>to Bridge connection. </paragraph>
<paragraph id="P-0893" lvl="0"><number>&lsqb;0893&rsqb;</number> The TRANSFER message sent to the BTI includes updated CI<highlight><subscript>B </subscript></highlight>information, encrypted by the local GC. This information replaces the previous CI information. CI<highlight><subscript>B </subscript></highlight>contains sufficient information to allow one of the participants in this 3-way call to add another party and allocate an additional bridge; use of this CI<highlight><subscript>B </subscript></highlight>for a return-call or for call-trace will result in errors. </paragraph>
<paragraph id="P-0894" lvl="0"><number>&lsqb;0894&rsqb;</number> It is possible for one of the participants in a 3-way call, who also subscribes to the 3-way calling service, to add another party. The call flow is identical to <cross-reference target="DRAWINGS">FIG. 27</cross-reference>, except that one of the endpoints is not a BTI but rather the first Bridge. The Bridge handles TRANSFER messages in the same way as the BTI, allowing this service to cascade. </paragraph>
<paragraph id="P-0895" lvl="0"><number>&lsqb;0895&rsqb;</number> This sequence assumes the Bridge is located within the network, and does not need global address or gates to be allocated. GC<highlight><subscript>O </subscript></highlight>is identified as the Gate Controller serving the bridge, and there is no ER and no need for upstream scheduling of access lines. If the bridge were instead located outside of the network, then additional exchanges would be required to establish the gates and allocation of upstream bandwidth. These exchanges would be identical to those for normal call establishment. </paragraph>
<paragraph id="P-0896" lvl="0"><number>&lsqb;0896&rsqb;</number> There are two separate cases for hangup sequences. If the originator of the 3-way call hangs up, it sends the RELEASE message to its local ER and a HANGUP message to the bridge. The bridge, sends HANGUP messages to the other two legs of the call and also GATECLOSE messages to their ERs. This sequence is shown in <cross-reference target="DRAWINGS">FIG. 28</cross-reference>. </paragraph>
<paragraph id="P-0897" lvl="0"><number>&lsqb;0897&rsqb;</number> If a participant in the 3-way call disconnects, it is desired that the bridge be released and the call revert back to a normal two-party call. <cross-reference target="DRAWINGS">FIG. 20</cross-reference> shows the sequence of messages needed to perform this function. The Bridge receives a HANGUP message from a participant BTI, and sends a SPLICE message to its GC, giving the connection information (CI) for the two call legs to be spliced together. </paragraph>
<paragraph id="P-0898" lvl="0"><number>&lsqb;0898&rsqb;</number> The GCs inform the ERs, via a GATEMODIFY command, of the new destination of the data packets, and inform the BTIs, via a TRANSFER command, of the new destination. In case of errors, such as when the resource reservation exchange fails to allocate backbone bandwidth for the direct connection, the bridge can stay involved in the call with the two remaining parties. </paragraph>
<paragraph id="P-0899" lvl="7"><number>&lsqb;0899&rsqb;</number> 8.3.5 Call Transfer </paragraph>
<paragraph id="P-0900" lvl="0"><number>&lsqb;0900&rsqb;</number> There are two different call transfer services. Call Transfer With Consultation is a service very similar to Three-Way Calling except that when the originator of the three-way call disconnects, the remaining two parties can still talk. Call Transfer Without Consultation is similar to Call Forwarding, except the forwarding can be done after a call is established. </paragraph>
<paragraph id="P-0901" lvl="7"><number>&lsqb;0901&rsqb;</number> 8.3.5.1 Call Transfer with Consultation </paragraph>
<paragraph id="P-0902" lvl="0"><number>&lsqb;0902&rsqb;</number> Call Transfer With Consultation is very similar to Three-Way Calling except that when the customer (or host) hangs up the phone, the call between the two participants can continue. Also billing continues as if both legs of the call are still in place. </paragraph>
<paragraph id="P-0903" lvl="0"><number>&lsqb;0903&rsqb;</number> Most of the call flows for setting up a Call Transfer With Consultation are identical to those for Three-Way Calling (<cross-reference target="DRAWINGS">FIG. 26</cross-reference>, <cross-reference target="DRAWINGS">FIG. 27</cross-reference>, and <cross-reference target="DRAWINGS">FIG. 29</cross-reference>). The only call flow that is different is when a host disconnects. <cross-reference target="DRAWINGS">FIG. 30</cross-reference> shows the call flow for Call Transfer With Consultation service when the host disconnects. As with Three-Way Calling, the call reverts to a simple two-way call between the two participants. However, the billing for the call continues as if it is a three-way call. For the Call Transfer With Consultation call flow, the following events have proceeded the hangup of the host: </paragraph>
<paragraph id="P-0904" lvl="2"><number>&lsqb;0904&rsqb;</number> 1) BTI<highlight><subscript>T1 </subscript></highlight>has originated a call to BTI<highlight><subscript>O </subscript></highlight>and billing records (BID<highlight><subscript>T1/O</subscript></highlight>) for this leg of the call are being generated by ER<highlight><subscript>T1</subscript></highlight>. </paragraph>
<paragraph id="P-0905" lvl="2"><number>&lsqb;0905&rsqb;</number> 2) BTI<highlight><subscript>O </subscript></highlight>has put BTI<highlight><subscript>T1 </subscript></highlight>on hold and set up a new call to BTI<highlight><subscript>T2</subscript></highlight>. The billing records (BID<highlight><subscript>O/T2</subscript></highlight>) for this leg of the call are being generated by ER<highlight><subscript>O</subscript></highlight>. </paragraph>
<paragraph id="P-0906" lvl="2"><number>&lsqb;0906&rsqb;</number> 3) BTI<highlight><subscript>O </subscript></highlight>has joined the two legs of the call into a three-way call using a network bridge. </paragraph>
<paragraph id="P-0907" lvl="0"><number>&lsqb;0907&rsqb;</number> At the point when the host hangs up, the gate at the host&apos;s edge router (ER<highlight><subscript>O</subscript></highlight>) is closed and billing associated with that gate (BID<highlight><subscript>O/T2</subscript></highlight>) is terminated. GC<highlight><subscript>O </subscript></highlight>retrieves the information associated with this billing record (including the globally unique BID) from ER<highlight><subscript>O </subscript></highlight>using the GATEINFO request and transfers the billing information to one of the participant&apos;s ERs. The participant ER that receives this information (ER<highlight><subscript>T2 </subscript></highlight>in the call flow), generates a new billing record for the leg associated with BID<highlight><subscript>O/T2</subscript></highlight>. During bill processing, the two billing records for BIDO<highlight><subscript>O/T2 </subscript></highlight>are associated using the unique BID so the call can be billed properly. </paragraph>
<paragraph id="P-0908" lvl="7"><number>&lsqb;0908&rsqb;</number> 8.3.5.2 Call Transfer Without Consultation </paragraph>
<paragraph id="P-0909" lvl="0"><number>&lsqb;0909&rsqb;</number> As shown in <cross-reference target="DRAWINGS">FIG. 31</cross-reference>, Call Transfer Without Consultation is very similar to Call Forwarding&mdash;No Answer. </paragraph>
<paragraph id="P-0910" lvl="7"><number>&lsqb;0910&rsqb;</number> 8.3.6 Return Call </paragraph>
<paragraph id="P-0911" lvl="0"><number>&lsqb;0911&rsqb;</number> It is possible for GC<highlight><subscript>O </subscript></highlight>to implement the return call service by storing the number of the most recent incoming call (caller id) in the Gate Controller, and then returning the call on a SETUP request. However, this requires the Gate Controller to retain state associated for every telephone. It would be desirable to allow the end-system (e.g., BTI) to retain this state, simplifying the Gate Controller. Unfortunately, if the incoming call was from a subscriber that has blocked caller id, it is important to keep the caller id information private, hence it cannot be made available to the end-system. </paragraph>
<paragraph id="P-0912" lvl="0"><number>&lsqb;0912&rsqb;</number> The solution is for the GC to send the caller id information to the BTI in a digitally signed and encrypted form, with every SETUP request. When a user dials the *69 code to activate the return call service, BTI<highlight><subscript>O </subscript></highlight>includes the encrypted information in the SETUP request to GC<highlight><subscript>O</subscript></highlight>. If GC<highlight><subscript>O </subscript></highlight>successfully decrypts and validates the information, and the customer subscribes to Return Call service, it returns the call as if processing a normal SETUP request to the number associated with the most recent incoming call. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for use in a packet-carrying communication network in which calls originating from respective originating interface units are routed through a routing entity of said network, the method comprising 
<claim-text>responsive to call setup requests originating from the originating interface units, establishing parameters for said calls on a call-by-call basis, and </claim-text>
<claim-text>causing at least one of said established parameters to be stored in said routing entity, said routing entity operating to ensure that access to resources of said network is consistent with said at least one of said stored parameters. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said routing entity is a network edge device. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein said network edge device is a router. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein said network edge device is a bridge. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein said originating interface units are connected to said network edge device via an access network. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the parameters established for at least ones of said calls include at least one of: a source network address and a destination network address. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the quality of service for at least ones of said calls is determined by at least one of the parameters established for those calls. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein at least one of said parameters established for a call controls at least one of: bandwidth, bounded packet loss and latency. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the parameters established for a call include at least one of: packet size and inter-packet interval. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the parameters established for a call include at least one of: transmission priority and compression bit rate. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the parameters established for a call include operation, policy and traffic parameters. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said parameters established for a call are established by a gate controller, said gate controller thereupon communicating those parameters to said routing entity, said gate controller being an entity of said network through which calls are not routed. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference> wherein said routing entity is a network edge device. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further comprising establishing a gate for said each call at said network edge device, said gate being a call-admission control mechanism for a call defined at least in part by the parameters established for the call. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The invention of <highlight><bold>14</bold></highlight> wherein the parameters established for a call are established by a gate controller that communicates with said originating interface units. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A method for use in a packet-carrying communication network in which calls originating from respective originating interface units are routed through a routing entity of said network, the method comprising 
<claim-text>responsive to call setup requests originating from the originating interface units, establishing parameters for each of said calls on a call-by-call basis, the quality of service for said each call being determined by at least one of the parameters established for that call, </claim-text>
<claim-text>causing at least one of said established parameters to be stored in said routing entity, </claim-text>
<claim-text>receiving at said routing entity packets for said each call from the respective originating interface unit, said routing entity routing those packets to said network and said routing entity utilizing said at least one of said parameters to control admission of said packets into said network in such a way as to provide a quality of service for said call that is no greater than a quality of service previously authorized for that call. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> wherein said at least one of the parameters is received by said routing entity from a gate controller through which said calls are not routed. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> wherein said parameters established for said each call and stored at said routing entity include billing parameters for that call. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference> further comprising tracking resource usage at said routing entity for said each call. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> wherein said parameters established for said each call and stored at said routing entity include at least one of: a source network address and a destination network address. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> wherein said routing entity is a network edge device. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> wherein said network edge device is a router. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> wherein said network edge device is a bridge. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference> wherein said originating interface units are connected to said network edge device via an access network. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> wherein at least one of said parameters for said each call controls its bandwidth. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> wherein the parameters established for said each call that determine its quality of service include packet size and inter-packet interval. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> wherein the parameters established for said each call that determine its quality of service include at least one of: transmission priority and compression bit rate. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> wherein the parameters established for said each call include operation, policy and traffic parameters. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> wherein said parameters for said each call are used in a gate established for said each call at said network edge device, said gate being a call-admission control mechanism for said each call defined at least in part by said parameters established for that call. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. Apparatus for use in a packet-carrying communication network in which calls originating from respective originating interface units are routed through a routing entity of said network, the apparatus comprising 
<claim-text>means for establishing parameters for each of said calls on a call-by-call basis in response call setup requests originating from the originating interface units, and </claim-text>
<claim-text>means for causing at least one of said established parameters to be stored in said routing entity, </claim-text>
<claim-text>whereby said routing entity is able to operate in such a way as to ensure that access to resources of said network during said each call is consistent with said at least one of said stored parameters. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference> wherein said routing entity is a network edge device. </claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference> wherein the parameters established for at least ones of said calls include at least one of: a source network address and a destination network address. </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference> wherein the quality of service for at least ones of said calls is determined by at least one of the parameters established for those calls. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference> wherein at least one of said parameters established for said each call controls at least one of the call&apos;s bandwidth, bounded packet loss and latency. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference> wherein said parameters that determine quality of service include packet size and inter-packet interval. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference> wherein said parameters that determine quality include at least one of: transmission priority and compression bit rate. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference> wherein the parameters established for said each call include operation, policy and traffic parameters. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00033">claim 30</dependent-claim-reference> wherein said apparatus is a gate controller not adapted to route packets during said calls. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. The invention of <highlight><bold>38</bold></highlight> wherein said means for causing at least one of said established parameters to be stored in said routing entity comprises means for establishing a gate for said each call at said routing entity, said gate being a call-admission control mechanism for said each call defined at least in part by said parameters established for the call. </claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. A packet routing device for use in a packet-carrying communication network in which calls originating from respective originating interface units are routed through said packet routing device, the packet routing device comprising 
<claim-text>means for receiving and storing parameters that were established for said calls on a call-by-call basis responsive to call setup requests originating from the originating interface units, and </claim-text>
<claim-text>means for routing to said network packets that were received for each call from the respective originating interface unit, said packet routing device being adapted to utilize said at least one of said parameters to control admission of said packets into said network. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference> wherein said parameters established for said each call and stored at said routing entity include billing parameters for that call. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference> further comprising means for tracking resource usage at said routing entity for said each call. </claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference> wherein said parameters established for said each call and stored at said routing entity include at least one of: a source network address and a destination network address. </claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference> wherein said packet routing device is a router. </claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference> wherein said packet routing device is a bridge. </claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference> wherein at least one of said parameters for said each call controls its bandwidth. </claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference> wherein the parameters established for said each call include packet size and inter-packet interval. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference> wherein the parameters established for said each call include at least one of: transmission priority and compression bit rate. </claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference> wherein the parameters established for said each call include operation, policy and traffic parameters. </claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. The invention of <dependent-claim-reference depends_on="CLM-00044">claim 40</dependent-claim-reference> wherein said parameters for said each call are used in a gate established for said each call at said packet routing device, said gate being a call-admission control mechanism for said each call defined at least in part by said parameters established for the call.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002512A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002512A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002512A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002512A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002512A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002512A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002512A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002512A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002512A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002512A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002512A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002512A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002512A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030002512A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030002512A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030002512A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030002512A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00017">
<image id="EMI-D00017" file="US20030002512A1-20030102-D00017.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00018">
<image id="EMI-D00018" file="US20030002512A1-20030102-D00018.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00019">
<image id="EMI-D00019" file="US20030002512A1-20030102-D00019.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00020">
<image id="EMI-D00020" file="US20030002512A1-20030102-D00020.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00021">
<image id="EMI-D00021" file="US20030002512A1-20030102-D00021.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00022">
<image id="EMI-D00022" file="US20030002512A1-20030102-D00022.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00023">
<image id="EMI-D00023" file="US20030002512A1-20030102-D00023.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00024">
<image id="EMI-D00024" file="US20030002512A1-20030102-D00024.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00025">
<image id="EMI-D00025" file="US20030002512A1-20030102-D00025.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00026">
<image id="EMI-D00026" file="US20030002512A1-20030102-D00026.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00027">
<image id="EMI-D00027" file="US20030002512A1-20030102-D00027.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00028">
<image id="EMI-D00028" file="US20030002512A1-20030102-D00028.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
