<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005333A1-20030102-D00000.TIF SYSTEM "US20030005333A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00001.TIF SYSTEM "US20030005333A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00002.TIF SYSTEM "US20030005333A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00003.TIF SYSTEM "US20030005333A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00004.TIF SYSTEM "US20030005333A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00005.TIF SYSTEM "US20030005333A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00006.TIF SYSTEM "US20030005333A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00007.TIF SYSTEM "US20030005333A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00008.TIF SYSTEM "US20030005333A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00009.TIF SYSTEM "US20030005333A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00010.TIF SYSTEM "US20030005333A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00011.TIF SYSTEM "US20030005333A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00012.TIF SYSTEM "US20030005333A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00013.TIF SYSTEM "US20030005333A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00014.TIF SYSTEM "US20030005333A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00015.TIF SYSTEM "US20030005333A1-20030102-D00015.TIF" NDATA TIF>
<!ENTITY US20030005333A1-20030102-D00016.TIF SYSTEM "US20030005333A1-20030102-D00016.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005333</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10179767</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020624</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>192893</doc-number>
</priority-application-number>
<filing-date>20010626</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L009/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>713</class>
<subclass>201000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>713</class>
<subclass>150000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>System and method for access control</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Tetsuya</given-name>
<family-name>Noguchi</family-name>
</name>
<residence>
<residence-non-us>
<city>Yamato-shi</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Susumu</given-name>
<family-name>Shimotono</family-name>
</name>
<residence>
<residence-non-us>
<city>Hadano-shi</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>IBM CORPORATION</name-1>
<name-2></name-2>
<address>
<address-1>INTELLECTUAL PROPERTY LAW DEPT.</address-1>
<address-2>P.O. BOX 218</address-2>
<city>YORKTOWN HEIGHTS</city>
<state>NY</state>
<postalcode>10598</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A mechanism for access control based on remote procedure calls is established whereby server management costs for the processing associated with the authentication of client access rights and the provision of requested resources can be reduced by distributing these costs among clients. A first client, which has an access right to a server via a network, can issue a remote procedure call to the server. The first client can also communicate with a second client, which doesn&apos;t have an access right to the server. The first client requests the server to issue a token, which is a data set for permitting the second client a limited access to the server, and subsequently the token prepared by the server is transmitted to the second client. The second client originally has no access rights relative to the server. However, if the second client transmits a remote procedure call using the received token, limited access is granted. The server performs a process designated by the remote procedure call from the second client. The token includes operating information for designating an operation to be performed based on the remote procedure call, and identification information for identifying the second client. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention generally relates to an access control technique in a network environment, and in particular to an access control system that is suited to a network environment wherein an unspecified large number of clients access a certain server. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Description of the Related Art </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> As a network environment has been well prepared, multiple computers connected to a network can place remote procedure calls. As a method for providing a secured remote procedure call, there are a RPC (Remote Procedure Call) authentication method, used in a distributed environment system of UNIX, and an SSH (Secure Shell) method, used to securely execute r-type commands, such as rlogin (remote login) and rsh (remote shell). In these methods, a common key is shared using a public key, and through an authentication phase, an encrypted communication path is finally established. Thereafter, the execution of available programs or procedures is controlled by access rights granted to clients by a server. And when, as a result of the execution of a program or procedure, an attempt is made to access a resource requiring a higher access right, permission to call up this resource is also restricted. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Restrictions imposed on access rights are implemented by a server which controls management data for restricting an access to resources, including programs and procedures, for each client or each group to which the client belongs. In this system, generally, clients are registered in advance with the server (including registrations performed for anonymous accesses), and the server has client access right management data, which are used to manage the access rights granted to individual clients, and resource access control management data, which are used to manage the resources the server controls by categorizing them based on classification in the client access right management data. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> According to the conventional resource access control method, however, if there is an unexpectedly large increase in the number of clients to exceed the estimated service load, costs associated with the management of the accumulated data are increased. For example, when a server to be connected through ad hoc radio communication is moved, a huge, unspecified number of clients tend to be connected to the server. Further, a WWW (World Wide Web: hereinafter simply referred to as web) server provided for the Internet also tends to be connected to an enormous, unspecified number of clients. In addition, in this types of network system, it is usually unpredictable if clients who have accessed a server only once will later access the server again. Thus, the server may indefinitely retain account management data, and corresponding access control management data for permitted resource access, for clients who may not again assess the server. Therefore, when a server to which a huge, unspecified number of clients can connect is to communicate a specific remote procedure call to each client, the efficiency of the means established to control the above described management data is drastically reduced. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Since it is assumed that many clients will be connected to a web server, control for accessing the resources of the server can be provided for each of the clients by using &ldquo;cookie&rdquo; data. However, since originally cookies are employed with the expectation that user anonymity will be maintained and that client identity will not be revealed, it is not general practice for current web servers to base the verification of the security information included in cookies on client authentication, and therefore, server resource access is controlled by using verified cookie information. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> A conventional cookie employment method whereby server management costs for resource access control are distributed is disclosed in Japanese Unexamined Patent Publication No. Hei 10-257048 and No. 2000-76192. The se publications describes the technique for using cookie data to record that the clients have been authenticated. That is, a client who has been authenticated can log in to another server by re-using a cookie containing authentication information, so that the client need not log in many times. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> A conventional technique for reducing the connection management costs for a server that can be connected to an unspecified number of clients is disclosed in, for example, Japanese Unexamined Patent Publication No. 2000-286840. In this publication, a technique to avoid overconcentration of management of clients at a server is described whereby a client is authenticated by using a public key. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> In the reference &ldquo;Cross-Domain One-Shot Authorization Using Smart Cards&rdquo;, Richard Au, et al., ACM CCS&prime; <highlight><bold>00</bold></highlight>, Athens, Greece, a technique is disclosed whereby a token (authorization token), including approval rights for information access management, is transmitted to a client, who later can use the token to access a server to obtain information. According to this technique, the management costs involved in the approval and the distribution of information access rights are reduced by transferring the responsibility for the approval and the distribution of access rights from application servers to an authentication and approval server, which thereafter assumes responsibility for the total management of the clients who access the application servers. As a result, a bottleneck is eliminated to some extent at those servers that previously engaged in the management of information access approval rights. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> As is described above, with a current client/server system, when the client seeks to access a resource available at and managed by the server, the server, to prevent an unauthorized access, generally performs a client authentication process and examines available data to ascertain the presence/absence of access rights and the range thereof, and provides the requested service only when the client has submitted an appropriate resource access request. For the server to which an unspecified number of clients can be connected and which has the responsibility of access control, a heavy load is imposed and management costs increase. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> In order to provide the access control available with this type of network system, the network system manages 1) an authentication process for controlling the access rights granted to the clients (authentication management), and 2) an access approval process for determining whether the clients can access the resources controlled by the server based on their access rights (access management). And thus, to increase the efficiency of the access control process and to reduce the costs incurred by servers for the two types of management processes, it is preferable that management responsibilities be redistributed. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> With the conventional technique disclosed in Japanese Unexamined Patent Publication No. Hei 10-257048 or No. 2000-76192 for using cookies to disperse management costs for access control, and the conventional technique disclosed in Japanese Unexamined Patent Publication No. 2000-286840 for authenticating clients using public keys to reduce the management costs incurred by servers, the management effort required in servers for client authentication, i.e., the costs for the above authentication management, can be reduced. However, the management costs incurred by the access management for accessing a resource held by the server can not be reduced. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> Further, according to the conventional technique disclosed in reference &ldquo;Cross-Domain One-Shot Authorization Using Smart Cards&rdquo;, while the management costs for the approval of information access rights is dispersed to clients by using a token that includes the approval rights, the token does not include information directly indicating the information (resources) in the server to be accessed. That is, this technique is provided on the assumption that the application server includes a process by which the approval information incorporated in the token can be compared with the information management data of an application server, and that the data that can be accessed, in accordance with the approval information provided with the token, can be finally determined. Thus, the cost for the access management to resources controlled by the application server will not be reduced, when the application server receives a request to access resources from the client. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> It is, therefore, the object of the present invention to provide an access control mechanism in remote procedure calls whereby server management costs for the processing associated with the authentication management of client access rights and with the access management to requested resources can be reduced by distributing these costs among clients. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> To achieve the above object, according to the present invention, a server having the following configuration is provided. A server for responding to a request from clients via a network, comprising: operating information generation means, in response to a request from a first client which has an access right to the server for execution of a predetermined process, for generating operating information which specifies a remote procedure call permitting a second client to request the server to execute said predetermined process; and data set (token) generation means for generating a data set (token) that includes said operating information generated by said operating information generation means. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The token generation means can include, in the token, client identification information for designating the second client by whom a remote procedure call is permitted. Further, to prevent the alteration of the token, the token generation means can provide a digital signature for the token, or can encrypt the token. The operating information generation means generates the operating information through interaction with the first client who has the right to make a predetermined remote procedure call to the server. That is, the operating information can be generated based on the contents of an operation that the predetermined client has performed for the server, and can be written in the token. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> According to the present invention, a server having another configuration can be provided. The server comprises: reception means, for receiving a token that includes operating information corresponding to a remote procedure call a predetermined client is permitted to make; token examination means, for examining if the token is authorized; and process execution means for, if it is ascertained that the token is authorized, performing a process based on the operating information included in the token. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The server further comprises: client authentication means, for authenticating the client by which the token has been transmitted, wherein the token examination means employs the authentication results obtained by the client authentication means to determine whether the client who transmitted the token is the client who is permitted to issue the remote procedure call that corresponds to the operating information included in the token. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The token examination means belonging to the server can employ a digital signature provided for the token to determine whether the token has been altered. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> Furthermore, according to the present invention, a server, which executes a process upon receiving a request from a client connected via a network, comprises: data set generation means, for generating a data set that includes operating information corresponding to a remote procedure call that the client is permitted to make; verification means, for examining the authorization for the data set that is transmitted by the client who received the data set; and process execution means, for, when the data set is authorized, performing a process based on the operating information included in the data set. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The data set generation means writes client authentication information in the data set, and the verification means compares authentication information, which is obtained by an authentication process performed when the client transmits the data set in which the authentication information is written. Thus, it can be ascertained that the client who transmitted the data set is the person to whom the data set was issued. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> Furthermore, according to the present invention, an information processing apparatus having the following configuration can be provided. An information processing apparatus to be connected to a network comprises: connection means, for establishing a connection with a predetermined server via the network; and remote procedure calling means, for transmitting, to the server for which the information processing apparatus does not have an access right, a token in which authorization for an operation, including permission to access a resource of the server, is written and in this manner permitting the server to perform the operation written in the token. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The connection means provides, for the server, information that is used to confirm that the token has been issued to the information processing apparatus. The information can be a public key used for authentication in accordance with the public key infrastructure (PKI). </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> According to the present invention, an access control system comprises: a server for performing a data process; and a client to be connected to the server via a network, wherein control is provided for an access request transmitted by the client to the server, wherein the server issues to the client a token that includes identification information for the client and operating information corresponding to a remote procedure call that is permitted for the client, and wherein the client transmits to the server the token issued by the server, so as to perform the remote procedure call that corresponds to the operating information written in the token. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The access control system further comprises: a different client having a right to issue a predetermined remote procedure call to the server, wherein the server employs the remote procedure call issued by the different client to determine operating information to be written in a token. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> When the server is a WWW (World Wide Web) server, the token or the data set can be generated by using a cookie. The present invention can also be provided as a program that controls a computer for the implementation of the functions of the above server. This program can be distributed by being stored on a magnetic disk, an optical disk, a semiconductor memory or another storage device, or by being transmitted, via a network, by the storage device of a program transmission apparatus connected to the network. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> In addition, an access control method for controlling the access of a second information processing apparatus by a first information processing apparatus, comprises the steps of: determining what operating contents the second information processing apparatus permits the first information processing apparatus; generating a token that includes the operating contents; distributing the token to the first information processing apparatus; and permitting the second information processing apparatus to perform a process based on the token received from the first information processing apparatus. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The access control method further comprises the step of: verifying that the token was generated for the first information processing apparatus, wherein the step of generating the token includes the step of writing, in the token, authentication information for the first information processing apparatus, and wherein the step of verifying that the token was generated for the first information processing apparatus includes the step of comparing authentication information written in the token with authentication information that is obtained during an authentication process performed when the first information processing apparatus transmits the token to the second information processing apparatus. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The access control method further comprises the step of: examining the authorization contained in the token, wherein the step of generating the token includes providing a digital signature for the token, and wherein the step of examining the authorization contained in the token includes the step of examining the digital signature provided for the token received from the first information processing apparatus. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The step of generating the token includes the step of: encrypting the token, and the step of examining the authorization contained in the token includes the step of: examining the decryption results obtained for the token received from the first information processing apparatus.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a diagram for explaining the general configuration of a network system that implements access control in accordance with one embodiment of the present invention. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a diagram showing the configuration of a server according to the embodiment. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a diagram showing the format used for a secure token according to the embodiment. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a diagram for explaining the access control method according to the embodiment. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a diagram for explaining the arrangement wherein this embodiment is employed for an ad hoc radio communication network environment using a handy information process terminal. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a diagram showing the relationship between a PDA and a notebook PC for information communication in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a diagram showing the structure of the database of the notebook PC in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a diagram showing a client search condition selection screen used to prepare operating information written in a secure token according to the embodiment. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a diagram showing a client display screen on which one entry is selected to prepare the operating information written in a secure token according to the embodiment. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a diagram showing a client display screen on which a condition selected in <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is set to prepare operating information written in a secure token according to the embodiment. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a diagram showing a client display screen on which a second entry is selected to prepare operating information written in a secure token according to the embodiment. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a diagram showing a client display screen on which a condition selected in <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is specifically designated to prepare operating information written in a secure token according to the embodiment. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a diagram showing a client display screen on which a third entry is selected to prepare operating information written in a secure token according to the embodiment. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 14</cross-reference> is a diagram showing a client display screen on which a condition selected in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is specifically designated to prepare operating information written in a secure token according to the embodiment. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 15</cross-reference> is a diagram showing a client display screen on which search results based on the input search condition are displayed to prepare operating information written in a secure token according to the embodiment. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 16</cross-reference> is a diagram showing a client display screen on which a first entry is selected to select another client for whom a secure token according to the embodiment is to be generated.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF A PREFERRED EMBODIMENT OF THE INVENTION </heading>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> The preferred embodiment will now be described in detail while referring to the accompanying drawings. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a diagram for explaining the general configuration of a network system according to the embodiment whereby access control is exercised. In the network system in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> for this embodiment, clients <highlight><bold>10</bold></highlight> and <highlight><bold>20</bold></highlight> are connected to a server <highlight><bold>30</bold></highlight> via a network <highlight><bold>40</bold></highlight>. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> The clients <highlight><bold>10</bold></highlight> and <highlight><bold>20</bold></highlight>, and the server <highlight><bold>30</bold></highlight> are implemented by a computer, such as a personal computer or a workstation, by a PDA or a mobile phone having a function that enables connection to the network <highlight><bold>40</bold></highlight>, or by another information processing terminal. In this embodiment, apparatuses capable of making remote procedure calls are defined as the clients <highlight><bold>10</bold></highlight> and <highlight><bold>20</bold></highlight>, and an apparatus that performs operations in response to remote procedure calls is defined as the server <highlight><bold>30</bold></highlight>. In <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the client <highlight><bold>10</bold></highlight> and the server <highlight><bold>30</bold></highlight> trust each other or have a secured relationship with each other. That is, the client <highlight><bold>10</bold></highlight> can issue all the available remote procedure calls to the server <highlight><bold>30</bold></highlight>. This condition of reliance is not established between the client <highlight><bold>20</bold></highlight> and the server <highlight><bold>30</bold></highlight>, and the client <highlight><bold>20</bold></highlight> has no access rights, or its access rights are limited. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> Independent of whether a wired or wireless connection is used, the network <highlight><bold>40</bold></highlight> can be an arbitrary WAN (Wide Area Network), such as the Internet or an intranet, a LAN (Local Area Network), or an ad hoc radio communication network. In <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, only two clients <highlight><bold>10</bold></highlight>, <highlight><bold>20</bold></highlight> and one server <highlight><bold>30</bold></highlight> are shown; however, no limitation is placed on the number of these components that can be employed. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> In this embodiment, the client <highlight><bold>10</bold></highlight>, which is connected to the server <highlight><bold>30</bold></highlight> via the network <highlight><bold>40</bold></highlight>, can issue a remote procedure call, and can also communicate with the client <highlight><bold>20</bold></highlight>, from which it can obtain identification information. Any inter-client communication method can be employed, so long as peer-to-peer communication is available, such as an easy data exchange method at the application level by the OBEX (Object Exchange) protocol. The client <highlight><bold>10</bold></highlight> requests the server <highlight><bold>30</bold></highlight> to issue a token, comprising a data set for permitting the client <highlight><bold>20</bold></highlight> a limited access to the server <highlight><bold>30</bold></highlight> (hereinafter referred to as a secure token or a token), and subsequently transfers the secure token prepared by the server <highlight><bold>30</bold></highlight> to the client <highlight><bold>20</bold></highlight>. As is described above, the client <highlight><bold>20</bold></highlight> has no access rights relative to the server <highlight><bold>30</bold></highlight>; however, when the client <highlight><bold>20</bold></highlight> transmits a remote procedure call using the secure token received from the client <highlight><bold>10</bold></highlight>, limited access is granted. A detailed description of a secure token will be provided later. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> The server <highlight><bold>30</bold></highlight> performs various processes upon receiving remote procedure calls from the client <highlight><bold>10</bold></highlight>, and also issues a secure token for the client <highlight><bold>20</bold></highlight> when it receives a request from the client <highlight><bold>10</bold></highlight>. Since, as will be described later in detail, the secure token includes operating information which designates a remote procedure call that permits the execution of a certain process, and identification information for the client <highlight><bold>20</bold></highlight> who issues the remote procedure call. If the client <highlight><bold>20</bold></highlight> designated by the identification information uses the secure token to access the server <highlight><bold>30</bold></highlight>, the server <highlight><bold>30</bold></highlight> accepts the remote procedure call corresponding to the operating information written in the secure token and initiates the requested process. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a diagram showing the configuration of the server <highlight><bold>30</bold></highlight>. In <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the server <highlight><bold>30</bold></highlight> that exercises an access control operation for this embodiment comprises: a client authentication unit <highlight><bold>31</bold></highlight>, for performing mutual authentication between the clients <highlight><bold>10</bold></highlight> and <highlight><bold>20</bold></highlight> that request connection with the server <highlight><bold>30</bold></highlight>; an operating information generator <highlight><bold>32</bold></highlight>, for generating operating information to specify an operation permitted to the client <highlight><bold>20</bold></highlight> in a remote procedure call; a secure token generator <highlight><bold>33</bold></highlight>, for generating a secure token; a secure token examination unit <highlight><bold>34</bold></highlight>, for examining the secure token received from the client <highlight><bold>20</bold></highlight>; and a remote operation execution unit <highlight><bold>35</bold></highlight>, for performing a process in response to the remote procedure call. These components of the server <highlight><bold>30</bold></highlight> are virtual software blocks implemented by a CPU controlled by a program executed by a computer system, which functions as the server <highlight><bold>30</bold></highlight>. The program used to control the CPU can be provided by being stored on a storage medium, such as a CD-ROM or a floppy disk, or by being transmitted via a network. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> With this arrangement, the client authentication unit <highlight><bold>31</bold></highlight> authenticates the clients <highlight><bold>10</bold></highlight> and <highlight><bold>20</bold></highlight> that request a connection to the server <highlight><bold>30</bold></highlight>. During the authentication process, for example, mutual authentication in accordance with the PKI (Public Key Infrastructure) can be employed. Thus, if mutual authentication in accordance with PKI provisions (e.g., authentication using SSL) is employed and an unauthorized third party who has obtained a secure token attempts to use the token to access a resource available at the server <highlight><bold>30</bold></highlight>, the possibility that the access attempt by the third party will be successful can be completely eliminated at the authentication stage, so long as he or she does not know the secret key (private key) employed by the client <highlight><bold>20</bold></highlight> for whom the secure token was originally intended. Further, should a malicious client <highlight><bold>20</bold></highlight> attempt to employ an unauthorized public key and private key (by pretending to be an authenticated user) to request the client <highlight><bold>10</bold></highlight> to prepare an unauthorized secure token, the possibility that this malicious attempt will succeed can also be eliminated, because a digital certificate, including the public key that is transmitted at the authentication stage while the client <highlight><bold>20</bold></highlight> is connected to the server <highlight><bold>30</bold></highlight>, is not issued by the appropriate CA (Certification Authority). Therefore, the level of security afforded by the embodiment is equal to the level available with the current PKI. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> The operating information generator <highlight><bold>32</bold></highlight> generates operating information for specifying a limited remote procedure call that allows the client <highlight><bold>20</bold></highlight> to access the server <highlight><bold>30</bold></highlight> for the execution of a specific process. The operating information can be generated through interaction with the client <highlight><bold>10</bold></highlight>. That is, a remote procedure call that the client <highlight><bold>10</bold></highlight> has issued to the server <highlight><bold>30</bold></highlight> is traced, and the contents (procedures) of this operation are defined as operating information. Specifically, when the client <highlight><bold>20</bold></highlight> is to be permitted to access specific data in a database provided by the server <highlight><bold>30</bold></highlight>, the client <highlight><bold>10</bold></highlight> needs only access the pertinent data actually to specify the operating information for this access. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> The secure token generator <highlight><bold>33</bold></highlight> employs the operating information prepared by the operating information generator <highlight><bold>32</bold></highlight> and the authentication information which is identification information for the client <highlight><bold>20</bold></highlight>, to generate a secure token to be issued to the client <highlight><bold>20</bold></highlight>. The authentication information for the client <highlight><bold>20</bold></highlight>, which will be described in detail later, can be obtained from the client <highlight><bold>10</bold></highlight>. The secure token generator <highlight><bold>33</bold></highlight> can then perform a predetermined process for the secure token in order to guarantee its correctness (to prevent alteration). For example, the secure token generator <highlight><bold>33</bold></highlight> can either attach verification data, such as the digital signature of the server <highlight><bold>30</bold></highlight>, to the secure token or it can encrypt the secure token. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a diagram showing an example format for a secure token. In <cross-reference target="DRAWINGS">FIG. 3, a</cross-reference> secure token <highlight><bold>50</bold></highlight> includes authentication information <highlight><bold>51</bold></highlight> for the client <highlight><bold>20</bold></highlight> and operating information <highlight><bold>52</bold></highlight> generated by the operating information generator <highlight><bold>32</bold></highlight>. The authentication information <highlight><bold>51</bold></highlight> for the client <highlight><bold>20</bold></highlight> can be, for example, a public key used for mutual authentication in accordance with the PKI. Furthermore, a digital signature (a server signature in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>) <highlight><bold>53</bold></highlight> is provided for the secure token <highlight><bold>50</bold></highlight>. Not only a direct operation for a resource held or controlled within the server <highlight><bold>30</bold></highlight> but also an operation for an external resource (e.g., another server connected to the network) that the server <highlight><bold>30</bold></highlight> can operate can be written in as the operating information <highlight><bold>52</bold></highlight>. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> The secure token examination unit <highlight><bold>34</bold></highlight> examines for correctness of the secure token <highlight><bold>50</bold></highlight> received from the client <highlight><bold>20</bold></highlight>. In this embodiment, the secure token examination unit <highlight><bold>34</bold></highlight> verifies the secure token <highlight><bold>50</bold></highlight> itself and the client <highlight><bold>20</bold></highlight> that transmitted the secure token <highlight><bold>50</bold></highlight>. The correctness of the secure token <highlight><bold>50</bold></highlight> is examined by determining whether the secure token <highlight><bold>50</bold></highlight> has been altered. As is shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, when a digital signature <highlight><bold>53</bold></highlight> is provided for the secure token <highlight><bold>50</bold></highlight>, the correctness of the secure token <highlight><bold>50</bold></highlight> can be confirmed by examining the digital signature <highlight><bold>53</bold></highlight>. If the secure token <highlight><bold>50</bold></highlight> is encrypted, the secure token <highlight><bold>50</bold></highlight> is decrypted before it is examined to confirm its correctness. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> The client <highlight><bold>20</bold></highlight> that transmitted the secure token <highlight><bold>50</bold></highlight> is verified by comparing the authentication information used during the authentication process performed to permit the client <highlight><bold>20</bold></highlight> to transmit the secure token <highlight><bold>50</bold></highlight> to the server <highlight><bold>30</bold></highlight>, with the authentication information <highlight><bold>51</bold></highlight> written in the secure token <highlight><bold>50</bold></highlight>. Therefore, the authentication information for the client <highlight><bold>20</bold></highlight>, which is received from the client <highlight><bold>10</bold></highlight> for the generation of the secure token <highlight><bold>50</bold></highlight>, and the authentication information obtained by the client authentication unit <highlight><bold>31</bold></highlight> must have the same form or must have the form that permits their correctness to be mutually confirmed. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> The remote operation execution unit <highlight><bold>35</bold></highlight> executes processes based on remote procedure calls from the client <highlight><bold>10</bold></highlight>, or remote procedure calls from the client <highlight><bold>20</bold></highlight> which are submitted by using operating information <highlight><bold>52</bold></highlight> that is written in the secure token <highlight><bold>50</bold></highlight>. Depending on the contents of an operation, the execution results are transmitted by the server <highlight><bold>30</bold></highlight> to either the client <highlight><bold>10</bold></highlight> or the client <highlight><bold>20</bold></highlight>. For example, if a data search request for a database managed within the server <highlight><bold>30</bold></highlight> is issued based on a secure token <highlight><bold>50</bold></highlight>, the search results are transmitted by the server <highlight><bold>30</bold></highlight> to the client <highlight><bold>20</bold></highlight>. And if the server <highlight><bold>30</bold></highlight> has the function for accessing an external device and performing a predetermined operation, the external device can also be operated in accordance with the operating information <highlight><bold>52</bold></highlight> in the secure token <highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a diagram for explaining the access control method according to the embodiment. In <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the access control method of this embodiment comprises four phases: a first phase for designating an operation to be executed based on a remote procedure call; a second phase for generating a secure token; a third phase for disclosing the secure token; and a fourth phase for accessing the server <highlight><bold>30</bold></highlight> using the secure token. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> During the first phase, initially, the clients <highlight><bold>10</bold></highlight> and <highlight><bold>20</bold></highlight> mutually authenticate each other, and then operating information for a remote procedure call that is to be disclosed to the client <highlight><bold>20</bold></highlight> is determined. As is described above, it is preferable that the form for mutual authentication between the client <highlight><bold>20</bold></highlight> and the server <highlight><bold>30</bold></highlight> be the same as that for mutual authentication between the clients <highlight><bold>10</bold></highlight> and <highlight><bold>20</bold></highlight>. For example, the mutual authentication process according to the PKI may be employed. Further, the operating information for the remote procedure call can be determined, for example, at the time the client <highlight><bold>10</bold></highlight> actually performs the pertinent operation. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> During the second phase, the server <highlight><bold>30</bold></highlight>, upon receiving a request from the client <highlight><bold>10</bold></highlight>, generates a secure token <highlight><bold>50</bold></highlight>. As is shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the secure token <highlight><bold>50</bold></highlight> includes the authentication information <highlight><bold>51</bold></highlight> for the client <highlight><bold>20</bold></highlight> obtained during the first phase and the operating information <highlight><bold>52</bold></highlight> for the remote procedure call that is disclosed to the client <highlight><bold>20</bold></highlight>. In case, during the first phase, the mutual authentication process used by the clients <highlight><bold>10</bold></highlight> and <highlight><bold>20</bold></highlight> is performed according to the PKI, the authentication information <highlight><bold>51</bold></highlight> can be the public key of the client <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> During the third phase, the server <highlight><bold>30</bold></highlight> transmits the secure token <highlight><bold>50</bold></highlight> to the client <highlight><bold>20</bold></highlight>. The server <highlight><bold>30</bold></highlight> may either transmit the secure token <highlight><bold>50</bold></highlight> to the client <highlight><bold>20</bold></highlight> via the client <highlight><bold>10</bold></highlight>, or it may transmit the secure token <highlight><bold>50</bold></highlight> directly to the client <highlight><bold>20</bold></highlight>. In either case, only if the secure token <highlight><bold>50</bold></highlight> is received by the client <highlight><bold>20</bold></highlight> information concerning the remote procedure call, which is based on the operating information <highlight><bold>52</bold></highlight> written in the secure token <highlight><bold>50</bold></highlight>, is disclosed to the client <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> During the fourth phase, the client <highlight><bold>20</bold></highlight> uses the secure token <highlight><bold>50</bold></highlight> to access the server <highlight><bold>30</bold></highlight>. Specifically, the client <highlight><bold>20</bold></highlight> and the server <highlight><bold>30</bold></highlight> mutually authenticate each other and then the client <highlight><bold>20</bold></highlight> transmits the secure token <highlight><bold>50</bold></highlight> to the server <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> Upon receiving the secure token <highlight><bold>50</bold></highlight>, the server <highlight><bold>30</bold></highlight> processes the digital signature <highlight><bold>53</bold></highlight> added to the secure token <highlight><bold>50</bold></highlight> to determine the correctness of the secure token <highlight><bold>50</bold></highlight>. In this process, whether the secure token <highlight><bold>50</bold></highlight> has been altered can be determined. Furthermore, the authentication information <highlight><bold>51</bold></highlight> for the client <highlight><bold>20</bold></highlight> written in the secure token <highlight><bold>50</bold></highlight> is compared with authentication information for the client <highlight><bold>20</bold></highlight> obtained through the previous mutual authentication process. When the two authentication information sets match, it can be ascertained that the secure token <highlight><bold>50</bold></highlight> has been transmitted by the client <highlight><bold>20</bold></highlight> to which the secure token <highlight><bold>50</bold></highlight> was initially issued. Therefore, if the client <highlight><bold>20</bold></highlight> has transmitted the secure token <highlight><bold>50</bold></highlight> to a different client, and this client transmits the secure token <highlight><bold>50</bold></highlight> to the server <highlight><bold>30</bold></highlight>, the authentication information will differ, so that it can be ascertained that the access is not authorized. In other words, the confirmation process performed for the authentication information is used to guarantee that the operating information <highlight><bold>52</bold></highlight> written in the secure token <highlight><bold>50</bold></highlight> is disclosed only to the client <highlight><bold>20</bold></highlight>. After this examination, the server <highlight><bold>30</bold></highlight> executes an operation based on the operating information <highlight><bold>52</bold></highlight> written in the secure token <highlight><bold>50</bold></highlight>. As is described above, depending on the contents of the operation, the execution results transmitted to the client <highlight><bold>20</bold></highlight> by the server <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> As is described above, according to the access control method of this embodiment, the server <highlight><bold>30</bold></highlight> only executes a remote procedure call based on operating information <highlight><bold>52</bold></highlight> that has already been approved. That is, if the correctness of the secure token <highlight><bold>50</bold></highlight> is confirmed, it is not necessary to determine whether the client <highlight><bold>20</bold></highlight> is permitted to execute a remote procedure call that the client <highlight><bold>20</bold></highlight> is currently requesting, or to access the requested information. Accordingly, there is no need to maintain specific management data for the client <highlight><bold>20</bold></highlight> in the server <highlight><bold>30</bold></highlight> for such determination. In other words, in this embodiment, management of the resource access request issued by the client <highlight><bold>20</bold></highlight> is based only on the information included in the secure token <highlight><bold>50</bold></highlight> that the client <highlight><bold>20</bold></highlight> transmitted. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> This access control method is appropriate for a case wherein the client to whom resource information is to be disclosed cannot be designated, and the type of resource information to be provided for the client must be determined after client interaction is initiated. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> In case a certain client or group is previously specified, and the resource information to be disclosed to such client or group is recognized in advance (e.g. in case a predetermined client frequently accesses a server), it is more efficient to grant an access to the resources relevant to the role of the pertinent client collectively. However, in a situation wherein it is not known whether the client which once accesses the resources in the server will access them again later, the same management method for the client that frequently accesses the relevant resource is not preferable because management costs are increased. In addition, in this situation, it is rare for the range of the resource information to be disclosed to the client to be widely extended. Rather, the range tends to generally very narrow. This trend is more remarkable when a large, unspecified number of clients accesses the server. Therefore, in this situation, the use of the access control method employed for this embodiment is reasonable. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> In this embodiment, an example wherein the access control is used to handle a request for a database search will now be specifically explained. <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a diagram for explaining the configuration wherein the method of the embodiment is used for an ad hoc radio communication network environment while employing a mobile information processing terminal. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> In the network environment in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, PDAs (Personal Digital Assistants) <highlight><bold>510</bold></highlight> and <highlight><bold>520</bold></highlight> and a notebook computer <highlight><bold>530</bold></highlight> (hereinafter referred to as a notebook PC <highlight><bold>530</bold></highlight>) are provided that use the ad hoc radio communication network to exchange information. In <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the PDA, <highlight><bold>510</bold></highlight> corresponds to the client <highlight><bold>10</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the PDA <highlight><bold>520</bold></highlight> corresponds to the client <highlight><bold>20</bold></highlight>, and the notebook PC <highlight><bold>530</bold></highlight> corresponds to the server <highlight><bold>30</bold></highlight>. That is, the PDA <highlight><bold>510</bold></highlight> and the notebook PC <highlight><bold>530</bold></highlight> are present in the same personal domain and in a secured relationship each other. The PDA <highlight><bold>520</bold></highlight>, however, is not in the secured relationship wit the notebook PC <highlight><bold>530</bold></highlight>, and must employ the secure token <highlight><bold>50</bold></highlight> of this embodiment to access the database at the notebook PC <highlight><bold>530</bold></highlight>. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> In this embodiment, the PDAs <highlight><bold>510</bold></highlight>, <highlight><bold>520</bold></highlight> and the notebook PC <highlight><bold>530</bold></highlight> employ a web base system for the exchange of information. Therefore, the notebook PC <highlight><bold>530</bold></highlight> is a web server, and the PDAs <highlight><bold>510</bold></highlight> and <highlight><bold>520</bold></highlight> are equipped with web browsers <highlight><bold>511</bold></highlight> and <highlight><bold>521</bold></highlight> that is to be used to connect with the notebook PC <highlight><bold>530</bold></highlight>. Further, from the viewpoint of the operation in this embodiment, the notebook PC <highlight><bold>530</bold></highlight> is a database server, and the PDAs <highlight><bold>510</bold></highlight> and <highlight><bold>520</bold></highlight> issue access requests for the database that the notebook PC <highlight><bold>530</bold></highlight> can control. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a diagram showing the information communication relationship existing between the PDAs <highlight><bold>510</bold></highlight>, <highlight><bold>520</bold></highlight> and the notebook PC <highlight><bold>530</bold></highlight>. In <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, the notebook PC <highlight><bold>530</bold></highlight> includes a web server service unit <highlight><bold>531</bold></highlight> for providing a service on a web, a CGI (Common Gateway Interface) <highlight><bold>532</bold></highlight> and a database <highlight><bold>533</bold></highlight>. When the web browsers <highlight><bold>511</bold></highlight> and <highlight><bold>521</bold></highlight> provided for the PDAs <highlight><bold>510</bold></highlight> and <highlight><bold>520</bold></highlight> transmit HTTP requests to the notebook PC <highlight><bold>530</bold></highlight>, the web server service unit <highlight><bold>531</bold></highlight> receives these HTTP requests and employs the CGI to search the database <highlight><bold>533</bold></highlight> for data. The search results is transmitted to the PDAs <highlight><bold>510</bold></highlight> and <highlight><bold>520</bold></highlight>. Thereafter, the users of the PDAs <highlight><bold>510</bold></highlight> and <highlight><bold>520</bold></highlight> use the web browsers <highlight><bold>511</bold></highlight> and <highlight><bold>521</bold></highlight> to browse the search results. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a diagram for explaining the configuration of the database <highlight><bold>533</bold></highlight> at the notebook PC <highlight><bold>530</bold></highlight>. For this embodiment, a database <highlight><bold>533</bold></highlight> search is performed in accordance with multiple information categories. Therefore, in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the database <highlight><bold>533</bold></highlight> includes a general information search unit <highlight><bold>710</bold></highlight> and an application group managed by the general information search unit <highlight><bold>710</bold></highlight>. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> The general information search unit <highlight><bold>710</bold></highlight> provides detailed processing, in accordance with dominated information categories having various access interfaces, for search conditions (queries) in HTTP requests received from the PDA <highlight><bold>510</bold></highlight> or <highlight><bold>520</bold></highlight>. In this embodiment, the dominated information categories of the general information search unit <highlight><bold>710</bold></highlight> are personal data (hereinafter referred to as PIM (Personal Information Manager) information), such as e-mail, schedule and address data, data handled in a special database, and document data, including a wide variety of document types, such as PDF (Portable Document format), plain text, and other specific formats. Therefore, in the example in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the application group managed by the general information search unit <highlight><bold>710</bold></highlight> includes a PIM application <highlight><bold>721</bold></highlight> for processing PIM information, a special database <highlight><bold>722</bold></highlight> and a document editing application <highlight><bold>723</bold></highlight> for processing document data. However, this application group is merely an example, and in some network environments using the access control method of this embodiment, an application for processing image data or audio data can be employed in addition to, or instead of, the above applications. </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> The special database <highlight><bold>722</bold></highlight> includes an external database that can be accessed separately through a network and a dedicated database for the intranet. The document editing application <highlight><bold>723</bold></highlight> includes a word processor and a spreadsheet program. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> Further, as is shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, an access interface conversion layer, called a wrapper, is mounted between the general information search unit <highlight><bold>710</bold></highlight> and the application group, such as the PIM application <highlight><bold>721</bold></highlight>, the special database <highlight><bold>722</bold></highlight> and the document editing application <highlight><bold>723</bold></highlight>, so that the general information search unit <highlight><bold>710</bold></highlight> can uniformly access the different information categories. As a result, differences in entry names to be called or calling procedures can be absorbed. For example, when the PDA <highlight><bold>510</bold></highlight> instructs the notebook PC <highlight><bold>530</bold></highlight> to search for information including a specific keyword among the information categories that were accessed in the past two days, the information in each information category that satisfies the condition is searched for and is displayed on the screen of the PDA <highlight><bold>510</bold></highlight>. To simplify the process, all the information may be converted into plain text, or as needed, the document format of the original information may be maintained and displayed by using the function of the PDA <highlight><bold>510</bold></highlight>. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> A specific operation will now be described for exercising the access control provided by the PDA <highlight><bold>520</bold></highlight> in the thus arranged network environment. Assume that one user (user A) holds the PDA <highlight><bold>510</bold></highlight> and the notebook PC <highlight><bold>530</bold></highlight>, and another user (user B) holds the PDA <highlight><bold>520</bold></highlight>. Since the PDA <highlight><bold>510</bold></highlight> and the notebook PC <highlight><bold>530</bold></highlight> trust each other, these two are connected in advance by an encrypted radio communication path. The notebook PC <highlight><bold>530</bold></highlight>, which may be stored in a bag and is in the power saving (suspend) mode, is activated (awakened) and accessed, as needed, upon the reception of a radio signal from the PDA <highlight><bold>510</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> Assume that the distance between the users A and B is reduced when the two users actually encounter, and the users can communicate with each other through an ad hoc, short-distance radio communication network. Then, using inter-client communication, identification information is first exchanged by the PDAs <highlight><bold>510</bold></highlight> and <highlight><bold>520</bold></highlight> to designate communication partners. So even if the PDA <highlight><bold>520</bold></highlight> of a malicious user pretends to be an arbitrary authorized user and attempts to transmit false identification information to the PDA <highlight><bold>510</bold></highlight>, a system, as previously described, is prepared whereby the PDA <highlight><bold>520</bold></highlight> of the malicious user is eliminated at the following server connection time in accordance with the PKI. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> Following this step, after receiving a request from the user B, the user A employs the PDA <highlight><bold>510</bold></highlight> to place a remote procedure call to the notebook PC <highlight><bold>530</bold></highlight>, and then accesses the database at the PC <highlight><bold>530</bold></highlight> and searches for information to be provided for the user B (information that satisfies the request). While taking into account that a call differs depending on a search condition and a category to be searched for, the user A selects desirable information from the items displayed on the display screen of the PDA <highlight><bold>510</bold></highlight> by changing the search condition. This operation corresponds to the first phase in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. In this embodiment, the following required conditions for categories are input, and are collectively transmitted to the notebook PC <highlight><bold>530</bold></highlight>. </paragraph>
<paragraph id="P-0082" lvl="2"><number>&lsqb;0082&rsqb;</number> creation date </paragraph>
<paragraph id="P-0083" lvl="2"><number>&lsqb;0083&rsqb;</number> last access date </paragraph>
<paragraph id="P-0084" lvl="2"><number>&lsqb;0084&rsqb;</number> creator/transmitter </paragraph>
<paragraph id="P-0085" lvl="2"><number>&lsqb;0085&rsqb;</number> title name/file name </paragraph>
<paragraph id="P-0086" lvl="2"><number>&lsqb;0086&rsqb;</number> relevant application category type </paragraph>
<paragraph id="P-0087" lvl="2"><number>&lsqb;0087&rsqb;</number> importance level </paragraph>
<paragraph id="P-0088" lvl="2"><number>&lsqb;0088&rsqb;</number> unread/read </paragraph>
<paragraph id="P-0089" lvl="2"><number>&lsqb;0089&rsqb;</number> size </paragraph>
<paragraph id="P-0090" lvl="2"><number>&lsqb;0090&rsqb;</number> object delivery time </paragraph>
<paragraph id="P-0091" lvl="2"><number>&lsqb;0091&rsqb;</number> title or file name of information, or a keyword included therein </paragraph>
<paragraph id="P-0092" lvl="2"><number>&lsqb;0092&rsqb;</number> location of information (a page, a paragraph or a line) </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> In the PDA <highlight><bold>510</bold></highlight>, when the web browser <highlight><bold>511</bold></highlight> is operated, and the above necessary entries are input to condition input forms received from the web server of the notebook PC <highlight><bold>530</bold></highlight>, the contents are transmitted to the notebook PC <highlight><bold>530</bold></highlight> using an HTTP POST command. The information that is input corresponds to the operating information for a remote procedure call issued to the notebook PC <highlight><bold>530</bold></highlight>, i.e., to the web server. In <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, this information is processed to perform the search of the database <highlight><bold>533</bold></highlight> via the CGI <highlight><bold>532</bold></highlight>. The method of searching the database <highlight><bold>533</bold></highlight> is not limited to a technique performed using the web server CGI <highlight><bold>532</bold></highlight>; it may be implemented by adopting a general RPC technique through HTTP, for example, using a SOAP (Simple Object Access Protocol) framework, wherein a specific RPC entry at the server may be called by using a specific call. The above described search is repeated between the PDA <highlight><bold>510</bold></highlight> and the notebook PC <highlight><bold>530</bold></highlight> until appropriate information to be provided for the user B is chosen. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> When the data search is continued and it is established what information is to be provided for the user B, the operation is shifted to the second phase in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. In this phase, the notebook PC <highlight><bold>530</bold></highlight> is requested to generate a secure token <highlight><bold>50</bold></highlight>, so that the secure token includes the search condition that was used by the PDA <highlight><bold>510</bold></highlight> to establish what information is to be provided for the user B. That is, the generation of a secure token <highlight><bold>50</bold></highlight> is requested at this time so that search conditions will be included in the secure token <highlight><bold>50</bold></highlight> to enable the extraction of the information obtained through the data search corresponding to the remote procedure call issued to the notebook PC <highlight><bold>530</bold></highlight> by the PDA <highlight><bold>510</bold></highlight>. The purpose of the secure token <highlight><bold>50</bold></highlight> is to provide the PDA <highlight><bold>520</bold></highlight>, which has no secured relationship with the notebook PC <highlight><bold>530</bold></highlight>, with the same information as that which can be obtained by the PDA <highlight><bold>510</bold></highlight>, which has a secured relationship with the notebook PC <highlight><bold>530</bold></highlight>, by using the search condition therein. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> For the secure token <highlight><bold>50</bold></highlight> of this embodiment, in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the public key of the user B is written in the secure token <highlight><bold>50</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> as authentication information <highlight><bold>51</bold></highlight>, and the search condition and limitation information (e.g., the valid period of the secure token) are written as operating information <highlight><bold>52</bold></highlight>. Furthermore, a digital signature <highlight><bold>53</bold></highlight> (a server signature in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>) is attached to the secure token <highlight><bold>50</bold></highlight>. As is described above, since the notebook PC <highlight><bold>530</bold></highlight> provides the digital signature <highlight><bold>53</bold></highlight> for the secure token <highlight><bold>50</bold></highlight>, only the notebook PC <highlight><bold>530</bold></highlight>, which holds the secret key, can generate the secure token <highlight><bold>50</bold></highlight>. In this embodiment, if the PDA <highlight><bold>520</bold></highlight> and the notebook PC <highlight><bold>530</bold></highlight> use web base communication with each other, a secure token <highlight><bold>50</bold></highlight> can be generated for the PDA <highlight><bold>520</bold></highlight> as a cookie data. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> The phase is now shifted to the third phase in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. The generated secure token <highlight><bold>50</bold></highlight> is transmitted to the PDA <highlight><bold>520</bold></highlight> as a certificate of access for the notebook PC <highlight><bold>530</bold></highlight>. The secure token <highlight><bold>50</bold></highlight> is temporarily transmitted to the PDA <highlight><bold>510</bold></highlight>, and is then transferred, via inter-client communication, from the PDA <highlight><bold>510</bold></highlight> to the PDA <highlight><bold>520</bold></highlight>. The secure token <highlight><bold>50</bold></highlight> may also be transmitted directly to the PDA <highlight><bold>520</bold></highlight> by the notebook PC <highlight><bold>530</bold></highlight>. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> The phase is then shifted to the fourth phase in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, and the PDA <highlight><bold>520</bold></highlight> uses the secure token <highlight><bold>50</bold></highlight> to perform a data search. When the secure token <highlight><bold>50</bold></highlight> generated at the second phase is transmitted to the PDA <highlight><bold>520</bold></highlight> during the third phase, so long as the PDA <highlight><bold>520</bold></highlight> employs the secure token <highlight><bold>50</bold></highlight>, the PDA <highlight><bold>520</bold></highlight> is permitted to perform a data search under the search condition written in the secure token <highlight><bold>50</bold></highlight>. This is because, if the PDA <highlight><bold>520</bold></highlight> is confirmed as it is by the authentication process using the SSL while the PDA <highlight><bold>520</bold></highlight> is connected to the notebook PC <highlight><bold>530</bold></highlight>, and if the public key that is disclosed in that process matches the public key that is inserted in advance into the secure token, it is confirmed that the secure token <highlight><bold>50</bold></highlight> is the correct one that was provided for the PDA <highlight><bold>520</bold></highlight>. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> An explanation will now be given for an example search condition written as operating information <highlight><bold>52</bold></highlight>. Assume that the following constitutes the search information. </paragraph>
<paragraph id="P-0099" lvl="2"><number>&lsqb;0099&rsqb;</number> &lt;QueryConditions&gt;</paragraph>
<paragraph id="P-0100" lvl="2"><number>&lsqb;0100&rsqb;</number> &lt;keywords&gt;</paragraph>
<paragraph id="P-0101" lvl="2"><number>&lsqb;0101&rsqb;</number> &ldquo;Web server&rdquo; AND &ldquo;CGI&rdquo;</paragraph>
<paragraph id="P-0102" lvl="2"><number>&lsqb;0102&rsqb;</number> &lt;/keywords&gt;</paragraph>
<paragraph id="P-0103" lvl="2"><number>&lsqb;0103&rsqb;</number> &lt;LastAccessDateTime&gt;</paragraph>
<paragraph id="P-0104" lvl="2"><number>&lsqb;0104&rsqb;</number> BETWEEN Jan. 6, 2001 AND Feb. 6, 2001 </paragraph>
<paragraph id="P-0105" lvl="2"><number>&lsqb;0105&rsqb;</number> &lt;/LastAccessDateTime&gt;</paragraph>
<paragraph id="P-0106" lvl="2"><number>&lsqb;0106&rsqb;</number> &lt;SpecifiedCategories&gt;</paragraph>
<paragraph id="P-0107" lvl="2"><number>&lsqb;0107&rsqb;</number> MAIL AND PDF </paragraph>
<paragraph id="P-0108" lvl="2"><number>&lsqb;0108&rsqb;</number> &lt;/SpecifiedCategories&gt;</paragraph>
<paragraph id="P-0109" lvl="2"><number>&lsqb;0109&rsqb;</number> &lt;/QueryConditions&gt;</paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> In this example, a mail or a PDF document, that was accessed between June 1st and 2nd, and that includes the two keywords &ldquo;Web server&rdquo; and &ldquo;CGI&rdquo;, is searched for, and the pertinent information is obtained. Therefore, the PDA <highlight><bold>520</bold></highlight> that has obtained the secure token <highlight><bold>50</bold></highlight> in which the above search condition is written as operating information <highlight><bold>52</bold></highlight> can perform a data search of the notebook PC <highlight><bold>530</bold></highlight> under the search condition. Instead of a plain text document, SOAP coding may be employed for a general PRC to describe the operating information <highlight><bold>52</bold></highlight> that enables style designation for the transmission information. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> An example wherein the embodiment is applied for a database search will now be explained while referring to FIGS. <highlight><bold>8</bold></highlight> to <highlight><bold>16</bold></highlight>, wherein a simplified GUI is displayed in the web browser <highlight><bold>511</bold></highlight> of the PDA <highlight><bold>510</bold></highlight>. In this example, the user A determines the search condition by operating the PDA <highlight><bold>510</bold></highlight> and provides the operation contents as a secure token <highlight><bold>50</bold></highlight> for the PDA <highlight><bold>520</bold></highlight> (user B). </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> This example is implemented in the ad hoc radio communication network. First, the PDA <highlight><bold>510</bold></highlight> searches for a nearby device which has the access function using the secure token <highlight><bold>50</bold></highlight> of this embodiment. That is, a computer system is searched for to which at least a part of the information in the notebook PC <highlight><bold>530</bold></highlight> is disclosed. For example, when a special service discovery function, prepared in common, is employed between the short-distance radio communication devices that are used by the PDAs <highlight><bold>510</bold></highlight> and <highlight><bold>520</bold></highlight>, another short-distance radio communication device that is currently being used and is located within communication range (e.g., within an inter-device distance of 10 m) can be searched for. In the following example, assume that the device names of the clients found by the service discovery function are&ldquo;Paul&rdquo; and &ldquo;Robert&rdquo;. In this example, &ldquo;Paul&rdquo; corresponds to the PDA <highlight><bold>520</bold></highlight>. The following operation is initiated on the assumption that the PDA <highlight><bold>510</bold></highlight> already understands the name of the peripheral device. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a diagram showing an initial screen (homepage) that is provided by the web server of the notebook PC <highlight><bold>530</bold></highlight> at the beginning of a database search and that is displayed on the web browser <highlight><bold>511</bold></highlight> of the PDA <highlight><bold>510</bold></highlight>. On this screen, search categories are enumerated for the search engine (database <highlight><bold>533</bold></highlight>) of the notebook PC <highlight><bold>530</bold></highlight>. Assume that the user A selected &ldquo;final access date&rdquo; (see <cross-reference target="DRAWINGS">FIG. 9</cross-reference>). Upon receiving this entry, a special page for setting the final access date in detail is transmitted by the web server of the notebook PC <highlight><bold>530</bold></highlight> to the PDA <highlight><bold>510</bold></highlight> (see <cross-reference target="DRAWINGS">FIG. 10</cross-reference>). In <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, the user A designates, as a condition, the period from Jun. 1st, 2001 to Jun. 2nd, 2001. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> Further, to add the search condition, the user executes &ldquo;Return&rdquo; on the screen in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>, instead of executing &ldquo;start search&rdquo;. As a result, the display on the web browser <highlight><bold>511</bold></highlight> of the PDA <highlight><bold>510</bold></highlight> is returned to the state in <cross-reference target="DRAWINGS">FIG. 9, i</cross-reference>.e., the state wherein search condition &ldquo;final access date&rdquo; is selected on the homepage. The user A then designates &ldquo;relevant application category type&rdquo; (see <cross-reference target="DRAWINGS">FIG. 11</cross-reference>). Upon receiving this designation, a special page for designating the relevant application category type is transmitted by the web server of the notebook PC <highlight><bold>530</bold></highlight> to the PDA <highlight><bold>510</bold></highlight> (see <cross-reference target="DRAWINGS">FIG. 12</cross-reference>). In the example in <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, the user A designates a PDF file and mail information as categories. In order to add a further search condition, the user A returns to the homepage as described above and adds the search condition &ldquo;keyword&rdquo; (see <cross-reference target="DRAWINGS">FIG. 13</cross-reference>). Then, the user A enters the two keywords &ldquo;Web server&rdquo; and &ldquo;CGI&rdquo; on the keyword input page (see <cross-reference target="DRAWINGS">FIG. 14</cross-reference>). </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> In the above manner, the contents of the database search are set to perform a search for the PDF information and the mail information that include these keywords. Following this, the user A selects &ldquo;start search&rdquo; on the web page in <cross-reference target="DRAWINGS">FIG. 14</cross-reference>, and requests that the web server of the notebook PC <highlight><bold>530</bold></highlight> initiate a search operation under the set search conditions. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> The notebook PC <highlight><bold>530</bold></highlight> then performs a database search in accordance with the search request. And when it finds a data file that satisfies the search conditions, it transmits the data file to the PDA <highlight><bold>510</bold></highlight> (see <cross-reference target="DRAWINGS">FIG. 15</cross-reference>). In the lower portion of the page shown in <cross-reference target="DRAWINGS">FIG. 15, a</cross-reference> control button is provided for performing a page unit examination of the search results. If the thus obtained search results are the contents desired by the user A (to be disclosed to the user B), the user A requests that the notebook PC <highlight><bold>530</bold></highlight> generate a secure token <highlight><bold>50</bold></highlight> that includes this search condition. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> As is described above, the PDA <highlight><bold>510</bold></highlight> has already searched for the name of a peripheral device. When the search condition is established, the device name and the identification information obtained in the search process are transmitted to the notebook PC <highlight><bold>530</bold></highlight>. It should be noted that since the transmission process is performed using SOAP, which is exchanged in accordance with HTTP, this is not displayed on the PDA <highlight><bold>510</bold></highlight>. Instead, the device name and the identification information are displayed as a list using a peripheral client list button positioned below the search results displayed in <cross-reference target="DRAWINGS">FIG. 15</cross-reference> (see <cross-reference target="DRAWINGS">FIG. 16</cross-reference>). </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> The user A determines which device (client) will be used to generate a secure token <highlight><bold>50</bold></highlight>. In <cross-reference target="DRAWINGS">FIG. 16</cross-reference>, for the user (corresponding to the PDA <highlight><bold>520</bold></highlight>) having the device name &ldquo;Paul&rdquo;, the notebook PC <highlight><bold>530</bold></highlight> is requested to generate a secure token <highlight><bold>50</bold></highlight> for which the above described search conditions are provided. Upon receiving the request, the notebook PC <highlight><bold>530</bold></highlight> uses the same SOAP to generate the secure token <highlight><bold>50</bold></highlight>, which it transmits to the PDA <highlight><bold>510</bold></highlight>. The PDA <highlight><bold>510</bold></highlight> transmits the secure token <highlight><bold>50</bold></highlight> to the PDA <highlight><bold>520</bold></highlight>, via inter-client communication, and discloses specified information for the notebook PC <highlight><bold>530</bold></highlight>. Thereafter, client Paul can obtain the search results in <cross-reference target="DRAWINGS">FIG. 15</cross-reference> by transmitting the secure token <highlight><bold>50</bold></highlight> to the notebook PC <highlight><bold>530</bold></highlight>. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> In the above described example, the PDA <highlight><bold>510</bold></highlight> and the notebook PC <highlight><bold>530</bold></highlight> are separate devices; however, instead of two devices, a single terminal may be used to provide the same functions. In addition, although not specifically shown in the example, when the notebook PC <highlight><bold>530</bold></highlight> can access an external database, the right to perform this operation may be provided using a secure token <highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> As is described above, according to this embodiment, when a token in which a server resource access operation to be provided for a client is written is issued to the client, limited access rights for a specific server resource can be provided for the client. Furthermore, when the secure token <highlight><bold>50</bold></highlight> is transmitted to the client, access control management information can be distributed and managed for each client. Therefore, after management information concerning access control has been disclosed, this information need not be maintained by the server, and the load imposed on the server can be reduced considerably. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> The secure token <highlight><bold>50</bold></highlight> and the conventional access control method that are used separately for the access control method of this embodiment can also be employed together. For example, for a client who frequently accesses a server, access control can be provided by retaining management data in the server, and for a client who accesses the server for the first time, or a client who seldom accesses the server, the access control method of this embodiment can be employed. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> As is described above, according to the present invention, for the access control processing performed to service remote procedure calls, management costs for the authentication of access rights for clients and for the accessing of resources can be distributed among clients, and the management costs that must be borne by a server can be reduced. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A server for responding to a request from clients via a network, comprising: 
<claim-text>operating information generation means, in response to a request from a first client which has an access right to the server for execution of a predetermined process, for generating operating information which specifies a remote procedure call permitting a second client to request the server to execute said predetermined process; and </claim-text>
<claim-text>data set generation means for generating a data set that includes the operating information generated by said operating information generation means. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The server according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said data set generation means includes, in the data set, client identification information for designating the second client. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The server according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said data set generation means provides a digital signature for the data set. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The server according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said data set generation means encrypts the data set. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The server according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said operating information generation means generates said operating information through interaction with the first client. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The server according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>reception means for receiving the data set that includes the operating information from the second client; </claim-text>
<claim-text>examination means for examining if the received data set is authorized; and </claim-text>
<claim-text>execution means, if it is ascertained that the data set is authorized, for executing the predetermined process based on the operating information included in the data set. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The server according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein: 
<claim-text>said data set generation means includes client identification information for designating the second client in the data set; and </claim-text>
<claim-text>said examination means compares authentication information, which is obtained by an authentication process performed in response to reception of said data set from the second client, with said client identification information included in the data set. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The server according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein said examination means employs a digital signature for determining whether the data set has been altered. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The server according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein, the server is a WWW (World Wide Web) server, and said data set generation means generates the data set by cookie data. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. An apparatus to be connected to a network comprising: 
<claim-text>connection means for establishing a connection with a predetermined server via said network; </claim-text>
<claim-text>reception means for receiving a data set which includes operating information permitting the apparatus to access a resource in said server, to which the apparatus does not have an access right; and </claim-text>
<claim-text>remote procedure calling means for requesting said server to access the resource by transmitting the received data set. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein said connection means provides, for said server, information that is used to confirm that said data set has been issued to said apparatus. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The apparatus according to <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein, as the information that is used to confirm that said data set has been issued to said apparatus, said connection means provides, for said server, a public key for authentication in accordance with the public key infrastructure (PKI). </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A method for controlling an access by a first apparatus to a second apparatus, comprising the steps of: 
<claim-text>determining an operation that the second apparatus permits the first apparatus to request to perform, in response to a request from a third apparatus which has an access right to the second apparatus; </claim-text>
<claim-text>generating a data set that specifies said operation at the second apparatus; </claim-text>
<claim-text>transmitting the data set to the first apparatus; and </claim-text>
<claim-text>performing said operation at the second apparatus in response to said transmitting step. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, further comprising the step of verifying that the data set is generated for the first apparatus, wherein : 
<claim-text>said step of generating the data set comprises the step of including, in the data set, first authentication information for the first apparatus, and </claim-text>
<claim-text>said step of verifying comprises the step of comparing the first authentication information included in the data set with second authentication information that is obtained during an authentication process performed when the first apparatus transmits the data set to the second apparatus. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, further comprising the step of examining correctness of the data set, wherein : 
<claim-text>said step of generating the data set comprises the step of providing a digital signature for the data set, and </claim-text>
<claim-text>said step of examining the correctness comprises the step of examining said digital signature provided for the data set received from the first apparatus. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, further comprising the step of examining correctness of the data set, wherein: 
<claim-text>said step of generating the data set comprises the step of encrypting the data set, and </claim-text>
<claim-text>said step of examining the correctness comprises the step of examining the decryption results obtained for the data set received from the first apparatus.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>3</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005333A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005333A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005333A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005333A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005333A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005333A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005333A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005333A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030005333A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030005333A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030005333A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030005333A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030005333A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030005333A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030005333A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030005333A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00016">
<image id="EMI-D00016" file="US20030005333A1-20030102-D00016.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
