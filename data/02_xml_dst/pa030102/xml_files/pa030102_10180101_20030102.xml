<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030001864A1-20030102-D00000.TIF SYSTEM "US20030001864A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030001864A1-20030102-D00001.TIF SYSTEM "US20030001864A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030001864A1-20030102-D00002.TIF SYSTEM "US20030001864A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030001864A1-20030102-D00003.TIF SYSTEM "US20030001864A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030001864A1-20030102-D00004.TIF SYSTEM "US20030001864A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030001864A1-20030102-D00005.TIF SYSTEM "US20030001864A1-20030102-D00005.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030001864</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10180101</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020627</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G09G005/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>345</class>
<subclass>619000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method and system for manipulation of garphics information</title-of-invention>
</technical-information>
<continuity-data>
<non-provisional-of-provisional>
<document-id>
<doc-number>60301482</doc-number>
<document-date>20010629</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
<non-provisional-of-provisional>
<document-id>
<doc-number>60301423</doc-number>
<document-date>20010629</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Frederic</given-name>
<middle-name>Jean-Luc</middle-name>
<family-name>Charpentier</family-name>
</name>
<residence>
<residence-non-us>
<city>Ottawa</city>
<country-code>CA</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<assignee>
<organization-name>BITFLASH GRAPHICS, INC.</organization-name>
<address>
<city>Gloucester</city>
<country>
<country-code>CA</country-code>
</country>
</address>
<assignee-type>03</assignee-type>
</assignee>
<correspondence-address>
<name-1>OBLON SPIVAK MCCLELLAND MAIER &amp; NEUSTADT PC</name-1>
<name-2>FOURTH FLOOR</name-2>
<address>
<address-1>1755 JEFFERSON DAVIS HIGHWAY</address-1>
<city>ARLINGTON</city>
<state>VA</state>
<postalcode>22202</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Manipulation of graphics information according to a computing device on which graphics information is to be displayed is performed. The capabilities of the computing device are used to form a set of constraints for the graphics information obtained from a content provider. These constraints take into consideration such factors as display characteristics of the computing device, processing power, available memory and communication capacity. The graphics information is manipulated to conform to the set of constraints, resulting in graphics information that can be displayed and interpreted by the computing device. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS REFERENCE TO RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present application claims priority from U.S. provisional patent application serial No. 60/301,482 filed on Jun. 29, 2001. United States Patent application entitled &ldquo;Method and System for Displaying Graphics Information&rdquo; was filed concurrently herewith and claims priority from U.S. provisional patent application serial No. 60/301,423 filed on Jun. 29, 2001.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention is directed towards manipulating graphics information according to characteristics of a device for displaying the graphics information. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> With the increasing diversity of computing devices capable of displaying graphics information there is an increased demand to provide such information in a format that can be interpreted by each computing device. This has resulted in the development of a wide variety of formats for graphics information and often the provision of a multiplicity of the graphics information for each format. The resulting format is often less than optimal for each computing device and adds the complexity of requiring conversion of the graphics information into different formats at the time of development. The distinct discrete formats do not take into consideration the capabilities of the computing device, such as the display characteristics, processing power, available memory and communication capacity. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> In accordance with an aspect of the present invention there is provided a method of modifying graphics information to be displayed on a computing device having a set of display characteristics representing display capabilities of the computing device, said method comprising: determining a scheme by which to conform characteristics of the graphics information to the set of display characteristics; harmonizing the characteristics of the graphics information to the set of display characteristics according to said scheme to provide the graphics information in a format adapted for display on the computing device. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> In accordance with another aspect of the present invention there is provided a system for modifying graphics information to be displayed on a computing device having a set of display characteristics representing display capabilities of the computing device, said system comprising: a conformation mechanism for assessing the set of display characteristics and characteristics of the graphics information to determine a scheme by which to conform the characteristics of graphics information to the set of display characteristics; a graphics modification mechanism for harmonizing the characteristics of the graphics information to the set of display characteristics according to said scheme; and a controller for orchestrating modification of the graphics information to provide the graphics information in a format adapted for display on the computing device. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> In accordance with a further aspect of the present invention there is provided a computer readable medium having stored thereon computer-executable instructions for modifying graphics information to be displayed on a computing device having a set of display characteristics representing display capabilities of the computing device, said computer-executable instructions comprising: determining a scheme by which to conform characteristics of the graphics information to the set of display characteristics; harmonizing the characteristics of the graphics information to the set of display characteristics according to said scheme to provide the graphics information in a format adapted for display on the computing device. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Other aspects and features of the present invention will become apparent to those ordinarily skilled in the art upon review of the following description of specific embodiments of the invention in conjunction with the accompanying figures.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The present invention will be described in conjunction with the drawings in which: </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> represents an example of a suitable computing environment in which the present invention may be implemented; </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a system diagram of a system for manipulating graphics information for display according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a system diagram of a graphics customization mechanism of the system of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>; and </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 4A and B</cross-reference> show a flow diagram representing a method of manipulating graphics information for display according to an embodiment of the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION </heading>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> and the associated description represent an example of a suitable computing environment <highlight><bold>10</bold></highlight> in which the present invention may be implemented. While the invention will be described in the general context of computer-executable instructions of a computer program, the present invention can also be implemented in combination with other program modules. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> Generally, program modules include routines, programs, components, data structures and the like that perform particular tasks or implement particular abstract data types. Further, the present invention can also be implemented using or in combination with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, minicomputers, mainframe computers, and distributed computing environments where program modules may be located in both local and remote memory storage devices. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> With reference to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the present invention may be implemented within a general purpose computing device in the form of a conventional computer <highlight><bold>12</bold></highlight>, including a processing unit <highlight><bold>30</bold></highlight>, a system memory <highlight><bold>14</bold></highlight>, and a system bus <highlight><bold>34</bold></highlight> that couples various system components including the system memory <highlight><bold>14</bold></highlight> to the processing unit <highlight><bold>30</bold></highlight>. The system memory <highlight><bold>14</bold></highlight> includes read only memory (ROM) <highlight><bold>16</bold></highlight> and random access memory (RAM) <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> A basic input/output system <highlight><bold>18</bold></highlight> (BIOS), containing the basic routines that help to transfer information between elements within the computer <highlight><bold>12</bold></highlight> (e.g. during start-up) is stored in ROM <highlight><bold>16</bold></highlight>. The computer <highlight><bold>12</bold></highlight> further includes a hard disk drive <highlight><bold>38</bold></highlight> for reading from and writing to a hard disk (not shown), a magnetic disk drive <highlight><bold>42</bold></highlight> for reading from or writing to a removable magnetic disk <highlight><bold>72</bold></highlight>, and an optical disk drive <highlight><bold>46</bold></highlight> for reading from or writing to a removable optical disk <highlight><bold>70</bold></highlight> such as a CD ROM or other optical media, all of which are connected to the system bus <highlight><bold>34</bold></highlight> by respective interfaces <highlight><bold>36</bold></highlight>, <highlight><bold>40</bold></highlight>, <highlight><bold>44</bold></highlight>. The drives <highlight><bold>38</bold></highlight>, <highlight><bold>42</bold></highlight>, <highlight><bold>46</bold></highlight> and their associated computer-readable media <highlight><bold>72</bold></highlight>, <highlight><bold>70</bold></highlight> provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the computer <highlight><bold>12</bold></highlight>. Although the exemplary environment described herein employs certain disks, it should be appreciated by those skilled in the art that other types of computer readable media for storing data may also be employed. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> A number of program modules may be stored on the disks <highlight><bold>72</bold></highlight>, <highlight><bold>70</bold></highlight>, ROM <highlight><bold>16</bold></highlight> or RAM <highlight><bold>20</bold></highlight>, including an operating system <highlight><bold>22</bold></highlight>, one or more application programs <highlight><bold>24</bold></highlight>, other program modules <highlight><bold>76</bold></highlight>, and program data <highlight><bold>74</bold></highlight>. Commands and information may be entered into the personal computer <highlight><bold>12</bold></highlight> through input devices (e.g. a keyboard <highlight><bold>64</bold></highlight>, a pointing device <highlight><bold>68</bold></highlight>, a microphone, joystick, etc.). These input devices may be connected to the processing unit <highlight><bold>30</bold></highlight> through a serial port interface <highlight><bold>48</bold></highlight>, a parallel port, a game port or a universal serial bus (USB). A monitor <highlight><bold>52</bold></highlight> or other type of display device may also connected to the system bus <highlight><bold>34</bold></highlight> via an interface, such as a video adapter <highlight><bold>32</bold></highlight>. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The computer <highlight><bold>12</bold></highlight> operates in a networked environment using logical connections to one or more remote computing devices <highlight><bold>56</bold></highlight>, such as another personal computer, a handheld device, a mini computer, microprocessor-based or programmable consumer electronics or any other such device capable of displaying graphics information. The logical connection depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a communications network <highlight><bold>54</bold></highlight>, which may be a wireless network, a packet-switching network, etc. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The computer <highlight><bold>12</bold></highlight> is connected to the communications network <highlight><bold>54</bold></highlight> through a communications module <highlight><bold>50</bold></highlight>. The operations of the present invention may be distributed between the two computers <highlight><bold>12</bold></highlight>, <highlight><bold>56</bold></highlight>, such that one acts as a server and the other as a client (see <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). Operations of the present invention for each computer <highlight><bold>12</bold></highlight>, <highlight><bold>56</bold></highlight> (client and server) may be stored in RAM <highlight><bold>20</bold></highlight> of each computer <highlight><bold>12</bold></highlight>, <highlight><bold>56</bold></highlight> as application programs <highlight><bold>24</bold></highlight>, other program modules <highlight><bold>26</bold></highlight>, or on one of the disks <highlight><bold>38</bold></highlight>, <highlight><bold>42</bold></highlight>, <highlight><bold>46</bold></highlight>. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows a graphics manipulation system <highlight><bold>110</bold></highlight> for manipulating graphics information to be displayed on a remote computing device <highlight><bold>56</bold></highlight> according to an embodiment of the present invention. The graphics information may include, for example, text, icons and other images, graphical user interfaces, etc. The graphics manipulation system <highlight><bold>110</bold></highlight> may be embodied in various components of the computer <highlight><bold>12</bold></highlight> including application programs <highlight><bold>24</bold></highlight>, other program modules <highlight><bold>26</bold></highlight>, program data <highlight><bold>28</bold></highlight>, RAM <highlight><bold>20</bold></highlight> or other disks <highlight><bold>72</bold></highlight>, <highlight><bold>70</bold></highlight>, the communications interface <highlight><bold>50</bold></highlight> and the processing unit <highlight><bold>30</bold></highlight>. The graphics manipulation system <highlight><bold>110</bold></highlight> translates graphics information obtained from a graphics server (not shown) into a form that can be used and understood by the remote computing device <highlight><bold>56</bold></highlight> for displaying the graphics information. The translation of the graphics information is akin to a customization of the graphics information according to a device on which it will be displayed, the remote computing device <highlight><bold>56</bold></highlight>. This customization may take into account display, transmission and processing capabilities of the remote computing device <highlight><bold>56</bold></highlight>. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The remote computing device <highlight><bold>56</bold></highlight> requests graphics information to be displayed thereon. The request for the graphics information may be placed directly with the graphics manipulation system <highlight><bold>110</bold></highlight>, which retrieves the graphics information from the graphics server through the communications network <highlight><bold>54</bold></highlight>. The graphics server may be any computing device from which graphics information can be obtained, for example, a web server, a database server, etc. Alternatively, the remote computing device <highlight><bold>56</bold></highlight> may request the graphics information from the graphics server, which requests manipulation of the graphics information by the graphics manipulation system <highlight><bold>110</bold></highlight>. The graphics information may then be supplied to the remote computing device <highlight><bold>56</bold></highlight> directly from the graphics manipulation system <highlight><bold>110</bold></highlight> or through the graphics server. The exemplary embodiment in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> depicts the case where graphics information is requested and received from the graphics manipulation system <highlight><bold>110</bold></highlight>. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The remote computing device <highlight><bold>56</bold></highlight> may be any device having a display unit <highlight><bold>102</bold></highlight>, a communications module <highlight><bold>108</bold></highlight> and a graphics interpretation mechanism <highlight><bold>104</bold></highlight> with a data storage <highlight><bold>106</bold></highlight>. The remote computing device <highlight><bold>56</bold></highlight> may be, for example, a desktop computer, a handheld computer, a personal digital assistant (PDA), a portable/cellular telephone with display, etc. The communications module <highlight><bold>108</bold></highlight> requests and receives the graphics information from the graphics manipulation system <highlight><bold>110</bold></highlight>. Communication between the remote computing device <highlight><bold>56</bold></highlight> and the graphics manipulation system <highlight><bold>110</bold></highlight> is a logical connection that may be through the communications network <highlight><bold>54</bold></highlight>, such as a wireless communication means, a network connection such as a local area network, or a physical link (e.g. the remote computing device <highlight><bold>56</bold></highlight> and the graphics manipulation system <highlight><bold>110</bold></highlight> reside on the same physical computing entity or in close proximity to each other). The graphics interpretation mechanism <highlight><bold>104</bold></highlight> interprets the graphics information received from the communications module <highlight><bold>108</bold></highlight> to display the graphics information on the display unit <highlight><bold>102</bold></highlight>. The graphical interpretation may involve recognizing objects such as various geometric shapes (e.g. line, circle, polygon, etc.) and/or complex effects (e.g. anti-aliasing, semi-transparency, etc.) and generating the recognized objects on the display unit <highlight><bold>102</bold></highlight>. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> The graphics manipulation system <highlight><bold>110</bold></highlight> communicates with the remote computing device <highlight><bold>56</bold></highlight> via a communications module <highlight><bold>50</bold></highlight>. The communications module <highlight><bold>50</bold></highlight> receives requests from the remote computing device <highlight><bold>56</bold></highlight> for graphics information. Once this graphics information has been adapted for display by the remote computing device <highlight><bold>56</bold></highlight> the communications module <highlight><bold>50</bold></highlight> forwards the graphics information to the remote computing device <highlight><bold>56</bold></highlight> in response to the request. Although a single remote computing device <highlight><bold>56</bold></highlight> is depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> it will be recognizable by one skilled in the art that the communications module <highlight><bold>50</bold></highlight> may respond to the requests of multiple remote computing devices <highlight><bold>56</bold></highlight> of various types. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> A controller <highlight><bold>120</bold></highlight> in the graphics manipulation system <highlight><bold>110</bold></highlight> is responsible for the coordination and management of request fulfillment for graphics information. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> A request dissection mechanism <highlight><bold>126</bold></highlight> in the controller <highlight><bold>120</bold></highlight> extracts various components included in each request for graphics information. Each request made for graphics information includes a location of the graphics information (e.g. an address for the graphics server), identification information for the graphics information and characteristic information for the remote computing device <highlight><bold>56</bold></highlight>. The characteristic information summarizes the capabilities of the remote computing device <highlight><bold>56</bold></highlight> and may include such information as device type, amount of memory available (heap and storage), data transmission speed, processing speed and display characteristics. The display characteristics may include display size, color system, color depth, screen resolution (e.g. dots per inch), significant word/byte order (e.g. big-endian, little endian), and intrinsic graphics interpretation mechanism capabilities, such as support for basic shapes, complex shapes, bitmaps, effects, paints, strokes, etc. This information forms a device profile that is used to translate the graphics information into a form that is customized to the capabilities of the remote computing device <highlight><bold>56</bold></highlight>. The extracted request components (i.e. graphics information location and identification and characteristic information for the remote computing device <highlight><bold>56</bold></highlight>) are provided to a customization coordination mechanism <highlight><bold>128</bold></highlight> and a profile revision mechanism <highlight><bold>130</bold></highlight> for further processing. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The characteristic information for the remote computing device <highlight><bold>56</bold></highlight> is used by the profile revision mechanism <highlight><bold>130</bold></highlight> in the controller <highlight><bold>120</bold></highlight> to create and maintain a device profile for the remote computing device <highlight><bold>56</bold></highlight> in a profile data storage <highlight><bold>118</bold></highlight>. The profile data storage <highlight><bold>118</bold></highlight> contains profiles for devices that request graphics information from the graphics manipulation system <highlight><bold>110</bold></highlight>. The profiles for devices may include such information as the device type, amount of memory, data transmission speed, processing speed and display characteristics. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The profile revision mechanism <highlight><bold>130</bold></highlight> extracts the type of device information from the characteristic information and determines whether a device profile currently exists in the profile data storage <highlight><bold>118</bold></highlight> for the given device type. If a profile for the given device type currently exists then the profile revision mechanism <highlight><bold>130</bold></highlight> revises the information in the profile data storage <highlight><bold>118</bold></highlight> according to differences between the device profile in the profile data storage <highlight><bold>118</bold></highlight> and the characteristic information in the request. If a profile for the device does not exist in the profile data storage <highlight><bold>118</bold></highlight> then the profile revision mechanism <highlight><bold>130</bold></highlight> creates one based on the characteristic information in the request. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The customization coordination mechanism <highlight><bold>128</bold></highlight> in the controller <highlight><bold>120</bold></highlight> manages fulfillment of the request including transformation of the graphics information into a form that will be adapted according to capabilities of the remote computing device <highlight><bold>56</bold></highlight>. The customization coordination mechanism <highlight><bold>128</bold></highlight> searches a graphic content data storage <highlight><bold>122</bold></highlight> to determine if the graphics information has been previously requested and stored therein and if the requesting device was of the same type as the remote computing device <highlight><bold>56</bold></highlight>. A graphic content data storage <highlight><bold>122</bold></highlight> may contain previously obtained graphics information and/or previously customized graphics information. Graphics information from the graphics content data storage <highlight><bold>122</bold></highlight> is customized under the management of the customization coordination mechanism <highlight><bold>128</bold></highlight> according to the device type of the remote computing device <highlight><bold>56</bold></highlight>. Graphics information in the graphics content data storage <highlight><bold>122</bold></highlight> that has already been customized for the device type of the remote computing device <highlight><bold>56</bold></highlight> is in a form adapted for the capabilities of the remote computing device <highlight><bold>56</bold></highlight> and can be forwarded thereto in response to the request. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> If the graphics content data storage <highlight><bold>122</bold></highlight> does not contain graphics information that corresponds with the graphics information requested, the location and identification of the graphics information extracted from the request are used by the customization coordination mechanism <highlight><bold>128</bold></highlight> to retrieve the graphics information from the graphics server. The customization coordination mechanism <highlight><bold>128</bold></highlight> has the graphics information converted to a first format, from which an abstract representation can be made, and then has the abstract representation translated into a form adapted for the capabilities of the remote computing device <highlight><bold>56</bold></highlight>. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> A graphics server interface <highlight><bold>114</bold></highlight> is used by the customization coordination mechanism <highlight><bold>128</bold></highlight> to communicate with the graphics server for obtaining the graphics information. The graphics server interface <highlight><bold>114</bold></highlight> contacts the graphics server at the location indicated in the request for graphics information. The graphics information corresponding with the identification information in the request is then requested from the graphics server. The graphics server interface <highlight><bold>114</bold></highlight> receives the graphics information from the graphics server and provides this information to the customization coordination mechanism <highlight><bold>128</bold></highlight>. The graphics server interface <highlight><bold>114</bold></highlight> and the controller <highlight><bold>120</bold></highlight> together function for obtaining the graphics information. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> For graphics information that has not been customized (i.e. from the graphics content data storage <highlight><bold>122</bold></highlight> or the graphics server), the format of the graphics information is determined by a format identification mechanism <highlight><bold>142</bold></highlight>. The format identification mechanism <highlight><bold>142</bold></highlight> obtains the graphics information from the customization coordination mechanism <highlight><bold>128</bold></highlight>. The format identification mechanism <highlight><bold>142</bold></highlight> determines the format of the graphics information (i.e. bitmap, JPEG, TIFF, GIF, html, etc.) to allow for conversion of the graphics information from its current format to a first format. The format identification mechanism <highlight><bold>142</bold></highlight> examines the graphics information to locate known identifiers for various format. For example, the graphics information may have a filename that could be used to indicate the format of the graphics information (e.g. a file names landscape.jpg suggests that the file may be in a JPEG format). The format identification mechanism <highlight><bold>142</bold></highlight> may also examine a format signature in a header of the graphics information to try to determine the format thereof. The graphics information may be in any of a number of format, for example, bitmap, JPEG, TIFF, GIF, Scalable Vector Graphics (SVG), Computer Graphics Metafile (CGM), Enhanced Metafile Format (EMF), Portable Document Format (PDF), etc. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The graphics information is provided to a graphics reformatting mechanism <highlight><bold>124</bold></highlight> along with information on the current format. The graphics reformatting mechanism <highlight><bold>124</bold></highlight> transforms the format of the graphics information into the first format. The graphics reformatting mechanism <highlight><bold>124</bold></highlight> contains multiple format-specific mechanisms <highlight><bold>132</bold></highlight> to <highlight><bold>140</bold></highlight> for performing this function. Each of these format-specific mechanisms <highlight><bold>132</bold></highlight> to <highlight><bold>140</bold></highlight> is specific to the current format of the graphics information. For example, a bitmap mechanism <highlight><bold>132</bold></highlight> converts graphics information in a bitmap format into the first format; a TIFF mechanism <highlight><bold>134</bold></highlight> converts graphics information in a TIFF format into the first format; a JPEG mechanism <highlight><bold>136</bold></highlight> converts graphics information in a JPEG format into the first format; a GIF mechanism <highlight><bold>138</bold></highlight> converts graphics information in a GIF format into the first format, etc. Each of the mechanisms <highlight><bold>132</bold></highlight> to <highlight><bold>140</bold></highlight> can be any of a number of well known file format conversion mechanisms. In this manner graphics information in multiple formats can be converted into a single format, the first format. The graphics information in the first format is provided to the customization coordination mechanism <highlight><bold>128</bold></highlight> from the graphics reformatting mechanism <highlight><bold>124</bold></highlight>. The first format should represent most of the vector graphics, bitmap graphics and document formatting in the graphics information. The grammar of the first format should also enable a representation of the graphics information that efficiently stores and manipulates the graphics information as well as enable easy construction of an abstract representation of the graphics information. The first format may be, for example, a vector based on the W3C Scalable Vector Graphic specification, CGM, PDF, etc. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> A graphics abstraction mechanism <highlight><bold>116</bold></highlight> receives the graphics information in the first format from the customization coordination mechanism <highlight><bold>128</bold></highlight> and creates an abstract representation of the graphics information. The abstract representation illustrates each entity in the graphics information as an object and shows the relationship between different objects. For example, a circle and all information relating to the display of the circle, such as, size, fill, line thickness, etc., may be considered to be an object. The abstract representation may take the form of, for example, a tree. The first format should enable construction of the abstract representation. The abstract representation offers a view of the graphics information that is conducive to simplification, reduction or revision of the graphics information. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> A graphics customization mechanism <highlight><bold>112</bold></highlight> receives the abstract representation of the graphics information from the customization coordination mechanism <highlight><bold>128</bold></highlight> for manipulating the form of the graphics information into one that can be transmitted to the remote computing device <highlight><bold>56</bold></highlight> and displayed thereon. The graphics customization mechanism <highlight><bold>112</bold></highlight> produces graphics information in a second format that may vary according to the device type of the remote computing device <highlight><bold>56</bold></highlight>. The second format is independent of the capabilities or device type of the remote computing device <highlight><bold>56</bold></highlight>. The manipulation of the graphics information is based on the capabilities of the remote computing device <highlight><bold>56</bold></highlight> as determined from a device profile in the profile data storage <highlight><bold>118</bold></highlight> for the remote computing device type. The manipulations may also be performed to increase a speed with which the graphics information may be sent to the remote computing device <highlight><bold>56</bold></highlight> or a speed with which the graphics information is displayed on the computing device <highlight><bold>56</bold></highlight>. The actions involved in the manipulations may include removing information that cannot be displayed on the remote computing device <highlight><bold>56</bold></highlight> (e.g. color information if the display unit <highlight><bold>102</bold></highlight> is grayscale), and other information that describes or verifies the graphics information but is not used for display purposes. The graphics information in the second format may be simplified but still maintain a visual representation similar to the graphics information in the original format from the graphics server. The graphics customization mechanism <highlight><bold>12</bold></highlight> functions to conform the graphics information to a format adapted for the capabilities of the remote computing device <highlight><bold>56</bold></highlight> by assessing manipulations to be made and then harmonizing the graphics information with the capabilities of the remote computing device <highlight><bold>56</bold></highlight>. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The graphics information may be stored in the graphic content data storage <highlight><bold>122</bold></highlight> by the customization coordination mechanism <highlight><bold>128</bold></highlight> after it has been received from the graphics server (i.e. stored in a format that is not customized for a device type). The graphics information may also be stored in the graphic content data storage <highlight><bold>122</bold></highlight> by the customization coordination mechanism <highlight><bold>128</bold></highlight> after it has been transformed into the second format by the graphics customization mechanism <highlight><bold>112</bold></highlight>. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a system diagram of the graphics customization mechanism <highlight><bold>112</bold></highlight> of the graphics manipulation system <highlight><bold>110</bold></highlight>. A graphics customization controller <highlight><bold>212</bold></highlight> receives the abstract representation and information on the remote computing device profile from the customization coordination mechanism <highlight><bold>128</bold></highlight> in the controller <highlight><bold>120</bold></highlight>. The graphics customization controller <highlight><bold>212</bold></highlight> manages the process of transforming the abstract representation into graphics information in the second format based on the device profile for the remote computing device <highlight><bold>56</bold></highlight>. The graphics information in the second format includes rendering processes that can be performed prior to interpretation by the graphics interpretation mechanism <highlight><bold>104</bold></highlight> in the remote computing device <highlight><bold>56</bold></highlight>. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> Information on the remote computing device profile is provided by the graphics customization controller <highlight><bold>212</bold></highlight> to a profile interpretation mechanism <highlight><bold>214</bold></highlight>. The information on the remote computing device profile may be the device profile as it is stored in the profile data storage <highlight><bold>118</bold></highlight> or it may comprise identification information sufficient for the profile interpretation mechanism <highlight><bold>214</bold></highlight> to retrieve the device profile from the profile data storage <highlight><bold>118</bold></highlight>. The profile interpretation mechanism <highlight><bold>214</bold></highlight> construes the device profile or characteristics of the remote computing device <highlight><bold>56</bold></highlight> to create a set of constraints for the graphics information that will be returned to the remote computing device <highlight><bold>56</bold></highlight>. That is, the profile interpretation mechanism <highlight><bold>214</bold></highlight> determines the capabilities of the remote computing device <highlight><bold>56</bold></highlight> and formulates constraints to ensure that these capabilities will not be exceeded or that demand on the remote computing device <highlight><bold>56</bold></highlight> resources will not exceeded a given threshold (e.g. 70% of available resources, etc). The set of constraints may include display size, graphics information file size, display colors, etc. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> The set of constraints is provided to the graphics customization controller <highlight><bold>212</bold></highlight> to conform the abstract representation to these constraints. A mechanism may exist in the graphics customization mechanism <highlight><bold>112</bold></highlight> to conform the abstract representation to each constraint (i.e. a mechanism corresponding to each constraint). The graphics customization controller <highlight><bold>212</bold></highlight> determines a sequence of manipulations by which the set of constraints will be satisfied. This sequence of manipulations includes information on the type of transformations to be performed by each manipulation mechanism <highlight><bold>200</bold></highlight> to <highlight><bold>210</bold></highlight> and an order for performing each transformation. The graphics customization controller <highlight><bold>212</bold></highlight> performs the sequence of manipulations by successively passing the abstract representation with modifications from mechanism <highlight><bold>200</bold></highlight> to <highlight><bold>210</bold></highlight> to each mechanism <highlight><bold>200</bold></highlight> to <highlight><bold>210</bold></highlight> indicated in the sequence. When providing each mechanism <highlight><bold>200</bold></highlight> to <highlight><bold>210</bold></highlight> with the abstract representations, the graphics customization controller <highlight><bold>212</bold></highlight> also supplies information on the type of manipulation to be performed. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> Each mechanism <highlight><bold>200</bold></highlight> to <highlight><bold>210</bold></highlight> receives the abstract representation with information on the type of manipulations that the mechanism <highlight><bold>200</bold></highlight> to <highlight><bold>210</bold></highlight> is to perform. The manipulations may be performed in a determined order, either as indicated by the graphics customization controller <highlight><bold>212</bold></highlight> or determined by the mechanism <highlight><bold>200</bold></highlight> to <highlight><bold>210</bold></highlight>. A color modification mechanism <highlight><bold>200</bold></highlight> manipulates color, shading, and filling information in the abstract representation. The manipulations of color, shading and filling are performed to align color information for the abstract representation with the capability of the display unit <highlight><bold>102</bold></highlight>. Manipulation of the color information by the color modification mechanism <highlight><bold>200</bold></highlight> may involve changing the colors present in the abstract representation or changing the manner in which colors are represented. Changing the colors present in the abstract representation may be performed to convert the complexity of the color information in the graphics information embodied by the abstract representation and to unify the color presentation for multiple pages or multiple files of graphics information. The color information in the abstract representation is in the same form as the color information of the original graphics information from the graphics server. If the capabilities of the display unit <highlight><bold>102</bold></highlight> differ from the color information then the color information for the abstract representation is converted into color information that correlates with the display unit&apos;s <highlight><bold>102</bold></highlight> capabilities. For example, if the color complexity of the abstract representation is in the RGB (Red-Green-Blue) color model and the display unit <highlight><bold>102</bold></highlight> presents greyscale images then the abstract representation&apos;s color information is converted accordingly. The color modification mechanism <highlight><bold>200</bold></highlight> converts any color information from the abstract representation to any color system support by the remote computing device <highlight><bold>56</bold></highlight>, such as, ARGB/RGBA (alpha-red-green-blue), RGB (24 bits), RGB (16 bits), RGB (12 bits), paletted color systems, greyscale (8 bits), greyscale (4 bits) and black and white). </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> During the conversion between color information complexities, the color modification mechanism <highlight><bold>200</bold></highlight> identifies the complexity of the color information in the abstract representation as well as the complexity of the color information that can be presented on the display unit <highlight><bold>102</bold></highlight> as indicated in the device profile. The conversion between the color information complexities can be performed according to any of a number of conversion algorithms known in the art. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> Conversion of the complexity of the color information may also be performed on the basis of the capabilities of the graphics interpretation mechanism <highlight><bold>104</bold></highlight>. While the display unit <highlight><bold>102</bold></highlight> may be configured to display any color system, the graphics interpretation mechanism <highlight><bold>104</bold></highlight> may only be able to interpret a limited number of all possible colors (i.e. a limited color palette). The color modification mechanism <highlight><bold>200</bold></highlight> identifies the color information complexity of the abstract representation and converts it to the same color information complexity as the display unit <highlight><bold>102</bold></highlight>. The color modification mechanism <highlight><bold>200</bold></highlight> identifies the color information complexity of the graphics interpretation mechanism <highlight><bold>104</bold></highlight>. The color information complexity for the abstract representation is restricted to include at most the number of colors in the color palette of the graphics interpretation mechanism <highlight><bold>104</bold></highlight>. Restriction of color information complexity in the abstract representation may be performed according to any of a number of algorithms known in the art, such as, building a histogram representation of the colors in the abstract representation and reducing the number of colors based on color frequency and color differentiation. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> Unification of color presentation occurs when graphics information is spread over multiple viewing pages or originates from multiple files. If the graphics information requested by the remote computing device <highlight><bold>56</bold></highlight> is in multiple files when obtained from the graphics server, each file may contain different complexities of color information. If these files are to remain separate then the color modification mechanism <highlight><bold>200</bold></highlight> ensures uniformity among all of the separate files after color information complexity conversion has been performed. Any of a number of known techniques for ensuring color information uniformity between multiple files may be used. For example, a histogram may be produced for the color information for each file and the results of each histogram may be mapped against each file to produce a single color palette for all files. The color information for each file may then be converted to conform to the determined single color palette. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> If the files are to be merged into a single abstract representation then the color information for each file may be mapped to a single color complexity and color format before merging. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> Changing the manner in which colors are represented is performed to align the color information format of the abstract information with that of the display unit <highlight><bold>102</bold></highlight>. Color information may be represented in a number of different formats including CMYK (cyan-magenta-yellow-black), RGB, HIS (hue-saturation-intensity) and CIE XYZ (Commission Internationale de l&apos;Eclairage). The color modification mechanism <highlight><bold>200</bold></highlight> determines the color information format of the abstract representation and the color information format of the display unit <highlight><bold>102</bold></highlight> as indicated by the device profile. The color modification mechanism <highlight><bold>200</bold></highlight> converts the color information format of the abstract representation to that of the display unit <highlight><bold>102</bold></highlight> according to any of a number of conversion algorithms known in the art. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> Manipulation of the shading and filling information by the color modification mechanism <highlight><bold>200</bold></highlight> may involve converting the shading and filling information of the abstract representation to a form corresponding to that indicated in the device profile. A graphics object can have filled (painted interior) or stroked (painted outline) shapes and text where color, gradients (linear or radial) or patterns (vector, images or tiled) are used. Gradients consist of continuously smooth color transitions along a vector from one color to another, possibly followed by additional transitions along the same vector to other colors). Patterns and gradients may be used to fill or stroke an object. Patterns may replicate a pre-defined graphic object at fixed intervals in the standard x and y axis direction to cover the area to be painted. For example, if the graphics interpretation mechanism <highlight><bold>104</bold></highlight> or the display unit <highlight><bold>102</bold></highlight> are not provided with the ability to display gradient fills or pattern fills then these fills are converted to a solid fill. The color modification mechanism <highlight><bold>200</bold></highlight> receives information on the shading and filling that can be displayed by the display unit <highlight><bold>102</bold></highlight> and graphics interpretation mechanism <highlight><bold>104</bold></highlight> from the device profile and shading and filling information from the abstract representation. The shading and filling information for the abstract representation is conformed to the shading and filling capabilities indicated in the device profile. Conversion of the shading and filling information may be performed according to any of a number of known algorithms. For example, converting a gradient fill to a solid fill may be performed using the midpoint of the gradient color. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> A graphics modification mechanism <highlight><bold>202</bold></highlight> manipulates the geometric representation of objects in the abstract representation. The graphics modification mechanism <highlight><bold>202</bold></highlight> performs geometric manipulations to provide objects with a geometric shape that is displayable by the remote computing device <highlight><bold>56</bold></highlight>. The geometric manipulation may include converting curve formats, performing affine transformation and converting caps and joins. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Conversion of the curve formats in the abstract representation may involve converting curve segment objects in formats that cannot be displayed and interpreted by the remote computing device <highlight><bold>56</bold></highlight> into a series of line segment objects. Curve format conversion may also be performed to reduce the amount of data used to describe a curve object, thereby reducing the transmission size of graphics information. The curve format may be, for example, a cubic bezier, a shorthand cubic bezier, a quadratic bezier, a shorthand/smooth quadratic bezier or an elliptical arc. The graphics modification mechanism <highlight><bold>202</bold></highlight> determines the curve format for each curve object in the abstract representation and the curve format capabilities indicated in the device profile. The graphics modification mechanism <highlight><bold>202</bold></highlight> aligns the curve format of each curve object in the abstract presentation with the curve format in the device profile according to any one of a number of curve conversion techniques known in the art. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> Affine transformations may be performed on the abstract representation by the graphics modification mechanism <highlight><bold>202</bold></highlight> to avoid having the graphics interpretation mechanism <highlight><bold>104</bold></highlight> perform this manipulation. Performing manipulation and transformations before transmitting the graphics information reduces the amount of processing that is done by the graphics interpretation mechanism <highlight><bold>104</bold></highlight> for displaying the graphics information. This allows effects that use larger amounts of computing resources than are available on the remote computing device <highlight><bold>56</bold></highlight> to be incorporated into the graphics information before transmission to the remote computing device <highlight><bold>56</bold></highlight>. The graphics modification mechanism <highlight><bold>202</bold></highlight> may perform any one of a number of affine transformation algorithms known in the art. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> Conversion of the caps and joins format(s) in the abstract representation may involve converting linecaps and linejoins objects into formats that can be displayed and interpreted by the remote computing device <highlight><bold>56</bold></highlight>. The linecaps objects, shape used at the end of open subpaths when they are stroked, may be, for example, butt, round, or square. The linejoins objects, shape used at the corners of paths, may be, for example, miter, round or beveled. The graphics modification mechanism <highlight><bold>202</bold></highlight> determines the format of each linecap and linejoin object in the abstract representation and the format(s) that can be displayed and interpreted by the remote computing device <highlight><bold>56</bold></highlight> as indicated in the device profile. The graphics modification mechanism converts the linecaps and linejoins formats in the abstract representation that cannot be displayed and interpreted into format(s) that can be displayed and interpreted according to known linecap and line join format conversion techniques. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> A display adaptation mechanism <highlight><bold>204</bold></highlight> manipulates the abstract representation to provide graphics information that is aligned with the size of the display as indicated in the device profile. The display adaptation mechanism <highlight><bold>204</bold></highlight> may perform such operations as file merging, script incorporation and display region clipping. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> The display adaptation mechanism <highlight><bold>204</bold></highlight> may incorporate multiple files belonging to the requested graphic information into a single abstract representation. The resulting abstract representation may span multiple pages, based on the size of the display unit <highlight><bold>102</bold></highlight>, and may include graphics information that was in multiple formats when received from the graphics server. If a specific single page has been requested by the remote computing device <highlight><bold>56</bold></highlight> then the display adaptation mechanism <highlight><bold>204</bold></highlight> creates a separate abstract representation containing only the requested page. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> Script functions referenced in the abstract representation are determined by the display adaptation mechanism <highlight><bold>204</bold></highlight> to retrieve the script or outcome of the script for incorporation into the abstract representation. Similar to file merging, script incorporation involves determining the outcome of the script and merging the script outcome with the abstract representation. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> The display adaptation mechanism <highlight><bold>204</bold></highlight> determines the size of the display of the graphics information embodied in the abstract representation and the size of the display unit <highlight><bold>102</bold></highlight> as indicated in the device profile. The display adaptation mechanism <highlight><bold>204</bold></highlight> aligns the size of the display of the abstract representation with that of the display unit <highlight><bold>102</bold></highlight>. This may be accomplished by reducing any raster data from the abstract representation to a size more adapted for the remote computing device <highlight><bold>56</bold></highlight>. The reduction can be done according to any one of a number of techniques known in the art such as interpolation or decimation. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> A text conversion mechanism <highlight><bold>206</bold></highlight> converts the format of any text objects in the abstract representation into a format that can be interpreted by the graphics interpretation mechanism <highlight><bold>104</bold></highlight>. The graphics interpretation mechanism <highlight><bold>104</bold></highlight> may render the format in a stroke font format or a raster font format. The stroked font format uses vectors (non-outline) and is capable of scaling and rotation. The raster font format uses bitmaps and scales according to integers (e.g. 2, 3, etc.) and rotations of 90&deg;. The text conversion mechanism <highlight><bold>206</bold></highlight> examines all text objects in the abstract representation to determine all font formats used by the graphics information. The text conversion mechanism <highlight><bold>206</bold></highlight> converts the format of the text objects to provide a consistent format between different text objects and to provide the text objects in a format that can be interpreted by the graphics interpretation mechanism <highlight><bold>104</bold></highlight>. Conversion of text objects between formats can be performed according to any of a number of techniques known in the art. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> A transmission size adaptation mechanism <highlight><bold>210</bold></highlight> manipulates the abstract representation to produce graphics information that is of a transmission size that is compatible with the communication link between the graphics manipulation system <highlight><bold>110</bold></highlight> and the remote computing device <highlight><bold>56</bold></highlight>. That is, the transmission size adaptation mechanism <highlight><bold>210</bold></highlight> reduces the transmission size of the graphics information to avoid lengthy transmission times when the capacity of the communications link is small. Based on the remote computing device profile the transmission size adaptation mechanism <highlight><bold>210</bold></highlight> determines a desirable size for the graphics information using information on the capacity of the remote computing devices&apos; data storage <highlight><bold>106</bold></highlight> and the capacity of the communications link. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> The abstract representation is manipulated by the transmission size adaptation mechanism <highlight><bold>210</bold></highlight> to provide a sufficient reduction in the graphics information size. These reductions can be implemented using known techniques such as removing redundant information, removing non-visual elements, bitmap re-sampling, simplifying complex shapes, reducing the resolution of the graphics information and reducing the complexity of the coordinate system used for representing the graphics information. Removal of redundant information involves finding objects in the abstract representation with common properties and grouping these objects in such a way that the properties are not repeatedly represented. Removal of non-visual elements involves removing any objects that are not visually represented in the graphics information such as comments, empty groups, invisible shapes, shapes outside of a determined clipping region, etc. Bitmap re-sampling involves reducing the resolution of bitmap format graphics information as their size while maintaining an acceptable visual quality. Simplification of complex shapes involves replacing complex shapes (such as polyline, path, polygon, curves, etc.) with visually similar shapes (such as rectangle, line, circle, etc.). Reduction in image resolution may involves reducing portions of the graphics information in the abstract representation having a higher resolution than can be viewed by the remote computing device <highlight><bold>56</bold></highlight>. Reduction of the complexity of the coordinate system used to represent the graphics information may include, for example, converting multiple unites (e.g. centimeter, inches, etc.) and floating point user coordinate to an integer space. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> A format conversion mechanism <highlight><bold>208</bold></highlight> converts the abstract representation into a format that can be interpreted by the remote computing device <highlight><bold>56</bold></highlight>. After the abstract representation has been manipulated by the other mechanisms <highlight><bold>200</bold></highlight> to <highlight><bold>210</bold></highlight> into a form that corresponds with the capabilities of the remote computing device <highlight><bold>56</bold></highlight>, the abstract representation is provided to the format conversion mechanism <highlight><bold>208</bold></highlight> with indication of a format that can be interpreted by the graphics interpretation mechanism <highlight><bold>104</bold></highlight>. The format conversion mechanism <highlight><bold>208</bold></highlight> performs the opposite action of the graphics abstraction mechanism <highlight><bold>116</bold></highlight> by converting the abstract representation into graphics information, although possibly in a different format than the original graphics information. The final graphics information produced by the format conversion mechanism <highlight><bold>208</bold></highlight> should be small, simple and flexible enough to support various device types. The final format of the graphics information should also support a number of geometric shapes and graphical objects as well as different color systems. Text and font information should also be supported by the final format. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 4A and B</cross-reference> show a method <highlight><bold>300</bold></highlight> of manipulating graphics information at the graphics manipulation system <highlight><bold>110</bold></highlight> according to the remote computing device <highlight><bold>56</bold></highlight> on which the graphics information is to be displayed. A request for graphics information is received in step <highlight><bold>302</bold></highlight> from the remote computing device <highlight><bold>56</bold></highlight>. The portions in the request providing content are extracted in step <highlight><bold>304</bold></highlight>. Identification information for the requested graphics information is extracted along with information on the remote computing device <highlight><bold>56</bold></highlight>. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> The profile data storage <highlight><bold>118</bold></highlight> is searched in step <highlight><bold>306</bold></highlight> to determine if it contains a profile corresponding to the device type of the remote computing device <highlight><bold>56</bold></highlight>. If a corresponding device profile is found in the profile data storage <highlight><bold>118</bold></highlight> then the differences between the device information in the request and the profile is determined in step <highlight><bold>308</bold></highlight>. The profile is then updated in step <highlight><bold>310</bold></highlight> by differing information in the profile with the corresponding information from the remote computing device <highlight><bold>56</bold></highlight> information from the request. If a corresponding device profile is not found in the profile data storage <highlight><bold>118</bold></highlight>, then a new profile is created based on the remote computing device <highlight><bold>56</bold></highlight> information in the request in step <highlight><bold>312</bold></highlight>. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> After a profile has been created or determined then the graphic content data storage <highlight><bold>122</bold></highlight> is searched to determine if the graphics information identified in the request is in the data storage <highlight><bold>122</bold></highlight> in step <highlight><bold>314</bold></highlight>. If the requested graphics information is not in the graphic content data storage <highlight><bold>122</bold></highlight> then the graphics information is requested from the graphics server identified in the request in step <highlight><bold>316</bold></highlight>. The requested graphics information is received from the graphics server in step <highlight><bold>318</bold></highlight>. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> After the graphics information has been received or retrieved from the graphic content data storage <highlight><bold>122</bold></highlight>, it is determined if the graphics information in a format specific for the remote computing device <highlight><bold>56</bold></highlight> in step <highlight><bold>320</bold></highlight>. That is, it is determined in step <highlight><bold>320</bold></highlight> if the graphics information has been customized for the remote computing device <highlight><bold>56</bold></highlight>. If the graphics information is in an unspecified format then the original format of the graphics information is determined in step <highlight><bold>322</bold></highlight>. The graphics information is converted from the original format to a first format in step <highlight><bold>324</bold></highlight>. This produces graphics information in a single format that may have originally been in multiple formats. An abstract representation of the graphics information in the first format is created in step <highlight><bold>326</bold></highlight>. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> A set of constraints are determined in step <highlight><bold>328</bold></highlight> for the graphics information embodied by the abstract represented based on the profile of the remote computing device <highlight><bold>56</bold></highlight>. These constraints take into consideration the capabilities of the remote computing device <highlight><bold>56</bold></highlight> in such areas as display size and color, memory capacity, transmission link capacity, etc. A series of manipulations is determined in step <highlight><bold>330</bold></highlight> that will conform the abstract representation to the set of constraints to produce graphics information that can be displayed and interpreted by the remote computing device <highlight><bold>56</bold></highlight>. These manipulations are systematically performed on the abstract representation in step <highlight><bold>332</bold></highlight>. The manipulations may include such actions as changing the colors used in the abstract representation, changing the representation of colors, unifying color presentation over multiple files, converting shading and filing information, converting curve object format, performing affine transformations, converting cap and join object format, conforming display size with that of the display unit <highlight><bold>102</bold></highlight>, converting text form, reducing transmission size, etc. The manipulated abstract representation is converted in step <highlight><bold>334</bold></highlight> is converted into graphics information in a second format that is interpretable by the remote computing device <highlight><bold>56</bold></highlight>. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> The graphics information in the second format, either obtained from the graphic content data storage <highlight><bold>122</bold></highlight> or the manipulated abstract representation, is transmitted to the remote computing device in step <highlight><bold>336</bold></highlight>. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> Manipulation of graphics information according to a computing device on which graphics information is to be displayed is performed. The capabilities of the computing device are used to form a set of constraints for the graphics information obtained from a content provider. These constraints take into consideration such factors as display characteristics of the computing device, processing power, available memory and communication capacity. The graphics information is manipulated to conform to the set of constraints, resulting in graphics information that can be displayed and interpreted by the computing device. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> While the method disclosed herein has been described and shown with reference to particular steps performed in a particular order, it will be understood that steps may be combined, subdivided or reordered to form an equivalent method without departing from the teachings of the present invention. Accordingly, unless specifically indicated herein, the order and grouping of the steps if not a limitation of the present invention. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> It is apparent to one skilled in the art that numerous modifications and departures from the specific embodiments described herein may be made without departing from the spirit and scope of the invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of modifying graphics information to be displayed on a computing device having a set of display characteristics representing display capabilities of the computing device, said method comprising: 
<claim-text>determining a scheme by which to conform characteristics of the graphics information to the set of display characteristics; and </claim-text>
<claim-text>harmonizing the characteristics of the graphics information to the set of display characteristics according to said scheme to provide the graphics information in a format adapted for the set of display characteristics. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further including, prior to the step of determining: 
<claim-text>receiving a request for modification of the graphics information, said request including an indication of the set of display characteristics of the computing device; and </claim-text>
<claim-text>obtaining the graphics information in accordance with said request. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein said scheme is based on said indication of the set of display characteristics in said request. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further including: 
<claim-text>converting the graphics information to a first format, prior to harmonizing the characteristics of the graphics information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference> further including: 
<claim-text>creating an abstract representation of the graphics information in the first format, wherein the first format is suitable for facilitating creation of said abstract representation. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference> wherein the step of determining includes: 
<claim-text>determining the characteristics of the graphics information using said abstract representation. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference> wherein the step of determining includes: 
<claim-text>determining a set of graphics display constraints for the computing device based on the set of display characteristics; and </claim-text>
<claim-text>determining a set of manipulations to conform the characteristics of the graphics information to said set of graphics display constraints; and </claim-text>
<claim-text>constructing said scheme to apply each manipulation in said set of manipulations to said abstract representation in a predetermined order; and wherein the step of harmonizing includes: </claim-text>
<claim-text>applying said scheme to the graphics information by applying each manipulation in said set of manipulations to said abstract representation in said predetermined order to provide the graphics information in the adapted for the set of display characteristics. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein the step of determining includes: 
<claim-text>determining a set of graphics display constraints for the computing device based on the set of display characteristics; and </claim-text>
<claim-text>determining a set of manipulations to conform the characteristics of the graphics information to said set of graphics display constraints; and </claim-text>
<claim-text>constructing said scheme to apply each manipulation in said set of manipulations to the graphics information in a predetermined order. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference> wherein the step of harmonizing includes: 
<claim-text>applying said scheme to the graphics information by applying each manipulation in said set of manipulations to the graphics information in said predetermined order to provide the graphics information in the adapted for the set of display characteristics. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further including: 
<claim-text>providing the graphics information in the format adapted for the set of display characteristics to the computing device for display thereon. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> further including: 
<claim-text>interpreting the graphics information in the format adapted for the set of display characteristics to provide the graphics information in a format interpretable by the computing device for display thereon; and </claim-text>
<claim-text>wherein the format adapted for the set of display characteristics is independent of a type of the computing device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference> wherein said scheme may be determined to optimize a speed at which the graphics information is provided to the computing device and a speed at which the computing device display the graphics information </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A system for modifying graphics information to be displayed on a computing device having a set of display characteristics representing display capabilities of the computing device, said system comprising: 
<claim-text>a conformation mechanism for assessing the set of display characteristics and characteristics of the graphics information to determine a scheme by which to conform the characteristics of graphics information to the set of display characteristics; </claim-text>
<claim-text>a graphics modification mechanism for harmonizing the characteristics of the graphics information to the set of display characteristics according to said scheme; and </claim-text>
<claim-text>a controller for orchestrating modification of the graphics information to provide the graphics information in a adapted for the set of display characteristics. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference> further including: 
<claim-text>a graphics obtainment mechanism for receiving a request for modification of the graphics information and obtaining the graphics information accordingly, said request including an indication of the set of display characteristics of the computing device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> further including: 
<claim-text>a request dissection mechanism for obtaining the set of display characteristics from said request. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference> further including: 
<claim-text>a format conversion mechanism for converting the graphics information to a first format. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 16</dependent-claim-reference> further including: 
<claim-text>a graphics abstraction mechanism for creating an abstract representation of the graphics information; and </claim-text>
<claim-text>wherein said first format is suitable for facilitating creation of said abstract representation. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference> wherein said conformation mechanism includes: 
<claim-text>a characteristic interpretation mechanism for determining a set of graphics display constraints for the computing device based on the set of display characteristics and determining a set of manipulations to conform characteristics of the graphics information to said set of constraints; and </claim-text>
<claim-text>a control mechanism for constructing said scheme to apply each manipulation in said set of manipulations to said abstract representation in a predetermined order; and wherein said graphics harmonization mechanism includes: </claim-text>
<claim-text>a manipulation mechanism for applying said scheme to the graphics information by applying each manipulation in said set of manipulations to said abstract representation in said predetermined order to provide the graphics information in the format adapted for the set of display characteristics. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference> wherein said conformation mechanism includes: 
<claim-text>a characteristic interpretation mechanism for determining a set of graphics display constraints for the computing device based on the set of display characteristics and determining a set of manipulations to conform characteristics of the graphics information to said set of constraints; and </claim-text>
<claim-text>a control mechanism for constructing said scheme to apply each manipulation in said set of manipulations to said abstract representation in a predetermined order. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference> wherein said graphics harmonization mechanism includes: 
<claim-text>a manipulation mechanism for applying said scheme to the graphics information by applying each manipulation in said set of manipulations to the graphics information in said predetermined order to provide the graphics information in the format adapted for the set of display characteristics. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The system of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference> further including: 
<claim-text>a communications module for providing the harmonized graphics information in the format adapted for the set of display characteristics to the computing device for display thereon. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference> further including: 
<claim-text>a graphics interpretation mechanism for the computing device to interpret the graphics information in the format adapted for the set of display characteristics for provision of the graphics information in a format interpretable by the computing device for display thereon; and </claim-text>
<claim-text>wherein the format adapted for display is independent of a type of the computing device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The system according to <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference> wherein said scheme may be determined to optimize a speed at which the graphics information is provided to the computing device and a speed at which the computing device display the graphics information </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A computer readable medium having stored thereon computer-executable instructions for modifying graphics information to be displayed on a computing device having a set of display characteristics representing display capabilities of the computing device, said computer-executable instructions comprising: 
<claim-text>determining a scheme by which to conform characteristics of the graphics information to the set of display characteristics; </claim-text>
<claim-text>harmonizing the characteristics of the graphics information to the set of display characteristics according to said scheme to provide the graphics information in a format adapted for the set of display characteristics. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The computer-executable instructions according to <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> further including, prior to the step of determining: 
<claim-text>receiving a request for modification of the graphics information, said request including an indication of the set of display characteristics of the computing device; and </claim-text>
<claim-text>obtaining the graphics information in accordance with said request. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The computer-executable instructions according to <dependent-claim-reference depends_on="CLM-00022">claim 25</dependent-claim-reference> wherein said scheme is based on said indication of the set of display characteristics in said request. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The computer-executable instructions according to <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> further including: 
<claim-text>converting the graphics information to a first format, prior to harmonizing the characteristics of the graphics information. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The computer-executable instructions according to <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference> further including: 
<claim-text>creating an abstract representation of the graphics information in the first format, wherein the first format is suitable for facilitating creation of said abstract representation. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The computer-executable instructions according to <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference> wherein the step of determining includes: 
<claim-text>determining the characteristics of the graphics information using said abstract representation. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The computer-executable instructions according to <dependent-claim-reference depends_on="CLM-00022">claim 29</dependent-claim-reference> wherein the step of determining includes: 
<claim-text>determining a set of graphics display constraints for the computing device based on the set of display characteristics; and </claim-text>
<claim-text>determining a set of manipulations to conform the characteristics of the graphics information to said set of graphics display constraints; and </claim-text>
<claim-text>constructing said scheme to apply each manipulation in said set of manipulations to said abstract representation in a predetermined order; and wherein the step of harmonizing includes: </claim-text>
<claim-text>applying said scheme to the graphics information by applying each manipulation in said set of manipulations to said abstract representation in said predetermined order to provide the graphics information in the format adapted for the set of display characteristics. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The computer-executable instructions according to <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> wherein the step of determining includes: 
<claim-text>determining a set of graphics display constraints for the computing device based on the set of display characteristics; </claim-text>
<claim-text>determining a set of manipulations to conform the characteristics of the graphics information to said set of graphics display constraints; and </claim-text>
<claim-text>constructing said scheme to apply each manipulation in said set of manipulations to the graphics information in a predetermined order. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The computer-executable instructions according to <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference> wherein the step of harmonizing includes: 
<claim-text>applying said scheme to the graphics information by applying each manipulation in said set of manipulations to the graphics information in said predetermined order to provide the graphics information in the adapted for the set of display characteristics. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The computer-executable instructions according to <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> further including: providing the graphics information in the format adapted for the set of display characteristics to the computing device for display thereon. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The computer-executable instructions according to <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> further including: 
<claim-text>interpreting the graphics information in the format adapted for the set of display characteristics at the computing device to provide the graphics information in a format interpretable by the computing device for display thereon; and </claim-text>
<claim-text>wherein the format adapted for the set of display characteristics is independent of a type of the computing device. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The computer-executable instructions according to <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference> wherein said scheme may be determined to optimize a speed at which the graphics information is provided to the computing device and a speed at which the computing device display the graphics information</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>4A</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030001864A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030001864A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030001864A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030001864A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030001864A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030001864A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
