<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030001637A1-20030102-D00000.TIF SYSTEM "US20030001637A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030001637A1-20030102-D00001.TIF SYSTEM "US20030001637A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030001637A1-20030102-D00002.TIF SYSTEM "US20030001637A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030001637A1-20030102-D00003.TIF SYSTEM "US20030001637A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030001637A1-20030102-D00004.TIF SYSTEM "US20030001637A1-20030102-D00004.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030001637</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10180528</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020627</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-38871</doc-number>
</priority-application-number>
<filing-date>20010630</filing-date>
<country-code>KR</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H03L007/06</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>327</class>
<subclass>158000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Register controlled DLL reducing current consumption</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Hea-Suk</given-name>
<family-name>Jung</family-name>
</name>
<residence>
<residence-non-us>
<city>Ichon-shi</city>
<country-code>KR</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>BIRCH STEWART KOLASCH &amp; BIRCH</name-1>
<name-2></name-2>
<address>
<address-1>PO BOX 747</address-1>
<city>FALLS CHURCH</city>
<state>VA</state>
<postalcode>22040-0747</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A delay locked loop (DLL) usable in a semiconductor memory device and capable of reducing current consumption by operating the DLL loop when the semiconductor device is only at an operation mode, is provided. The semiconductor device includes a clock divider for producing a divided clock signal by dividing an internal clock signal, which is synchronized with an edge of an external clock signal; a clock generator for producing a reference clock signal, wherein the reference clock signal is activated after a half period of the external clock signal; a delay model for delaying the divided clock signal to compensate for a delay time in delay paths of the internal clock signal; a comparator for comparing a phase difference between the reference clock signal and an output signal from the delay model; a delay unit having a plurality of unit delayers; and a controller for controlling an amount of delay in the internal clock signal and the divided clock signal via the delay unit in response to a phase comparison signal from the comparator. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present application claims the priority benefit of Korean Patent Application No. 2001-38871 filed Jun. 30, 2001, under 35 U.S.C. &sect;119, and the contents of the Korean Patent Application is herein fully incorporated by reference. </paragraph>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The present invention related to a delay locked loop (DLL) in a semiconductor memory device and, more particularly, to a resister controlled DLL capable of reducing current consumption by operating the DLL loop when the semiconductor device is only at an operation mode. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> 2. Discussion of the Related Art </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> Generally, in system circuits of semiconductor devices, a clock signal has been used as a reference clock signal for adjusting operation timing or guaranteeing a high-speed operation without an error. When a clock signal from an external circuit is used in an internal circuit, a time delay (or clock skew) is generated. A DLL has been used to compensate for such a time delay by providing the same phase between the external and internal clock signals. As compared with the phase locked loop (PLL), the DLL has an advantage in that it is less sensitive to a noise than the PLL. Accordingly, the DLL has been widely used in synchronous memories such as DDR SDRAMs (Double Data Rate Synchronous DRAMs). A register controlled DLL has been generally used as a DLL circuit. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 1, a</cross-reference> conventional register controlled DLL includes first and second clock buffers <highlight><bold>11</bold></highlight> and <highlight><bold>12</bold></highlight>, a clock divider <highlight><bold>13</bold></highlight>, a phase comparator <highlight><bold>19</bold></highlight>, a delay unit <highlight><bold>10</bold></highlight> which has first to third delay lines <highlight><bold>14</bold></highlight> to <highlight><bold>16</bold></highlight>, a delay monitor <highlight><bold>23</bold></highlight> having a shift register <highlight><bold>17</bold></highlight> and a shift controller <highlight><bold>18</bold></highlight> in a DLL loop, first and second DLL drivers <highlight><bold>20</bold></highlight> and <highlight><bold>21</bold></highlight>, and a delay model <highlight><bold>22</bold></highlight>. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The first clock buffer <highlight><bold>11</bold></highlight> receives an inverted external clock signal /clk and produces a first clock signal fall_clk which is synchronized with a falling edge of the clock signal clk (or a rising edge of the clock signal /clk). Likewise, the second clock buffer <highlight><bold>12</bold></highlight> receives the external clock signal clk and produces a second clock signal rise_clk which is synchronized with a rising edge of the clock signal clk. The clock divider <highlight><bold>13</bold></highlight> divides the second clock signal rise_clk into N (N: a positive integer, typically N&equals;8) signals and then produces a reference clock signal ref and a divided clock signals div_in. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The first delay line <highlight><bold>14</bold></highlight> in the delay unit <highlight><bold>10</bold></highlight> receives and delays the first clock signal fall_clk according to an amount of delay from the shift register <highlight><bold>17</bold></highlight>, which is controlled by the shift controller <highlight><bold>18</bold></highlight>, and produces a first internal clock signal ifclk. Also, the second delay line <highlight><bold>15</bold></highlight> receives the second clock signal rise_clk according to an amount of delay from the shift register <highlight><bold>17</bold></highlight>, which is also controlled by the shift controller <highlight><bold>18</bold></highlight>,) and produces a second internal clock signal irclk. The first and second DLL drivers <highlight><bold>20</bold></highlight> and <highlight><bold>21</bold></highlight> receive the first and second internal clock signals ifclk and irclk and produce first and second DLL clock signals fclk_dll and rclk_dll, respectively. The third delay line <highlight><bold>16</bold></highlight> receives the divided clock signal div_in from the clock divider <highlight><bold>13</bold></highlight> and produces a delayed clock signal feedback_dly. The delay model <highlight><bold>22</bold></highlight> receiving the delayed clock signal feedback_dly provides the same signal processing path to the delayed clock signal feedback_dly as the actual signal processing. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The phase comparator <highlight><bold>19</bold></highlight> compares phases of the output signal (feed_back) from the delay model <highlight><bold>22</bold></highlight> with the reference clock signal ref and provides a control signal ctrl to the shift controller <highlight><bold>18</bold></highlight> according to the phase difference. The shift controller <highlight><bold>18</bold></highlight> outputs a right or left shift signal SR or SL to the shift register <highlight><bold>17</bold></highlight> in response to the control signal ctrl, and the first to third delay lines <highlight><bold>14</bold></highlight> to <highlight><bold>16</bold></highlight> shift the input clock signals (e.g., fall_clk and rise_clk) based on the amount of shifting stored in the shift register <highlight><bold>17</bold></highlight>. Also, the shift controller <highlight><bold>18</bold></highlight> outputs a DLL locking signal dll_lockb when there is no phase difference between the output signal from the delay model <highlight><bold>22</bold></highlight> and the reference clock signal ref. The delay model <highlight><bold>22</bold></highlight> includes a dummy clock buffer, a dummy output buffer and a dummy load, which is called a replica circuit. The shift register <highlight><bold>17</bold></highlight> and the shift controller <highlight><bold>18</bold></highlight> form the delay monitor <highlight><bold>23</bold></highlight> used to control the first to third delay lines <highlight><bold>14</bold></highlight> to <highlight><bold>16</bold></highlight> within the delay unit <highlight><bold>10</bold></highlight>. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The conventional register controlled DLL of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> produces two divided clocks in order to compensate for a phase difference between the first and second clock signals fall_clk and rise_clk through the clock divider <highlight><bold>13</bold></highlight>. That is, the clock divider <highlight><bold>13</bold></highlight> receives the second clock signal rise_clk and produces the reference clock signal ref and the divided clock signal div_in, each of which has a pulse width of tCK, whenever an N-th division clock signal is generated. The reference clock signal ref and the divided clock signal div_in are out of phase and the reference clock signal ref has a rising edge after tCK from a rising edge of the divided clock signal div_in. The phase of the reference clock signal ref generated after the time of tCK is compared with the delayed clock signal feedback_dly, which is produced by the delay unit <highlight><bold>10</bold></highlight> and the delay model <highlight><bold>22</bold></highlight>. The control signal ctrl, which is produced by the result of the phase comparison, is input into the shift controller <highlight><bold>18</bold></highlight> to control the amount of the delay. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the divided clock signal div_in is initially delayed by a unit delay time (for convenience sake, unit delay time tD is 0.1 ns) in a unit delay element and then this is outputted as a delayed clock signal feedback_dly. The delayed clock signal feedback_dly is further delayed by a delay time (for convenience sake, this delay time tB is 3 ns) in the delay model <highlight><bold>22</bold></highlight> and then outputted as a delayed feedback signal feed_back. Since the initial delayed feedback signal feed_back passes through the unit delay element and the delay model <highlight><bold>22</bold></highlight>, the initial delayed feedback signal feed_back has a rising edge rising 3.1 ns after the rising of the edge of the divided clock signal div_in. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> On the other hand, since there is a time difference between the reference clock signal ref and the divided clock signal div_in, if tCK is 15 ns, then the rising edge of the reference clock signal ref lags behind the delayed feedback signal feed_back by 11.9 ns (tCK (tD&plus;tB)&equals;15 ns&minus;3.1 ns&equals;11.9 ns) in their phases. That is, such a phase difference, which is caused by the delay line, has to be compensated by 12 ns (tCK&minus;tB 15 ns&minus;3 ns&equals;tA (12 ns)) in order that the divided clock signal div_in has the same phase as the reference clock signal ref. In this case, <highlight><bold>120</bold></highlight> (12 ns/0.1 ns) unit delay lines are needed to compensate for the phase difference of 12 ns using a unit delay time of 0.1 ns thereof. Accordingly, the first clock signal fall_clk and the second clock signal rise_clk must pass through the number of required <highlight><bold>120</bold></highlight> unit delay lines in order to produce appropriate first and second DLL clock signals fclk_dll and rclk_dll, respectively. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> As stated above, the conventional register controlled DLL requires a large number of unit delay lines to compensate for the phase difference between the reference clock signal ref and the divided clock signal div_in. As a result, a significant amount of time is required to make the phase locking and a large amount of current is consumed with the increase of chip size of the unit delay lines. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> It is, therefore, an object of the present invention to provide a register controlled delay locked loop (DLL) capable of decreasing the number of required delay lines, and to provide a semiconductor memory device having the DLL. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> It is another object of the present invention to provide a register controlled delay locked loop (DLL) capable of reducing current consumption by using a small number of unit delay lines, and to provide a semiconductor memory device having the DLL. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> In accordance with an aspect of the present invention, there is provided a semiconductor device having a register controlled delay locked loop (DLL) and an internal circuit synchronized with a DLL clock signal outputted from the register controlled DLL, the semiconductor device comprising: clock dividing means for producing a divided clock signal by dividing an internal clock signal, which is synchronized with an edge of an external clock signal; clock generation means for producing a reference clock signal, wherein the reference clock signal is activated after a half period of the external clock signal; a delay model for delaying the divided clock signal to compensate delay time in delay paths of the internal clock signal; comparison means for comparing a phase difference between the reference clock signal and an output signal from the delay model; delay unit having a plurality of unit delayers; and control means for controlling an amount of delay of the internal clock signal and the divided clock signal via the delay unit in response to a phase comparison signal from the comparison means. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> In accordance with another aspect of the present invention, there is provided a semiconductor device having a register controlled delay locked loop (DLL) and an internal circuit synchronized with a DLL clock signal outputted from the register controlled DLL, the semiconductor device comprising: first internal clock generation means receiving an external clock signal and producing a first internal clock signal which is synchronized with an falling edge of the external clock signal; a second internal clock generation means receiving an external clock signal and producing a second internal clock signal which is synchronized with a rising edge of the external clock signal; first clock dividing means for producing a divided clock signal by dividing one of the first and second internal clock signals, being synchronized with the first internal clock signal; second clock dividing means for producing a reference clock signal by dividing the other of the first and second internal clock signals, being synchronized with the second internal clock signal; a delay model for delaying the divided clock signal to compensate delay time in delay paths of the internal clock signal; comparison means for comparing a phase difference between the reference clock signal and an output signal from the delay model; and delay unit having a plurality of unit delayers; and control means for controlling an amount of delay of the first and second internal clock signals and the divided clock signal via the delay unit in response to a phase comparison signal from the comparison means. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> These and other objects of the present application will become more readily apparent from the detailed description given hereinafter. However, it should be understood that the detailed description and specific examples, while indicating preferred embodiments of the invention, are given by way of illustration only, since various changes and modifications within the spirit and scope of the invention will become apparent to those skilled in the art from this detailed description.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The above and other objects, features and advantages of the present invention will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings, in which: </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram illustrating a register controlled DLL of a conventional DDR SDRAM; </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a timing chart showing DLL clock waveforms for the device in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>; </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram illustrating a register controlled DLL of a DDR SDRAM in accordance with an embodiment of the present invention; and </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a timing chart of the register controlled DLL of the DDR SDRAM in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Hereinafter, a register controlled DLL in DDR SDRAM devices according to the present invention will be described in detail in reference with the accompanying drawings. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, the register controlled DLL according to an embodiment of the present invention includes first and second clock buffers <highlight><bold>31</bold></highlight> and <highlight><bold>32</bold></highlight>, first and second clock dividers <highlight><bold>33</bold></highlight> and <highlight><bold>40</bold></highlight>, a phase comparator <highlight><bold>39</bold></highlight>, a delay unit <highlight><bold>30</bold></highlight> including first to third delay lines <highlight><bold>34</bold></highlight> to <highlight><bold>36</bold></highlight>, a delay monitor <highlight><bold>43</bold></highlight> having a shift register <highlight><bold>37</bold></highlight> and a shift controller <highlight><bold>38</bold></highlight> in a DLL loop, first and second DLL drivers <highlight><bold>50</bold></highlight> and <highlight><bold>51</bold></highlight>, and a delay model <highlight><bold>52</bold></highlight>, all operatively coupled. Each of the delay lines <highlight><bold>34</bold></highlight>, <highlight><bold>35</bold></highlight> and <highlight><bold>36</bold></highlight> includes a predetermined number of unit delayers. The device as shown in <cross-reference target="DRAWINGS">FIG. 3</cross-reference> has the same configuration as the one shown in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, except for the addition of the second clock divider <highlight><bold>40</bold></highlight> and connection changes resulting therefrom. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The first clock buffer <highlight><bold>31</bold></highlight> receives an inverted external clock signal /clk and produces a first clock signal fall_clk synchronized with a falling edge of the external clock signal clk (or a rising edge of the inverted external clock signal /clk). Likewise, the second clock buffer <highlight><bold>32</bold></highlight> receives the external clock signal clk and produces a second clock signal rise_clk synchronized with a rising edge of the external clock signal clk. The first clock divider <highlight><bold>33</bold></highlight> divides the second clock signal rise_clk into N (N: a positive integer, typically N&equals;8) signals and thereby produces a divided clock signal div_in which is output as a delayed clock signal. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The first delay line <highlight><bold>34</bold></highlight> of the delay unit <highlight><bold>30</bold></highlight> receives the first clock signal fall_clk and delays it according to an amount of delay in the shift register <highlight><bold>37</bold></highlight>, which is controlled by the shift controller <highlight><bold>38</bold></highlight>, thereby producing a first internal clock signal ifclk. The second delay line <highlight><bold>35</bold></highlight> receives the second clock signal rise_clk and delays it according to an amount of delay in the shift register <highlight><bold>37</bold></highlight>, which is also controlled by the shift controller <highlight><bold>38</bold></highlight>, thereby producing a second internal clock signal irclk. The first and second DLL drivers <highlight><bold>50</bold></highlight> and <highlight><bold>51</bold></highlight> receive the first and second internal clock signals ifclk and irclk and produce first and second DLL clock signals fclk_dll and rclk_dll, respectively. The third delay line <highlight><bold>36</bold></highlight> receives the divided clock signal div_in from the first clock divider <highlight><bold>33</bold></highlight> and produces a delayed clock signal feedback_dly. The delay model <highlight><bold>52</bold></highlight> performs on the delayed clock signal feedback_dly the same signal processing that the second clock buffer <highlight><bold>32</bold></highlight> performs on the external clock signal clk, and thereby outputs a delayed clock signal feed_back. That is, the delay model <highlight><bold>52</bold></highlight>, which is called a replica circuit, includes a dummy clock buffer, a dummy output buffer and a dummy load. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> On the other hand, the present invention further provides the register controlled DLL with the second clock divider <highlight><bold>40</bold></highlight> receiving the first clock signal fall_clk. The second clock divider <highlight><bold>40</bold></highlight> divides the first clock signal fall_clk and thereby outputs a divided clock signal as a reference clock signal ref_new. The phase comparator <highlight><bold>39</bold></highlight> compares the phase difference between the output signal feed_back from the delay model <highlight><bold>52</bold></highlight> with the reference clock signal ref_new and provides an appropriate control signal ctrl to the shift controller <highlight><bold>38</bold></highlight> according to the phase difference. The shift controller <highlight><bold>38</bold></highlight> outputs a right or left shift signal SR or SL to the shift register <highlight><bold>37</bold></highlight> in response to the control signal ctrl. The first to third delay lines <highlight><bold>34</bold></highlight> to <highlight><bold>36</bold></highlight> shift the input clock signals (e.g., fall_clk, rise_clk and div_in) based on the amount of shift stored in the shift register <highlight><bold>37</bold></highlight>. Also, the shift controller <highlight><bold>38</bold></highlight> outputs a DLL locking signal dll_lockb when there is no phase difference between the output signal (feedback signal) feed_back from the delay model <highlight><bold>53</bold></highlight> and the reference clock signal ref_new. The shift register <highlight><bold>37</bold></highlight> and the shift controller <highlight><bold>38</bold></highlight> form the delay monitor <highlight><bold>43</bold></highlight> that is used to control the first to third delay lines <highlight><bold>34</bold></highlight> to <highlight><bold>36</bold></highlight> within the delay unit <highlight><bold>30</bold></highlight>. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIGS. 3 and 4</cross-reference>, the first clock buffer <highlight><bold>31</bold></highlight> receiving the inverted external clock signal /clk produces the first clock signal fall_clk synchronized with the falling edge of the external clock signal clk (or rising edge of the inverted external clock signal /clk). The second clock buffer <highlight><bold>32</bold></highlight> receiving the external clock signal clk produces the second clock signal rise_clk synchronized with the rising edge of the external clock signal clk (or the falling edge of the inverted external clock signal /clk). The first clock divider <highlight><bold>33</bold></highlight> receives the second clock signal rise_clk, divides the second clock signal rise clk into N signals, and then produces the divided clock signal div_in (or monitoring clock signal) whenever an N-th division clock signal is generated. The second clock divider <highlight><bold>40</bold></highlight> receives the first clock signal fall_clk, divides it into N signals, and then produces the reference clock signal ref_new whenever an N-th division clock signal is generated. In these cases, N is a positive integer, e.g., <highlight><bold>8</bold></highlight>. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Each of the divided clock signal div_in and the reference clock signal ref_new has the same pulse width (tCK) as the external clock signal clk, and the reference clock signal ref_new rises after tCK/2 of the rising of the divided clock signal div_in. At the initial operation, the divided clock signal div_in passes through the third delay line <highlight><bold>36</bold></highlight> in the delay unit <highlight><bold>30</bold></highlight> and is outputted as the delayed clock signal feedback_dly. The delayed clock signal feedback_dly passes through the delay model <highlight><bold>52</bold></highlight> to produce the feedback signal feed_back, which is applied to the phase comparator <highlight><bold>39</bold></highlight>. Accordingly, the feedback signal feed_back legs behind the delayed clock signal feedback_dly by tB. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The phase comparator <highlight><bold>39</bold></highlight> compares the rising edge of the reference clock signal ref_new with the rising edge of the feedback signal feed_back and thereby produces the control signal ctrl. The shift controller <highlight><bold>38</bold></highlight> generates the right and left shift control signals SR and SL to control the shift direction of the shift register <highlight><bold>37</bold></highlight> in response to the control signal ctrl. The shift register <highlight><bold>37</bold></highlight> determines an amount of delay in each of the first to third delay lines <highlight><bold>34</bold></highlight> to <highlight><bold>36</bold></highlight> in response to the right or left shift control signal SR or SL. At this time, if the right shift control signal SR is outputted to the shift register <highlight><bold>37</bold></highlight>, the input signals, which are inputted to the first to third delay lines <highlight><bold>34</bold></highlight> to <highlight><bold>36</bold></highlight>, are right shifted. In the same manner, if the left shift control signal SL is outputted to the shift register <highlight><bold>37</bold></highlight>, the input signals, which are inputted to the first to third delay lines <highlight><bold>34</bold></highlight> to <highlight><bold>36</bold></highlight>, are left shifted. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Comparing the reference clock signal ref_new with the feedback signal feed_back in which an amount of delay is controlled, the DLL locking is achieved when the jitter between these two signals is a minimum value. When DLL locking is achieved, the DLL locking signal dll_lockb is outputted by the shift controller <highlight><bold>38</bold></highlight> so that the first and second DLL drivers <highlight><bold>50</bold></highlight> and <highlight><bold>51</bold></highlight> are driven to obtain the DLL clock signals fclk_dll and rclk_dll. At this time, the DLL clock signals fclk_dll and rclk_dll and the external clock signal clk have the same phase as desired. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> As mentioned above, the register controlled DLL according to the present invention employs two clock dividers <highlight><bold>33</bold></highlight> and <highlight><bold>40</bold></highlight> to compensate for the time difference between the external clock signal clk and the internal clock signals rise_clk and fall_clk. The first clock divider <highlight><bold>33</bold></highlight> receives the second clock signal rise_clk, which is synchronized with the rising edge of the external clock signal clk, and produces the delayed monitoring clock signal (the divided clock signal div_in), which has a pulse width of tCK, every N divided clock signals. Also, the second clock divider <highlight><bold>40</bold></highlight> receives the first clock signal fall_clk, which is synchronized with the falling edge of the external clock signal clk, and produces the reference clock signal (a divided clock signal) ref_new, which has a pulse width of tCK, every N divided clock signals. Since the reference clock signal ref_new has a rising edge after tCK/<highlight><bold>2</bold></highlight> from the rising edge of the divided clock signal div_in, the phase difference in the phase comparator <highlight><bold>39</bold></highlight> between the feedback signal feed_back, which passes through the third delay line <highlight><bold>36</bold></highlight> and the delay model <highlight><bold>52</bold></highlight>, and the reference clock signal ref_new can be reduced. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The divided clock signal div_in is delayed by a unit delay time via a unit delay element (tD where, e.g., tD&equals;0.1 ns) and then the delayed clock signal of the divided clock signal div_in is outputted as the delayed clock signal feedback_dly. This delayed clock signal feedback_dly is delayed again in the delay model <highlight><bold>52</bold></highlight> (tB where, e.g., tB&equals;3 ns), thereby forming the feedback signal feed_back. At the initial time, the feedback signal feed_back has a rising edge after 3.1 ns from the rising edge of the divided clock signal dive_in because it passes through the unit delay element and the dely model <highlight><bold>52</bold></highlight>. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Since the phase difference between the reference clock signal ref_new and the divided clock signal div_in is tCK/2 as shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the reference clock signal ref_new legs behind the feedback signal feed_back by 4.4 ns (tCk/2&minus;(tD&plus;tB)&equals;7.5 ns&minus;3.1 ns&equals;4.4 ns) in the case where tCK is 15 ns. That is, in order for the divided clock signal div_in to have the same phase as the reference clock signal ref_new, such a phase difference (tCK/2(7.5 ns)&minus;tB(3 ns)&equals;tA(4.5 ns)) should be compensated in the third delay line <highlight><bold>36</bold></highlight>. Accordingly, only 45 unit delayers, each of which has 0.1 ns-delay time, are required to compensate for the phase difference (4.5 ns) in this example. As a result, the first and second delay lines <highlight><bold>34</bold></highlight> and <highlight><bold>35</bold></highlight>, which respectively delay the first and second clock signals fall_clk and rise_clk, should each have the 45 unit delayers, respectively. As compared to the conventional register controlled DLL in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, which requires 120 delay units per delay line for tcK&equals;15 ns, the register controlled DLL according to one example of the present invention requires only 45 delay units per delay line, and thus the present invention reduces the number of unit delayers required significantly. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Although the above embodiment is illustrated in the DLL of the DDR SDRAM, the present invention is applicable to other synchronization memory devices and logic devices having the resister controlled DLL. Also, in the above embodiment, the reference clock signal ref_new is produced by the second clock divider <highlight><bold>40</bold></highlight> receiving the first clock signal fall_clk and the divided clock signal div in is produced by the first clock divider <highlight><bold>33</bold></highlight> receiving the second clock signal rise_clk. However, it is possible to alter their input signals fall_clk and rise_clk. In other words, the reference clock signal ref_new can be produced by the first clock divider <highlight><bold>33</bold></highlight> receiving the second clock signal rise_clk and the divided clock signal div_in can be produced by the second clock divider <highlight><bold>40</bold></highlight> receiving the first clock signal fall_clk. Further, one of the clock dividers <highlight><bold>33</bold></highlight> and <highlight><bold>40</bold></highlight> can be substituted with a clock generator to produce a clock which has a phase difference of tCK/2 with the same pulse width. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> Although the preferred embodiments of the invention have been disclosed for illustrative purposes, those skilled in the art will appreciate that various modifications, additions and substitutions are possible, without departing from the scope and spirit of the invention as disclosed in the accompanying claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A semiconductor device having a register controlled delay locked loop (DLL) and an internal circuit synchronized with a DLL clock signal outputted from the register controlled DLL, the semiconductor device comprising: 
<claim-text>a clock divider producing a divided clock signal by dividing an internal clock signal corresponding to an external clock signal; </claim-text>
<claim-text>a clock generator producing a reference clock signal, wherein the reference clock signal is activated after a half period of the external clock signal; </claim-text>
<claim-text>a delay model delaying the divided clock signal to compensate for a delay time in delay paths of the internal clock signal; </claim-text>
<claim-text>a comparison unit comparing a phase difference between the reference clock signal and an output signal from the delay model and thereby generating a phase comparison signal; </claim-text>
<claim-text>a delay unit having a plurality of unit delayers; and </claim-text>
<claim-text>a controller controlling an amount of delay of the internal clock signal and the divided clock signal via the delay unit in response to the phase comparison signal from the comparison unit. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The semiconductor device as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>a DLL driver driving a delay controlled internal clock signal in response to a locking signal generated from the controller. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The semiconductor device as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the delay unit includes: 
<claim-text>a first delay line having a plurality of unit delayers for delaying the internal clock signal in response to a control signal from the controller; and </claim-text>
<claim-text>a second delay line having a plurality of unit delayers for delaying the divided clock signal in response to a control signal from the controller. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The semiconductor device as recited in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>first and second clock buffers generating respectively first and second internal clock signals corresponding to the external clock signal, wherein the clock divider and the clock generator respectively receive the second and first internal clock signals and thereby produce the divided clock signal and the reference clock signal, respectively. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A logic device having a register controlled delay locked loop (DLL) and an internal circuit synchronized with a DLL clock signal outputted from the register controlled DLL, the logic device comprising: 
<claim-text>a clock divider producing a divided clock signal by dividing an internal clock signal, the internal clock signal corresponding to an external clock signal; </claim-text>
<claim-text>a clock generator producing a reference clock signal, wherein the reference clock signal is activated after a half period of the external clock signal; </claim-text>
<claim-text>a delay model delaying the divided clock signal to compensate for a delay time in delay paths of the internal clock signal; </claim-text>
<claim-text>a comparison unit comparing a phase difference between the reference clock signal and an output signal from the delay model and thereby generating a phase comparison signal; </claim-text>
<claim-text>a delay unit having a plurality of unit delayers; and </claim-text>
<claim-text>a controller controlling an amount of delay of the internal clock signal and the divided clock signal via the delay unit in response to the phase comparison signal from the comparison means. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The logic device as recited in <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, further comprising: 
<claim-text>a DLL driver driving a delay controlled internal clock signal in response to a locking signal generated from the controller. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The logic device as recited in <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the delay unit includes: 
<claim-text>a first delay line having a plurality of unit delayers for delaying the internal clock signal in response to a control signal from the controller; and </claim-text>
<claim-text>a second delay line having a plurality of unit delayers for delaying the divided clock signal in response to a control signal from the controller. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The logic device as recited in <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, further comprising: 
<claim-text>first and second clock buffers generating respectively first and second internal clock signals corresponding to the external clock signal, wherein the clock divider and the clock generator respectively receive the second and first internal clock signals and thereby produce the divided clock signal and the reference clock signal, respectively. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A semiconductor device having a register controlled delay locked loop (DLL) and an internal circuit synchronized with a DLL clock signal outputted from the register controlled DLL, the semiconductor device comprising: 
<claim-text>a first internal clock generator receiving an inverted form of an external clock signal and producing a first internal clock signal which is synchronized with a falling edge of the external clock signal; </claim-text>
<claim-text>a second internal clock generator receiving the external clock signal and producing a second internal clock signal which is synchronized with a rising edge of the external clock signal; </claim-text>
<claim-text>a first clock divider producing a divided clock signal by dividing one of the first and second internal clock signals; </claim-text>
<claim-text>a second clock divider producing a reference clock signal by dividing the other one of the first and second internal clock signals; </claim-text>
<claim-text>a delay model delaying the divided clock signal to compensate for a delay time in a delay path of at least one of the first and second internal clock signals; </claim-text>
<claim-text>a comparator comparing a phase difference between the reference clock signal and an output signal from the delay model and thereby generating a phase comparison signal; </claim-text>
<claim-text>a delay unit having a plurality of unit delayers; and </claim-text>
<claim-text>a controller controlling an amount of delay of the first and second internal clock signals and the divided clock signal via the delay unit in response to the phase comparison signal from the comparator. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The semiconductor device as recited in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein a rising edge of the divided clock signal is synchronized with a rising edge of the second internal clock signal. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The semiconductor device as recited in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein a rising edge of the reference clock signal is synchronized with a rising edge of the first internal clock signal. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The semiconductor device as recited in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, further comprising: 
<claim-text>a DLL driver driving a delay controlled internal clock signal in response to a locking signal from the controller. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The semiconductor device as recited in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the delay unit includes: 
<claim-text>a first delay line having a plurality of unit delayers for delaying the first internal clock signal in response to a control signal from the controller; </claim-text>
<claim-text>a second delay line having a plurality of unit delayers for delaying the second internal clock signal in response to a control signal from the controller; and </claim-text>
<claim-text>a third delay line having a plurality of unit delayers for delaying the divided clock signal in response to a control signal from the controller. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A logic device having a register controlled delay locked loop (DLL) and an internal circuit synchronized with a DLL clock signal outputted from the register controlled DLL, the logic device comprising: 
<claim-text>a first internal clock generator receiving an external clock signal and producing a first internal clock signal which is synchronized with a falling edge of the external clock signal; </claim-text>
<claim-text>a second internal clock generator receiving an external clock signal and producing a second internal clock signal which is synchronized with a rising edge of that external clock signal; </claim-text>
<claim-text>a first clock divider producing a divided clock signal by dividing one of the first and second internal clock signals; </claim-text>
<claim-text>a second clock divider producing a reference clock signal by dividing the other one of the first and second internal clock signals; </claim-text>
<claim-text>a delay model delaying the divided clock signal to compensate for a delay time in a delay path of at least one of the first and second internal clock signals; </claim-text>
<claim-text>a comparator comparing a phase difference between the reference clock signal and an output signal from the delay model and thereby generating a phase difference signal; </claim-text>
<claim-text>a delay unit having a plurality of unit delayers; and </claim-text>
<claim-text>a controller controlling an amount of delay of the first and second internal clock signals and the divided clock signal via the delay unit in response to the phase comparison signal from the comparator. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The logic device as recited in <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein a rising edge of the divided clock signal is synchronized with a rising edge of the second internal clock signal. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The logic device as recited in <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein a rising edge of the reference clock signal is synchronized with a rising edge of the first internal clock signal. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The logic device as recited in <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, further comprising: 
<claim-text>at least one DLL driver driving a delay controlled internal clock signal in response to a locking signal from the controller. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The logic device as recited in <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the delay unit includes: 
<claim-text>a first delay line having a plurality of unit delayers for delaying the first internal clock signal in response to a control signal from the controller; </claim-text>
<claim-text>a second delay line having a plurality of unit delayers for delaying the second internal clock signal in response to a control signal from the controller; and </claim-text>
<claim-text>a third delay line having a plurality of unit delayers for delaying the divided clock signal in response to a control signal from the controller.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>3</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030001637A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030001637A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030001637A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030001637A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030001637A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
