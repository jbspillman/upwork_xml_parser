<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030001853A1-20030102-D00000.TIF SYSTEM "US20030001853A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030001853A1-20030102-D00001.TIF SYSTEM "US20030001853A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030001853A1-20030102-D00002.TIF SYSTEM "US20030001853A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030001853A1-20030102-D00003.TIF SYSTEM "US20030001853A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030001853A1-20030102-D00004.TIF SYSTEM "US20030001853A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030001853A1-20030102-D00005.TIF SYSTEM "US20030001853A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030001853A1-20030102-D00006.TIF SYSTEM "US20030001853A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030001853A1-20030102-D00007.TIF SYSTEM "US20030001853A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030001853A1-20030102-D00008.TIF SYSTEM "US20030001853A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030001853A1-20030102-D00009.TIF SYSTEM "US20030001853A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030001853A1-20030102-D00010.TIF SYSTEM "US20030001853A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030001853A1-20030102-D00011.TIF SYSTEM "US20030001853A1-20030102-D00011.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030001853</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10180535</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020627</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2002-145122</doc-number>
</priority-application-number>
<filing-date>20020520</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>2001-200616</doc-number>
</priority-application-number>
<filing-date>20010702</filing-date>
<country-code>JP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G09G005/36</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>G06F012/10</ipc>
</classification-ipc-secondary>
<classification-ipc-secondary>
<ipc>G06F013/14</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>345</class>
<subclass>568000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>345</class>
<subclass>519000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Display controller, microcomputer and graphic system</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Yuji</given-name>
<family-name>Obayashi</family-name>
</name>
<residence>
<residence-non-us>
<city>Sayama</city>
<country-code>JP</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>Mattingly, Stanger &amp; Malur, P.C.</name-1>
<name-2></name-2>
<address>
<address-1>Suite 370</address-1>
<address-2>1800 Diagonal Road</address-2>
<city>Alexandria</city>
<state>VA</state>
<postalcode>22314</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">There is provided a display controller which can execute, with the hardware process, the address conversion corresponding to each drawing format even when a plurality of display data which are different in drawing formats exist simultaneously on the video memory and thereby can simultaneously improve the memory access performance in the drawing process and reduce a load of the CPU. This display controller <highlight><bold>1 </bold></highlight>comprises an input section to which a display data and an address data are inputted, a video memory interface for writing the input display data to a video memory corresponding to a physical address in which each pixel of a 2n&times;2m (n and m are natural numbers) rectangular area formed by dividing the display area is continuous and a drawing circuit for executing the designated drawing process by receiving a command code for drawing from an external circuit. This display controller is further provided with an address conversion means which can replace the bit arrangements of the address data inputted from an external circuit and also can set the replacing portion for every address ranges. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The present invention relates to a technique which may be effectively applied to a display controller including a drawing function and a technique which may be effectively applied, for example, to a microcomputer in which a CPU and a display controller is integrated on one semiconductor chip. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> A certain existing graphic controller having a function to draw a line connecting two points employs a tile address format in which each pixel of a display image and a physical address of a video memory are inter-related to provide a continuous physical address corresponding to a small rectangular area formed, for example, of about 32 horizontal and 32 vertical pixels. For example, when a video memory is structured with an SDRAM (Synchronous Dynamic Random Access Memory), since continuous accesses in the same row address can be executed in a high speed, the drawing process can be completed only with the drawing process in the same row on the occasion of drawing, for example, a thin line by applying the tile address format as explained above. Thereby, the high speed drawing process can be realized. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> For example, the Japanese Unexamined Patent Application Publication No. Hei8(1996) -297605 describes a graphic controller which has a drawing function and uses a frame buffer of tile address format. This graphic controller is structured to continuously process, for the 8-bit color/pixel, a physical address of video memory in the rectangular area of 32 horizontal pixels and 16 vertical pixels and to continuously process, for the 16-bit color/pixel, a physical address of video memory in the rectangular area of 16 horizontal pixels and 16 vertical pixels. Namely, capacity of video memory corresponding to one rectangular area is fixed to 512 bytes. Moreover, this graphic controller can change over the width of drawing area to 512 pixels or to 1024 pixels. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Meanwhile, in the ordinary user interface provided in the operating system of a computer, a linear address format using the continuous address for right end from the left end of the drawing area is used in general. Therefore, in the case where a display controller of the tile address format is used in this operating system, the address conversion to the tile address format from the linear address format is required. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> For example, the Japanese Unexamined Patent Application Publication No. Hei 8(1996)-50573 discloses, as a second prior art example, a microcomputer for data drawing through address conversion to the tile address format from the linear address format. In this microcomputer, a frame buffer is formed on the main memory but replacement of address bit is conducted on the occasion of making access to the frame buffer from the CPU. This replacement enables process of the address processed with the CPU in the linear address format and the process of display data in the tile address format on the actual frame format. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> In recent years, the operating system treats a plurality of kinds of drawing area sizes and a plurality of kinds of pixel format, for example, the number of colors and also has a function of the multi-task process to simultaneously execute a plurality of applications. Therefore, a plurality of display data which are different in the size of drawing area and in the pixel format coexist in a certain case on the video memory. Since, the address conversion format to the tile address format from the linear address format is also different when the size and pixel format of the drawing area are different, selection of the more adequate address conversion system with the operating system during access to the display area from the application is necessary to simultaneously process a plurality of display data from the operating system. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> However, in the graphic controller of the first prior art example, an image data of the linear address format to be processed by the operating system must be converted to the tile address format which may be displayed with the graphic controller with the drawing function thereof and software process by the CPU and therefore the processing performance of system is suppressed. Moreover, it is now possible to process the frame buffer in the linear address format from the CPU side by replacing the arrangement order of the system bus and the address bus for connecting the graphic controller. However, this method is not practical because a problem that when the address conversion format is set to only one of the 8-bit color/pixel and 16-bit color/pixel because it is usually fixed to one format, the other format is no longer disabled is generated. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Moreover, since the microcomputer of the second prior art example is structured so that the frame buffer area and the other areas are discriminated using a setting value of the memory control register to conduct replacement of address bus only for the frame buffer area, the memory access performance in the drawing process can surely be improved but all drawing processes are processed with the software resulting in a problem that a load of CPU increases and the system process efficiency is lowered when many drawing processes are generated. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> It is therefore an object of the present invention to provide a display controller and a microcomputer which enables conversion to the tile address format from the linear address format for a plurality of display data with the hardware process even when a plurality of display data which are different in size of drawing area and pixel format coexist on the video memory and can also improve the memory access performance in the drawing process and reduce a load of the CPU. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> The aforementioned and the other objects and novel features of the present invention will becomes apparent from description of the present specification and the accompanying figures. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The typical inventions of the present invention disclosed in the present specification will be outlined as follows. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> There is provided a display controller comprising an input panel from which a display data and an address are inputted, a video memory interface for drawing a display data inputted to the video memory corresponding to a physical address for continuous pixels in the 2<highlight><superscript>n</superscript></highlight>&times;2<highlight><superscript>m </superscript></highlight>(n and m are natural numbers) rectangular areas formed by dividing the display image and a drawing circuit for receiving a drawing command code from an external circuit to execute the designated drawing process and this display controller is further provided with an address converting means for mutually replacing the bit arrangements of the address inputted from the external circuit and an address conversion setting means for setting the bit portions to be replaced with the address converting means for every range among a plurality of address ranges. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> According to such means, even when a plurality of display data which are different in size of drawing area and pixel format coexist on the video memory, the linear address format can be converted respectively to the tile address format corresponding to a plurality of display data with the address conversion setting means and address converting means explained above. Moreover, since the drawing process can be executed by reducing a load of the CPU with the drawing circuit, the memory access performance in the drawing process can be improved and the load of CPU can also be reduced simultaneously. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> It is preferable here that the memory area of video memory is divided to a plurality of address ranges to store the display data of the display image which are different for every address range and the address conversion setting means is structured to be capable of setting the replacement part of the bit arrangement for every divided address range. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> According to the structure explained above, when a plurality of applications can process the display data which are different in size of drawing area and pixel format, for example, with the parallel processes, replacement of bit arrangement of the adequate address can be realized for each application. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> It is more preferable that the address conversion setting means is constituted of a data table in which the predetermined bit among the significant bits of the address indicating the divided address range is defined as the index for extracting the registered data while the bit data for determining the replacement part in the address range as the registered data. owing to such structure, the replacement part of the bit arrangement can be identified quickly from the address range. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Moreover, in the microcomputer of the present invention, the central processing unit to execute the system control process including the drawing process and the display controller explained above are formed on one semiconductor substrate. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> There is provided a microcomputer comprising a central processing unit to execute the system control process including the drawing process, a memory management unit to convert a logical address processed with the central processing unit to a physical address of the main memory and a drawing circuit to execute the drawing process designated by receiving a command code for drawing from the central processing unit. Moreover, the memory management unit includes an address converting means which converts, on the occasion of drawing the display data to the video memory corresponding to the physical address for continuous pixels of the 2n&times;2m (n and m are natural numbers) rectangular areas formed by dividing the display image with the central processing unit, the display data to the physical address of the video memory by mutually replacing the bit arrangements of the logical address supplied from the central processing unit and this memory management unit is further provided with an address conversion setting means which is capable of setting the replacement part of the bit arrangement for every range among a plurality of ranges of the video memory. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> According to the structure explained above, since the memory management unit also controls the conversion of address of video memory, the chip area can be reduced by deleting overlap of the similar circuit structure. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Moreover, the graphic system of the present invention comprises a CPU for arithmetic operations, a memory to store a display data and a display to generate a video signal based on the display data of the tile address format. An address converter is provided to convert the linear address format display data to the tile address format data on the access route to the memory from the CPU. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> According to such means, the tile address format display data which can be written quickly in many drawing processes can be developed to the memory and the general purpose linear address format display data can also be treated in the CPU side. Therefore, a general purpose OS (operating system) can be applied in the linear address format to an information processor under the control of the CPU and thereby a system and an application can be developed easily in comparison with the case where the exclusive OS is used. In this case, the address converter can determine that the address of display data received should be converted or not and can convert the address as required only by instructing to the register or the like within the address converter whether the data is the linear address format or the tile address format from the CPU side. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> In addition, it is also preferable that the address converter is provided with a setting register which can set execution or non-execution of the address conversion (for example, &lsqb;e&rsqb; bit of the address conversion method table <highlight><bold>81</bold></highlight>). Thereby, the address conversion is conducted for the linear address format display data, while the data transfer is conducted for the file data of the draw command and tile address format display data without execution of the address conversion. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> It is also preferable that the address converter is structured to be capable of executing the address conversion in a plurality of converting systems and thereby the conversion system executed by the address converter is changed based on the predetermined condition. Accordingly, even in the case where the multi-window display is conducted using a plurality of windows of different display image format, different address conversions can be adapted for every display data of each window. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Here, the practical structure to realize above program is that the address conversion system is changed depending on the address range of the video RAM<highlight><bold>40</bold></highlight> to be accessed by setting a value to the 4-bit&times;236-entry of the address conversion method table <highlight><bold>81</bold></highlight>. Moreover, it is also possible that the conversion system is determined, for example, with a control program executed by the CPU and the conversion method is changed by outputting from the CPU a signal for transferring the conversion system to the address converter. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Moreover, the address converter can also be structured to convert the linear address format to the tile address format by mutually replacing the values in the two bit ranges among the addresses of the display data. In addition, it is also possible to convert the linear address format to the tile address format after the address range is shifted for the predetermined length by executing the address conversion using various algorithms. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> It is more preferable that a communication means which assures data reception is provided and the linear address format display data received via the communication means is converted to the tile address format display data and is then developed in the memory explained above and thereby the video signal based on the display data is outputted with the display. Consequently, the drawing process of higher memory access performance can be realized within the inside and the system of high flexibility can be utilized for exchange of display data with the external side in the higher drawing performance system.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a structural diagram showing an embodiment of a graphic controller to which the present invention can be adapted effectively. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a diagram for explaining a relationship between the video memory and CPU for simultaneous display of a plurality of images. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference>(A) is a diagram showing a structure of pixel block in the window display of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference>(B) is a diagram showing a structure of drawing area in the window display of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a diagram for explaining an address conversion method in the window display of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference>(A) is a diagram showing a structure of pixel block in the background display of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference>(B) is a diagram showing a structure of image area in the background display of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a diagram for explaining the address conversion method in the background display <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a diagram showing a detail structure of the address converter of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a structural diagram showing an embodiment of the microcomputer of the present invention. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a diagram for explaining the address conversion method by a memory management unit of <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a structural diagram of a graphic system as an embodiment of the present invention. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a flowchart showing a drawing process of video driver used in the graphic system of the present invention. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> is a flowchart showing an area generating process of the video driver used in the graphic system of the present invention. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> is a diagram showing an information providing service mode using an information processor to which the present invention is applied.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> The preferred embodiments of the present invention will be explained in detail with reference to the accompanying drawings. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a structural diagram showing an embodiment of a graphic controller to which the present invention can be effectively applied. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> The graphic controller <highlight><bold>1</bold></highlight> of this embodiment is structured, although not particularly restricted, to be formed on one semiconductor chip such as a single crystalline silicon. This graphic controller <highlight><bold>1</bold></highlight> comprises: a host I/F section <highlight><bold>10</bold></highlight> for inputting and outputting data, for example, from a CPU via a host bus; a drawing section (drawing circuit) <highlight><bold>12</bold></highlight> to execute the drawing process with a hardware by fetching the data of drawing area of a video RAM<highlight><bold>40</bold></highlight> following an instruction of a controller <highlight><bold>14</bold></highlight>; a controller <highlight><bold>14</bold></highlight> for instructing the drawing process to the drawing section <highlight><bold>12</bold></highlight> by controlling the operation of each block and receiving a command code from the CPU; a memory I/F section <highlight><bold>16</bold></highlight> for drawing or reading display data to or from an external video RAM (Random Access Memory) <highlight><bold>40</bold></highlight>; an address converter <highlight><bold>18</bold></highlight> for replacing the bit position of the predetermined part of the address inputted from the CPU; and a display section <highlight><bold>20</bold></highlight> or the like for converting the display data stored in the frame memory of the video RAM <highlight><bold>40</bold></highlight>, for example, to the RGB video signal and then outputting this video signal. The video RAM <highlight><bold>40</bold></highlight> is, for example, an SDRAM (Synchronous Dynamic RAM) and has the capacity to develop at a time the display data of a plurality of display images. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> The drawing section <highlight><bold>12</bold></highlight> is provided with various drawing functions such as a hardware drawing function to designates two points and to draw the display data connecting such two points with a linear line to the video RAM <highlight><bold>40</bold></highlight> by inputting the command code for drawing the linear line. Moreover, the drawing section <highlight><bold>12</bold></highlight> corresponds to the tile address format to realize high speed access for display data to the video RAM <highlight><bold>40</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> This graphic controller <highlight><bold>1</bold></highlight> receives various drawing requests from an external side via a driver software but this driver software sorts the request with the drawing section <highlight><bold>12</bold></highlight> to the requests to be processed and the requests not to be processed and controls the drawing section <highlight><bold>12</bold></highlight> to execute the process by fetching the requests to be processed. For the requests not to be processed, the driver software executes the drawing process using a software or executes the drawing process from the viewpoint of software using the general purpose standard drawing library offered by the operating system. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Since the general purpose standard drawing library is generated by assuming the pixel layout of linear address format, there is no compatibility with the drawing function of the graphic controller <highlight><bold>1</bold></highlight> in the present condition. Therefore, such compatibility can be assured through the replacement of the address bit using the address converter <highlight><bold>18</bold></highlight>. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a diagram for explaining a relationship between the video RAM and CPU for simultaneous display of a plurality of images in the system loading the graphic controller <highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> The graphic controller <highlight><bold>1</bold></highlight> is assumed to be installed to a system which can execute in parallel a plurality of applications with the multi-task process. In this system, image displays of a plurality of applications are executed simultaneously on one display image. In the case where a plurality of image displays are conducted, the storage area of video RAM <highlight><bold>40</bold></highlight> is divided to a plurality of address ranges and the storage area of one address range is assigned to each application. Each application develops the display data in the assigned memory area. Thereafter, the graphic controller <highlight><bold>1</bold></highlight> reads the data of window size from a plurality of display data, executes the superimposing process, transmitting and semi-transmitting processes based on the alignment on the position of window depending on the priority of display and thereafter converts the data into the RGB video signal and then outputting this video signal. Thereby, a plurality of window images can be displayed on one display image. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> In the example of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the image data <highlight><bold>41</bold></highlight> to <highlight><bold>43</bold></highlight> of the first to third areas are background images in which the data of the first area, for example, is developed by the operating system, the image data <highlight><bold>42</bold></highlight> of the second area is the window image of the application and the image data <highlight><bold>43</bold></highlight> of the third area is the image of dynamic image reproduced by the dynamic image software. These image data have the format which are different in a size of drawing area or in a pixel format, for example, such as color bit. For instance, the display data of the first area <highlight><bold>41</bold></highlight> is formed of 1024&times;1024 pixels in the format of 16-bit color/pixel, while the display data of the second area <highlight><bold>42</bold></highlight> is the 512&times;512 pixels in the format of 8-bit color/pixel and the data of the third area <highlight><bold>43</bold></highlight> is the 512&times;512 pixels in the format of 16-bit color/pixel. Moreover, in the graphic controller <highlight><bold>1</bold></highlight> of this embodiment, the display data also corresponds to the 1024&times;1025 pixels in the format of 8-bit color/pixel. In addition, the display size means a window size which is actually displayed on the display image and this window size can be changed freely within the range of the drawing area size. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> An address of the video RAM <highlight><bold>40</bold></highlight> is set in the tile address format. Moreover, a size of the pixel block which is considered as a continuous address is fixed to combination of particular values which are different depending on the size of drawing area and pixel format. In this embodiment, the pixel block as the continuous address, for example, in the 1024&times;1024 pixels is set to 32&times;32 pixels, while the pixel block as the continuous address in the 512&times;512 pixels is set to 32&times;16 pixels. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> The SDRAM forming the video RAM <highlight><bold>40</bold></highlight> can generally be accessed at a high speed when the row address corresponding to the significant part of address is identical. Therefore, high speed memory access can be realized in various drawing processes by setting the memory capacity of the pixel block to a value smaller than the size of area in which the row address becomes identical in the SDRAM of the video RAM <highlight><bold>40</bold></highlight>. For example, in the case where a short line is drawn in the pixel block &num;0 at a part of the drawing area, the drawing process is completed only with the drawing to the same row address of the SDRAM corresponding to the relevant pixel block &num;0. Moreover, similar improvement in the process can be attained in various drawing processes such as the drawing to a small area and the drawing of a vertical line. As a result, the access rate to the video RAM<highlight><bold>40</bold></highlight> can be improved in comparison with that in the linear address format and the drawing process in the short period can also be realized. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> According to the structure of the video RAM <highlight><bold>40</bold></highlight> explained above, when the video RAM<highlight><bold>40</bold></highlight> is accessed from the CPU <highlight><bold>50</bold></highlight> using the general purpose standard drawing library formed in the linear address format, the normal access can be realized by converting the address of the linear address format outputted from the CPU<highlight><bold>50</bold></highlight> to the tile address format. Moreover, since conversion to the tile address format from the linear address format is different depending on the format of drawing area, different address conversions X, Y, Z are required for every access to the three address ranges. When the drawing process has been conducted through the address conversion, since the video RAM <highlight><bold>40</bold></highlight> is accessed in the tile address format even in the drawing process using the standard drawing library of the tile address format, the processing rate can be improved in various drawing processes. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> Next, the address conversion system for each drawing area will be explained. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference>(A) shows an entire structure of the pixel block in the window display of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> and <cross-reference target="DRAWINGS">FIG. 3</cross-reference>(B) shows an entire structure of the drawing area in the window display of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. </paragraph>
<paragraph id="P-0056" lvl="7"><number>&lsqb;0056&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a diagram for explaining the address conversion method in the drawing format b. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> In regard to the drawing format of the window display of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the drawing area size is 512&times;512 pixels of 8-bit color/pixel and the pixel block where the address becomes continuous is formed of 32 horizontal pixels&times;16 vertical pixels. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> In such drawing system, since the entire data capacity of the drawing area is 512&times;512&times;8-bit&equals;218 bytes, the address in the drawing area becomes 18-bit data. In the linear address format of (L), the more significant 9-bit &lsqb;d&plus;b&rsqb; of address indicates the y coordinate of the drawing plane, while the less significant 9-bit &lsqb;c&plus;a&rsqb; indicates the x coordinate of the drawing plane. Moreover, the more significant 5-bit&lsqb;d&rsqb; of the more significant 9-bit&lsqb;d&plus;b&rsqb; indicates the numbering of pixel block in the y direction of the drawing plane, while less significant 4-bit&lsqb;b&rsqb; indicates the y coordinate in the relevant pixel block. Moreover, more significant 4-bit&lsqb;c&rsqb; of the less significant 9-bit&lsqb;c&plus;a&rsqb; showing the x coordinate indicates the numbering of pixel block in the x direction of the drawing plane, while the less significant 5-bit&lsqb;a&rsqb; indicates the x coordinate in the relevant pixel block. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> Therefore, in such a structure of the drawing area, conversion to the tile address format of (M) from the linear address format of (L) can be attained by replacing the &lsqb;c&rsqb; of 5th to 8th bits with the &lsqb;b&rsqb; of the less significant 9th to 12th bits. With such conversion, the more significant 9-bit &lsqb;d&plus;c&rsqb; indicates, in the tile address format of (M), the number of the pixel block in the xy directions of the drawing area, while the less significant 9-bit&lsqb;b&plus;a&rsqb; indicates the xy coordinates in the relevant pixel block. </paragraph>
<paragraph id="P-0060" lvl="0"><number>&lsqb;0060&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference>(A) shows the pixel block in the background display of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> and <cross-reference target="DRAWINGS">FIG. 5</cross-reference>(B) shows an entire structure of the drawing area. <cross-reference target="DRAWINGS">FIG. 0</cross-reference>.<highlight><bold>4</bold></highlight> shows the address conversion system of address in the background display. </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> In this drawing format of the background display, the drawing area is formed of 1024&times;1024 pixels in 16-bit color/pixel, while the pixel block in which the address becomes continuous is formed of 32 horizontal pixels&times;32 vertical pixels. In this case, as an access to the video RAM<highlight><bold>40</bold></highlight>, write and read of display data can be realized at a time for one pixel block by making access, for example, to each block data of 2048 bytes with the burst access. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> In the case of such drawing format, since the total data capacity of drawing area becomes 1024&times;1024&times;16-bit&equals;221 bytes. Therefore, the address becomes 21-bit data as shown in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. In the linear address format of (B), the 11th to 20th bits &lsqb;d&plus;b&rsqb; of address indicates the y coordinate of the drawing plane, while the 1st to 10th bits &lsqb;c&plus;a&rsqb; indicates the x coordinate of the drawing plane and less significant 1 bit &lsqb;x&rsqb; indicates the more significant or less significant byte of 16-bit color in one pixel, respectively. The 16th to 20th bits&lsqb;d&rsqb; and 6th to 10th bits &lsqb;c&rsqb; indicates the numbering of the pixel block in the xy directions of the drawing plane, while 11th to 15th bits &lsqb;b&rsqb; and 1st to 5th bits &lsqb;a&rsqb; indicate the xy coordinates in the pixel block. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> Therefore, conversion to the tile address format of (A) can be attained by replacement of the 11th to 15th bits &lsqb;b&rsqb; with the 6th to 10th bits &lsqb;c&rsqb;. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> In the same manner, even in the formats of 1024&times;1024 pixels, 8-bit color/pixel and 512&times;512 pixels, 16-bit color/pixel, conversion to the tile address format from the linear address format can be realized by replacement of the predetermined bits of address. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> shows details of the address converter of the graphic controller <highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0066" lvl="0"><number>&lsqb;0066&rsqb;</number> The address converter <highlight><bold>18</bold></highlight> is composed of the barrel shifters s to u and selectors a to f as the address conversion means for executing replacement of bits of address with the hardware, an address conversion method table <highlight><bold>81</bold></highlight> as an address conversion setting means which can set a method of the address conversion for every address range and a control signal generator <highlight><bold>83</bold></highlight> for generating a signal to control the replacement of address bits based on the registered data extracted from the address conversion method table. </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> The address conversion method table <highlight><bold>81</bold></highlight> is the data table of 4-bit&times;256-entry and extracts the data of one entry corresponding to the index which is defined with the more significant 8-bit address of the video memory. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> The entry data of this address conversion method table <highlight><bold>81</bold></highlight> is formed as 4-bit data including the bit &lsqb;e&rsqb; indicating conversion of address and non-conversion of address, the bit &lsqb;w&rsqb; indicating the width of the drawing area whether it is 512 pixels or 1024 pixels, the bit &lsqb;h&rsqb; indicating the height of drawing area whether it is 512 pixels or 1024 pixels and the bit &lsqb;c&rsqb; indicating the 8-bit color or 16-bit color. </paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> When the drawing area is assigned, for example, to the address range where the more significant 8-bit addresses of the video RAM <highlight><bold>40</bold></highlight> are &ldquo;00000100&rdquo; to &ldquo;00111111&rdquo;, the above 4-bit data of &lsqb;e, w, h, c&rsqb; indicating the attribute of the drawing area are respectively registered to all entries (from entry &num;4 to &num;63) in which the 8-bit value in this range is used as the index. Moreover, in the same manner, when a plurality of drawing areas are assigned to different address ranges, the attribute information of the corresponding drawing area is registered, for each drawing area, to all entries where the 8-bit value in the range of the assigned more significant 8-bit address is defined as the index. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> Data registration to the address conversion method table <highlight><bold>81</bold></highlight> is conducted by respectively inputting, from an external CPU or the like, a select signal SELECT for data registration, an 8-bit address indicating the assigned area and a 4-bit entry data indicating the attribute information of the area when a part of the area of the video RAM <highlight><bold>40</bold></highlight> is assigned to the application. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> The control signal generator <highlight><bold>83</bold></highlight> generates a control signal to determine the selection of the barrel shifter and selector and then supplies this control signal based on the entry extracted from the address conversion method table. The barrel shifters s to u and selectors a to f input a physical address A &lsqb;23:0&rsqb; of 24-bit before conversion inputted from the CPU side, replaces the address bits as required with the control signal from the control signal generator <highlight><bold>83</bold></highlight> and then outputs the real address MA &lsqb;23:0&rsqb; after conversion. Thereby, replacement of four address bits explained above can be executed selectively. Here, A&lsqb;j:k&rsqb; means the k-bit to j-bit of the address. </paragraph>
<paragraph id="P-0072" lvl="0"><number>&lsqb;0072&rsqb;</number> For example, when the replacement of address bit of <cross-reference target="DRAWINGS">FIG. 4</cross-reference> (replacement of A&lsqb;12:9&rsqb; and A&lsqb;8:5&rsqb;) is executed, the barrel shifter s shifts the inputted 7-bit A &lsqb;15:9&rsqb; to select A&lsqb;12:9&rsqb; as the more significant 4-bit, while the barrel shifter t shifts the inputted 6-bit A&lsqb;10:5&rsqb; to select A&lsqb;8:5&rsqb; as the less significant 4-bit and the selector a selects an output of the barrel shifter t while the selector b selects an output of the barrel shifter s. Moreover, the selector c selects the A&lsqb;15&rsqb; the selector d selects the A&lsqb;14&rsqb; and the selector e selects the A&lsqb;13&rsqb;, respectively. </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> Since an input of the barrel shifter u is formed by vertically coupling the outputs of the selectors a and b, its value becomes 10 bits of &lcub;**,A&lsqb;8&rsqb;, A&lsqb;7&rsqb;, A&lsqb;6&rsqb;, A&lsqb;5&rsqb;, A&lsqb;12&rsqb;, A&lsqb;11&rsqb;, A&lsqb;10&rsqb;, A&lsqb;9&rsqb;, **(&ldquo;**&rdquo; indicate invalid bits)&rcub;. Here, the barrel shifter u selects the 7-bit from the 2nd bit to 8th bit, while the selector f selects the A&lsqb;9&rsqb;. Accordingly, the address MA &lsqb;23:0&rsqb; in the video RAM <highlight><bold>40</bold></highlight> side is sequentially indicated from the more significant bits as &lcub;A&lsqb;23:16&rsqb;, A&lsqb;15&rsqb;, A&lsqb;14&rsqb;, A&lsqb;13&rsqb;, A&lsqb;8:5&rsqb;, A&lsqb;12:10&rsqb;, A&lsqb;9&rsqb;, A&lsqb;4:0&rsqb;&rcub; and thereby the conversion shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> can be achieved. </paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> Moreover, when the replacement of address bits of <cross-reference target="DRAWINGS">FIG. 6</cross-reference> (A&lsqb;15:11&rsqb; and A&lsqb;10:6&rsqb;) is to be conducted, first, the barrel shifters selects the A&lsqb;15:11&rsqb; and the barrel shifter t selects the A&lsqb;10:6&rsqb;, while the selector a selects an output of the barrel shifter t and the selector b selects an output of the barrel shifter s. Subsequently, the selector c selects the A&lsqb;10&rsqb; and the selector d selects the A&lsqb;9&rsqb; and the selector e selects the A&lsqb;8&rsqb;. Since an output of the barrel shifter u is formed by coupling in vertical the outputs of the selectors a and b, its value becomes 10 bits of &lcub;A&lsqb;10&rsqb; A&lsqb;9&rsqb;, A&lsqb;8&rsqb;, A&lsqb;7&rsqb;, A&lsqb;6&rsqb;, A&lsqb;15&rsqb;, A&lsqb;14&rsqb;, A&lsqb;13&rsqb;, A&lsqb;12&rsqb;, A&lsqb;10&rsqb;&rcub;. Here, the selector u selects 7 bits from the 4th bit to 10th bit. Thereby, the address MA &lsqb;23:0&rsqb; in the video memory side is indicated sequentially from the more significant bits as &lcub;A&lsqb;23:16&rsqb;, A&lsqb;10&rsqb;, A&lsqb;9&rsqb;, A&lsqb;8&rsqb;, A&lsqb;7:6&rsqb;, A&lsqb;15:10&rsqb;, A&lsqb;5&rsqb; and A&lsqb;4:0&rsqb;&rcub;. Thereby, the conversion of <cross-reference target="DRAWINGS">FIG. 6</cross-reference> has been conducted. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> Namely, the address converter <highlight><bold>18</bold></highlight> of the structure explained above realizes, with the hardware, the conversion of the linear address format treated in the CPU<highlight><bold>50</bold></highlight> to the tile address format as the real address of the video RAM<highlight><bold>40</bold></highlight> and moreover this address conversion method can be selectively set from the four kinds for every drawing area assigned to the video RAM<highlight><bold>40</bold></highlight>. </paragraph>
<paragraph id="P-0076" lvl="0"><number>&lsqb;0076&rsqb;</number> As explained above, according to the graphic controller <highlight><bold>1</bold></highlight> of this embodiment, since the address conversion to the tile address format from the linear address format can be realized with the hardware depending on each image display format during access to the video RAM<highlight><bold>40</bold></highlight> from the CPU<highlight><bold>50</bold></highlight> even in the system that a plurality of image displays in different size of drawing area and different color bits are performed on one display image and the standard drawing process is conducted in the linear address format with the CPU<highlight><bold>50</bold></highlight>, the high speed drawing process can be realized without enhancement of load on the CPU. Moreover, with the access to the video RAM<highlight><bold>40</bold></highlight> in the tile address format, the number of times of access to the video RAM<highlight><bold>40</bold></highlight> in various drawing processes can be reduced and thereby power consumption can be so far reduced. </paragraph>
<paragraph id="P-0077" lvl="7"><number>&lsqb;0077&rsqb;</number> &lsqb;Second Embodiment&rsqb;</paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a structural diagram showing an embodiment of the microcomputer of the present invention. <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a diagram for explaining an address conversion system by MMU (Memory Management Unit) thereof. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> The microcomputer <highlight><bold>100</bold></highlight> of this embodiment is one chip microcomputer which is formed, although not particularly restricted, on one semiconductor chip such as a single crystalline silicon, comprising: a CPU<highlight><bold>50</bold></highlight> for controlling the entire part of system including the display control; an MMU<highlight><bold>51</bold></highlight> for converting a virtual address processed in the CPU<highlight><bold>50</bold></highlight> to the actual address with the hardware; a flash ROM <highlight><bold>32</bold></highlight> in which the control program and control data are stored; a RAM<highlight><bold>31</bold></highlight> for providing the work area to the CPU<highlight><bold>50</bold></highlight>; an input/output interface <highlight><bold>33</bold></highlight> for inputting and outputting an external signal; a drawing section <highlight><bold>12</bold></highlight> shown in the graphic controller <highlight><bold>1</bold></highlight> of the above embodiment; a controller <highlight><bold>14</bold></highlight>, a display <highlight><bold>20</bold></highlight>; a video RAM<highlight><bold>40</bold></highlight>; and a system bus <highlight><bold>34</bold></highlight> or the like for connecting each unit. The video RAM may be formed in the structure of external circuit or may be integrated with the RAM<highlight><bold>31</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> The MMU<highlight><bold>51</bold></highlight> in this embodiment is, for example, of the segment system in which a part of the area of RAM is assigned independently to the program. Moreover, in this embodiment, this MMU<highlight><bold>51</bold></highlight> is additionally provided with a function to assign the area to the video RAM<highlight><bold>40</bold></highlight> and an address conversion circuit <highlight><bold>18</bold></highlight><highlight><italic>a </italic></highlight>for replacement of the address bit. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> The MMU of the segment system is provided, as shown in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, with a segment table ST in which the correspondence between the storage area (main storage segment) of RAM assigned independently for each program and the real address is written. Moreover, in this segment table ST, the start address of the drawing area (VRAM segment) of the video RAM<highlight><bold>40</bold></highlight> assigned for each program and the drawing format data indicating the method for replacement of the address bit are registered. Moreover, the MMU<highlight><bold>51</bold></highlight> is provided with the control signal generator <highlight><bold>83</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference> and the address conversion circuit <highlight><bold>18</bold></highlight><highlight><italic>a </italic></highlight>consisting of the barrel shifters s to u and selectors a to f. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> According to this structure, when the video RAM<highlight><bold>40</bold></highlight> is accessed from the CPU<highlight><bold>50</bold></highlight>, the CPU<highlight><bold>50</bold></highlight> outputs a virtual address (sector number&plus;address in the sector) to the MMU<highlight><bold>51</bold></highlight>. Thereby, the start address and the drawing format data indicating the method for replacement of address bit are extracted in the MMU<highlight><bold>51</bold></highlight>. A control signal is outputted to the barrel shifters s to u and selectors a to f from the control signal generator <highlight><bold>83</bold></highlight> of the address conversion circuit <highlight><bold>18</bold></highlight><highlight><italic>a </italic></highlight>based on the drawing format data for the replacement of the predetermined bits for the address in the sector. Here, the start address extracted from the segment table is coupled with the address in the sector after the address conversion to generate the real address of the tile address system. Thereby, the normal access to the video RAM<highlight><bold>40</bold></highlight> can be assured. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> As explained above, according to the microcomputer <highlight><bold>100</bold></highlight>, since the area of video RAM<highlight><bold>40</bold></highlight> is assigned and the method of conversion to the tile address format from the linear address format is instructed using the MMU<highlight><bold>51</bold></highlight>, the chip area can further be reduced in comparison with the case where the similar structure is provided individually. </paragraph>
<paragraph id="P-0084" lvl="7"><number>&lsqb;0084&rsqb;</number> &lsqb;Third Embodiment&rsqb;</paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a block diagram of an information processor to which the graphic system of the embodiment of the present invention is applied. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> In this embodiment, the graphic system of the present invention is adapted to an information processor, for example, a car-navigation system and a PDA (Personal Data Assistant). The information processor comprises: a CPU <highlight><bold>50</bold></highlight> for totally controlling an apparatus including a drawing process; a RAM<highlight><bold>102</bold></highlight> for providing a memory space for the process in the CPU<highlight><bold>50</bold></highlight>; a ROM<highlight><bold>103</bold></highlight> for storing a control program and a control data such as OS (operating system) and application software; an I/O interface <highlight><bold>104</bold></highlight> for inputting and outputting data to from an external circuit; a video RAM<highlight><bold>40</bold></highlight> for storing display data; a graphic controller <highlight><bold>1</bold></highlight>A provided for exchange of data between the CPU<highlight><bold>50</bold></highlight> and video RAM<highlight><bold>40</bold></highlight> for generating and outputting a video signal based on the display data written to the video RAM<highlight><bold>40</bold></highlight>; host buses <highlight><bold>105</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>105</bold></highlight><highlight><italic>b </italic></highlight>for connecting the CPU<highlight><bold>50</bold></highlight>, RAM<highlight><bold>102</bold></highlight>, ROM<highlight><bold>103</bold></highlight>, I/O interface <highlight><bold>104</bold></highlight> and graphic controller <highlight><bold>1</bold></highlight>A; and memory buses <highlight><bold>106</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>106</bold></highlight><highlight><italic>b </italic></highlight>for connecting the video RAM<highlight><bold>40</bold></highlight> and graphic controller <highlight><bold>1</bold></highlight>A. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> Moreover, the I/O interface <highlight><bold>104</bold></highlight> is connected with an input key <highlight><bold>111</bold></highlight> for realizing the input manipulation from a user, a large capacity storage device <highlight><bold>112</bold></highlight> such as DVD drive and a communication interface <highlight><bold>113</bold></highlight> for realizing data communication through connection with a communication device such as a mobile phone. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> Moreover, this information processor is connected with a display not illustrated. A video signal from the graphic controller <highlight><bold>1</bold></highlight>A is outputted to this display and thereby an image is outputted to the display. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> The graphic controller <highlight><bold>1</bold></highlight>A comprises the host I/F section <highlight><bold>10</bold></highlight> for inputting and outputting the data to and from the host buses <highlight><bold>105</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>105</bold></highlight><highlight><italic>b</italic></highlight>, the drawing section <highlight><bold>12</bold></highlight> which generates, with hardware, the display data of tile address format having the predetermined drawing content depending on the instruction from the controller <highlight><bold>14</bold></highlight>, the controller <highlight><bold>14</bold></highlight> for controlling the operations of each block and instructing the drawing process to the drawing section <highlight><bold>12</bold></highlight> by appreciating the drawing command inputted from the host buses <highlight><bold>105</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>105</bold></highlight><highlight><italic>b</italic></highlight>, the memory I/F section <highlight><bold>16</bold></highlight> for reading and writing the display data and drawing command to the external video RAM <highlight><bold>40</bold></highlight>, the address converter <highlight><bold>18</bold></highlight> for converting the address of the display data inputted from the CPU<highlight><bold>50</bold></highlight> and the display section <highlight><bold>20</bold></highlight> for converting the display data stored in the video RAM<highlight><bold>40</bold></highlight>, for example, to the RGB video signal and then outputting this video signal, which are respectively connected with the internal buses <highlight><bold>21</bold></highlight><highlight><italic>a</italic></highlight>, <highlight><bold>21</bold></highlight><highlight><italic>b </italic></highlight>used for transfer of display data. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> Format of each block in the graphic controller <highlight><bold>1</bold></highlight>A is identical to that of the first embodiment. As explained in the first embodiment, the address converter <highlight><bold>18</bold></highlight> is structured to select execution/non-execution of the address conversion for every predetermined address range of the video RAM<highlight><bold>40</bold></highlight> depending on the value of the address conversion method table <highlight><bold>81</bold></highlight> (<cross-reference target="DRAWINGS">FIG. 7</cross-reference>) as the setting register and to selectively enable a plurality of kinds of address conversion respectively corresponding to a plurality of kinds of window structure in different drawing sizes and number of colors. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> As is explained in the first embodiment, as shown in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the address conversion method table <highlight><bold>81</bold></highlight> is provided with 256 entries respectively assigned for every predetermined address range of the video RAM<highlight><bold>40</bold></highlight>. Each entry includes the bit &lsqb;e&rsqb; indicating execution or non-execution of the address conversion, the bit &lsqb;w&rsqb; indicating whether the width of the drawing area is 512 pixels or 1024 pixels, the bit &lsqb;h&rsqb; indicating whether the height of drawing area whether is 512 pixels or 1024 pixels and the bit &lsqb;c&rsqb; indicating 8-bit color or 16-bit color. When one window is opened, the area of video RAM<highlight><bold>40</bold></highlight> is assigned to develop the display data of such window and the value indicating the address conversion method applied to the display data of this window is set to the entry of the address conversion method table <highlight><bold>81</bold></highlight> corresponding to this area. Thereby, as shown in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, when the developed area of the display data of each window is accessed from the CPU<highlight><bold>50</bold></highlight>, the address conversion is adapted depending on the display format of each window. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> It is also possible that the conversion system is determined with a control program which is executed, for example, by the CPU<highlight><bold>50</bold></highlight> without use of the address conversion method table <highlight><bold>81</bold></highlight> and the address conversion system in the address converter <highlight><bold>18</bold></highlight> is changed by outputting a signal to instruct the conversion system from the CPU<highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> The OS (operating system) operating in the information processor explained above is a general purpose OS and the display data is formed for the process in the linear address format corresponding to the address where the pixel data are continuous in the line direction to the right end from the left end of the display image. The OS may be stored in the ROM<highlight><bold>103</bold></highlight> and also in a PC card type storage device, for example, connected to the I/O interface <highlight><bold>104</bold></highlight>. It is also possible to execute this OS with the CPU<highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> Moreover, this OS is formed to open a plurality of windows in one display image with the window function of GUI (Graphical User Interface) and to execute, for each window, the image display with the setting of different colors based on the multi-task process. In the case where a plurality of windows are opened, one memory area of the video RAM<highlight><bold>40</bold></highlight> is assigned to each window and moreover the setting of the address conversion method table <highlight><bold>81</bold></highlight> of the graphic controller <highlight><bold>1</bold></highlight>A is also conducted, on the occasion of area assigning, to realize the address conversion depending on the window format when the CPU<highlight><bold>50</bold></highlight> writes the display data to the video RAM<highlight><bold>40</bold></highlight>. Here, it is also possible to set that the assigning of these memory areas and setting of the table for programming the address conversion system are conducted with a driver software (hereinafter, referred to as a video driver) of the graphic controller <highlight><bold>1</bold></highlight>A executed by the CPU<highlight><bold>50</bold></highlight> based on the request from the OS. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> In addition, the application program issues, for example, a drawing command to draw the data in the predetermined shape to the designated coordinates or to execute, when such drawing command is received from the external circuit, the drawing process with the video driver which is executed when the OS transfers the drawing command thereto or with the graphic controller <highlight><bold>1</bold></highlight>A. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> Next, the process sequence of the video driver which is realized with the software process by the CPU<highlight><bold>50</bold></highlight> will be explained in detail. </paragraph>
<paragraph id="P-0097" lvl="0"><number>&lsqb;0097&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> shows a flowchart of the drawing process which is executed with the video driver. </paragraph>
<paragraph id="P-0098" lvl="0"><number>&lsqb;0098&rsqb;</number> This drawing process is started in the timing that a drawing command is transferred to the video driver from the OS when the drawing command is issued by the application software and when an instruction to start the drawing process is issued on the basis of the received drawing command (step S<highlight><bold>1</bold></highlight>). </paragraph>
<paragraph id="P-0099" lvl="0"><number>&lsqb;0099&rsqb;</number> Upon reception of the drawing command, the video driver determines whether the drawing command can be covered with the drawing process of the drawing section <highlight><bold>12</bold></highlight> or not (step S<highlight><bold>2</bold></highlight>). When this drawing command can be covered, the video driver controls the drawing section <highlight><bold>12</bold></highlight> to execute the drawing process to write the display data to the designated area of the video RAM<highlight><bold>40</bold></highlight> (step S<highlight><bold>3</bold></highlight>) The drawing section <highlight><bold>12</bold></highlight> generates the display data of the tile address format and then writes this display data in direct to the video RAM<highlight><bold>40</bold></highlight>. </paragraph>
<paragraph id="P-0100" lvl="0"><number>&lsqb;0100&rsqb;</number> On the other hand, if the drawing command is not covered with the drawing section <highlight><bold>12</bold></highlight>, the drawing is conducted with the software process by the CPU<highlight><bold>50</bold></highlight> using the general purpose standard drawing library offered from the OS and thereby the display data is written to the designated area of the video RAM<highlight><bold>40</bold></highlight> from the CPU<highlight><bold>50</bold></highlight> (step S<highlight><bold>4</bold></highlight>). The general purpose standard drawing library processes the display data in the linear address format but this display data is converted to the tile address format with the address converter <highlight><bold>18</bold></highlight> when it is written into the video RAM<highlight><bold>40</bold></highlight> from the CPU<highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0101" lvl="0"><number>&lsqb;0101&rsqb;</number> When the process of the step S<highlight><bold>3</bold></highlight> or S<highlight><bold>4</bold></highlight> is completed, this drawing process stops until the next drawing command is transferred. A series of drawing process is executed by repetition of such drawing processes for the number of times as much as the number of drawing commands. </paragraph>
<paragraph id="P-0102" lvl="0"><number>&lsqb;0102&rsqb;</number> A general purpose drawing command can be received from an external side through the drawing process by the video driver and the load of CPU due to the drawing process can be reduced through the process of the drawing section <highlight><bold>12</bold></highlight>. </paragraph>
<paragraph id="P-0103" lvl="0"><number>&lsqb;0103&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 12</cross-reference> shows a flowchart of the area generation process to be executed by the video driver. </paragraph>
<paragraph id="P-0104" lvl="0"><number>&lsqb;0104&rsqb;</number> This area generation process is started (step S<highlight><bold>11</bold></highlight>) in the timing that a request of window display (including the display of background) is issued to the OS from the application program when an application program is driven or when it is requested to execute the display of different pieces of information in one application and a request for area generation of the video RAM<highlight><bold>40</bold></highlight> corresponding to this window display is transmitted to the video driver from the OS based on such request of window display. To this area generation request, an information indicating a window format (number of horizontal and vertical pixels of the window and number of colors) is also added. </paragraph>
<paragraph id="P-0105" lvl="0"><number>&lsqb;0105&rsqb;</number> Moreover, this area generation process is also started when a request to generate the storage area of the drawing command is transferred to the video driver from the OS in such a case that a data file including many drawing commands is generated or inputted due to the reception of the application program and data (step S<highlight><bold>11</bold></highlight>). </paragraph>
<paragraph id="P-0106" lvl="0"><number>&lsqb;0106&rsqb;</number> The video driver determines, when it has received an area generation request, whether the requested area is the storage area of the drawing command or not (step S<highlight><bold>12</bold></highlight>) and also determines, when the requested area is a display data development area, the display format of the drawing area such as the number of pixels and number of colors thereof (steps S<highlight><bold>15</bold></highlight>, S<highlight><bold>18</bold></highlight>, S<highlight><bold>21</bold></highlight>, S<highlight><bold>24</bold></highlight>). In the flowchart of <cross-reference target="DRAWINGS">FIG. 12</cross-reference>, determination of the number of pixels in the vertical direction of the window image and setting thereof are omitted and only the determination of the number of pixels in the horizontal direction and setting thereof are indicated. </paragraph>
<paragraph id="P-0107" lvl="0"><number>&lsqb;0107&rsqb;</number> When the corresponding contents are found as a result of above determination processes, the memory assignment (steps S<highlight><bold>13</bold></highlight>, S<highlight><bold>16</bold></highlight>, S<highlight><bold>19</bold></highlight>, S<highlight><bold>22</bold></highlight>, S<highlight><bold>25</bold></highlight>) depending on such contents and the setting of the address conversion method table <highlight><bold>81</bold></highlight> (steps S<highlight><bold>14</bold></highlight>, S<highlight><bold>17</bold></highlight>, S<highlight><bold>20</bold></highlight>, S<highlight><bold>23</bold></highlight>, S<highlight><bold>26</bold></highlight>) are conducted. Meanwhile, if the corresponding contents are not found as a result of above determination processes, an error is reported to the OS (step S<highlight><bold>27</bold></highlight>) and this area generation process comes to the end. </paragraph>
<paragraph id="P-0108" lvl="0"><number>&lsqb;0108&rsqb;</number> The memory assignment in the steps S<highlight><bold>13</bold></highlight>, S<highlight><bold>16</bold></highlight>, S<highlight><bold>19</bold></highlight>, S<highlight><bold>22</bold></highlight> and S<highlight><bold>25</bold></highlight> is executed by reserving a memory area of the size enough for drawing from the vacant areas of the video RAM<highlight><bold>40</bold></highlight>. The video driver processes each area of the video RAM<highlight><bold>40</bold></highlight> corresponding to each entry of the address conversion method table <highlight><bold>81</bold></highlight> as one unit and reserves a plurality of areas of one unit for the purpose of memory assignment. </paragraph>
<paragraph id="P-0109" lvl="0"><number>&lsqb;0109&rsqb;</number> Setting in the steps S<highlight><bold>14</bold></highlight>, S<highlight><bold>17</bold></highlight>, S<highlight><bold>20</bold></highlight>, S<highlight><bold>23</bold></highlight>, S<highlight><bold>26</bold></highlight> is executed by writing a storing data or a value corresponding to the window format to each entry of the address conversion method table <highlight><bold>81</bold></highlight> corresponding to the assigned memory area. Namely, in the case of the drawing command storage area, since the address conversion is not conducted, the value &ldquo;0&rdquo; is set to the &lsqb;e&rsqb; bit, while the desired value to the other bits (step S<highlight><bold>14</bold></highlight>). </paragraph>
<paragraph id="P-0110" lvl="0"><number>&lsqb;0110&rsqb;</number> Moreover, in the case of the display data storage area in the window format in the width of 512 pixels or less of 8-bit color, the value &ldquo;1&rdquo; is set to the &lsqb;e&rsqb; bit indicating conversion/non-conversion of address, &ldquo;0&rdquo; to the &lsqb;w&rsqb; bit indicating the width of the drawing area and &ldquo;0&rdquo; to the &lsqb;c&rsqb; bit indicating the number of colors (step S<highlight><bold>17</bold></highlight>). The setting values are changed depending on difference of window format in the steps S<highlight><bold>20</bold></highlight>, S<highlight><bold>23</bold></highlight>, S<highlight><bold>26</bold></highlight>. </paragraph>
<paragraph id="P-0111" lvl="0"><number>&lsqb;0111&rsqb;</number> When the memory assignment and setting of the address conversion method table <highlight><bold>81</bold></highlight> are completed, this area generation process stops to wait for the generation of the next area generation. </paragraph>
<paragraph id="P-0112" lvl="0"><number>&lsqb;0112&rsqb;</number> Even in the case of displaying a plurality of windows of different image formats with such video driver, the display data of the tile address format having higher memory access performance is developed in the video RAM<highlight><bold>40</bold></highlight>, while the display data can be processed in the OS side in the linear address format having higher flexibility. </paragraph>
<paragraph id="P-0113" lvl="0"><number>&lsqb;0113&rsqb;</number> As explained above, according to the information processor loading the graphic system of this embodiment, since the display data of the tile address format is developed in the video RAM<highlight><bold>40</bold></highlight>, the high speed process and low power consumption can be realized in the drawing section <highlight><bold>12</bold></highlight> provided in the graphic controller <highlight><bold>1</bold></highlight>A and in the drawing process by the CPU<highlight><bold>50</bold></highlight>. Moreover, since the display data is converted to the tile address format from the linear address format with the hardware process in the address converter <highlight><bold>18</bold></highlight> of the graphic controller <highlight><bold>1</bold></highlight>A on the occasion of writing the data into the video RAM<highlight><bold>40</bold></highlight> from the CPU<highlight><bold>50</bold></highlight>, the display data is processed, in the video RAM<highlight><bold>40</bold></highlight> side, in the tile address format which enables high speed drawing process, while the display data is processed, in the CPU<highlight><bold>50</bold></highlight> side, in the linear address format which assures high flexibility. </paragraph>
<paragraph id="P-0114" lvl="0"><number>&lsqb;0114&rsqb;</number> Moreover, since the address conversion system can be selectively set from various systems depending on the address range of the video RAM<highlight><bold>40</bold></highlight>, even when a plurality of windows are displayed in one image in different image formats such as various window widths and number of colors, the address conversion can be set depending on each window format. Therefore, even when a plurality of windows are displayed in different image formats, the data can be stored in the video RAM<highlight><bold>40</bold></highlight> as the display data of the tile address format which enables high speed drawing process, while the linear address format assuring the high flexibility is processed in the CPU<highlight><bold>50</bold></highlight> side. </paragraph>
<paragraph id="P-0115" lvl="0"><number>&lsqb;0115&rsqb;</number> In addition, since execution/non-execution of the address conversion can also be set depending on the address range of the video RAM<highlight><bold>40</bold></highlight>, when the drawing command is stored to the video RAM<highlight><bold>40</bold></highlight>, for example, with the file input or the like, the data can be written in direct to the video RAM<highlight><bold>40</bold></highlight> from the CPU<highlight><bold>50</bold></highlight> without execution of the address conversion. </paragraph>
<paragraph id="P-0116" lvl="0"><number>&lsqb;0116&rsqb;</number> Therefore, the information processor loading the graphic system of this embodiment is capable of applying the general purpose OS to process the image data in the linear address format and can also use the graphic function using the standard API (Application Programming Interface) provided to the general purpose OS. Therefore, an application software can also be generated easily. </paragraph>
<paragraph id="P-0117" lvl="0"><number>&lsqb;0117&rsqb;</number> Next, the information providing system utilizing the information processor explained above will be explained. </paragraph>
<paragraph id="P-0118" lvl="0"><number>&lsqb;0118&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 13</cross-reference> shows a total structure of the information providing system. </paragraph>
<paragraph id="P-0119" lvl="0"><number>&lsqb;0119&rsqb;</number> This information providing system is composed of a host computer <highlight><bold>201</bold></highlight> which is installed in the host center to totally control the information providing system, terminals <highlight><bold>211</bold></highlight> to <highlight><bold>213</bold></highlight> such as set top-boxes which are installed at a company or an ordinary household and are connected to the host computer <highlight><bold>201</bold></highlight> by wire or a radio-link, a car-navigation system <highlight><bold>214</bold></highlight> which is loaded to a vehicle and is connected to the host computer <highlight><bold>201</bold></highlight> by the radio-link and a PDA (Personal Digital Assistant) <highlight><bold>215</bold></highlight> which includes the communication function and can be connected to the host computer <highlight><bold>201</bold></highlight> by the radio-link. Each information processor is provided with the graphic system illustrated in <cross-reference target="DRAWINGS">FIG. 10</cross-reference> explained above. </paragraph>
<paragraph id="P-0120" lvl="0"><number>&lsqb;0120&rsqb;</number> Various services can be provided to subscribers having installed the information processors through provision, collection and management of information depending on the requests from the terminals <highlight><bold>211</bold></highlight> to <highlight><bold>213</bold></highlight> as the information processor, car-navigation system <highlight><bold>214</bold></highlight> and PDA <highlight><bold>215</bold></highlight> or the like. </paragraph>
<paragraph id="P-0121" lvl="0"><number>&lsqb;0121&rsqb;</number> The services intended to the car-navigation system <highlight><bold>214</bold></highlight> in the information providing system explained above include, for example, the personal services for providing a road navigation information, an information for settlement of charges at a toll road and a drive-through shop and a driving information for collection and management such as an information of shops near the current position, the distribution services such as for providing an information for control of distribution route and management of stock information or the services for providing an information for ordinary businesses. </paragraph>
<paragraph id="P-0122" lvl="0"><number>&lsqb;0122&rsqb;</number> The services intended to the PDA <highlight><bold>215</bold></highlight> include a navigation service for pedestrians to display the details of information of buildings and underground shopping areas. </paragraph>
<paragraph id="P-0123" lvl="0"><number>&lsqb;0123&rsqb;</number> The services intended to the terminals <highlight><bold>212</bold></highlight>, <highlight><bold>213</bold></highlight> which are installed at ordinary households include, for example, distribution of video data and audio data and provision of traffic information in cooperation with the car-navigation system <highlight><bold>214</bold></highlight> and PDA. The video data and audio data are converted to a video/audio signal in the terminals <highlight><bold>212</bold></highlight>, <highlight><bold>213</bold></highlight> and are outputted as the video/audio output to a television receiver. </paragraph>
<paragraph id="P-0124" lvl="0"><number>&lsqb;0124&rsqb;</number> The services intended to the terminal <highlight><bold>211</bold></highlight> installed in a company include the service to provide a business support information in cooperation with the service provided to the car-navigation system <highlight><bold>214</bold></highlight> loaded to a business vehicle and with the PDA<highlight><bold>215</bold></highlight> carried by an employee and to provide a traffic information within the company such as a positional information of an employee. </paragraph>
<paragraph id="P-0125" lvl="0"><number>&lsqb;0125&rsqb;</number> In this information providing system, since the information processors <highlight><bold>211</bold></highlight> to <highlight><bold>215</bold></highlight> are provided with the graphic system of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the memory access performance can be improved in many drawing processes through the display control in the tile address format and the drawing process can also be improved even when the system is operated with the clock of the frequency which is not so high. For the apparatus such as PDA <highlight><bold>215</bold></highlight> which is requested to show lower power consumption, it is very effective that the high drawing performance can be obtained with the operation clock of lower frequency. </paragraph>
<paragraph id="P-0126" lvl="0"><number>&lsqb;0126&rsqb;</number> Moreover, since the CPU<highlight><bold>50</bold></highlight> is capable of dealing with the image data in the flexible linear address format, the information processors <highlight><bold>211</bold></highlight> to <highlight><bold>215</bold></highlight> can use the flexible linear address format data as the image data offered from the host computer <highlight><bold>201</bold></highlight>. </paragraph>
<paragraph id="P-0127" lvl="0"><number>&lsqb;0127&rsqb;</number> Therefore, since the general purpose OS which can process the image data in the linear address format can be used for the host computer <highlight><bold>201</bold></highlight> and information processors <highlight><bold>211</bold></highlight> to <highlight><bold>215</bold></highlight> and the graphics function can also be used by introducing the standard API provided to the general purpose OF, the application software for various services can be developed more easily in comparison with novel formation of the exclusive OS. </paragraph>
<paragraph id="P-0128" lvl="0"><number>&lsqb;0128&rsqb;</number> A drawing command in small amount of data may be used for offering image information to the information processors <highlight><bold>211</bold></highlight> to <highlight><bold>215</bold></highlight> from the host computer <highlight><bold>102</bold></highlight>, but the graphic system loaded to each information processor <highlight><bold>211</bold></highlight> to <highlight><bold>215</bold></highlight> is provided with a drawing section <highlight><bold>12</bold></highlight> to execute image process in the tile map format. Therefore it is possible to share the processes. Namely, the drawing section <highlight><bold>12</bold></highlight> processes the drawing commands when it is possible and the CPU<highlight><bold>50</bold></highlight> processes only the drawing commands which cannot be processed with the drawing section <highlight><bold>12</bold></highlight>. Accordingly, a processing load of the CPU<highlight><bold>50</bold></highlight> can be reduced even in the case of executing the drawing process using the standard drawing command. </paragraph>
<paragraph id="P-0129" lvl="0"><number>&lsqb;0129&rsqb;</number> Moreover, it is also possible that when the drawing command has been transmitted, setting of the address conversion to the area to store the drawing command is disabled and this drawing command is once stored in the desired area of the video RAM<highlight><bold>40</bold></highlight> to execute later the drawing process with the drawing section <highlight><bold>12</bold></highlight> and CPU<highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0130" lvl="0"><number>&lsqb;0130&rsqb;</number> The present invention has been explained above on the basis of the preferred embodiments but the present invention is not limited only above embodiments and naturally allows various changes and modifications not departing from the scope of the claims thereof. </paragraph>
<paragraph id="P-0131" lvl="0"><number>&lsqb;0131&rsqb;</number> For example, the graphic controller <highlight><bold>1</bold></highlight> of the embodiment sets the address conversion method for every address range using the address conversion method table in which the data indicating the address conversion method is defined as the entry data using the more significant bits of the address as the index. Moreover, the graphic controller <highlight><bold>1</bold></highlight> is also capable of determining the address conversion method within the relevant access range with reference to a register value when the access request to the video RM is issued by registering to the register, upon assignment of the video RAM area to the application, the address range of such area (for example, start address and capacity or the like) and the data for determining the address conversion method in such area. In this case, the address conversion setting means is structured with the register explained above. </paragraph>
<paragraph id="P-0132" lvl="0"><number>&lsqb;0132&rsqb;</number> In addition, various modifications are possible for the kind of pixel format such as size and color bits of drawing area assigned to the application. The structure in above embodiment in which the width and height of the pixel block in the tile address format fixed for every pixel format can be changed with the setting can improve the performance by changing the setting to accommodate the drawing having comparatively higher execution frequency to a less number of pixel blocks. </paragraph>
<paragraph id="P-0133" lvl="0"><number>&lsqb;0133&rsqb;</number> Moreover, as the address conversion system, a system for mutually replacing the values of two ranges of address has been indicated in the embodiment, but it is also possible to convert the linear address format to the tile address format after the address range is shifted for the predetermined length using various algorithms. </paragraph>
<paragraph id="P-0134" lvl="0"><number>&lsqb;0134&rsqb;</number> The present invention has been explained above in relation to a one-chip graphic controller and a microcomputer which is an application field as the background of the invention, but the present invention is not limited thereto and can be widely used various apparatuses for the display control. </paragraph>
<paragraph id="P-0135" lvl="0"><number>&lsqb;0135&rsqb;</number> The effects of the typical inventions disclosed in this specification will be explained below briefly. </paragraph>
<paragraph id="P-0136" lvl="0"><number>&lsqb;0136&rsqb;</number> Namely, according to the present invention, even when a plurality of display data of different drawing area sizes and pixel formats exist simultaneously on the video memory, the linear address format can be converted to the tile address format with the hardware process corresponding to a plurality of display data. Therefore, the present invention also provide the effect that improvement of access performance to the video memory in the drawing process and reduction of load of CPU can be attained simultaneously. </paragraph>
<paragraph id="P-0137" lvl="0"><number>&lsqb;0137&rsqb;</number> Moreover, according to the information processor loading the video system of the present invention, the application software can be developed easily, in addition to the effect explained above, for example, the graphics function can be realized using the standard API because the general purpose OS for processing the display data of the linear address format can be adapted to the information processor. </paragraph>
<paragraph id="P-0138" lvl="0"><number>&lsqb;0138&rsqb;</number> Moreover, the display controller and video system of the present invention can also provide the effect that the memory can be used effectively, namely the file data of the drawing command, for example, can be stored temporarily to the memory without address conversion because it is possible to set non-address-conversion for the address range designated on the memory, for example, of video RAM or the like. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A display controller comprising: an input section to which a display data and an address are inputted; a video memory interface for writing said input display data to a video memory corresponding to a physical address in which each pixel in a 2n&times;2m (n and m are natural numbers) rectangular area formed by dividing the display area is continuous; and a drawing circuit for executing the designated drawing process by receiving a command code for drawing operation from an external circuit, wherein said display controller further comprising: 
<claim-text>an address conversion means for mutually replacing the bit arrangement of said address inputted from the external circuit; and </claim-text>
<claim-text>an address conversion setting means for setting the bit portions which are replaced with said address conversion means for every address ranges. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A display controller according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, 
<claim-text>wherein the storage area of said video memory is divided into a plurality of address ranges and the display data of different images are stored for every address range, and </claim-text>
<claim-text>wherein said address conversion setting means is structured to be able to set the replacement portion of the bit arrangement for every divided address range. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A display controller according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein said address conversion setting means is a data table in which the predetermined more significant bits of the address indicating the divided address range are defined as the index to extract the registered data and the bit data for determining the replacing portion in said address range is set as the registered data. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A microcomputer in which a central processing unit to execute the system control process including the drawing process and the display controller according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference> are formed on one semiconductor substrate. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A microcomputer comprising: a central processing unit for executing the system control process including the drawing process; a memory management unit for converting a logical address processed with said central processing unit to a physical address in the main memory; and a drawing circuit for executing the designated drawing process by receiving a command code for the drawing from said central processing unit, 
<claim-text>wherein said memory management unit includes an address conversion means for converting a logical address to a physical address of the video memory by mutually replacing the bit arrangements of the logical address supplied from said central processing unit when said central processing unit writes the display data to the video memory corresponding to the physical address in which each pixel of a 2n&times;2m (n and m are natural numbers) rectangular area formed by dividing the display area is continuous and is also provided with an address conversion setting means which can set the replacing portion of bit arrangement for every address ranges of the video memory. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A graphic system comprising: a CPU to execute the arithmetic processes; a memory to store a display data; and a display of the tile address format for reading, from said memory, the display data of tile address format corresponding to the address in which the pixel data in each rectangular area formed by dividing the display area in the horizontal and vertical directions is continuous and then generating a video signal which can be outputted from the display, 
<claim-text>wherein said graphic system is further provided with an address converter for converting the display data of linear address format corresponding to the address in which the pixel data arranged in the line direction to the right end from the left end of the display area on the access route to said memory from said CPU into the data of tile address format through the address conversion. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A graphic system according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein said address converter is provided with a setting register which is capable of setting execution or non-execution of address conversion of said address converter. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A graphic system according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein said address converter is capable of executing the address conversion with a plurality of conversion systems, the conversion system to be adapted can be changed on the basis of the predetermined conditions, and said predetermined condition can be changed by the setting. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A graphic system according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein said address converter is structured to convert said linear address format to said tile address format by mutual replacement of the values of two bit ranges among the address of the display data. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A graphic system according to <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein a communication means which enables reception of data is provided, the display data of the linear address format received via said communication means is converted to the display data of tile address format and is then developed on said memory and the video signal based on said display data is outputted by said display section.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030001853A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030001853A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030001853A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030001853A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030001853A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030001853A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030001853A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030001853A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030001853A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030001853A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030001853A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030001853A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
