<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005284A1-20030102-D00000.TIF SYSTEM "US20030005284A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005284A1-20030102-D00001.TIF SYSTEM "US20030005284A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005284A1-20030102-D00002.TIF SYSTEM "US20030005284A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005284A1-20030102-D00003.TIF SYSTEM "US20030005284A1-20030102-D00003.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005284</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10181564</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020718</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>100 01 855.6</doc-number>
</priority-application-number>
<filing-date>20000118</filing-date>
<country-code>DE</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L009/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>713</class>
<subclass>152000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>713</class>
<subclass>170000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Method, system for transmitting data from a transmitter to a receiver and transmitter or receiver</title-of-invention>
</technical-information>
<inventors>
<first-named-inventor>
<name>
<given-name>Martin</given-name>
<family-name>Euchner</family-name>
</name>
<residence>
<residence-non-us>
<city>Muenchen</city>
<country-code>DE</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>STAAS &amp; HALSEY LLP</name-1>
<name-2></name-2>
<address>
<address-1>700 11TH STREET, NW</address-1>
<address-2>SUITE 500</address-2>
<city>WASHINGTON</city>
<state>DC</state>
<postalcode>20001</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
<international-conventions>
<pct-application>
<document-id>
<doc-number>PCT/DE01/00021</doc-number>
<document-date>20010105</document-date>
<country-code>WO</country-code>
</document-id>
</pct-application>
</international-conventions>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A method and system for transmitting data from a transmitter to a receiver, wherein data from a transmitter is extended to include authentication data on the application level by means an application protocol. Said authentication data is used by the receiver to determine whether the transmitter is known by the receiver. If the transmitter is known by the receiver, the data is accepted. If not, the data is rejected. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> The invention relates to a method and a system and for transmitting data from a transmitter to a receiver, and to the transmitter and the receiver therefor. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The transmission of data is known, by way of example, on the basis of the OSI reference model &lsqb;1&rsqb;. The OSI reference model (OSI model for short) from the International Standards Organization (ISO) comprises seven layers, each of which has a different functionality (in terms of abstraction). In the OSI model, layer 1 corresponds to a physical layer, where data and messages are transmitted from the transmitter to the receiver using a physical protocol. In layer 2, a data link layer is provided, and a data link protocol is used for transmission from layer 2 of the transmitter to layer 2 of the receiver. In a similar manner, layer 3, a network layer, uses a network protocol between transmitter and receiver, and layer 4, a transport layer, uses a transport protocol. In the OSI model, layer 5 corresponds to a session layer using a session protocol, layer 6 corresponds to a presentation layer using a presentation protocol, and layer 7 corresponds to an application layer using an application protocol. In practice, many applications do not always permit exact nomination of strict boundaries specifically between the upper protocol layers, particularly layers 5 to 7. By way of example, within the context of Internet telephony, i.e. use of the telephone service using the medium of the Internet, the three layers above the transport layer 4 combine to form an &ldquo;application layer&rdquo; for which, in a similar way to in the implementation above, an &ldquo;application protocol&rdquo; is used. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> A special feature of the OSI model and hence of all communications models following the OSI model is that, as a result of the division into layers, in each layer the bottom layers perform functions fully transparently with regard to the currently considered layer and provide this upper layer with a service which is determined by all of the functionalities of the bottom layers. In this context, &ldquo;transparent&rdquo; means that currently considered layer does not need to concern itself with the functionalities of the bottom layers. In the case discussed here, the application protocol can thus be used between an application layer transmitter and an application layer receiver. This may cover numerous services, for example for switching, for protection or for actual transmission via a physical channel; these need no longer be a concern from the point of view of the application protocol, particularly as a user of this protocol. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Similarly with respect to this consideration, the individual layers have &ldquo;protocol data units&rdquo; (PDUs) between them which can be designed specifically for each protocol of the respective layer. Thus, for each layer, the respective protocol can comprise a dedicated header containing administrative information for the respective layer&apos;s protocol, with this header also being able to be seen and used only by the respective protocol&apos;s layer in accordance with the OSI model. Details about the design of the OSI model can be found in numerous pieces of literature, inter alia in those cited above. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> When referring to application layer below, this denotes the layers above the transport layer (layers above <highlight><bold>4</bold></highlight>). The application protocol also denotes the protocol for communication between a transmitter application layer situated above the transport layer and a receiver application layer situated above the transport layer. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> A message authentication code (MAC) is known generally and denotes a cryptographic checksum which is intended to be used to identify an alteration in a message or in data (see &lsqb;2&rsqb;, pp.61ff.). </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> A one-way hash function is known from &lsqb;2&rsqb;, pp. 68ff., for example. Such a one-way hash function cannot be used to calculate the correct input value for a given function value. Another feature is the absence of collision, i.e. it must not be possible to use the one-way hash function to obtain the same output value for two different input values. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> One difference between the hash code and the MAC is that the MAC requires a secret key in order to calculate it, whereas the hash function can be independent of a key and can be known publicly. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> In addition, an asymmetric cryptographic method (also: public key method) is known, e.g. from &lsqb;2&rsqb;, pp. 73 ff. Each party involved in an asymmetric cryptographic method receives two keys, a public key and a secret key. In principle, the secret key can be derived from the public key, with this task needing to be as complex as possible. The asymmetric method can also be used to produce an electronic signature (authentication) and/or to encrypt the content of a message (using the receiver&apos;s public key) such that only the receiver can decrypt the message again using its secret key. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Finally, there is also a symmetric method, which requires a (secret) key used both for encryption and decryption. An example of a symmetric encryption method is the DES algorithm. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> A communications system is subject to a multiplicity of possible attacks which can target, inter alia, the content of the messages interchanged in the communications system or the availability of the communications system. Taking the example of Internet telephony, then it is firstly important for the content of the telephone conversation not to be able to be monitored by an unauthorized third party, and secondly it is also necessary for the third party not to be able to initiate countless calls, and hence for him not to interfere with the receiver and unnecessarily encumber the communications system. Such attacks are also called denial-of-service attacks. Possible examples of such attacks are mass data or mass messages which are automatically generated and sent to one or more receivers, where they significantly encumber availability and performance. In the Internet telephony example, it is at least unwanted for an Internet telephone to ring incessantly and hence not only to load the network unnecessarily but also to distract the receiver&apos;s attention. It is likewise perceived to be disruptive if an attacker interferes with the flow of communication between transmitter and receiver by sending unauthorized voice data. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> To fend off attacks on a private communications network, &ldquo;firewalls&rdquo; are often used which ensure, in particular, that the private communications network is separated from public networks. However, it is a simple matter for an attacker to send his meaningless (mass) data to addressees within the private network as well, that is to say behind the firewall. There, these data are decoded and possibly reproduced. By this means, the effect achieved by the attacker is that, by way of example, the reproduction of such meaningless data produces nothing but annoying audio interference or noise and hence restricts the bandwidth and availability of the private network. In the extreme case, part or all of the private communications network can even crash. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> In addition, an RTP protocol for transmitting media data (&ldquo;payload&rdquo;), i.e. video or audio data, is known &lsqb;3&rsqb;. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> One approach to holding off unwanted data is provided by the IPSEC protocol &lsqb;5&rsqb; and &lsqb;6&rsqb;. In this case, data packets of the Internet protocol (IP data packets) can be encapsulated and can be protected in terms of confidentiality and/or integrity (implicit sender authentication). In addition, the IPSEC protocol affords a key management method using a &ldquo;cookie&rdquo; mechanism (see &lsqb;4&rsqb;), which can be used to fend off the mass data attacks (denial-of-service attacks) discussed above during the key management phase. The cookie mechanism involves linking fast one-way hash functions (e.g. SHA-1), random numbers and IP addresses to one another. However, the first &ldquo;cookie&rdquo; transmitted from the transmitter to the receiver is not protected, which results in a security gap. In addition, the IPSEC cookie method is not suitable for ensuring protection against such unwanted mass data on the application layer (for the application protocol) under real-time conditions as well. However, the OSI layer structure means that a drawback for IPSEC is, among other things, that it is not possible to link IPSEC to the security functions of an application layer in this manner. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The object of the invention is to transmit data from a transmitter to a receiver, with the receiver ensuring that the data are not unwanted data arising from a denial-of-service attack, for example. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> This object is achieved in accordance with the features of the independent patent claims. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> First, the object is achieved by specifying a method for transmitting data from a transmitter to a receiver, in which the transmitter extends the data by authentication data using an application protocol on the application layer. The authentication data are used by the receiver to ascertain whether it knows the transmitter. If the receiver knows the transmitter, the data are accepted, otherwise the data are rejected. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> As stated above, depending on the protocol structure (cf. OSI model), data in each protocol layer have their own transparency with regard to this protocol layer, i.e. the services in protocol layers beneath are performed (without being seen by the current protocol layer). Advantageously, data packets on the application layer, in particular, are free of the administrative data associated with layers beneath, i.e. the data packets in the application layer have, besides the administrative information for the application layer, only the data which are actually to be communicated. Accordingly, authentication in the application layer is particularly advantageous, because the data packets themselves, in contrast to layers beneath, are of significantly reduced size. This small size has an advantageous effect on real time and availability of the entire communications system. If the receiver knows the transmitter, i.e. particularly if the transmitter is successfully authenticated with respect to the receiver, the message from the transmitter is accepted, in particular the data are stored. Otherwise, i.e. if the receiver does not know the transmitter, the data are rejected, i.e. buffering does not take place. This is particularly advantageous if such a decision is made automatically. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> In particular, available security functions and keys on the application layer can advantageously be allocated to the individual application users. This can advantageously be linked to the application data in a filter function outlined above. Special functions at application level, such as picture and/or sound compression methods, can advantageously be combined with security functions in the application layer, which makes it possible to increase the end systems&apos; performance and reduces the implementation complexity; this also applies to the aforementioned filtering mechanism. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The described authentication mechanism in the application layer allows transmitters and receivers which know one another to be separated from transmitters which are not known by the receiver and from which the receiver does not accept any messages either. This allows an attack of the type described in the introduction (&ldquo;denial-of-service&rdquo; attack) to be effectively prevented, i.e. unwanted mass data are actually rejected when arriving at the transmitter. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> In this context, special note will be made that the receiver in no way has to be an end receiver or addressee. Instead, the receiver itself can be a switching entity, e.g. a switching node or a firewall with switching functionality, and hence can act with regard to authentication of the transmitter for the end receiver. Thus, in relation to the &ldquo;firewall&rdquo; example, it is possible to prevent superfluous network load from being produced by rejecting the unwanted mass data before they even enter the private communications network. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> In this scenario (authentication in a switching entity), it is advantageous, in particular, if the authentication data are generated using an asymmetric method, since it is also possible for the switching entity, in the example the firewall, to ascertain from whom the data are coming, without the decryption secret already needing to be known in the firewall (as in the case of symmetric encryption) for this purpose. The firewall rejects unwanted mass data if it does not know the transmitter; in the other case, that is to say if the switching entity knows the transmitter and the data are by no means unwanted, these data are forwarded to the receiver after the transmitter has been verified. The receiver can still use its private key to decrypt the data and process them further locally (display them, store them, etc.) irrespective of the check on the data&apos;s origin, which has already taken place in the firewall. It will be stressed once again that the decryption (in terms of confidentiality) of the data is performed by the addressee using its private key in the asymmetric method described, whereas the origin of the message (which is determined for this addressee) can also be checked in the switching entity using the public key of the sender&mdash;irrespective of the content of the message. Thus, an upstream filter functionality can be provided successfully by the switching entity. This results in a clear functional division between the filter function and the application function; the complexity of the terminals can be simplified as a result and the network traffic in the private communications network can be reduced. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> One development is that the data are transmitted on a packet-oriented basis. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Another development is that the authentication data are determined by virtue of at least part of a protocol data unit, available on the application layer, of the application protocol being encrypted by the transmitter using a secret. In this case, the secret between the transmitter and the receiver can be a key for symmetric encryption or a key pair for asymmetric encryption (public key method, see description with switching entity, for example). Decryption of the secret determines, particularly at the receiver end, whether or not the receiver knows the transmitter. This is advantageous if data encryption is available on the application level anyway and can also be used for this purpose. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> One refinement is that the authentication data are determined using part of the protocol data unit available on the application layer, in particular a sequence number and/or a timestamp &lsqb;lacuna&rsqb; comprises &lsqb;lacuna&rsqb;. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> In particular, one development is that a one-way hash function is used for protection. Protection can also be effected using a message authentication code (MAC), with a key which is known only to the transmitter and to the receiver additionally being necessary. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Another refinement is that, before the data are transmitted from the transmitter to the receiver, authentication is carried out between the transmitter and the receiver. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Another refinement is that the described method is used in packet-switching telephone services, particularly within the context of Internet telephony. Alternatively, the method can be used in switching nodes and switching installations. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The object is achieved in another way by specifying a system for transmitting data, in which a transmitter and a receiver are provided, the transmitter extending the data by authentication data using an application protocol on the application layer. The receiver uses the authentication data to check whether it knows the transmitter. If the receiver knows the transmitter, the data from the transmitter are used, otherwise the receiver rejects the data from the transmitter which is unknown to it. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> The object is also achieved by specifying a transmitter for sending data to a receiver, which extends the data by authentication data using an application protocol on the application layer and sends them to the receiver. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> Finally, the object is achieved by specifying a receiver for receiving data from a transmitter designed on the basis of the statements above, in particular, the receiver using authentication data within the application protocol on the application layer to determine whether it knows the transmitter. If it knows the transmitter, it uses the data, otherwise the receiver rejects the data. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> The system or the transmitter and the receiver are particularly suitable for carrying out the inventive method or one of its developments explained above.</paragraph>
</summary-of-invention>
<brief-description-of-drawings>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> Exemplary embodiments are illustrated and explained below with reference to the drawings, in which </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a protocol architecture (protocol stack) for a communications system in the layer model; </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows an application layer with possible protocols; </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows a flowchart between the transmitter and the receiver for transmitting data from the transmitter to the receiver; </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows a protocol data unit (PDU) of the application protocol (layer &gt;5) with authentication data.</paragraph>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> shows a protocol architecture (protocol stack) for a communications system in the layer model, following the OSI model mentioned in the introduction. To this end, it shows a transmitter <highlight><bold>104</bold></highlight> and a receiver <highlight><bold>105</bold></highlight> which interchange messages via a physical connection <highlight><bold>103</bold></highlight>. Both the transmitter <highlight><bold>104</bold></highlight> and the receiver <highlight><bold>105</bold></highlight> have the same protocol architecture: layer 1 <highlight><bold>110</bold></highlight> and <highlight><bold>111</bold></highlight> represents a physical layer, layer 2 <highlight><bold>109</bold></highlight>, <highlight><bold>112</bold></highlight> represents a data link layer, layer 3 <highlight><bold>108</bold></highlight>, <highlight><bold>113</bold></highlight> represents a network layer, layer 4 <highlight><bold>107</bold></highlight>, <highlight><bold>114</bold></highlight> represents a transport layer and layer 5 <highlight><bold>101</bold></highlight> <highlight><bold>106</bold></highlight> represents an application layer. Between the individual layers there is a respective dedicated protocol from a transmitter <highlight><bold>104</bold></highlight> to a receiver <highlight><bold>105</bold></highlight>; for the application layer <highlight><bold>101</bold></highlight> or <highlight><bold>106</bold></highlight>, this is the application protocol <highlight><bold>102</bold></highlight>, for example. From the point of view of layer 5 <highlight><bold>101</bold></highlight>, <highlight><bold>106</bold></highlight>, protocol data units having the format prescribed in the application protocol <highlight><bold>102</bold></highlight> are transmitted from the transmitter <highlight><bold>104</bold></highlight> to the receiver <highlight><bold>105</bold></highlight>. The layers situated below the application layer represent functionalities which are provided transparently for the application layer. On the basis of the OSI model, the functionalities have expediently been chosen to be largely independent of one another. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> shows an application layer with possible protocols, based on an application concerning the transmission of media data (audio and video data). Thus, <highlight><bold>101</bold></highlight> and <highlight><bold>106</bold></highlight> represent the application layer (layer 5) already known from <cross-reference target="DRAWINGS">FIG. 1</cross-reference> for the transmitter <highlight><bold>104</bold></highlight> and the receiver <highlight><bold>105</bold></highlight>. This application layer is in turn divided into a plurality of sublayers. Thus, directly above the layer 4 is the real time transport protocol (RTP) <highlight><bold>201</bold></highlight>. This protocol allows voice and/or picture data to be transmitted in real time from one to possibly a plurality of points (addressees). A layer <highlight><bold>206</bold></highlight> contains a security application which compiles security functions of the application layer; associated security protocols provide for services such as </paragraph>
<paragraph id="P-0040" lvl="2"><number>&lsqb;0040&rsqb;</number> User authentication, </paragraph>
<paragraph id="P-0041" lvl="2"><number>&lsqb;0041&rsqb;</number> Access control </paragraph>
<paragraph id="P-0042" lvl="2"><number>&lsqb;0042&rsqb;</number> Confidentiality, </paragraph>
<paragraph id="P-0043" lvl="2"><number>&lsqb;0043&rsqb;</number> Integrity </paragraph>
<paragraph id="P-0044" lvl="2"><number>&lsqb;0044&rsqb;</number> Binding nature of the application data, and </paragraph>
<paragraph id="P-0045" lvl="2"><number>&lsqb;0045&rsqb;</number> Accounting. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> Depending on the instance of application, audio data <highlight><bold>203</bold></highlight> and/or video data <highlight><bold>202</bold></highlight> are used. For both alternatives, there are different compression standards, a few of which are shown by way of example in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. For the audio data, these are the standards G.711, G.722, G.723.1 and G.729. For the video data, these are the two picture compression standards H.261 and H.263. In the next abstraction stage (similarly with respect to the OSI model) come the different possibilities for an application of audio or video data after compression and decompression (see block <highlight><bold>204</bold></highlight>). One more abstraction level above, there is, by way of example, a user interface <highlight><bold>205</bold></highlight>, which fully transparently provides a user with the services beneath which have just been described. By way of example, a user, taking into account both the audio and the video data, can thus make use of video telephony, e.g. over the Internet, without specifically needing to concern himself with any details of the services provided by the layers beneath. He thus uses the video telephony service, visible to him, over the Internet transparently. In this context, various alternative implementation forms can be situated below his service. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows a flowchart between the transmitter and receiver for transmitting data from the transmitter to the receiver <highlight><bold>307</bold></highlight>. In a step <highlight><bold>301</bold></highlight>, authentication data are produced on the application layer, and the protocol data unit (PDU) relevant to the application protocol is appended. In accordance with the arrangements of the application protocol, the data, including the authentication data, are transmitted to the receiver <highlight><bold>307</bold></highlight> (see connection <highlight><bold>302</bold></highlight>). This is done using the functionalities or services available under the application protocol. In a block <highlight><bold>303</bold></highlight>, the authentication data are checked in the receiver <highlight><bold>307</bold></highlight> and there is a test (in a block <highlight><bold>304</bold></highlight>) to determine whether the transmitter <highlight><bold>308</bold></highlight> is known to the receiver <highlight><bold>307</bold></highlight>. If this is not the case, the procedure branches to a block <highlight><bold>305</bold></highlight> and the data are rejected. If the transmitter <highlight><bold>308</bold></highlight> is known to the receiver <highlight><bold>307</bold></highlight>, the procedure branches to a block <highlight><bold>306</bold></highlight> and the data are processed further. The authentication between transmitter and receiver was successful, and the transmitted data are not unwanted mass data. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> shows a protocol data unit (PDU) of the application protocol with authentication data. What is shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a protocol data unit (PDU) of the real time transport protocol (RTP, see <highlight><bold>201</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>) <highlight><bold>401</bold></highlight>. Such an RTP packet <highlight><bold>401</bold></highlight> comprises an RTP header <highlight><bold>406</bold></highlight>, encrypted media data <highlight><bold>404</bold></highlight> and authentication data <highlight><bold>405</bold></highlight>. The RTP header <highlight><bold>406</bold></highlight> comprises, inter alia, a sequence number <highlight><bold>402</bold></highlight> and a timestamp <highlight><bold>403</bold></highlight>. Both the transmitter and the receiver know a shared secret K, in this case indicated as a key, which is used to generate a message authentication code (MAC), on the basis of the sequence number <highlight><bold>402</bold></highlight> and the timestamp <highlight><bold>403</bold></highlight> (see field <highlight><bold>405</bold></highlight>). An advantage with respect to encryption using a DES algorithm, for example, is a field length of 64 bits. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> As already described, such a packet sent by the transmitter is authenticated at the receiver end such that (in relation to the application layer) a message authentication code is generated by field <highlight><bold>402</bold></highlight> (sequence number) and field <highlight><bold>403</bold></highlight> (timestamp) on the basis of the key (K) known to the receiver. If this message authentication code is the same as the field <highlight><bold>405</bold></highlight>, then the arriving RTP packet <highlight><bold>401</bold></highlight> is a data packet coming from a known transmitter, and the data are processed, for example displayed or stored. In the other case, unauthenticated data are involved, the transmitter is unknown to the receiver and the entire RTP packet is rejected. </paragraph>
<section>
<heading lvl="1">LITERATURE REFERENCES </heading>
<paragraph id="P-0050" lvl="1"><number>&lsqb;0050&rsqb;</number> &lsqb;1&rsqb; Andrew S. Tanenbaum: Computer-Netzwerke; &lsqb;Computer networks&rsqb; Wolfram&apos;s Fachverlag; Attenkirchen 1992; ISBN 3-925328-79-3; pages 17-32. </paragraph>
<paragraph id="P-0051" lvl="1"><number>&lsqb;0051&rsqb;</number> &lsqb;2&rsqb; Christoph Ruland: Informationssicherheit in Datennetzen; &lsqb;Information security in data networks&rsqb; DATACOM-Verlag; Bergheim 1993; ISBN 3-89238-081-3; pages 61-63 and 68-79. </paragraph>
<paragraph id="P-0052" lvl="1"><number>&lsqb;0052&rsqb;</number> &lsqb;3&rsqb; &lsqb;RFC1889&rsqb; H. Schulzrinne: RTP: A Transport Protocol for Real-Time Applications; Internet Engineering Task Force, 1996 </paragraph>
<paragraph id="P-0053" lvl="1"><number>&lsqb;0053&rsqb;</number> &lsqb;4&rsqb; &lsqb;RFC2409&rsqb; The Internet Key Exchange (IKE), D. Harkins, D. Carrel,; Internet Engineering Task Force, 1998. </paragraph>
<paragraph id="P-0054" lvl="1"><number>&lsqb;0054&rsqb;</number> &lsqb;5&rsqb; &lsqb;RFC2402&rsqb; IP Authentication Header, S. Kent, R. Atkinson; Internet Engineering Task Force, 1998. </paragraph>
<paragraph id="P-0055" lvl="1"><number>&lsqb;0055&rsqb;</number> &lsqb;6&rsqb; RFC2406&rsqb; IP Encapsulating Security Payload (ESP), S. Kent, R. Atkinson; Internet Engineering Task Force, 1998. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for transmitting data from a transmitter to a receiver, 
<claim-text>a) in which the transmitter extends the data by authentication data using an application protocol on the application layer; </claim-text>
<claim-text>b) in which the authentication data are used by the receiver to ascertain whether it knows the transmitter; </claim-text>
<claim-text>c) in which, if the receiver knows the transmitter, the data are accepted, otherwise the data are rejected. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, 
<claim-text>in which the data are transmitted on a packet-oriented basis. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method as claimed in one of the preceding claims, 
<claim-text>in which the authentication data are determined by virtue of at least part of a protocol data unit, available on the application layer, of the application protocol being linked to a secret by the transmitter. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method as claimed in <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, 
<claim-text>in which the linking to the secret is carried out by virtue of 
<claim-text>a) cryptographical linking to at least one further parameter, particularly by virtue of an encryption operation and/or </claim-text>
<claim-text>b) a cryptographic checksum and key information. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method as claimed in one of the preceding claims, 
<claim-text>in which verification at the receiver end determines whether or not the receiver knows the transmitter. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method as claimed in <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, 
<claim-text>in which the verification is carried out in the form of cryptographic verification using further parameters, particularly a decryption operation and/or a cryptographic checksum check. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method as claimed in one of <dependent-claim-reference depends_on="CLM-00003">claims 3</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00006">6</dependent-claim-reference>, 
<claim-text>in which the secret between the transmitter and the receiver is a key for symmetric encryption or a key pair for asymmetric encryption. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method as claimed in one of <dependent-claim-reference depends_on="CLM-00003">claims 3</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00007">7</dependent-claim-reference>, 
<claim-text>in which the part of the protocol data unit available on the application layer comprises a sequence number and/or a timestamp. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method as claimed in one of <dependent-claim-reference depends_on="CLM-00003">claims 3</dependent-claim-reference> to <dependent-claim-reference depends_on="CLM-00008">8</dependent-claim-reference>, 
<claim-text>in which the encryption is performed using a one-way hash function or a message authentication code with a key which is known only to the receiver and to the transmitter which is to be authenticated. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method as claimed in one of the preceding claims, 
<claim-text>in which, before the data are transmitted from the transmitter to the receiver, authentication is carried out between the transmitter and the receiver. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method as claimed in one of the preceding claims for use in packet-switched telephone services. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, 
<claim-text>used in Internet telephony. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The method as claimed in one of the preceding claims, 
<claim-text>used in switching nodes and switching installations. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A system for transmitting data, in which a transmitter and a receiver are provided 
<claim-text>a) in which the transmitter extends the data by authentication data using an application protocol on the application layer; </claim-text>
<claim-text>b) in which the receiver uses the authentication data to determine whether it knows the transmitter; </claim-text>
<claim-text>c) in which, if the receiver knows the transmitter, the receiver uses the data, otherwise it rejects the data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A transmitter for sending data to a receiver, which extends the data by authentication data using an application protocol on the application layer and sends them to the receiver. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A receiver for receiving data from a transmitter, particularly as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, 
<claim-text>a) which uses authentication data within the application protocol on the application layer to determine whether it knows the transmitter; </claim-text>
<claim-text>b) which, if it knows the transmitter, uses the data, otherwise it rejects the data.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>3</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005284A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005284A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005284A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005284A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
