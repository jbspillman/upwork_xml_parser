<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002739A1-20030102-D00000.TIF SYSTEM "US20030002739A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002739A1-20030102-D00001.TIF SYSTEM "US20030002739A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002739A1-20030102-D00002.TIF SYSTEM "US20030002739A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002739A1-20030102-D00003.TIF SYSTEM "US20030002739A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002739A1-20030102-D00004.TIF SYSTEM "US20030002739A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002739A1-20030102-D00005.TIF SYSTEM "US20030002739A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002739A1-20030102-D00006.TIF SYSTEM "US20030002739A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002739A1-20030102-D00007.TIF SYSTEM "US20030002739A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002739A1-20030102-D00008.TIF SYSTEM "US20030002739A1-20030102-D00008.TIF" NDATA TIF>
<!ENTITY US20030002739A1-20030102-D00009.TIF SYSTEM "US20030002739A1-20030102-D00009.TIF" NDATA TIF>
<!ENTITY US20030002739A1-20030102-D00010.TIF SYSTEM "US20030002739A1-20030102-D00010.TIF" NDATA TIF>
<!ENTITY US20030002739A1-20030102-D00011.TIF SYSTEM "US20030002739A1-20030102-D00011.TIF" NDATA TIF>
<!ENTITY US20030002739A1-20030102-D00012.TIF SYSTEM "US20030002739A1-20030102-D00012.TIF" NDATA TIF>
<!ENTITY US20030002739A1-20030102-D00013.TIF SYSTEM "US20030002739A1-20030102-D00013.TIF" NDATA TIF>
<!ENTITY US20030002739A1-20030102-D00014.TIF SYSTEM "US20030002739A1-20030102-D00014.TIF" NDATA TIF>
<!ENTITY US20030002739A1-20030102-D00015.TIF SYSTEM "US20030002739A1-20030102-D00015.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002739</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10187924</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020701</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06K009/00</ipc>
</classification-ipc-primary>
<classification-ipc-secondary>
<ipc>G06T005/00</ipc>
</classification-ipc-secondary>
<classification-ipc-secondary>
<ipc>G06K015/02</ipc>
</classification-ipc-secondary>
<classification-ipc-secondary>
<ipc>G06K009/64</ipc>
</classification-ipc-secondary>
<classification-ipc-secondary>
<ipc>H04N001/409</ipc>
</classification-ipc-secondary>
<classification-ipc-secondary>
<ipc>G06K009/68</ipc>
</classification-ipc-secondary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>382</class>
<subclass>216000</subclass>
</uspc>
</classification-us-primary>
<classification-us-secondary>
<uspc>
<class>358</class>
<subclass>001200</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>358</class>
<subclass>003230</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>358</class>
<subclass>003270</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>382</class>
<subclass>296000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>382</class>
<subclass>218000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>382</class>
<subclass>299000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>382</class>
<subclass>254000</subclass>
</uspc>
</classification-us-secondary>
<classification-us-secondary>
<uspc>
<class>382</class>
<subclass>260000</subclass>
</uspc>
</classification-us-secondary>
</classification-us>
<title-of-invention>Method and apparatus for using rotatable templates within look-up tables to enhance image reproduction</title-of-invention>
</technical-information>
<continuity-data>
<division-of>
<parent-child>
<child>
<document-id>
<doc-number>10187924</doc-number>
<kind-code>A1</kind-code>
<document-date>20020701</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09221285</doc-number>
<document-date>19981223</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6438273</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</division-of>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Robert</given-name>
<middle-name>P.</middle-name>
<family-name>Loce</family-name>
</name>
<residence>
<residence-us>
<city>Webster</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Jeffrey</given-name>
<middle-name>D.</middle-name>
<family-name>Kingsley</family-name>
</name>
<residence>
<residence-us>
<city>Williamson</city>
<state>NY</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<assignee>
<organization-name>Xerox Corporation</organization-name>
<assignee-type>02</assignee-type>
</assignee>
<correspondence-address>
<name-1>Patent Documentation Center</name-1>
<name-2>Xerox Corporation</name-2>
<address>
<address-1>Xerox Square, 20th Floor</address-1>
<address-2>100 Clinton Ave. S.</address-2>
<city>Rochester</city>
<state>NY</state>
<postalcode>14644</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The present invention is a method and apparatus for improving the appearance of electronic images, and more specifically, to the efficient use of template rotation within a template matching process to enhance such images. The invention reduces the number of entries that are stored in a look up table by eliminating identical patterns that differ only by the angle at which they are output. The appropriate templates are then rotated it by the required angle for output subsequent to their retrieval from the lookup table. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is a divisional of application Ser. No. 09/221,285, filed Dec. 23, 1998. </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This invention relates generally to a method and apparatus for improving the appearance of printed documents, and more particularly to the efficient use of template rotation within a template matching process for the enhancement of digital images. </paragraph>
<heading lvl="1">CROSS REFERENCE </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The following related applications are hereby incorporated by reference for their teachings: </paragraph>
<paragraph id="P-0004" lvl="2"><number>&lsqb;0004&rsqb;</number> &ldquo;Method and Apparatus for Modeling and Reconstructing Halftone Images&rdquo; by Cuciurean-Zapan et al., Ser. No. ______ (Attny. Docket No. D/98208), filed concurrently herewith; </paragraph>
<paragraph id="P-0005" lvl="2"><number>&lsqb;0005&rsqb;</number> &ldquo;Systems and Methods for Designing Image Processing Templates&rdquo; by Loce, Ser. No. ______ (Attny. Docket No. D/96390) entitled, filed concurrently herewith; </paragraph>
<paragraph id="P-0006" lvl="2"><number>&lsqb;0006&rsqb;</number> Pending U.S. patent application entitled &ldquo;Image Segmentation with Template Matching Filters,&rdquo; by Jodoin et al., Ser. No. 08/342,283, assigned to the assignee of the present invention. </paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> Information systems for handling numerous document and data formats are moving towards becoming open systems where different devices are tied to one another to provide solutions to customers&apos; needs. A key factor in such open systems is enabling an electronic document to be printed so that the customer does not perceive any difference between versions printed on different output devices. In order to achieve complete device-independence, efficient methods of accurately altering image resolution and enhancement are required to take advantage of the technology. Hence, raster conversion technology, where a bitmap created for a first output device is altered so as to be printable on a second output device, has become an important aspect of the open system technology. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> Another important aspect is the preservation of the investment in technologies, while improving printers and print appearances. A common example for this case is the storage of fonts, forms, etc. in the form of bitmaps at a specified resolution, say 300&times;300 spots per inch (spi). With improving print engines, output resolutions of 600&times;600 spi, 300&times;1200 spi and the like are possible. However, existing applications using, for example, 300&times;300 spi fonts have to be handled by these new output devices at a quality level that exceeds that of the 300&times;300 spi output devices. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The present invention is a method and apparatus for efficiently processing digital image data to produce enhanced output images. Generally speaking, the invention employs resolution enhancement filters in the form of templates in look-up tables or logic operations. The invention may be used in design and implementation processes of template matching applications available in the art. Such applications include, but are not limited to resolution enhancement, appearance tuning, appearance matching, conversion to gray-scale (e.g., halftone de-screening), image restoration, pattern detection and segmentation. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> Enhancement filters operate on image bitmaps to improve document appearance by converting from an original resolution to an output resolution of the printing or display device, at an integer multiple in each direction of the input resolution. The resulting image signals may then be used to drive devices at the output resolution without negatively impacting spatially sensitive features within the input image. In one embodiment, the present invention associates individual templates with multiple-bit per pixel, statistically generated look-up tables to reduce the number of look up tables that is required to improve the appearance of reproduced document images. The invention includes a technique for rotating templates about an axis, and using the original and flipped templates with a single multiple bit per pixel look up table to generate output signals that accurately represent the original image. The generated pixel image signals may then be used to drive output devices with higher fast-scan resolution or with output devices capable of printing multiple-bit per pixel output. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The present invention may be utilized to control a scanning beam where the beam varies in intensity and duration according to the pulses used to control it. For example, a laser beam may be used in a printer for selectively exposing areas on a photoreceptor. The latent electrostatic image formed on the photoreceptor by the beam exposure attracts developing toner, in proportion to the latent image charge level, to develop the image. As another example, a cathode ray tube uses an electron beam to scan a phosphorous screen. The electron beam may be varied in intensity and duration to accurately display information on the phosphor screen. In both examples, a pulse forming circuit responsive to the multiple-bit per pixel image signal may be used to generate video pulses to control the intensity and operation time of the respective beams. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> In the preferred embodiment, the present invention will be used to efficiently implement template matching filters. These template matching filters will be designed by any of a number of methods, including but not limited to calculations that are based on geometry, statistics and expert knowledge of specific pattern shapes. One important aspect of the present invention allows multiple template filters that are intended for different portions of a pixel enhancement to be reduced to a single (or reduced number of) filter which may then be applied using efficient symmetry determination as disclosed in the present invention. For instance, in converting an image from a resolution of 300 spi to 600 spi, a single template matching filter could be used at various symmetries and each symmetry would generate one pixel of the four high resolution image pixels that is substituted for each input pixel. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> In another aspect of the present invention, filtering may be applied to achieve a pixel that is not necessarily spatially divided into higher resolution sample. For example, such a filter may be used for activating or deactivating binary pixels in operations for enhancement operations such as thickening, thinning, or restoration. Yet another aspect of the present invention is use in converting binary pixels to gray-scale, as in the case of halftone de-screening, as well as in some forms of restoration and anti-aliasing. The present invention would efficiently implement multiple symmetries of a pattern as a single pattern within the template look-up table. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> Still another aspect of the present invention may be used to enhance the design of template matching filters. The invention allows for more accurate statistical design by pooling data acquired that has been acquired for multiple symmetries of a pattern into the statistics of a single (or reduced number) of representative patterns. Those skilled in the art will recognize that the invention may be adapted for use with other filter design methods. For example, one member of a symmetry may be designed and the other templates may be derived from that designed pattern. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> Previously, various methods and apparatus have been used to improve the quality of a reproduced image by using a template matching scheme in conjunction with a look up table. The following disclosures may be relevant to aspects of the invention: </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> U.S. Pat. No. 4,437,122 to Walsh et al. teaches an improved method of converting low resolution images into images of higher resolution for printing so as to simultaneously increase density and smooth character edges. In a CRT display or hardcopy output apparatus, the invention is accomplished by converting an original pixel into a higher resolution 3&times;3 enhanced representation. The status of each of the nine elements in the enhanced representation is determined as a result of an examination of the neighboring pixels of the original pixel. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> U.S. Pat. No. 4,847,641 and U.S. Pat. No. 5,005,139 to Tung disclose print enhancement circuitry for a laser beam printer. The bit map of a region of the image to be output is compared to a number of patterns or templates. When a match is detected, a section of the bitmap that was matched is replaced with a unique bitmap section designed to compensate for errors. The replacement bitmap section may include predetermined shifting of some dot positions to compensate for the error in the original bitmap section. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> U.S. Pat. No. 4,933,689 to Yoknis describes a method for enhancing a displayed image in a laser exposed dot matrix format to produce softened edge contours. Using three pulses, a central pulse plus leading and trailing enhancement pulses that are separated therefrom. The purpose of the leading and trailing pulses is to create a blurred or grayed region at the leading and trailing edges of each associated character. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> U.S. Pat. No. 5,237,646 to Bunce discloses a method for enhancing reproduction of pixel images includes the steps of: storing a raster scan bit map of an image; selecting an input window from the bit map image that includes a plurality of row segments of bits representing pixels, the input window having a center pixel bit; comparing a subset of bits in the input window (that includes the center pixel bit) with a plurality of prediction bit subsets, each prediction subset represented in a plurality of rotation orientations, and upon finding a match with one of the prediction bit subsets, rotating the input window to the degree and direction indicated by a command associated with a matching prediction subset (if any); comparing the rotated input window with a limited set of sample windows to determine a match of certain bit states within the rotated input window with certain bits of a stored sample window; and upon determining that such a match exists, substituting an enhanced pixel representation for the center pixel bit of the input window. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> U.S. Pat. No. 5,383,036 to Mailloux et al. discloses a method for enhancing the contour fidelity of printed images of two or more colors, which includes obtaining a digital representation of the color image and finding color separations of each color. Each color separation is enhanced by a single set of inverse symmetrical templates, the set including templates in which the second template is always the inverse of the first, and the third and fourth templates are always 180 degree rotations of the first two. The resulting smoothed color separations are recombined into an enhanced image without separation error. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> U.S. Pat. No. 5,387,985 to Loce et al. discloses a method and apparatus for converting the resolution of bitmap images, and more specifically, to the use of a template matching process to alter the resolution of digital images for printing or similar methods of rendition. The present invention uses statistically generated templates, implemented using look-up tables, to improve document appearance upon output by converting from an original or input spatial resolution to an output spatial resolution that is device dependent, and where there is a non-integer relationship between the input and output resolutions. The resulting image signals may then be utilized to control a scanning beam where the beam varies in intensity and duration according to the pulses used to control it. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> U.S. Pat. No. 5,579,445 to Loce et al discloses a method and apparatus for automating the design of morphological or template-based filters for print quality enhancement. A plurality of different phase, but same resolution, subsampled images are generated from training documents. Statistical data derived therefrom is then employed in an automated process to generate filters. The filters may be used for resolution enhancement and/or conversion of bitmap images. Furthermore, the statistical data is used to produce filters that are intended to not only optimize image structure, but image density as well. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> U.S. Pat. No. 5,696,845 to Loce et al. discloses a method and apparatus for improving the appearance of printed documents, and more specifically, to the use of a template matching process to enhance the fast-scan resolution of digital images while maintaining raster resolution for printing. The invention uses multiple-bit per pixel, statistically generated templates, implemented using look-up tables, to improve document appearance by converting from a single-bit per pixel to N-bits per pixel, while preserving raster resolution of the printed output. The resulting N-bit per pixel image signals may be utilized to control a scanning beam where the beam varies in intensity and duration according to the pulses used to control it. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> A number of the previously described patents and publications are summarized in Torrey Pines Research, <highlight><italic>Behind Hewlett</italic></highlight>-<highlight><italic>Packard&apos;s Patent on Resolution Enhancement&trade; Technology</italic></highlight>, (Becky Colgan ed., BIS CAP International, 1990) pp. 1-60, including concepts associated with resolution enhancement. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Robert P. Loce et al. in <highlight><italic>Facilitation of Optimal Binary Morphological Filter Design via Structuring Element Libraries and Design Constraints</italic></highlight>, Optical Engineering, Vol. 31, No. 5, May 1992, pp. 1008-1025, incorporated herein by reference, describes three approaches to reducing the computational burden associated with digital morphological filter design. Although the resulting filter is sub-optimal, imposition of the constraints in a suitable manner results in little loss of performance in return for design tractability. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <highlight><italic>Mathematical Morphology in Image Processing</italic></highlight>, pp. 43-90 (Edward R. Dougherty ed., Marcel Dekker 1992), hereby incorporated by reference, describes efficient design strategies for the optimal binary digital morphological filter. A sub-optimal design methodology is investigated for binary filters in order to facilitate a computationally manageable design. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Robert P. Loce and Edward R. Dougherty in <highlight><italic>Spatial Resolution Conversion Using Paired Increasing Operators</italic></highlight>, Enhancement and Restoration of Digital Documents, pp. 202-210, SPIE Optical Engineering Press, 1997, hereby incorporated by reference, discloses a paired-erosion-based-filter architecture for performing the general image mappings required for optimal spatial resolution conversion. One member of the pair is an antiextensive operator while the other is extensive. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> All of the above cited references are hereby incorporated by reference for their teachings. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> In accordance with the present invention, there is provided a method of processing digital image data to produce enhanced output images, which includes the steps of: selecting a target pixel location in the bitmap image; observing a set of pixels within a pixel observation window superimposed on the bitmap image, relative to the target pixel location; generating an index pointer as a function of the pixel set by rotating the pixel set about an angle in a multi-dimensional space; using the index pointer, looking-up a code that defines the characteristics of a signal that will be used to output the target pixel; and rotating the signal about the pixel set angle in a three dimensional space and outputting the rotated signal. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> In accordance with another aspect of the present invention, there is provided an electronic printing machine, which includes a raster exposure device; and an enhancement filter, connected to the raster exposure device, for performing pixel resolution enhancement on a bitmap image input thereto so as to produce a series digital signals to drive the raster exposure device, wherein the digital signals include a code that defines the characteristics of an output signal that will and an angle about which the output signal should be rotated in order to achieve pixel resolution enhancement. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> In accordance with yet another aspect of the present invention, there is provided a method of reducing a number of entries stored in a look up table, wherein the look up table entries are associated with multiple output signals, including the steps of examining the look up table entries and the output signals, and reducing a number of output signals that will be generated based upon similarities between the look up table entries and the output signals.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a digital printer embodiment employing the present invention; </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a flowchart illustrating the process steps necessary to accomplish image resolution enhancement in accordance with the present invention; </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> illustrates how a 3&times;3 pixel window is converted from 300 spi to 600 spi according to prior art methods. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> illustrates how a 3&times;3 pixel window is converted from 300 spi to 600 spi using template rotation as disclosed in the present invention. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> contains a detailed illustration which shows operation of a template matching filter that incorporates the present invention. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> shows the input image to which the filter of <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is applied and the output image that results therefrom. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a flowchart that describes generally the steps required to rotate templates according to an embodiment of the present invention. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 8 and 9</cross-reference> are a schematic block diagram of a pulse modulator according to an embodiment of the present invention; </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a schematic illustration of a Raster Output Scanner (ROS), illustrating a portion of the photosensitive image plane; </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 11 and 12</cross-reference> are block diagrams illustrating the various stages in the process used to design the resolution enhancement filters employed by the present invention; and </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> FIGS. <highlight><bold>13</bold></highlight>A-<highlight><bold>13</bold></highlight>D and <highlight><bold>14</bold></highlight>A-<highlight><bold>14</bold></highlight>H are illustrative examples of the possible pixel states within a resolution enhanced bitmap produced by the present invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> The present invention will be described in connection with a preferred embodiment, however, it will be understood that there is no intent to limit the invention to the embodiment described. On the contrary, the intent is to cover all alternatives, modifications, and equivalents as may be included within the spirit and scope of the invention as defined by the appended claims. </paragraph>
<section>
<heading lvl="1">DESCRIPTION OF THE PREFERRED EMBODIMENT </heading>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> For a general understanding of the present invention, reference is made to the drawings. In the drawings, like reference numerals have been used throughout to designate identical elements. The terms image signal, video data, and pixel are interchangeably used herein to describe discrete digital signals that represent the active (on) or inactive (off) state of an element within a digital image. In addition, shaded or cross-hatched portions of image bitmaps depicted herein are intended to represent black or active pixels (having a value of 1 in a binary representation) within the bitmaps. Such a representation is not intended to limit the present invention, but to simplify the description thereof. Accordingly, the present invention may be operated in the same manner by substituting white pixel states wherever black pixels are indicated, and vice versa. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a digital printer that illustrates a preferred embodiment of the present invention. As shown, a low resolution bitmap image <highlight><bold>10</bold></highlight> is presented to a digital printer <highlight><bold>12</bold></highlight> to produce printed output. Within the digital printer employing the present invention is enhancement filter <highlight><bold>14</bold></highlight> that transforms the input bitmap into an enhanced bitmap image <highlight><bold>16</bold></highlight>. The enhanced bitmap image is then passed to marking engine <highlight><bold>18</bold></highlight> for exposure and development, as will be described with respect to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, to produce enhanced output print <highlight><bold>20</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, in conjunction with <cross-reference target="DRAWINGS">FIGS. 3 and 4</cross-reference>, illustrates the operation of the image resolution enhancement filter represented by block <highlight><bold>14</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Beginning with step <highlight><bold>30</bold></highlight>, the low resolution bitmap image <highlight><bold>10</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is retrieved. Next, a target pixel position is identified within the input bitmap at step <highlight><bold>32</bold></highlight>. The target pixel position representing that pixel that is to be resolution enhanced by the following operations. At step <highlight><bold>34</bold></highlight>, the &ldquo;on&rdquo; or &ldquo;off&rdquo; states (i.e., a binary input image in the present embodiment) of a set of pixels surrounding or in close proximity to the target pixel are observed through, what is termed &ldquo;the pixel observation window.&rdquo; In a practical sense, the step of observing the pixel states is equivalent to retrieving the binary signal level for each pixel within the set of pixels. Moreover, the set of pixels is determined as a function of the design of the template-based filter as will be described with respect to <cross-reference target="DRAWINGS">FIGS. 6 and 7</cross-reference>. An example of the manner in which a template based filter may be designed is described in detail in U.S. Pat. No. 5,724,455 to Eschbach, the relevant portions thereof being hereby incorporated by reference for their teachings. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Having observed the pixel states in the observation window about the target pixel, step <highlight><bold>34</bold></highlight>, the states are used to generate an index pointer, for example a series of binary values stored in an address register, step <highlight><bold>36</bold></highlight>. Once generated, the index pointer may then be used to access a location in a memory or look-up table (LUT), step <highlight><bold>38</bold></highlight>. Most importantly, unlike template based filtering schemes in the prior art, present invention may operate successfully by accessing a template that is not an exact match to the pixel states in the observation window. Rather, the template matching operation is performed by examining multiple symmetries of a pattern. This allows for fewer templates to be provided to the image processing system, but allows image integrity to be maintained. </paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> The image processing system in which the present invention is implemented will include a database of input patterns or templates at resolution M that may be used to generate output pixel patterns at resolution N. The structure or arrangement of the output pixels is one that is determined from the template database entry and a designated angle of rotation. In the following discussion the term &ldquo;rotation&rdquo; refers to angular displacement about an x, y, or z axis in a typical Cartesian coordinate system as well as about any axis that lies in the xy, yz or xz plane. Those skilled in the art will appreciate that in any case, the angle of rotation may be equal to zero degrees. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> This approach has the advantage that only a small subset of all possible bitmap combinations of the input window will create a database entry, since the majority of possible bitmap combinations over a given window does not occur in standard documents. In manual systems, either all possible patterns have to be searched (e.g. 512 possible patterns for a 3&times;3 window, 2<highlight><superscript>25 </superscript></highlight>patterns for a 5&times;5 window, or 2<highlight><superscript>49 </superscript></highlight>patterns for a 7&times;7 window) or an expert guided reduction of the possible input patterns has to be performed. In prior art systems, a training technique is employed to design the templates to ensure that the templates in the database embody actual document instances to guide the input selection. However, many of these template matching methods require all of the templates in the database to be searched until an appropriate match is found. Other prior art template matching methods use hierarchical searching techniques, which enable a more efficient searching or indexing the template database. While implementing a hierarchical template matching scheme will typically eliminate the requirement of having to examine all templates in the database, efficient operation still requires a large number of templates to be provided. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> High quality enhancements are commonly achieved through the use of multiple parallel template matching filters or morphological filters. The templates for each filter are stored in a look-up-table (LUT), and multiple LUTs are used to create the multiple filters. However, documents typically contain highly symmetrical image patterns. The present invention takes advantage of this fact, and discloses a technique for rotating templates about an axis, and using each rotated template with a single LUT. While practicing the present invention still requires searching the template database in a manner such as those previously described (i.e. searching all templates in the database or implementing a hierarchical template matching scheme) and, the number of templates that must be provided is substantially reduced with the inclusion of the ability to rotate the available templates about an axis, thereby enabling the system to operate as though a larger set of templates is present. This template rotation dramatically reduces the amount of search space and storage memory that would otherwise be required. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> Turning to <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, an example of converting a 300 spot per inch (spi) input image to a 600 spi output image using a 3&times;3 window is provided. The 3&times;3 window of data is mapped through four LUTs to generate four pixels in the output image. These pixels will be centered about the location of the pixel in the original 3&times;3 window. The reference letters &ldquo;i.j&rdquo; refer to the sampling phase of the given output pixel. In the example provided, each pixel in the output image would be classified as belonging to one of the four sampling phases. The pair of numbers i.j refers to the pixel i in the scanline j (i.e. 2.1 refers to the second pixel in the first scanline). As before, templates that are stored in LUTs are designed using training techniques. For each LUT, the training is performed from the input image to its respective sampling phase of the output image (LUT<highlight><subscript>1.1 </subscript></highlight>is designed from joint statistics of the input image and the 1.1 output image pixels. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> Turning now to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the present invention discloses a template rotating technique and architecture that achieves the high quality of a multi LUT filter while only requiring the hardware memory and design effort of a single filter. Again by a &ldquo;template rotating technique&rdquo;, it is meant that templates are subjected to an angular displacement about an x, y, or z axis as well as any axis that lies in the xy, yz or xz plane in a typical Cartesian coordinate system. As indicated in the illustration, in the present invention a single LUT is designed using a method similar to that which could be used to design LUT<highlight><subscript>1.1</subscript></highlight>. The window of data is passed through the LUT to generate the 1.1 pixel, then the window is rotated about a vertical axis and passed through the same LUT to generate the 2.1 pixel. The widow is then rotated about a diagonal axis and passed through the LUT a third time to create the 2.2 pixel. Finally, the window is rotated about a horizontal axis and passed through the table a fourth time to generate pixel 1.2. It should be noted here that while rotation of the original has been described here in a stated order (i.e. original configuration, followed by vertical, diagonal and then horizontal) the invention does not require rotating the window exactly as described here. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> Successful image reproduction results are obtained when using the present invention because of the approximate mirror and rotational symmetry of pattern enhancement required for digital documents. In an ideal pair of digital documents at different spatial sample resolutions (i.e. 300 spi, 600 spi) for a given window about a target pixel, a pattern can be observed in the 300 spi image and would correspond to a desired group of four pixels in the output image. If a rotated version of the input pattern is observed, a rotated version of the output group typically occurs in the output high resolution image. Therefore a filter to perform operations such as resolution conversion could employ symmetry to store only one output pattern for a collection of symmetries of input patterns, and the appropriate signals are rotated or mirrored so that the filter output is set to the correct symmetry. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> An example of the manner in which a filter that incorporates the present invention may operate is best illustrated in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. The input image, portion of the image included in the window and the desired output image that correspond to the provided example are provided in <cross-reference target="DRAWINGS">FIG. 6</cross-reference>. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> In one embodiment of the invention, a single LUT is used and time delays are employed to allow one vector of nine bits to be input to the table at a given time. In another embodiment of the invention, four identical LUTs that use the template rotating technique described above are used in parallel. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> In the embodiments of the invention described thus far, different symmetries of a template should result in corresponding symmetries in the output. In certain applications templates are used to generate output pixels signals that are not dependent on the symmetries of the input pattern. For example when template matching is used to segment text from halftones, all eight symmetries of a template occur in the LUTs because a given template will either fit in either text or in halftones regardless of the rotation angle or the axis about which rotation occurs. Thus, the templates used for segmentation need not be processed to yield output dependent upon particular symmetries. Similarly, when an image is enhanced from binary input to multiple bit per pixel output, if a pixel at a jagged edge should be turned to gray, this will generally occur regardless of symmetry. Thus, multiple symmetries of an input pattern could be associated with a single output signal. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> One example of the mathematical operations that may be used to implement template rotation in accordance with the above described embodiments of the present invention are provided below. </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> Geometric operations which change window orientation without changing the locations of the pixels with respect to each other are referred to as &ldquo;symmetry operations,&rdquo; because they retain the form of the image window but change the window in a symmetrical way. Common symmetry operations are:  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="70PT" align="left"/>
<colspec colname="2" colwidth="133PT" align="left"/>
<thead>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>Flip Horizontal</entry>
<entry>flip the window about the horizontal axis</entry>
</row>
<row>
<entry></entry>
<entry>Flip Vertical</entry>
<entry>flip the window about the vertical axis</entry>
</row>
<row>
<entry></entry>
<entry>Flip Right Diagonal</entry>
<entry>flip the window about an axis from the</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry>upper left to the lower right</entry>
</row>
<row>
<entry></entry>
<entry>Flip Left Diagonal</entry>
<entry>flip the window about an axis from the</entry>
</row>
<row>
<entry></entry>
<entry></entry>
<entry>upper right to the lower left</entry>
</row>
<row>
<entry></entry>
<entry>Rotate 90</entry>
<entry>rotate 90 degrees clockwise</entry>
</row>
<row>
<entry></entry>
<entry>Rotate 180</entry>
<entry>rotate 180 degrees clockwise</entry>
</row>
<row>
<entry></entry>
<entry>Rotate 270</entry>
<entry>rotate 270 degrees clockwise</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> The window from the image can be represented in either its original geometric layout or as a vector. The vector representation can be derived from its original geometric form by concatenating each of the scan lines of geometric shape into a single packed data structure. If the window has 32 or fewer elements, a 32 bit integer is conveniently used as the data structure. <cross-reference target="DRAWINGS">FIG. 9</cross-reference> shows how a 3&times;3 window may be vectorized for use with the present invention. Two calculation methods are provided in the following discussion. The non-vectorized method is used for the geometric form. It should be noted that these are binary images. </paragraph>
<paragraph id="P-0060" lvl="7"><number>&lsqb;0060&rsqb;</number> Implementation of Symmetry Operations on Vectorized Windows: </paragraph>
<paragraph id="P-0061" lvl="0"><number>&lsqb;0061&rsqb;</number> Given a single integer value, the intuitive method for software calculation of any of the symmetry options would be to mask or shift out each individual bit, then reorder the bits as a function of the operation, and finally recombine the bits into a single value. </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> A somewhat less compute intensive operation utilizes a look-up table. The table is initialized by calculating the result of the operation on any single bit position in the vector, entering the result into the table at the index that corresponds to that bit position. The symmetry operation can then be done on any given vector by summing the table values that are indexed by every location in the vector which has a value 1 pixel. Given the window shape, a table size can be calculated by the formula T&equals;W*H (where T is the table length, W is the width of the window, and H is the height). In other words, the look-up table contains one entry for each pixel in the window. </paragraph>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> A example of table pre-calculation is shown in <cross-reference target="DRAWINGS">FIG. 10</cross-reference>. The window is 3 by 3 resulting in a look-up table with nine entries. Index 2 is being calculated for the operation of horizontal flip. The vector value of a bit in position 2 is 4. After the horizontal flip, the new vector value is 256. The value 256 is entered into the look-up table at location 2 (this assumes the least significant bit is 0). The look up table will differ for each of the symmetry operators listed above. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> The symmetry operation can be performed on any given vector by separating a given vector into its individual bits. Each bit position that is set to 1 is used to index a value from the look-up table. The values from the look-up table are summed together resulting in the new vector. An example of this operation is shown in <cross-reference target="DRAWINGS">FIG. 11</cross-reference>. </paragraph>
<paragraph id="P-0065" lvl="0"><number>&lsqb;0065&rsqb;</number> Hardware implementation of this operation is somewhat less complex than the software in the sense that each bit of the vector is present on a separate data line (binary image data). As a result the vector can be multiplexed to extract the data bits or each individual data line can be used as the input into a 1 by n chip where the number of outputs is equal to the window size. The output could be programmed with downloadable chips. Also any given operation could be hard wired. </paragraph>
<paragraph id="P-0066" lvl="7"><number>&lsqb;0066&rsqb;</number> Mathematical Descriptions of the Pixel Transforms: </paragraph>
<paragraph id="P-0067" lvl="0"><number>&lsqb;0067&rsqb;</number> Each of the new locations for a given bit within the window can be specified by the equations in Table 1. The original location of the bit is given by the Cartesian coordinate pair (w,h), while the location after the operation is given by (W,h&prime;). The other variables in the equations are H, the height of the window, and W, the width of the window. The subtraction of 1 is needed since w and h are indexed from 0 while W and H are maximum values. </paragraph>
<paragraph id="P-0068" lvl="0"><number>&lsqb;0068&rsqb;</number> Notice that the two diagonal operators are actually a combination of other operators. Flip right diagonal is a the combination of a rotate 90 and a horizontal flip. Flip left diagonal is a combination of rotate 90 and a vertical flip assuming the window is square.  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 1</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Coordinate Calculation Equations</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="OFFSET" colwidth="28PT" align="left"/>
<colspec colname="1" colwidth="77PT" align="left"/>
<colspec colname="2" colwidth="35PT" align="center"/>
<colspec colname="3" colwidth="77PT" align="center"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Operator</entry>
<entry>w&prime;</entry>
<entry>h&prime;</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="3" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry>flip horizontal</entry>
<entry>W - w - 1</entry>
<entry>h</entry>
</row>
<row>
<entry></entry>
<entry>flip vertical</entry>
<entry>w</entry>
<entry>H - h - 1</entry>
</row>
<row>
<entry></entry>
<entry>flip diagonal left</entry>
<entry>H - h - 1</entry>
<entry>H - w - 1</entry>
</row>
<row>
<entry></entry>
<entry>flip diagonal</entry>
<entry>h</entry>
<entry>w</entry>
</row>
<row>
<entry></entry>
<entry>right</entry>
</row>
<row>
<entry></entry>
<entry>rotate 90</entry>
<entry>H - h - 1</entry>
<entry>w</entry>
</row>
<row>
<entry></entry>
<entry>rotate 180</entry>
<entry>W - w - 1</entry>
<entry>H - h - 1</entry>
</row>
<row>
<entry></entry>
<entry>rotate 270</entry>
<entry>h</entry>
<entry>W - w - 1</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="3" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0069" lvl="0"><number>&lsqb;0069&rsqb;</number> In still another embodiment of the invention, only one of the symmetries&mdash;hereinafter referred to as the least common symmetry (LCS) is employed. This includes a template symmetry reduction scheme and filtering architecture that achieves small LUTs that have the same high quality performance as a much larger LUT filter. Templates can be &ldquo;vectorized&rdquo;&mdash;encoded into a string of binary variables (which can be thought of as a binary number with an associated decimal number) and referenced according to the associated decimal value. While many templates do not possess eight unique symmetries, various symmetries of a given template usually possess different number values. </paragraph>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> In the embodiment of the invention described herein, only the LCS is stored to represent a symmetry group of templates within a LUT. Representing a group of templates using a single number allows for further significant storage savings. Turning now to <cross-reference target="DRAWINGS">FIG. 7</cross-reference> for a brief description of template rotation according to this embodiment of the invention, a template is read in from an input image and rotated to each of its eight symmetries. The eight binary or decimal values resulting from this step will be compared, and the lowest value is used s an index to the LUT. A schematic diagram of this filtering process is provided in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> Examples of mathematical operations that may be used to implement template rotation in accordance with LCS embodiments of the invention just described are provided below. </paragraph>
<paragraph id="P-0072" lvl="7"><number>&lsqb;0072&rsqb;</number> Finding the Least Common Symmetry: </paragraph>
<paragraph id="P-0073" lvl="0"><number>&lsqb;0073&rsqb;</number> The least common symmetry (LCS) is the vector that has the lowest ordinal value when a given vector is operated on by the full set or a subset of the symmetry operators. Table 2 lists the results of the entire set of operators on a 3&times;3 window which has only position 2 set (i.e. vector 000000100&equals;4). Note that the LCS is 1. LCS can be found by calculating all possible values for a given vector, then selecting the minimum value. This requires extraction of each of the bits, many look-ups in the operator look-up tables (T times the number of operators), a summation for each operator, then selection of the minimum value.  
<table-cwu id="TABLE-US-00003">
<number>3</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 2</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>Calculation of LCS</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="49PT" align="left"/>
<colspec colname="1" colwidth="56PT" align="left"/>
<colspec colname="2" colwidth="112PT" align="center"/>
<tbody valign="top">
<row>
<entry></entry>
<entry>Operator</entry>
<entry>Result</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="49PT" align="left"/>
<colspec colname="1" colwidth="56PT" align="left"/>
<colspec colname="2" colwidth="112PT" align="char" char="."/>
<tbody valign="top">
<row>
<entry></entry>
<entry>flip horizontal</entry>
<entry>256</entry>
</row>
<row>
<entry></entry>
<entry>flip vertical</entry>
<entry>1</entry>
</row>
<row>
<entry></entry>
<entry>flip diagonal left</entry>
<entry>4</entry>
</row>
<row>
<entry></entry>
<entry>flip diagonal right</entry>
<entry>64</entry>
</row>
<row>
<entry></entry>
<entry>rotate 90</entry>
<entry>1</entry>
</row>
<row>
<entry></entry>
<entry>rotate 180</entry>
<entry>64</entry>
</row>
<row>
<entry></entry>
<entry>rotate 270</entry>
<entry>256</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0074" lvl="0"><number>&lsqb;0074&rsqb;</number> One possible alternative to this process is to pre-calculate of all possible input vectors, using a look-up table to find the LCS. This becomes impractical as the number of pixel in the window grows since the size of table is 2<highlight><superscript>n</superscript></highlight>, where n is the number of pixels in the window. </paragraph>
<paragraph id="P-0075" lvl="0"><number>&lsqb;0075&rsqb;</number> It should be noted that the Least Common Symmetry is used here as a reference for a collection of symmetric patterns. Equivalent alternatives do exist and are an aspect of the present invention. One example of such an equivalent is the Greatest Common Symmetry (GCS). The greatest common symmetry (GCS) is the vector that has the highest ordinal value when a given vector is operated on by the full set or a subset of the symmetry operators. </paragraph>
<paragraph id="P-0076" lvl="7"><number>&lsqb;0076&rsqb;</number> Non-vectorized Calculation of Symmetry Operators: </paragraph>
<paragraph id="P-0077" lvl="0"><number>&lsqb;0077&rsqb;</number> Processing a vectorized window requires that each pixel be extracted from the vector in order that the appropriate table values are summed. Another method can be considered which avoids this step but requires additional table memory. If each scan line of the original window is used as an index into the look-up table, the entire scan line can be transformed in one step, thus avoiding extraction of single bits from the vector. A formula that calculates the needed table size is T&equals;2<highlight><superscript>W*H </superscript></highlight>(where T is the table width, W is the width of the window and H is its height.) <cross-reference target="DRAWINGS">FIG. 12</cross-reference> shows the calculation of the look-up table for of one of the three scan lines (scan line 3) for the operation of horizontal flip on a 3 by 3 window. Notice that there are 2<highlight><superscript>W*h </superscript></highlight>entries for each scan line. Since the operation of horizontal flip keeps the bits in the same order, the input bit pattern specified by the line value can be seen within the vector, but it has been migrated to a new location. Not all of the operations will retain the bit ordering. For example, vertical flip will result in the bits being scattered within the new vector. </paragraph>
<paragraph id="P-0078" lvl="0"><number>&lsqb;0078&rsqb;</number> The example in <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is repeated in <cross-reference target="DRAWINGS">FIG. 13</cross-reference> using the non-vector method. Each scan line within the window indexes a value from the table. The three values are summed resulting in the new vector. </paragraph>
<paragraph id="P-0079" lvl="0"><number>&lsqb;0079&rsqb;</number> Once a particular location of the LUT is accessed a data value stored therein is placed on a data bus for output to the marking engine as represented by step <highlight><bold>40</bold></highlight>. Having completed the generation of the enhanced output for the target pixel, the process repeats if additional pixels remain in the input image, as determined by step <highlight><bold>42</bold></highlight>. If all pixels within the input image have been resolution enhanced, the process is complete, step <highlight><bold>44</bold></highlight>. </paragraph>
<paragraph id="P-0080" lvl="0"><number>&lsqb;0080&rsqb;</number> Turning next to <cross-reference target="DRAWINGS">FIGS. 16 and 17</cross-reference>, an architecture capable of executing the previously described operations of the enhancement filter will now be described. Each pixel is input into the pulse modulator from pixel state register <highlight><bold>101</bold></highlight> as a series of data words, where the value therein is a function of the pixel states in the observation window associated with the target pixel (step <highlight><bold>36</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>). The series of data words may be sent through a video expansion port <highlight><bold>103</bold></highlight> to other pulse modulators (not shown) for parallel processing, such as in the case of color printing where similar processing of the video information is performed for different colors. </paragraph>
<paragraph id="P-0081" lvl="0"><number>&lsqb;0081&rsqb;</number> The present invention further includes translating means, splitting means, pulse forming means, and generating means. In the pulse modulator of <cross-reference target="DRAWINGS">FIGS. 16 and 17</cross-reference>, a data word from the series is sent through a RAM address multiplexer <highlight><bold>105</bold></highlight> to a translating means. As embodied herein, the translating means comprises four random access memory (RAM) look-up tables <highlight><bold>107</bold></highlight>, <highlight><bold>109</bold></highlight>, <highlight><bold>111</bold></highlight>, and <highlight><bold>113</bold></highlight>. Each data word represents an address within the four RAM look-up tables <highlight><bold>107</bold></highlight>, <highlight><bold>109</bold></highlight>, <highlight><bold>111</bold></highlight>, and <highlight><bold>113</bold></highlight>. In a preferred embodiment, a pair of 256&times;4 ECL RAM look-up tables is used to generate a pulse attribute word for each pulse attribute sought to be controlled. While the invention will be described here using a particular form of pulse generation, it should be noted that this description is merely a preferred embodiment provided for the purpose of illustrating one implementation. Those skilled in the art will recognize that the image may be processed and enhanced signals may be generated using a variety of forms, such as PWPM, high spatial resolution, different quantization (binary to gray-conversion), or switched stated for a binary image, and that the invention is not limited to this embodiment. </paragraph>
<paragraph id="P-0082" lvl="0"><number>&lsqb;0082&rsqb;</number> Pulse attributes include leading edge delay, trailing edge delay, amplitude of the pulse to be formed, and other special features such as an inverted or multiple pulse per pixel selection. Alternatively, a single 256&times;8 ECL RAM look-up table may be used to generate each pulse attribute word. The embodiment of <cross-reference target="DRAWINGS">FIG. 3</cross-reference> shows two pairs of 256&times;4 RAM look-up tables <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight>, <highlight><bold>111</bold></highlight> and <highlight><bold>113</bold></highlight> that correspond to the two pulse attributes of leading edge delay and trailing edge delay. The pulse modulator will accommodate as many pairs of 256&times;4 RAM look-up tables as there are desired pulse attributes. For example, a third pair of 256&times;4 RAM look-up tables may be used to control the amplitude of a pulse to be formed. Alternatively, a series of RAM addresses in the look-up tables may be assigned to produce inverted pulses. For example, addresses 64-127 would be decoded so that the pulses produced in response to the data output from those table locations would be inverted. Furthermore, a larger or smaller number of addresses may be used, or allocated, for the production of inverted pulses. </paragraph>
<paragraph id="P-0083" lvl="0"><number>&lsqb;0083&rsqb;</number> Once an address in each RAM look-up table is accessed by the data word from the pixel state register, each RAM look-up table generates a nibble (4 bits) of information. Thus, each pair of RAM look-up tables generates a pulse attribute word (8 bits) corresponding to the pulse attribute sought to be controlled. While an 8-bit implementation may be preferable, it is not a limitation, and the pulse attribute word may be any number of bits (i.e., 4, 6, 8, 10, 12, etc.). </paragraph>
<paragraph id="P-0084" lvl="0"><number>&lsqb;0084&rsqb;</number> Characteristic data indicative of the pulse attributes sought to be controlled in a pulse modulator may be downloaded into the RAM look-up tables <highlight><bold>107</bold></highlight>, <highlight><bold>109</bold></highlight>, <highlight><bold>111</bold></highlight>, and <highlight><bold>113</bold></highlight> from the look-up table download interface <highlight><bold>115</bold></highlight>. Once the look-up table download interface <highlight><bold>115</bold></highlight> accesses an address of a RAM look-up table, a pulse attribute data nibble may be loaded into the RAM look-up table through the look-up table data bus <highlight><bold>117</bold></highlight> from the look-up table download interface <highlight><bold>115</bold></highlight>. This allows for different mapping functions in the same pulse modulator for different printing characteristics (i.e., font smoothing, graphics, etc.), and further facilitates maintenance of print quality as the components of the system age. After the RAM look-up tables <highlight><bold>107</bold></highlight>, <highlight><bold>109</bold></highlight>, <highlight><bold>111</bold></highlight>, and <highlight><bold>113</bold></highlight> are loaded, the look-up table download interface <highlight><bold>115</bold></highlight> instructs the RAM address multiplexer <highlight><bold>105</bold></highlight> to receive data from the video data bus <highlight><bold>119</bold></highlight>. </paragraph>
<paragraph id="P-0085" lvl="0"><number>&lsqb;0085&rsqb;</number> In the embodiment of <cross-reference target="DRAWINGS">FIG. 16</cross-reference>, the four RAM look-up tables <highlight><bold>107</bold></highlight>, <highlight><bold>109</bold></highlight>, <highlight><bold>111</bold></highlight>, and <highlight><bold>113</bold></highlight> perform the mapping function represented by steps <highlight><bold>38</bold></highlight> and <highlight><bold>40</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, which translates the incoming data word into two pulse attribute words to control the formation of a pulse. In <cross-reference target="DRAWINGS">FIG. 16</cross-reference>, the top two RAM look-up tables <highlight><bold>107</bold></highlight> and <highlight><bold>109</bold></highlight> generate separate nibbles of pulse attribute information that combine to form a pulse attribute word for the leading edge delay of a pulse to be formed. The bottom two RAM look-up tables <highlight><bold>111</bold></highlight> and <highlight><bold>113</bold></highlight> generate separate nibbles of pulse attribute information that combine to form a pulse attribute word for the trailing edge delay of a pulse to be formed. </paragraph>
<paragraph id="P-0086" lvl="0"><number>&lsqb;0086&rsqb;</number> As illustrated in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, each pulse attribute word is fed to a respective splitting means that comprises multiplexer and latch blocks <highlight><bold>121</bold></highlight> and <highlight><bold>123</bold></highlight>. In the preferred embodiment, each respective multiplexer and latch block contains two latches, one for each of the phase 1 and phase 2 buses. The two pulse attribute words generated in the RAM look-up tables <highlight><bold>107</bold></highlight>, <highlight><bold>109</bold></highlight>, <highlight><bold>111</bold></highlight>, and <highlight><bold>113</bold></highlight> form data words that are latched onto the phase 1 buses by their respective multiplexers <highlight><bold>121</bold></highlight> and <highlight><bold>123</bold></highlight> at a leading edge of a pulse from the phase 1 video clock <highlight><bold>135</bold></highlight>. </paragraph>
<paragraph id="P-0087" lvl="0"><number>&lsqb;0087&rsqb;</number> The two data words latched on their respective phase 1 buses <highlight><bold>125</bold></highlight> and <highlight><bold>127</bold></highlight> are further processed on separate channels in a pulse forming means corresponding to each channel. As depicted, the pulse forming means comprises a delay logic block <highlight><bold>129</bold></highlight> for forming separate leading and trailing edge delayed pulses and a video pulse forming logic block <highlight><bold>131</bold></highlight>. The video pulse forming logic block <highlight><bold>131</bold></highlight>, which comprises the generating means, forms a single pulse from the leading and trailing edge delay pulses. Subsequent to generation of the first or normal pulse in the video pulse forming logic block <highlight><bold>131</bold></highlight>, the pulse may be inverted under the control of the combination logic block <highlight><bold>149</bold></highlight>. </paragraph>
<paragraph id="P-0088" lvl="0"><number>&lsqb;0088&rsqb;</number> As represented by the preferred embodiment depicted in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, video combination logic block <highlight><bold>149</bold></highlight> allows the video signal from video pulse forming logic block <highlight><bold>131</bold></highlight> to pass unaltered if a logic zero is present on the inversion control line. On the other hand, at any time the video pulse inversion logic block <highlight><bold>145</bold></highlight> should produce a logic one on the inversion control line, the video pulse signal output from block <highlight><bold>131</bold></highlight> will be inverted so as to form a pair of video pulses. </paragraph>
<paragraph id="P-0089" lvl="0"><number>&lsqb;0089&rsqb;</number> It is noted that the speed of a typical scanning system, with only a single phase video clock and corresponding phased set of buses, is limited by the speed at which its delay and pulse forming logic <highlight><bold>129</bold></highlight> and <highlight><bold>131</bold></highlight> can operate on pulse attribute words and then be reset to accept new pulse attribute words. In the embodiment shown in <cross-reference target="DRAWINGS">FIG. 17</cross-reference>, with only the phase 1 video clock <highlight><bold>135</bold></highlight> and phase 1 buses <highlight><bold>125</bold></highlight> and <highlight><bold>127</bold></highlight>, the delay and pulse forming logic blocks <highlight><bold>129</bold></highlight> and <highlight><bold>131</bold></highlight> may limit the processing speed of the pulse modulator. Specifically, while the two pulse attribute words corresponding to the first data word are being processed by the delay and pulse forming logic blocks <highlight><bold>129</bold></highlight> and <highlight><bold>131</bold></highlight>, a second pair of pulse attribute words corresponding to a second data word will already be formed, waiting at the respective multiplexer and latch blocks <highlight><bold>121</bold></highlight> and <highlight><bold>123</bold></highlight> to be latched onto the phase 1 buses <highlight><bold>125</bold></highlight> and <highlight><bold>127</bold></highlight> and processed by the delay and pulse forming logic <highlight><bold>129</bold></highlight> and <highlight><bold>131</bold></highlight>. </paragraph>
<paragraph id="P-0090" lvl="0"><number>&lsqb;0090&rsqb;</number> Referring now to <cross-reference target="DRAWINGS">FIG. 18</cross-reference>, upon receiving the video output from combination logic block <highlight><bold>149</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 17, a</cross-reference> marking engine in the form of a raster output scanner (ROS) <highlight><bold>218</bold></highlight> may be used to print the video signals of the enhanced bitmap. There are two common types of ROS <highlight><bold>218</bold></highlight>, flying spot and pulsed imaging. In both, a laser beam <highlight><bold>220</bold></highlight>, emitted from laser <highlight><bold>222</bold></highlight>, passes into conditioning optics <highlight><bold>224</bold></highlight> that may include a modulator <highlight><bold>225</bold></highlight>. For precise periods of time, determined in response to video signals supplied to ROS <highlight><bold>218</bold></highlight>, modulator <highlight><bold>225</bold></highlight> either blocks or deflects the laser beam, or allows the beam to pass through the conditioning optics to illuminate a facet <highlight><bold>226</bold></highlight> of rotating polygon <highlight><bold>228</bold></highlight>. Laser <highlight><bold>222</bold></highlight> may be a helium-neon laser or a laser diode. In the latter case, the video data could directly modulate the laser rather than modulator <highlight><bold>225</bold></highlight>. In addition, more than a single laser source <highlight><bold>222</bold></highlight> or beam <highlight><bold>220</bold></highlight> could be employed to practice the invention. </paragraph>
<paragraph id="P-0091" lvl="0"><number>&lsqb;0091&rsqb;</number> After reflecting off facet <highlight><bold>226</bold></highlight>, laser beam <highlight><bold>220</bold></highlight> passes through conditioning optics <highlight><bold>230</bold></highlight> and forms a spot <highlight><bold>221</bold></highlight> on photosensitive image plane <highlight><bold>232</bold></highlight>. The rotating facet causes laser spot <highlight><bold>221</bold></highlight> to scan across the image plane in a line <highlight><bold>234</bold></highlight>. Line <highlight><bold>234</bold></highlight> lies in what is commonly referred to as the fast scan direction, represented by arrow <highlight><bold>236</bold></highlight>. In addition, as facet <highlight><bold>226</bold></highlight> rotates, image plane <highlight><bold>232</bold></highlight> moves in a slow scan direction, substantially perpendicular to the fast scan direction, as represented by arrow <highlight><bold>238</bold></highlight>. Movement in the slow scan direction is such that successive rotating facets of the polygon for successive scan lines <highlight><bold>234</bold></highlight> that are offset from each other in the slow scan direction. Subsequent to exposure the latent electrostatic image remaining on photosensitive image plane <highlight><bold>232</bold></highlight> is developed using any commonly known charge sensitive development techniques so as to produce a developed image that is transferable to an output medium. </paragraph>
<paragraph id="P-0092" lvl="0"><number>&lsqb;0092&rsqb;</number> Each scan line <highlight><bold>234</bold></highlight> consists of a row of pixels <highlight><bold>240</bold></highlight>, wherein the pixels are produced by the modulation of the laser beam as laser spot <highlight><bold>221</bold></highlight> scans across the image plane. As beam <highlight><bold>220</bold></highlight> scans across the scan line, laser spot <highlight><bold>221</bold></highlight> either illuminates or does not illuminate the individual pixel, in accordance with the video signals provided to ROS. In general, the video signals may be characterized as a serial stream of pulses, where a logic one or a pulse specifies that the beam is to illuminate the surface, while a logic zero, no pulse, will result in no illumination. </paragraph>
<paragraph id="P-0093" lvl="0"><number>&lsqb;0093&rsqb;</number> For both types of ROS, the width of pixel <highlight><bold>240</bold></highlight> is dependent upon the period or duration of the corresponding logic one pulse in the video signal supplied to ROS <highlight><bold>218</bold></highlight>. In a scanning spot ROS, at the leading edge of a pulse modulator <highlight><bold>225</bold></highlight> allows the passage of laser beam <highlight><bold>220</bold></highlight> onto the image plane. For the duration of the pulse, an oval shaped laser spot <highlight><bold>221</bold></highlight> is scanned across image plane <highlight><bold>232</bold></highlight>, illuminating at least one addressed pixel <highlight><bold>240</bold></highlight> within the scan line <highlight><bold>234</bold></highlight>. The width of the illuminated region in the fast scan direction thus depends on the duration of the video pulse, as well as on the width and scanning rate of laser spot <highlight><bold>221</bold></highlight>. Typically, the dimensions of the laser spot are such that it is two to three times wider in the slow scan direction than its width in the fast scan direction. As an example, in a 600 spot per inch, 135 page per minute, dual beam printer, the laser spot at half the maximum intensity is approximately 43 &mgr;m wide in the slow scan direction and 20 &mgr;m wide in the fast scan direction, and the time period required for the spot to scan across the width of a single pixel <highlight><bold>240</bold></highlight> is about 15 nanoseconds. </paragraph>
<paragraph id="P-0094" lvl="0"><number>&lsqb;0094&rsqb;</number> Typically, the video data used to drive the ROS is clocked so that the period within which each pixel is exposed, referred to hereafter as a pixel clock period, is the same. In addition, the video data used to generate the video signal pulses that drive the modulator are also synchronized with ROS <highlight><bold>218</bold></highlight> and the movement of the image plane <highlight><bold>232</bold></highlight> in the slow scan direction, thereby allowing a particular bit of video data to address an appropriate portion of image plane <highlight><bold>232</bold></highlight>. The synchronization of the video data, the video signal pulses produced therefrom, the ROS and the image plane is achieved through the use of a system clock that is equivalent to the rate at which pixels must be exposed on the image plane. While faster clocks may allow greater resolution within the video pulse stream, a higher frequency also results in increased costs for faster hardware within the video processing path. </paragraph>
<paragraph id="P-0095" lvl="0"><number>&lsqb;0095&rsqb;</number> In the present embodiment, a pulse-width, position, and amplitude modulator (pulse modulator) is utilized to form the video signal pulses in response to video data representing the image to be printed. It is noted that while the following description is directed toward a single color output, this is for simplicity of description only and there is no intent to limit the application of the present invention in such a manner. </paragraph>
<paragraph id="P-0096" lvl="0"><number>&lsqb;0096&rsqb;</number> It is, therefore, apparent that there has been provided, in accordance with the present invention, a method and apparatus for improving the appearance of printed documents. While this invention has been described in conjunction with preferred embodiments thereof, it is evident that many alternatives, modifications, and variations will be apparent to those skilled in the art. Accordingly, it is intended to embrace all such alternatives, modifications and variations that fall within the spirit and broad scope of the appended claims. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method of processing digital image data to produce enhanced output images, comprising the steps of: 
<claim-text>a) selecting a target pixel location in a bitmap image; </claim-text>
<claim-text>b) observing a set of pixels within a pixel observation window superimposed on said bitmap image, relative to the target pixel location; </claim-text>
<claim-text>c) generating an index pointer as a function of said pixel set by rotating said pixel set about an angle in a multi-dimensional space; </claim-text>
<claim-text>e) using the index pointer, looking-up a code that defines the characteristics of a signal that will be used to output the target pixel; and </claim-text>
<claim-text>f) rotating said signal about said pixel set angle in a three dimensional space and outputting said rotated signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising the step of repeating each step for every pixel within the bitmap image. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein said pixel angle is defined by a vector in a three dimensional space. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein said step of generating an index pointer, comprises: 
<claim-text>a) rotating said pixel set about an angle to identify a pattern stored in a look up table that corresponds to on off states of said pixel set; </claim-text>
<claim-text>b) storing the binary signal level retrieved for each pixel in a predetermined bit position within an address register. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein said signal rotating step further comprises: 
<claim-text>a) mapping said pixel set to a look up table, and outputting a first output pixel signal; </claim-text>
<claim-text>b) rotating said pixel set about a vertical axis, mapping said vertically rotated pixel set through said look up table, and outputting a second output pixel signal; </claim-text>
<claim-text>c) rotating said pixel set about a horizontal axis, mapping said horizontally rotated pixel set through said look up table, and outputting a third output pixel signal; and </claim-text>
<claim-text>d) rotating said pixel set about a diagonal axis, mapping said diagonally rotated pixel set through said look up table, and outputting a fourth output pixel signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. A method of processing a digital image as claimed in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein said signal rotation step further comprises: 
<claim-text>a) obtaining a pixel set from said bitmap image; </claim-text>
<claim-text>b) rotating said pixel set to a plurality of symmetry operations and generating output signals from each symmetry operation; and </claim-text>
<claim-text>c) comparing said output signals, an using a lowest value as an index to a look up table. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein said signal rotating step further comprises performing a symmetry operation on said pixel set to generate an output pixel signal. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein said symmetry operation is a least common symmetry operation. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein performing said symmetry operation includes: 
<claim-text>a) representing said pixel window in the form of a vector; </claim-text>
<claim-text>b) calculating a result of the symmetry operation on a single bit position in said vector; and </claim-text>
<claim-text>c) entering a result of said single bit symmetry operation into a look up table at an index that corresponds to said vector bit position. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference> further comprising performing the symmetry operation on a next vector by summing the values that are indexed by every vector bit location that has a pixel signal equal to 1. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein said symmetry operation includes rotating said pixel set 180 degrees about an axis that extends vertically through said pixel window and mapping said vertically rotated pixel set through said look up table to generate an output pixel signal. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein said symmetry operation includes rotating said pixel set 180 degrees about an axis that extends horizontally through said pixel window and mapping said horizontally rotated pixel set through said look up table to generate an output pixel signal. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference> wherein said symmetry operation includes rotating said pixel set 180 degrees about an axis that extends diagonally through said pixel window and mapping said diagonally rotated pixel set through said look up table to generate an output pixel signal. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference> wherein said signal rotating step results in rotating said pixel window about an axis normal to said pixel window. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> wherein said pixel window is rotated 90 degrees about said normal axis. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> wherein said pixel window is rotated 180 degrees about said normal axis. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference> wherein said pixel window is rotated 270 degrees about said normal axis. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein said rotated signal is output on a xerographic printer. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein said rotated signal is output on a video display terminal. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. A method of processing digital image data as claimed in <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein said rotated signal is stored in a memory. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. An electronic printing machine, comprising: 
<claim-text>a) a raster exposure device; and </claim-text>
<claim-text>b) an enhancement filter, connected to said raster exposure device, for performing pixel resolution enhancement on a bitmap image input thereto so as to produce a series digital signals to drive said raster exposure device, wherein said digital signals include a code that defines the characteristics of an output signal that will and an angle about which said output signal should be rotated in order to achieve pixel resolution enhancement. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. An electronic printing machine as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein said enhancement filter comprises: 
<claim-text>a) pixel selection means for selecting a target pixel location in the bitmap image; </claim-text>
<claim-text>b) image memory for recording the binary states of a set of pixels in the bitmap image located within a pixel observation window positioned relative to the target pixel location; </claim-text>
<claim-text>c) a pixel state register for storing an address generated as a function of the binary states of a subset of the pixels stored in said image memory; and </claim-text>
<claim-text>d) translating means, responsive to the value stored in said pixel state register, for outputting a pulse attribute word that defines the characteristics of a digital signal that will be used to print the target pixel so as to enhance the resulting printed output, wherein said signal characteristics include an angle about which the digital signal should be rotated. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A method of reducing a number of entries stored in a look up table, wherein said look up table entries are associated with multiple output signals, comprising the steps of examining said look up table entries and said output signals, and reducing a number of output signals that will be generated based upon similarities between said look up table entries and said output signals. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. A method of reducing a number of entries stored in a look up table as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference> further comprising identifying multiple symmetries of a pattern stored in the look up table at different rotation angles and generating a single output signal for said multiple pattern symmetries. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. A method of reducing a number of entries stored in a look up table as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference> further comprising identifying output signals that differ only by a rotation angle at which they will be generated and associating all look up table entries associated with said identified output signals with a single output signal. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. A method of reducing a number look up tables, wherein each of said look up tables includes a plurality of entries, each entry being associated with an output signal, the method comprising the steps of examining said look up table entries and said associated output signals, and reducing a number of look up tables based upon similarities between said look up table entries and said associated output signals. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. A method of reducing a number of look up tables as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> further comprising identifying multiple symmetries of a pattern stored in said plurality of look up tables and generating a single output signal to be associated with each of said multiple pattern symmetries. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. A method of reducing a number of entries stored in a look up table as claimed in <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference> further comprising identifying output signals that differ only by a rotation angle at which they will be generated and associating all look up table entries in said plurality of look up tables that are associated with said identified output signals with a single output signal.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>8</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002739A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002739A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002739A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002739A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002739A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002739A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002739A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002739A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002739A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00009">
<image id="EMI-D00009" file="US20030002739A1-20030102-D00009.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00010">
<image id="EMI-D00010" file="US20030002739A1-20030102-D00010.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00011">
<image id="EMI-D00011" file="US20030002739A1-20030102-D00011.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00012">
<image id="EMI-D00012" file="US20030002739A1-20030102-D00012.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00013">
<image id="EMI-D00013" file="US20030002739A1-20030102-D00013.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00014">
<image id="EMI-D00014" file="US20030002739A1-20030102-D00014.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00015">
<image id="EMI-D00015" file="US20030002739A1-20030102-D00015.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
