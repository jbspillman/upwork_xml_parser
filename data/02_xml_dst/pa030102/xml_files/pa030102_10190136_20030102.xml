<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005274A1-20030102-D00000.TIF SYSTEM "US20030005274A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005274A1-20030102-D00001.TIF SYSTEM "US20030005274A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030005274A1-20030102-D00002.TIF SYSTEM "US20030005274A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030005274A1-20030102-D00003.TIF SYSTEM "US20030005274A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030005274A1-20030102-D00004.TIF SYSTEM "US20030005274A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030005274A1-20030102-D00005.TIF SYSTEM "US20030005274A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030005274A1-20030102-D00006.TIF SYSTEM "US20030005274A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030005274A1-20030102-D00007.TIF SYSTEM "US20030005274A1-20030102-D00007.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005274</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10190136</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020703</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/177</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>713</class>
<subclass>001000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Resistor identification configuration circuitry and associated method</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-in-part-of>
<parent-child>
<child>
<document-id>
<doc-number>10190136</doc-number>
<kind-code>A1</kind-code>
<document-date>20020703</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09617350</doc-number>
<document-date>20000717</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</continuation-in-part-of>
</continuations>
<non-provisional-of-provisional>
<document-id>
<doc-number>60359781</doc-number>
<document-date>20020226</document-date>
<country-code>US</country-code>
</document-id>
</non-provisional-of-provisional>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>David</given-name>
<middle-name>P.</middle-name>
<family-name>Bresemann</family-name>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Alan</given-name>
<middle-name>F.</middle-name>
<family-name>Hendrickson</family-name>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Robert</given-name>
<middle-name>C.</middle-name>
<family-name>Wagner</family-name>
</name>
<residence>
<residence-us>
<city>Austin</city>
<state>TX</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>O&apos;KEEFE, EGAN &amp; PETERMAN, L.L.P.</name-1>
<name-2>Building C, Suite 200</name-2>
<address>
<address-1>1101 Capital of Texas Highway South</address-1>
<city>Austin</city>
<state>TX</state>
<postalcode>78746</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">Programmable on-chip identification circuitry and associated method are disclosed that provide integrated circuits with the ability to select and report from multiple different vendor and system identification configurations. The integrated circuit device includes programmable circuitry that utilizes vendor identification, system identification, configuration or other device information provided or selected at least in part based upon selection information from a source external to the integrated circuit. The selection information may be provided through one or more externally generated digital and/or analog control signals that are then processed within the integrated circuit device to select, access and utilize desired identification information stored in an on-chip database. For example, one or more analog control signals can be generated using resistor circuits for which specific selectable resistor configurations map to particular information stored in a look-up table or other database structure within the integrated circuit. The analog control signals are converted to digital values within the integrated circuit, and these digital values are used to select device information from the on-chip database. Furthermore, the selected device information can be stored in on-chip device information registers. And the digital values themselves can be stored and used as identification, configuration or other device information. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">RELATED APPLICATIONS </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is a continuation-in-part application of co-pending U.S. patent application Ser. No. 09/617,350, filed Jul. 17, 2000, entitled &ldquo;PROGRAMMABLE VENDOR IDENTIFICATION CIRCUITRY AND ASSOCIATED METHOD.&rdquo; The application also claims priority to the following co-pending provisional application: Provisional Application Ser. No. 60/359,781 entitled &ldquo;RESISTOR IDENTIFICATION CONFIGURATION CIRCUITRY AND ASSOCIATED METHOD,&rdquo; which was filed on Feb. 26, 2002.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">TECHNICAL FIELD OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The present invention relates to vendor and system identification information for electronic devices, and more particularly to vendor identification information for plug-and-play applications in computer systems meeting operational features of the Audio CODEC &apos;97 Component Specification and features of the PCI local bus standard. </paragraph>
</section>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The Audio CODEC &apos;97 Component Specification (AC97) is sponsored by Intel Corporation and provides a standard interface for computer system audio applications, including modem CODEC functionality. In part, the AC97 specification contemplates that devices will report their vendor information to the operating system for plug-and-play device driver installation, for example, with the Microsoft WINDOWS operating system. The AC97 specification provides two fixed addresses (namely, hex 7C and hex 7E) for vendors to report identifying codes to allow boot software to load drivers compatible with the given vendor identification codes. In addition, the PCI local bus standard provides for reporting 16-bit product specific identification codes. These codes include a subsystem vendor identification (SVID) and a subsystem identification (SSID). The PCI local bus standard provides for these identification codes to be stored in the PCI configuration register space at address 2Ch (SVID) and 2Eh (SSID). Traditionally, devices have been manufactured such that they store fixed vendor identification information and are configured to report this information when queried. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> One problem associated with this fixed vendor identification scheme, however, is that it does not provide a solution for a device supplied through multiple vendors or a device with multiple different configurations. For example, a single integrated circuit vendor may sell a hardware solution to multiple modem software vendors, or alternatively, a single modem vendor may sell one of several software revisions bundled with a single hardware revision. In such situations, it would be advantageous for the same piece of silicon to report different vendor identification information from the vendor identification registers. The AC97 specification and the PCI local bus standard, however, do not contemplate a solution to this problem. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> In accordance with the present invention, programmable on-chip identification circuitry and associated method are disclosed that provide a solution to this multiple vendor and system identification problem and to provide the ability to program on-chip device identification, device configuration, device operational parameters or other device information in a cost effective manner. An integrated circuit includes control circuitry that utilizes vendor identification, system identification, device configuration or other device information provided or selected at least in part based upon selection information from a source external to the integrated circuit. The selection information, for example, may be provided through one or more externally generated digital and/or analog control signals that are then processed within the integrated circuit device to select, access, utilize and/or store desired identification, configuration or device information. For example, one or more analog control signals can be generated using resistor identification configuration circuits for which specific selectable resistor configurations map to particular information stored in a look-up table or other database structure within the integrated circuit. The analog control signal can be converted to a digital value on-chip, and control circuitry can use the digital value to select information from the on-chip database and, if desired store the selected device information in on-chip device information registers. Still further, the digital value itself can be stored and used as identification, configuration or other device information.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> It is noted that the appended drawings illustrate only exemplary embodiments of the invention and are, therefore, not to be considered limiting of its scope, for the invention may admit to other equally effective embodiments. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of host-side and line-side direct-access-arrangement (DAA) circuitry including programmable on-chip vendor identification circuitry, according to the present invention. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of a computer system including AC97 device circuitry having a programmable on-chip vendor identification circuitry, according to the present invention. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a block diagram of programmable registers that may be loaded with first or second vendor identification information, according to the present invention. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram of a more detailed embodiment having multiple registers that may be loaded with fixed primary vendor identification information and programmable secondary vendor identification information, according to the present invention. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram of an embodiment utilizing a EEPROM to provide vendor identification information from off-chip, according to the present information. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6A</cross-reference> is a block diagram of an embodiment utilizing an analog control signal from a signal generator to provide information selection information to an integrated circuit. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6B</cross-reference> is a block diagram for an embodiment utilizing a resistor configuration to provide an analog voltage signal that is converted to a digital number to provide the information selection information. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a block diagram of a computer system including PCI device circuitry that utilizes an externally generated analog signal to access an information look-up table to load PCI configuration registers with desired identification information. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 8A and 8B</cross-reference> are block diagrams for the use of a single analog control signal and multiple analog control signals, respectively. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a block diagram for an embodiment that utilizes multiple analog control signals that are multiplexed to share a single input pin. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE INVENTION </heading>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The present invention contemplates an integrated circuit device having on-chip programmable circuitry that may receive and store vendor, system or other identification information. By being programmable, the programmable circuitry allows for vendor or other ID information for multiple device configurations and/or multiple vendor supplied devices to be accurately reported to external devices. In a particular embodiment, the present invention contemplates direct-access-arrangement (DAA) circuitry having on-chip programmable circuitry that may be loaded with vendor identification, system identification or other device information at least in part based upon selection information received from an external source. In addition, this external source may also be programmable, so that it may be loaded with desired vendor identification information that can be transferred and loaded into the DAA circuitry. In addition, external digital and/or analog control signals can be received by the DAA circuitry and the processed to select identification information from sets of information stored in an on-chip database. The present invention allows a single hardware DAA solution to be utilized by different software vendors, who each add their own respective software functionality, and to be utilized by a single software vendor, who desires to bundle different software functionality or revisions with the single hardware DAA solution. In this way, an integrated circuit may be designed and manufactured to provide a single hardware solution for a variety of different software or other programmable configurations. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram for an embodiment <highlight><bold>100</bold></highlight> according to the present invention including programmable on-chip vendor identification circuitry <highlight><bold>130</bold></highlight>, according to the present invention. A host processor <highlight><bold>102</bold></highlight> is coupled to direct-access-arrangement (DAA) circuitry <highlight><bold>112</bold></highlight> through an interface <highlight><bold>110</bold></highlight>. The DAA circuitry <highlight><bold>112</bold></highlight> is configured to allow the host processor <highlight><bold>102</bold></highlight> to communicate with the tip (T) <highlight><bold>118</bold></highlight> and ring (R) <highlight><bold>120</bold></highlight> of a telephone line. The DAA circuitry <highlight><bold>112</bold></highlight> includes host-side DAA circuitry <highlight><bold>104</bold></highlight>, an isolation barrier <highlight><bold>106</bold></highlight>, line-side DAA circuitry <highlight><bold>108</bold></highlight>, and isolation communication interfaces <highlight><bold>114</bold></highlight> and <highlight><bold>116</bold></highlight>. The host-side DAA circuitry <highlight><bold>104</bold></highlight> and line-side DAA circuitry <highlight><bold>108</bold></highlight> may each include a single integrated circuit. An example of such DAA circuitry is described in U.S. Pat. No. 5,870,046, which is assigned to Silicon Laboratories, Inc., as well as co-pending U.S. patent application Ser. No. 09/035,175 entitled &ldquo;Direct Digital Access Arrangement Circuitry and Method for Connecting Phone Lines,&rdquo; also assigned to Silicon Laboratories, Inc., are hereby each incorporated by reference in its entirety. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> In addition, each of the following U.S. patent applications, which are related in subject matter to the current application and are filed concurrently herewith, is hereby incorporated by reference in its entirety: U.S. Ser. No. 09/617,465, filed Jul. 17, 2000, entitled &ldquo;TELEPHONE RING-VALIDATION AND WAKE-ON-RING CIRCUITRY AND ASSOCIATED METHODS&rdquo; by Alan F. Hendrickson; U.S. Ser. No. 09/617,757, filed Jul. 17, 2000, entitled &ldquo;CALLER ID DATA-REPORTING MECHANISM FOR ELECTRONIC DEVICES AND ASSOCIATED METHODS&rdquo; by Alan F. Hendrickson; U.S. Ser. No. 09/617,079, filed Jul. 17, 2000, entitled &ldquo;TELEPHONE HANG-UP TIMEOUT CIRCUITRY AND DATA TIMEOUT CIRCUITRY FOR ELECTRONIC DEVICES AND ASSOCIATED METHODS&rdquo; by Alan F. Hendrickson; and U.S. Ser. No. 09/617,405, filed Jul. 17, 2000, entitled &ldquo;DATA-SECURITY CIRCUITRY FOR ELECTRONIC DEVICES AND ASSOCIATED METHODS&rdquo; by Alan F. Hendrickson. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> According to the present invention, the DAA circuitry <highlight><bold>112</bold></highlight> includes programmable on-chip vendor identification circuitry <highlight><bold>130</bold></highlight> within an integrated circuit portion of host-side DAA circuitry <highlight><bold>104</bold></highlight>. The programmable circuitry <highlight><bold>130</bold></highlight> may be loaded with vendor identification information <highlight><bold>124</bold></highlight> through interface <highlight><bold>122</bold></highlight>, so that the programmable circuitry <highlight><bold>130</bold></highlight> stores vendor identification information provided at least in part from a source external to the integrated circuit portion of host-side DAA circuitry <highlight><bold>104</bold></highlight>. This configuration allows for the integrated circuit portion of the host-side DAA circuitry to be a single hardware solution for multiple vendors or multiple configurations from a single vendor. Thus, when the DAA circuitry <highlight><bold>112</bold></highlight> reports vendor information to the host processor <highlight><bold>102</bold></highlight>, for example, when device drivers are required to be installed in a plug-and-play operating system environment, the proper vendor ID information may be provided even though there are a number of configurations for the hardware and software that provides the functionality of the DAA circuitry <highlight><bold>112</bold></highlight>. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> For example, a modem vendor utilizing the DAA circuitry <highlight><bold>112</bold></highlight> may make product distinctions through the software feature set and through hardware components. Thus, the modem vendor may utilize a single design for manufacture of a product, yet select different software feature sets through the vendor ID information <highlight><bold>124</bold></highlight>. In this way, different products with different features and at different costs may be provided to customers without having to alter the basic product design. In addition, the modem vendor may utilize the vendor ID information <highlight><bold>124</bold></highlight> to allow for different hardware configurations. For example, a modem vendor may manufacture printed circuit boards that have multiple possible configurations that support integrated circuits mounted on the printed circuit boards. The vendor ID information <highlight><bold>124</bold></highlight> may be utilized to install a driver setting that matches the integrated circuit operation to the particular board configuration. Still further, as indicated above, the vendor ID information <highlight><bold>124</bold></highlight> may allow for particular drivers to be loaded for the modem product, for example, during a boot-up sequence for a personal computer. It is noted that the vendor ID information <highlight><bold>124</bold></highlight> may be stored in programmable circuitry <highlight><bold>220</bold></highlight>, as depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> (described in more detail below), that is external to the integrated circuit portion <highlight><bold>104</bold></highlight> of the DAA circuitry <highlight><bold>112</bold></highlight>. The programmable nature of this circuitry tends to enhance the ease of configuration for a vendor utilizing the programmable vendor ID circuitry <highlight><bold>130</bold></highlight> of the DAA circuitry <highlight><bold>112</bold></highlight>, according to the present invention. If desired, the programmable circuitry <highlight><bold>220</bold></highlight> may be programmed by the vendor through the DAA circuitry <highlight><bold>112</bold></highlight> to store the vendor ID information <highlight><bold>124</bold></highlight>. Thus, once a vendor has the DAA circuitry <highlight><bold>112</bold></highlight> and the programmable circuitry <highlight><bold>220</bold></highlight>, the vendor may utilize the communication interface for the DAA circuitry <highlight><bold>112</bold></highlight> to load the programmable circuitry with the desired vendor ID information <highlight><bold>124</bold></highlight>. As discussed above, this vendor ID information <highlight><bold>124</bold></highlight> may provide for any of a wide variety of different software and/or hardware configurations. One embodiment for such programmable circuitry <highlight><bold>220</bold></highlight> is depicted with respect to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. In particular for this embodiment <highlight><bold>500</bold></highlight>, the programmable circuitry is an EEPROM (Electrically Erasable Programmable Read Only Memory). </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> It is noted that, if desired, the vendor identification information <highlight><bold>124</bold></highlight> may also include on-chip information, such as, for example, information in a configuration look-up table. This vendor identification information <highlight><bold>124</bold></highlight> may then be selected and loaded into the programmable circuitry <highlight><bold>130</bold></highlight> depending at least in part upon a control signal external to the integrated circuit on which the programmable circuitry <highlight><bold>130</bold></highlight> resides. In this way, vendor ID information for different software configurations may be selected from the vendor ID table through a simple programmed off-chip signal supplied to the integrated circuit. For example, a simple hard-wired 2-bit signal may be provided to the integrated circuit to choose between four different configurations. It is further noted that other techniques may also be employed to provide vendor ID information, including programmable vendor ID information, to on-chip programmable vendor ID circuitry, according to the present invention. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> As indicated above, the present invention is particularly useful where the host processor <highlight><bold>102</bold></highlight> is at least in part a digital controller configured to meet and operate within the AC97 controller operational specifications, and the DAA circuitry <highlight><bold>112</bold></highlight> is also configured to meet and operate within AC9 CODEC operational specifications, and more particularly, the modem CODEC specifications. The embodiment depicted with respect to <cross-reference target="DRAWINGS">FIG. 5</cross-reference> provides a more detailed embodiment directed to an AC97 application. It is noted that as used herein AC97 operational specifications are contemplated as including the current AC97 operational specifications and any revisions or updates to this specification, as well as any follow-on specifications that incorporate features of the current AC97 operational specification, including vendor identification features. The Audio CODEC &apos;97 Component Specification (AC97), revision 2.1 (May 22, 1998) is hereby incorporated by reference in its entirety. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of another embodiment, according to the present invention. In this embodiment, a computer system <highlight><bold>200</bold></highlight> is depicted that includes a central processing unit (CPU) <highlight><bold>102</bold></highlight>A that may be coupled to various other devices through an interfaces or buses <highlight><bold>214</bold></highlight>, as would be understood to one of skill in the art. For example, the CPU <highlight><bold>102</bold></highlight>A may be coupled to a memory device <highlight><bold>202</bold></highlight> , a storage device <highlight><bold>206</bold></highlight>, a display device <highlight><bold>208</bold></highlight>, an input device <highlight><bold>210</bold></highlight>, and/or other devices. In addition, CPU <highlight><bold>102</bold></highlight>A may be coupled to a digital controller <highlight><bold>102</bold></highlight>B that is configured to meet AC97 operational specifications. It is noted that although the digital controller <highlight><bold>102</bold></highlight>B is shown as a separate block in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the AC97 control functionality may be located anywhere desired, including on an integrated circuit that is also the CPU <highlight><bold>102</bold></highlight>A. It is also noted that the CPU <highlight><bold>102</bold></highlight>A and the AC97 digital controller <highlight><bold>102</bold></highlight>B may together or individually be the host processor <highlight><bold>102</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, as desired. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> Referring again to <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the digital controller <highlight><bold>102</bold></highlight>B is coupled to device circuitry <highlight><bold>112</bold></highlight> through interface <highlight><bold>204</bold></highlight>. It is noted that interface <highlight><bold>204</bold></highlight> may be a subset number of signal lines <highlight><bold>110</bold></highlight> going to the device circuitry <highlight><bold>112</bold></highlight>. As with the digital controller <highlight><bold>102</bold></highlight>B, the device circuitry <highlight><bold>112</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is configured to meet AC97 operation specifications. According to the present invention, the device circuitry <highlight><bold>112</bold></highlight> may include at least one integrated circuit that has programmable vendor identification circuitry <highlight><bold>130</bold></highlight>. The programmable circuitry <highlight><bold>130</bold></highlight> may be loaded with vendor ID information <highlight><bold>124</bold></highlight> through interface <highlight><bold>122</bold></highlight>, so that the programmable circuitry <highlight><bold>130</bold></highlight> stores vendor ID information <highlight><bold>124</bold></highlight> provided or selected at least in part from a source external to the integrated circuit portion of the AC97 device circuitry <highlight><bold>112</bold></highlight>. As depicted in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, programmable circuitry <highlight><bold>220</bold></highlight> stores the vendor ID information <highlight><bold>124</bold></highlight>. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is an embodiment <highlight><bold>300</bold></highlight> including programmable vendor identification circuitry <highlight><bold>130</bold></highlight>, according to the present invention. In the embodiment <highlight><bold>300</bold></highlight> depicted, the programmable vendor identification (ID) circuitry <highlight><bold>130</bold></highlight> includes a first ID register <highlight><bold>306</bold></highlight> and a second ID register <highlight><bold>308</bold></highlight> that may be accessed and loaded with desired information. Vendor ID control circuitry <highlight><bold>304</bold></highlight> receives control signals <highlight><bold>312</bold></highlight> and the vendor ID information for loading into the first and second ID registers <highlight><bold>306</bold></highlight> and <highlight><bold>308</bold></highlight>, which in turn provide output signals <highlight><bold>314</bold></highlight> and <highlight><bold>316</bold></highlight>. The vendor identification sources <highlight><bold>302</bold></highlight> and <highlight><bold>304</bold></highlight> intended to show that at least a portion of the vendor ID information may come from an ID information source <highlight><bold>302</bold></highlight> that is external to the integrated circuit. Also, a portion of the vendor ID information may come from an ID information source <highlight><bold>310</bold></highlight> that is internal to the integrated circuit. It is noted that although a first and a second ID registers <highlight><bold>306</bold></highlight> and <highlight><bold>308</bold></highlight> are depicted, any number of registers or other circuitry configured to receive and store identification information could be utilized, as desired by one implementing devices in accordance with the present invention. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Now referring to <cross-reference target="DRAWINGS">FIG. 4, a</cross-reference> block diagram is provided for a more detailed embodiment <highlight><bold>400</bold></highlight>, according to the present invention. In this embodiment, vendor ID information is provided from a fixed source <highlight><bold>302</bold></highlight>, which provides predetermined ID information that cannot be programmed, and a programmable source <highlight><bold>310</bold></highlight>, which provides ID information that may be modified or programmed. In addition, this embodiment contemplates primary vendor and secondary vendor information, such that the source <highlight><bold>302</bold></highlight> provides primary vendor ID information, and source <highlight><bold>310</bold></highlight> provides secondary vendor information. It is noted that the any desired number of levels (e.g., primary, secondary, etc.) or types of vendor information may be provided and that any combination of fixed and programmable source vendor identification information may be utilized, as long as there exists on-chip programmable vendor identification circuitry that may be loaded at least in part with vendor identification information, according to the present invention. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The embodiment for the programmable vendor ID circuitry <highlight><bold>130</bold></highlight> within <cross-reference target="DRAWINGS">FIG. 4</cross-reference> includes control circuitry <highlight><bold>401</bold></highlight> that receives control signals <highlight><bold>312</bold></highlight> and outputs various control signals, including signals <highlight><bold>402</bold></highlight> to the vendor identification sources <highlight><bold>302</bold></highlight> and <highlight><bold>310</bold></highlight> and the REMAP signal <highlight><bold>416</bold></highlight>. The fixed primary ID information source <highlight><bold>302</bold></highlight> provides an output <highlight><bold>404</bold></highlight> to selection circuitry <highlight><bold>412</bold></highlight> and an output <highlight><bold>406</bold></highlight> to selection circuitry <highlight><bold>414</bold></highlight>. The programmable secondary ID information source <highlight><bold>310</bold></highlight> provides an output <highlight><bold>408</bold></highlight> to the selection circuitry <highlight><bold>412</bold></highlight> and directly to register <highlight><bold>308</bold></highlight>A within on-chip registers <highlight><bold>418</bold></highlight>. The programmable secondary ID information source <highlight><bold>310</bold></highlight> also provides an output <highlight><bold>410</bold></highlight> to the selection circuitry <highlight><bold>414</bold></highlight> and directly to register <highlight><bold>308</bold></highlight>B within on-chip registers <highlight><bold>418</bold></highlight>. The output of selection circuitry <highlight><bold>412</bold></highlight> is provided to register <highlight><bold>306</bold></highlight>A, and the output of selection circuitry <highlight><bold>414</bold></highlight> is provided to register <highlight><bold>306</bold></highlight>B. The registers <highlight><bold>306</bold></highlight>A, <highlight><bold>306</bold></highlight>B, <highlight><bold>308</bold></highlight>A, and <highlight><bold>308</bold></highlight>B are coupled through output paths <highlight><bold>314</bold></highlight>A, <highlight><bold>314</bold></highlight>B, <highlight><bold>316</bold></highlight>A, and <highlight><bold>316</bold></highlight>B, respectively, to selection circuitry <highlight><bold>420</bold></highlight>. The selection circuitry <highlight><bold>420</bold></highlight> is controlled by output control signal <highlight><bold>421</bold></highlight> and provides the contents of the selected register as register output <highlight><bold>422</bold></highlight>. The selection circuitry <highlight><bold>412</bold></highlight> and selection circuitry <highlight><bold>414</bold></highlight> are both controlled by the REMAP signal <highlight><bold>416</bold></highlight>. It is noted that selection circuitry <highlight><bold>412</bold></highlight>, <highlight><bold>414</bold></highlight> and <highlight><bold>420</bold></highlight> may be for example multiplexers that between multiple inputs based upon control signals. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> It is noted that each of the registers <highlight><bold>306</bold></highlight>A, <highlight><bold>306</bold></highlight>B, <highlight><bold>308</bold></highlight>A and <highlight><bold>308</bold></highlight>B may be, for example, 16-bit registers, including two 8-bit bytes of information with one byte representing the most significant byte (MSB) and the other byte representing the least significant byte (LSB). In addition, the registers <highlight><bold>306</bold></highlight>A, <highlight><bold>306</bold></highlight>B, <highlight><bold>308</bold></highlight>A and <highlight><bold>308</bold></highlight>B may represent only a portion of the registers within on-chip registers <highlight><bold>418</bold></highlight>. For example, in the AC97 specification, there are numerous predefined registers that are designated to hold various types of information. Two of these registers are designated to hold vendor identification information. In the AC97 specification, these two predefined registers are designated 7C and 7E. In the embodiment of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, register <highlight><bold>306</bold></highlight>A may be understood to represent AC97 register 7C, and register <highlight><bold>306</bold></highlight>B may be understood to represent AC97 register 7E. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> According to the present invention, registers 7C and 7E are programmable, such that vendor ID information provided at least in part from an off-chip source may be loaded into the registers <highlight><bold>306</bold></highlight>A and <highlight><bold>306</bold></highlight>B. In contrast, conventional AC97 devices have hard-wired or fixed vendor ID information that is supplied to the registers 7C and 7E. In addition, according to the present invention, additional registers <highlight><bold>308</bold></highlight>A and <highlight><bold>308</bold></highlight>B are provided. If desired, they may be given designations with the AC97 scheme, such as <highlight><bold>76</bold></highlight> and <highlight><bold>78</bold></highlight>. The purpose of additional registers <highlight><bold>308</bold></highlight>A and <highlight><bold>308</bold></highlight>B is to provide additional space for receiving and storing vendor ID information. More particularly, these registers <highlight><bold>308</bold></highlight>A and <highlight><bold>308</bold></highlight>B may be utilized in conjunction with registers <highlight><bold>306</bold></highlight>A and <highlight><bold>306</bold></highlight>B to provide information for multiple vendors. For example, registers <highlight><bold>306</bold></highlight>A and <highlight><bold>306</bold></highlight>B may be utilized to store vendor information for a company that manufactured the basic AC97 device, such as DAA circuitry as depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. Registers <highlight><bold>308</bold></highlight>A and <highlight><bold>308</bold></highlight>B may then be utilized to store vendor information for a company that provides additional software features for the AC97 device, or that provides a hardware system configuration utilizing the AC97 device as a subset. It is again noted that the number of registers and how they are utilized may be modified, as desired, without departing from on-chip programmable vendor ID circuitry, according to the present invention. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> In operation of the embodiment <highlight><bold>400</bold></highlight> shown in <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the two sources of vendor ID information <highlight><bold>302</bold></highlight> and <highlight><bold>310</bold></highlight> provide information as to a primary vendor (e.g., the hardware manufacturer) and a secondary vendor (e.g., the software enhancements supplier). In the embodiment shown, registers <highlight><bold>308</bold></highlight>A and <highlight><bold>308</bold></highlight>B are always loaded with secondary ID information from source <highlight><bold>310</bold></highlight>. Registers <highlight><bold>306</bold></highlight>A and <highlight><bold>306</bold></highlight>B may be loaded either from source <highlight><bold>302</bold></highlight> or from source <highlight><bold>310</bold></highlight>, depending upon the state of REMAP signal <highlight><bold>416</bold></highlight> that controls the MUX <highlight><bold>412</bold></highlight> and the MUX <highlight><bold>414</bold></highlight>. As contemplated in the embodiment, the REMAP signal <highlight><bold>416</bold></highlight> is asserted to select the secondary ID information source <highlight><bold>310</bold></highlight> if it is desired to remap the primary ID registers <highlight><bold>306</bold></highlight>A and <highlight><bold>306</bold></highlight>B to hold the secondary ID information. The default condition is expected to be for the primary ID registers <highlight><bold>306</bold></highlight>A and <highlight><bold>306</bold></highlight>B to be loaded with the primary ID information from source <highlight><bold>302</bold></highlight>. This REMAP feature helps to provide compatibility with legacy systems that only have functionality to read information from a limited number of registers, such as the two vendor ID registers 7C and 7E in the AC97 specification. It is again noted that the number of sources and how they are utilized may be selected as desired to load on-chip programmable vendor ID circuitry <highlight><bold>130</bold></highlight>, according to the present invention. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram of an embodiment <highlight><bold>500</bold></highlight> utilizing programmable circuitry, such as an EEPROM <highlight><bold>220</bold></highlight>, to provide vendor identification information from an off-chip source, according to the present information. The dotted line represents the integrated circuit boundary for an integrated circuit portion of host-side DAA circuitry <highlight><bold>104</bold></highlight> from <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. The integrated circuit for DAA circuitry <highlight><bold>104</bold></highlight> includes an AC97 digital interface <highlight><bold>530</bold></highlight>, EEPROM state machine <highlight><bold>130</bold></highlight>A, vendor ID circuitry <highlight><bold>130</bold></highlight>B, and fixed ID information source <highlight><bold>510</bold></highlight>. External to the integrated circuit are the EEPROM <highlight><bold>220</bold></highlight> and an AC97 digital controller <highlight><bold>102</bold></highlight>B. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The pins connecting the EEPROM <highlight><bold>220</bold></highlight> and the EEPROM state machine <highlight><bold>130</bold></highlight>A include the DATA pin <highlight><bold>518</bold></highlight>, through which data, such as vendor ID information or control information, may be written to or read from the EEPROM <highlight><bold>220</bold></highlight>. The pins also include a CLK pin <highlight><bold>518</bold></highlight> through which the integrated circuit <highlight><bold>104</bold></highlight> may control input and output timing for the EEPROM <highlight><bold>220</bold></highlight>. These pins may also double as general purpose input/output (GPIO) pins on the integrated circuit. Thus, if other devices desire to utilize the pins for other purposes, they may do so. In particular, the pins may be utilized after the vendor ID information has been loaded into the on-chip programmable vendor ID circuitry <highlight><bold>130</bold></highlight>B. If this is to be done, connections <highlight><bold>522</bold></highlight> and <highlight><bold>524</bold></highlight> may be utilized to take advantage of the pins <highlight><bold>518</bold></highlight> and <highlight><bold>520</bold></highlight>. In addition, once on-chip, the connections <highlight><bold>526</bold></highlight> and <highlight><bold>528</bold></highlight> may be utilized to communicate this other device information to the rest of the integrated circuit <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> In addition, it is contemplated that the external programmable circuitry <highlight><bold>220</bold></highlight> may be programmed through the integrated circuit <highlight><bold>104</bold></highlight>. For example, the connections <highlight><bold>526</bold></highlight> and <highlight><bold>528</bold></highlight> may be connected to the AC97 digital interface <highlight><bold>530</bold></highlight>, as shown in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, so that the EEPROM <highlight><bold>220</bold></highlight> may be programmed through the AC97 digital interface <highlight><bold>530</bold></highlight>. More specifically, the external AC97 digital controller <highlight><bold>102</bold></highlight>B may configure the programmable circuitry <highlight><bold>220</bold></highlight> through the AC97 digital interface <highlight><bold>530</bold></highlight>. It is also noted that other circuitry could be provided, as desired, to provide for programming of the programmable circuitry <highlight><bold>220</bold></highlight> through the connections <highlight><bold>526</bold></highlight> and <highlight><bold>528</bold></highlight>. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The pins connecting the digital controller <highlight><bold>102</bold></highlight>B to the digital interface <highlight><bold>530</bold></highlight> include a reset (RESET_) pin <highlight><bold>532</bold></highlight>, a bit clock (BCLK) pin <highlight><bold>534</bold></highlight>, a synchronization (SYNC) pin <highlight><bold>536</bold></highlight>, a serial data output (SDO) pin <highlight><bold>538</bold></highlight>, and a serial data input (SDI) pin <highlight><bold>540</bold></highlight>. In the AC97 specification environment, the RESET_pin <highlight><bold>532</bold></highlight> is an active low input signal to the circuitry <highlight><bold>104</bold></highlight> that is used to reset all control registers to a defined, initialized state. The BCLK pin <highlight><bold>534</bold></highlight> is a serial port bit clock input/output signal that controls serial data input signals and serial data output signals. The BCLK pin <highlight><bold>534</bold></highlight> is an input to the circuitry <highlight><bold>104</bold></highlight> if the circuitry <highlight><bold>104</bold></highlight> is configured as a primary AC97 device, and is an output to the circuitry <highlight><bold>104</bold></highlight> if the circuitry <highlight><bold>104</bold></highlight> is configured as a secondary AC97 device. The SYNC pin <highlight><bold>536</bold></highlight> is an input signal to the circuitry <highlight><bold>104</bold></highlight> that is a data framing signal that is used to indicate the start and stop of a communication data frame. The SDO pin <highlight><bold>538</bold></highlight> provides serial communication and control data generated by the digital controller <highlight><bold>102</bold></highlight>B and presented as an input to the circuitry <highlight><bold>104</bold></highlight>. The SDI pin <highlight><bold>540</bold></highlight> provides serial communication and status data generated as an output signal by the circuitry <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> The digital interface <highlight><bold>530</bold></highlight> includes internal interface <highlight><bold>542</bold></highlight> through which digital interface <highlight><bold>530</bold></highlight> communicates with other chip circuitry. The digital interface <highlight><bold>530</bold></highlight> also has a reset signal (RESET) <highlight><bold>508</bold></highlight> and a initialize signal (INIT) <highlight><bold>506</bold></highlight> that are provided to the EEPROM state machine <highlight><bold>130</bold></highlight>A, which in turn provides information to the vendor ID circuitry <highlight><bold>130</bold></highlight>B along interface <highlight><bold>516</bold></highlight>. Fixed vendor ID information from source <highlight><bold>510</bold></highlight> may also be provided directly to the vendor ID circuitry <highlight><bold>130</bold></highlight>B along interface <highlight><bold>512</bold></highlight>, or first to the EEPROM state machine <highlight><bold>103</bold></highlight>A through interface <highlight><bold>514</bold></highlight>. It is noted that the suffix designation &ldquo;_&rdquo; for the RESET_pin <highlight><bold>532</bold></highlight> represents a signal that is active at a low logic level. It is further noted that the active low or active high status of any given signal may be modified as desired depending upon design considerations. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> By utilizing an external EEPROM configuration as depicted in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, cost is reduced over including EEPROM-type circuitry on the integrated circuit portion of the host-side DAA circuitry <highlight><bold>104</bold></highlight>. An EEPROM process is more expensive than a CMOS process, which is utilized to manufacture the integrated circuitry within the host-side DAA circuitry <highlight><bold>104</bold></highlight>. The solution of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, therefore, makes use of an inexpensive and small external EEPROM coupled to CMOS DAA circuitry with a serial interface to download identification data upon reset of the system or upon a command. The serial interface may be, for example, a 2-pin I<highlight><superscript>2</superscript></highlight>C-compatible interface. Example EEPROMs that may be used include an AT24C01 2-Wire Serial EEPROM available from Atmel Corporation. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> In operation of the embodiment of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, assuming that the vendor ID registers within the vendor ID circuitry <highlight><bold>103</bold></highlight>B are four 2-byte registers as discussed with respect to <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the EEPROM communication sequence may include reading 5 bytes from the EEPROM <highlight><bold>220</bold></highlight>. This may occur immediately after a cold reset, or also upon a software command, and the entire latency for completing this task may be about 2 ms. The following process steps are an example:  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="14PT" align="right"/>
<colspec colname="2" colwidth="203PT" align="left"/>
<thead>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>1.</entry>
<entry>Initialization - Initialization synchronizes the EEPROM 220 and the</entry>
</row>
<row>
<entry></entry>
<entry>EEPROM state machine 130A. The initialization step may be started</entry>
</row>
<row>
<entry></entry>
<entry>through the RESET signal 508, which is typically applied at</entry>
</row>
<row>
<entry></entry>
<entry>power-up or reboot, or started through the INIT signal 506,</entry>
</row>
<row>
<entry></entry>
<entry>which is typically applied by software command.</entry>
</row>
<row>
<entry>2.</entry>
<entry>Access Header Byte - After initialization, a first header byte is read</entry>
</row>
<row>
<entry></entry>
<entry>from the EEPROM 220. This header byte may be, for example,</entry>
</row>
<row>
<entry></entry>
<entry>one of two expected patterns. The header byte may identify whether</entry>
</row>
<row>
<entry></entry>
<entry>the primary registers 306A and 306B should be remapped to the</entry>
</row>
<row>
<entry></entry>
<entry>secondary ID information within the EEPROM 220, or should be</entry>
</row>
<row>
<entry></entry>
<entry>loaded with the default primary ID information 302.</entry>
</row>
<row>
<entry>3.</entry>
<entry>Access Bytes 2 and 3 - The next two bytes read from the EEPROM</entry>
</row>
<row>
<entry></entry>
<entry>220 are utilized to load the secondary register 308A with 16-bits of</entry>
</row>
<row>
<entry></entry>
<entry>information. (If the header byte indicates that a remap should occur,</entry>
</row>
<row>
<entry></entry>
<entry>the primary register 306A is loaded with the same information as the</entry>
</row>
<row>
<entry></entry>
<entry>secondary register 308A.)</entry>
</row>
<row>
<entry>4.</entry>
<entry>Access Bytes 4 and 5 - The final two bytes read from the EEPROM</entry>
</row>
<row>
<entry></entry>
<entry>220 are utilized to load the secondary register 308B with 16-bits of</entry>
</row>
<row>
<entry></entry>
<entry>information. (If the header byte indicates that a remap should occur,</entry>
</row>
<row>
<entry></entry>
<entry>the primary register 306B is loaded with the same information as the</entry>
</row>
<row>
<entry></entry>
<entry>secondary register 308B.)</entry>
</row>
<row>
<entry>5.</entry>
<entry>End Process - Once the five bytes of information are read from the</entry>
</row>
<row>
<entry></entry>
<entry>EEPROM 220, the vendor ID load procedure is completed.</entry>
</row>
<row>
<entry></entry>
<entry>Subsequently, the information stored in the vendor ID circuitry 308B</entry>
</row>
<row>
<entry></entry>
<entry>may be output or reported through output 422.</entry>
</row>
<row><entry namest="1" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> It is noted that during each of the process cycle steps identified above, the EEPROM state machine <highlight><bold>130</bold></highlight>A analyzes whether there are any contentions on the pins <highlight><bold>518</bold></highlight> and <highlight><bold>520</bold></highlight>. The EEPROM state machine will interpret as a contention any signal on the pins <highlight><bold>518</bold></highlight> and <highlight><bold>520</bold></highlight> that is detected as having a logic level opposite of how the EEPROM state machine is trying to drive the pins. In addition, the EEPROM state machine <highlight><bold>130</bold></highlight>A confirms that the responses, such as the header information and acknowledge information, it is receiving from the EEPROM match expected responses. If not, the vendor ID load process may be stopped. The EEPROM state machine <highlight><bold>130</bold></highlight>A, therefore, has error checking mechanisms to help make sure that it does not respond to signals on pins <highlight><bold>518</bold></highlight> and <highlight><bold>520</bold></highlight> that were not intended for the EEPROM state machine <highlight><bold>130</bold></highlight>A. This situation could occur, for example, if another device, such as an audio amplifier, is utilizing one of the pins <highlight><bold>518</bold></highlight> and <highlight><bold>520</bold></highlight> through external connections <highlight><bold>522</bold></highlight> and <highlight><bold>524</bold></highlight>. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> It is further noted that the process steps set forth above may be modified, as desired, depending upon the external device used to provide vendor ID information to the on-chip programmable vendor ID circuitry. For example, if a EEPROM is utilized as depicted in <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the process steps may change depending upon the particular EEPROM utilized. In addition, each EEPROM may have its own set of interface requirements and control signals. Thus, the examples provided in this description should be taken as examples and not as limiting the present invention. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> As noted above with respect to <cross-reference target="DRAWINGS">FIG. 1</cross-reference>, the vendor identification information <highlight><bold>124</bold></highlight> may include on-chip information, for example, information stored in a look-up table, and this information may be selected and stored in ID registers based at least in part upon external control signals. In the example discussed above, these external control signals were implemented as digital signals that could be provided to the integrated circuit, for example, a 2-bit control word communicated through a 2-pin interface. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6A</cross-reference> illustrates a block diagram of an example embodiment <highlight><bold>600</bold></highlight> that utilizes an analog control signal generator <highlight><bold>650</bold></highlight> to create the external control signal <highlight><bold>652</bold></highlight> that is provided to programmable ID information circuitry <highlight><bold>651</bold></highlight> and that is utilized to cause identification information from a database, registry or look-up table to be selected, accessed and utilized. The embodiment <highlight><bold>600</bold></highlight> includes a host processor <highlight><bold>102</bold></highlight> that is coupled to direct-access-arrangement (DAA) circuitry <highlight><bold>112</bold></highlight> through an interface <highlight><bold>110</bold></highlight>. The DAA circuitry <highlight><bold>112</bold></highlight> is configured to allow the host processor <highlight><bold>102</bold></highlight> to communicate with the tip (T) <highlight><bold>118</bold></highlight> and ring (R) <highlight><bold>120</bold></highlight> of a telephone line. The DAA circuitry <highlight><bold>112</bold></highlight> includes host-side DAA circuitry <highlight><bold>104</bold></highlight>, an isolation barrier <highlight><bold>106</bold></highlight>, line-side DAA circuitry <highlight><bold>108</bold></highlight>, and isolation communication interfaces <highlight><bold>114</bold></highlight> and <highlight><bold>116</bold></highlight>. The host-side DAA circuitry <highlight><bold>104</bold></highlight> and line-side DAA circuitry <highlight><bold>108</bold></highlight> may each include a single integrated circuit. And the DAA circuitry <highlight><bold>112</bold></highlight> can include programmable on-chip ID information circuitry <highlight><bold>651</bold></highlight> within an integrated circuit portion of host-side DAA circuitry <highlight><bold>104</bold></highlight>. </paragraph>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> As shown with respect to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>B, the programmable circuitry <highlight><bold>651</bold></highlight> may include an ADC <highlight><bold>662</bold></highlight>, control circuitry <highlight><bold>665</bold></highlight>, information look-up table <highlight><bold>664</bold></highlight>, and ID registers <highlight><bold>668</bold></highlight>. The voltage control signal <highlight><bold>652</bold></highlight> can be converted to a digital number by ADC <highlight><bold>662</bold></highlight>, and the control circuitry <highlight><bold>665</bold></highlight> can then associate or map the digital number to a given vendor or system identification information that is stored in the look-up table <highlight><bold>664</bold></highlight>. Thus, when the DAA circuitry <highlight><bold>112</bold></highlight> reports ID information to the host processor <highlight><bold>102</bold></highlight>, for example, when device drivers are required to be installed in a plug-and-play operating system environment, the proper ID information may be provided even though there are a number of configurations for the hardware and software that provides the functionality of the DAA circuitry <highlight><bold>112</bold></highlight>. </paragraph>
<paragraph id="P-0044" lvl="0"><number>&lsqb;0044&rsqb;</number> For example, a modem vendor may want to produce a single product with a number of different configurations based upon selectable software feature set. Utilizing the DAA circuitry <highlight><bold>112</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>A, the modem vendor may in fact utilize a single design for manufacture of a product, yet have these different product configurations report different vendor and system ID information based upon the analog control signal provided by generator <highlight><bold>650</bold></highlight>. In this way, different products with different features and at different costs may be provided to customers without having to alter the basic product design. In addition, the modem vendor may utilize the vendor ID information to allow for different hardware configurations. For example, a modem vendor may manufacture printed circuit boards that have multiple possible configurations that support integrated circuits mounted on the printed circuit boards. The vendor ID information may be utilized to install a driver setting that matches the integrated circuit operation to the particular board configuration. Still further, as indicated above, the vendor ID information may allow for particular drivers to be loaded for the modem product, for example, during a boot-up sequence for a personal computer. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> Looking again to the embodiment of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>B, the analog control signal <highlight><bold>652</bold></highlight> is received by an analog to digital converter (&ldquo;ADC&rdquo;) <highlight><bold>662</bold></highlight> which converts the signal to a digital number, such as a five-bit number, that is usable as selection identification information. This digital number is then provided to control circuitry <highlight><bold>665</bold></highlight>, which utilizes the selection identification information to access appropriate information stored with the look-up table <highlight><bold>664</bold></highlight>. The digital number from the ADC <highlight><bold>662</bold></highlight> varies depending on the analog control signal <highlight><bold>652</bold></highlight>, which can be selectively generated based upon the selection information that is desired to be provided. Once accessed, the identification information within the look-up table <highlight><bold>664</bold></highlight> can be stored in an appropriate registry, as contemplated by the PCI local bus standard and the AC97 specification, or it can be directly reported through interface <highlight><bold>110</bold></highlight> to an external device, such as host processor <highlight><bold>102</bold></highlight>. </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6B</cross-reference> shows an example embodiment for generating a voltage signal as the analog control signal <highlight><bold>652</bold></highlight>. A simple voltage divider circuit is created between supply (Vdd) and ground using two resistors <highlight><bold>656</bold></highlight> and <highlight><bold>658</bold></highlight> (R<highlight><bold>1</bold></highlight> and R<highlight><bold>2</bold></highlight>). The resulting voltage signal <highlight><bold>652</bold></highlight> can then be applied to the integrated circuit <highlight><bold>104</bold></highlight>, for example, through a single ID pin <highlight><bold>654</bold></highlight>. It should be appreciated, however, that the voltage signal can be any analog signal, and need not necessarily be a voltage signal. It is further noted that other techniques for generating a voltage value can be used, as desired, instead of the simple resistor divider circuit depicted in <cross-reference target="DRAWINGS">FIG. 6B</cross-reference>. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> The resolution of the ADC <highlight><bold>662</bold></highlight> can be implemented as desired and can be set depending upon the number of selection options that are desired for the look-up table or other on-chip processing that is to be accomplished utilizing the analog control signal. For example, a three-bit digital output will provide for eight unique selection numbers which can map to eight unique vendor information data entries in a look-up table. An example selection map is illustrated in the following representative table with the resistor values being chosen to generate the desired control voltage value, such that when it is converted, the desired identification information will be accessed. In TABLE 1, the selectable identification information is assumed to be a subsystem vendor identification (SVID) and a subsystem identification (SSID) that relate to the PCI local bus standard.  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217PT" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" align="center">TABLE 1</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="1" align="center" rowsep="1"></entry>
</row>
<row>
<entry>EXAMPLE SELECTION MAPPING</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="OFFSET" colwidth="14PT" align="left"/>
<colspec colname="1" colwidth="56PT" align="center"/>
<colspec colname="2" colwidth="77PT" align="center"/>
<colspec colname="3" colwidth="21PT" align="center"/>
<colspec colname="4" colwidth="49PT" align="center"/>
<tbody valign="top">
<row>
<entry></entry>
<entry></entry>
<entry>Digital Output</entry>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry>R1 and R2 Values</entry>
<entry>from ADC</entry>
<entry>SVID</entry>
<entry>SSID</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="4" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry>Set 1</entry>
<entry>0</entry>
<entry>X1</entry>
<entry>Y1</entry>
</row>
<row>
<entry></entry>
<entry>Set 2</entry>
<entry>1</entry>
<entry>X1</entry>
<entry>Y2</entry>
</row>
<row>
<entry></entry>
<entry>Set 3</entry>
<entry>2</entry>
<entry>X2</entry>
<entry>Y1</entry>
</row>
<row>
<entry></entry>
<entry>Set 4</entry>
<entry>3</entry>
<entry>X2</entry>
<entry>Y2</entry>
</row>
<row>
<entry></entry>
<entry>Set 5</entry>
<entry>4</entry>
<entry>X3</entry>
<entry>Y1</entry>
</row>
<row>
<entry></entry>
<entry>Set 6</entry>
<entry>5</entry>
<entry>X3</entry>
<entry>Y2</entry>
</row>
<row>
<entry></entry>
<entry>Set 7</entry>
<entry>6</entry>
<entry>X4</entry>
<entry>Y1</entry>
</row>
<row>
<entry></entry>
<entry>Set 8</entry>
<entry>7</entry>
<entry>X4</entry>
<entry>Y2</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="4" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> For this particular table, each of the 8 possible selection numbers maps to both SVID and SSID information. In this table, each set of resistor values determine an analog voltage control signal that is converted to a digital number that in turn corresponds to a given set of SVID and SSID information. As an example, this table provides four different SVIDs (X1, X2, X3, X4) and two different SSIDs (Y1-Y2) for each of these SVIDs. This example would handle circumstances were the product was to be used with four different vendors, each of which were using one of two specific subsystem configurations. It is again noted that the 3-bit example and table set forth above should be taken solely as exemplary. For example, if a five-bit ADC were utilized, there would be 32 possible selections numbers, thereby providing 32 unique numbers that could be utilized to select and access data stored in a look-up table or other database. Furthermore, if two (or more) pins are utilized, for example by employing two resister configurations which each provide a given voltage control signal, then the two signals may be provided to separate ADCs, such as shown in <cross-reference target="DRAWINGS">FIG. 8</cross-reference>B, and discussed below, whereby each digital number from each ADC may be used to access stored identification information. In addition, differential signaling could be utilized, if desired. For example, if a single-input differential configuration were used, two input pins could together provide a differential analog input such that a positive-side differential analog control signal is applied to the first pin and a negative-side differential analog control signals is applied to the second pin. And the ADC would in turn be configured as a differential ADC to receive the differential input and output a digital selection value. </paragraph>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> It is further noted that other information or sets of information could be selected and accessed using the present invention, and the present invention is not necessarily limited to providing identification information for PCI local bus standards or for AC97 standards. For example, the present invention could be utilized for Ethernet network-related integrated circuits to provide information such as network addresses and device IDs, and the present invention could be used in storage solutions to provide information such as storage addresses and device IDs. Thus, the present invention provides a flexible solution for providing programmable information through the use of one or more externally generated analog control signals that are mapped to information stored within the integrated circuit, for example, in an on-chip look-up table or other suitable database that meets the particular needs of the desired application. And these analog control signals, if desired, can be used by themselves for identification, configuration or other device information purposes for the integrated circuit without the use of information from an on-chip look-up table or database. The use of analog control signals for integrated circuit identification, configuration or device information purposes according to the present invention tends to reduce costs by reducing the need for external EEPROM or other more complicated and expensive circuitry that provides identification and/or configuration information to an integrated circuit. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> Returning to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>B, within the host-side DAA circuitry <highlight><bold>104</bold></highlight>, the digital number output from the ADC <highlight><bold>662</bold></highlight> is used by the control circuitry <highlight><bold>665</bold></highlight> to locate particular vendor or system identification information from the look-up table <highlight><bold>664</bold></highlight>. The look-up table <highlight><bold>664</bold></highlight> is preferably integrated as part of the integrated circuit <highlight><bold>104</bold></highlight>, but the identification information could also be stored in an external device that is accessed by the control circuitry <highlight><bold>665</bold></highlight>. The control circuitry <highlight><bold>665</bold></highlight> may then store this retrieved identification information in ID registers <highlight><bold>668</bold></highlight>, from which the ID information can be reported when an appropriate query is communicated to the integrated circuit <highlight><bold>104</bold></highlight>. Alternatively, the data from the look-up table <highlight><bold>664</bold></highlight> can be sent directly to an external device upon an appropriate query without that information also being stored in separate ID registers <highlight><bold>668</bold></highlight>. In this alternative embodiment, the digital value from the ADC <highlight><bold>662</bold></highlight> may be stored by the programmable ID information circuitry <highlight><bold>651</bold></highlight> and utilized when a query is made to obtain ID information. In this way, for example, host processor <highlight><bold>102</bold></highlight> can request ID information, and the control circuitry <highlight><bold>665</bold></highlight> can use the stored digital value from the ADC <highlight><bold>662</bold></highlight> to access and retrieve the appropriate information from the look-up table <highlight><bold>664</bold></highlight>. </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> In resistor configuration <highlight><bold>650</bold></highlight> of <cross-reference target="DRAWINGS">FIG. 6</cross-reference>B, the signal created by the first and second resistors <highlight><bold>656</bold></highlight> and <highlight><bold>658</bold></highlight> is of a given voltage that is specific to the relative resistances of resistors <highlight><bold>656</bold></highlight> and <highlight><bold>658</bold></highlight>. The signal <highlight><bold>652</bold></highlight> is sent to ADC <highlight><bold>662</bold></highlight> through identification pin <highlight><bold>654</bold></highlight> of the integrated circuit <highlight><bold>104</bold></highlight>. The voltage value for the signal <highlight><bold>652</bold></highlight> can be readily changed by varying the resistors <highlight><bold>656</bold></highlight> and <highlight><bold>658</bold></highlight> and selecting the combination of first and second resistors <highlight><bold>656</bold></highlight> and <highlight><bold>658</bold></highlight> that produce a desired voltage for signal <highlight><bold>652</bold></highlight>. Once this voltage signal <highlight><bold>652</bold></highlight> is converted by ADC <highlight><bold>662</bold></highlight> to a digital number, the digital number may be mapped to the look-up table <highlight><bold>664</bold></highlight> to thereby select and retrieve identification information stored in the look-up table. Thus, as shown in TABLE 1 above, the resistor configuration <highlight><bold>650</bold></highlight> lends itself to the use of two or more sets of resistor pairs from which a selected pair is strapped to the ID pin <highlight><bold>654</bold></highlight> to produce a desired voltage signal <highlight><bold>652</bold></highlight>. In practice, therefore, if a change in vendor or system identification information is desired, a different set of resistors can then be strapped on the ID pin <highlight><bold>654</bold></highlight> so that a different voltage signal is provided to the ADC <highlight><bold>662</bold></highlight>, which in turn converts the signal to a different digital number. This new digital number is then compared in the look-up table to provide new identification information. It is again noted that multiple ID pins with associated multiple pairs of resistors may be employed if more extensive vendor identification information is desired. It is also again noted that the resistor circuit shown in <cross-reference target="DRAWINGS">FIG. 6B</cross-reference> is just one example and other resistor-based or more complex circuits may be used as desired to generate an analog control signal. </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a block diagram of an embodiment <highlight><bold>700</bold></highlight> of the present invention where the ID information relates to the ID information that meets the PCI local bus standard. In this embodiment, a computer system <highlight><bold>700</bold></highlight> is depicted that includes a central processing unit (CPU) <highlight><bold>702</bold></highlight>A that may be coupled to various other devices through an interfaces or buses <highlight><bold>714</bold></highlight>, as would be understood to one of skill in the art. For example, the CPU <highlight><bold>702</bold></highlight>A may be coupled to a memory device <highlight><bold>704</bold></highlight>, a storage device <highlight><bold>706</bold></highlight>, a display device <highlight><bold>708</bold></highlight>, an input device <highlight><bold>710</bold></highlight>, and/or other devices. In addition, CPU <highlight><bold>702</bold></highlight>A may be coupled to a PCI bus controller <highlight><bold>702</bold></highlight>B that is configured to meet PCI local bus operational specifications. It is noted that although the digital controller <highlight><bold>702</bold></highlight>B is shown as a separate block in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the PCI control functionality may be located anywhere desired, including on an integrated circuit that is also the CPU <highlight><bold>702</bold></highlight>A. It is also noted that the CPU <highlight><bold>702</bold></highlight>A and the PCI bus controller <highlight><bold>702</bold></highlight>B may together or individually be the host processor <highlight><bold>102</bold></highlight> in <cross-reference target="DRAWINGS">FIGS. 1 and 6</cross-reference>A, as desired. </paragraph>
<paragraph id="P-0053" lvl="0"><number>&lsqb;0053&rsqb;</number> Referring again to <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the PCI bus controller <highlight><bold>702</bold></highlight>B is coupled to integrated PCI device circuitry <highlight><bold>712</bold></highlight> through interface <highlight><bold>704</bold></highlight>. As with the digital controller <highlight><bold>702</bold></highlight>B, the device circuitry <highlight><bold>712</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is configured to meet the PCI local bus standards. According to the present invention, the device circuitry <highlight><bold>712</bold></highlight> may include at least one integrated circuit that has programmable system identification circuitry. The programmable circuitry may include an on-chip look-up table <highlight><bold>664</bold></highlight> that holds the vendor ID or other system information or, alternatively, this information, if off-chip, may be suitably coupled to the control circuitry <highlight><bold>665</bold></highlight>. In the embodiment depicted in <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the PCI device circuitry <highlight><bold>712</bold></highlight> includes the vendor ID information in look-up table <highlight><bold>664</bold></highlight>. As discussed above, the analog control signal generator <highlight><bold>650</bold></highlight> provides an analog control signal <highlight><bold>652</bold></highlight> to the PCI device circuitry <highlight><bold>712</bold></highlight>. An ADC <highlight><bold>662</bold></highlight> can then be used to convert this analog signal to a digital value that can be used by the control circuitry <highlight><bold>665</bold></highlight> to access stored information, such as information stored in the information look-up table <highlight><bold>664</bold></highlight>. If desired, the control circuitry <highlight><bold>665</bold></highlight> may load ID registers <highlight><bold>668</bold></highlight> with information from the look-up table <highlight><bold>664</bold></highlight>. The PCI device circuitry <highlight><bold>712</bold></highlight> may then use the contents of these ID registers <highlight><bold>668</bold></highlight> to report information to external devices through the interface <highlight><bold>704</bold></highlight>. It is also noted that the controller <highlight><bold>702</bold></highlight>B and the device circuitry <highlight><bold>712</bold></highlight> could be implemented and designed, as desired, for other interfaces or communication protocols, such as the AC97 interface as discussed above. </paragraph>
<paragraph id="P-0054" lvl="0"><number>&lsqb;0054&rsqb;</number> <cross-reference target="DRAWINGS">FIGS. 8A and 8B</cross-reference> show two further embodiments <highlight><bold>800</bold></highlight> and <highlight><bold>850</bold></highlight>, respectively, of the present invention that can employ analog control signals and can employ resistor configurations to generate those analog control signals. In <cross-reference target="DRAWINGS">FIG. 8A, a</cross-reference> signal from resistor configuration <highlight><bold>650</bold></highlight> is provided to ADC <highlight><bold>662</bold></highlight>, which is a part of the vendor identification circuitry and integrated circuit <highlight><bold>712</bold></highlight>. The ADC <highlight><bold>662</bold></highlight> converts the analog signal to a digital number which maps to vendor ID information in a look-up table. The output from the look-up table is provided to SVID and SSID registers <highlight><bold>668</bold></highlight>A and <highlight><bold>668</bold></highlight>B that can store the accessed information for quick retrieval. When a request for ID information is received by integrated circuit <highlight><bold>712</bold></highlight>, the ID information can be retrieved from the SVID and SSID registers <highlight><bold>668</bold></highlight>A and <highlight><bold>668</bold></highlight>B and then provided externally to the PCI bus <highlight><bold>822</bold></highlight> through the PCI interface <highlight><bold>820</bold></highlight>. It is again noted that although a SVID and SSID registers are discussed herein, any number of registers or other circuitry configured to receive and store identification information could be utilized, as desired by one implementing devices in accordance with the present invention. It is further noted that the information stored on-chip and then selected and accessed using the analog control signal can be any desired device identification, configuration or system related information and is not necessarily limited to vendor or system identification information. </paragraph>
<paragraph id="P-0055" lvl="0"><number>&lsqb;0055&rsqb;</number> In <cross-reference target="DRAWINGS">FIG. 8B, a</cross-reference> multiple resistor configurations <highlight><bold>650</bold></highlight>A and <highlight><bold>650</bold></highlight>B are shown which send analog signals <highlight><bold>652</bold></highlight>A and <highlight><bold>652</bold></highlight>B to ADC<highlight><bold>1</bold></highlight> <highlight><bold>662</bold></highlight>A and ADC<highlight><bold>2</bold></highlight> <highlight><bold>662</bold></highlight>B, respectively. The digital numbers from ADCs <highlight><bold>662</bold></highlight>A and <highlight><bold>662</bold></highlight>B are again sent to look-up tables, where vendor ID information is accessed. This ID information can then be stored in the SVID register <highlight><bold>668</bold></highlight>A and the SSID register <highlight><bold>668</bold></highlight>B. As with <cross-reference target="DRAWINGS">FIG. 8</cross-reference>A, when a request for ID information is received by integrated circuit <highlight><bold>712</bold></highlight>, the ID information can be retrieved from the SVID and SSID registers <highlight><bold>668</bold></highlight>A and <highlight><bold>668</bold></highlight>B and then provided externally to the PCI bus <highlight><bold>822</bold></highlight> through the PCI interface <highlight><bold>820</bold></highlight>. Thus, if desired, multiple analog control signals can be utilized, and each analog control signal can effect a selection of specific information from the same or separate look-up table. Further, the PCI interfaces <highlight><bold>820</bold></highlight> and registers <highlight><bold>668</bold></highlight> and <highlight><bold>668</bold></highlight>A-B in FIGS. <highlight><bold>8</bold></highlight>A-B can be implemented and designed, as desired, for other interfaces or communication protocols, such as an AC97 interface. </paragraph>
<paragraph id="P-0056" lvl="0"><number>&lsqb;0056&rsqb;</number> It is noted that the use of analog control signals to select configuration, identification or other information stored within an integrated circuit, according to an aspect of the present invention, may be implemented in a variety ways. One or more analog control signals may be used. One or more input pins may be used to provide these signals to the integrated circuit. For example, an external multiplexer could be used to alternatively couple one of multiple analog control signals to a single input pin for the integrated circuit. In another implementation, multiple analog control signals could be received through multiple input pins for the integrated circuit. Once received, the analog signals could be converted using one or more ADCs, and again multiplexer circuitry could be used to provide shared access to one or more these ADCs. The digital values output by the ADCs can then be used in a variety of ways to access and utilize information stored within the integrated circuit, such as information stored in a look-up table. Furthermore, a single digital value can be used to access a single set of database, as described with respect to TABLE 1 above. Alternatively, two or more digital values could be utilized in conjunction to determine what data is accessed, and the configuration or identification information can be stored in any efficient manner, as desired, from a simple look-up table to a complex database structure. In short, there are a wide range of possible implementations for utilizing an analog control signal that acts to select on-chip identification information once converted to a digital value, thereby take advantage of the present invention. Still further, if desired, the digital value itself can be used for identification, configuration or other device information purposes for the integrated circuit without utilizing information form an on-chip look-up table or database of identification, configuration or other desired information. </paragraph>
<paragraph id="P-0057" lvl="0"><number>&lsqb;0057&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is an example embodiment <highlight><bold>900</bold></highlight> of such an implementation that utilizes an analog control signal generator circuitry <highlight><bold>650</bold></highlight> that includes multiple individual analog control signal generators <highlight><bold>650</bold></highlight>A, <highlight><bold>650</bold></highlight>B . . . <highlight><bold>650</bold></highlight>C that are multiplexed to share single input pin <highlight><bold>654</bold></highlight> for the integrated circuit <highlight><bold>712</bold></highlight>. In the embodiment depicted, the generator <highlight><bold>650</bold></highlight>A, <highlight><bold>650</bold></highlight>B . . . <highlight><bold>650</bold></highlight>C output analog control signals <highlight><bold>652</bold></highlight>A, <highlight><bold>652</bold></highlight>B . . . <highlight><bold>652</bold></highlight>C, respectively, which are in turn received by a multiplexer <highlight><bold>906</bold></highlight>. A control signal <highlight><bold>902</bold></highlight> is provided to the multiplexer <highlight><bold>906</bold></highlight> to determine which of the inputs are provided as an output of the multiplexer <highlight><bold>906</bold></highlight> to the pin <highlight><bold>654</bold></highlight>. The ADC <highlight><bold>662</bold></highlight> receives this analog signal and converts it to a digital signal <highlight><bold>908</bold></highlight> that is received by control circuitry <highlight><bold>665</bold></highlight>. The control circuitry <highlight><bold>665</bold></highlight> may use this digital signal <highlight><bold>908</bold></highlight> to obtain information from any of a plurality of different databases <highlight><bold>664</bold></highlight>A, <highlight><bold>664</bold></highlight>B, <highlight><bold>664</bold></highlight>C . . . , and the control circuitry may store information from these databases in any of a plurality of device information registers <highlight><bold>668</bold></highlight>A, <highlight><bold>668</bold></highlight>B, <highlight><bold>668</bold></highlight>C . . . , as desired. The databases may hold identification information, configuration information, operational parameters or other device information, as desired. In addition, if desired, the control circuitry <highlight><bold>665</bold></highlight> can store the digital signals received at node <highlight><bold>908</bold></highlight> as digital values <highlight><bold>904</bold></highlight>A, <highlight><bold>904</bold></highlight>B . . . <highlight><bold>904</bold></highlight>C in an appropriate register or database <highlight><bold>904</bold></highlight>. As discussed above, these stored digital values may be used for later retrieval of information from any of the plurality of databases <highlight><bold>664</bold></highlight>A, <highlight><bold>664</bold></highlight>B, <highlight><bold>664</bold></highlight>C . . . and this information may be used directly without first being stored in the registers <highlight><bold>668</bold></highlight>A, <highlight><bold>668</bold></highlight>B, <highlight><bold>668</bold></highlight>C . . . or may be used after first being stored in these registers. Still further, the digital values <highlight><bold>904</bold></highlight>A, <highlight><bold>904</bold></highlight>B . . . <highlight><bold>904</bold></highlight>C can be used individually or in combination by themselves without use of device information from the look-up tables or databases <highlight><bold>664</bold></highlight>A, <highlight><bold>664</bold></highlight>B, <highlight><bold>664</bold></highlight>C . . . , and in such an implementation, these digital values <highlight><bold>904</bold></highlight>A, <highlight><bold>904</bold></highlight>B . . . <highlight><bold>904</bold></highlight>C can still be stored into a register or database <highlight><bold>904</bold></highlight>, if desired, or stored directly into one or more of the device information registers <highlight><bold>668</bold></highlight>A, <highlight><bold>668</bold></highlight>B, <highlight><bold>668</bold></highlight>C . . . </paragraph>
<paragraph id="P-0058" lvl="0"><number>&lsqb;0058&rsqb;</number> It is noted that the control signal <highlight><bold>902</bold></highlight> in <cross-reference target="DRAWINGS">FIG. 9</cross-reference> can be utilized in a number of ways to allow for the communication of analog control signals to the integrated circuit <highlight><bold>712</bold></highlight>. For example, the control signal <highlight><bold>902</bold></highlight> may be fixed to select only one of the analog control signals <highlight><bold>652</bold></highlight>A, <highlight><bold>652</bold></highlight>B . . . <highlight><bold>652</bold></highlight>C, such that the integrated circuit utilizes only one analog control signal for its operation. Alternatively, each of the analog control signals can be provided to the integrated circuit <highlight><bold>712</bold></highlight> for its operations. This transfer of each analog control signal can be accomplished utilizing any desired protocol. For example, the control signal <highlight><bold>902</bold></highlight> may be controlled such that it cycles from 1 to N to select each analog control signal <highlight><bold>652</bold></highlight>A, <highlight><bold>652</bold></highlight>B . . . <highlight><bold>652</bold></highlight>C and to alternate between these analog signals and a zero level signal. In this way, the integrated circuit <highlight><bold>712</bold></highlight> could be pre-configured to recognize each zero level as indicating a transition to the next analog control signal. Alternatively, additional pins, such as a 3-pin serial port interface, could be utilized on the integrated circuit to provide for appropriate control signals for the integrated circuit <highlight><bold>712</bold></highlight>. </paragraph>
<paragraph id="P-0059" lvl="0"><number>&lsqb;0059&rsqb;</number> Further modifications and alternative embodiments of this invention will be apparent to those skilled in the art in view of this description. Accordingly, this description is to be construed as illustrative only and is for the purpose of teaching those skilled in the art the manner of carrying out the invention. It is to be understood that the forms of the invention herein shown and described are to be taken as the presently preferred embodiments. Various changes may be made in the shape, size and arrangement of parts. For example, equivalent elements may be substituted for those illustrated and described herein, and certain features of the invention may be utilized independently of the use of other features, all as would be apparent to one skilled in the art after having the benefit of this description of the invention. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. Direct-access-arrangement (DAA) circuitry, comprising: 
<claim-text>a digital interface within an integrated circuit configured to provide communication with an external processor; </claim-text>
<claim-text>a database within the integrated circuit, the database having identification information stored within it; and </claim-text>
<claim-text>programmable circuitry within the integrated circuit coupled to receive a control signal from an external source, the programmable circuitry being configured to utilize identification information retrieved from the database based at least in part upon the control signal and to communicate the retrieved identification information to the external processor through the digital interface. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The DAA circuitry of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the control signal comprises a multiple-bit digital control signal received through two input pins of the integrated circuit, wherein the database comprises a look-up table configured to store multiple sets of vendor identification information, and wherein the digital control signal determines which set of vendor identification information is communicated to the external device. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The DAA circuitry of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, further comprising multiple vendor identification registers configured to store the selected set of vendor identification information. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The DAA circuitry of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the control signal comprises at least one analog control signal received through at least one input pin of the integrated circuit; and further comprising at least one analog-to-digital converter (ADC) within the integrated circuit coupled to receive the analog control signal and to provide a digital control signal as an output. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The DAA circuitry of <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein the database comprises a look-up table configured to store multiple sets of identification information, and wherein the digital control signal determines which set of identification information is communicated to the external device. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The DAA circuitry of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the digital interface is configured to operate within PCI local bus operational specifications or within AC97 operational specifications. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The DAA circuitry of <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein the programmable circuitry further comprises multiple registers, each capable of storing PCI or AC97 related system identification information retrieved from the look-up table. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The DAA circuitry of <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the analog control signal comprises a voltage control signal. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. Programmable information selection system for an integrated circuit, comprising: 
<claim-text>a database integrated within an integrated circuit, the database having a plurality of sets of information stored within it; and </claim-text>
<claim-text>programmable circuitry within the integrated circuit coupled to the database and coupled to receive at least one external analog control signal as an input, the programmable circuitry being configured to select from the sets of stored information depending at least in part upon the analog control signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The programmable information selection system of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the programmable circuitry comprises an analog to digital converter (ADC) having the analog control signal as an input, and control circuitry coupled to receive a digital selection value from the ADC. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The programmable information selection system of <dependent-claim-reference depends_on="CLM-00011">claim 10</dependent-claim-reference>, wherein the database comprises a look-up table and wherein the sets of information are stored within the look-up table as selectable rows of information, the digital selection value determining what data is accessed and stored in information registers. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The programmable information selection system of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein the information stored in the look-up table comprises system identification information according to the PCI local bus standard or the AC97 component specification. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The programmable information selection system of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the external analog control signal is a voltage signal. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The programmable information selection system of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the voltage signal is generated from resistor circuitry. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The programmable information selection system of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein multiple resistor configurations for the resistor circuitry are mapped to information stored in the database, such that a selection of one of the resistor configurations determines at least in part the information selected and utilized from the database. </claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The programmable information selection system of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the resistor circuitry comprises at least two resistors coupled together to form a resistor divider circuit, the resistor divider circuit providing the voltage control signal to the integrated circuit, and wherein the multiple resistor configurations comprises different sets of resistor values for the at least two resistors. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A computer system having direct-access-arrangement (DAA) circuitry configured to couple the computer system to telephone lines, comprising: 
<claim-text>a processor; </claim-text>
<claim-text>a digital controller coupled to the processor and configured to operate within PCI local bus operational specifications or within AC97 operational specifications; </claim-text>
<claim-text>digital-access-arrangement (DAA) circuitry including at least one integrated circuit, the DAA circuitry being coupled to the digital controller and configured to operate within PCI local bus operational specifications or within AC97 operational specifications; </claim-text>
<claim-text>a database within the integrated circuit, the database configured to store identification information; and </claim-text>
<claim-text>programmable circuitry included within the integrated circuit, the programmable circuitry being configured to retrieve identification information from the on-chip database based at least in part upon a control signal provided from a source external to the integrated circuit. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the programmable circuitry comprises multiple registers, each capable of storing identification information. </claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein the control signal comprises at least one analog control signal received through at least one input pin of the integrated circuit; and further comprising at least one analog-to-digital converter (ADC) within the integrated circuit coupled to receive the analog control signal and to provide a digital control signal as an output. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein the database comprises a look-up table configured to store multiple sets of identification information, and wherein the digital control signal determines which set of identification information is utilized by the DAA circuitry. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein the analog control signal comprises a voltage signal. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The computer system of <dependent-claim-reference depends_on="CLM-00022">claim 21</dependent-claim-reference>, wherein the voltage signal is generated utilizing resistor circuitry. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. A method for reporting identification information from direct-access-arrangement (DAA) circuitry to an external device, comprising: 
<claim-text>storing identification information within a database within a integrated circuit; </claim-text>
<claim-text>receiving a control signal from an external source; and </claim-text>
<claim-text>utilizing identification information retrieved from the database based at least in part upon the control signal, and </claim-text>
<claim-text>communicating the identification information to an external processor. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein the control signal comprises a multiple-bit digital control signal, wherein the receiving step comprises receiving the multiple-bit digital control signal through two input pins of the integrated circuit, wherein the database comprises a look-up table configured to store multiple sets of vendor identification information, and wherein the digital control signal determines which set of vendor identification information is communicated to the external device. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, further storing the selected set of vendor identification information within multiple vendor identification registers. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein the control signal comprises at least one analog control signal, wherein the receiving step comprises receiving the analog control signal through at least one input pin of the integrated circuit, and wherein the method further comprises converting the analog control signal to a digital control signal utilizing at least one analog-to-digital converter (ADC). </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, wherein the database comprises a look-up table configured to store multiple sets of identification information, and wherein the digital control signal determines which set of identification information is communicated to the external device. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 27</dependent-claim-reference>, wherein the digital interface is configured to operate within PCI local bus operational specifications or within AC97 operational specifications. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00022">claim 28</dependent-claim-reference>, further comprising storing PCI related or AC97 related system identification information retrieved from the look-up table in a plurality of registers. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The method <dependent-claim-reference depends_on="CLM-00022">claim 26</dependent-claim-reference>, wherein the analog control signal comprises a voltage control signal. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. A method for selecting information from a database within an integrated circuit, comprising: 
<claim-text>providing a database within an integrated circuit; </claim-text>
<claim-text>storing within the database a plurality of sets of information; </claim-text>
<claim-text>receiving at least one external analog control signal as an input; and </claim-text>
<claim-text>selecting from the sets of stored information depending at least in part upon the analog control signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, further comprising converting the analog control signal to a digital control signal with an analog-to-digital converter (ADC). </claim-text>
</claim>
<claim id="CLM-00033">
<claim-text><highlight><bold>33</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 32</dependent-claim-reference>, wherein the database comprises a look-up table and wherein the sets of information are stored within the look-up table as selectable rows of information, the digital control signal determining what data is accessed and stored in a plurality of registers. </claim-text>
</claim>
<claim id="CLM-00034">
<claim-text><highlight><bold>34</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 33</dependent-claim-reference>, wherein the information stored in the look-up table comprises subsystem vendor identification information (SVID) and subsystem identification information (SSID) according to the PCI local bus standard. </claim-text>
</claim>
<claim id="CLM-00035">
<claim-text><highlight><bold>35</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 31</dependent-claim-reference>, wherein the external analog control signal is a voltage signal. </claim-text>
</claim>
<claim id="CLM-00036">
<claim-text><highlight><bold>36</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 35</dependent-claim-reference>, further comprising generating the voltage signal utilizing resistor circuitry. </claim-text>
</claim>
<claim id="CLM-00037">
<claim-text><highlight><bold>37</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 36</dependent-claim-reference>, further comprising mapping multiple resistor configurations for the resistor circuitry to information stored in the database, such that a selection of one of the resistor configurations determines at least in part the information selected and utilized from the database. </claim-text>
</claim>
<claim id="CLM-00038">
<claim-text><highlight><bold>38</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 38</dependent-claim-reference>, wherein the resistor circuitry comprises at least two resistors coupled together to form a resistor divider circuit, the resistor divider circuit providing the voltage control signal to the integrated circuit, and wherein the multiple resistor configurations comprises different sets of resistor values for the at least two resistors. </claim-text>
</claim>
<claim id="CLM-00039">
<claim-text><highlight><bold>39</bold></highlight>. A method of selecting information from an on-chip database for a computer system having direct-access-arrangement (DAA) circuitry configured to couple the computer system to telephone lines, comprising: 
<claim-text>providing a digital controller coupled to a processor and configured to operate within PCI local bus operational specifications or within AC97 operational specifications; </claim-text>
<claim-text>providing digital-access-arrangement (DAA) circuitry including at least one integrated circuit, the DAA circuitry being coupled to the digital controller and configured to operate within PCI local bus operational specifications or within AC97 operational specifications; </claim-text>
<claim-text>storing information in a database within the integrated circuit; </claim-text>
<claim-text>receiving a control signal with the DAA circuitry, the control signal being provided from a source external to the integrated circuit; and </claim-text>
<claim-text>retrieving information from the on-chip database based at least in part upon the control signal. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00040">
<claim-text><highlight><bold>40</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, storing the retrieved information in multiple registers. </claim-text>
</claim>
<claim id="CLM-00041">
<claim-text><highlight><bold>41</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00033">claim 39</dependent-claim-reference>, wherein the control signal comprises at least one analog control signal received through at least one input pin of the integrated circuit; and further comprising converting the analog control signal to a digital control signal utilizing at least one analog-to-digital converter (ADC) within the integrated circuit. </claim-text>
</claim>
<claim id="CLM-00042">
<claim-text><highlight><bold>42</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference>, wherein the database comprises a look-up table configured to store multiple sets of identification information, and wherein the digital control signal determines which set of identification information is utilized by the DAA circuitry. </claim-text>
</claim>
<claim id="CLM-00043">
<claim-text><highlight><bold>43</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 41</dependent-claim-reference>, wherein the analog control signal comprises a voltage signal. </claim-text>
</claim>
<claim id="CLM-00044">
<claim-text><highlight><bold>44</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00044">claim 42</dependent-claim-reference>, wherein the voltage signal is generated utilizing resistor circuitry. </claim-text>
</claim>
<claim id="CLM-00045">
<claim-text><highlight><bold>45</bold></highlight>. Programmable device information circuitry for an integrated circuit, comprising: 
<claim-text>at least one external pin for an integrated circuit configured to receive at least one analog control signal; </claim-text>
<claim-text>analog-to-digital conversion circuitry within the integrated circuit coupled to receive the external analog control signal and to output a digital value; </claim-text>
<claim-text>at least one device information register; and </claim-text>
<claim-text>control circuitry within the integrated circuit coupled to the analog-to-digital converter, the programmable circuitry being configured to store device information in the device information register depending at least in part upon the digital value. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00046">
<claim-text><highlight><bold>46</bold></highlight>. The programmable device information circuitry of <dependent-claim-reference depends_on="CLM-00044">claim 45</dependent-claim-reference>, wherein the control circuitry is configured to store the digital value in the device information register. </claim-text>
</claim>
<claim id="CLM-00047">
<claim-text><highlight><bold>47</bold></highlight>. The programmable device information circuitry of <dependent-claim-reference depends_on="CLM-00044">claim 45</dependent-claim-reference>, further comprising a database within the integrated circuit, the database having a plurality of sets of information stored within it, and wherein the control circuitry is configured to select device information from the sets of stored information to store the selected device information in the device information register. </claim-text>
</claim>
<claim id="CLM-00048">
<claim-text><highlight><bold>48</bold></highlight>. The programmable device information circuitry of <dependent-claim-reference depends_on="CLM-00044">claim 45</dependent-claim-reference>, wherein the analog control signal is a voltage signal. </claim-text>
</claim>
<claim id="CLM-00049">
<claim-text><highlight><bold>49</bold></highlight>. The programmable device information circuitry of <dependent-claim-reference depends_on="CLM-00044">claim 48</dependent-claim-reference>, wherein the voltage signal is generated from resistor circuitry. </claim-text>
</claim>
<claim id="CLM-00050">
<claim-text><highlight><bold>50</bold></highlight>. The programmable device information circuitry of <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the database comprises a look-up table and wherein the sets of information are stored within the look-up table as selectable rows of information, the digital value determining what data is accessed and stored in the device information register. </claim-text>
</claim>
<claim id="CLM-00051">
<claim-text><highlight><bold>51</bold></highlight>. The programmable device information circuitry of <dependent-claim-reference depends_on="CLM-00055">claim 50</dependent-claim-reference>, wherein multiple resistor configurations for the resistor circuitry are mapped to information stored in the database, such that a selection of one of the resistor configurations determines at least in part the information selected and utilized from the database. </claim-text>
</claim>
<claim id="CLM-00052">
<claim-text><highlight><bold>52</bold></highlight>. The programmable device information circuitry of <dependent-claim-reference depends_on="CLM-00044">claim 49</dependent-claim-reference>, wherein the resistor circuitry comprises at least two resistors coupled together to form a resistor divider circuit, the resistor divider circuit providing the voltage control signal to the integrated circuit. </claim-text>
</claim>
<claim id="CLM-00053">
<claim-text><highlight><bold>53</bold></highlight>. The programmable device information circuitry of <dependent-claim-reference depends_on="CLM-00044">claim 45</dependent-claim-reference>, wherein the analog control signal comprises a differential signal received across two external pins for the integrated circuit. </claim-text>
</claim>
<claim id="CLM-00054">
<claim-text><highlight><bold>54</bold></highlight>. A method for programming device information for an integrated circuit, comprising: 
<claim-text>receiving at least one analog control signal as an input to at least one external input pin of an integrated circuit; and </claim-text>
<claim-text>converting the analog control signal to a digital value; and </claim-text>
<claim-text>storing device information in at least one device information register depending at least in part upon the digital value. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00055">
<claim-text><highlight><bold>55</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 54</dependent-claim-reference>, further comprising storing the digital value in the device information register. </claim-text>
</claim>
<claim id="CLM-00056">
<claim-text><highlight><bold>56</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 54</dependent-claim-reference>, further comprising providing a database within the integrated circuit, the database having a plurality of sets of information stored within it, selecting device information from the sets of stored information based upon the digital value, and storing the selected device information in the device information register. </claim-text>
</claim>
<claim id="CLM-00057">
<claim-text><highlight><bold>57</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 54</dependent-claim-reference>, wherein the analog control signal is a voltage signal. </claim-text>
</claim>
<claim id="CLM-00058">
<claim-text><highlight><bold>58</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 57</dependent-claim-reference>, generating the voltage signal using resistor circuitry. </claim-text>
</claim>
<claim id="CLM-00059">
<claim-text><highlight><bold>59</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 58</dependent-claim-reference>, wherein the database comprises a look-up table and wherein the sets of information are stored within the look-up table as selectable rows of information, the digital value determining what data is accessed and stored in the device information register. </claim-text>
</claim>
<claim id="CLM-00060">
<claim-text><highlight><bold>60</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 59</dependent-claim-reference>, further comprising mapping multiple resistor configurations for the resistor circuitry to information stored in the database, such that a selection of one of the resistor configurations determines at least in part the information selected and utilized from the database. </claim-text>
</claim>
<claim id="CLM-00061">
<claim-text><highlight><bold>61</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 58</dependent-claim-reference>, wherein the resistor circuitry comprises at least two resistors coupled together to form a resistor divider circuit, the resistor divider circuit providing the voltage control signal to the integrated circuit. </claim-text>
</claim>
<claim id="CLM-00062">
<claim-text><highlight><bold>62</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00055">claim 54</dependent-claim-reference>, wherein the analog control signal comprises a differential signal received across two external pins for the integrate circuit.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>5</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005274A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005274A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030005274A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030005274A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030005274A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030005274A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030005274A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030005274A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
