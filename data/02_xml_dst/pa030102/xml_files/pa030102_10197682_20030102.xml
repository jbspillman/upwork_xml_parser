<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002741A1-20030102-D00000.TIF SYSTEM "US20030002741A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002741A1-20030102-D00001.TIF SYSTEM "US20030002741A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002741A1-20030102-D00002.TIF SYSTEM "US20030002741A1-20030102-D00002.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002741</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10197682</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020717</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06K009/46</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>382</class>
<subclass>232000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Quantization table adjustment</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10197682</doc-number>
<kind-code>A1</kind-code>
<document-date>20020717</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09723575</doc-number>
<document-date>20001128</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</continuation-of>
</continuations>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>09723575</doc-number>
<document-date>20001128</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09370749</doc-number>
<document-date>19990809</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6249280</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>09370749</doc-number>
<document-date>19990809</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08676689</doc-number>
<document-date>19960710</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>6118444</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>08676689</doc-number>
<document-date>19960710</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08270442</doc-number>
<document-date>19940705</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>5577190</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>08270442</doc-number>
<document-date>19940705</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>07866829</doc-number>
<document-date>19920410</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>GRANTED</parent-status>
<parent-patent>
<document-id>
<doc-number>5355450</doc-number>
<country-code>US</country-code>
</document-id>
</parent-patent>
</parent-child>
</continuation-of>
</continuations>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>08270442</doc-number>
<document-date>19940705</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>08400993</doc-number>
<document-date>19940315</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>ABANDONED</parent-status>
</parent-child>
</continuation-of>
</continuations>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>08400993</doc-number>
<document-date>19940315</document-date>
<country-code>US</country-code>
</document-id>
</child>
<parent>
<document-id>
<doc-number>07807117</doc-number>
<document-date>19911213</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>ABANDONED</parent-status>
</parent-child>
</continuation-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Eric</given-name>
<middle-name>C.</middle-name>
<family-name>Peters</family-name>
</name>
<residence>
<residence-us>
<city>Carlisle</city>
<state>MA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>Kristofer E. Elbing</name-1>
<name-2></name-2>
<address>
<address-1>187 Pelham Island Road</address-1>
<city>Wayland</city>
<state>MA</state>
<postalcode>01778</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">The method for adjusting quality during image capture includes computing a discrete cosine transform of a digital image to create DCT coefficients. A quantization table is generated that specifies frequency bands to be filtered and the DCT coefficients are digitized using the quantization table. It is preferred that the DCT coefficients be ordered in a zig-zag sequence to facilitate run-length encoding. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is a continuation of Ser. No. 09/723,575, Nov. 28, 2000, which is a continuation of Ser. No. 09/370,749, filed Aug. 9, 1999, U.S. Pat. No. 6,249,280, which is a continuation of Ser. No. 08/676,689, filed Jul. 10, 1996, U.S. Pat. No. 6,118,444, which is a continuation of Ser. No. 08/270,442, filed Jul. 5, 1994, U.S. Pat. No. 5,577,190, which is a both a continuation of Ser. No. 07/866,829, filed Apr. 10, 1992, U.S. Pat. No. 5,355,450, and a continuation-in-part of Ser. No. 08/400,993, filed Mar. 15, 1994, which is a continuation of Ser. No. 07/807,117, Filed Dec. 13, 1991, all of which are herein incorporated by reference.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This invention relates to hardware designs coupled with software-based algorithms for capture, compression, decompression, and playback of digital image sequences, particularly in an editing environment. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The idea of taking motion video, digitizing it, compressing the digital datastream, and storing it on some kind of media for later playback is not new. RCA&apos;s Sarnoff labs began working on this in the early days of the video disk, seeking to create a digital rather than an analog approach. This technology has since become known as Digital Video Interactive (DVI). </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Another group, led by Phillips in Europe, has also worked on a digital motion video approach for a product they call CDI (Compact Disk Interactive). Both DVI and CDI seek to store motion video and sound on CD-ROM disks for playback in low cost players. In the case of DVI, the compression is done in batch mode, and takes a long time, but the playback hardware is low cost. CDI is less specific about the compression approach, and mainly provides a format for the data to be stored on the disk. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> A few years ago, a standards-making body known as CCITT, based in France, working in conjunction with ISO, the International Standards Organization, created a working group to focus on image compression. This group, called the Joint Photographic Experts Group (JPEG) met for many years to determine the most effective way to compress digital images. They evaluated a wide range of compression schemes, including vector quantization (the technique used by DVI) and DCT (Discrete Cosine Transform). After exhaustive qualitative tests and careful study, the JPEG group picked the DCT approach, and also defined in detail the various ways this approach could be used for image compression. The group published a proposed ISO standard that is generally referred to as the JPEG standard. This standard is now in its final form, and is awaiting ratification by ISO, which is expected. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> The JPEG standard has wide implications for image capture and storage, image transmission, and image playback. A color photograph can be compressed by 10 to 1 with virtually no visible loss of quality. Compression of 30 to 1 can be achieved with loss that is so minimal that most people cannot see the difference. Compression factors of 100 to 1 and more can be achieved while maintaining image quality acceptable for a wide range of purposes. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> The creation of the JPEG standard has spurred a variety of important hardware developments. The DCT algorithm used by the JPEG standard is extremely complex. It requires converting an image from the spatial domain to the frequency domain, the quantization of the various frequency components, followed by Huffman coding of the resulting components. The conversion from spatial to frequency domain, the quantization, and the Huffman coding are all computationally intensive. Hardware vendors have responded by building specialized integrated circuits to implement the JPEG algorithm. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> One vendor, C-Cube of San Jose, Calif., has created a JPEG chip (the CL55OB) that not only implements the JPEG standard in hardware, but can process an image with a resolution of, for example, 720&times;488 pixels (CCIRR 601 video standard) in just {fraction (1/30)}th of a second. This means that the JPEG algorithm can be applied to a digitized video sequence, and the resulting compressed data can be stored for later playback. The same chip can be used to compress or decompress images or image sequences. The availability of this JPEG chip has spurred computer vendors and system integrators to design new products that incorporate the JPEG chip for motion video. However, the implementation of the chip in a hardware and software environment capable of processing images with a resolution of 640&times;480 pixels or greater at a rate of 30 frames per second in an editing environment introduces multiple problems. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> It is often desirable to vary the quality of an image during compression in order to optimize the degree of data compression. For example, during some portions of a sequence, detail may not be important, and quality can be sacrificed by compressing the data to a greater degree. Other portions may require greater quality, and hence this greater degree of compression may be unsuitable. In prior implementations of the JPEG algorithm, quality is adjusted by scaling the elements of a quantization table (discussed in detail hereinbelow). If these elements are scaled during compression, they must be correspondingly re-scaled during decompression in order to obtain a suitable image. This re-scaling is cumbersome to implement and can cause delays during playback. The present invention is a method that allows for quality changes during compression to enable optimum data compression for all portions of a sequence, while allowing playback with a single quantization table. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> This invention relates to an apparatus and method for adjusting the post decompression quality of a compressed image. The image quality adjustment is performed by constructing a quantization table that specifies the high frequency image components to be filtered, and by subsequently filtering out those components specified by the table.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWING </heading>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block diagram of a video image capture and playback system implementing data compression, </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a schematic illustration of data compression and decompression according to the JPEG algorithm. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF THE PREFERRED EMBODIMENT </heading>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> A block diagram according to a preferred embodiment of a system for capture, compression, storage, decompression, and playback of images is illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> As shown, an image digitizer (frame grabber) <highlight><bold>10</bold></highlight>, captures and digitizes the images from an analog source, such as videotape. Image digitizer <highlight><bold>10</bold></highlight> may be, for example, a TrueVision NuVista&plus; board. However, the NuVista&plus; board is preferably modified and augmented with a pixel engine as described in copending application &ldquo;Image Digitizer Including Pixel Engine&rdquo; by B. Joshua Rosen et al., filed Dec. 13, 1991, to provide better data throughput for a variety of image formats and modes of operation. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The compression processor <highlight><bold>12</bold></highlight> compresses the data according to a compression algorithm. Preferably, this algorithm is the JPEG algorithm, introduced above. As discussed above, C-Cube produces a compression processor (CL55OB) based on the JPEG algorithm that is appropriate for use as compression processor <highlight><bold>12</bold></highlight>. However, other embodiments are within the scope of the invention. Compression processor <highlight><bold>12</bold></highlight> may be a processor that implements the new MPEG (Motion Picture Experts Group) algorithm, or a processor that implements any of a variety of other image compression algorithms known to those skilled in the art. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> The compressed data from the processor <highlight><bold>12</bold></highlight> is preferably input to a compressed data buffer <highlight><bold>14</bold></highlight> which is interfaced to host computer <highlight><bold>16</bold></highlight> connected to disk <highlight><bold>18</bold></highlight>. The compressed data buffer <highlight><bold>14</bold></highlight> preferably implements a DMA process in order to absorb speed differences between compression processor <highlight><bold>12</bold></highlight> and disk <highlight><bold>18</bold></highlight>, and further to permit data transfer between processor <highlight><bold>12</bold></highlight> and disk <highlight><bold>18</bold></highlight> with a single pass through the CPU of host computer <highlight><bold>16</bold></highlight>. The host computer <highlight><bold>16</bold></highlight> may be, for example, an Apple Macintosh. </paragraph>
</section>
<section>
<heading lvl="1">JPEG Encoding and Decoding </heading>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> Detailed discussions of the JPEG algorithm and its implementation are contained in &ldquo;The JPEG Still Picture Compression Standard&rdquo; by G. K. Wallace, in Communications of the ACM, Vol. 34, April 1991, and in &ldquo;Digital Compression and Coding of Continuous-Tone Still Images, Part 1, Requirements and Guidelines,&rdquo; ISOIIEC JTC1 Committee Draft 10918-1, February, 1991, both of which are incorporated herein by reference. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> illustrates the key steps in data compression and decompression according to the JPEG algorithm for a single component of what will generally be a three-component image. In the JPEG standard, an image described in the RGB color space will be transformed into the YUV color space via a 3&times;3 multiplier prior to compression. This conversion sacrifices some color information, but preserves the more important detail information. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The algorithm works with blocks of 8&times;8 pixels from the image. Each 8&times;8 block is input to the compressor, goes through the illustrated steps, and the compressed data is output as a data stream. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The first step in the JPEG algorithm is a Forward Discrete Cosine Transform (FDCT). As described in Wallace, cited above, each 8&times;8 block of pixels can be thought of as a 64-point discrete signal which is a function of two spatial dimensions. The FDCT computes the &ldquo;spectrum&rdquo; of this signal in the form of <highlight><bold>64</bold></highlight> two-dimensional &ldquo;spatial frequencies,&rdquo; termed DCT coefficients. The DCT coefficients represent the relative amounts of the two-dimensional spatial frequencies contained in the 64-point discrete signal. The coefficient with zero frequency in both dimensions is called the &ldquo;DC coefficient&rdquo; and the remaining 63 coefficients are called the &ldquo;AC coefficients.&rdquo; Typically each pixel component corresponds to 8 bits, as is the case in 24 bit color. According to the JPEG algorithm, each coefficient is described by greater than 8 bits. In the C-Cube chip discussed above, the number of bits per coefficient is 12. Therefore, at this point, the algorithm has actually led to an expansion, rather than a compression of data. However, since pixel values usually vary slowly across an image, most of the pixel information will be contained in the lower spatial frequencies. For typical 8&times;8 pixel blocks, most of the spatial frequencies at the high end of the spectrum will have zero or negligible amplitude. Data compression can then be achieved by &ldquo;throwing out&rdquo; these coefficients, which is the purpose of the next step. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The next step in the JPEG algorithm is quantization, wherein each of the 64 DCT coefficients is quantized in accordance with a 64-element quantization table. This table is specified by the user. The C-Cube chip allows user adjustability of this table via software inputs to the chip. Each element in the table is any integer from 1 to 255, according to the JPEG standard. Each element is the quantizer step size for a corresponding DCT coefficient. Quantization is achieved by dividing each DCT coefficient by its corresponding quantizer step size, and rounding to the nearest integer, a very lossy process. The elements of the table are chosen so that the generally large lower frequency components are represented by a smaller number of bits, and the negligible higher frequency components become zero. The goal is to represent each DCT coefficient by no more precision than is necessary for a desired image quality. Since the coefficients, therefore, depend on human visual parameters, the table is sometimes called a psycho-visual weighing table. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> Compression is achieved by the use of run-length encoding, which puts an end-of-block code at the start of the sequence of zeros that will typically form the end of the 64 coefficient string. The zeros, therefore, don&apos;t contribute to the length of the data stream. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> After the coefficients have been quantized, they are ordered into a &ldquo;zig-zag&rdquo; sequence, as illustrated in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>. This sequence facilitates the run-length encoding. Before going on to this step, it should be noted, that since the DC coefficient is generally one of the largest coefficients, and furthermore since it is a measure of the average value of the 64 pixels in the 8&times;8 block, there is generally a strong correlation between the DC coefficients of adjacent blocks, and therefore, the DC component is encoded as the difference from the DC term of the previous block in the compression order. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> The final step is entropy coding, wherein additional compression is achieved by encoding the quantized DCT coefficients according to their statistical characteristics. This is a lossless step. As this step is not as relevant to the methods of the present invention as those of the previous steps, the reader is referred to Wallace, cited above for a detailed discussion. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> The above steps are essentially reversed, as illustrated in <cross-reference target="DRAWINGS">FIG. 1</cross-reference><highlight><italic>b</italic></highlight>, during playback. Here too, the reader is referred to Wallace for further details. </paragraph>
</section>
<section>
<heading lvl="1">Image Quality Adjustment </heading>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> From the above discussion, it can be seen that image quality can be adjusted by scaling the values of the quantization table. For higher quality images, the elements should be small, since the larger the elements, the greater the loss. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> In prior art systems, this is precisely the technique used to adjust image quality during image capture. A variable quality scaling factor (1-255) called the quantization factor or Q-factor is used with JPEG to adjust the degree of quantization of the compressed image. For sequences requiring high quality, low Q-factors are used. For sequences in which quality can be sacrificed, high Q-factors are used. It can be imagined that a user may want to continuously adjust the quality over the range of the Q-factor at the time of capture as scenes change. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The problem with the above method is that if the quantization table values are scaled during image capture, they must be correspondingly descaled during image playback. To illustrate the importance of this, imagine the result if the quantization table element corresponding to the DC coefficient is multiplied by a factor of 10 at some point during image capture in an effort to increase the degree of data compression. If at playback, the original quantization table is used (prior to the upward scaling), the DC coefficient will be 10 times too small. Since the DC component primarily corresponds to brightness, the result is dramatic. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The method of the present invention is an alternate method for adjusting quality during image capture which permits playback using a single quantization table. According to the invention, the DCT coefficients are filtered during image capture according to the following technique. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> As has already been discussed, the DC coefficient is the most important in terms of human perception. The higher the frequency of a coefficient, the finer the detail it describes in an image. Humans are much less sensitive to these high frequency components. Therefore, according to the invention, if image quality is to be lowered to further compress the data, the high frequency components are filtered out. The cut-off frequency of the filter determines the degree of compression. This method is in clear contradistinction to the prior method of adjusting the Q-factor. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> As described above and illustrated in <cross-reference target="DRAWINGS">FIG. 2</cross-reference>, the coefficients are sequenced in a zig-zag pattern as part of the quantization step. A filter according to one embodiment of the invention can be characterized as a diagonal line indicating the cutoff frequency. The effect of throwing out the higher frequency components is a blur of the image to an extent determined by the cutoff frequency. This artifact is often acceptable, depending on the scene and the quality required. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Furthermore, the artifact caused by the filtering can be made more tolerable to the eye by adjusting the filter in the following manner. If in addition to throwing out all frequency components above cutoff, the frequency components just below cutoff are muted, the artifact is made less harsh. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The filter described above can be created by hand-creating quantization tables. For all frequencies above cutoff, the table elements should be large, preferably as large as possible without overflowing the arithmetic of the system. For frequencies below cutoff the table elements can be exactly as used in standard JPEG implementations. However, preferably, the table elements below but near cut-off are increased by some amount to mute the corresponding frequency components as described above. Preferably, this muting is greatest at cutoff, decreasing as the DC coefficient is approached. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The filter can be easily adjusted during image capture to control the degree of data compression by changing the quantization table. In one mode of operation, the filter is user adjusted. However, in another mode of operation, the filter may be automatically adjusted by the system when it senses bottlenecks forming. In this mode, the interrupt routine gets activated on each frame. It computes the current frame size and compares it with the desired target size, then it adjusts the table by moving the filter cut-off frequency to approach the target. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> As stated above, the invention was developed as a method for adjusting quality during image capture in such a way that playback can take place in the absence of the history of such adjustment. It should be clear that this is achieved when the images are played back using the original quantization tables. This is because only the least important coefficients are affected by the filtering. In contrast, in the prior methods for quality adjustment, all coefficients were affected to the same degree. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> Subsampling introduces artifacts called aliases to the signal. These frequencies can be predicted and removed by increasing the Q table entries for them.</paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for compressing image data, comprising: 
<claim-text>receiving the image data, </claim-text>
<claim-text>transforming a block of the image data using a discrete cosine transform to obtain a matrix of coefficients, wherein each coefficient corresponds to a frequency in a range of frequencies having low frequencies and high frequencies; </claim-text>
<claim-text>defining at least one quantization matrix, wherein the quantization matrix has a plurality of quantization values, wherein each quantization value corresponds to a coefficient in the matrix of coefficients, and wherein each quantization value corresponds to a frequency in the range of frequencies having low frequencies and high frequencies, wherein the quantization values are defined to obtain a desired amount of data from processing the matrix of coefficients, wherein the quantization values in different quantization matrices are such that for increased compression, a quantization value corresponding to at least one higher frequency is changed whereas quantization values corresponding to at least one lower frequency is unchanged; </claim-text>
<claim-text>quantizing the coefficients for the block of the image data using the defined quantization matrix; and </claim-text>
<claim-text>encoding the quantized coefficients to produce compressed image data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein for further compression, high frequency components above a cut-off frequency are filtered out by the quantization matrix. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, further comprising: 
<claim-text>comparing an amount of data obtained from the encoding to a target amount of data; and </claim-text>
<claim-text>adjusting the cutoff frequency to increase compression if the amount of data is greater than the target amount. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the quantization matrix is defined such that quantization values below but near the cut-off frequency are changed to mute the corresponding frequency components. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein the quantization matrix is defined such that quantization values below but near the cut-off frequency are changed to mute the corresponding frequency components </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising: 
<claim-text>comparing an amount of data obtained from the encoding to a target amount of data; and </claim-text>
<claim-text>adjusting the quantization matrix to increase compression by changing a quantization value corresponding to at least one higher frequency whereas quantization values corresponding to lower frequencies are unchanged. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein quantization values are larger for high frequencies than for low frequencies. </claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein quantization values increase from low frequencies to high frequencies. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein quantization values increase from low frequencies to a cutoff frequency, and wherein quantization values corresponding to frequencies above the cutoff frequency are a maximum value. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising storing the compressed image data in a data file. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, further comprising decompressing the compressed image data. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00011">claim 11</dependent-claim-reference>, wherein decompressing comprises: 
<claim-text>decoding the compressed image data to produce a set of coefficients; and </claim-text>
<claim-text>performing an inverse transform on the set of coefficients to generate image data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. An apparatus for compressing image data, comprising: 
<claim-text>means for transforming a block of the image data using a discrete cosine transform to obtain a matrix of coefficients, wherein each coefficient corresponds to a frequency in a range of frequencies having low frequencies and high frequencies; </claim-text>
<claim-text>means for specifying at least one quantization matrix, wherein the quantization matrix has a plurality of quantization values, wherein each quantization value corresponds to a coefficient in the matrix of coefficients, and wherein each quantization value corresponds to a frequency in the range of frequencies having low frequencies and high frequencies, wherein the quantization values are defined to obtain a desired amount of data from processing the matrix of coefficients, wherein the quantization values in different quantization matrices are such that for increased compression, a quantization value corresponding to at least one higher frequency is changed whereas quantization values corresponding to at least one lower frequency is unchanged; </claim-text>
<claim-text>a quantizer for quantizing the coefficients for the block of the image data using the defined quantization matrix; and </claim-text>
<claim-text>an encoder for encoding the quantized coefficients to produce compressed image data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein for further compression, high frequency components above a cut-off frequency are filtered out by the quantization matrix. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, further comprising: 
<claim-text>means for comparing an amount of data obtained from the encoding to a target amount of data; and </claim-text>
<claim-text>means for adjusting the cutoff frequency to increase compression if the amount of data is greater than the target amount. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the quantization matrix is defined such that quantization values below but near the cut-off frequency are changed to mute the corresponding frequency components. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein the quantization matrix is defined such that quantization values below but near the cut-off frequency are changed to mute the corresponding frequency components </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, further comprising: 
<claim-text>means for comparing an amount of data obtained from the encoding to a target amount of data; and </claim-text>
<claim-text>means for adjusting the quantization matrix to increase compression by changing a quantization value corresponding to at least one higher frequency whereas quantization values corresponding to lower frequencies are unchanged. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein quantization values are larger for high frequencies than for low frequencies. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein quantization values increase from low frequencies to high frequencies. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein quantization values increase from low frequencies to a cutoff frequency, and wherein quantization values corresponding to frequencies above the cutoff frequency are a maximum value. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, further comprising means for storing the compressed image data in a data file. </claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, further comprising means for decompressing the compressed image data. </claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The apparatus of <dependent-claim-reference depends_on="CLM-00022">claim 23</dependent-claim-reference>, wherein decompressing comprises: 
<claim-text>means for decoding the compressed image data to produce a set of coefficients; and </claim-text>
<claim-text>means for performing an inverse transform on the set of coefficients to generate image data.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002741A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002741A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002741A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
