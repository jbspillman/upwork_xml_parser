<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005313A1-20030102-D00000.TIF SYSTEM "US20030005313A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005313A1-20030102-D00001.TIF SYSTEM "US20030005313A1-20030102-D00001.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005313</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10197789</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020718</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>00 100 955.4</doc-number>
</priority-application-number>
<filing-date>20000118</filing-date>
<country-code>EP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>H04L009/32</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>713</class>
<subclass>189000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Microprocessor configuration with encryption</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10197789</doc-number>
<kind-code>A1</kind-code>
<document-date>20020718</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>PCT/DE00/04448</doc-number>
<document-date>20001214</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>UNKNOWN</parent-status>
</parent-child>
</continuation-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Berndt</given-name>
<family-name>Gammel</family-name>
</name>
<residence>
<residence-non-us>
<city>Markt Schwaben</city>
<country-code>DE</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
<inventor>
<name>
<given-name>Oliver</given-name>
<family-name>Kniffler</family-name>
</name>
<residence>
<residence-non-us>
<city>Munchen</city>
<country-code>DE</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
<inventor>
<name>
<given-name>Holger</given-name>
<family-name>Sedlak</family-name>
</name>
<residence>
<residence-non-us>
<city>Egmating</city>
<country-code>DE</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</inventor>
</inventors>
<correspondence-address>
<name-1>LERNER AND GREENBERG, P.A.</name-1>
<name-2></name-2>
<address>
<address-1>Post Office Box 2480</address-1>
<city>Hollywood</city>
<state>FL</state>
<postalcode>33022-2480</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A microcontroller for security applications includes an encryption unit between a bus and a functional unit. The encryption unit includes a gate and a key register. A memory is provided with a further encryption unit whose gate is connected between the register and the gate of the first encryption unit. As a result, the transferred information item is available in encrypted form at any point on the bus. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS REFERENCE TO RELATED APPLICATION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is a continuation of copending International Application No. PCT/DE00/04448, filed Dec. 14, 2000, which designated the United States and was not published in English.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> 1. Field of the Invention </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> The invention relates to a microprocessor configuration in which a central processing unit, a further unit, and a memory unit are connected to one another through a bus and encryption is performed. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> Such microprocessor configurations are used in security-critical applications, for example, in a chip card. The configuration is integrated on a single semiconductor chip, a &ldquo;microcontroller&rdquo;. The bus handles all the data traffic. By way of example, the bus transmits data, addresses, program commands, control commands, etc. The programs to be executed are stored in a non-volatile memory (ROM); data can likewise be stored in the non-volatile memory or temporarily in a volatile memory (RAM). Due to the long access time to these memories, the data to be processed are buffered in faster caches. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> All the memories and the buses on the microprocessor or microcontroller are easily identifiable regular structures on the chip. They, therefore, represent preferred points of attack when attempts are being made to tap off chip-internal circuits or operating cycles for the purpose of covertly observing security-related data and functions. Any attacks can be made by probing, which involves tapping off the signal profiles by placing needles onto significant structures. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> In conventional microprocessors or microcontrollers, data stored in the memory are, therefore, scrambled using complex encryption. Reading requires a corresponding level of computation complexity. The data are subsequently transferred and supplied to the various functional units of the microprocessor generally in unencrypted form. In the event of a needle attack on the bus, all data could, therefore, be requested as plain text. Comparatively complex encryption and decryption also of the data traffic from and to the central processing unit (CPU), a peripheral unit, or an arithmetic and logic unit (ALU) or of the cache are not recommended because this would significantly reduce the access speed to these units. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> It is accordingly an object of the invention to provide a microprocessor configuration with encryption that overcomes the hereinafore-mentioned disadvantages of the heretofore-known devices of this general type and that has a higher level of security against covert observation of internal cycles. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> With the foregoing and other objects in view, there is provided, in accordance with the invention, a microprocessor configuration, including a central processing unit, a functional unit, a memory unit, each of the central processing unit, the memory unit, and the functional unit having a first encryption unit with a first means for providing an alterable key and a first combinational logic element, the memory unit having a second encryption unit with a second means for providing a key and a second combinational logic element, a bus, the first encryption unit connecting the central processing unit to the bus, the second encryption unit connecting the functional unit to the bus, the third encryption unit connecting the memory unit to the bus, the bus connecting the central processing unit, the functional unit, and the memory unit to one another for interchanging data therebetween, and the second combinational logic element connected between the first alterable key providing means and the first combinational logic element. The first means for providing an alterable key can be an alterable key providing device, and the second means for providing a key can be a key providing device. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> The combinational logic element is connected between the bus and the associated unit and the key is the same for the units and is alterable. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> In the microprocessor configuration according to the invention, each functional unit connected to the bus is provided with an encryption device that is of relatively simple construction. The device includes a means for providing a key, for example, a register, and also a combinational logic element, for example, an Exclusive-OR-gate. The encryption device is capable of both encrypting the data item that is output onto the bus by the functional unit and decrypting a data item that is to be received. The encryption device has a simple configuration and, therefore, results in no significant delay during data transfer. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> Expediently, the key stored in the register is altered from time to time. The key is updated preferably with every operating clock cycle. So that a data value, which is output onto the bus by a functional unit and is encrypted, can be decrypted again by another functional unit when the key changes, the key registers for each functional unit need to contain the same key for affiliated read and write operations. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> To such an end, the key is expediently generated by a key generator that forwards the same key to all the key registers in sync with the clock. Preferably, the key is generated under random control. Despite the simple encryption and decryption that barely takes up any delay time, the random provision of various keywords provides adequate security against tapping-off and covert observation of the data traffic. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> In accordance with another feature of the invention, the key generator is a random number generator adapted to randomly generate binary numbers. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> To prevent a memory connected to the bus, for example, a cache, a buffer, or a translation lookaside buffer, from storing the information as plain text, additional encryption and decryption are required. To such an end, a further encryption unit is provided that again includes a means for providing the key, for example, a further key register, and also a combinational logic element, for example, an Exclusive-OR-gate. A fundamental aspect is that the combinational logic element for the further encryption unit is disposed between the combinational logic element for the first encryption unit and the latter&apos;s key register. Such a configuration has the advantage that all the bus sections, particularly, those between the combinational logic element for the first encryption unit, which is disposed between the bus and the memory, and the memory, carry only encrypted data. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> In accordance with a further feature of the invention, there is provided a clock generator, the register of each of the first encryption units being commonly controlled by the clock generator. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> In accordance with an added feature of the invention, the register of each of the first encryption units is adapted to be controlled by a common clock generator. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> In accordance with an additional feature of the invention, the first combinational logic element has an input, the second combinational logic element has inputs, the second key providing means has a register with an input and an output, a second key generator is connected to the input of the register of the second key providing means, a respective one of the inputs of the second combinational logic element is connected to the output of the register of the second key providing means and the register of the first alterable key providing means, and the output of the second combinational logic element is connected to the input of the first combinational logic element. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> In accordance with yet another feature of the invention, a respective one of the inputs of the second combinational logic element is connected to the output of the register of the second key providing means and the register of the first alterable key providing means of the memory unit, and the output of the second combinational logic element is connected to an input of the first combinational logic element of the memory unit. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The key register for the second encryption unit is fed by a further key generator. Expediently, this key is also altered from time to time. In such a case, it is necessary to ensure that data buffered in the memory in encrypted form are read again using the same key. The key for the key register is, therefore, updated only when the memory no longer contains any valid information. This is the case, for example, when the memory is completely empty or when the memory is reinitialized. This is done, for example, when the microprocessor configuration has terminated an application and starts a new application. In the event of such an application change, it is no longer necessary to change the memory content for security reasons because the change of key means that a new application can no longer use the data content still held in the memory anyway. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> In accordance with yet a further feature of the invention, the second combinational logic element is an Exclusive-OR-gate. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> In accordance with yet an additional feature of the invention, the encryption units include only Exclusive-OR-gates and associated key registers for each functional unit connected to the bus. The circuit complexity is relatively low. The key generators each need to be provided only in simple form. The additional computation complexity is relatively-low bycomparison with the security obtained against covert observation of the data traffic. </paragraph>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> In accordance with yet an added feature of the invention, the memory unit is a volatile memory. </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> In accordance with again another feature of the invention, there is provided a second memory unit connected to the bus, the memory unit being a cache buffering data for the second memory unit. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> In accordance with again a further feature of the invention, the functional unit is a second memory unit and the memory unit is a cache buffering data for the second memory unit. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> In accordance with a concomitant feature of the invention, the second key providing means is a second alterable key providing means. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> Other features that are considered as characteristic for the invention are set forth in the appended claims. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> Although the invention is illustrated and described herein as embodied in a microprocessor configuration with encryption, it is, nevertheless, not intended to be limited to the details shown because various modifications and structural changes may be made therein without departing from the spirit of the invention and within the scope and range of equivalents of the claims. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> The construction and method of operation of the invention, however, together with additional objects and advantages thereof, will be best understood from the following description of specific embodiments when read in connection with the accompanying drawings.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> The figure is a block and schematic circuit diagram of the microcontroller according to the invention. </paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> Referring now to the single figure of the drawing, there is illustrated a block diagram of a microcontroller for security applications in accordance with the invention. The microcontroller includes a number of components: a central processing unit (CPU) <highlight><bold>1</bold></highlight>, which handles control of the data traffic; a memory <highlight><bold>2</bold></highlight>, which permanently stores data and programs that are to be executed; a peripheral unit <highlight><bold>3</bold></highlight>, which implements data traffic to external circuits disposed outside the microcontroller; and a buffer <highlight><bold>5</bold></highlight>, which buffers data. Connections shown in bold include a plurality of lines. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> The non-volatile memory <highlight><bold>2</bold></highlight> includes a decryption device <highlight><bold>21</bold></highlight> that performs very good encryption with a relatively long key length. However, decryption requires a relatively long computation time and is of corresponding complexity in terms of circuitry. Data to be read from the memory <highlight><bold>2</bold></highlight> are, therefore, temporarily buffered in the buffer <highlight><bold>5</bold></highlight>, which can be accessed much faster. The buffer <highlight><bold>5</bold></highlight> is a &ldquo;cache&rdquo;. The functional units mentioned are connected to one another by a bus <highlight><bold>6</bold></highlight> that includes a multiplicity of data and control lines. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> Disposed between the bus <highlight><bold>6</bold></highlight> and each of the functional units is an encryption unit, for example, the units <highlight><bold>12</bold></highlight>, <highlight><bold>32</bold></highlight>, and <highlight><bold>52</bold></highlight>. The encryption unit encrypts the data traffic that is output onto the bus <highlight><bold>6</bold></highlight> by the functional unit, and decrypts the data traffic received. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> The encryption units for the functional units <highlight><bold>1</bold></highlight>, <highlight><bold>2</bold></highlight>, and <highlight><bold>3</bold></highlight> have an identical configuration. By way of example, the encryption unit <highlight><bold>12</bold></highlight> associated with the CPU <highlight><bold>1</bold></highlight> includes a key register <highlight><bold>10</bold></highlight> storing a keyword. An Exclusive-OR-gate <highlight><bold>11</bold></highlight> is connected in the data path between CPU <highlight><bold>1</bold></highlight> and bus <highlight><bold>6</bold></highlight>. In addition, the gate <highlight><bold>11</bold></highlight> is also supplied with the key K<highlight><bold>1</bold></highlight> from the key register <highlight><bold>10</bold></highlight>. By-logically combining the data value received from the bus <highlight><bold>6</bold></highlight> with the keyword K<highlight><bold>1</bold></highlight>, the data item T<highlight><bold>1</bold></highlight> received from the bus <highlight><bold>6</bold></highlight> in encrypted form is converted into plain text T. The line from the Exclusive-OR-gate to the CPU <highlight><bold>1</bold></highlight> cannot generally be readily tapped because the CPU <highlight><bold>1</bold></highlight> has an irregular structure. When the CPU <highlight><bold>1</bold></highlight> outputs a data value T onto the bus <highlight><bold>6</bold></highlight>, the plain text data value is logically combined in the Exclusive-OR-gate <highlight><bold>11</bold></highlight> with a key provided by the key register <highlight><bold>10</bold></highlight> and is provided on the bus as a data item T<highlight><bold>1</bold></highlight>. Another unit, for example, a peripheral unit <highlight><bold>3</bold></highlight>, receives the encrypted data item T<highlight><bold>1</bold></highlight> and decrypts it in complementary fashion. </paragraph>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> The key K<highlight><bold>1</bold></highlight> used for encryption in the unit <highlight><bold>12</bold></highlight> is altered cyclically. The key is provided by a key generator <highlight><bold>61</bold></highlight> that generates the keyword randomly. With every clock cycle provided by a clock generator <highlight><bold>62</bold></highlight>, the keyword K<highlight><bold>1</bold></highlight> changes. It is fundamental that a key K<highlight><bold>1</bold></highlight> used for encrypting a data value that is output upstream of the CPU <highlight><bold>1</bold></highlight> is likewise available on the other encryption units for decrypting the same data value. To this end, all the key registers associated with the respective functional units are connected to the random number generator <highlight><bold>61</bold></highlight> and to the clock generator <highlight><bold>62</bold></highlight> in parallel. As a result, by way of example, a data value T delivered by the CPU <highlight><bold>1</bold></highlight> is output onto the bus as data value T<highlight><bold>1</bold></highlight> in encrypted form and is decrypted using the same key K<highlight><bold>1</bold></highlight> on the peripheral unit <highlight><bold>3</bold></highlight>, where it is provided as the same data item T in plain text. The randomly controlled updating of the key achieves a high level of security against a decryption attempt on the data item transferred through the bus. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> Connected upstream of the cache <highlight><bold>5</bold></highlight> is an encryption unit <highlight><bold>52</bold></highlight> corresponding to the encryption unit <highlight><bold>12</bold></highlight> and <highlight><bold>32</bold></highlight>. The encryption unit <highlight><bold>52</bold></highlight> includes a key register <highlight><bold>50</bold></highlight> that is connected to the clock generator <highlight><bold>62</bold></highlight> and to the random number generator <highlight><bold>61</bold></highlight> in the same way, and also an Exclusive-OR-gate <highlight><bold>51</bold></highlight>, which is connected in the data path between the bus <highlight><bold>6</bold></highlight> and the cache <highlight><bold>5</bold></highlight>. With no other measures, the data traffic running between the gate <highlight><bold>51</bold></highlight> and the cache <highlight><bold>5</bold></highlight> would be available as plain text; in addition, the data would be stored in the cache <highlight><bold>5</bold></highlight> as plain text. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> To provide additional encryption for the data stored in the cache <highlight><bold>5</bold></highlight>, a further encryption unit <highlight><bold>53</bold></highlight> is provided that is combined with the encryption unit <highlight><bold>52</bold></highlight> to re-encrypt the data decrypted by the encryption unit <highlight><bold>52</bold></highlight> using the key K<highlight><bold>1</bold></highlight>. The further encryption unit <highlight><bold>53</bold></highlight> includes a key register <highlight><bold>54</bold></highlight> and also an Exclusive-OR-gate <highlight><bold>55</bold></highlight>. The Exclusive-OR-gate <highlight><bold>55</bold></highlight> is connected between the key register <highlight><bold>50</bold></highlight> and the Exclusive-OR-gate <highlight><bold>51</bold></highlight>. The Exclusive-OR-gate <highlight><bold>55</bold></highlight> logically combines the keys from the registers <highlight><bold>50</bold></highlight> and <highlight><bold>54</bold></highlight> with one another. The effect of this is that the data stream T<highlight><bold>2</bold></highlight> delivered to the cache <highlight><bold>5</bold></highlight> by the Exclusive-OR-gate <highlight><bold>51</bold></highlight> is in encrypted form. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> Correspondingly, the data T<highlight><bold>2</bold></highlight> read from the cache <highlight><bold>5</bold></highlight> are decrypted again using the keyword K<highlight><bold>2</bold></highlight> stored in the key register <highlight><bold>54</bold></highlight> and are encrypted for output onto the data bus <highlight><bold>6</bold></highlight> using the current alterable key K<highlight><bold>1</bold></highlight> stored in the key register <highlight><bold>50</bold></highlight>. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> While the cache <highlight><bold>5</bold></highlight> stores valid data that need to be read to the bus again for further processing, the keyword K<highlight><bold>2</bold></highlight> provided by the key register <highlight><bold>54</bold></highlight> must continue to remain the same. The keyword K<highlight><bold>2</bold></highlight> is generated by a further key generator <highlight><bold>63</bold></highlight>. Expediently, the key K<highlight><bold>2</bold></highlight> is changed when the cache <highlight><bold>5</bold></highlight> no longer contains any valid data. The key is again updated based upon a random pattern so that sufficient security is ensured against unscrambling of the data that are stored in the memory and are transferred through the bus section between the gate <highlight><bold>51</bold></highlight> and the memory <highlight><bold>5</bold></highlight>. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> It is recommended that the key K<highlight><bold>2</bold></highlight> be changed when the cache <highlight><bold>5</bold></highlight> is emptied based upon a cache flush. Such an operation is performed, by way of example, when the application processed by the microprocessor configuration changes. With a cache flush, all the data values in the cache are reset to a prescribed value. In principle, it is also possible to dispense with resetting the memory content because the memory content can no longer be decrypted anyway when there is a change of key. </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> The effect achieved by the invention is that all the data traffic running through the bus <highlight><bold>6</bold></highlight> and, in addition, the data buffered in the buffer are always in encrypted form and are not available as plain text. The use of Exclusive-OR-gates allows symmetrical encryption and decryption methods to be used, which require little circuit and computation complexity. The length of key is oriented toward the number of lines in the bus. It is possible for all the lines or only some of the lines to be encrypted. The key register is then correspondingly smaller. For every line, one bit of a keyword is used. With bus lines, both the data lines and the status and control lines of the bus can be encrypted. In principle, it is also possible to encrypt single security-related signal lines in microprocessor configurations or other circuits with appropriate use of the measures described above. As a random source for the key generators <highlight><bold>61</bold></highlight> and <highlight><bold>63</bold></highlight>, a physical source is particularly suitable. If the security requirement is less, a pseudo random number generator can generate the key. The key generators can be in the form of linear feedback shift registers (LFSR). The key can be updated by the clock generator <highlight><bold>62</bold></highlight> with every clock cycle for the bus <highlight><bold>6</bold></highlight> or not until a particular number of clock cycles have elapsed. Suitable choice of the parameters sets a desired degree of security. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">We claim: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A microprocessor configuration, comprising: 
<claim-text>a central processing unit; </claim-text>
<claim-text>a functional unit; </claim-text>
<claim-text>a memory unit; </claim-text>
<claim-text>each of said central processing unit, said memory unit, and said functional unit having a first encryption unit with: 
<claim-text>a first means for providing an alterable key; and </claim-text>
<claim-text>a first combinational logic element; </claim-text>
</claim-text>
<claim-text>said memory unit having a second encryption unit with: 
<claim-text>a second means for providing a key; and </claim-text>
<claim-text>a second combinational logic element; </claim-text>
</claim-text>
<claim-text>a bus; </claim-text>
<claim-text>said first encryption unit connecting said central processing unit to said bus; </claim-text>
<claim-text>said second encryption unit connecting said functional unit to said bus; </claim-text>
<claim-text>said third encryption unit connecting said memory unit to said bus; </claim-text>
<claim-text>said bus connecting said central processing unit, said functional unit, and said memory unit to one another for interchanging data therebetween; and </claim-text>
<claim-text>said second combinational logic element connected between said first alterable key providing means and said first combinational logic element. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>said first alterable key providing means has: 
<claim-text>a register with an output connected to said first combinational logic element; and </claim-text>
<claim-text>an input side; and </claim-text>
</claim-text>
<claim-text>a key generator is connected to said input side of said first alterable key providing means of each of said first encryption units. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein said key generator is a random number generator adapted to randomly generate binary numbers. </claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, including a clock generator, said register of each of said first encryption units being commonly controlled by said clock generator. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein said register of each of said first encryption units is adapted to be controlled by a common clock generator. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein: 
<claim-text>said first combinational logic element has an input; </claim-text>
<claim-text>said second combinational logic element has inputs; </claim-text>
<claim-text>said second key providing means has a register with an input and an output; </claim-text>
<claim-text>a second key generator is connected to said input of said register of said second key providing means; </claim-text>
<claim-text>a respective one of said inputs of said second combinational logic element is connected to: 
<claim-text>said output of said register of said second key providing means; and </claim-text>
<claim-text>said register of said first alterable key providing means; and </claim-text>
</claim-text>
<claim-text>said output of said second combinational logic element is connected to said input of said first combinational logic element. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein: 
<claim-text>a respective one of said inputs of said second combinational logic element is connected to: 
<claim-text>said output of said register of said second key providing means; and </claim-text>
<claim-text>said register of said first alterable key providing means of said memory unit; and </claim-text>
</claim-text>
<claim-text>said output of said second combinational logic element is connected to an input of said first combinational logic element of said memory unit. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said first combinational logic element is an Exclusive-OR-gate. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said second combinational logic element is an Exclusive-OR-gate. </claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein said second combinational logic element is an Exclusive-OR-gate. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said memory unit is a volatile memory. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00006">claim 6</dependent-claim-reference>, wherein said second key generator is adapted to generate a new key when said memory unit has no valid memory content. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00011">claim 12</dependent-claim-reference>, where said second key generator is adapted to generate a key after said memory unit has been initialized. </claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, including a second memory unit connected to said bus, said memory unit being a cache buffering data for said second memory unit. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>said functional unit is a second memory unit; and </claim-text>
<claim-text>said memory unit is a cache buffering data for said second memory unit. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein said second key providing means is a second alterable key providing means. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. A microprocessor configuration, comprising: 
<claim-text>a central processing unit; </claim-text>
<claim-text>a functional unit; </claim-text>
<claim-text>a memory unit; </claim-text>
<claim-text>each of said central processing unit, said memory unit, and said functional unit having a first encryption unit with: 
<claim-text>an alterable key providing device; and </claim-text>
<claim-text>a first combinational logic element; </claim-text>
</claim-text>
<claim-text>said memory unit having a second encryption unit with: 
<claim-text>a key providing device; and </claim-text>
<claim-text>a second combinational logic element; </claim-text>
</claim-text>
<claim-text>a bus; </claim-text>
<claim-text>said first encryption unit connecting said central processing unit to said bus; </claim-text>
<claim-text>said second encryption unit connecting said functional unit to said bus; </claim-text>
<claim-text>said third encryption unit connecting said memory unit to said bus; </claim-text>
<claim-text>said bus connecting said central processing unit, said functional unit, and said memory unit to one another for interchanging data therebetween; and </claim-text>
<claim-text>said second combinational logic element connected between said alterable key providing device and said first combinational logic element. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein: 
<claim-text>said alterable key providing device has: 
<claim-text>a register with an output connected to said first combinational logic element; and </claim-text>
<claim-text>an input side; and </claim-text>
</claim-text>
<claim-text>a key generator is connected to said input side of said alterable key providing device of each of said first encryption units. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00019">
<claim-text><highlight><bold>19</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein said key generator is a random number generator adapted to randomly generate binary numbers. </claim-text>
</claim>
<claim id="CLM-00020">
<claim-text><highlight><bold>20</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, including a clock generator, said register of each of said first encryption units being commonly controlled by said clock generator. </claim-text>
</claim>
<claim id="CLM-00021">
<claim-text><highlight><bold>21</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00011">claim 19</dependent-claim-reference>, wherein said register of each of said first encryption units is adapted to be controlled by a common clock generator. </claim-text>
</claim>
<claim id="CLM-00022">
<claim-text><highlight><bold>22</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00011">claim 18</dependent-claim-reference>, wherein: 
<claim-text>said first combinational logic element has an input; </claim-text>
<claim-text>said second combinational logic element has inputs; </claim-text>
<claim-text>said key providing device has a register with an input and an output; </claim-text>
<claim-text>a second key generator is connected to said input of said register of said key providing device; </claim-text>
<claim-text>a respective one of said inputs of said second combinational logic element is connected to: </claim-text>
<claim-text>said output of said register of said key providing device; and </claim-text>
<claim-text>said register of said alterable key providing device; and </claim-text>
<claim-text>said output of said second combinational logic element is connected to said input of said first combinational logic element. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00023">
<claim-text><highlight><bold>23</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein: 
<claim-text>a respective one of said inputs of said second combinational logic element is connected to: 
<claim-text>said output of said register of said key providing device; and </claim-text>
<claim-text>said register of said alterable key providing device of said memory unit; and </claim-text>
</claim-text>
<claim-text>said output of said second combinational logic element is connected to an input of said first combinational logic element of said memory unit. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00024">
<claim-text><highlight><bold>24</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein said first combinational logic element is an Exclusive-OR-gate. </claim-text>
</claim>
<claim id="CLM-00025">
<claim-text><highlight><bold>25</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein said second combinational logic element is an Exclusive-OR-gate. </claim-text>
</claim>
<claim id="CLM-00026">
<claim-text><highlight><bold>26</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00022">claim 24</dependent-claim-reference>, wherein said second combinational logic element is an Exclusive-OR-gate. </claim-text>
</claim>
<claim id="CLM-00027">
<claim-text><highlight><bold>27</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein said memory unit is a volatile memory. </claim-text>
</claim>
<claim id="CLM-00028">
<claim-text><highlight><bold>28</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, wherein said second key generator is adapted to generate a new key when said memory unit has no valid memory content. </claim-text>
</claim>
<claim id="CLM-00029">
<claim-text><highlight><bold>29</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00022">claim 22</dependent-claim-reference>, where said second key generator is adapted to generate a key after said memory unit has been initialized. </claim-text>
</claim>
<claim id="CLM-00030">
<claim-text><highlight><bold>30</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, including a second memory unit connected to said bus, said memory unit being a cache buffering data for said second memory unit. </claim-text>
</claim>
<claim id="CLM-00031">
<claim-text><highlight><bold>31</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein: 
<claim-text>said functional unit is a second memory unit; and </claim-text>
<claim-text>said memory unit is-a cache buffering data for said second memory unit. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00032">
<claim-text><highlight><bold>32</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00011">claim 17</dependent-claim-reference>, wherein said key providing device is a second key providing device.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005313A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005313A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
