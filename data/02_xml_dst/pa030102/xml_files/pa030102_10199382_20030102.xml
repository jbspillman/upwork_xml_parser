<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030002079A1-20030102-D00000.TIF SYSTEM "US20030002079A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030002079A1-20030102-D00001.TIF SYSTEM "US20030002079A1-20030102-D00001.TIF" NDATA TIF>
<!ENTITY US20030002079A1-20030102-D00002.TIF SYSTEM "US20030002079A1-20030102-D00002.TIF" NDATA TIF>
<!ENTITY US20030002079A1-20030102-D00003.TIF SYSTEM "US20030002079A1-20030102-D00003.TIF" NDATA TIF>
<!ENTITY US20030002079A1-20030102-D00004.TIF SYSTEM "US20030002079A1-20030102-D00004.TIF" NDATA TIF>
<!ENTITY US20030002079A1-20030102-D00005.TIF SYSTEM "US20030002079A1-20030102-D00005.TIF" NDATA TIF>
<!ENTITY US20030002079A1-20030102-D00006.TIF SYSTEM "US20030002079A1-20030102-D00006.TIF" NDATA TIF>
<!ENTITY US20030002079A1-20030102-D00007.TIF SYSTEM "US20030002079A1-20030102-D00007.TIF" NDATA TIF>
<!ENTITY US20030002079A1-20030102-D00008.TIF SYSTEM "US20030002079A1-20030102-D00008.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030002079</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10199382</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020719</filing-date>
</domestic-filing-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F015/00</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>358</class>
<subclass>001150</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Recovery of bit-rotated frames during facsimile transmissions in a global system for mobile communications (GSM) network</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10199382</doc-number>
<kind-code>A1</kind-code>
<document-date>20020719</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>09076041</doc-number>
<document-date>19980509</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>PENDING</parent-status>
</parent-child>
</continuation-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Susan</given-name>
<middle-name>A.</middle-name>
<family-name>Hartman</family-name>
</name>
<residence>
<residence-us>
<city>Thousand Oaks</city>
<state>CA</state>
<country-code>US</country-code>
</residence-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>Adam Furst</name-1>
<name-2>BLAKELY, SOKOLOFF, TAYLOR &amp; ZAFMAN LLP</name-2>
<address>
<address-1>Seventh Floor</address-1>
<address-2>12400 Wilshire Boulevard</address-2>
<city>Los Angeles</city>
<state>CA</state>
<postalcode>90025-1026</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A system and method for handling facsimile transmissions in a digital communications network, such as a GSM network. In general, the process includes first synchronizing incoming binary-coded facsimile information and then recording the degree of bit-rotation exhibited by the facsimile information. Segregated portions of the incoming facsimile information are identified as either a synchronization sequence, facsimile status information, or neither type. If a portion of the incoming transmission is identified as facsimile status information, any bit-rotated condition present in the portion is compensated for prior to further processing. In addition, once the incoming information has been synchronized, every time thereafter that a synchronization sequence or facsimile status information is identified in a portion of the incoming information, this event is used as an indication that the facsimile transmission is still in synchronization. </paragraph>
</subdoc-abstract>
<subdoc-description>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> 1. Technical Field: </paragraph>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> This invention relates to a system and process for handling facsimile communications in a global system for mobile communications (GSM) network, and more particularly, to such a system and process that automatically synchronizes incoming facsimile information, detects a bit-rotated condition and recovers bit-rotated status frames in an unspecified GSM network. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> 2. Background Art: </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> In the new mobile information age, the cellular phone is delivering more than just voice calls. It is being coupled with portable PCs to send and receive information on corporate intranets, the Internet and online services while on the go for increased productivity and efficiency. Mobile systems are evolving at a rapid pace to provide faster and more sophisticated communications capabilities. The Global System for Mobile Communications (GSM) digital cellular technology promises to deliver the robust platform and high-bandwidth needed to realize these sophisticated communications capabilities. For example, GSM technology makes the transmission and receipt of facsimiles over mobile phone systems a reality. The Global System for Mobile Communications technically refers to a standard created in 1987. Thirteen European countries signed a Memorandum of Understanding and agreed to the construction of a standardized telecommunications system. GSM, a digital, multicellular mobile telephone network system, was developed from this standard. In a GSM network, voice is converted into a coded digital signal, which is transmitted and decoded in the receiving GSM handset. Data and facsimiles are also transmitted digitally, currently at 9600 bps, although this data rate is likely to increase significantly in the near future. Originally, GSM was intended to be established only as a Pan-European system, but today has expanded into many other parts of the world, including to some extent the United States of America. Thus, GSM is rapidly becoming a world-wide network. GSM employs a small Subscriber Identity Module Card (SIM Card) that a user inserts into a GSM handset. These SIM cards contain information such as the user&apos;s telephone number and billing data, among other things. This enables a user to travel anywhere in the world having a GSM system and receive phone calls and other data transmissions using their usual telephone number by simply inserting their SIM Card into an appropriate GSM handset. Essentially, this is accomplished via an international roaming feature whereby bilateral roaming agreements between service providers allow reciprocal access to each others network. Mobile users do not have to deal with various foreign dialing tones, access codes, country codes or incompatible hardware. Once a user turns on their GSM handset and logs onto the local network, the system finds them and routes all incoming calls and data transmissions to them just as if they were home. In regards to the handling of data transmissions over a GSM network, one of the primary ways in which this is accomplished is with the use of a conventional notebook PC, and a PC Card designed for GSM networks. The PC Card provides the necessary interface between the notebook PC and the GSM handset (and so the GSM network). Since a GSM mobile phone and a portable PC are both digital devices, a modem in the true sense of the word is not necessary. What is needed is Terminal Adapter Equipment (TAE) to translate between the different digital formats of the GSM phone and the PC, and to simulate an ordinary modem to the PC by sending signals such as a dial tone and busy tone. This is a primary function of the GSM PC Card, although not its only one. </paragraph>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> The European Telecommunications Standard (ETS) standards document &ldquo;ETS 300 538&rdquo; Second Edition, reference RE/SMG-0403045P, &ldquo;European digital cellular telecommunications system (Phase 2); Technical realization of facsimile group 3 transparent (GSM 03.45)&rdquo; specifies a standardized &ldquo;fax adaptation&rdquo; communications interface used to send and receive group <highlight><bold>3</bold></highlight> facsimiles (faxes) using the GSM. Among other things, GSM 03.45 defines the following set of fax adaptation frames: </paragraph>
<paragraph id="P-0006" lvl="2"><number>&lsqb;0006&rsqb;</number> a) SYNC frame&mdash;an adaptation frame explicitly designed to allow synchronization at the remote end, even in adverse transmission environments. This frame is a unique frame used even as an idle frame when there is no information to be sent over the radio path. The SYNC frames are 8 octet (i.e. byte) frames containing the following values (in hex notation) as specified by the ETS: &ldquo;3E 37 50 96 C1 C8 AF 69&rdquo;. </paragraph>
<paragraph id="P-0007" lvl="2"><number>&lsqb;0007&rsqb;</number> b) STATUS frame&mdash;this frame is intended to carry both state identification codes and state specific information that collectively constitute facsimile transmission instructions. The STATUS frame has a unique structured format as shown in the following Table 1:  
<table-cwu id="TABLE-US-00001">
<number>1</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="8">
<colspec colname="1" colwidth="28PT" align="left"/>
<colspec colname="2" colwidth="21PT" align="center"/>
<colspec colname="3" colwidth="28PT" align="left"/>
<colspec colname="4" colwidth="28PT" align="left"/>
<colspec colname="5" colwidth="28PT" align="left"/>
<colspec colname="6" colwidth="28PT" align="left"/>
<colspec colname="7" colwidth="28PT" align="left"/>
<colspec colname="8" colwidth="28PT" align="left"/>
<thead>
<row>
<entry namest="1" nameend="8" align="center">TABLE 1</entry>
</row>
<row>
<entry></entry>
</row>
<row><entry namest="1" nameend="8" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry>octet</entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
</row>
<row>
<entry>octet 0</entry>
<entry>1</entry>
<entry>octet 2</entry>
<entry>octet 3</entry>
<entry>octet 4</entry>
<entry>octet 5</entry>
<entry>octet 6</entry>
<entry>octet 7</entry>
</row>
<row><entry namest="1" nameend="8" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry>IDENT</entry>
<entry>INFO</entry>
<entry>IDENT</entry>
<entry>INFO</entry>
<entry>IDENT</entry>
<entry>INFO</entry>
<entry>IDENT</entry>
<entry>INFO</entry>
</row>
<row><entry namest="1" nameend="8" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0008" lvl="7"><number>&lsqb;0008&rsqb;</number> The IDENT octets are split into two 4-bit fields, each of which specifies the same state identification code for the status information. The duplication within each IDENT octet is done to mitigate the effects of noise in the bit stream. This is also one of the reasons for repeating of the IDENT and INFO octet pairs four times in each STATUS frame, along with facilitating synchronization checking. The state identification codes contained in the IDENT octets identify what type of state specific information is contained in the INFO octets. For example, an IDENT code <highlight><bold>11</bold></highlight> (in hex notation) indicates that the INFO octets contain a binary coded signal (BCS) under the ETS. The state specific information contained in the INFO octets can be commands, instructions, etc. For example, in the case of an incoming facsimile transmission, the state specific information may represent a standard facsimile control message used in connection with group <highlight><bold>3</bold></highlight> faxes. In reference to the state specific information, it is noted that the repetition of the above-described INFO octets in a STATUS frame also allows the incoming bit stream to be adapted to the conventional 300 bps rate associated with the standard facsimile control messages. </paragraph>
<paragraph id="P-0009" lvl="2"><number>&lsqb;0009&rsqb;</number> c) DATA frame&mdash;this frame is fully unstructured and carries fax coded information (i.e. scanline data) when data is being passed. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> In simplified terms, a typical facsimile transmission in a GSM network would involve a sending GSM unit initiating the transmission by sending a series of SYNC frames to a receiving GSM unit. The receiving unit would identify one or more of the incoming SYNC frames and use the frame(s) to synchronize the incoming transmission so that the individual SYNC, STATUS and DATA frames can be recognized in the incoming facsimile information and processed accordingly. In addition, the receiving unit transmits a series of SYNC and STATUS frames back to the sending unit. The sending unit uses these frames to synchronize the incoming facsimile information and recognize state specific information contained in the incoming STATUS frames. This information can include items such as the capabilities of the receiving unit. For example, the receiving unit might relay the kinds of data compression it can employ/decode, its data transmission speeds, page sizes it can handle, etc. The sending unit would then transmit, among other things, STATUS frames that specify how the facsimile will be sent in view of the relayed capabilities of the receiving unit. Once the facsimile transmission ground rules are established, the sending unit will transmit the facsimile scan line data by transmitting a special sequence of alternating SYNC and STATUS frames which tell the receiving unit the next non-SYNC/STATUS frame is a DATA frame. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> In the true-life realization of a GSM network, the aforementioned frames may be bit rotated from 0 bits to 7 bits. Thus, in order to send and receive facsimiles from any network in the world, there must be a provision for determining the degree of bit rotation in the incoming signal and interpreting the signal so as to synchronize the transmission and recognize the STATUS frame information. One way to accomplish this task would be to store all the bit-rotation patterns for every network in the world. For example, this information could be part of a look up table stored in a memory module of a GSM PC Card. However, such a scheme would have many drawbacks and so is not preferred. For example, this look-up table scheme would require the user to specify what network the handset is operating over via some kind of manual input, so that the system can &ldquo;look-up&rdquo; the bit-rotation pattern for that network and apply it to the incoming signal. The requirement for user input to send or receive facsimiles complicates the use of the system and is considered very undesirable. New GSM networks are also being formed at a rapid pace. This would require frequent updating or replacement of the GSM PC Card to add new network bit-rotation patterns to the look-up table. In addition, not all networks cause the same bit-rotation pattern to occur at all times. This would complicate the look-up table scheme in that some method would have to be employed to determine which one of various possible bit-rotation patterns was associated with the incoming signal. Further, if the bit-rotation pattern of the network was completely variable, then the look up table scheme would not work at all. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> Accordingly, there is a need for a system and method to process potentially bit-rotated facsimile transmissions in a (GSM) network without knowledge of the bit-rotation patterns associated with the particular GSM network involved or the requirement for a user to input information about the network. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY </heading>
<paragraph id="P-0013" lvl="7"><number>&lsqb;0013&rsqb;</number> The above-described needs are realized with embodiments of the present invention directed to a system and method for handling facsimile transmissions in a digital communications network, such as a GSM network. In general, the preferred process includes first synchronizing incoming binary-coded facsimile information and then recording the degree of bit-rotation exhibited by the facsimile information. Segregated portions of the incoming facsimile information are also identified as either a synchronization sequence, facsimile status information, or neither type. If a portion of the incoming transmission is identified as facsimile status information, any bit-rotated condition present is compensated for prior to further processing. In addition, once the incoming information has been synchronized, every time thereafter that a synchronization sequence or facsimile status information is identified in a portion of the incoming information, this event is used as an indication that the facsimile transmission is still in synchronization. The foregoing process is performed by either a receiving unit receiving a facsimile or by a sending unit receiving facsimile information back from the receiving unit. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> The aforementioned synchronizing step is accomplished by first searching the incoming facsimile information for either a non bit-rotated, eight-octet, synchronization sequence, or one of seven other bit-rotated, eight-octet, synchronization sequences. The seven bit-rotated sequences correspond to a version of the non bit-rotated sequence after it has been bit-rotated from one to seven bits, respectively. Specifically, the searching process involves comparing each octet of the incoming facsimile information to the octet occupying a prescribed octet location of each synchronization sequence. For example, assuming the eight octets of each synchronization sequence are sequentially designated by octet locations <highlight><bold>0</bold></highlight> through <highlight><bold>7</bold></highlight>, the prescribed octet location could correspond to the first octet of each synchronization sequence, i.e. octet location <highlight><bold>0</bold></highlight>. The searching process continues by detecting the first-occurring match between an octet of the incoming facsimile information and one of the compared synchronization sequence octets. The synchronization sequence associated with the matching octet is designated as the selected sequence. The remaining octets of the selected synchronization sequence are then compared to correspondingly located octets of the incoming facsimile information. For example, the remaining seven octets of the selected sequence could be compared to the next seven octets of the incoming facsimile information following the matched octet, in sequence, beginning with the synchronization sequence&apos;s octet location <highlight><bold>1</bold></highlight> and ending with octet location <highlight><bold>7</bold></highlight>. Whenever all eight octets of the selected synchronization sequence match the correspondingly located eight octets of the incoming facsimile data, that eight-octet portion of the incoming facsimile information is designated as the first-discovered synchronization sequence. This first-discovered synchronization sequence is used to build the first eight-octet, logical facsimile adaptation frame (LFAF). Thereafter, every subsequent group of eight octets of the incoming facsimile information is used to build additional LFAFs. The building of these LFAFs amounts to the aforementioned segregating of the incoming facsimile information. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> The step of recording the degree of bit-rotation exhibited by the incoming facsimile information involves noting the number of bits the aforementioned selected synchronization sequence is rotated in comparison to the non bit-rotated sequence. This, in turn, indicates the degree of bit rotation associated with the first-discovered synchronization sequence. An indicator of the number of bits the first-discovered synchronization sequence is rotated is then stored for future use. Preferably, the indicator constitutes a number varying from zero to seven, wherein zero indicates that the first-discovered synchronization sequence corresponds to the non bit-rotated sequence, and one through seven indicate that the first-discovered synchronization sequence corresponds to the non-bit-rotated sequence which has been rotated from one to seven bits, respectively. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> The aforementioned step of identifying segregated portions of the incoming facsimile information as either a synchronization sequence, facsimile status information, or neither, preferably involves declaring a LFAF to be a SYNC frame if it contains a portion of the incoming facsimile information reported as being a synchronization sequence, declaring a LFAF to be a STATUS frame if it contains a portion of the incoming facsimile information reported as being facsimile status information, and declaring a LFAF to be an Unknown frame if it contains a portion of the incoming facsimile information not reported as being either a synchronization sequence or facsimile status information. Determining whether a LFAF contains a synchronization sequence entails comparing a designated octet of the LFAF to a correspondingly located octet of the previously selected synchronization sequence and then detecting if there is a match. However, in searching for the original synchronization sequence in the incoming facsimile information, it was critical that all eight octets were found to ensure the transmission was properly synchronized. This is not as critical in the LFAF identification process, and fewer than all the octets of the LFAF could be compared and matched to the selected synchronization sequence, thereby simplifying the process to some degree. In addition, the ability to detect the presence of a synchronization sequence in a LFAF by comparing and matching less than all eight octets has a significant advantage in the LFAF identification process. Namely, it is known that the information contained in octet location <highlight><bold>0</bold></highlight> of a LFAF created from the incoming facsimile information is susceptible to corruption during transmission in some GSM networks. Thus, by eliminating this octet from the comparing step, the ability to identify the LFAF as containing a synchronization sequence is enhanced. While others of the LFAF&apos;s octets could also be eliminated from the comparison process to further reduce the processing, this also lowers the confidence level that the LFAF actually the selected synchronization sequence. Therefore, it is preferred that all the remaining octets, exclusive of the first, be used in the comparison. In such a case, the aforementioned correspondingly located octet of the selected synchronization sequence associated with the designated octet of the LFAF preferably corresponds to octet location <highlight><bold>1</bold></highlight> and the remaining octets of the selected synchronization sequence compared to the correspondingly located octets in the LFAF correspond to octet locations <highlight><bold>2</bold></highlight> through <highlight><bold>7</bold></highlight>. Finally, the process of determining whether a LFAF contains a synchronization sequence concludes by reporting the LFAF contains such a sequence if all the compared octets match, thereby identifying the LFAF to be a SYNC frame. It is noted that once an LFAF is identified as a SYNC frame, this provides an indication that the facsimile transmission is still in synchronization. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> The process of declaring a LFAF to be a STATUS frame involves the steps of comparing at least one of the LFAF&apos;s octets residing in either an odd or even octet location with another of the LFAF&apos;s octets residing in either an odd or even location, respectively. In other words, an octet occupying an odd octet location is compared an octet occupying another of the odd octet locations, and an octet occupying an even octet location is compared to an octet occupying another of the even octet locations. The number of these octet pairs compared is a question of what level of confidence is required in ascertaining whether a LFAF is a STATUS frame. In the preferred embodiment of the present invention, this process entails comparing the octet at octet location <highlight><bold>1</bold></highlight> with the octet at octet location <highlight><bold>3</bold></highlight>, the octet at octet location <highlight><bold>2</bold></highlight> with the octet at octet location <highlight><bold>4</bold></highlight>, the octet at octet location <highlight><bold>3</bold></highlight> with the octet at octet location <highlight><bold>5</bold></highlight>, and the octet at octet location <highlight><bold>4</bold></highlight> with the octet at octet location <highlight><bold>6</bold></highlight>. It is believed this pattern of comparison will provide an adequate level of confidence that the LFAF is a STATUS frame if all the compared octets match. However, if desired, the process can additionally entail comparing the octet at octet location <highlight><bold>0</bold></highlight> with the octet at octet location <highlight><bold>2</bold></highlight>, and the octet at octet location <highlight><bold>5</bold></highlight> with the octet at octet location <highlight><bold>7</bold></highlight>. It is noted that once an LFAF is identified as a STATUS frame, this fact also provides an indication that the facsimile transmission is still in synchronization. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> The general step of compensating for any bit-rotated condition present in a portion of the incoming facsimile information containing facsimile status information is accomplished by rotating the bits of any LFAF declared to be a STATUS frame by the number of bits denoted by the stored indicator. The rotating of bits involves sequentially shifting bits from a front end of the LFAF to a back end of the LFAF until the number of bits shifted equals the number denoted by the stored indicator. This results in placing the STATUS frame in a non bit-rotated condition ready for further processing in the communications system. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> The system and method embodying the present invention also include a capability to determine whether the incoming facsimile information is still in synchronization whenever an LFAF is declared to be an Unknown frame and no facsimile scan line data is expected. Preferably, this is accomplished by monitoring what type of frame each LFAF is declared to be and then tracking the number of consecutive LFAFs declared to be Unknown frames. Whenever a prescribed number of consecutive Unknown frames are detected, the incoming facsimile information is declared to be out of synchronization. This prescribed number is preferably five frames. Finally, the incoming facsimile information is re-synchronized by starting the foregoing process over from the beginning. This is done whenever it is determined that the transmission has fallen out of synchronization. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> The foregoing process as employed in an appropriate computing environment, be it a firmware adaptation or a general purpose computer, resolves the problems described in connection with handling facsimile transmissions in a GSM network. The process allows bit-rotated STATUS frames to be placed in a non bit-rotated condition prior to being processed in the system. This is done automatically by gleaning the degree of bit rotation from the first synchronization sequence discovered in the incoming facsimile information, and then using this knowledge to compensate for the undesired bit-rotation caused by the particular GSM network the user is employing to receive or send the facsimile. No prior knowledge about the GSM network is necessary and the user does not need to input anything to facilitate the bit rotation compensation process. In addition, as an added benefit of the bit rotation compensation process, synchronization sequences and facsimile status information embedded within the incoming facsimile information are identified and used to confirm that the facsimile transmission is still in synchronization. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> In addition to the just described benefits, other objectives and advantages of the present invention will become apparent from the detailed description which follows hereinafter when taken in conjunction with the drawing figures which accompany it.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> The specific features, aspects, and advantages of the present invention will become better understood with regard to the following description, appended claims, and accompanying drawings where: </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a diagram depicting an exemplary operating environment for implementing a process embodying the present invention involving the use of a portable PC, GSM handset and a PC Card. </paragraph>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a block diagram of the major components of the PC Card of <cross-reference target="DRAWINGS">FIG. 1</cross-reference> used to implement the process embodying the present invention. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 3</cross-reference> is a diagram depicting a general purpose computing device constituting another exemplary system for implementing the present invention. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 4</cross-reference> is a block diagram of an overall process for handling the receipt of facsimile transmissions in a digital communications network according to the present invention. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 5</cross-reference> is a block diagram of a process for synchronizing an incoming facsimile transmission as required by the overall process of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 6</cross-reference> is a block diagram of a process for searching the incoming facsimile information for a synchronization sequence as required by the process of <cross-reference target="DRAWINGS">FIG. 5</cross-reference>. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 7</cross-reference> is a block diagram of a process for recording the degree of bit-rotation associated with the incoming facsimile transmission as required by the overall process of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 8</cross-reference> is a block diagram of a process for identifying or confirming that a logical facsimile adaptation frame (LFAF) is a SYNC frame as required by the process of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0031" lvl="0"><number>&lsqb;0031&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 9</cross-reference> is a block diagram of a process for identifying that a LFAF is a STATUS frame as required by the process of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0032" lvl="0"><number>&lsqb;0032&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 10</cross-reference> is a block diagram of a process for compensating for bit rotation in a STATUS frame as required by the process of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. </paragraph>
<paragraph id="P-0033" lvl="0"><number>&lsqb;0033&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 11</cross-reference> is a block diagram of a process for determining if the facsimile transmission has fallen out of synchronization as required by the process of <cross-reference target="DRAWINGS">FIG. 4</cross-reference>.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0034" lvl="0"><number>&lsqb;0034&rsqb;</number> In the following description of the preferred embodiments of the present invention, reference is made to the accompanying drawings which form a part hereof, and in which is shown by way of illustration specific embodiments in which the invention may be practiced. It is understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention. </paragraph>
<paragraph id="P-0035" lvl="0"><number>&lsqb;0035&rsqb;</number> The present invention in general relates to a system and process for handling facsimile communications in a global system for mobile communications (GSM) network. This system and process is employed by both a receiving unit receiving a facsimile and by a sending unit receiving facsimile information (such as the receiving unit&apos;s facsimile capabilities) back from the receiving unit. The system may be specifically constructed for the required purpose of performing the process of the present invention, such as a firmware implementation of the process. Alternatively, the system may involve the use of a general purpose computer selectively configured by a computer program stored in the computer. </paragraph>
<paragraph id="P-0036" lvl="0"><number>&lsqb;0036&rsqb;</number> In regards to a firmware embodiment of the present invention, <cross-reference target="DRAWINGS">FIG. 1</cross-reference> illustrates one possible operating environment for the system. A portable personal computer (PC) <highlight><bold>10</bold></highlight>, often also referred to as a notebook computer, is interfaced with a GSM handset <highlight><bold>12</bold></highlight> using a GSM PC Card <highlight><bold>14</bold></highlight> (e.g. a &ldquo;PC Card <highlight><bold>16</bold></highlight>&rdquo;, or a &ldquo;PC Card <highlight><bold>32</bold></highlight>&rdquo; often referred to as a CardBus) and the appropriate interface cabling <highlight><bold>16</bold></highlight>. In the depicted operating environment, the GSM PC Card <highlight><bold>14</bold></highlight> is inserted into the PC Card slot <highlight><bold>18</bold></highlight> of the portable PC <highlight><bold>10</bold></highlight>. The GSM PC Card <highlight><bold>14</bold></highlight> is also connected to the appropriate I/O port of the GSM handset <highlight><bold>12</bold></highlight>. It is the GSM PC Card <highlight><bold>14</bold></highlight> that contains the firmware implementation of the present invention. Referring to <cross-reference target="DRAWINGS">FIG. 2, a</cross-reference> simplified block diagram of the GSM PC Card <highlight><bold>14</bold></highlight> is presented. This diagram shows only the major components of the Card <highlight><bold>14</bold></highlight> that are involved with the present invention for the sake of simplicity. The Card <highlight><bold>14</bold></highlight> includes a central processing unit (CPU) <highlight><bold>20</bold></highlight> which is coupled to an internal system bus <highlight><bold>22</bold></highlight>. The system bus <highlight><bold>22</bold></highlight> may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. A memory <highlight><bold>24</bold></highlight> is also coupled to the internal system bus <highlight><bold>22</bold></highlight>. A program storage portion <highlight><bold>26</bold></highlight> of the memory is used, among other things, to store the programming code associated with the process of the present invention. The data storage portion <highlight><bold>28</bold></highlight> of the memory is used to store incoming data, as well as processed versions of this data. There is also a handset interface circuit <highlight><bold>30</bold></highlight> connected between the system bus <highlight><bold>22</bold></highlight> and a connector <highlight><bold>32</bold></highlight> used to link a GSM handset via an interface cable to the PC Card <highlight><bold>14</bold></highlight>. A separate PC interface circuit <highlight><bold>34</bold></highlight> is connected between the system bus <highlight><bold>22</bold></highlight> and a standard 68-pin PC Card connector <highlight><bold>36</bold></highlight> to link a portable PC to the PC Card <highlight><bold>14</bold></highlight>. In operation, data received by the GSM handset depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is transferred to the data storage portion <highlight><bold>28</bold></highlight> of the memory via the handset interface circuit <highlight><bold>30</bold></highlight> and the system bus <highlight><bold>22</bold></highlight>. The CPU <highlight><bold>20</bold></highlight> operates on this data using instructions provided by the program code resident in the program storage portion <highlight><bold>26</bold></highlight> of the memory. Processed versions of the data are then stored in the data storage portion <highlight><bold>28</bold></highlight> of the memory after being operated on by the CPU <highlight><bold>20</bold></highlight>. The CPU <highlight><bold>20</bold></highlight> also controls the flow of data from the data storage <highlight><bold>28</bold></highlight> to the portable PC via the system bus <highlight><bold>22</bold></highlight> and the PC interface circuit <highlight><bold>34</bold></highlight>. Data can also be transferred under the control of the CPU from the portable PC, via the system bus <highlight><bold>22</bold></highlight> and the two interface circuits <highlight><bold>30</bold></highlight>, <highlight><bold>34</bold></highlight>, to the GSM handset for further transmission. It is noted that the operating environment depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference> does not represent the only operating environment for a firmware implementation of the present invention. Rather many configurations are possible. For example, the portable PC might be replaced by a PC Card capable hand-held computing device, such as a so called personal digital assistant. Another example of an alternate operating environment would involve replacing the portable PC with a desktop PC and the PC Card with an internal circuit card that includes the above-described components. Thus, the operating environment associated with a firmware implementation of the present invention is not limited to that depicted in <cross-reference target="DRAWINGS">FIG. 1</cross-reference>. </paragraph>
<paragraph id="P-0037" lvl="0"><number>&lsqb;0037&rsqb;</number> In regards to the aforementioned implementation of the invention in a software program running on a general purpose computer system, <cross-reference target="DRAWINGS">FIG. 3</cross-reference> depicts a suitable computing environment for this implementation. The exemplary computer system of <cross-reference target="DRAWINGS">FIG. 3</cross-reference> includes a general purpose computing device in the form of a conventional personal computer <highlight><bold>40</bold></highlight>, including a processing unit <highlight><bold>42</bold></highlight>, a system memory <highlight><bold>44</bold></highlight>, and a system bus <highlight><bold>46</bold></highlight> that couples various system components including the system memory to the processing unit <highlight><bold>42</bold></highlight>. The system bus <highlight><bold>46</bold></highlight> may be any of several types of bus structures such as described previously in connection with the firmware embodiment of the invention. The system memory includes read only memory (ROM) <highlight><bold>48</bold></highlight> and random access memory (RAM) <highlight><bold>50</bold></highlight>. The personal computer <highlight><bold>40</bold></highlight> further includes data storage devices such as, but not limited to, a hard disk drive <highlight><bold>52</bold></highlight>, a magnetic disk drive <highlight><bold>54</bold></highlight>, and an optical disk drive <highlight><bold>56</bold></highlight>. All of these drives are respectively connected to the system bus <highlight><bold>46</bold></highlight> via an appropriate interface <highlight><bold>72</bold></highlight>, <highlight><bold>74</bold></highlight>, <highlight><bold>76</bold></highlight> and are capable of reading from and writing to an appropriate computer-readable medium (e.g. hard disk, magnetic disk, or optical disk, respectively). The drives and their associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the personal computer <highlight><bold>40</bold></highlight>, as do the ROM <highlight><bold>48</bold></highlight> and RAM <highlight><bold>50</bold></highlight>. These may include an operating system, one or more application programs, other program modules, and data. </paragraph>
<paragraph id="P-0038" lvl="0"><number>&lsqb;0038&rsqb;</number> A user may enter commands and information into the personal computer <highlight><bold>40</bold></highlight> through input devices such as, but not limited to a keyboard <highlight><bold>58</bold></highlight> and pointing device <highlight><bold>60</bold></highlight> (e.g., a computer mouse). These and other input devices are typically connected to the processing unit <highlight><bold>42</bold></highlight> through a serial port interface <highlight><bold>62</bold></highlight> via the system bus <highlight><bold>46</bold></highlight>. A monitor <highlight><bold>64</bold></highlight> is also connected to the system bus <highlight><bold>46</bold></highlight> typically via a video adapter <highlight><bold>66</bold></highlight>. Personal computers usually also include other peripheral output devices (not shown), such as speakers and printers, connected via appropriate interfaces. It is noted that while the above description refers to a PC, those skilled in the art will appreciate that the invention may be practiced with other software configurable computing systems, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. </paragraph>
<paragraph id="P-0039" lvl="0"><number>&lsqb;0039&rsqb;</number> In the context of the present invention, the personal computer <highlight><bold>40</bold></highlight> would also include a connection to a GSM device <highlight><bold>68</bold></highlight> via an appropriate interface <highlight><bold>70</bold></highlight>, which is linked to the system bus <highlight><bold>46</bold></highlight>, for establishing communications over a GSM network. This GSM device <highlight><bold>68</bold></highlight> may be internal, as depicted in <cross-reference target="DRAWINGS">FIG. 3</cross-reference>, or external such as the GSM handset connected to the computer through a GSM-compatible connector and an interface cable (similar to the set-up of <cross-reference target="DRAWINGS">FIG. 1</cross-reference>). </paragraph>
<paragraph id="P-0040" lvl="0"><number>&lsqb;0040&rsqb;</number> No particular programming language has been indicated for carrying out the various processes described herein. Each designer will be aware of a language which is most suitable for his or her immediate purposes. In addition, because the computers, and other devices which may be used in practicing the instant invention consist of many diverse elements, no detailed program listing has been provided. It is considered that the operations and other procedures described herein and illustrated in the accompanying drawings are sufficiently disclosed to enable one of ordinary skill in the art to practice the instant invention. Further, the invention will be described in the general context of process steps, such as can be embodied in program modules and sub-modules executable by an appropriate computing device. Generally, these program modules and sub-modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. </paragraph>
<paragraph id="P-0041" lvl="0"><number>&lsqb;0041&rsqb;</number> The exemplary operating environments having now been discussed, the remaining part of this section will be devoted to a description of the preferred program modules embodying the invention. <cross-reference target="DRAWINGS">FIG. 4</cross-reference> provides a general overview of a preferred process in accordance with the present invention for handling group 3 facsimile transmissions in a GSM network. The first program module <highlight><bold>400</bold></highlight> in the process involves synchronizing an incoming facsimile transmission. This synchronization includes generating logical facsimile adaptation frames (LFAFs). The second module <highlight><bold>402</bold></highlight> involves identifying and recording the degree of bit-rotation exhibited by the incoming facsimile information, which can vary from none at all, up to a rotation of seven bits. The third module <highlight><bold>404</bold></highlight> involves identifying the frame type of each LFAF generated (e.g. SYNC frame, STATUS frame, or neither). The fourth program module <highlight><bold>406</bold></highlight> concerns compensating for the bit rotation in each STATUS frame identified, so as to make the frame interpretable under the European Telecommunication Standard (ETS) guidelines. </paragraph>
<paragraph id="P-0042" lvl="0"><number>&lsqb;0042&rsqb;</number> It is noted that whenever a SYNC frame or STATUS frame is identified in the third program module <highlight><bold>404</bold></highlight>, this in itself provides an indication that the transmission is still in synchronization (program modules <highlight><bold>408</bold></highlight> and <highlight><bold>410</bold></highlight>). Further, if neither a STATUS or SYNC frame is identified, the frame will be designated as an &ldquo;Unknown&rdquo; frame. An Unknown frame will be processed as a DATA frame if facsimile scan line data is expected (as will be discussed in further detail later in this description). If, however, no DATA frames are expected, the identification of an Unknown frame could indicate a SYNC or STATUS frame was received but corrupted by noise to the extent it is unrecognizable. This reasoning holds s because facsimile transmissions between sending and receiving GSM units either constitute consecutive DATA frames, a series of SYNC and STATUS frames, or a series of consecutive SYNC frames. If no DATA frames are expected, the transmission will exclusively be made up of SYNC and STATUS frames. Further, the identification of Unknown frames when no DATA frames are expected could be an indication that the transmission has fallen out of synchronization. Thus, a determination is made as to whether the transmission is out of synchronization (program module <highlight><bold>412</bold></highlight>). If the transmission is found to be out of synchronization, the foregoing process is restarted beginning with the first program module <highlight><bold>400</bold></highlight> so as to re-synchronize the transmission. </paragraph>
</section>
<section>
<heading lvl="1">1.0 Synchronizing the Transmission and Building LFAFs </heading>
<paragraph id="P-0043" lvl="0"><number>&lsqb;0043&rsqb;</number> Facsimile information is transmitted over a GSM network in batches of octets or bytes (i.e. 8-bit segments of data). Typically, when the network is operating at the most commonly used data transfer rate of 9600 bps, each data batch will consist of 24 octets. Information received by a GSM unit is placed in an appropriate system memory&mdash;for example, the data storage described in connection with the firmware embodiment of <cross-reference target="DRAWINGS">FIG. 2</cross-reference> or the RAM discussed in connection with the software embodiment of <cross-reference target="DRAWINGS">FIG. 3</cross-reference>. In the case of a 9600 bps GSM network connection, a 24-octet memory location is employed to hold the incoming facsimile information. Referring to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, the first step or sub-module <highlight><bold>500</bold></highlight> in the synchronization process is to search the data held in the 24-octet memory location for a synchronization sequence. Such a sequence is expected because the GSM network initially sends a series of back-to-back SYNC frames when attempting to transmit facsimile information. Since a SYNC frame comprises eight octets, the data stored in the 24-octet memory location should, barring noise problems, contain at least one and up to three of the transmitted SYNC frames. As discussed previously, the synchronization sequence in a GSM facsimile transmission not exhibiting any bit-rotation, will consist of the following 8 octets (in hex notation): &ldquo;3E 37 50 96 C1 C8 AF 69&rdquo;, per the ETS guidelines. However, this sequence can be received in a bit-rotated condition comprising a shift of anywhere from one to seven bits. Thus, the specified synchronization sequence may not be seen in the incoming transmission. Rather, the actual synchronization sequence received can be any of eight possibilities (i.e., not bit-rotated or bit-rotated between one and seven bits), only one of which matches the sequence specified in the ETS guidelines. The eight possible sequences are provided below in Table 2 (in hex notation).  
<table-cwu id="TABLE-US-00002">
<number>2</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="9">
<colspec colname="OFFSET" colwidth="42PT" align="left"/>
<colspec colname="1" colwidth="21PT" align="center"/>
<colspec colname="2" colwidth="21PT" align="center"/>
<colspec colname="3" colwidth="21PT" align="center"/>
<colspec colname="4" colwidth="21PT" align="center"/>
<colspec colname="5" colwidth="21PT" align="center"/>
<colspec colname="6" colwidth="21PT" align="center"/>
<colspec colname="7" colwidth="21PT" align="center"/>
<colspec colname="8" colwidth="28PT" align="center"/>
<thead>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="8" align="center">TABLE 2</entry>
</row>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="8" align="center" rowsep="1"></entry>
</row>
<row>
<entry></entry>
<entry>octet</entry>
<entry>octet</entry>
<entry>octet</entry>
<entry>octet</entry>
<entry>octet</entry>
<entry>octet</entry>
<entry>octet</entry>
<entry>octet</entry>
</row>
<row>
<entry></entry>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
<entry>4</entry>
<entry>5</entry>
<entry>6</entry>
<entry>7</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="8" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="9">
<colspec colname="1" colwidth="42PT" align="left"/>
<colspec colname="2" colwidth="21PT" align="center"/>
<colspec colname="3" colwidth="21PT" align="center"/>
<colspec colname="4" colwidth="21PT" align="center"/>
<colspec colname="5" colwidth="21PT" align="center"/>
<colspec colname="6" colwidth="21PT" align="center"/>
<colspec colname="7" colwidth="21PT" align="center"/>
<colspec colname="8" colwidth="21PT" align="center"/>
<colspec colname="9" colwidth="28PT" align="center"/>
<tbody valign="top">
<row>
<entry>0 bit rotation</entry>
<entry>3E</entry>
<entry>37</entry>
<entry>50</entry>
<entry>96</entry>
<entry>C1</entry>
<entry>C8</entry>
<entry>AF</entry>
<entry>69</entry>
</row>
<row>
<entry>1 bit rotation</entry>
<entry>9F</entry>
<entry>1B</entry>
<entry>A8</entry>
<entry>4B</entry>
<entry>60</entry>
<entry>E4</entry>
<entry>57</entry>
<entry>B4</entry>
</row>
<row>
<entry>2 bit rotation</entry>
<entry>4F</entry>
<entry>8D</entry>
<entry>D4</entry>
<entry>25</entry>
<entry>B0</entry>
<entry>72</entry>
<entry>2B</entry>
<entry>DA</entry>
</row>
<row>
<entry>3 bit rotation</entry>
<entry>27</entry>
<entry>C6</entry>
<entry>EA</entry>
<entry>12</entry>
<entry>D8</entry>
<entry>39</entry>
<entry>15</entry>
<entry>ED</entry>
</row>
<row>
<entry>4 bit rotation</entry>
<entry>93</entry>
<entry>E3</entry>
<entry>75</entry>
<entry>09</entry>
<entry>6C</entry>
<entry>1C</entry>
<entry>8A</entry>
<entry>F6</entry>
</row>
<row>
<entry>5 bit rotation</entry>
<entry>49</entry>
<entry>F1</entry>
<entry>BA</entry>
<entry>84</entry>
<entry>B6</entry>
<entry>0E</entry>
<entry>45</entry>
<entry>7B</entry>
</row>
<row>
<entry>6 bit rotation</entry>
<entry>A4</entry>
<entry>F8</entry>
<entry>DD</entry>
<entry>42</entry>
<entry>5B</entry>
<entry>07</entry>
<entry>22</entry>
<entry>BD</entry>
</row>
<row>
<entry>7 bit rotation</entry>
<entry>D2</entry>
<entry>7C</entry>
<entry>6E</entry>
<entry>A1</entry>
<entry>2D</entry>
<entry>83</entry>
<entry>91</entry>
<entry>5E</entry>
</row>
<row><entry namest="1" nameend="9" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0044" lvl="7"><number>&lsqb;0044&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 6</cross-reference>, the synchronization sequence search procedure preferably entails comparing each octet of the data held in the 24-octet memory location to any one of the eight first octets (i.e. octet <highlight><bold>0</bold></highlight> ) of the synchronization sequences listed in Table 2 (step <highlight><bold>600</bold></highlight>). The comparison process continues until a match is found (step <highlight><bold>602</bold></highlight>). Once one of these first octets is found in an octet of the 24-octet memory location data, the synchronization sequence associated with the matching octet is designated the selected sequence (step <highlight><bold>604</bold></highlight>). The remaining octets of the selected synchronization sequence are then compared one at a time to the corresponding octets in the memory location (step <highlight><bold>606</bold></highlight>). For example, the second octet (i.e., octet <highlight><bold>1</bold></highlight>) of the selected synchronization sequence is compared to the octet immediately following the matching octet in the 24-octet memory location, and so on. If all eight octets of the selected synchronization sequence match the corresponding octets in the 24-octet memory location, then it is determined that the group of matching octets represent a first-discovered synchronization sequence (step <highlight><bold>608</bold></highlight>). However, if any one of the eight octets of the selected sequence does not match the corresponding octets in the memory location, the search process is continued. If a complete synchronization sequence is not found in the 24-octet memory location, then the data therein is discarded and replaced with the next incoming data batch. The search process is then repeated for the new data batch, and the next, until a complete match to one of the synchronization sequences is found. </paragraph>
<paragraph id="P-0045" lvl="0"><number>&lsqb;0045&rsqb;</number> Referring again to <cross-reference target="DRAWINGS">FIG. 5</cross-reference>, once a SYNC frame has been found in the 24-octet memory location it is transferred in its entirety to a logical facsimile adaptation frame (LFAF) as defined in the ETS (step <highlight><bold>502</bold></highlight>). A LFAF is an eight octet frame constructed from information transferred from the 24-octet memory location, and can represent either the aforementioned SYNC, STATUS or DATA frames. Each LFAF preferably resides in its own separate memory location within the system memory until after it is processed. Any facsimile information remaining in the 24-octet memory location that was received after the discovered synchronization sequence is transferred to a new LFAF until it is filled. If there is not enough octets to fill another LFAF, then it is completed using the first received facsimile information from the next batch received into the 24-octet memory location. This process is called building the LFAF. Once a LFAF is filled, it is immediately processed, as will be described later in this description. This processing is always faster than the rate at which information is received into the 24-octet memory location, therefore, nothing is lost. The process of transferring information from the 24-octet memory location to successive LFAFs continues throughout the facsimile transmission (step <highlight><bold>504</bold></highlight>). </paragraph>
<paragraph id="P-0046" lvl="0"><number>&lsqb;0046&rsqb;</number> The foregoing process constitutes a synchronization of the transmission because once a complete SYNC frame is found in the 24-octet memory location and transferred to the first LFAF, each succeeding 8-octet LFAF generated will also constitute a complete GSM frame, i.e., either a SYNC frame, STATUS frame, or DATA frame. However, it should be noted that the LFAF may also be categorized as an &ldquo;Unknown&rdquo; frame under certain conditions to be discussed later in this description. </paragraph>
<paragraph id="P-0047" lvl="0"><number>&lsqb;0047&rsqb;</number> Even though the transmission is initially synchronized, noise or other factors could result in it falling out of synchronization. Consequently, it is preferred that the synchronization be continuously checked. Referring to <cross-reference target="DRAWINGS">FIG. 4</cross-reference> once again, one method of accomplishing this task in accordance with the present invention is to identify a LFAF as either a SYNC or STATUS frame. If a LFAF generated from the incoming facsimile information is determined to be a SYNC or STATUS frame, this is conclusive evidence that the transmission is still in synchronization otherwise such frames would not be found. Thus, whenever a SYNC frame is identified, an indication that the transmission is in synchronization is generated (step <highlight><bold>408</bold></highlight>). Likewise, when a STATUS frame is identified, an indication of synchronization is generated (step <highlight><bold>410</bold></highlight>). As the facsimile transmission process involves the exchange of numerous SYNC and STATUS frames, identifying these frames in a generated LFAF is an effective method of ensuring the transmission is still synchronized. Of course, additional synchronization methods can also be employed as desired. The methods by which LFAFs are identified as SYNC frames or STATUS frames will be discussed in detail later in this description. </paragraph>
</section>
<section>
<heading lvl="1">2.0 Identifying &amp; Recording Bit-Rotations </heading>
<paragraph id="P-0048" lvl="0"><number>&lsqb;0048&rsqb;</number> Once the transmission has been synchronized and the LFAFs are being generated from the incoming facsimile information signal, the next phase of the process is to identify and record the degree of bit-rotation exhibited by the incoming facsimile information. Referring to <cross-reference target="DRAWINGS">FIG. 7</cross-reference>, the first step or sub-module <highlight><bold>700</bold></highlight> in the process is to identify the degree of bit-rotation associated with the aforementioned selected synchronization sequence (and so the first-discovered synchronization sequence) in accordance with Table 2. This information is then stored in a unique memory location as an indicator of how many bits the incoming signal is rotated, if any (step <highlight><bold>702</bold></highlight>). For example, a non-bit rotated condition could be recorded by storing the number <highlight><bold>0</bold></highlight>, whereas a rotation of one bit would be recorded by storing the number <highlight><bold>1</bold></highlight>, and so on. It is noted that the same process can be repeated for every subsequent LFAF identified as a SYNC frame as a check to ensure the degree of bit rotation has not changed&mdash;although such a event is unlikely. The stored bit rotation information will be used later to assist in the interpretation of a STATUS frame. </paragraph>
</section>
<section>
<heading lvl="1">3.0 Identifying LFAF Types </heading>
<paragraph id="P-0049" lvl="0"><number>&lsqb;0049&rsqb;</number> It is not known what type of LFAF is being generated from the incoming facsimile information after the first LFAF is formed. Therefore, before the required processing of a LFAF can occur, the frame type must be identified. In addition, for the purpose of simplifying the present process, it is preferred the frame type of the first LFAF also be confirmed by re-determining that it is a SYNC frame. In this way, each frame goes through the identification process and special provisions need not be made for the first LFAF. </paragraph>
<paragraph id="P-0050" lvl="0"><number>&lsqb;0050&rsqb;</number> Referring to <cross-reference target="DRAWINGS">FIG. 8, a</cross-reference> SYNC frame is identified (and the first LFAF is confirmed to be a SYNC frame) by a method similar to that used to synchronize the transmission. Specifically, one of the octets of the LFAF is chosen and compared to the corresponding octet in the synchronization sequence designated as the selected sequence in the previously-described process of synchronizing the incoming facsimile information (step <highlight><bold>800</bold></highlight>). However, unlike the method used to synchronize the transmission, the first octet (octet <highlight><bold>0</bold></highlight>) need not be used for this initial portion of the identification process. In fact, it is preferred that the first octet not be used. It is known that the first octet in a LFAF is the most susceptible to corruption due to noise or other factors effecting the transmission of a facsimile over some GSM networks. In the initial synchronization process it was critical that all the octets of a synchronization sequence be found in the 24-octet memory location to provide the maximum degree of confidence that the eight octets selected from the memory location actually represented a SYNC frame. This ensures the transmission is synchronized. However, when determining or confirming the identity of an already constructed LFAF the requirement is not as critical. Thus, due to the aforementioned possible corruption of the first octet in a SYNC frame (exclusive of the first LFAF), it is acceptable to ignore this octet in the synchronization sequence comparison steps. Thus, it is preferred that one of the other octets be selected for the comparison process. The second octet (i.e., octet <highlight><bold>1</bold></highlight>) was chosen for the comparison in the tested embodiment of the present invention, and is preferred for computational efficiency reasons. However, any of the remaining octets could be employed, as well. If no match is found then the LFAF is not a SYNC frame and other processing is performed. In the case where the comparison process was performed to confirm the existence of a synchronization sequence in the first LFAF and no match is detected, albeit unlikely, it is assumed an error has occurred and the aforementioned further processing entails re-starting the synchronization process described in connection with <cross-reference target="DRAWINGS">FIG. 4</cross-reference>. If, however, a match is found between the chosen octet in the LFAF being identified and the corresponding octet in the selected synchronization sequence, it is preferred that other octets from the LFAF are then compared to the values of the corresponding octets in the selected synchronization sequence (step <highlight><bold>802</bold></highlight>), with the exception of the first octet (octet <highlight><bold>0</bold></highlight>) if this octet is to be ignored. The purpose of checking the remaining octets is to increase the confidence level that the unidentified LFAF is actually a SYNC frame. Of course, the more octets that match, the higher the confidence. In the tested embodiment, the remaining synchronization sequence octets <highlight><bold>2</bold></highlight> through <highlight><bold>7</bold></highlight> (of Table 2) are compared to the corresponding octets of the unidentified LFAF to maximize the confidence level that the frame is a SYNC frame. However, less than the six remaining octets (i.e. octets <highlight><bold>2</bold></highlight>-<highlight><bold>7</bold></highlight>) could be compared and matched. For example, in some GSM networks it is believed that not only the first, but the last, octet in a frame may be corrupted during transmission. If the corruption of the last octet (octet <highlight><bold>7</bold></highlight>) is a concern, it could be ignored as well. Thus, after the first octet (e.g. preferred octet <highlight><bold>1</bold></highlight>) is matched per the above procedure, just the remaining five octets (i.e., octets <highlight><bold>2</bold></highlight>-<highlight><bold>6</bold></highlight>) would be compared and matched. If all the &ldquo;compared&rdquo; octets match the corresponding octets in the selected synchronization sequence, then the unidentified LFAF is &ldquo;declared&rdquo; to be a SYNC frame (step <highlight><bold>804</bold></highlight>). If all the compared octets do not match, then the LFAF is determined not to be a SYNC frame (step <highlight><bold>806</bold></highlight>). </paragraph>
<paragraph id="P-0051" lvl="0"><number>&lsqb;0051&rsqb;</number> It is noted that while octets of the LFAF are exclusively compared to corresponding octets of the selected synchronization sequence in the foregoing SYNC frame identification process, this need not be the case. While the described method is preferred to minimize processing, if desired, the chosen octets of the LFAF could be compared to correspondingly located octets of each of the possible synchronization sequence listed in Table 2, similar to the process employed to initially identify a synchronization sequence in the incoming facsimile information (i.e. the process associated with <cross-reference target="DRAWINGS">FIG. 6</cross-reference>). </paragraph>
<paragraph id="P-0052" lvl="0"><number>&lsqb;0052&rsqb;</number> A STATUS frame is identified by taking advantage of its repetitive structure. The process for determining if an unidentified LFAF is a STATUS frame involves comparing certain octets and noting whether they are equal. Generally, as depicted in <cross-reference target="DRAWINGS">FIG. 9</cross-reference>, pairs of odd octet locations are compared to each other and pairs of even octet locations are similarly compared (step 900). The number of octet pairs compared depends on what level of confidence is desired for determining that an LFAF is a STATUS frame. This number can vary from one pair to every possible pair. However, it is preferred that logic requiring the comparison of four octet pairs (i.e. two even and two odd) be employed in the identification process. Using the octet identifiers of Table 2, the preferred logic is as follows: </paragraph>
<paragraph id="P-0053" lvl="2"><number>&lsqb;0053&rsqb;</number> If octet <highlight><bold>1</bold></highlight>&equals;octet <highlight><bold>3</bold></highlight> AND </paragraph>
<paragraph id="P-0054" lvl="3"><number>&lsqb;0054&rsqb;</number> octet <highlight><bold>3</bold></highlight>&equals;octet <highlight><bold>5</bold></highlight> AND </paragraph>
<paragraph id="P-0055" lvl="3"><number>&lsqb;0055&rsqb;</number> octet <highlight><bold>2</bold></highlight>&equals;octet <highlight><bold>4</bold></highlight> AND </paragraph>
<paragraph id="P-0056" lvl="3"><number>&lsqb;0056&rsqb;</number> octet <highlight><bold>4</bold></highlight>&equals;octet <highlight><bold>6</bold></highlight> THEN </paragraph>
<paragraph id="P-0057" lvl="2"><number>&lsqb;0057&rsqb;</number> the LFAF is a STATUS frame. </paragraph>
<paragraph id="P-0058" lvl="7"><number>&lsqb;0058&rsqb;</number> As indicated in the above logic, if all the compared octet pairs match each other, then the LFAF is declared to be a STATUS frame (step <highlight><bold>902</bold></highlight>). If, however, all the pairs do not match, then the LFAF is determined not to be a status frame (step <highlight><bold>904</bold></highlight>). The above logic produces a high level of confidence that the unidentified LFAF is a STATUS frame, however, fewer comparisons could be made if desired, albeit producing a lower confidence level. It is also noted that none of the comparisons involved the first octet (octet <highlight><bold>0</bold></highlight>) or the last octet (octet <highlight><bold>7</bold></highlight>). As explained previously, these octets can be susceptible to corruption during the transmission of the facsimile over some GSM networks, and so are not relied upon to determine the identity of a STATUS frame. However, if it is desired, additional comparisons can be made involving the first and last octets before declaring an unidentified LFAF to be a STATUS frame: </paragraph>
<paragraph id="P-0059" lvl="2"><number>&lsqb;0059&rsqb;</number> octet <highlight><bold>0</bold></highlight>&equals;octet <highlight><bold>2</bold></highlight> AND </paragraph>
<paragraph id="P-0060" lvl="2"><number>&lsqb;0060&rsqb;</number> octet <highlight><bold>5</bold></highlight>&equals;octet <highlight><bold>7</bold></highlight>. </paragraph>
<paragraph id="P-0061" lvl="7"><number>&lsqb;0061&rsqb;</number> It is noted that while the foregoing logic requires both the first and last octets to match other octets in the frame, the logic could alternatively only require that either match (i.e., OR). </paragraph>
<paragraph id="P-0062" lvl="0"><number>&lsqb;0062&rsqb;</number> Finally, an unidentified LFAF that is neither determined to be a SYNC frame or a STATUS frame is given a designation of an &ldquo;Unknown&rdquo; frame, as discussed previously. This frame may be ignored, used to determine a loss of synchronization or processed as a DATA frame depending on circumstances. In the last case, a transmitted frame sequence involving the repetition of a SYNC frame alternated with a particular type of STATUS frame (i.e., SYNC-STATUS-SYNC-STATUS . . . ) is used to indicate that the transmitting GSM unit wants to send facsimile DATA frames. Once this signal is detected by the receiving unit, and the receiving unit response with its own SYNC-STATUS-SYNC-STATUS . . . frame sequence, the next incoming &ldquo;Unknown&rdquo; frame would be interpreted as a DATA frame. A series of SYNC frames is typically sent to signal the end of the scan line data transmission. </paragraph>
</section>
<section>
<heading lvl="1">4.0 Compensating for a Bit-Rotated Condition in a STATUS Frame </heading>
<paragraph id="P-0063" lvl="0"><number>&lsqb;0063&rsqb;</number> If it is determined that a LFAF is a STATUS frame, the next phase in the process according to the present invention is to rotate the frame bits based on the stored bit-rotation indicator so that the IDENT and INFO octets can be interpreted via the ETS guidelines. It is noted that since the first LFAF generated is a SYNC frame, the bit-rotation information is determined and stored before the first STATUS frame is processed, thereby ensuring it is available for this part of the procedure. In general, an identified STATUS frame undergoes the bit rotation compensation step or sub-module if the stored bit-rotation indicator indicates the incoming facsimile information is bit-rotated. If not, this step is skipped. When the incoming facsimile information is bit-rotated, the identified STATUS frame will also be bit-rotated to the same degree. This condition is compensated for by rotating the STATUS frame bits by the number of bits indicated by the stored bit-rotation indicator (step <highlight><bold>1000</bold></highlight>). It is believed this STATUS frame bit rotation process can be best explained in reference to the following example. </paragraph>
<paragraph id="P-0064" lvl="0"><number>&lsqb;0064&rsqb;</number> A typical STATUS frame with no bit rotation might read (in hex notation): </paragraph>
<paragraph id="P-0065" lvl="2"><number>&lsqb;0065&rsqb;</number> 11 7E 11 7E 11 7E 11 7E. </paragraph>
<paragraph id="P-0066" lvl="7"><number>&lsqb;0066&rsqb;</number> This same STATUS frame exhibiting a three bit rotation would be read (in hex notation): </paragraph>
<paragraph id="P-0067" lvl="2"><number>&lsqb;0067&rsqb;</number> C2 2F C2 2F C2 2F C2 2F. </paragraph>
<paragraph id="P-0068" lvl="7"><number>&lsqb;0068&rsqb;</number> Thus, the previous portion of the instant process would have determined the SYNC frame to be associated with the three bit-rotated synchronization sequence, thereby indicating the subsequent STATUS frame would also exhibit a rotation of three bits. To compensate for this bit rotation, the bit-rotated STATUS frame would be rotated by 3 bits to make it interpretable under the ETS guidelines. The first two octets of the bit-rotated STATUS frame will be used to illustrate this compensation process:  
<table-cwu id="TABLE-US-00003">
<number>3</number>
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="OFFSET" colwidth="21PT" align="left"/>
<colspec colname="1" colwidth="105PT" align="left"/>
<colspec colname="2" colwidth="91PT" align="left"/>
<thead>
<row>
<entry></entry>
<entry></entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry></entry>
<entry>C2 2F in binary notation is:</entry>
<entry>1100 0010 0010 1111</entry>
</row>
<row>
<entry></entry>
<entry>The bit string is shifted</entry>
<entry>0 0010 0010 1111 xxx</entry>
</row>
<row>
<entry></entry>
<entry>three bits to the left:</entry>
</row>
<row>
<entry></entry>
<entry>The three leftmost bits of</entry>
<entry>0 0010 0010 1111 110</entry>
</row>
<row>
<entry></entry>
<entry>the original bit string are</entry>
</row>
<row>
<entry></entry>
<entry>place onto the right end of</entry>
</row>
<row>
<entry></entry>
<entry>the shifted bit string:</entry>
</row>
<row>
<entry></entry>
<entry>This bit string is usually</entry>
<entry>0001 0001 0111 1110</entry>
</row>
<row>
<entry></entry>
<entry>depicted as:</entry>
</row>
<row>
<entry></entry>
<entry>Written in hexadecimal form:</entry>
<entry>11 7E</entry>
</row>
<row>
<entry></entry>
<entry namest="OFFSET" nameend="2" align="center" rowsep="1"></entry>
</row>
</tbody>
</tgroup>
</table>
</table-cwu>
</paragraph>
<paragraph id="P-0069" lvl="7"><number>&lsqb;0069&rsqb;</number> As can be seen the &ldquo;11 7E&rdquo; is the first two octets of the STATUS frame having no bit rotation. The same process can be used for the full eight octet frame with the same results. In addition, any other bit-rotation condition from 1 to 7 can be compensated for by simply shifting and placing the corresponding number of bits in the manner described in the above example. Thus, the process can be used to convert any bit-rotated STATUS frame to one interpretable under the ETS guidelines (step <highlight><bold>1002</bold></highlight>). </paragraph>
</section>
<section>
<heading lvl="1">5.0 Determining Whether the Facsimile Transmission Has Fallen Out of Synchronization </heading>
<paragraph id="P-0070" lvl="0"><number>&lsqb;0070&rsqb;</number> If it is determined that a LFAF is not a SYNC frame or STATUS frame (i.e. an Unknown frame), and no DATA frames are expected in the incoming facsimile information, then a determination is made as to whether the transmission has fallen out of synchronization. Referring to <cross-reference target="DRAWINGS">FIG. 11</cross-reference>, this determination is made by monitoring the type of each LFAF identified via the previously-described LFAF identification process whenever an Unknown frame is detected at a time when no DATA frames are expected to be received (step <highlight><bold>1100</bold></highlight>). If the facsimile transmission falls out of synchronization at a time when no DATA frames are being transmitted, it would be expected that a series of consecutive Unknown frames would be identified. This is opposed to a situation where the incoming facsimile information remains synchronized but a particular SYNC or STATUS frame is unrecognizable due to itinerant noise. Thus, it is possible to detect a loss of synchronization by tracking the number of consecutive LFAFs identified as being Unknown frames (step <highlight><bold>1102</bold></highlight>) and declaring the transmission to be out of synchronization if a prescribed number of consecutive Unknown frames are detected (step <highlight><bold>1104</bold></highlight>). It is preferred that this prescribed number be five consecutive Unknown frames, however, any number could be used. As indicated previously in connection with the description associated with <cross-reference target="DRAWINGS">FIG. 4</cross-reference>, the incoming facsimile information is re-synchronized whenever the transmission is declared to have fallen out of synchronization. </paragraph>
<paragraph id="P-0071" lvl="0"><number>&lsqb;0071&rsqb;</number> While the invention has been described in detail by reference to the preferred embodiment described above, it is understood that variations and modifications thereof may be made without departing from the true spirit and scope of the invention. For example, in the foregoing description, the first-discovered synchronization sequence found in the incoming facsimile information was transferred to a separate memory location for further processing. In addition, each subsequent eight octets of the facsimile information were also transferred from the 24-octet memory location to a different eight-octet memory location to build LFAFs. However, rather than transferring the information, each eight-octet LFAF could instead be identified within the 24-octet input memory location itself using pointers and processed directly from this location. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">What is claimed is: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method comprising: 
<claim-text>frame-synchronizing incoming facsimile information to delineate logical facsimile adaptation frames (&ldquo;LFAFs&rdquo;), the frame-synchronization including locating a first overhead frame containing a bit-rotated version of a unique synchronization sequence, the bit-rotated version comprising the unique synchronization sequence bit- rotated by a degree between zero bits and a predetermined number of bits; </claim-text>
<claim-text>determining a degree of bit-rotation of the first overhead frame by observing the degree of bit-rotation of the bit-rotated version of the unique synchronization sequence in the first overhead frame compared to the unique synchronization sequence with zero bit-rotation; </claim-text>
<claim-text>identifying a second overhead frame; </claim-text>
<claim-text>inferring that the second overhead frame is bit-rotated to the same degree as the first overhead frame; and </claim-text>
<claim-text>compensating for the inferred degree of bit-rotation of the second overhead frame using the observed degree of bit-rotation. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein each LFAF comprises eight octets in octet locations labeled <highlight><bold>0</bold></highlight> to <highlight><bold>7</bold></highlight>, the first overhead frame comprises a synchronization (&ldquo;SYNCH&rdquo;) frame, the second overhead frame comprises a status frame (&ldquo;STATUS&rdquo;), and the STATUS frame contains state-specific information for a facsimile machine. </claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, wherein locating the SYNCH frame comprises: 
<claim-text>comparing each octet of the incoming facsimile information to an octet occupying a prescribed octet location of each bit-rotated version of the synchronization sequence; </claim-text>
<claim-text>detecting a first match between an octet of the incoming facsimile information and one of the compared synchronization sequence octets and designating the version of the synchronization sequence associated with the matching octet as the selected version of the synchronization sequence; </claim-text>
<claim-text>comparing the remaining octets of the selected version of the synchronization sequence to correspondingly located octets of the incoming facsimile information; </claim-text>
<claim-text>designating an eight-octet portion of the incoming facsimile information as the first-discovered synchronization sequence whenever all eight octets of the selected version of the synchronization sequence match the correspondingly located octets of the incoming facsimile data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, wherein the prescribed octet location corresponds to octet location <highlight><bold>0</bold></highlight> and the remaining octets of the selected version of the synchronization sequence are compared to the correspondingly located octets in the incoming facsimile information in sequence beginning with octet location <highlight><bold>1</bold></highlight> and ending with octet location <highlight><bold>7</bold></highlight>. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the determining the degree of bit-rotation of the first overhead further comprises storing in a memory an indicator of the determined degree of bit-rotation. </claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method of <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, wherein the predetermined number of bits is eight bits. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A communications device comprising: 
<claim-text>a receiver for receiving incoming facsimile information; </claim-text>
<claim-text>a processor communicatively coupled to the receiver, the processor for: </claim-text>
<claim-text>frame-synchronizing the incoming facsimile information to delineate logical facsimile adaptation frames (&ldquo;LFAFs&rdquo;), the frame-synchronization including locating a first overhead frame containing a bit-rotated version of a unique synchronization sequence, the bit-rotated version comprising the unique synchronization sequence bit-rotated by a degree between zero bits and a predetermined number of bits; </claim-text>
<claim-text>determining a degree of bit-rotation of the first overhead frame by observing the degree of bit-rotation of the bit-rotated version of the unique synchronization sequence in the first overhead frame compared to the unique synchronization sequence with zero bit-rotation; </claim-text>
<claim-text>identifying a second overhead frame; </claim-text>
<claim-text>inferring that the second overhead frame is bit-rotated to the same degree as the first overhead frame; and </claim-text>
<claim-text>compensating for the inferred degree of bit-rotation of the second overhead frame using the observed degree of bit-rotation. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The communications device of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein each LFAF comprises eight octets in octet locations labeled <highlight><bold>0</bold></highlight> to <highlight><bold>7</bold></highlight>, the first overhead frame comprises a synchronization (&ldquo;SYNCH&rdquo;) frame, the second overhead frame comprises a status frame (&ldquo;STATUS&rdquo;), and the STATUS frame contains state-specific information for a facsimile machine. </claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. The communications device of <dependent-claim-reference depends_on="CLM-00008">claim 8</dependent-claim-reference>, wherein locating the SYNCH frame comprises: 
<claim-text>comparing each octet of the incoming facsimile information to an octet occupying a prescribed octet location of each bit-rotated version of the synchronization sequence; </claim-text>
<claim-text>detecting a first match between an octet of the incoming facsimile information and one of the compared synchronization sequence octets and designating the version of the synchronization sequence associated with the matching octet as the selected version of the synchronization sequence; </claim-text>
<claim-text>comparing the remaining octets of the selected version of the synchronization sequence to correspondingly located octets of the incoming facsimile information; </claim-text>
<claim-text>designating an eight-octet portion of the incoming facsimile information as the first-discovered synchronization sequence whenever all eight octets of the selected version of the synchronization sequence match the correspondingly located octets of the incoming facsimile data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00010">
<claim-text><highlight><bold>10</bold></highlight>. The communications device of <dependent-claim-reference depends_on="CLM-00009">claim 9</dependent-claim-reference>, wherein the prescribed octet location corresponds to octet location <highlight><bold>0</bold></highlight> and the remaining octets of the selected version of the synchronization sequence are compared to the correspondingly located octets in the incoming facsimile information in sequence beginning with octet location <highlight><bold>1</bold></highlight> and ending with octet location <highlight><bold>7</bold></highlight>. </claim-text>
</claim>
<claim id="CLM-00011">
<claim-text><highlight><bold>11</bold></highlight>. The communications device of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein the determining the degree of bit-rotation of the first overhead further comprises storing in a memory an indicator of the determined degree of bit-rotation. </claim-text>
</claim>
<claim id="CLM-00012">
<claim-text><highlight><bold>12</bold></highlight>. The communications device of <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein the predetermined number of bits is eight bits. </claim-text>
</claim>
<claim id="CLM-00013">
<claim-text><highlight><bold>13</bold></highlight>. A machine-readable medium having stored thereon data representing instructions that, when executed by a processor, cause the processor to perform operations comprising: 
<claim-text>frame-synchronizing incoming facsimile information to delineate logical facsimile adaptation frames (&ldquo;LFAFs&rdquo;), the frame-synchronization including locating a first overhead frame containing a bit-rotated version of a unique synchronization sequence, the bit-rotated version comprising the unique synchronization sequence bit-rotated by a degree between zero bits and a predetermined number of bits; </claim-text>
<claim-text>determining a degree of bit-rotation of the first overhead frame by observing the degree of bit-rotation of the bit-rotated version of the unique synchronization sequence in the first overhead frame compared to the unique synchronization sequence with zero bit-rotation; </claim-text>
<claim-text>identifying a second overhead frame; </claim-text>
<claim-text>inferring that the second overhead frame is bit-rotated to the same degree as the first overhead frame; and </claim-text>
<claim-text>compensating for the inferred degree of bit-rotation of the second overhead frame using the observed degree of bit-rotation. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00014">
<claim-text><highlight><bold>14</bold></highlight>. The machine-readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein each LFAF comprises eight octets in octet locations labeled <highlight><bold>0</bold></highlight> to <highlight><bold>7</bold></highlight>, the first overhead frame comprises a synchronization (&ldquo;SYNCH&rdquo;) frame, the second overhead frame comprises a status frame (&ldquo;STATUS&rdquo;), and the STATUS frame contains state-specific information for a facsimile machine. </claim-text>
</claim>
<claim id="CLM-00015">
<claim-text><highlight><bold>15</bold></highlight>. The machine-readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 14</dependent-claim-reference>, wherein locating the SYNCH frame comprises: 
<claim-text>comparing each octet of the incoming facsimile information to an octet occupying a prescribed octet location of each bit-rotated version of the synchronization sequence; </claim-text>
<claim-text>detecting a first match between an octet of the incoming facsimile information and one of the compared synchronization sequence octets and designating the version of the synchronization sequence associated with the matching octet as the selected version of the synchronization sequence; </claim-text>
<claim-text>comparing the remaining octets of the selected version of the synchronization sequence to correspondingly located octets of the incoming facsimile information; </claim-text>
<claim-text>designating an eight-octet portion of the incoming facsimile information as the first-discovered synchronization sequence whenever all eight octets of the selected version of the synchronization sequence match the correspondingly located octets of the incoming facsimile data. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00016">
<claim-text><highlight><bold>16</bold></highlight>. The machine-readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 15</dependent-claim-reference>, wherein the prescribed octet location corresponds to octet location <highlight><bold>0</bold></highlight> and the remaining octets of the selected version of the synchronization sequence are compared to the correspondingly located octets in the incoming facsimile information in sequence beginning with octet location <highlight><bold>1</bold></highlight> and ending with octet location <highlight><bold>7</bold></highlight>. </claim-text>
</claim>
<claim id="CLM-00017">
<claim-text><highlight><bold>17</bold></highlight>. The machine-readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the determining the degree of bit-rotation of the first overhead further comprises storing in a memory an indicator of the determined degree of bit-rotation. </claim-text>
</claim>
<claim id="CLM-00018">
<claim-text><highlight><bold>18</bold></highlight>. The machine-readable medium of <dependent-claim-reference depends_on="CLM-00011">claim 13</dependent-claim-reference>, wherein the predetermined number of bits is eight bits.</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>3</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030002079A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030002079A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00002">
<image id="EMI-D00002" file="US20030002079A1-20030102-D00002.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00003">
<image id="EMI-D00003" file="US20030002079A1-20030102-D00003.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00004">
<image id="EMI-D00004" file="US20030002079A1-20030102-D00004.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00005">
<image id="EMI-D00005" file="US20030002079A1-20030102-D00005.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00006">
<image id="EMI-D00006" file="US20030002079A1-20030102-D00006.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00007">
<image id="EMI-D00007" file="US20030002079A1-20030102-D00007.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00008">
<image id="EMI-D00008" file="US20030002079A1-20030102-D00008.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
