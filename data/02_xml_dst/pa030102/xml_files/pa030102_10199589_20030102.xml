<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE patent-application-publication SYSTEM "pap-v16-2002-01-01.dtd" [
<!ENTITY US20030005206A1-20030102-D00000.TIF SYSTEM "US20030005206A1-20030102-D00000.TIF" NDATA TIF>
<!ENTITY US20030005206A1-20030102-D00001.TIF SYSTEM "US20030005206A1-20030102-D00001.TIF" NDATA TIF>
]>
<patent-application-publication>
<subdoc-bibliographic-information>
<document-id>
<doc-number>20030005206</doc-number>
<kind-code>A1</kind-code>
<document-date>20030102</document-date>
</document-id>
<publication-filing-type>new</publication-filing-type>
<domestic-filing-data>
<application-number>
<doc-number>10199589</doc-number>
</application-number>
<application-number-series-code>10</application-number-series-code>
<filing-date>20020719</filing-date>
</domestic-filing-data>
<foreign-priority-data>
<priority-application-number>
<doc-number>00 100 994.3</doc-number>
</priority-application-number>
<filing-date>20000119</filing-date>
<country-code>EP</country-code>
</foreign-priority-data>
<technical-information>
<classification-ipc>
<classification-ipc-primary>
<ipc>G06F013/14</ipc>
</classification-ipc-primary>
<classification-ipc-edition>07</classification-ipc-edition>
</classification-ipc>
<classification-us>
<classification-us-primary>
<uspc>
<class>710</class>
<subclass>305000</subclass>
</uspc>
</classification-us-primary>
</classification-us>
<title-of-invention>Method for operating a microprocessor configuration and microprocessor configuration</title-of-invention>
</technical-information>
<continuity-data>
<continuations>
<continuation-of>
<parent-child>
<child>
<document-id>
<doc-number>10199589</doc-number>
<kind-code>A1</kind-code>
<document-date>20020719</document-date>
</document-id>
</child>
<parent>
<document-id>
<doc-number>PCT/DE01/00155</doc-number>
<document-date>20010116</document-date>
<country-code>US</country-code>
</document-id>
</parent>
<parent-status>UNKNOWN</parent-status>
</parent-child>
</continuation-of>
</continuations>
</continuity-data>
<inventors>
<first-named-inventor>
<name>
<given-name>Oliver</given-name>
<family-name>Kniffler</family-name>
</name>
<residence>
<residence-non-us>
<city>Munchen</city>
<country-code>DE</country-code>
</residence-non-us>
</residence>
<authority-applicant>INV</authority-applicant>
</first-named-inventor>
</inventors>
<correspondence-address>
<name-1>LERNER AND GREENBERG, P.A.</name-1>
<name-2></name-2>
<address>
<address-1>POST OFFICE BOX 2480</address-1>
<city>HOLLYWOOD</city>
<state>FL</state>
<postalcode>33022-2480</postalcode>
<country>
<country-code>US</country-code>
</country>
</address>
</correspondence-address>
</subdoc-bibliographic-information>
<subdoc-abstract>
<paragraph id="A-0001" lvl="0">A microprocessor configuration includes a central control and processing unit, a bus having a bus state line and data/address lines, and units connected to the bus. If none of the units is being addressed by the control and processing unit, random data values are transmitted on the data/address lines. Such a process and configuration masks the current profile of the microprocessor configuration with regard to the useful information to be transmitted through the bus. </paragraph>
</subdoc-abstract>
<subdoc-description>
<cross-reference-to-related-applications>
<heading lvl="1">CROSS-REFERENCE TO RELATED APPLICATION </heading>
<paragraph id="P-0001" lvl="0"><number>&lsqb;0001&rsqb;</number> This application is a continuation of copending International Application No. PCT/DE01/00155, filed Jan. 16, 2001, which designated the United States and was not published in English.</paragraph>
</cross-reference-to-related-applications>
<summary-of-invention>
<section>
<heading lvl="1">BACKGROUND OF THE INVENTION </heading>
</section>
<section>
<heading lvl="1">FIELD OF THE INVENTION </heading>
<paragraph id="P-0002" lvl="0"><number>&lsqb;0002&rsqb;</number> The invention relates to a method for operating a microprocessor configuration having a first and a further unit, a bus, through which the units are connected to one another having a line for a state signal and lines for further bus signals, and a bus control unit for controlling accesses of the first unit to the further unit. In addition, the invention relates to a microprocessor configuration that is suitable for carrying out the method. </paragraph>
<paragraph id="P-0003" lvl="0"><number>&lsqb;0003&rsqb;</number> Microprocessor configurations include, besides the central processing and control unit (CPU), further units such as memories or peripheral units for signal inputting and signal outputting integrated on a single chip, so-called microcontrollers. Such microcontrollers can be used in security-relevant systems, for example, smart cards. In such a case, the microcontroller serves, inter alia, to encrypt the data traffic between a read device and the smart card, to check access authorizations, and to execute other secret operations. </paragraph>
<paragraph id="P-0004" lvl="0"><number>&lsqb;0004&rsqb;</number> For covertly discovering the function of the microcontroller, those skilled in the art know to use the temporal sequence of the current consumed by the microcontroller. Trigger points, for example, can be obtained from the current profile to control subsequent measurements in a correctly timed manner. It is also possible to draw conclusions about the specific type of calculation and encryption/decryption algorithms used in the processor. It is even possible to determine parts of the processed useful information. Bus accesses especially generate a characteristic current profile because they proceed according to a defined signal protocol and the switching operations yield a clear current profile due to the high capacitive loads to be driven. The application of conventional microcontrollers in security-critical applications is, therefore, problematic. </paragraph>
</section>
<section>
<heading lvl="1">SUMMARY OF THE INVENTION </heading>
<paragraph id="P-0005" lvl="0"><number>&lsqb;0005&rsqb;</number> It is accordingly an object of the invention to provide a method for operating a microprocessor configuration and microprocessor configuration that overcomes the hereinafore-mentioned disadvantages of the heretofore-known devices and methods of this general type and that operates a microprocessor configuration that is monitor-proof. </paragraph>
<paragraph id="P-0006" lvl="0"><number>&lsqb;0006&rsqb;</number> With the foregoing and other objects in view, there is provided, in accordance with the invention, a method for operating a microprocessor configuration, including the steps of connecting a first unit through a bus to a second unit, the bus having a line for conveying a state signal specifying an operating state of the bus and lines for conveying bus signals specifying at least one data value, connecting a bus control unit to the line, controlling access of the first unit to the second unit through the bus with the bus control unit, and when the bus control unit communicates through the line that no access is being carried out by the first unit to the second unit, generating a data value under random control and applying the data value to the lines as the bus signals. </paragraph>
<paragraph id="P-0007" lvl="0"><number>&lsqb;0007&rsqb;</number> With the objects of the invention in view, there is also provided a microprocessor configuration including a first unit, a second unit, a bus connecting the first unit to the second unit, the bus having operating states, a line for conveying a state signal specifying at least one of the operating states, and lines for conveying bus signals specifying at least one data value, a bus control unit adapted to control accesses of the first unit to the second unit through the bus, the bus control unit connected to the line, and a random number generator connectable to the lines and adapted to supply the bus signals when the state signal indicates no access is to be carried out by the first unit to the second unit. </paragraph>
<paragraph id="P-0008" lvl="0"><number>&lsqb;0008&rsqb;</number> The bus state signal indicates the task for which the bus is currently being used by the central processing and control unit (CPU). If the bus is actually in the idle state in the clock section considered, no valid signals are present on the bus data lines. According to the invention, a signal generated in a randomly controlled manner is then transmitted through the data lines of the bus, which randomly alters the current profile. The current profile is, thus, masked with regard to the useful information transmitted through the bus so that conclusions about the useful information based upon a statistical evaluation of the current profile are made significantly more difficult or even impossible. </paragraph>
<paragraph id="P-0009" lvl="0"><number>&lsqb;0009&rsqb;</number> According to the bus protocol, it may be provided that the bus state signal specifies the state of the bus lines one clock cycle in advance. It is also possible for the bus state signal to specify the state of the remaining bus lines in the same clock cycle. </paragraph>
<paragraph id="P-0010" lvl="0"><number>&lsqb;0010&rsqb;</number> In accordance with another mode of the invention, the state signal and the data value are clock-cyclically generated with the bus control unit, and, when it is communicated in a first clock cycle that no access is being carried out by the first unit to the further unit, in a subsequent clock cycle, the data value is generated and applied to the lines as the bus signals. </paragraph>
<paragraph id="P-0011" lvl="0"><number>&lsqb;0011&rsqb;</number> The units that can be driven by the CPU are assigned addresses. If the CPU outputs, by the bus control unit, an address assigned to a memory or a peripheral unit, this means that the memory and a memory cell contained therein or the corresponding peripheral unit is to be activated to receive data from the bus or to output data onto the bus. In the case of the invention, when the CPU effects no access to a unit connected to the bus, an address is, nevertheless, output onto the bus. However, this address is not an address that is assigned to a unit connected to the bus, but rather an arbitrary other address. The consequence of such a process is that none of the connected units is activated. However, the arbitrary address is, nevertheless, transmitted through the bus and a corresponding current profile is thereby generated. The address is generated in a randomly controlled manner. The current profile is, accordingly, randomly altered. It is must be ensured that the random number does not correspond to a valid address of a unit connected to the bus. </paragraph>
<paragraph id="P-0012" lvl="0"><number>&lsqb;0012&rsqb;</number> The data value that is output onto the bus in this way acquires the significance of an address through the respective state of the bus state signal. The bus state signal furthermore indicates that, on the data lines of the bus, either an address is output or a datum is output (written) to the addressed unit or received (read) from the addressed unit. The same signal lines of the bus can be used for the addresses and the data to be read or to be written. Such a process is referred to as a multiplexed data/address bus. The term data value is to be understood generally and includes data values that represent an address or data or program instructions that are currently to be processed, etc. Once the bus state signal has indicated that an idle state is present, a random value is transmitted in the subsequent clock cycle. If an address for which no unit connected to the bus exists is transmitted, in the subsequent operating clock cycles random values are transmitted until an existing unit is addressed again by a valid address. In contrast, in the case of previous microprocessors, an address that was not assigned to any connected unit represented a programming error. In the case of the invention, however, the transmission of such a randomly controlled address is to be understood to the effect that an access to a nonexistent destination is being executed to mask the otherwise unused bus cycles. </paragraph>
<paragraph id="P-0013" lvl="0"><number>&lsqb;0013&rsqb;</number> In accordance with a further mode of the invention, the a first address is assigned to the second unit by which the second unit can be accessed by the first unit, and, in the subsequent clock cycle after the first clock cycle in which there is a communication that no access is being carried out by the first unit to the second unit, a second address different from the first address is applied to the lines as the bus signals. </paragraph>
<paragraph id="P-0014" lvl="0"><number>&lsqb;0014&rsqb;</number> In accordance with an added mode of the invention, one of a read access and a write access is executed through the bus in a clock cycle following the subsequent clock cycle. </paragraph>
<paragraph id="P-0015" lvl="0"><number>&lsqb;0015&rsqb;</number> In accordance with an additional mode of the invention, the state signal includes signal states for a read access and a write access, one of the signal states is applied on the line as the state signal, and a data value generated under random control is applied in an assigned manner to the lines as the bus signals. </paragraph>
<paragraph id="P-0016" lvl="0"><number>&lsqb;0016&rsqb;</number> The bus of the microprocessor configuration may additionally include a line for an enable signal that is passed to the further units connected to the bus. The enable signal communicates to these units that an access is effected through the bus. The enable line, too, is expediently driven with random values after an idle state signaled by the bus state signal. </paragraph>
<paragraph id="P-0017" lvl="0"><number>&lsqb;0017&rsqb;</number> In accordance with yet another mode of the invention, the bus has a line for an enable signal of the second unit, and a signal generated under random control is applied to the line for the enable signal when the bus control unit communicates through the line for the state signal that no access is being carried out by the first unit to the second unit. </paragraph>
<paragraph id="P-0018" lvl="0"><number>&lsqb;0018&rsqb;</number> In accordance with a concomitant feature of the invention, a microprocessor includes at least one of the first unit and the second unit, the first unit is a processing and control unit of the microprocessor, and the second unit is a unit selected from the group consisting of a peripheral unit of the microprocessor for inputting and outputting signals from and to the microprocessor and a memory. </paragraph>
<paragraph id="P-0019" lvl="0"><number>&lsqb;0019&rsqb;</number> Other features that are considered as characteristic for the invention are set forth in the appended claims. </paragraph>
<paragraph id="P-0020" lvl="0"><number>&lsqb;0020&rsqb;</number> Although the invention is illustrated and described herein as embodied in a method for operating a microprocessor configuration and microprocessor configuration, it is, nevertheless, not intended to be limited to the details shown because various modifications and structural changes may be made therein without departing from the spirit of the invention and within the scope and range of equivalents of the claims. </paragraph>
<paragraph id="P-0021" lvl="0"><number>&lsqb;0021&rsqb;</number> The construction and method of operation of the invention, however, together with additional objects and advantages thereof, will be best understood from the following description of specific embodiments when read in connection with the accompanying drawings.</paragraph>
</section>
</summary-of-invention>
<brief-description-of-drawings>
<section>
<heading lvl="1">BRIEF DESCRIPTION OF THE DRAWINGS </heading>
<paragraph id="P-0022" lvl="0"><number>&lsqb;0022&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 1</cross-reference> is a block circuit diagram of the configuration according to the invention with elements of a microprocessor relevant to the invention; and </paragraph>
<paragraph id="P-0023" lvl="0"><number>&lsqb;0023&rsqb;</number> <cross-reference target="DRAWINGS">FIG. 2</cross-reference> is a signal timing diagram according to the invention.</paragraph>
</section>
</brief-description-of-drawings>
<detailed-description>
<section>
<heading lvl="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<paragraph id="P-0024" lvl="0"><number>&lsqb;0024&rsqb;</number> Referring now to the figures of the drawings in detail and first, particularly to <cross-reference target="DRAWINGS">FIG. 1</cross-reference> thereof, there is shown a microcontroller including a central control and processing unit (CPU) <highlight><bold>1</bold></highlight>, which controls the internal operating sequences, in particular, the accesses to the bus <highlight><bold>2</bold></highlight>. For such a purpose, the CPU <highlight><bold>1</bold></highlight> includes a bus control unit <highlight><bold>11</bold></highlight>. The bus itself includes at least one signal line <highlight><bold>21</bold></highlight>, which specifies the bus state, and a multiplicity of lines <highlight><bold>22</bold></highlight>, through which both addresses of connected units and data values are successively transmitted, a so-called multiplexed data/address bus. Connected to the bus <highlight><bold>2</bold></highlight> is a memory <highlight><bold>3</bold></highlight>, in which data values and/or program instructions to be processed are stored. Furthermore, a first peripheral unit <highlight><bold>4</bold></highlight> is provided and also a second peripheral unit <highlight><bold>5</bold></highlight>, through which data are exchanged with non-illustrated functional units connected off-chip. The microcontroller is employed, for example, in a smart card to communicate with a read device. Each of the units <highlight><bold>3</bold></highlight>, <highlight><bold>4</bold></highlight>, <highlight><bold>5</bold></highlight> connected to the bus has a bus interface <highlight><bold>31</bold></highlight>, <highlight><bold>41</bold></highlight>, and <highlight><bold>51</bold></highlight>, respectively. The bus control unit <highlight><bold>11</bold></highlight> and the interfaces <highlight><bold>31</bold></highlight>, <highlight><bold>41</bold></highlight>, <highlight><bold>51</bold></highlight> cooperate in master-slave dependence. </paragraph>
<paragraph id="P-0025" lvl="0"><number>&lsqb;0025&rsqb;</number> If the bus <highlight><bold>2</bold></highlight> is in the idle state, i.e., none of the connected units <highlight><bold>3</bold></highlight>, <highlight><bold>4</bold></highlight>, <highlight><bold>5</bold></highlight> is activated by the CPU <highlight><bold>1</bold></highlight> for an access, then the bus control unit <highlight><bold>11</bold></highlight> outputs onto the data lines <highlight><bold>22</bold></highlight> a sequence of data values generated in a randomly controlled manner. A random number generator <highlight><bold>12</bold></highlight>, which is connected to the data lines <highlight><bold>22</bold></highlight> of the bus through a multiplexer <highlight><bold>13</bold></highlight>, serves for generating the random data values. If one of the units <highlight><bold>3</bold></highlight>, <highlight><bold>4</bold></highlight>, <highlight><bold>5</bold></highlight> is addressed by the CPU <highlight><bold>1</bold></highlight>, the multiplexer <highlight><bold>13</bold></highlight> changes over to the other terminal <highlight><bold>14</bold></highlight>, which forwards the transmitted or received data to the further functional units of the CPU <highlight><bold>1</bold></highlight>. </paragraph>
<paragraph id="P-0026" lvl="0"><number>&lsqb;0026&rsqb;</number> The bus state signal BS, which is transmitted on the line <highlight><bold>21</bold></highlight>, is illustrated in <cross-reference target="DRAWINGS">FIG. 2</cross-reference> together with the data values B transmitted on the data/address lines <highlight><bold>22</bold></highlight>. The bus is operated clock-cyclically, so that respective signal states are valid for one clock period of the clock signal CLK. The bus state signal BS can assume the state IDLE for the idle state, the state ADR for the transmission of an address, the state WR for a write operation, in which a datum is transmitted from the CPU <highlight><bold>1</bold></highlight> to one of the units <highlight><bold>3</bold></highlight>, <highlight><bold>4</bold></highlight>, <highlight><bold>5</bold></highlight>, and a state RD for a read operation, in which a data value is read from one of the units <highlight><bold>3</bold></highlight>, <highlight><bold>4</bold></highlight>, <highlight><bold>5</bold></highlight> and transmitted to the CPU <highlight><bold>1</bold></highlight>. The bus is controlled such that the state of the signal BS in a first clock cycle specifies the state assumed by the data values of the data/address lines B in the subsequent next clock cycle. This means that the data values transmitted through the address/data lines <highlight><bold>22</bold></highlight> correspond to the state of the bus state signal BS that was transmitted directly one clock cycle previously. </paragraph>
<paragraph id="P-0027" lvl="0"><number>&lsqb;0027&rsqb;</number> The first three clock cycles <highlight><bold>31</bold></highlight> show the signal sequence in the case of a write access to the memory <highlight><bold>3</bold></highlight>. The bus is in the idle state in the first clock cycle, the bus state signal BS assuming the signal value IDLE. In the subsequent operating clock cycle, a data value RNG generated in a randomly controlled manner by the random number generator <highlight><bold>12</bold></highlight> is transmitted through the data/address lines <highlight><bold>22</bold></highlight>. In the subsequent clock cycle, the bus state signal BS, from the bus master <highlight><bold>11</bold></highlight>, is changed over to the state ADR for the address transmission. This means, for the data/address signal line <highlight><bold>22</bold></highlight> of the bus, that a valid address MEM of a memory cell contained in the memory <highlight><bold>3</bold></highlight> is transmitted. Afterward, the bus state signal BS signals a write operation WR. The bus lines <highlight><bold>22</bold></highlight> then carry the data value DATA that is to be stored in the memory <highlight><bold>3</bold></highlight> at the memory cell with the address MEM specified in the clock cycle before. </paragraph>
<paragraph id="P-0028" lvl="0"><number>&lsqb;0028&rsqb;</number> Afterward, the CPU <highlight><bold>1</bold></highlight> does not access any of the units <highlight><bold>3</bold></highlight>, <highlight><bold>4</bold></highlight> or <highlight><bold>5</bold></highlight> for five clock cycles. In this respect, firstly the state IDLE is transmitted for one clock cycle for the bus state signal BS. A random data value RNG is output on the data/address lines <highlight><bold>22</bold></highlight> of the bus in the directly succeeding clock cycle. The bus state signal BS subsequently signals the transmission of an address by the state ADR. A data value NON, which corresponds to none of the addresses in the address space of the units <highlight><bold>3</bold></highlight>, <highlight><bold>4</bold></highlight>, and <highlight><bold>5</bold></highlight>, is then transmitted on the data/address lines <highlight><bold>22</bold></highlight>. The data value NON is generated in a randomly controlled manner in the random number generator <highlight><bold>12</bold></highlight>. From a programming standpoint, this means that a unit is addressed with the address NON, which does not exist in real hardware. The bus state signal BS subsequently assumes the signal states RD, WR, and RD. Random values RNG generated by the random number generator <highlight><bold>12</bold></highlight> are transmitted in the associated clock sections for the address/data signal lines <highlight><bold>22</bold></highlight>. In practice, there may be far more than only the three clock sections shown by way of example with the transmission of random number values on the address/data signal lines. </paragraph>
<paragraph id="P-0029" lvl="0"><number>&lsqb;0029&rsqb;</number> Afterward, the bus state signal BS is again changed over to an idle state IDLE, a random value RNG being transmitted on the address/data lines. Afterward, a write access is made to the peripheral unit <highlight><bold>4</bold></highlight> with the address PI and a read access is made to the peripheral unit <highlight><bold>5</bold></highlight> with the address P<highlight><bold>2</bold></highlight>. </paragraph>
<paragraph id="P-0030" lvl="0"><number>&lsqb;0030&rsqb;</number> In the case of the invention, a random data value is output on the data/address lines <highlight><bold>22</bold></highlight> of the bus <highlight><bold>2</bold></highlight> when the CPU <highlight><bold>1</bold></highlight> requests no access to one of the connected peripheral units <highlight><bold>3</bold></highlight>, <highlight><bold>4</bold></highlight>, or <highlight><bold>5</bold></highlight>. This is the case when the bus state signal BS indicates that an idle state is present (IDLE), or a unit has been addressed that is assigned to none of the connected units, in order subsequently to output onto the bus data values generated in a randomly controlled manner during a bus signal state WR or RD. The current profile of the microcontroller is masked in this way. </paragraph>
</section>
</detailed-description>
</subdoc-description>
<subdoc-claims>
<heading lvl="1">I claim: </heading>
<claim id="CLM-00001">
<claim-text><highlight><bold>1</bold></highlight>. A method for operating a microprocessor configuration, which comprises: 
<claim-text>connecting a first unit through a bus to a second unit, the bus having: 
<claim-text>a line for conveying a state signal specifying an operating state of the bus; and </claim-text>
<claim-text>lines for conveying bus signals specifying at least one data value; </claim-text>
</claim-text>
<claim-text>connecting a bus control unit to the line; </claim-text>
<claim-text>controlling access of the first unit to the second unit through the bus with the bus control unit; and </claim-text>
<claim-text>when the bus control unit communicates through the line that no access is being carried out by the first unit to the second unit, generating a data value under random control and applying the data value to the lines as the bus signals. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00002">
<claim-text><highlight><bold>2</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00001">claim 1</dependent-claim-reference>, which further comprises: 
<claim-text>clock-cyclically generating the state signal and the data value with the bus control unit; and </claim-text>
<claim-text>when it is communicated in a first clock cycle that no access is being carried out by the first unit to the further unit, in a subsequent clock cycle, generating the data value and applying the data value to the lines as the bus signals. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00003">
<claim-text><highlight><bold>3</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00002">claim 2</dependent-claim-reference>, which further comprises. 
<claim-text>assigning a first address to the second unit by which the second unit can be accessed by the first unit; and </claim-text>
<claim-text>in the subsequent clock cycle after the first clock cycle in which there is a communication that no access is being carried out by the first unit to the second unit, applying a second address different from the first address to the lines as the bus signals. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00004">
<claim-text><highlight><bold>4</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00003">claim 3</dependent-claim-reference>, which further comprises executing one of a read access and a write access through the bus in a clock cycle following the subsequent clock cycle. </claim-text>
</claim>
<claim id="CLM-00005">
<claim-text><highlight><bold>5</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00004">claim 4</dependent-claim-reference>, wherein the state signal includes signal states for a read access and a write access; 
<claim-text>and which further comprises: 
<claim-text>applying one of the signal states on the line as the state signal; and </claim-text>
<claim-text>applying a data value generated under random control in an assigned manner to the lines as the bus signals. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006">
<claim-text><highlight><bold>6</bold></highlight>. The method according to <dependent-claim-reference depends_on="CLM-00005">claim 5</dependent-claim-reference>, wherein the bus has a line for an enable signal of the second unit, and which further comprises applying a signal generated under random control to the line for the enable signal when the bus control unit communicates through the line for the state signal that no access is being carried out by the first unit to the second unit. </claim-text>
</claim>
<claim id="CLM-00007">
<claim-text><highlight><bold>7</bold></highlight>. A microprocessor configuration, comprising: 
<claim-text>a first unit; </claim-text>
<claim-text>a second unit; </claim-text>
<claim-text>a bus connecting said first unit to said second unit, said bus having: 
<claim-text>operating states; </claim-text>
<claim-text>a line for conveying a state signal specifying at least one of said operating states; and </claim-text>
<claim-text>lines for conveying bus signals specifying at least one data value; </claim-text>
</claim-text>
<claim-text>a bus control unit adapted to control accesses of said first unit to said second unit through said bus, said bus control unit connected to said line; and </claim-text>
<claim-text>a random number generator connectable to said lines and adapted to supply said bus signals when said state signal indicates no access is to be carried out by said first unit to said second unit. </claim-text>
</claim-text>
</claim>
<claim id="CLM-00008">
<claim-text><highlight><bold>8</bold></highlight>. The microprocessor configuration according to <dependent-claim-reference depends_on="CLM-00007">claim 7</dependent-claim-reference>, wherein: 
<claim-text>a microprocessor includes at least one of said first unit and said second unit; </claim-text>
<claim-text>said first unit is a processing and control unit of said microprocessor; and </claim-text>
<claim-text>said second unit is a unit selected from the group consisting of: 
<claim-text>a peripheral unit of said microprocessor for inputting and outputting signals from and to said microprocessor; and </claim-text>
<claim-text>a memory. </claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009">
<claim-text><highlight><bold>9</bold></highlight>. A microprocessor configuration, comprising: 
<claim-text>a first unit; </claim-text>
<claim-text>a second unit; </claim-text>
<claim-text>a bus connecting said first unit to said second unit, said bus having: 
<claim-text>operating states; </claim-text>
<claim-text>a line for conveying a state signal specifying at least one of said operating states; and </claim-text>
<claim-text>lines for conveying bus signals specifying at least one data value; </claim-text>
</claim-text>
<claim-text>a bus control unit controlling accesses of said first unit to said second unit through said bus, said bus control unit connected to said line; and </claim-text>
<claim-text>a random number generator connected to said lines and supplying said bus signals when said state signal indicates no access is to be carried out by said first unit to said second unit.</claim-text>
</claim-text>
</claim>
</subdoc-claims>
<subdoc-drawings id="DRAWINGS">
<heading lvl="0" align="CENTER">Drawings</heading>
<representative-figure>1</representative-figure>
<figure id="figure-D00000">
<image id="EMI-D00000" file="US20030005206A1-20030102-D00000.TIF" imf="TIFF" ti="DR"/>
</figure>
<figure id="figure-D00001">
<image id="EMI-D00001" file="US20030005206A1-20030102-D00001.TIF" imf="TIFF" ti="DR"/>
</figure>
</subdoc-drawings>
</patent-application-publication>
